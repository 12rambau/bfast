import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzl(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_45075(__global
                                                      unsigned char *mem_45071,
                                                      int32_t num_elems_45072,
                                                      float val_45073)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_45075;
    int32_t replicate_ltid_45076;
    int32_t replicate_gid_45077;
    
    replicate_gtid_45075 = get_global_id(0);
    replicate_ltid_45076 = get_local_id(0);
    replicate_gid_45077 = get_group_id(0);
    if (slt64(replicate_gtid_45075, num_elems_45072)) {
        ((__global float *) mem_45071)[sext_i32_i64(replicate_gtid_45075)] =
            val_45073;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_45084(__global
                                                      unsigned char *mem_45080,
                                                      int32_t num_elems_45081,
                                                      int32_t val_45082)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_45084;
    int32_t replicate_ltid_45085;
    int32_t replicate_gid_45086;
    
    replicate_gtid_45084 = get_global_id(0);
    replicate_ltid_45085 = get_local_id(0);
    replicate_gid_45086 = get_group_id(0);
    if (slt64(replicate_gtid_45084, num_elems_45081)) {
        ((__global int32_t *) mem_45080)[sext_i32_i64(replicate_gtid_45084)] =
            val_45082;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_44772(int64_t m_30804, int64_t nm_30955,
                               int64_t ctx_param_ext_43579,
                               int64_t ctx_param_ext_43580,
                               int64_t ctx_param_ext_43582, __global
                               unsigned char *mem_param_43584, __global
                               unsigned char *mem_43589)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44772;
    int32_t copy_ltid_44773;
    int32_t copy_gid_44774;
    
    copy_gtid_44772 = get_global_id(0);
    copy_ltid_44773 = get_local_id(0);
    copy_gid_44774 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44772), m_30804 * nm_30955)) {
        ((__global float *) mem_43589)[(sext_i32_i64(copy_gtid_44772) -
                                        squot64(sext_i32_i64(copy_gtid_44772),
                                                nm_30955) * nm_30955) *
                                       m_30804 +
                                       squot64(sext_i32_i64(copy_gtid_44772),
                                               nm_30955)] = ((__global
                                                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                                                        (squot64(sext_i32_i64(copy_gtid_44772),
                                                                                                 nm_30955) *
                                                                                         ctx_param_ext_43580 +
                                                                                         (sext_i32_i64(copy_gtid_44772) -
                                                                                          squot64(sext_i32_i64(copy_gtid_44772),
                                                                                                  nm_30955) *
                                                                                          nm_30955) *
                                                                                         ctx_param_ext_43582)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_38882(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45114_backing_aligned_0,
                                      int64_t N_30803, int64_t m_30804,
                                      int64_t N_30805, __global
                                      unsigned char *images_mem_43378, __global
                                      unsigned char *defunc_3_map_res_mem_43905,
                                      __global unsigned char *mem_43934,
                                      __global unsigned char *mem_43937,
                                      int32_t num_threads_45108)
{
    #define segscan_group_sizze_38899 (mainzisegscan_group_sizze_38876)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45114_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45114_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45109;
    int32_t local_tid_45110;
    int64_t group_sizze_45113;
    int32_t wave_sizze_45112;
    int32_t group_tid_45111;
    
    global_tid_45109 = get_global_id(0);
    local_tid_45110 = get_local_id(0);
    group_sizze_45113 = get_local_size(0);
    wave_sizze_45112 = LOCKSTEP_WIDTH;
    group_tid_45111 = get_group_id(0);
    
    int32_t phys_tid_38882;
    
    phys_tid_38882 = global_tid_45109;
    
    __local char *scan_arr_mem_45114;
    
    scan_arr_mem_45114 = (__local char *) scan_arr_mem_45114_backing_0;
    
    int64_t x_38904;
    int64_t x_38905;
    
    x_38904 = 0;
    for (int64_t j_45116 = 0; j_45116 < sdiv_up64(m_30804 * N_30803,
                                                  sext_i32_i64(num_threads_45108));
         j_45116++) {
        int64_t chunk_offset_45117 = segscan_group_sizze_38899 * j_45116 +
                sext_i32_i64(group_tid_45111) * (segscan_group_sizze_38899 *
                                                 sdiv_up64(m_30804 * N_30803,
                                                           sext_i32_i64(num_threads_45108)));
        int64_t flat_idx_45118 = chunk_offset_45117 +
                sext_i32_i64(local_tid_45110);
        int64_t gtid_38873 = squot64(flat_idx_45118, N_30803);
        int64_t gtid_38881 = flat_idx_45118 - squot64(flat_idx_45118, N_30803) *
                N_30803;
        
        // threads in bounds read input
        {
            if (slt64(gtid_38873, m_30804) && slt64(gtid_38881, N_30803)) {
                float x_38909 = ((__global
                                  float *) images_mem_43378)[gtid_38873 *
                                                             N_30805 +
                                                             gtid_38881];
                bool isnan_res_38911;
                
                isnan_res_38911 = futrts_isnan32(x_38909);
                
                bool cond_38912 = !isnan_res_38911;
                float defunc_0_f_res_38913;
                
                if (cond_38912) {
                    float x_38910 = ((__global
                                      float *) defunc_3_map_res_mem_43905)[gtid_38873 *
                                                                           N_30803 +
                                                                           gtid_38881];
                    float defunc_0_f_res_t_res_38914 = x_38909 - x_38910;
                    
                    defunc_0_f_res_38913 = defunc_0_f_res_t_res_38914;
                } else {
                    defunc_0_f_res_38913 = NAN;
                }
                
                bool isnan_res_38915;
                
                isnan_res_38915 = futrts_isnan32(defunc_0_f_res_38913);
                
                bool defunc_0_p_res_38916 = !isnan_res_38915;
                int64_t defunc_0_f_res_38917 =
                        btoi_bool_i64(defunc_0_p_res_38916);
                
                // write to-scan values to parameters
                {
                    x_38905 = defunc_0_f_res_38917;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43937)[gtid_38873 * N_30803 +
                                                   gtid_38881] =
                        defunc_0_f_res_38913;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_38873, m_30804) && slt64(gtid_38881,
                                                          N_30803))) {
                    x_38905 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_38906 = add64(x_38904, x_38905);
                
                ((__local
                  int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)] =
                    defunc_1_op_res_38906;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45119;
            int64_t x_45120;
            int64_t x_45122;
            int64_t x_45123;
            bool ltid_in_bounds_45125;
            
            ltid_in_bounds_45125 = slt64(sext_i32_i64(local_tid_45110),
                                         segscan_group_sizze_38899);
            
            int32_t skip_threads_45126;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45125) {
                    x_45120 = ((volatile __local
                                int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)];
                    if ((local_tid_45110 - squot32(local_tid_45110, 32) * 32) ==
                        0) {
                        x_45119 = x_45120;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45126 = 1;
                while (slt32(skip_threads_45126, 32)) {
                    if (sle32(skip_threads_45126, local_tid_45110 -
                              squot32(local_tid_45110, 32) * 32) &&
                        ltid_in_bounds_45125) {
                        // read operands
                        {
                            x_45119 = ((volatile __local
                                        int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110) -
                                                                       sext_i32_i64(skip_threads_45126)];
                        }
                        // perform operation
                        {
                            bool inactive_45127 =
                                 slt64(srem64(sext_i32_i64(local_tid_45110) +
                                              chunk_offset_45117, N_30803),
                                       sext_i32_i64(local_tid_45110) +
                                       chunk_offset_45117 -
                                       (sext_i32_i64(local_tid_45110 -
                                        skip_threads_45126) +
                                        chunk_offset_45117));
                            
                            if (inactive_45127) {
                                x_45119 = x_45120;
                            }
                            if (!inactive_45127) {
                                int64_t defunc_1_op_res_45121 = add64(x_45119,
                                                                      x_45120);
                                
                                x_45119 = defunc_1_op_res_45121;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45112, skip_threads_45126)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45126, local_tid_45110 -
                              squot32(local_tid_45110, 32) * 32) &&
                        ltid_in_bounds_45125) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)] =
                                x_45119;
                            x_45120 = x_45119;
                        }
                    }
                    if (sle32(wave_sizze_45112, skip_threads_45126)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45126 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45110 - squot32(local_tid_45110, 32) * 32) ==
                    31 && ltid_in_bounds_45125) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45114)[sext_i32_i64(squot32(local_tid_45110,
                                                                          32))] =
                        x_45119;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45128;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45110, 32) == 0 &&
                        ltid_in_bounds_45125) {
                        x_45123 = ((volatile __local
                                    int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)];
                        if ((local_tid_45110 - squot32(local_tid_45110, 32) *
                             32) == 0) {
                            x_45122 = x_45123;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45128 = 1;
                    while (slt32(skip_threads_45128, 32)) {
                        if (sle32(skip_threads_45128, local_tid_45110 -
                                  squot32(local_tid_45110, 32) * 32) &&
                            (squot32(local_tid_45110, 32) == 0 &&
                             ltid_in_bounds_45125)) {
                            // read operands
                            {
                                x_45122 = ((volatile __local
                                            int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110) -
                                                                           sext_i32_i64(skip_threads_45128)];
                            }
                            // perform operation
                            {
                                bool inactive_45129 =
                                     slt64(srem64(sext_i32_i64(local_tid_45110 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45117, N_30803),
                                           sext_i32_i64(local_tid_45110 * 32 +
                                           32 - 1) + chunk_offset_45117 -
                                           (sext_i32_i64((local_tid_45110 -
                                                          skip_threads_45128) *
                                            32 + 32 - 1) + chunk_offset_45117));
                                
                                if (inactive_45129) {
                                    x_45122 = x_45123;
                                }
                                if (!inactive_45129) {
                                    int64_t defunc_1_op_res_45124 =
                                            add64(x_45122, x_45123);
                                    
                                    x_45122 = defunc_1_op_res_45124;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45112, skip_threads_45128)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45128, local_tid_45110 -
                                  squot32(local_tid_45110, 32) * 32) &&
                            (squot32(local_tid_45110, 32) == 0 &&
                             ltid_in_bounds_45125)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)] =
                                    x_45122;
                                x_45123 = x_45122;
                            }
                        }
                        if (sle32(wave_sizze_45112, skip_threads_45128)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45128 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45110, 32) == 0 ||
                      !ltid_in_bounds_45125)) {
                    // read operands
                    {
                        x_45120 = x_45119;
                        x_45119 = ((__local
                                    int64_t *) scan_arr_mem_45114)[sext_i32_i64(squot32(local_tid_45110,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45130 =
                             slt64(srem64(sext_i32_i64(local_tid_45110) +
                                          chunk_offset_45117, N_30803),
                                   sext_i32_i64(local_tid_45110) +
                                   chunk_offset_45117 -
                                   (sext_i32_i64(squot32(local_tid_45110, 32) *
                                    32 - 1) + chunk_offset_45117));
                        
                        if (inactive_45130) {
                            x_45119 = x_45120;
                        }
                        if (!inactive_45130) {
                            int64_t defunc_1_op_res_45121 = add64(x_45119,
                                                                  x_45120);
                            
                            x_45119 = defunc_1_op_res_45121;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)] =
                            x_45119;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45110, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)] =
                        x_45120;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_38873, m_30804) && slt64(gtid_38881, N_30803)) {
                    ((__global int64_t *) mem_43934)[gtid_38873 * N_30803 +
                                                     gtid_38881] = ((__local
                                                                     int64_t *) scan_arr_mem_45114)[sext_i32_i64(local_tid_45110)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45131 = slt64(srem64(chunk_offset_45117 +
                                                          segscan_group_sizze_38899,
                                                          N_30803),
                                                   chunk_offset_45117 +
                                                   segscan_group_sizze_38899 -
                                                   (chunk_offset_45117 +
                                                    segscan_group_sizze_38899 -
                                                    1));
                bool should_load_carry_45132 = local_tid_45110 == 0 &&
                     !crosses_segment_45131;
                
                if (should_load_carry_45132) {
                    x_38904 = ((__local
                                int64_t *) scan_arr_mem_45114)[segscan_group_sizze_38899 -
                                                               1];
                }
                if (!should_load_carry_45132) {
                    x_38904 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_38899
}
__kernel void mainziscan_stage1_40568(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45732_backing_aligned_0,
                                      __local volatile
                                      int64_t *scan_arr_mem_45730_backing_aligned_1,
                                      __local volatile
                                      int64_t *scan_arr_mem_45728_backing_aligned_2,
                                      __local volatile
                                      int64_t *scan_arr_mem_45726_backing_aligned_3,
                                      int64_t m_30804, int64_t iota32_arg_31190,
                                      int32_t defunc_2_radix_sort_step_arg_41134,
                                      int32_t defunc_0_get_bit_arg_41135,
                                      unsigned char cond_f_res_41136,
                                      unsigned char cond_f_res_41137, __global
                                      unsigned char *mem_param_44270, __global
                                      unsigned char *mem_44297, __global
                                      unsigned char *mem_44300, __global
                                      unsigned char *mem_44303, __global
                                      unsigned char *mem_44306, __global
                                      unsigned char *mem_44309,
                                      int32_t num_threads_45720)
{
    #define segscan_group_sizze_41229 (mainzisegscan_group_sizze_40562)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45732_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_45732_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_45730_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_45730_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_45728_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_45728_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_45726_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45726_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45721;
    int32_t local_tid_45722;
    int64_t group_sizze_45725;
    int32_t wave_sizze_45724;
    int32_t group_tid_45723;
    
    global_tid_45721 = get_global_id(0);
    local_tid_45722 = get_local_id(0);
    group_sizze_45725 = get_local_size(0);
    wave_sizze_45724 = LOCKSTEP_WIDTH;
    group_tid_45723 = get_group_id(0);
    
    int32_t phys_tid_40568;
    
    phys_tid_40568 = global_tid_45721;
    
    __local char *scan_arr_mem_45726;
    __local char *scan_arr_mem_45728;
    __local char *scan_arr_mem_45730;
    __local char *scan_arr_mem_45732;
    
    scan_arr_mem_45726 = (__local char *) scan_arr_mem_45726_backing_0;
    scan_arr_mem_45728 = (__local char *) scan_arr_mem_45728_backing_1;
    scan_arr_mem_45730 = (__local char *) scan_arr_mem_45730_backing_2;
    scan_arr_mem_45732 = (__local char *) scan_arr_mem_45732_backing_3;
    
    int64_t x_41237;
    int64_t x_41238;
    int64_t x_41239;
    int64_t x_41240;
    int64_t x_41241;
    int64_t x_41242;
    int64_t x_41243;
    int64_t x_41244;
    
    x_41237 = 0;
    x_41238 = 0;
    x_41239 = 0;
    x_41240 = 0;
    for (int64_t j_45734 = 0; j_45734 < sdiv_up64(m_30804 * iota32_arg_31190,
                                                  sext_i32_i64(num_threads_45720));
         j_45734++) {
        int64_t chunk_offset_45735 = segscan_group_sizze_41229 * j_45734 +
                sext_i32_i64(group_tid_45723) * (segscan_group_sizze_41229 *
                                                 sdiv_up64(m_30804 *
                                                           iota32_arg_31190,
                                                           sext_i32_i64(num_threads_45720)));
        int64_t flat_idx_45736 = chunk_offset_45735 +
                sext_i32_i64(local_tid_45722);
        int64_t gtid_40559 = squot64(flat_idx_45736, iota32_arg_31190);
        int64_t gtid_40567 = flat_idx_45736 - squot64(flat_idx_45736,
                                                      iota32_arg_31190) *
                iota32_arg_31190;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40559, m_30804) && slt64(gtid_40567,
                                                    iota32_arg_31190)) {
                float x_41250 = ((__global
                                  float *) mem_param_44270)[gtid_40559 *
                                                            iota32_arg_31190 +
                                                            gtid_40567];
                int32_t i32_arg_41251;
                
                i32_arg_41251 = futrts_to_bits32(x_41250);
                
                int32_t unsign_arg_41252 = ashr32(i32_arg_41251,
                                                  defunc_0_get_bit_arg_41135);
                int32_t unsign_arg_41253 = 1 & unsign_arg_41252;
                int32_t unsign_arg_41254 = ashr32(i32_arg_41251, 31);
                int32_t unsign_arg_41255 = 1 & unsign_arg_41254;
                bool cond_41256 = unsign_arg_41255 == 1;
                bool x_41257 = !cond_41256;
                bool y_41258 = cond_f_res_41136 && x_41257;
                bool cond_41259 = cond_41256 || y_41258;
                int32_t defunc_1_get_bit_res_41260;
                
                if (cond_41259) {
                    int32_t defunc_1_get_bit_res_t_res_41261 = 1 ^
                            unsign_arg_41253;
                    
                    defunc_1_get_bit_res_41260 =
                        defunc_1_get_bit_res_t_res_41261;
                } else {
                    defunc_1_get_bit_res_41260 = unsign_arg_41253;
                }
                
                int32_t x_41262 = mul32(2, defunc_1_get_bit_res_41260);
                int32_t unsign_arg_41263 = ashr32(i32_arg_41251,
                                                  defunc_2_radix_sort_step_arg_41134);
                int32_t unsign_arg_41264 = 1 & unsign_arg_41263;
                bool y_41265 = cond_f_res_41137 && x_41257;
                bool cond_41266 = cond_41256 || y_41265;
                int32_t defunc_1_get_bit_res_41267;
                
                if (cond_41266) {
                    int32_t defunc_1_get_bit_res_t_res_41268 = 1 ^
                            unsign_arg_41264;
                    
                    defunc_1_get_bit_res_41267 =
                        defunc_1_get_bit_res_t_res_41268;
                } else {
                    defunc_1_get_bit_res_41267 = unsign_arg_41264;
                }
                
                int32_t defunc_0_f_res_41269 = add32(x_41262,
                                                     defunc_1_get_bit_res_41267);
                bool cond_41270 = defunc_0_f_res_41269 == 0;
                int64_t defunc_0_f_res_41271 = btoi_bool_i64(cond_41270);
                int64_t defunc_0_f_res_41272;
                int64_t defunc_0_f_res_41273;
                int64_t defunc_0_f_res_41274;
                
                if (cond_41270) {
                    defunc_0_f_res_41272 = 0;
                    defunc_0_f_res_41273 = 0;
                    defunc_0_f_res_41274 = 0;
                } else {
                    bool cond_41275 = defunc_0_f_res_41269 == 1;
                    int64_t defunc_0_f_res_f_res_41276 =
                            btoi_bool_i64(cond_41275);
                    int64_t defunc_0_f_res_f_res_41277;
                    int64_t defunc_0_f_res_f_res_41278;
                    
                    if (cond_41275) {
                        defunc_0_f_res_f_res_41277 = 0;
                        defunc_0_f_res_f_res_41278 = 0;
                    } else {
                        bool cond_41279 = defunc_0_f_res_41269 == 2;
                        int64_t defunc_0_f_res_f_res_f_res_41280 =
                                btoi_bool_i64(cond_41279);
                        bool cond_neg_41281 = !cond_41279;
                        int64_t defunc_0_f_res_f_res_f_res_41282 =
                                btoi_bool_i64(cond_neg_41281);
                        
                        defunc_0_f_res_f_res_41277 =
                            defunc_0_f_res_f_res_f_res_41280;
                        defunc_0_f_res_f_res_41278 =
                            defunc_0_f_res_f_res_f_res_41282;
                    }
                    defunc_0_f_res_41272 = defunc_0_f_res_f_res_41276;
                    defunc_0_f_res_41273 = defunc_0_f_res_f_res_41277;
                    defunc_0_f_res_41274 = defunc_0_f_res_f_res_41278;
                }
                // write to-scan values to parameters
                {
                    x_41241 = defunc_0_f_res_41271;
                    x_41242 = defunc_0_f_res_41272;
                    x_41243 = defunc_0_f_res_41273;
                    x_41244 = defunc_0_f_res_41274;
                }
                // write mapped values results to global memory
                {
                    ((__global int32_t *) mem_44309)[gtid_40559 *
                                                     iota32_arg_31190 +
                                                     gtid_40567] =
                        defunc_0_f_res_41269;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40559, m_30804) && slt64(gtid_40567,
                                                          iota32_arg_31190))) {
                    x_41241 = 0;
                    x_41242 = 0;
                    x_41243 = 0;
                    x_41244 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_41245 = add64(x_41237, x_41241);
                int64_t defunc_1_op_res_41246 = add64(x_41238, x_41242);
                int64_t defunc_1_op_res_41247 = add64(x_41239, x_41243);
                int64_t defunc_1_op_res_41248 = add64(x_41240, x_41244);
                
                ((__local
                  int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                    defunc_1_op_res_41245;
                ((__local
                  int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                    defunc_1_op_res_41246;
                ((__local
                  int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                    defunc_1_op_res_41247;
                ((__local
                  int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)] =
                    defunc_1_op_res_41248;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45737;
            int64_t x_45738;
            int64_t x_45739;
            int64_t x_45740;
            int64_t x_45741;
            int64_t x_45742;
            int64_t x_45743;
            int64_t x_45744;
            int64_t x_45749;
            int64_t x_45750;
            int64_t x_45751;
            int64_t x_45752;
            int64_t x_45753;
            int64_t x_45754;
            int64_t x_45755;
            int64_t x_45756;
            bool ltid_in_bounds_45761;
            
            ltid_in_bounds_45761 = slt64(sext_i32_i64(local_tid_45722),
                                         segscan_group_sizze_41229);
            
            int32_t skip_threads_45762;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45761) {
                    x_45741 = ((volatile __local
                                int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)];
                    x_45742 = ((volatile __local
                                int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)];
                    x_45743 = ((volatile __local
                                int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)];
                    x_45744 = ((volatile __local
                                int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)];
                    if ((local_tid_45722 - squot32(local_tid_45722, 32) * 32) ==
                        0) {
                        x_45737 = x_45741;
                        x_45738 = x_45742;
                        x_45739 = x_45743;
                        x_45740 = x_45744;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45762 = 1;
                while (slt32(skip_threads_45762, 32)) {
                    if (sle32(skip_threads_45762, local_tid_45722 -
                              squot32(local_tid_45722, 32) * 32) &&
                        ltid_in_bounds_45761) {
                        // read operands
                        {
                            x_45737 = ((volatile __local
                                        int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722) -
                                                                       sext_i32_i64(skip_threads_45762)];
                            x_45738 = ((volatile __local
                                        int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722) -
                                                                       sext_i32_i64(skip_threads_45762)];
                            x_45739 = ((volatile __local
                                        int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722) -
                                                                       sext_i32_i64(skip_threads_45762)];
                            x_45740 = ((volatile __local
                                        int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722) -
                                                                       sext_i32_i64(skip_threads_45762)];
                        }
                        // perform operation
                        {
                            bool inactive_45763 =
                                 slt64(srem64(sext_i32_i64(local_tid_45722) +
                                              chunk_offset_45735,
                                              iota32_arg_31190),
                                       sext_i32_i64(local_tid_45722) +
                                       chunk_offset_45735 -
                                       (sext_i32_i64(local_tid_45722 -
                                        skip_threads_45762) +
                                        chunk_offset_45735));
                            
                            if (inactive_45763) {
                                x_45737 = x_45741;
                                x_45738 = x_45742;
                                x_45739 = x_45743;
                                x_45740 = x_45744;
                            }
                            if (!inactive_45763) {
                                int64_t defunc_1_op_res_45745 = add64(x_45737,
                                                                      x_45741);
                                int64_t defunc_1_op_res_45746 = add64(x_45738,
                                                                      x_45742);
                                int64_t defunc_1_op_res_45747 = add64(x_45739,
                                                                      x_45743);
                                int64_t defunc_1_op_res_45748 = add64(x_45740,
                                                                      x_45744);
                                
                                x_45737 = defunc_1_op_res_45745;
                                x_45738 = defunc_1_op_res_45746;
                                x_45739 = defunc_1_op_res_45747;
                                x_45740 = defunc_1_op_res_45748;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45724, skip_threads_45762)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45762, local_tid_45722 -
                              squot32(local_tid_45722, 32) * 32) &&
                        ltid_in_bounds_45761) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                                x_45737;
                            x_45741 = x_45737;
                            ((volatile __local
                              int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                                x_45738;
                            x_45742 = x_45738;
                            ((volatile __local
                              int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                                x_45739;
                            x_45743 = x_45739;
                            ((volatile __local
                              int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)] =
                                x_45740;
                            x_45744 = x_45740;
                        }
                    }
                    if (sle32(wave_sizze_45724, skip_threads_45762)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45762 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45722 - squot32(local_tid_45722, 32) * 32) ==
                    31 && ltid_in_bounds_45761) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45726)[sext_i32_i64(squot32(local_tid_45722,
                                                                          32))] =
                        x_45737;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45728)[sext_i32_i64(squot32(local_tid_45722,
                                                                          32))] =
                        x_45738;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45730)[sext_i32_i64(squot32(local_tid_45722,
                                                                          32))] =
                        x_45739;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45732)[sext_i32_i64(squot32(local_tid_45722,
                                                                          32))] =
                        x_45740;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45764;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45722, 32) == 0 &&
                        ltid_in_bounds_45761) {
                        x_45753 = ((volatile __local
                                    int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)];
                        x_45754 = ((volatile __local
                                    int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)];
                        x_45755 = ((volatile __local
                                    int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)];
                        x_45756 = ((volatile __local
                                    int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)];
                        if ((local_tid_45722 - squot32(local_tid_45722, 32) *
                             32) == 0) {
                            x_45749 = x_45753;
                            x_45750 = x_45754;
                            x_45751 = x_45755;
                            x_45752 = x_45756;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45764 = 1;
                    while (slt32(skip_threads_45764, 32)) {
                        if (sle32(skip_threads_45764, local_tid_45722 -
                                  squot32(local_tid_45722, 32) * 32) &&
                            (squot32(local_tid_45722, 32) == 0 &&
                             ltid_in_bounds_45761)) {
                            // read operands
                            {
                                x_45749 = ((volatile __local
                                            int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722) -
                                                                           sext_i32_i64(skip_threads_45764)];
                                x_45750 = ((volatile __local
                                            int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722) -
                                                                           sext_i32_i64(skip_threads_45764)];
                                x_45751 = ((volatile __local
                                            int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722) -
                                                                           sext_i32_i64(skip_threads_45764)];
                                x_45752 = ((volatile __local
                                            int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722) -
                                                                           sext_i32_i64(skip_threads_45764)];
                            }
                            // perform operation
                            {
                                bool inactive_45765 =
                                     slt64(srem64(sext_i32_i64(local_tid_45722 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45735,
                                                  iota32_arg_31190),
                                           sext_i32_i64(local_tid_45722 * 32 +
                                           32 - 1) + chunk_offset_45735 -
                                           (sext_i32_i64((local_tid_45722 -
                                                          skip_threads_45764) *
                                            32 + 32 - 1) + chunk_offset_45735));
                                
                                if (inactive_45765) {
                                    x_45749 = x_45753;
                                    x_45750 = x_45754;
                                    x_45751 = x_45755;
                                    x_45752 = x_45756;
                                }
                                if (!inactive_45765) {
                                    int64_t defunc_1_op_res_45757 =
                                            add64(x_45749, x_45753);
                                    int64_t defunc_1_op_res_45758 =
                                            add64(x_45750, x_45754);
                                    int64_t defunc_1_op_res_45759 =
                                            add64(x_45751, x_45755);
                                    int64_t defunc_1_op_res_45760 =
                                            add64(x_45752, x_45756);
                                    
                                    x_45749 = defunc_1_op_res_45757;
                                    x_45750 = defunc_1_op_res_45758;
                                    x_45751 = defunc_1_op_res_45759;
                                    x_45752 = defunc_1_op_res_45760;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45724, skip_threads_45764)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45764, local_tid_45722 -
                                  squot32(local_tid_45722, 32) * 32) &&
                            (squot32(local_tid_45722, 32) == 0 &&
                             ltid_in_bounds_45761)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                                    x_45749;
                                x_45753 = x_45749;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                                    x_45750;
                                x_45754 = x_45750;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                                    x_45751;
                                x_45755 = x_45751;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)] =
                                    x_45752;
                                x_45756 = x_45752;
                            }
                        }
                        if (sle32(wave_sizze_45724, skip_threads_45764)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45764 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45722, 32) == 0 ||
                      !ltid_in_bounds_45761)) {
                    // read operands
                    {
                        x_45741 = x_45737;
                        x_45742 = x_45738;
                        x_45743 = x_45739;
                        x_45744 = x_45740;
                        x_45737 = ((__local
                                    int64_t *) scan_arr_mem_45726)[sext_i32_i64(squot32(local_tid_45722,
                                                                                        32)) -
                                                                   1];
                        x_45738 = ((__local
                                    int64_t *) scan_arr_mem_45728)[sext_i32_i64(squot32(local_tid_45722,
                                                                                        32)) -
                                                                   1];
                        x_45739 = ((__local
                                    int64_t *) scan_arr_mem_45730)[sext_i32_i64(squot32(local_tid_45722,
                                                                                        32)) -
                                                                   1];
                        x_45740 = ((__local
                                    int64_t *) scan_arr_mem_45732)[sext_i32_i64(squot32(local_tid_45722,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45766 =
                             slt64(srem64(sext_i32_i64(local_tid_45722) +
                                          chunk_offset_45735, iota32_arg_31190),
                                   sext_i32_i64(local_tid_45722) +
                                   chunk_offset_45735 -
                                   (sext_i32_i64(squot32(local_tid_45722, 32) *
                                    32 - 1) + chunk_offset_45735));
                        
                        if (inactive_45766) {
                            x_45737 = x_45741;
                            x_45738 = x_45742;
                            x_45739 = x_45743;
                            x_45740 = x_45744;
                        }
                        if (!inactive_45766) {
                            int64_t defunc_1_op_res_45745 = add64(x_45737,
                                                                  x_45741);
                            int64_t defunc_1_op_res_45746 = add64(x_45738,
                                                                  x_45742);
                            int64_t defunc_1_op_res_45747 = add64(x_45739,
                                                                  x_45743);
                            int64_t defunc_1_op_res_45748 = add64(x_45740,
                                                                  x_45744);
                            
                            x_45737 = defunc_1_op_res_45745;
                            x_45738 = defunc_1_op_res_45746;
                            x_45739 = defunc_1_op_res_45747;
                            x_45740 = defunc_1_op_res_45748;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                            x_45737;
                        ((__local
                          int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                            x_45738;
                        ((__local
                          int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                            x_45739;
                        ((__local
                          int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)] =
                            x_45740;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45722, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                        x_45741;
                    ((__local
                      int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                        x_45742;
                    ((__local
                      int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                        x_45743;
                    ((__local
                      int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)] =
                        x_45744;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40559, m_30804) && slt64(gtid_40567,
                                                        iota32_arg_31190)) {
                    ((__global int64_t *) mem_44297)[gtid_40559 *
                                                     iota32_arg_31190 +
                                                     gtid_40567] = ((__local
                                                                     int64_t *) scan_arr_mem_45726)[sext_i32_i64(local_tid_45722)];
                    ((__global int64_t *) mem_44300)[gtid_40559 *
                                                     iota32_arg_31190 +
                                                     gtid_40567] = ((__local
                                                                     int64_t *) scan_arr_mem_45728)[sext_i32_i64(local_tid_45722)];
                    ((__global int64_t *) mem_44303)[gtid_40559 *
                                                     iota32_arg_31190 +
                                                     gtid_40567] = ((__local
                                                                     int64_t *) scan_arr_mem_45730)[sext_i32_i64(local_tid_45722)];
                    ((__global int64_t *) mem_44306)[gtid_40559 *
                                                     iota32_arg_31190 +
                                                     gtid_40567] = ((__local
                                                                     int64_t *) scan_arr_mem_45732)[sext_i32_i64(local_tid_45722)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45767 = slt64(srem64(chunk_offset_45735 +
                                                          segscan_group_sizze_41229,
                                                          iota32_arg_31190),
                                                   chunk_offset_45735 +
                                                   segscan_group_sizze_41229 -
                                                   (chunk_offset_45735 +
                                                    segscan_group_sizze_41229 -
                                                    1));
                bool should_load_carry_45768 = local_tid_45722 == 0 &&
                     !crosses_segment_45767;
                
                if (should_load_carry_45768) {
                    x_41237 = ((__local
                                int64_t *) scan_arr_mem_45726)[segscan_group_sizze_41229 -
                                                               1];
                    x_41238 = ((__local
                                int64_t *) scan_arr_mem_45728)[segscan_group_sizze_41229 -
                                                               1];
                    x_41239 = ((__local
                                int64_t *) scan_arr_mem_45730)[segscan_group_sizze_41229 -
                                                               1];
                    x_41240 = ((__local
                                int64_t *) scan_arr_mem_45732)[segscan_group_sizze_41229 -
                                                               1];
                }
                if (!should_load_carry_45768) {
                    x_41237 = 0;
                    x_41238 = 0;
                    x_41239 = 0;
                    x_41240 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_41229
}
__kernel void mainziscan_stage1_40914(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45531_backing_aligned_0,
                                      int64_t N_30803, int64_t m_30804,
                                      int64_t iota32_arg_31190, __global
                                      unsigned char *defunc_4_map_res_mem_43943,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_44022,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_44023,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_44073,
                                      __global unsigned char *mem_44240,
                                      __global unsigned char *mem_44244,
                                      int32_t num_threads_45525)
{
    #define segscan_group_sizze_40992 (mainzisegscan_group_sizze_40908)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45531_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45531_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45526;
    int32_t local_tid_45527;
    int64_t group_sizze_45530;
    int32_t wave_sizze_45529;
    int32_t group_tid_45528;
    
    global_tid_45526 = get_global_id(0);
    local_tid_45527 = get_local_id(0);
    group_sizze_45530 = get_local_size(0);
    wave_sizze_45529 = LOCKSTEP_WIDTH;
    group_tid_45528 = get_group_id(0);
    
    int32_t phys_tid_40914;
    
    phys_tid_40914 = global_tid_45526;
    
    __local char *scan_arr_mem_45531;
    
    scan_arr_mem_45531 = (__local char *) scan_arr_mem_45531_backing_0;
    
    float x_40996;
    float x_40997;
    
    x_40996 = 0.0F;
    for (int64_t j_45533 = 0; j_45533 < sdiv_up64(m_30804 * iota32_arg_31190,
                                                  sext_i32_i64(num_threads_45525));
         j_45533++) {
        int64_t chunk_offset_45534 = segscan_group_sizze_40992 * j_45533 +
                sext_i32_i64(group_tid_45528) * (segscan_group_sizze_40992 *
                                                 sdiv_up64(m_30804 *
                                                           iota32_arg_31190,
                                                           sext_i32_i64(num_threads_45525)));
        int64_t flat_idx_45535 = chunk_offset_45534 +
                sext_i32_i64(local_tid_45527);
        int64_t gtid_40905 = squot64(flat_idx_45535, iota32_arg_31190);
        int64_t gtid_40913 = flat_idx_45535 - squot64(flat_idx_45535,
                                                      iota32_arg_31190) *
                iota32_arg_31190;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40905, m_30804) && slt64(gtid_40913,
                                                    iota32_arg_31190)) {
                int32_t y_41003 = ((__global int32_t *) mem_44240)[gtid_40905];
                int32_t index_primexp_41475 = sext_i64_i32(gtid_40913);
                bool cond_41006 = sle32(y_41003, index_primexp_41475);
                float defunc_0_f_res_41007;
                
                if (cond_41006) {
                    defunc_0_f_res_41007 = 0.0F;
                } else {
                    int32_t x_40999 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44023)[gtid_40905];
                    int32_t x_41000 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44022)[gtid_40905];
                    float x_41001 = ((__global
                                      float *) defunc_0_f_res_mem_44073)[gtid_40905];
                    bool cond_41008 = index_primexp_41475 == 0;
                    float defunc_0_f_res_f_res_41009;
                    
                    if (cond_41008) {
                        defunc_0_f_res_f_res_41009 = x_41001;
                    } else {
                        int32_t i_41010 = add32(x_40999, index_primexp_41475);
                        int64_t i_41011 = sext_i32_i64(i_41010);
                        float x_41012 = ((__global
                                          float *) defunc_4_map_res_mem_43943)[gtid_40905 *
                                                                               N_30803 +
                                                                               i_41011];
                        int32_t x_41013 = sub32(x_40999, x_41000);
                        int32_t i_41014 = add32(x_41013, index_primexp_41475);
                        int64_t i_41015 = sext_i32_i64(i_41014);
                        float y_41016 = ((__global
                                          float *) defunc_4_map_res_mem_43943)[gtid_40905 *
                                                                               N_30803 +
                                                                               i_41015];
                        float defunc_0_f_res_f_res_f_res_41017 = x_41012 -
                              y_41016;
                        
                        defunc_0_f_res_f_res_41009 =
                            defunc_0_f_res_f_res_f_res_41017;
                    }
                    defunc_0_f_res_41007 = defunc_0_f_res_f_res_41009;
                }
                // write to-scan values to parameters
                {
                    x_40997 = defunc_0_f_res_41007;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40905, m_30804) && slt64(gtid_40913,
                                                          iota32_arg_31190))) {
                    x_40997 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_40998 = x_40996 + x_40997;
                
                ((__local
                  float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)] =
                    defunc_1_op_res_40998;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45536;
            float x_45537;
            float x_45539;
            float x_45540;
            bool ltid_in_bounds_45542;
            
            ltid_in_bounds_45542 = slt64(sext_i32_i64(local_tid_45527),
                                         segscan_group_sizze_40992);
            
            int32_t skip_threads_45543;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45542) {
                    x_45537 = ((volatile __local
                                float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)];
                    if ((local_tid_45527 - squot32(local_tid_45527, 32) * 32) ==
                        0) {
                        x_45536 = x_45537;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45543 = 1;
                while (slt32(skip_threads_45543, 32)) {
                    if (sle32(skip_threads_45543, local_tid_45527 -
                              squot32(local_tid_45527, 32) * 32) &&
                        ltid_in_bounds_45542) {
                        // read operands
                        {
                            x_45536 = ((volatile __local
                                        float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527) -
                                                                     sext_i32_i64(skip_threads_45543)];
                        }
                        // perform operation
                        {
                            bool inactive_45544 =
                                 slt64(srem64(sext_i32_i64(local_tid_45527) +
                                              chunk_offset_45534,
                                              iota32_arg_31190),
                                       sext_i32_i64(local_tid_45527) +
                                       chunk_offset_45534 -
                                       (sext_i32_i64(local_tid_45527 -
                                        skip_threads_45543) +
                                        chunk_offset_45534));
                            
                            if (inactive_45544) {
                                x_45536 = x_45537;
                            }
                            if (!inactive_45544) {
                                float defunc_1_op_res_45538 = x_45536 + x_45537;
                                
                                x_45536 = defunc_1_op_res_45538;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45529, skip_threads_45543)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45543, local_tid_45527 -
                              squot32(local_tid_45527, 32) * 32) &&
                        ltid_in_bounds_45542) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)] =
                                x_45536;
                            x_45537 = x_45536;
                        }
                    }
                    if (sle32(wave_sizze_45529, skip_threads_45543)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45543 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45527 - squot32(local_tid_45527, 32) * 32) ==
                    31 && ltid_in_bounds_45542) {
                    ((volatile __local
                      float *) scan_arr_mem_45531)[sext_i32_i64(squot32(local_tid_45527,
                                                                        32))] =
                        x_45536;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45545;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45527, 32) == 0 &&
                        ltid_in_bounds_45542) {
                        x_45540 = ((volatile __local
                                    float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)];
                        if ((local_tid_45527 - squot32(local_tid_45527, 32) *
                             32) == 0) {
                            x_45539 = x_45540;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45545 = 1;
                    while (slt32(skip_threads_45545, 32)) {
                        if (sle32(skip_threads_45545, local_tid_45527 -
                                  squot32(local_tid_45527, 32) * 32) &&
                            (squot32(local_tid_45527, 32) == 0 &&
                             ltid_in_bounds_45542)) {
                            // read operands
                            {
                                x_45539 = ((volatile __local
                                            float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527) -
                                                                         sext_i32_i64(skip_threads_45545)];
                            }
                            // perform operation
                            {
                                bool inactive_45546 =
                                     slt64(srem64(sext_i32_i64(local_tid_45527 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45534,
                                                  iota32_arg_31190),
                                           sext_i32_i64(local_tid_45527 * 32 +
                                           32 - 1) + chunk_offset_45534 -
                                           (sext_i32_i64((local_tid_45527 -
                                                          skip_threads_45545) *
                                            32 + 32 - 1) + chunk_offset_45534));
                                
                                if (inactive_45546) {
                                    x_45539 = x_45540;
                                }
                                if (!inactive_45546) {
                                    float defunc_1_op_res_45541 = x_45539 +
                                          x_45540;
                                    
                                    x_45539 = defunc_1_op_res_45541;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45529, skip_threads_45545)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45545, local_tid_45527 -
                                  squot32(local_tid_45527, 32) * 32) &&
                            (squot32(local_tid_45527, 32) == 0 &&
                             ltid_in_bounds_45542)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)] =
                                    x_45539;
                                x_45540 = x_45539;
                            }
                        }
                        if (sle32(wave_sizze_45529, skip_threads_45545)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45545 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45527, 32) == 0 ||
                      !ltid_in_bounds_45542)) {
                    // read operands
                    {
                        x_45537 = x_45536;
                        x_45536 = ((__local
                                    float *) scan_arr_mem_45531)[sext_i32_i64(squot32(local_tid_45527,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45547 =
                             slt64(srem64(sext_i32_i64(local_tid_45527) +
                                          chunk_offset_45534, iota32_arg_31190),
                                   sext_i32_i64(local_tid_45527) +
                                   chunk_offset_45534 -
                                   (sext_i32_i64(squot32(local_tid_45527, 32) *
                                    32 - 1) + chunk_offset_45534));
                        
                        if (inactive_45547) {
                            x_45536 = x_45537;
                        }
                        if (!inactive_45547) {
                            float defunc_1_op_res_45538 = x_45536 + x_45537;
                            
                            x_45536 = defunc_1_op_res_45538;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)] =
                            x_45536;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45527, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)] =
                        x_45537;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40905, m_30804) && slt64(gtid_40913,
                                                        iota32_arg_31190)) {
                    ((__global float *) mem_44244)[gtid_40905 *
                                                   iota32_arg_31190 +
                                                   gtid_40913] = ((__local
                                                                   float *) scan_arr_mem_45531)[sext_i32_i64(local_tid_45527)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45548 = slt64(srem64(chunk_offset_45534 +
                                                          segscan_group_sizze_40992,
                                                          iota32_arg_31190),
                                                   chunk_offset_45534 +
                                                   segscan_group_sizze_40992 -
                                                   (chunk_offset_45534 +
                                                    segscan_group_sizze_40992 -
                                                    1));
                bool should_load_carry_45549 = local_tid_45527 == 0 &&
                     !crosses_segment_45548;
                
                if (should_load_carry_45549) {
                    x_40996 = ((__local
                                float *) scan_arr_mem_45531)[segscan_group_sizze_40992 -
                                                             1];
                }
                if (!should_load_carry_45549) {
                    x_40996 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_40992
}
__kernel void mainziscan_stage2_38882(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45138_backing_aligned_0,
                                      int64_t N_30803, int64_t m_30804, __global
                                      unsigned char *mem_43934,
                                      int64_t stage1_num_groups_45107,
                                      int32_t num_threads_45108)
{
    #define segscan_group_sizze_38899 (mainzisegscan_group_sizze_38876)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45138_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45138_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45133;
    int32_t local_tid_45134;
    int64_t group_sizze_45137;
    int32_t wave_sizze_45136;
    int32_t group_tid_45135;
    
    global_tid_45133 = get_global_id(0);
    local_tid_45134 = get_local_id(0);
    group_sizze_45137 = get_local_size(0);
    wave_sizze_45136 = LOCKSTEP_WIDTH;
    group_tid_45135 = get_group_id(0);
    
    int32_t phys_tid_38882;
    
    phys_tid_38882 = global_tid_45133;
    
    __local char *scan_arr_mem_45138;
    
    scan_arr_mem_45138 = (__local char *) scan_arr_mem_45138_backing_0;
    
    int64_t flat_idx_45140;
    
    flat_idx_45140 = (sext_i32_i64(local_tid_45134) + 1) *
        (segscan_group_sizze_38899 * sdiv_up64(m_30804 * N_30803,
                                               sext_i32_i64(num_threads_45108))) -
        1;
    
    int64_t gtid_38873;
    
    gtid_38873 = squot64(flat_idx_45140, N_30803);
    
    int64_t gtid_38881;
    
    gtid_38881 = flat_idx_45140 - squot64(flat_idx_45140, N_30803) * N_30803;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_38873, m_30804) && slt64(gtid_38881, N_30803)) {
            ((__local
              int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)] =
                ((__global int64_t *) mem_43934)[gtid_38873 * N_30803 +
                                                 gtid_38881];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_38904;
    int64_t x_38905;
    int64_t x_45141;
    int64_t x_45142;
    bool ltid_in_bounds_45144;
    
    ltid_in_bounds_45144 = slt64(sext_i32_i64(local_tid_45134),
                                 stage1_num_groups_45107);
    
    int32_t skip_threads_45145;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45144) {
            x_38905 = ((volatile __local
                        int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)];
            if ((local_tid_45134 - squot32(local_tid_45134, 32) * 32) == 0) {
                x_38904 = x_38905;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45145 = 1;
        while (slt32(skip_threads_45145, 32)) {
            if (sle32(skip_threads_45145, local_tid_45134 -
                      squot32(local_tid_45134, 32) * 32) &&
                ltid_in_bounds_45144) {
                // read operands
                {
                    x_38904 = ((volatile __local
                                int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134) -
                                                               sext_i32_i64(skip_threads_45145)];
                }
                // perform operation
                {
                    bool inactive_45146 =
                         slt64(srem64((sext_i32_i64(local_tid_45134) + 1) *
                                      (segscan_group_sizze_38899 *
                                       sdiv_up64(m_30804 * N_30803,
                                                 sext_i32_i64(num_threads_45108))) -
                                      1, N_30803),
                               (sext_i32_i64(local_tid_45134) + 1) *
                               (segscan_group_sizze_38899 * sdiv_up64(m_30804 *
                                                                      N_30803,
                                                                      sext_i32_i64(num_threads_45108))) -
                               1 - ((sext_i32_i64(local_tid_45134 -
                                     skip_threads_45145) + 1) *
                                    (segscan_group_sizze_38899 *
                                     sdiv_up64(m_30804 * N_30803,
                                               sext_i32_i64(num_threads_45108))) -
                                    1));
                    
                    if (inactive_45146) {
                        x_38904 = x_38905;
                    }
                    if (!inactive_45146) {
                        int64_t defunc_1_op_res_38906 = add64(x_38904, x_38905);
                        
                        x_38904 = defunc_1_op_res_38906;
                    }
                }
            }
            if (sle32(wave_sizze_45136, skip_threads_45145)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45145, local_tid_45134 -
                      squot32(local_tid_45134, 32) * 32) &&
                ltid_in_bounds_45144) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)] =
                        x_38904;
                    x_38905 = x_38904;
                }
            }
            if (sle32(wave_sizze_45136, skip_threads_45145)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45145 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45134 - squot32(local_tid_45134, 32) * 32) == 31 &&
            ltid_in_bounds_45144) {
            ((volatile __local
              int64_t *) scan_arr_mem_45138)[sext_i32_i64(squot32(local_tid_45134,
                                                                  32))] =
                x_38904;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45147;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45134, 32) == 0 && ltid_in_bounds_45144) {
                x_45142 = ((volatile __local
                            int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)];
                if ((local_tid_45134 - squot32(local_tid_45134, 32) * 32) ==
                    0) {
                    x_45141 = x_45142;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45147 = 1;
            while (slt32(skip_threads_45147, 32)) {
                if (sle32(skip_threads_45147, local_tid_45134 -
                          squot32(local_tid_45134, 32) * 32) &&
                    (squot32(local_tid_45134, 32) == 0 &&
                     ltid_in_bounds_45144)) {
                    // read operands
                    {
                        x_45141 = ((volatile __local
                                    int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134) -
                                                                   sext_i32_i64(skip_threads_45147)];
                    }
                    // perform operation
                    {
                        bool inactive_45148 =
                             slt64(srem64((sext_i32_i64(local_tid_45134 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_38899 *
                                           sdiv_up64(m_30804 * N_30803,
                                                     sext_i32_i64(num_threads_45108))) -
                                          1, N_30803),
                                   (sext_i32_i64(local_tid_45134 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_38899 *
                                               sdiv_up64(m_30804 * N_30803,
                                                         sext_i32_i64(num_threads_45108))) -
                                   1 - ((sext_i32_i64((local_tid_45134 -
                                                       skip_threads_45147) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_38899 *
                                         sdiv_up64(m_30804 * N_30803,
                                                   sext_i32_i64(num_threads_45108))) -
                                        1));
                        
                        if (inactive_45148) {
                            x_45141 = x_45142;
                        }
                        if (!inactive_45148) {
                            int64_t defunc_1_op_res_45143 = add64(x_45141,
                                                                  x_45142);
                            
                            x_45141 = defunc_1_op_res_45143;
                        }
                    }
                }
                if (sle32(wave_sizze_45136, skip_threads_45147)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45147, local_tid_45134 -
                          squot32(local_tid_45134, 32) * 32) &&
                    (squot32(local_tid_45134, 32) == 0 &&
                     ltid_in_bounds_45144)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)] =
                            x_45141;
                        x_45142 = x_45141;
                    }
                }
                if (sle32(wave_sizze_45136, skip_threads_45147)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45147 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45134, 32) == 0 || !ltid_in_bounds_45144)) {
            // read operands
            {
                x_38905 = x_38904;
                x_38904 = ((__local
                            int64_t *) scan_arr_mem_45138)[sext_i32_i64(squot32(local_tid_45134,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45149 =
                     slt64(srem64((sext_i32_i64(local_tid_45134) + 1) *
                                  (segscan_group_sizze_38899 *
                                   sdiv_up64(m_30804 * N_30803,
                                             sext_i32_i64(num_threads_45108))) -
                                  1, N_30803), (sext_i32_i64(local_tid_45134) +
                                                1) *
                           (segscan_group_sizze_38899 * sdiv_up64(m_30804 *
                                                                  N_30803,
                                                                  sext_i32_i64(num_threads_45108))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45134, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_38899 *
                                                 sdiv_up64(m_30804 * N_30803,
                                                           sext_i32_i64(num_threads_45108))) -
                                1));
                
                if (inactive_45149) {
                    x_38904 = x_38905;
                }
                if (!inactive_45149) {
                    int64_t defunc_1_op_res_38906 = add64(x_38904, x_38905);
                    
                    x_38904 = defunc_1_op_res_38906;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)] =
                    x_38904;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45134, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)] =
                x_38905;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_38873, m_30804) && slt64(gtid_38881, N_30803)) {
            ((__global int64_t *) mem_43934)[gtid_38873 * N_30803 +
                                             gtid_38881] = ((__local
                                                             int64_t *) scan_arr_mem_45138)[sext_i32_i64(local_tid_45134)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_38899
}
__kernel void mainziscan_stage2_40568(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45780_backing_aligned_0,
                                      __local volatile
                                      int64_t *scan_arr_mem_45778_backing_aligned_1,
                                      __local volatile
                                      int64_t *scan_arr_mem_45776_backing_aligned_2,
                                      __local volatile
                                      int64_t *scan_arr_mem_45774_backing_aligned_3,
                                      int64_t m_30804, int64_t iota32_arg_31190,
                                      __global unsigned char *mem_44297,
                                      __global unsigned char *mem_44300,
                                      __global unsigned char *mem_44303,
                                      __global unsigned char *mem_44306,
                                      int64_t stage1_num_groups_45719,
                                      int32_t num_threads_45720)
{
    #define segscan_group_sizze_41229 (mainzisegscan_group_sizze_40562)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45780_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_45780_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_45778_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_45778_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_45776_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_45776_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_45774_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45774_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45769;
    int32_t local_tid_45770;
    int64_t group_sizze_45773;
    int32_t wave_sizze_45772;
    int32_t group_tid_45771;
    
    global_tid_45769 = get_global_id(0);
    local_tid_45770 = get_local_id(0);
    group_sizze_45773 = get_local_size(0);
    wave_sizze_45772 = LOCKSTEP_WIDTH;
    group_tid_45771 = get_group_id(0);
    
    int32_t phys_tid_40568;
    
    phys_tid_40568 = global_tid_45769;
    
    __local char *scan_arr_mem_45774;
    __local char *scan_arr_mem_45776;
    __local char *scan_arr_mem_45778;
    __local char *scan_arr_mem_45780;
    
    scan_arr_mem_45774 = (__local char *) scan_arr_mem_45774_backing_0;
    scan_arr_mem_45776 = (__local char *) scan_arr_mem_45776_backing_1;
    scan_arr_mem_45778 = (__local char *) scan_arr_mem_45778_backing_2;
    scan_arr_mem_45780 = (__local char *) scan_arr_mem_45780_backing_3;
    
    int64_t flat_idx_45782;
    
    flat_idx_45782 = (sext_i32_i64(local_tid_45770) + 1) *
        (segscan_group_sizze_41229 * sdiv_up64(m_30804 * iota32_arg_31190,
                                               sext_i32_i64(num_threads_45720))) -
        1;
    
    int64_t gtid_40559;
    
    gtid_40559 = squot64(flat_idx_45782, iota32_arg_31190);
    
    int64_t gtid_40567;
    
    gtid_40567 = flat_idx_45782 - squot64(flat_idx_45782, iota32_arg_31190) *
        iota32_arg_31190;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40559, m_30804) && slt64(gtid_40567, iota32_arg_31190)) {
            ((__local
              int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)] =
                ((__global int64_t *) mem_44297)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567];
            ((__local
              int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)] =
                ((__global int64_t *) mem_44300)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567];
            ((__local
              int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)] =
                ((__global int64_t *) mem_44303)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567];
            ((__local
              int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)] =
                ((__global int64_t *) mem_44306)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)] = 0;
            ((__local
              int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)] = 0;
            ((__local
              int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)] = 0;
            ((__local
              int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_41237;
    int64_t x_41238;
    int64_t x_41239;
    int64_t x_41240;
    int64_t x_41241;
    int64_t x_41242;
    int64_t x_41243;
    int64_t x_41244;
    int64_t x_45783;
    int64_t x_45784;
    int64_t x_45785;
    int64_t x_45786;
    int64_t x_45787;
    int64_t x_45788;
    int64_t x_45789;
    int64_t x_45790;
    bool ltid_in_bounds_45795;
    
    ltid_in_bounds_45795 = slt64(sext_i32_i64(local_tid_45770),
                                 stage1_num_groups_45719);
    
    int32_t skip_threads_45796;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45795) {
            x_41241 = ((volatile __local
                        int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)];
            x_41242 = ((volatile __local
                        int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)];
            x_41243 = ((volatile __local
                        int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)];
            x_41244 = ((volatile __local
                        int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)];
            if ((local_tid_45770 - squot32(local_tid_45770, 32) * 32) == 0) {
                x_41237 = x_41241;
                x_41238 = x_41242;
                x_41239 = x_41243;
                x_41240 = x_41244;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45796 = 1;
        while (slt32(skip_threads_45796, 32)) {
            if (sle32(skip_threads_45796, local_tid_45770 -
                      squot32(local_tid_45770, 32) * 32) &&
                ltid_in_bounds_45795) {
                // read operands
                {
                    x_41237 = ((volatile __local
                                int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770) -
                                                               sext_i32_i64(skip_threads_45796)];
                    x_41238 = ((volatile __local
                                int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770) -
                                                               sext_i32_i64(skip_threads_45796)];
                    x_41239 = ((volatile __local
                                int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770) -
                                                               sext_i32_i64(skip_threads_45796)];
                    x_41240 = ((volatile __local
                                int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770) -
                                                               sext_i32_i64(skip_threads_45796)];
                }
                // perform operation
                {
                    bool inactive_45797 =
                         slt64(srem64((sext_i32_i64(local_tid_45770) + 1) *
                                      (segscan_group_sizze_41229 *
                                       sdiv_up64(m_30804 * iota32_arg_31190,
                                                 sext_i32_i64(num_threads_45720))) -
                                      1, iota32_arg_31190),
                               (sext_i32_i64(local_tid_45770) + 1) *
                               (segscan_group_sizze_41229 * sdiv_up64(m_30804 *
                                                                      iota32_arg_31190,
                                                                      sext_i32_i64(num_threads_45720))) -
                               1 - ((sext_i32_i64(local_tid_45770 -
                                     skip_threads_45796) + 1) *
                                    (segscan_group_sizze_41229 *
                                     sdiv_up64(m_30804 * iota32_arg_31190,
                                               sext_i32_i64(num_threads_45720))) -
                                    1));
                    
                    if (inactive_45797) {
                        x_41237 = x_41241;
                        x_41238 = x_41242;
                        x_41239 = x_41243;
                        x_41240 = x_41244;
                    }
                    if (!inactive_45797) {
                        int64_t defunc_1_op_res_41245 = add64(x_41237, x_41241);
                        int64_t defunc_1_op_res_41246 = add64(x_41238, x_41242);
                        int64_t defunc_1_op_res_41247 = add64(x_41239, x_41243);
                        int64_t defunc_1_op_res_41248 = add64(x_41240, x_41244);
                        
                        x_41237 = defunc_1_op_res_41245;
                        x_41238 = defunc_1_op_res_41246;
                        x_41239 = defunc_1_op_res_41247;
                        x_41240 = defunc_1_op_res_41248;
                    }
                }
            }
            if (sle32(wave_sizze_45772, skip_threads_45796)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45796, local_tid_45770 -
                      squot32(local_tid_45770, 32) * 32) &&
                ltid_in_bounds_45795) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)] =
                        x_41237;
                    x_41241 = x_41237;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)] =
                        x_41238;
                    x_41242 = x_41238;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)] =
                        x_41239;
                    x_41243 = x_41239;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)] =
                        x_41240;
                    x_41244 = x_41240;
                }
            }
            if (sle32(wave_sizze_45772, skip_threads_45796)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45796 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45770 - squot32(local_tid_45770, 32) * 32) == 31 &&
            ltid_in_bounds_45795) {
            ((volatile __local
              int64_t *) scan_arr_mem_45774)[sext_i32_i64(squot32(local_tid_45770,
                                                                  32))] =
                x_41237;
            ((volatile __local
              int64_t *) scan_arr_mem_45776)[sext_i32_i64(squot32(local_tid_45770,
                                                                  32))] =
                x_41238;
            ((volatile __local
              int64_t *) scan_arr_mem_45778)[sext_i32_i64(squot32(local_tid_45770,
                                                                  32))] =
                x_41239;
            ((volatile __local
              int64_t *) scan_arr_mem_45780)[sext_i32_i64(squot32(local_tid_45770,
                                                                  32))] =
                x_41240;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45798;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45770, 32) == 0 && ltid_in_bounds_45795) {
                x_45787 = ((volatile __local
                            int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)];
                x_45788 = ((volatile __local
                            int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)];
                x_45789 = ((volatile __local
                            int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)];
                x_45790 = ((volatile __local
                            int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)];
                if ((local_tid_45770 - squot32(local_tid_45770, 32) * 32) ==
                    0) {
                    x_45783 = x_45787;
                    x_45784 = x_45788;
                    x_45785 = x_45789;
                    x_45786 = x_45790;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45798 = 1;
            while (slt32(skip_threads_45798, 32)) {
                if (sle32(skip_threads_45798, local_tid_45770 -
                          squot32(local_tid_45770, 32) * 32) &&
                    (squot32(local_tid_45770, 32) == 0 &&
                     ltid_in_bounds_45795)) {
                    // read operands
                    {
                        x_45783 = ((volatile __local
                                    int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770) -
                                                                   sext_i32_i64(skip_threads_45798)];
                        x_45784 = ((volatile __local
                                    int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770) -
                                                                   sext_i32_i64(skip_threads_45798)];
                        x_45785 = ((volatile __local
                                    int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770) -
                                                                   sext_i32_i64(skip_threads_45798)];
                        x_45786 = ((volatile __local
                                    int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770) -
                                                                   sext_i32_i64(skip_threads_45798)];
                    }
                    // perform operation
                    {
                        bool inactive_45799 =
                             slt64(srem64((sext_i32_i64(local_tid_45770 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_41229 *
                                           sdiv_up64(m_30804 * iota32_arg_31190,
                                                     sext_i32_i64(num_threads_45720))) -
                                          1, iota32_arg_31190),
                                   (sext_i32_i64(local_tid_45770 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_41229 *
                                               sdiv_up64(m_30804 *
                                                         iota32_arg_31190,
                                                         sext_i32_i64(num_threads_45720))) -
                                   1 - ((sext_i32_i64((local_tid_45770 -
                                                       skip_threads_45798) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_41229 *
                                         sdiv_up64(m_30804 * iota32_arg_31190,
                                                   sext_i32_i64(num_threads_45720))) -
                                        1));
                        
                        if (inactive_45799) {
                            x_45783 = x_45787;
                            x_45784 = x_45788;
                            x_45785 = x_45789;
                            x_45786 = x_45790;
                        }
                        if (!inactive_45799) {
                            int64_t defunc_1_op_res_45791 = add64(x_45783,
                                                                  x_45787);
                            int64_t defunc_1_op_res_45792 = add64(x_45784,
                                                                  x_45788);
                            int64_t defunc_1_op_res_45793 = add64(x_45785,
                                                                  x_45789);
                            int64_t defunc_1_op_res_45794 = add64(x_45786,
                                                                  x_45790);
                            
                            x_45783 = defunc_1_op_res_45791;
                            x_45784 = defunc_1_op_res_45792;
                            x_45785 = defunc_1_op_res_45793;
                            x_45786 = defunc_1_op_res_45794;
                        }
                    }
                }
                if (sle32(wave_sizze_45772, skip_threads_45798)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45798, local_tid_45770 -
                          squot32(local_tid_45770, 32) * 32) &&
                    (squot32(local_tid_45770, 32) == 0 &&
                     ltid_in_bounds_45795)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)] =
                            x_45783;
                        x_45787 = x_45783;
                        ((volatile __local
                          int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)] =
                            x_45784;
                        x_45788 = x_45784;
                        ((volatile __local
                          int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)] =
                            x_45785;
                        x_45789 = x_45785;
                        ((volatile __local
                          int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)] =
                            x_45786;
                        x_45790 = x_45786;
                    }
                }
                if (sle32(wave_sizze_45772, skip_threads_45798)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45798 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45770, 32) == 0 || !ltid_in_bounds_45795)) {
            // read operands
            {
                x_41241 = x_41237;
                x_41242 = x_41238;
                x_41243 = x_41239;
                x_41244 = x_41240;
                x_41237 = ((__local
                            int64_t *) scan_arr_mem_45774)[sext_i32_i64(squot32(local_tid_45770,
                                                                                32)) -
                                                           1];
                x_41238 = ((__local
                            int64_t *) scan_arr_mem_45776)[sext_i32_i64(squot32(local_tid_45770,
                                                                                32)) -
                                                           1];
                x_41239 = ((__local
                            int64_t *) scan_arr_mem_45778)[sext_i32_i64(squot32(local_tid_45770,
                                                                                32)) -
                                                           1];
                x_41240 = ((__local
                            int64_t *) scan_arr_mem_45780)[sext_i32_i64(squot32(local_tid_45770,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45800 =
                     slt64(srem64((sext_i32_i64(local_tid_45770) + 1) *
                                  (segscan_group_sizze_41229 *
                                   sdiv_up64(m_30804 * iota32_arg_31190,
                                             sext_i32_i64(num_threads_45720))) -
                                  1, iota32_arg_31190),
                           (sext_i32_i64(local_tid_45770) + 1) *
                           (segscan_group_sizze_41229 * sdiv_up64(m_30804 *
                                                                  iota32_arg_31190,
                                                                  sext_i32_i64(num_threads_45720))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45770, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_41229 *
                                                 sdiv_up64(m_30804 *
                                                           iota32_arg_31190,
                                                           sext_i32_i64(num_threads_45720))) -
                                1));
                
                if (inactive_45800) {
                    x_41237 = x_41241;
                    x_41238 = x_41242;
                    x_41239 = x_41243;
                    x_41240 = x_41244;
                }
                if (!inactive_45800) {
                    int64_t defunc_1_op_res_41245 = add64(x_41237, x_41241);
                    int64_t defunc_1_op_res_41246 = add64(x_41238, x_41242);
                    int64_t defunc_1_op_res_41247 = add64(x_41239, x_41243);
                    int64_t defunc_1_op_res_41248 = add64(x_41240, x_41244);
                    
                    x_41237 = defunc_1_op_res_41245;
                    x_41238 = defunc_1_op_res_41246;
                    x_41239 = defunc_1_op_res_41247;
                    x_41240 = defunc_1_op_res_41248;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)] =
                    x_41237;
                ((__local
                  int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)] =
                    x_41238;
                ((__local
                  int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)] =
                    x_41239;
                ((__local
                  int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)] =
                    x_41240;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45770, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)] =
                x_41241;
            ((__local
              int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)] =
                x_41242;
            ((__local
              int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)] =
                x_41243;
            ((__local
              int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)] =
                x_41244;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40559, m_30804) && slt64(gtid_40567, iota32_arg_31190)) {
            ((__global int64_t *) mem_44297)[gtid_40559 * iota32_arg_31190 +
                                             gtid_40567] = ((__local
                                                             int64_t *) scan_arr_mem_45774)[sext_i32_i64(local_tid_45770)];
            ((__global int64_t *) mem_44300)[gtid_40559 * iota32_arg_31190 +
                                             gtid_40567] = ((__local
                                                             int64_t *) scan_arr_mem_45776)[sext_i32_i64(local_tid_45770)];
            ((__global int64_t *) mem_44303)[gtid_40559 * iota32_arg_31190 +
                                             gtid_40567] = ((__local
                                                             int64_t *) scan_arr_mem_45778)[sext_i32_i64(local_tid_45770)];
            ((__global int64_t *) mem_44306)[gtid_40559 * iota32_arg_31190 +
                                             gtid_40567] = ((__local
                                                             int64_t *) scan_arr_mem_45780)[sext_i32_i64(local_tid_45770)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41229
}
__kernel void mainziscan_stage2_40914(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45555_backing_aligned_0,
                                      int64_t m_30804, int64_t iota32_arg_31190,
                                      __global unsigned char *mem_44244,
                                      int64_t stage1_num_groups_45524,
                                      int32_t num_threads_45525)
{
    #define segscan_group_sizze_40992 (mainzisegscan_group_sizze_40908)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45555_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45555_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45550;
    int32_t local_tid_45551;
    int64_t group_sizze_45554;
    int32_t wave_sizze_45553;
    int32_t group_tid_45552;
    
    global_tid_45550 = get_global_id(0);
    local_tid_45551 = get_local_id(0);
    group_sizze_45554 = get_local_size(0);
    wave_sizze_45553 = LOCKSTEP_WIDTH;
    group_tid_45552 = get_group_id(0);
    
    int32_t phys_tid_40914;
    
    phys_tid_40914 = global_tid_45550;
    
    __local char *scan_arr_mem_45555;
    
    scan_arr_mem_45555 = (__local char *) scan_arr_mem_45555_backing_0;
    
    int64_t flat_idx_45557;
    
    flat_idx_45557 = (sext_i32_i64(local_tid_45551) + 1) *
        (segscan_group_sizze_40992 * sdiv_up64(m_30804 * iota32_arg_31190,
                                               sext_i32_i64(num_threads_45525))) -
        1;
    
    int64_t gtid_40905;
    
    gtid_40905 = squot64(flat_idx_45557, iota32_arg_31190);
    
    int64_t gtid_40913;
    
    gtid_40913 = flat_idx_45557 - squot64(flat_idx_45557, iota32_arg_31190) *
        iota32_arg_31190;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40905, m_30804) && slt64(gtid_40913, iota32_arg_31190)) {
            ((__local
              float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)] =
                ((__global float *) mem_44244)[gtid_40905 * iota32_arg_31190 +
                                               gtid_40913];
        } else {
            ((__local
              float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_40996;
    float x_40997;
    float x_45558;
    float x_45559;
    bool ltid_in_bounds_45561;
    
    ltid_in_bounds_45561 = slt64(sext_i32_i64(local_tid_45551),
                                 stage1_num_groups_45524);
    
    int32_t skip_threads_45562;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45561) {
            x_40997 = ((volatile __local
                        float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)];
            if ((local_tid_45551 - squot32(local_tid_45551, 32) * 32) == 0) {
                x_40996 = x_40997;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45562 = 1;
        while (slt32(skip_threads_45562, 32)) {
            if (sle32(skip_threads_45562, local_tid_45551 -
                      squot32(local_tid_45551, 32) * 32) &&
                ltid_in_bounds_45561) {
                // read operands
                {
                    x_40996 = ((volatile __local
                                float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551) -
                                                             sext_i32_i64(skip_threads_45562)];
                }
                // perform operation
                {
                    bool inactive_45563 =
                         slt64(srem64((sext_i32_i64(local_tid_45551) + 1) *
                                      (segscan_group_sizze_40992 *
                                       sdiv_up64(m_30804 * iota32_arg_31190,
                                                 sext_i32_i64(num_threads_45525))) -
                                      1, iota32_arg_31190),
                               (sext_i32_i64(local_tid_45551) + 1) *
                               (segscan_group_sizze_40992 * sdiv_up64(m_30804 *
                                                                      iota32_arg_31190,
                                                                      sext_i32_i64(num_threads_45525))) -
                               1 - ((sext_i32_i64(local_tid_45551 -
                                     skip_threads_45562) + 1) *
                                    (segscan_group_sizze_40992 *
                                     sdiv_up64(m_30804 * iota32_arg_31190,
                                               sext_i32_i64(num_threads_45525))) -
                                    1));
                    
                    if (inactive_45563) {
                        x_40996 = x_40997;
                    }
                    if (!inactive_45563) {
                        float defunc_1_op_res_40998 = x_40996 + x_40997;
                        
                        x_40996 = defunc_1_op_res_40998;
                    }
                }
            }
            if (sle32(wave_sizze_45553, skip_threads_45562)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45562, local_tid_45551 -
                      squot32(local_tid_45551, 32) * 32) &&
                ltid_in_bounds_45561) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)] =
                        x_40996;
                    x_40997 = x_40996;
                }
            }
            if (sle32(wave_sizze_45553, skip_threads_45562)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45562 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45551 - squot32(local_tid_45551, 32) * 32) == 31 &&
            ltid_in_bounds_45561) {
            ((volatile __local
              float *) scan_arr_mem_45555)[sext_i32_i64(squot32(local_tid_45551,
                                                                32))] = x_40996;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45564;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45551, 32) == 0 && ltid_in_bounds_45561) {
                x_45559 = ((volatile __local
                            float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)];
                if ((local_tid_45551 - squot32(local_tid_45551, 32) * 32) ==
                    0) {
                    x_45558 = x_45559;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45564 = 1;
            while (slt32(skip_threads_45564, 32)) {
                if (sle32(skip_threads_45564, local_tid_45551 -
                          squot32(local_tid_45551, 32) * 32) &&
                    (squot32(local_tid_45551, 32) == 0 &&
                     ltid_in_bounds_45561)) {
                    // read operands
                    {
                        x_45558 = ((volatile __local
                                    float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551) -
                                                                 sext_i32_i64(skip_threads_45564)];
                    }
                    // perform operation
                    {
                        bool inactive_45565 =
                             slt64(srem64((sext_i32_i64(local_tid_45551 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_40992 *
                                           sdiv_up64(m_30804 * iota32_arg_31190,
                                                     sext_i32_i64(num_threads_45525))) -
                                          1, iota32_arg_31190),
                                   (sext_i32_i64(local_tid_45551 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_40992 *
                                               sdiv_up64(m_30804 *
                                                         iota32_arg_31190,
                                                         sext_i32_i64(num_threads_45525))) -
                                   1 - ((sext_i32_i64((local_tid_45551 -
                                                       skip_threads_45564) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_40992 *
                                         sdiv_up64(m_30804 * iota32_arg_31190,
                                                   sext_i32_i64(num_threads_45525))) -
                                        1));
                        
                        if (inactive_45565) {
                            x_45558 = x_45559;
                        }
                        if (!inactive_45565) {
                            float defunc_1_op_res_45560 = x_45558 + x_45559;
                            
                            x_45558 = defunc_1_op_res_45560;
                        }
                    }
                }
                if (sle32(wave_sizze_45553, skip_threads_45564)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45564, local_tid_45551 -
                          squot32(local_tid_45551, 32) * 32) &&
                    (squot32(local_tid_45551, 32) == 0 &&
                     ltid_in_bounds_45561)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)] =
                            x_45558;
                        x_45559 = x_45558;
                    }
                }
                if (sle32(wave_sizze_45553, skip_threads_45564)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45564 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45551, 32) == 0 || !ltid_in_bounds_45561)) {
            // read operands
            {
                x_40997 = x_40996;
                x_40996 = ((__local
                            float *) scan_arr_mem_45555)[sext_i32_i64(squot32(local_tid_45551,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45566 =
                     slt64(srem64((sext_i32_i64(local_tid_45551) + 1) *
                                  (segscan_group_sizze_40992 *
                                   sdiv_up64(m_30804 * iota32_arg_31190,
                                             sext_i32_i64(num_threads_45525))) -
                                  1, iota32_arg_31190),
                           (sext_i32_i64(local_tid_45551) + 1) *
                           (segscan_group_sizze_40992 * sdiv_up64(m_30804 *
                                                                  iota32_arg_31190,
                                                                  sext_i32_i64(num_threads_45525))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45551, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_40992 *
                                                 sdiv_up64(m_30804 *
                                                           iota32_arg_31190,
                                                           sext_i32_i64(num_threads_45525))) -
                                1));
                
                if (inactive_45566) {
                    x_40996 = x_40997;
                }
                if (!inactive_45566) {
                    float defunc_1_op_res_40998 = x_40996 + x_40997;
                    
                    x_40996 = defunc_1_op_res_40998;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)] =
                    x_40996;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45551, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)] =
                x_40997;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40905, m_30804) && slt64(gtid_40913, iota32_arg_31190)) {
            ((__global float *) mem_44244)[gtid_40905 * iota32_arg_31190 +
                                           gtid_40913] = ((__local
                                                           float *) scan_arr_mem_45555)[sext_i32_i64(local_tid_45551)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40992
}
__kernel void mainziscan_stage3_38882(__global int *global_failure,
                                      int64_t N_30803, int64_t m_30804,
                                      int64_t num_groups_38900, __global
                                      unsigned char *mem_43934,
                                      int32_t num_threads_45108,
                                      int32_t required_groups_45150)
{
    #define segscan_group_sizze_38899 (mainzisegscan_group_sizze_38876)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45151;
    int32_t local_tid_45152;
    int64_t group_sizze_45155;
    int32_t wave_sizze_45154;
    int32_t group_tid_45153;
    
    global_tid_45151 = get_global_id(0);
    local_tid_45152 = get_local_id(0);
    group_sizze_45155 = get_local_size(0);
    wave_sizze_45154 = LOCKSTEP_WIDTH;
    group_tid_45153 = get_group_id(0);
    
    int32_t phys_tid_38882;
    
    phys_tid_38882 = global_tid_45151;
    
    int32_t phys_group_id_45156;
    
    phys_group_id_45156 = get_group_id(0);
    for (int32_t i_45157 = 0; i_45157 < sdiv_up32(required_groups_45150 -
                                                  phys_group_id_45156,
                                                  sext_i64_i32(num_groups_38900));
         i_45157++) {
        int32_t virt_group_id_45158 = phys_group_id_45156 + i_45157 *
                sext_i64_i32(num_groups_38900);
        int64_t flat_idx_45159 = sext_i32_i64(virt_group_id_45158) *
                segscan_group_sizze_38899 + sext_i32_i64(local_tid_45152);
        int64_t gtid_38873 = squot64(flat_idx_45159, N_30803);
        int64_t gtid_38881 = flat_idx_45159 - squot64(flat_idx_45159, N_30803) *
                N_30803;
        int64_t orig_group_45160 = squot64(flat_idx_45159,
                                           segscan_group_sizze_38899 *
                                           sdiv_up64(m_30804 * N_30803,
                                                     sext_i32_i64(num_threads_45108)));
        int64_t carry_in_flat_idx_45161 = orig_group_45160 *
                (segscan_group_sizze_38899 * sdiv_up64(m_30804 * N_30803,
                                                       sext_i32_i64(num_threads_45108))) -
                1;
        
        if (slt64(gtid_38873, m_30804) && slt64(gtid_38881, N_30803)) {
            if (!(orig_group_45160 == 0 || (flat_idx_45159 ==
                                            (orig_group_45160 + 1) *
                                            (segscan_group_sizze_38899 *
                                             sdiv_up64(m_30804 * N_30803,
                                                       sext_i32_i64(num_threads_45108))) -
                                            1 || slt64(srem64(flat_idx_45159,
                                                              N_30803),
                                                       flat_idx_45159 -
                                                       carry_in_flat_idx_45161)))) {
                int64_t x_38904;
                int64_t x_38905;
                
                x_38904 = ((__global
                            int64_t *) mem_43934)[squot64(carry_in_flat_idx_45161,
                                                          N_30803) * N_30803 +
                                                  (carry_in_flat_idx_45161 -
                                                   squot64(carry_in_flat_idx_45161,
                                                           N_30803) * N_30803)];
                x_38905 = ((__global int64_t *) mem_43934)[gtid_38873 *
                                                           N_30803 +
                                                           gtid_38881];
                
                int64_t defunc_1_op_res_38906;
                
                defunc_1_op_res_38906 = add64(x_38904, x_38905);
                x_38904 = defunc_1_op_res_38906;
                ((__global int64_t *) mem_43934)[gtid_38873 * N_30803 +
                                                 gtid_38881] = x_38904;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_38899
}
__kernel void mainziscan_stage3_40568(__global int *global_failure,
                                      int64_t m_30804, int64_t iota32_arg_31190,
                                      int64_t num_groups_41230, __global
                                      unsigned char *mem_44297, __global
                                      unsigned char *mem_44300, __global
                                      unsigned char *mem_44303, __global
                                      unsigned char *mem_44306,
                                      int32_t num_threads_45720,
                                      int32_t required_groups_45801)
{
    #define segscan_group_sizze_41229 (mainzisegscan_group_sizze_40562)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45802;
    int32_t local_tid_45803;
    int64_t group_sizze_45806;
    int32_t wave_sizze_45805;
    int32_t group_tid_45804;
    
    global_tid_45802 = get_global_id(0);
    local_tid_45803 = get_local_id(0);
    group_sizze_45806 = get_local_size(0);
    wave_sizze_45805 = LOCKSTEP_WIDTH;
    group_tid_45804 = get_group_id(0);
    
    int32_t phys_tid_40568;
    
    phys_tid_40568 = global_tid_45802;
    
    int32_t phys_group_id_45807;
    
    phys_group_id_45807 = get_group_id(0);
    for (int32_t i_45808 = 0; i_45808 < sdiv_up32(required_groups_45801 -
                                                  phys_group_id_45807,
                                                  sext_i64_i32(num_groups_41230));
         i_45808++) {
        int32_t virt_group_id_45809 = phys_group_id_45807 + i_45808 *
                sext_i64_i32(num_groups_41230);
        int64_t flat_idx_45810 = sext_i32_i64(virt_group_id_45809) *
                segscan_group_sizze_41229 + sext_i32_i64(local_tid_45803);
        int64_t gtid_40559 = squot64(flat_idx_45810, iota32_arg_31190);
        int64_t gtid_40567 = flat_idx_45810 - squot64(flat_idx_45810,
                                                      iota32_arg_31190) *
                iota32_arg_31190;
        int64_t orig_group_45811 = squot64(flat_idx_45810,
                                           segscan_group_sizze_41229 *
                                           sdiv_up64(m_30804 * iota32_arg_31190,
                                                     sext_i32_i64(num_threads_45720)));
        int64_t carry_in_flat_idx_45812 = orig_group_45811 *
                (segscan_group_sizze_41229 * sdiv_up64(m_30804 *
                                                       iota32_arg_31190,
                                                       sext_i32_i64(num_threads_45720))) -
                1;
        
        if (slt64(gtid_40559, m_30804) && slt64(gtid_40567, iota32_arg_31190)) {
            if (!(orig_group_45811 == 0 || (flat_idx_45810 ==
                                            (orig_group_45811 + 1) *
                                            (segscan_group_sizze_41229 *
                                             sdiv_up64(m_30804 *
                                                       iota32_arg_31190,
                                                       sext_i32_i64(num_threads_45720))) -
                                            1 || slt64(srem64(flat_idx_45810,
                                                              iota32_arg_31190),
                                                       flat_idx_45810 -
                                                       carry_in_flat_idx_45812)))) {
                int64_t x_41237;
                int64_t x_41238;
                int64_t x_41239;
                int64_t x_41240;
                int64_t x_41241;
                int64_t x_41242;
                int64_t x_41243;
                int64_t x_41244;
                
                x_41237 = ((__global
                            int64_t *) mem_44297)[squot64(carry_in_flat_idx_45812,
                                                          iota32_arg_31190) *
                                                  iota32_arg_31190 +
                                                  (carry_in_flat_idx_45812 -
                                                   squot64(carry_in_flat_idx_45812,
                                                           iota32_arg_31190) *
                                                   iota32_arg_31190)];
                x_41238 = ((__global
                            int64_t *) mem_44300)[squot64(carry_in_flat_idx_45812,
                                                          iota32_arg_31190) *
                                                  iota32_arg_31190 +
                                                  (carry_in_flat_idx_45812 -
                                                   squot64(carry_in_flat_idx_45812,
                                                           iota32_arg_31190) *
                                                   iota32_arg_31190)];
                x_41239 = ((__global
                            int64_t *) mem_44303)[squot64(carry_in_flat_idx_45812,
                                                          iota32_arg_31190) *
                                                  iota32_arg_31190 +
                                                  (carry_in_flat_idx_45812 -
                                                   squot64(carry_in_flat_idx_45812,
                                                           iota32_arg_31190) *
                                                   iota32_arg_31190)];
                x_41240 = ((__global
                            int64_t *) mem_44306)[squot64(carry_in_flat_idx_45812,
                                                          iota32_arg_31190) *
                                                  iota32_arg_31190 +
                                                  (carry_in_flat_idx_45812 -
                                                   squot64(carry_in_flat_idx_45812,
                                                           iota32_arg_31190) *
                                                   iota32_arg_31190)];
                x_41241 = ((__global int64_t *) mem_44297)[gtid_40559 *
                                                           iota32_arg_31190 +
                                                           gtid_40567];
                x_41242 = ((__global int64_t *) mem_44300)[gtid_40559 *
                                                           iota32_arg_31190 +
                                                           gtid_40567];
                x_41243 = ((__global int64_t *) mem_44303)[gtid_40559 *
                                                           iota32_arg_31190 +
                                                           gtid_40567];
                x_41244 = ((__global int64_t *) mem_44306)[gtid_40559 *
                                                           iota32_arg_31190 +
                                                           gtid_40567];
                
                int64_t defunc_1_op_res_41245;
                
                defunc_1_op_res_41245 = add64(x_41237, x_41241);
                
                int64_t defunc_1_op_res_41246 = add64(x_41238, x_41242);
                int64_t defunc_1_op_res_41247 = add64(x_41239, x_41243);
                int64_t defunc_1_op_res_41248 = add64(x_41240, x_41244);
                
                x_41237 = defunc_1_op_res_41245;
                x_41238 = defunc_1_op_res_41246;
                x_41239 = defunc_1_op_res_41247;
                x_41240 = defunc_1_op_res_41248;
                ((__global int64_t *) mem_44297)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567] = x_41237;
                ((__global int64_t *) mem_44300)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567] = x_41238;
                ((__global int64_t *) mem_44303)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567] = x_41239;
                ((__global int64_t *) mem_44306)[gtid_40559 * iota32_arg_31190 +
                                                 gtid_40567] = x_41240;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41229
}
__kernel void mainziscan_stage3_40914(__global int *global_failure,
                                      int64_t m_30804, int64_t iota32_arg_31190,
                                      int64_t num_groups_40993, __global
                                      unsigned char *mem_44244,
                                      int32_t num_threads_45525,
                                      int32_t required_groups_45567)
{
    #define segscan_group_sizze_40992 (mainzisegscan_group_sizze_40908)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45568;
    int32_t local_tid_45569;
    int64_t group_sizze_45572;
    int32_t wave_sizze_45571;
    int32_t group_tid_45570;
    
    global_tid_45568 = get_global_id(0);
    local_tid_45569 = get_local_id(0);
    group_sizze_45572 = get_local_size(0);
    wave_sizze_45571 = LOCKSTEP_WIDTH;
    group_tid_45570 = get_group_id(0);
    
    int32_t phys_tid_40914;
    
    phys_tid_40914 = global_tid_45568;
    
    int32_t phys_group_id_45573;
    
    phys_group_id_45573 = get_group_id(0);
    for (int32_t i_45574 = 0; i_45574 < sdiv_up32(required_groups_45567 -
                                                  phys_group_id_45573,
                                                  sext_i64_i32(num_groups_40993));
         i_45574++) {
        int32_t virt_group_id_45575 = phys_group_id_45573 + i_45574 *
                sext_i64_i32(num_groups_40993);
        int64_t flat_idx_45576 = sext_i32_i64(virt_group_id_45575) *
                segscan_group_sizze_40992 + sext_i32_i64(local_tid_45569);
        int64_t gtid_40905 = squot64(flat_idx_45576, iota32_arg_31190);
        int64_t gtid_40913 = flat_idx_45576 - squot64(flat_idx_45576,
                                                      iota32_arg_31190) *
                iota32_arg_31190;
        int64_t orig_group_45577 = squot64(flat_idx_45576,
                                           segscan_group_sizze_40992 *
                                           sdiv_up64(m_30804 * iota32_arg_31190,
                                                     sext_i32_i64(num_threads_45525)));
        int64_t carry_in_flat_idx_45578 = orig_group_45577 *
                (segscan_group_sizze_40992 * sdiv_up64(m_30804 *
                                                       iota32_arg_31190,
                                                       sext_i32_i64(num_threads_45525))) -
                1;
        
        if (slt64(gtid_40905, m_30804) && slt64(gtid_40913, iota32_arg_31190)) {
            if (!(orig_group_45577 == 0 || (flat_idx_45576 ==
                                            (orig_group_45577 + 1) *
                                            (segscan_group_sizze_40992 *
                                             sdiv_up64(m_30804 *
                                                       iota32_arg_31190,
                                                       sext_i32_i64(num_threads_45525))) -
                                            1 || slt64(srem64(flat_idx_45576,
                                                              iota32_arg_31190),
                                                       flat_idx_45576 -
                                                       carry_in_flat_idx_45578)))) {
                float x_40996;
                float x_40997;
                
                x_40996 = ((__global
                            float *) mem_44244)[squot64(carry_in_flat_idx_45578,
                                                        iota32_arg_31190) *
                                                iota32_arg_31190 +
                                                (carry_in_flat_idx_45578 -
                                                 squot64(carry_in_flat_idx_45578,
                                                         iota32_arg_31190) *
                                                 iota32_arg_31190)];
                x_40997 = ((__global float *) mem_44244)[gtid_40905 *
                                                         iota32_arg_31190 +
                                                         gtid_40913];
                
                float defunc_1_op_res_40998;
                
                defunc_1_op_res_40998 = x_40996 + x_40997;
                x_40996 = defunc_1_op_res_40998;
                ((__global float *) mem_44244)[gtid_40905 * iota32_arg_31190 +
                                               gtid_40913] = x_40996;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40992
}
__kernel void mainzisegmap_36679(__global int *global_failure, int64_t N_30803,
                                 float freq_30809, int64_t i32_res_30823,
                                 __global
                                 unsigned char *mappingindices_mem_43377,
                                 __global unsigned char *mem_43382)
{
    #define segmap_group_sizze_36752 (mainzisegmap_group_sizze_36682)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44622;
    int32_t local_tid_44623;
    int64_t group_sizze_44626;
    int32_t wave_sizze_44625;
    int32_t group_tid_44624;
    
    global_tid_44622 = get_global_id(0);
    local_tid_44623 = get_local_id(0);
    group_sizze_44626 = get_local_size(0);
    wave_sizze_44625 = LOCKSTEP_WIDTH;
    group_tid_44624 = get_group_id(0);
    
    int32_t phys_tid_36679;
    
    phys_tid_36679 = global_tid_44622;
    
    int64_t gtid_36677;
    
    gtid_36677 = squot64(sext_i32_i64(group_tid_44624) *
                         segmap_group_sizze_36752 +
                         sext_i32_i64(local_tid_44623), N_30803);
    
    int64_t gtid_36678;
    
    gtid_36678 = sext_i32_i64(group_tid_44624) * segmap_group_sizze_36752 +
        sext_i32_i64(local_tid_44623) - squot64(sext_i32_i64(group_tid_44624) *
                                                segmap_group_sizze_36752 +
                                                sext_i32_i64(local_tid_44623),
                                                N_30803) * N_30803;
    if (slt64(gtid_36677, i32_res_30823) && slt64(gtid_36678, N_30803)) {
        int32_t index_primexp_41401 = sext_i64_i32(gtid_36677);
        bool index_primexp_41398 = index_primexp_41401 == 0;
        float defunc_0_f_res_36758;
        
        if (index_primexp_41398) {
            defunc_0_f_res_36758 = 1.0F;
        } else {
            int32_t x_36757 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_36678];
            bool cond_36759 = index_primexp_41401 == 1;
            float defunc_0_f_res_f_res_36760;
            
            if (cond_36759) {
                float i32_res_36761 = sitofp_i32_f32(x_36757);
                
                defunc_0_f_res_f_res_36760 = i32_res_36761;
            } else {
                int32_t r32_arg_36762 = sdiv32(index_primexp_41401, 2);
                float i32_res_36763 = sitofp_i32_f32(r32_arg_36762);
                float i32_res_36764 = sitofp_i32_f32(x_36757);
                float x_36765 = 6.2831855F * i32_res_36763;
                float x_36766 = i32_res_36764 * x_36765;
                float angle_36767 = x_36766 / freq_30809;
                int32_t x_36768 = smod32(index_primexp_41401, 2);
                bool cond_36769 = x_36768 == 0;
                float defunc_0_f_res_f_res_f_res_36770;
                
                if (cond_36769) {
                    float sin_res_36771;
                    
                    sin_res_36771 = futrts_sin32(angle_36767);
                    defunc_0_f_res_f_res_f_res_36770 = sin_res_36771;
                } else {
                    float cos_res_36772;
                    
                    cos_res_36772 = futrts_cos32(angle_36767);
                    defunc_0_f_res_f_res_f_res_36770 = cos_res_36772;
                }
                defunc_0_f_res_f_res_36760 = defunc_0_f_res_f_res_f_res_36770;
            }
            defunc_0_f_res_36758 = defunc_0_f_res_f_res_36760;
        }
        ((__global float *) mem_43382)[gtid_36677 * N_30803 + gtid_36678] =
            defunc_0_f_res_36758;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36752
}
__kernel void mainzisegmap_36857(__global int *global_failure, int64_t N_30803,
                                 float freq_30809, int64_t i32_res_30823,
                                 __global
                                 unsigned char *mappingindices_mem_43377,
                                 __global unsigned char *mem_43386)
{
    #define segmap_group_sizze_36926 (mainzisegmap_group_sizze_36860)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44627;
    int32_t local_tid_44628;
    int64_t group_sizze_44631;
    int32_t wave_sizze_44630;
    int32_t group_tid_44629;
    
    global_tid_44627 = get_global_id(0);
    local_tid_44628 = get_local_id(0);
    group_sizze_44631 = get_local_size(0);
    wave_sizze_44630 = LOCKSTEP_WIDTH;
    group_tid_44629 = get_group_id(0);
    
    int32_t phys_tid_36857;
    
    phys_tid_36857 = global_tid_44627;
    
    int64_t gtid_36855;
    
    gtid_36855 = squot64(sext_i32_i64(group_tid_44629) *
                         segmap_group_sizze_36926 +
                         sext_i32_i64(local_tid_44628), N_30803);
    
    int64_t gtid_36856;
    
    gtid_36856 = sext_i32_i64(group_tid_44629) * segmap_group_sizze_36926 +
        sext_i32_i64(local_tid_44628) - squot64(sext_i32_i64(group_tid_44629) *
                                                segmap_group_sizze_36926 +
                                                sext_i32_i64(local_tid_44628),
                                                N_30803) * N_30803;
    if (slt64(gtid_36855, i32_res_30823) && slt64(gtid_36856, N_30803)) {
        int32_t index_primexp_41410 = sext_i64_i32(gtid_36855);
        bool index_primexp_41407 = index_primexp_41410 == 0;
        float defunc_0_f_res_36932;
        
        if (index_primexp_41407) {
            defunc_0_f_res_36932 = 1.0F;
        } else {
            int32_t x_36931 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_36856];
            int32_t i_36933 = add32(1, index_primexp_41410);
            int32_t r32_arg_36934 = sdiv32(i_36933, 2);
            float i32_res_36935 = sitofp_i32_f32(r32_arg_36934);
            float i32_res_36936 = sitofp_i32_f32(x_36931);
            float x_36937 = 6.2831855F * i32_res_36935;
            float x_36938 = i32_res_36936 * x_36937;
            float angle_36939 = x_36938 / freq_30809;
            int32_t x_36940 = smod32(i_36933, 2);
            bool cond_36941 = x_36940 == 0;
            float defunc_0_f_res_f_res_36942;
            
            if (cond_36941) {
                float sin_res_36943;
                
                sin_res_36943 = futrts_sin32(angle_36939);
                defunc_0_f_res_f_res_36942 = sin_res_36943;
            } else {
                float cos_res_36944;
                
                cos_res_36944 = futrts_cos32(angle_36939);
                defunc_0_f_res_f_res_36942 = cos_res_36944;
            }
            defunc_0_f_res_36932 = defunc_0_f_res_f_res_36942;
        }
        ((__global float *) mem_43386)[gtid_36855 * N_30803 + gtid_36856] =
            defunc_0_f_res_36932;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36926
}
__kernel void mainzisegmap_36985(__global int *global_failure, int64_t N_30803,
                                 int64_t i32_res_30823, float i32_res_30888,
                                 __global unsigned char *mem_43390, __global
                                 unsigned char *mem_43394)
{
    #define segmap_group_sizze_37009 (mainzisegmap_group_sizze_36988)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44632;
    int32_t local_tid_44633;
    int64_t group_sizze_44636;
    int32_t wave_sizze_44635;
    int32_t group_tid_44634;
    
    global_tid_44632 = get_global_id(0);
    local_tid_44633 = get_local_id(0);
    group_sizze_44636 = get_local_size(0);
    wave_sizze_44635 = LOCKSTEP_WIDTH;
    group_tid_44634 = get_group_id(0);
    
    int32_t phys_tid_36985;
    
    phys_tid_36985 = global_tid_44632;
    
    int64_t gtid_36983;
    
    gtid_36983 = squot64(sext_i32_i64(group_tid_44634) *
                         segmap_group_sizze_37009 +
                         sext_i32_i64(local_tid_44633), i32_res_30823);
    
    int64_t gtid_36984;
    
    gtid_36984 = sext_i32_i64(group_tid_44634) * segmap_group_sizze_37009 +
        sext_i32_i64(local_tid_44633) - squot64(sext_i32_i64(group_tid_44634) *
                                                segmap_group_sizze_37009 +
                                                sext_i32_i64(local_tid_44633),
                                                i32_res_30823) * i32_res_30823;
    if (slt64(gtid_36983, N_30803) && slt64(gtid_36984, i32_res_30823)) {
        float x_37012 = ((__global float *) mem_43390)[gtid_36983 *
                                                       i32_res_30823 +
                                                       gtid_36984];
        float defunc_0_f_res_37013 = i32_res_30888 + x_37012;
        
        ((__global float *) mem_43394)[gtid_36983 * i32_res_30823 +
                                       gtid_36984] = defunc_0_f_res_37013;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37009
}
__kernel void mainzisegmap_37018(__global int *global_failure, int64_t N_30803,
                                 int64_t m_30804, int32_t n_30808,
                                 int32_t k2p2zq_30821, int64_t i32_res_30823,
                                 int64_t num_groups_37043, __global
                                 unsigned char *binop_p_mem_43387, __global
                                 unsigned char *mem_43394, __global
                                 unsigned char *mem_43397, __global
                                 unsigned char *mem_43401, __global
                                 unsigned char *mem_43443)
{
    #define segmap_group_sizze_37042 (mainzisegmap_group_sizze_37020)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44640;
    int32_t local_tid_44641;
    int64_t group_sizze_44644;
    int32_t wave_sizze_44643;
    int32_t group_tid_44642;
    
    global_tid_44640 = get_global_id(0);
    local_tid_44641 = get_local_id(0);
    group_sizze_44644 = get_local_size(0);
    wave_sizze_44643 = LOCKSTEP_WIDTH;
    group_tid_44642 = get_group_id(0);
    
    int32_t phys_tid_37018;
    
    phys_tid_37018 = global_tid_44640;
    
    int32_t phys_group_id_44645;
    
    phys_group_id_44645 = get_group_id(0);
    for (int32_t i_44646 = 0; i_44646 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804, segmap_group_sizze_37042)) -
                   phys_group_id_44645, sext_i64_i32(num_groups_37043));
         i_44646++) {
        int32_t virt_group_id_44647 = phys_group_id_44645 + i_44646 *
                sext_i64_i32(num_groups_37043);
        int64_t gtid_37017 = sext_i32_i64(virt_group_id_44647) *
                segmap_group_sizze_37042 + sext_i32_i64(local_tid_44641);
        
        if (slt64(gtid_37017, m_30804)) {
            for (int32_t i_43353 = 0; i_43353 < k2p2zq_30821; i_43353++) {
                int64_t i_43237 = sext_i32_i64(i_43353);
                
                for (int32_t i_43352 = 0; i_43352 < k2p2zq_30821; i_43352++) {
                    int64_t i_43241 = sext_i32_i64(i_43352);
                    float defunc_2_reduce_res_37051;
                    float redout_43243 = 0.0F;
                    
                    for (int32_t i_43351 = 0; i_43351 < n_30808; i_43351++) {
                        int64_t i_43244 = sext_i32_i64(i_43351);
                        float x_37055 = ((__global float *) mem_43397)[i_43244 *
                                                                       m_30804 +
                                                                       gtid_37017];
                        float x_37056 = ((__global
                                          float *) binop_p_mem_43387)[i_43237 *
                                                                      N_30803 +
                                                                      i_43244];
                        float x_37057 = ((__global float *) mem_43394)[i_43244 *
                                                                       i32_res_30823 +
                                                                       i_43241];
                        float x_37058 = x_37056 * x_37057;
                        bool isnan_res_37059;
                        
                        isnan_res_37059 = futrts_isnan32(x_37055);
                        
                        float y_37060;
                        
                        if (isnan_res_37059) {
                            y_37060 = 0.0F;
                        } else {
                            y_37060 = 1.0F;
                        }
                        
                        float defunc_2_f_res_37061 = x_37058 * y_37060;
                        float defunc_1_op_res_37054 = defunc_2_f_res_37061 +
                              redout_43243;
                        float redout_tmp_44650 = defunc_1_op_res_37054;
                        
                        redout_43243 = redout_tmp_44650;
                    }
                    defunc_2_reduce_res_37051 = redout_43243;
                    ((__global float *) mem_43401)[phys_tid_37018 + (i_43237 *
                                                                     (num_groups_37043 *
                                                                      segmap_group_sizze_37042 *
                                                                      i32_res_30823) +
                                                                     i_43241 *
                                                                     (num_groups_37043 *
                                                                      segmap_group_sizze_37042))] =
                        defunc_2_reduce_res_37051;
                }
            }
            for (int64_t i_44651 = 0; i_44651 < i32_res_30823; i_44651++) {
                for (int64_t i_44652 = 0; i_44652 < i32_res_30823; i_44652++) {
                    ((__global float *) mem_43443)[i_44651 * (m_30804 *
                                                              i32_res_30823) +
                                                   i_44652 * m_30804 +
                                                   gtid_37017] = ((__global
                                                                   float *) mem_43401)[phys_tid_37018 +
                                                                                       (i_44651 *
                                                                                        (num_groups_37043 *
                                                                                         segmap_group_sizze_37042 *
                                                                                         i32_res_30823) +
                                                                                        i_44652 *
                                                                                        (num_groups_37043 *
                                                                                         segmap_group_sizze_37042))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37042
}
__kernel void mainzisegmap_37064(__global int *global_failure, int64_t m_30804,
                                 int64_t N_30805, int32_t n_30808,
                                 int32_t k2p2zq_30821, int64_t i32_res_30823,
                                 int64_t num_groups_37220, __global
                                 unsigned char *images_mem_43378, __global
                                 unsigned char *mem_43390, __global
                                 unsigned char *mem_43394, __global
                                 unsigned char *mem_43446, __global
                                 unsigned char *mem_43462)
{
    #define segmap_group_sizze_37219 (mainzisegmap_group_sizze_37067)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44653;
    int32_t local_tid_44654;
    int64_t group_sizze_44657;
    int32_t wave_sizze_44656;
    int32_t group_tid_44655;
    
    global_tid_44653 = get_global_id(0);
    local_tid_44654 = get_local_id(0);
    group_sizze_44657 = get_local_size(0);
    wave_sizze_44656 = LOCKSTEP_WIDTH;
    group_tid_44655 = get_group_id(0);
    
    int32_t phys_tid_37064;
    
    phys_tid_37064 = global_tid_44653;
    
    int32_t phys_group_id_44658;
    
    phys_group_id_44658 = get_group_id(0);
    for (int32_t i_44659 = 0; i_44659 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804 * i32_res_30823,
                                          segmap_group_sizze_37219)) -
                   phys_group_id_44658, sext_i64_i32(num_groups_37220));
         i_44659++) {
        int32_t virt_group_id_44660 = phys_group_id_44658 + i_44659 *
                sext_i64_i32(num_groups_37220);
        int64_t gtid_37062 = squot64(sext_i32_i64(virt_group_id_44660) *
                                     segmap_group_sizze_37219 +
                                     sext_i32_i64(local_tid_44654),
                                     i32_res_30823);
        int64_t gtid_37063 = sext_i32_i64(virt_group_id_44660) *
                segmap_group_sizze_37219 + sext_i32_i64(local_tid_44654) -
                squot64(sext_i32_i64(virt_group_id_44660) *
                        segmap_group_sizze_37219 +
                        sext_i32_i64(local_tid_44654), i32_res_30823) *
                i32_res_30823;
        
        if (slt64(gtid_37062, m_30804) && slt64(gtid_37063, i32_res_30823)) {
            for (int32_t i_43355 = 0; i_43355 < k2p2zq_30821; i_43355++) {
                int64_t i_43247 = sext_i32_i64(i_43355);
                float defunc_2_reduce_res_37231;
                float redout_43249 = 0.0F;
                
                for (int32_t i_43354 = 0; i_43354 < n_30808; i_43354++) {
                    int64_t i_43250 = sext_i32_i64(i_43354);
                    float x_37235 = ((__global
                                      float *) images_mem_43378)[gtid_37062 *
                                                                 N_30805 +
                                                                 i_43250];
                    float x_37236 = ((__global float *) mem_43390)[i_43250 *
                                                                   i32_res_30823 +
                                                                   gtid_37063];
                    float x_37237 = ((__global float *) mem_43394)[i_43250 *
                                                                   i32_res_30823 +
                                                                   i_43247];
                    float x_37238 = x_37236 * x_37237;
                    bool isnan_res_37239;
                    
                    isnan_res_37239 = futrts_isnan32(x_37235);
                    
                    float y_37240;
                    
                    if (isnan_res_37239) {
                        y_37240 = 0.0F;
                    } else {
                        y_37240 = 1.0F;
                    }
                    
                    float defunc_2_f_res_37241 = x_37238 * y_37240;
                    float defunc_1_op_res_37234 = defunc_2_f_res_37241 +
                          redout_43249;
                    float redout_tmp_44662 = defunc_1_op_res_37234;
                    
                    redout_43249 = redout_tmp_44662;
                }
                defunc_2_reduce_res_37231 = redout_43249;
                ((__global float *) mem_43446)[phys_tid_37064 + i_43247 *
                                               (num_groups_37220 *
                                                segmap_group_sizze_37219)] =
                    defunc_2_reduce_res_37231;
            }
            for (int64_t i_44663 = 0; i_44663 < i32_res_30823; i_44663++) {
                ((__global float *) mem_43462)[i_44663 * (i32_res_30823 *
                                                          m_30804) +
                                               gtid_37062 * i32_res_30823 +
                                               gtid_37063] = ((__global
                                                               float *) mem_43446)[phys_tid_37064 +
                                                                                   i_44663 *
                                                                                   (num_groups_37220 *
                                                                                    segmap_group_sizze_37219)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37219
}
__kernel void mainzisegmap_37598(__global int *global_failure, int64_t m_30804,
                                 int64_t i32_res_30823, int64_t m_30954,
                                 int64_t gauss_jordan_res_r_ixfn_43616,
                                 int64_t gauss_jordan_res_r_ixfn_43617,
                                 int64_t gauss_jordan_res_r_ixfn_43619, __global
                                 unsigned char *gauss_jordan_res_r_mem_43621,
                                 __global unsigned char *mem_43626)
{
    #define segmap_group_sizze_38221 (mainzisegmap_group_sizze_37602)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44800;
    int32_t local_tid_44801;
    int64_t group_sizze_44804;
    int32_t wave_sizze_44803;
    int32_t group_tid_44802;
    
    global_tid_44800 = get_global_id(0);
    local_tid_44801 = get_local_id(0);
    group_sizze_44804 = get_local_size(0);
    wave_sizze_44803 = LOCKSTEP_WIDTH;
    group_tid_44802 = get_group_id(0);
    
    int32_t phys_tid_37598;
    
    phys_tid_37598 = global_tid_44800;
    
    int64_t gtid_37595;
    
    gtid_37595 = squot64(sext_i32_i64(group_tid_44802) *
                         segmap_group_sizze_38221 +
                         sext_i32_i64(local_tid_44801), i32_res_30823 *
                         i32_res_30823);
    
    int64_t gtid_37596;
    
    gtid_37596 = squot64(sext_i32_i64(group_tid_44802) *
                         segmap_group_sizze_38221 +
                         sext_i32_i64(local_tid_44801) -
                         squot64(sext_i32_i64(group_tid_44802) *
                                 segmap_group_sizze_38221 +
                                 sext_i32_i64(local_tid_44801), i32_res_30823 *
                                 i32_res_30823) * (i32_res_30823 *
                                                   i32_res_30823),
                         i32_res_30823);
    
    int64_t gtid_37597;
    
    gtid_37597 = sext_i32_i64(group_tid_44802) * segmap_group_sizze_38221 +
        sext_i32_i64(local_tid_44801) - squot64(sext_i32_i64(group_tid_44802) *
                                                segmap_group_sizze_38221 +
                                                sext_i32_i64(local_tid_44801),
                                                i32_res_30823 * i32_res_30823) *
        (i32_res_30823 * i32_res_30823) -
        squot64(sext_i32_i64(group_tid_44802) * segmap_group_sizze_38221 +
                sext_i32_i64(local_tid_44801) -
                squot64(sext_i32_i64(group_tid_44802) *
                        segmap_group_sizze_38221 +
                        sext_i32_i64(local_tid_44801), i32_res_30823 *
                        i32_res_30823) * (i32_res_30823 * i32_res_30823),
                i32_res_30823) * i32_res_30823;
    if ((slt64(gtid_37595, m_30804) && slt64(gtid_37596, i32_res_30823)) &&
        slt64(gtid_37597, i32_res_30823)) {
        int64_t index_primexp_41440 = m_30954 * gtid_37596;
        int64_t i_38227 = add64(i32_res_30823, gtid_37597);
        int64_t new_index_38228 = i_38227 + index_primexp_41440;
        float defunc_0_f_res_38229 = ((__global
                                       float *) gauss_jordan_res_r_mem_43621)[gauss_jordan_res_r_ixfn_43616 +
                                                                              (gtid_37595 *
                                                                               gauss_jordan_res_r_ixfn_43617 +
                                                                               new_index_38228 *
                                                                               gauss_jordan_res_r_ixfn_43619)];
        
        ((__global float *) mem_43626)[gtid_37595 * (i32_res_30823 *
                                                     i32_res_30823) +
                                       gtid_37596 * i32_res_30823 +
                                       gtid_37597] = defunc_0_f_res_38229;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38221
}
__kernel void mainzisegmap_37817(__global int *global_failure, int64_t m_30804,
                                 int64_t nm_30955, int64_t ctx_param_ext_43579,
                                 int64_t ctx_param_ext_43580,
                                 int64_t ctx_param_ext_43582, __global
                                 unsigned char *mem_param_43584, __global
                                 unsigned char *mem_43604)
{
    #define segmap_group_sizze_38186 (mainzisegmap_group_sizze_37820)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44794;
    int32_t local_tid_44795;
    int64_t group_sizze_44798;
    int32_t wave_sizze_44797;
    int32_t group_tid_44796;
    
    global_tid_44794 = get_global_id(0);
    local_tid_44795 = get_local_id(0);
    group_sizze_44798 = get_local_size(0);
    wave_sizze_44797 = LOCKSTEP_WIDTH;
    group_tid_44796 = get_group_id(0);
    
    int32_t phys_tid_37817;
    
    phys_tid_37817 = global_tid_44794;
    
    int64_t gtid_37815;
    
    gtid_37815 = squot64(sext_i32_i64(group_tid_44796) *
                         segmap_group_sizze_38186 +
                         sext_i32_i64(local_tid_44795), nm_30955);
    
    int64_t gtid_37816;
    
    gtid_37816 = sext_i32_i64(group_tid_44796) * segmap_group_sizze_38186 +
        sext_i32_i64(local_tid_44795) - squot64(sext_i32_i64(group_tid_44796) *
                                                segmap_group_sizze_38186 +
                                                sext_i32_i64(local_tid_44795),
                                                nm_30955) * nm_30955;
    if (slt64(gtid_37815, m_30804) && slt64(gtid_37816, nm_30955)) {
        float write_value_38192 = ((__global float *) mem_43604)[gtid_37815 *
                                                                 nm_30955 +
                                                                 gtid_37816];
        
        if ((sle64(0, gtid_37815) && slt64(gtid_37815, m_30804)) && (sle64(0,
                                                                           gtid_37816) &&
                                                                     slt64(gtid_37816,
                                                                           nm_30955))) {
            ((__global float *) mem_param_43584)[ctx_param_ext_43579 +
                                                 (gtid_37815 *
                                                  ctx_param_ext_43580 +
                                                  gtid_37816 *
                                                  ctx_param_ext_43582)] =
                write_value_38192;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38186
}
__kernel void mainzisegmap_37871(__global int *global_failure, int64_t m_30804,
                                 int32_t k2p2zq_30821, int64_t nm_30955,
                                 int32_t i64_res_30963, int32_t i_38085,
                                 int64_t i_38087, int64_t ctx_param_ext_43579,
                                 int64_t ctx_param_ext_43580,
                                 int64_t ctx_param_ext_43582, __global
                                 unsigned char *mem_param_43584, __global
                                 unsigned char *mem_43600, __global
                                 unsigned char *mem_43604)
{
    #define segmap_group_sizze_38152 (mainzisegmap_group_sizze_37874)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44789;
    int32_t local_tid_44790;
    int64_t group_sizze_44793;
    int32_t wave_sizze_44792;
    int32_t group_tid_44791;
    
    global_tid_44789 = get_global_id(0);
    local_tid_44790 = get_local_id(0);
    group_sizze_44793 = get_local_size(0);
    wave_sizze_44792 = LOCKSTEP_WIDTH;
    group_tid_44791 = get_group_id(0);
    
    int32_t phys_tid_37871;
    
    phys_tid_37871 = global_tid_44789;
    
    int64_t gtid_37869;
    
    gtid_37869 = squot64(sext_i32_i64(group_tid_44791) *
                         segmap_group_sizze_38152 +
                         sext_i32_i64(local_tid_44790), nm_30955);
    
    int64_t gtid_37870;
    
    gtid_37870 = sext_i32_i64(group_tid_44791) * segmap_group_sizze_38152 +
        sext_i32_i64(local_tid_44790) - squot64(sext_i32_i64(group_tid_44791) *
                                                segmap_group_sizze_38152 +
                                                sext_i32_i64(local_tid_44790),
                                                nm_30955) * nm_30955;
    if (slt64(gtid_37869, m_30804) && slt64(gtid_37870, nm_30955)) {
        bool cond_38157 = ((__global bool *) mem_43600)[gtid_37869];
        int32_t defunc_0_f_res_38159 = sext_i64_i32(gtid_37870);
        int32_t defunc_0_f_res_38160 = sdiv32(defunc_0_f_res_38159,
                                              i64_res_30963);
        int32_t defunc_0_f_res_38161 = smod32(defunc_0_f_res_38159,
                                              i64_res_30963);
        float defunc_0_f_res_38162;
        
        if (cond_38157) {
            int32_t x_38163 = mul32(i64_res_30963, defunc_0_f_res_38160);
            int32_t i_38164 = add32(defunc_0_f_res_38161, x_38163);
            int64_t i_38165 = sext_i32_i64(i_38164);
            float defunc_0_f_res_t_res_38166 = ((__global
                                                 float *) mem_param_43584)[ctx_param_ext_43579 +
                                                                           (gtid_37869 *
                                                                            ctx_param_ext_43580 +
                                                                            i_38165 *
                                                                            ctx_param_ext_43582)];
            
            defunc_0_f_res_38162 = defunc_0_f_res_t_res_38166;
        } else {
            float v1_38156 = ((__global
                               float *) mem_param_43584)[ctx_param_ext_43579 +
                                                         (gtid_37869 *
                                                          ctx_param_ext_43580 +
                                                          i_38087 *
                                                          ctx_param_ext_43582)];
            int64_t j_38167 = sext_i32_i64(defunc_0_f_res_38161);
            float x_38168 = ((__global
                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                        (gtid_37869 *
                                                         ctx_param_ext_43580 +
                                                         j_38167 *
                                                         ctx_param_ext_43582)];
            float x_38169 = x_38168 / v1_38156;
            int32_t y_38170 = sub32(k2p2zq_30821, 1);
            bool cond_38171 = slt32(defunc_0_f_res_38160, y_38170);
            float defunc_0_f_res_f_res_38172;
            
            if (cond_38171) {
                int32_t x_38173 = add32(1, defunc_0_f_res_38160);
                int32_t x_38174 = mul32(i64_res_30963, x_38173);
                int32_t i_38175 = add32(defunc_0_f_res_38161, x_38174);
                int64_t i_38176 = sext_i32_i64(i_38175);
                float x_38177 = ((__global
                                  float *) mem_param_43584)[ctx_param_ext_43579 +
                                                            (gtid_37869 *
                                                             ctx_param_ext_43580 +
                                                             i_38176 *
                                                             ctx_param_ext_43582)];
                int32_t i_38178 = add32(i_38085, x_38174);
                int64_t i_38179 = sext_i32_i64(i_38178);
                float x_38180 = ((__global
                                  float *) mem_param_43584)[ctx_param_ext_43579 +
                                                            (gtid_37869 *
                                                             ctx_param_ext_43580 +
                                                             i_38179 *
                                                             ctx_param_ext_43582)];
                float y_38181 = x_38169 * x_38180;
                float defunc_0_f_res_f_res_t_res_38182 = x_38177 - y_38181;
                
                defunc_0_f_res_f_res_38172 = defunc_0_f_res_f_res_t_res_38182;
            } else {
                defunc_0_f_res_f_res_38172 = x_38169;
            }
            defunc_0_f_res_38162 = defunc_0_f_res_f_res_38172;
        }
        ((__global float *) mem_43604)[gtid_37869 * nm_30955 + gtid_37870] =
            defunc_0_f_res_38162;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38152
}
__kernel void mainzisegmap_37939(__global int *global_failure, int64_t m_30804,
                                 int64_t i_38087, int64_t ctx_param_ext_43579,
                                 int64_t ctx_param_ext_43580,
                                 int64_t ctx_param_ext_43582, __global
                                 unsigned char *mem_param_43584, __global
                                 unsigned char *mem_43600)
{
    #define segmap_group_sizze_38136 (mainzisegmap_group_sizze_37941)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44784;
    int32_t local_tid_44785;
    int64_t group_sizze_44788;
    int32_t wave_sizze_44787;
    int32_t group_tid_44786;
    
    global_tid_44784 = get_global_id(0);
    local_tid_44785 = get_local_id(0);
    group_sizze_44788 = get_local_size(0);
    wave_sizze_44787 = LOCKSTEP_WIDTH;
    group_tid_44786 = get_group_id(0);
    
    int32_t phys_tid_37939;
    
    phys_tid_37939 = global_tid_44784;
    
    int64_t gtid_37938;
    
    gtid_37938 = sext_i32_i64(group_tid_44786) * segmap_group_sizze_38136 +
        sext_i32_i64(local_tid_44785);
    if (slt64(gtid_37938, m_30804)) {
        float v1_38141 = ((__global
                           float *) mem_param_43584)[ctx_param_ext_43579 +
                                                     (gtid_37938 *
                                                      ctx_param_ext_43580 +
                                                      i_38087 *
                                                      ctx_param_ext_43582)];
        bool cond_38142 = v1_38141 == 0.0F;
        
        ((__global bool *) mem_43600)[gtid_37938] = cond_38142;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38136
}
__kernel void mainzisegmap_38030(__global int *global_failure, int64_t m_30804,
                                 int64_t i32_res_30823, int64_t m_30954,
                                 int64_t nm_30955, __global
                                 unsigned char *defunc_3_map_res_mem_43544,
                                 __global unsigned char *mem_43576)
{
    #define segmap_group_sizze_38070 (mainzisegmap_group_sizze_38033)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44751;
    int32_t local_tid_44752;
    int64_t group_sizze_44755;
    int32_t wave_sizze_44754;
    int32_t group_tid_44753;
    
    global_tid_44751 = get_global_id(0);
    local_tid_44752 = get_local_id(0);
    group_sizze_44755 = get_local_size(0);
    wave_sizze_44754 = LOCKSTEP_WIDTH;
    group_tid_44753 = get_group_id(0);
    
    int32_t phys_tid_38030;
    
    phys_tid_38030 = global_tid_44751;
    
    int64_t gtid_38028;
    
    gtid_38028 = squot64(sext_i32_i64(group_tid_44753) *
                         segmap_group_sizze_38070 +
                         sext_i32_i64(local_tid_44752), nm_30955);
    
    int64_t gtid_38029;
    
    gtid_38029 = sext_i32_i64(group_tid_44753) * segmap_group_sizze_38070 +
        sext_i32_i64(local_tid_44752) - squot64(sext_i32_i64(group_tid_44753) *
                                                segmap_group_sizze_38070 +
                                                sext_i32_i64(local_tid_44752),
                                                nm_30955) * nm_30955;
    if (slt64(gtid_38028, m_30804) && slt64(gtid_38029, nm_30955)) {
        int64_t defunc_0_f_res_38075 = sdiv64(gtid_38029, m_30954);
        int64_t defunc_0_f_res_38076 = smod64(gtid_38029, m_30954);
        bool cond_38077 = slt64(defunc_0_f_res_38076, i32_res_30823);
        float defunc_0_f_res_38078;
        
        if (cond_38077) {
            float defunc_0_f_res_t_res_38079 = ((__global
                                                 float *) defunc_3_map_res_mem_43544)[gtid_38028 *
                                                                                      (i32_res_30823 *
                                                                                       i32_res_30823) +
                                                                                      defunc_0_f_res_38075 *
                                                                                      i32_res_30823 +
                                                                                      defunc_0_f_res_38076];
            
            defunc_0_f_res_38078 = defunc_0_f_res_t_res_38079;
        } else {
            int64_t y_38080 = add64(i32_res_30823, defunc_0_f_res_38075);
            bool cond_38081 = defunc_0_f_res_38076 == y_38080;
            float defunc_0_f_res_f_res_38082;
            
            if (cond_38081) {
                defunc_0_f_res_f_res_38082 = 1.0F;
            } else {
                defunc_0_f_res_f_res_38082 = 0.0F;
            }
            defunc_0_f_res_38078 = defunc_0_f_res_f_res_38082;
        }
        ((__global float *) mem_43576)[gtid_38028 * nm_30955 + gtid_38029] =
            defunc_0_f_res_38078;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38070
}
__kernel void mainzisegmap_38236(__global int *global_failure, int64_t N_30803,
                                 int64_t m_30804, int32_t n_30808,
                                 int32_t k2p2zq_30821, int64_t i32_res_30823,
                                 int64_t num_groups_38257, __global
                                 unsigned char *binop_p_mem_43387, __global
                                 unsigned char *mem_43630, __global
                                 unsigned char *mem_43633, __global
                                 unsigned char *mem_43648)
{
    #define segmap_group_sizze_38256 (mainzisegmap_group_sizze_38238)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44808;
    int32_t local_tid_44809;
    int64_t group_sizze_44812;
    int32_t wave_sizze_44811;
    int32_t group_tid_44810;
    
    global_tid_44808 = get_global_id(0);
    local_tid_44809 = get_local_id(0);
    group_sizze_44812 = get_local_size(0);
    wave_sizze_44811 = LOCKSTEP_WIDTH;
    group_tid_44810 = get_group_id(0);
    
    int32_t phys_tid_38236;
    
    phys_tid_38236 = global_tid_44808;
    
    int32_t phys_group_id_44813;
    
    phys_group_id_44813 = get_group_id(0);
    for (int32_t i_44814 = 0; i_44814 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804, segmap_group_sizze_38256)) -
                   phys_group_id_44813, sext_i64_i32(num_groups_38257));
         i_44814++) {
        int32_t virt_group_id_44815 = phys_group_id_44813 + i_44814 *
                sext_i64_i32(num_groups_38257);
        int64_t gtid_38235 = sext_i32_i64(virt_group_id_44815) *
                segmap_group_sizze_38256 + sext_i32_i64(local_tid_44809);
        
        if (slt64(gtid_38235, m_30804)) {
            for (int32_t i_43359 = 0; i_43359 < k2p2zq_30821; i_43359++) {
                int64_t i_43257 = sext_i32_i64(i_43359);
                float defunc_2_reduce_res_38263;
                float redout_43259 = 0.0F;
                
                for (int32_t i_43358 = 0; i_43358 < n_30808; i_43358++) {
                    int64_t i_43260 = sext_i32_i64(i_43358);
                    float x_38268 = ((__global float *) mem_43630)[i_43260 *
                                                                   m_30804 +
                                                                   gtid_38235];
                    bool isnan_res_38269;
                    
                    isnan_res_38269 = futrts_isnan32(x_38268);
                    
                    float defunc_1_f_res_38270;
                    
                    if (isnan_res_38269) {
                        defunc_1_f_res_38270 = 0.0F;
                    } else {
                        float x_38267 = ((__global
                                          float *) binop_p_mem_43387)[i_43257 *
                                                                      N_30803 +
                                                                      i_43260];
                        float defunc_1_f_res_f_res_38271 = x_38267 * x_38268;
                        
                        defunc_1_f_res_38270 = defunc_1_f_res_f_res_38271;
                    }
                    
                    float defunc_1_op_res_38266 = defunc_1_f_res_38270 +
                          redout_43259;
                    float redout_tmp_44817 = defunc_1_op_res_38266;
                    
                    redout_43259 = redout_tmp_44817;
                }
                defunc_2_reduce_res_38263 = redout_43259;
                ((__global float *) mem_43633)[phys_tid_38236 + i_43257 *
                                               (num_groups_38257 *
                                                segmap_group_sizze_38256)] =
                    defunc_2_reduce_res_38263;
            }
            for (int64_t i_44818 = 0; i_44818 < i32_res_30823; i_44818++) {
                ((__global float *) mem_43648)[i_44818 * m_30804 + gtid_38235] =
                    ((__global float *) mem_43633)[phys_tid_38236 + i_44818 *
                                                   (num_groups_38257 *
                                                    segmap_group_sizze_38256)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38256
}
__kernel void mainzisegmap_38377(__global int *global_failure, int64_t m_30804,
                                 int32_t k2p2zq_30821, int64_t i32_res_30823,
                                 int64_t num_groups_38397, __global
                                 unsigned char *mem_43722, __global
                                 unsigned char *mem_43725, __global
                                 unsigned char *mem_43728, __global
                                 unsigned char *mem_43743)
{
    #define segmap_group_sizze_38396 (mainzisegmap_group_sizze_38379)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44896;
    int32_t local_tid_44897;
    int64_t group_sizze_44900;
    int32_t wave_sizze_44899;
    int32_t group_tid_44898;
    
    global_tid_44896 = get_global_id(0);
    local_tid_44897 = get_local_id(0);
    group_sizze_44900 = get_local_size(0);
    wave_sizze_44899 = LOCKSTEP_WIDTH;
    group_tid_44898 = get_group_id(0);
    
    int32_t phys_tid_38377;
    
    phys_tid_38377 = global_tid_44896;
    
    int32_t phys_group_id_44901;
    
    phys_group_id_44901 = get_group_id(0);
    for (int32_t i_44902 = 0; i_44902 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804, segmap_group_sizze_38396)) -
                   phys_group_id_44901, sext_i64_i32(num_groups_38397));
         i_44902++) {
        int32_t virt_group_id_44903 = phys_group_id_44901 + i_44902 *
                sext_i64_i32(num_groups_38397);
        int64_t gtid_38376 = sext_i32_i64(virt_group_id_44903) *
                segmap_group_sizze_38396 + sext_i32_i64(local_tid_44897);
        
        if (slt64(gtid_38376, m_30804)) {
            for (int32_t i_43361 = 0; i_43361 < k2p2zq_30821; i_43361++) {
                int64_t i_43267 = sext_i32_i64(i_43361);
                float defunc_0_f_res_38404;
                float redout_43269 = 0.0F;
                
                for (int32_t i_43360 = 0; i_43360 < k2p2zq_30821; i_43360++) {
                    int64_t i_43270 = sext_i32_i64(i_43360);
                    float x_38408 = ((__global float *) mem_43725)[i_43270 *
                                                                   m_30804 +
                                                                   gtid_38376];
                    float x_38409 = ((__global float *) mem_43722)[i_43267 *
                                                                   (m_30804 *
                                                                    i32_res_30823) +
                                                                   i_43270 *
                                                                   m_30804 +
                                                                   gtid_38376];
                    float defunc_1_f_res_38410 = x_38408 * x_38409;
                    float defunc_1_op_res_38407 = defunc_1_f_res_38410 +
                          redout_43269;
                    float redout_tmp_44905 = defunc_1_op_res_38407;
                    
                    redout_43269 = redout_tmp_44905;
                }
                defunc_0_f_res_38404 = redout_43269;
                ((__global float *) mem_43728)[phys_tid_38377 + i_43267 *
                                               (num_groups_38397 *
                                                segmap_group_sizze_38396)] =
                    defunc_0_f_res_38404;
            }
            for (int64_t i_44906 = 0; i_44906 < i32_res_30823; i_44906++) {
                ((__global float *) mem_43743)[i_44906 * m_30804 + gtid_38376] =
                    ((__global float *) mem_43728)[phys_tid_38377 + i_44906 *
                                                   (num_groups_38397 *
                                                    segmap_group_sizze_38396)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38396
}
__kernel void mainzisegmap_38509(__global int *global_failure, int64_t N_30803,
                                 int64_t m_30804, int32_t k2p2zq_30821,
                                 int64_t i32_res_30823,
                                 int64_t num_groups_38528, __global
                                 unsigned char *mem_43394, __global
                                 unsigned char *mem_43814, __global
                                 unsigned char *mem_43817, __global
                                 unsigned char *mem_43832)
{
    #define segmap_group_sizze_38527 (mainzisegmap_group_sizze_38511)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44984;
    int32_t local_tid_44985;
    int64_t group_sizze_44988;
    int32_t wave_sizze_44987;
    int32_t group_tid_44986;
    
    global_tid_44984 = get_global_id(0);
    local_tid_44985 = get_local_id(0);
    group_sizze_44988 = get_local_size(0);
    wave_sizze_44987 = LOCKSTEP_WIDTH;
    group_tid_44986 = get_group_id(0);
    
    int32_t phys_tid_38509;
    
    phys_tid_38509 = global_tid_44984;
    
    int32_t phys_group_id_44989;
    
    phys_group_id_44989 = get_group_id(0);
    for (int32_t i_44990 = 0; i_44990 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804, segmap_group_sizze_38527)) -
                   phys_group_id_44989, sext_i64_i32(num_groups_38528));
         i_44990++) {
        int32_t virt_group_id_44991 = phys_group_id_44989 + i_44990 *
                sext_i64_i32(num_groups_38528);
        int64_t gtid_38508 = sext_i32_i64(virt_group_id_44991) *
                segmap_group_sizze_38527 + sext_i32_i64(local_tid_44985);
        
        if (slt64(gtid_38508, m_30804)) {
            for (int64_t i_43277 = 0; i_43277 < N_30803; i_43277++) {
                float defunc_0_f_res_38534;
                float redout_43279 = 0.0F;
                
                for (int32_t i_43364 = 0; i_43364 < k2p2zq_30821; i_43364++) {
                    int64_t i_43280 = sext_i32_i64(i_43364);
                    float x_38538 = ((__global float *) mem_43814)[i_43280 *
                                                                   m_30804 +
                                                                   gtid_38508];
                    float x_38539 = ((__global float *) mem_43394)[i_43277 *
                                                                   i32_res_30823 +
                                                                   i_43280];
                    float defunc_1_f_res_38540 = x_38538 * x_38539;
                    float defunc_1_op_res_38537 = defunc_1_f_res_38540 +
                          redout_43279;
                    float redout_tmp_44993 = defunc_1_op_res_38537;
                    
                    redout_43279 = redout_tmp_44993;
                }
                defunc_0_f_res_38534 = redout_43279;
                ((__global float *) mem_43817)[phys_tid_38509 + i_43277 *
                                               (num_groups_38528 *
                                                segmap_group_sizze_38527)] =
                    defunc_0_f_res_38534;
            }
            for (int64_t i_44994 = 0; i_44994 < N_30803; i_44994++) {
                ((__global float *) mem_43832)[i_44994 * m_30804 + gtid_38508] =
                    ((__global float *) mem_43817)[phys_tid_38509 + i_44994 *
                                                   (num_groups_38528 *
                                                    segmap_group_sizze_38527)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38527
}
__kernel void mainzisegmap_38789(__global int *global_failure, int64_t N_30803,
                                 int64_t m_30804, __global
                                 unsigned char *mem_43908, __global
                                 unsigned char *mem_43911, __global
                                 unsigned char *mem_43934, __global
                                 unsigned char *mem_43937)
{
    #define segmap_group_sizze_38955 (mainzisegmap_group_sizze_38792)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45167;
    int32_t local_tid_45168;
    int64_t group_sizze_45171;
    int32_t wave_sizze_45170;
    int32_t group_tid_45169;
    
    global_tid_45167 = get_global_id(0);
    local_tid_45168 = get_local_id(0);
    group_sizze_45171 = get_local_size(0);
    wave_sizze_45170 = LOCKSTEP_WIDTH;
    group_tid_45169 = get_group_id(0);
    
    int32_t phys_tid_38789;
    
    phys_tid_38789 = global_tid_45167;
    
    int64_t gtid_38787;
    
    gtid_38787 = squot64(sext_i32_i64(group_tid_45169) *
                         segmap_group_sizze_38955 +
                         sext_i32_i64(local_tid_45168), N_30803);
    
    int64_t gtid_38788;
    
    gtid_38788 = sext_i32_i64(group_tid_45169) * segmap_group_sizze_38955 +
        sext_i32_i64(local_tid_45168) - squot64(sext_i32_i64(group_tid_45169) *
                                                segmap_group_sizze_38955 +
                                                sext_i32_i64(local_tid_45168),
                                                N_30803) * N_30803;
    if (slt64(gtid_38787, m_30804) && slt64(gtid_38788, N_30803)) {
        float x_38963 = ((__global float *) mem_43937)[gtid_38787 * N_30803 +
                                                       gtid_38788];
        int32_t index_primexp_41448 = sext_i64_i32(gtid_38788);
        bool isnan_res_38966;
        
        isnan_res_38966 = futrts_isnan32(x_38963);
        
        bool defunc_0_p_res_38967 = !isnan_res_38966;
        int64_t defunc_1_f_res_38968;
        
        if (defunc_0_p_res_38967) {
            int64_t x_38964 = ((__global int64_t *) mem_43934)[gtid_38787 *
                                                               N_30803 +
                                                               gtid_38788];
            int64_t defunc_1_f_res_t_res_38969 = sub64(x_38964, 1);
            
            defunc_1_f_res_38968 = defunc_1_f_res_t_res_38969;
        } else {
            defunc_1_f_res_38968 = -1;
        }
        if ((sle64(0, gtid_38787) && slt64(gtid_38787, m_30804)) && (sle64(0,
                                                                           defunc_1_f_res_38968) &&
                                                                     slt64(defunc_1_f_res_38968,
                                                                           N_30803))) {
            ((__global int32_t *) mem_43911)[gtid_38787 * N_30803 +
                                             defunc_1_f_res_38968] =
                index_primexp_41448;
        }
        if ((sle64(0, gtid_38787) && slt64(gtid_38787, m_30804)) && (sle64(0,
                                                                           defunc_1_f_res_38968) &&
                                                                     slt64(defunc_1_f_res_38968,
                                                                           N_30803))) {
            ((__global float *) mem_43908)[gtid_38787 * N_30803 +
                                           defunc_1_f_res_38968] = x_38963;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38955
}
__kernel void mainzisegmap_38865(__global int *global_failure, int64_t N_30803,
                                 int64_t m_30804, int64_t i_31070, __global
                                 unsigned char *mem_43934, __global
                                 unsigned char *mem_43940)
{
    #define segmap_group_sizze_38919 (mainzisegmap_group_sizze_38867)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45162;
    int32_t local_tid_45163;
    int64_t group_sizze_45166;
    int32_t wave_sizze_45165;
    int32_t group_tid_45164;
    
    global_tid_45162 = get_global_id(0);
    local_tid_45163 = get_local_id(0);
    group_sizze_45166 = get_local_size(0);
    wave_sizze_45165 = LOCKSTEP_WIDTH;
    group_tid_45164 = get_group_id(0);
    
    int32_t phys_tid_38865;
    
    phys_tid_38865 = global_tid_45162;
    
    int64_t gtid_38864;
    
    gtid_38864 = sext_i32_i64(group_tid_45164) * segmap_group_sizze_38919 +
        sext_i32_i64(local_tid_45163);
    if (slt64(gtid_38864, m_30804)) {
        int64_t last_res_38923 = ((__global int64_t *) mem_43934)[gtid_38864 *
                                                                  N_30803 +
                                                                  i_31070];
        int32_t defunc_0_f_res_38924 = sext_i64_i32(last_res_38923);
        
        ((__global int32_t *) mem_43940)[gtid_38864] = defunc_0_f_res_38924;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38919
}
__kernel void mainzisegmap_39116(__global int *global_failure, int64_t m_30804,
                                 float hfrac_30810, int32_t k2p2_30819, __global
                                 unsigned char *mem_44010, __global
                                 unsigned char *mem_44013, __global
                                 unsigned char *mem_44016, __global
                                 unsigned char *mem_44018)
{
    #define segmap_group_sizze_39201 (mainzisegmap_group_sizze_39118)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45322;
    int32_t local_tid_45323;
    int64_t group_sizze_45326;
    int32_t wave_sizze_45325;
    int32_t group_tid_45324;
    
    global_tid_45322 = get_global_id(0);
    local_tid_45323 = get_local_id(0);
    group_sizze_45326 = get_local_size(0);
    wave_sizze_45325 = LOCKSTEP_WIDTH;
    group_tid_45324 = get_group_id(0);
    
    int32_t phys_tid_39116;
    
    phys_tid_39116 = global_tid_45322;
    
    int64_t gtid_39115;
    
    gtid_39115 = sext_i32_i64(group_tid_45324) * segmap_group_sizze_39201 +
        sext_i32_i64(local_tid_45323);
    if (slt64(gtid_39115, m_30804)) {
        int32_t defunc_0_f_res_39205 = ((__global
                                         int32_t *) mem_44010)[gtid_39115];
        float defunc_0_f_res_39206 = ((__global float *) mem_44013)[gtid_39115];
        int32_t r32_arg_39207 = sub32(defunc_0_f_res_39205, k2p2_30819);
        float i32_res_39208 = sitofp_i32_f32(r32_arg_39207);
        float sqrt_arg_39209 = defunc_0_f_res_39206 / i32_res_39208;
        float sqrt_res_39210;
        
        sqrt_res_39210 = futrts_sqrt32(sqrt_arg_39209);
        
        float i32_res_39211 = sitofp_i32_f32(defunc_0_f_res_39205);
        float t32_arg_39212 = hfrac_30810 * i32_res_39211;
        int32_t f32_res_39213 = fptosi_f32_i32(t32_arg_39212);
        
        ((__global int32_t *) mem_44016)[gtid_39115] = f32_res_39213;
        ((__global float *) mem_44018)[gtid_39115] = sqrt_res_39210;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39201
}
__kernel void mainzisegmap_39387(__global int *global_failure, float lam_30811,
                                 int64_t iota32_arg_31190, int32_t x_31195,
                                 float i32_res_31203, __global
                                 unsigned char *mappingindices_mem_43377,
                                 __global unsigned char *mem_44076, __global
                                 unsigned char *mem_44078)
{
    #define segmap_group_sizze_39406 (mainzisegmap_group_sizze_39389)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45432;
    int32_t local_tid_45433;
    int64_t group_sizze_45436;
    int32_t wave_sizze_45435;
    int32_t group_tid_45434;
    
    global_tid_45432 = get_global_id(0);
    local_tid_45433 = get_local_id(0);
    group_sizze_45436 = get_local_size(0);
    wave_sizze_45435 = LOCKSTEP_WIDTH;
    group_tid_45434 = get_group_id(0);
    
    int32_t phys_tid_39387;
    
    phys_tid_39387 = global_tid_45432;
    
    int64_t gtid_39386;
    
    gtid_39386 = sext_i32_i64(group_tid_45434) * segmap_group_sizze_39406 +
        sext_i32_i64(local_tid_45433);
    if (slt64(gtid_39386, iota32_arg_31190)) {
        int32_t defunc_0_f_res_39411 = sext_i64_i32(gtid_39386);
        int32_t t_39412 = add32(x_31195, defunc_0_f_res_39411);
        int32_t i_39413 = sub32(t_39412, 1);
        int64_t i_39414 = sext_i32_i64(i_39413);
        int32_t time_39415 = ((__global
                               int32_t *) mappingindices_mem_43377)[i_39414];
        float i32_res_39416 = sitofp_i32_f32(time_39415);
        float logplus_arg_39417 = i32_res_39416 / i32_res_31203;
        bool cond_39418 = 2.7182817F < logplus_arg_39417;
        float logplus_res_39419;
        
        if (cond_39418) {
            float log_res_39420;
            
            log_res_39420 = futrts_log32(logplus_arg_39417);
            logplus_res_39419 = log_res_39420;
        } else {
            logplus_res_39419 = 1.0F;
        }
        
        float sqrt_res_39421;
        
        sqrt_res_39421 = futrts_sqrt32(logplus_res_39419);
        
        float defunc_0_f_res_39422 = lam_30811 * sqrt_res_39421;
        
        ((__global int32_t *) mem_44076)[gtid_39386] = defunc_0_f_res_39411;
        ((__global float *) mem_44078)[gtid_39386] = defunc_0_f_res_39422;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39406
}
__kernel void mainzisegmap_39460(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_30803,
                                 int64_t m_30804, int32_t n_30808,
                                 int64_t iota32_arg_31190, int32_t iters_31221,
                                 int64_t i_31223,
                                 int64_t segmap_usable_groups_39699, __global
                                 unsigned char *defunc_4_map_res_mem_43942,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_43943,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_43944,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44022,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44023,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44024,
                                 __global
                                 unsigned char *defunc_0_f_res_mem_44073,
                                 __global unsigned char *mem_44078, __global
                                 unsigned char *mem_44081, __global
                                 unsigned char *mem_44100, __global
                                 unsigned char *mem_44102, __global
                                 unsigned char *mem_44104, __global
                                 unsigned char *mem_44106, __global
                                 unsigned char *mem_44108, __global
                                 unsigned char *mem_44170, __global
                                 unsigned char *mem_44189, __global
                                 unsigned char *mem_44191, __global
                                 unsigned char *mem_44193, __global
                                 unsigned char *double_buffer_mem_44479)
{
    #define segmap_group_sizze_39698 (mainzisegmap_group_sizze_39462)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45441;
    int32_t local_tid_45442;
    int64_t group_sizze_45445;
    int32_t wave_sizze_45444;
    int32_t group_tid_45443;
    
    global_tid_45441 = get_global_id(0);
    local_tid_45442 = get_local_id(0);
    group_sizze_45445 = get_local_size(0);
    wave_sizze_45444 = LOCKSTEP_WIDTH;
    group_tid_45443 = get_group_id(0);
    
    int32_t phys_tid_39460;
    
    phys_tid_39460 = global_tid_45441;
    
    int64_t gtid_39459;
    
    gtid_39459 = sext_i32_i64(group_tid_45443) * segmap_group_sizze_39698 +
        sext_i32_i64(local_tid_45442);
    if (slt64(gtid_39459, m_30804)) {
        int32_t x_39703 = ((__global
                            int32_t *) defunc_4_map_res_mem_43942)[gtid_39459];
        int32_t x_39704 = ((__global
                            int32_t *) defunc_3_map_res_mem_44023)[gtid_39459];
        float x_39705 = ((__global
                          float *) defunc_3_map_res_mem_44024)[gtid_39459];
        int32_t x_39706 = ((__global
                            int32_t *) defunc_3_map_res_mem_44022)[gtid_39459];
        float x_39707 = ((__global
                          float *) defunc_0_f_res_mem_44073)[gtid_39459];
        int32_t y_39710 = sub32(x_39703, x_39704);
        float i32_res_39711 = sitofp_i32_f32(x_39704);
        float sqrt_res_39712;
        
        sqrt_res_39712 = futrts_sqrt32(i32_res_39711);
        
        float y_39713 = x_39705 * sqrt_res_39712;
        float inpacc_39714;
        bool defunc_0_f_res_39715;
        int32_t defunc_0_f_res_39716;
        float defunc_0_f_res_39717;
        float inpacc_39719;
        bool inpacc_39720;
        int32_t inpacc_39721;
        float inpacc_39722;
        
        inpacc_39719 = 0.0F;
        inpacc_39720 = 0;
        inpacc_39721 = -1;
        inpacc_39722 = 0.0F;
        for (int64_t i_43225 = 0; i_43225 < iota32_arg_31190; i_43225++) {
            int32_t index_primexp_43234 = sext_i64_i32(i_43225);
            bool cond_39730 = sle32(y_39710, index_primexp_43234);
            float defunc_0_f_res_39731;
            
            if (cond_39730) {
                defunc_0_f_res_39731 = 0.0F;
            } else {
                bool cond_39732 = index_primexp_43234 == 0;
                float defunc_0_f_res_f_res_39733;
                
                if (cond_39732) {
                    defunc_0_f_res_f_res_39733 = x_39707;
                } else {
                    int32_t i_39734 = add32(x_39704, index_primexp_43234);
                    int64_t i_39735 = sext_i32_i64(i_39734);
                    float x_39736 = ((__global
                                      float *) defunc_4_map_res_mem_43943)[gtid_39459 *
                                                                           N_30803 +
                                                                           i_39735];
                    int32_t x_39737 = sub32(x_39704, x_39706);
                    int32_t i_39738 = add32(x_39737, index_primexp_43234);
                    int64_t i_39739 = sext_i32_i64(i_39738);
                    float y_39740 = ((__global
                                      float *) defunc_4_map_res_mem_43943)[gtid_39459 *
                                                                           N_30803 +
                                                                           i_39739];
                    float defunc_0_f_res_f_res_f_res_39741 = x_39736 - y_39740;
                    
                    defunc_0_f_res_f_res_39733 =
                        defunc_0_f_res_f_res_f_res_39741;
                }
                defunc_0_f_res_39731 = defunc_0_f_res_f_res_39733;
            }
            
            float defunc_1_op_res_39746 = inpacc_39719 + defunc_0_f_res_39731;
            float x_39765 = ((__global float *) mem_44078)[i_43225];
            float defunc_0_f_res_39768 = defunc_1_op_res_39746 / y_39713;
            bool cond_39769 = slt32(index_primexp_43234, y_39710);
            bool isnan_res_39770;
            
            isnan_res_39770 = futrts_isnan32(defunc_0_f_res_39768);
            
            bool cond_t_res_39771 = !isnan_res_39770;
            bool x_39772 = cond_39769 && cond_t_res_39771;
            float abs_res_39773 = (float) fabs(defunc_0_f_res_39768);
            bool defunc_2_f_res_t_res_39774 = x_39765 < abs_res_39773;
            bool x_39775 = x_39772 && defunc_2_f_res_t_res_39774;
            float defunc_1_f_res_39776;
            
            if (cond_39769) {
                defunc_1_f_res_39776 = defunc_0_f_res_39768;
            } else {
                defunc_1_f_res_39776 = 0.0F;
            }
            
            int32_t x_39754 = index_primexp_43234;
            bool x_39758 = x_39775 && x_39775;
            int32_t defunc_1_op_res_f_res_39762;
            
            if (x_39775) {
                defunc_1_op_res_f_res_39762 = x_39754;
            } else {
                defunc_1_op_res_f_res_39762 = -1;
            }
            
            bool defunc_1_op_res_39777;
            int32_t defunc_1_op_res_39778;
            
            if (inpacc_39720) {
                defunc_1_op_res_39777 = inpacc_39720;
                defunc_1_op_res_39778 = inpacc_39721;
            } else {
                bool x_39779 = x_39758 && x_39758;
                bool x_39780 = !x_39758;
                bool y_39781 = inpacc_39720 && x_39780;
                bool defunc_1_op_res_f_res_39782 = x_39779 || y_39781;
                int32_t defunc_1_op_res_f_res_39783;
                
                if (x_39758) {
                    defunc_1_op_res_f_res_39783 = defunc_1_op_res_f_res_39762;
                } else {
                    defunc_1_op_res_f_res_39783 = inpacc_39721;
                }
                defunc_1_op_res_39777 = defunc_1_op_res_f_res_39782;
                defunc_1_op_res_39778 = defunc_1_op_res_f_res_39783;
            }
            
            float defunc_1_op_res_39784 = inpacc_39722 + defunc_1_f_res_39776;
            float inpacc_tmp_45446 = defunc_1_op_res_39746;
            bool inpacc_tmp_45447 = defunc_1_op_res_39777;
            int32_t inpacc_tmp_45448 = defunc_1_op_res_39778;
            float inpacc_tmp_45449 = defunc_1_op_res_39784;
            
            inpacc_39719 = inpacc_tmp_45446;
            inpacc_39720 = inpacc_tmp_45447;
            inpacc_39721 = inpacc_tmp_45448;
            inpacc_39722 = inpacc_tmp_45449;
        }
        inpacc_39714 = inpacc_39719;
        defunc_0_f_res_39715 = inpacc_39720;
        defunc_0_f_res_39716 = inpacc_39721;
        defunc_0_f_res_39717 = inpacc_39722;
        
        bool cond_39785 = y_39710 == 0;
        float defunc_0_f_res_39786;
        
        if (cond_39785) {
            defunc_0_f_res_39786 = 0.0F;
        } else {
            float i32_res_39787 = sitofp_i32_f32(y_39710);
            float defunc_0_f_res_f_res_39788 = defunc_0_f_res_39717 /
                  i32_res_39787;
            
            defunc_0_f_res_39786 = defunc_0_f_res_f_res_39788;
        }
        for (int64_t i_43301 = 0; i_43301 < iota32_arg_31190; i_43301++) {
            int32_t index_primexp_43368 = sext_i64_i32(i_43301);
            bool cond_39791 = slt32(index_primexp_43368, y_39710);
            bool cond_39792;
            
            if (cond_39791) {
                int32_t i_39793 = add32(x_39704, index_primexp_43368);
                int64_t i_39794 = sext_i32_i64(i_39793);
                bool x_39795 = sle64(0, i_39794);
                bool y_39796 = slt64(i_39794, N_30803);
                bool bounds_check_39797 = x_39795 && y_39796;
                bool index_certs_39798;
                
                if (!bounds_check_39797) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 1) ==
                            -1) {
                            global_failure_args[0] = i_39794;
                            global_failure_args[1] = N_30803;
                            ;
                        }
                        return;
                    }
                }
                
                float isnan_arg_39799 = ((__global
                                          float *) defunc_4_map_res_mem_43943)[gtid_39459 *
                                                                               N_30803 +
                                                                               i_39794];
                bool isnan_res_39800;
                
                isnan_res_39800 = futrts_isnan32(isnan_arg_39799);
                
                bool cond_t_res_39801 = !isnan_res_39800;
                
                cond_39792 = cond_t_res_39801;
            } else {
                cond_39792 = 0;
            }
            
            float defunc_0_f_res_39802;
            
            if (cond_39792) {
                int32_t i_39803 = add32(x_39704, index_primexp_43368);
                int64_t i_39804 = sext_i32_i64(i_39803);
                bool x_39805 = sle64(0, i_39804);
                bool y_39806 = slt64(i_39804, N_30803);
                bool bounds_check_39807 = x_39805 && y_39806;
                bool index_certs_39808;
                
                if (!bounds_check_39807) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                            -1) {
                            global_failure_args[0] = i_39804;
                            global_failure_args[1] = N_30803;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_t_res_39809 = ((__global
                                                     float *) defunc_4_map_res_mem_43943)[gtid_39459 *
                                                                                          N_30803 +
                                                                                          i_39804];
                
                defunc_0_f_res_39802 = defunc_0_f_res_t_res_39809;
            } else {
                defunc_0_f_res_39802 = INFINITY;
            }
            ((__global float *) mem_44081)[phys_tid_39460 + i_43301 *
                                           (segmap_usable_groups_39699 *
                                            segmap_group_sizze_39698)] =
                defunc_0_f_res_39802;
        }
        for (int64_t i_45451 = 0; i_45451 < iota32_arg_31190; i_45451++) {
            ((__global float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                         i_45451 *
                                                         (segmap_usable_groups_39699 *
                                                          segmap_group_sizze_39698)] =
                ((__global float *) mem_44081)[phys_tid_39460 + i_45451 *
                                               (segmap_usable_groups_39699 *
                                                segmap_group_sizze_39698)];
        }
        for (int32_t i_39811 = 0; i_39811 < iters_31221; i_39811++) {
            int32_t defunc_2_radix_sort_step_arg_39813 = mul32(2, i_39811);
            int32_t defunc_0_get_bit_arg_39814 = add32(1,
                                                       defunc_2_radix_sort_step_arg_39813);
            bool cond_f_res_39815 = defunc_0_get_bit_arg_39814 == 31;
            bool cond_f_res_39816 = defunc_2_radix_sort_step_arg_39813 == 31;
            int64_t discard_43323;
            int64_t discard_43324;
            int64_t discard_43325;
            int64_t discard_43326;
            int64_t scanacc_43308;
            int64_t scanacc_43309;
            int64_t scanacc_43310;
            int64_t scanacc_43311;
            
            scanacc_43308 = 0;
            scanacc_43309 = 0;
            scanacc_43310 = 0;
            scanacc_43311 = 0;
            for (int64_t i_43317 = 0; i_43317 < iota32_arg_31190; i_43317++) {
                float x_39834 = ((__global
                                  float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                                    i_43317 *
                                                                    (segmap_usable_groups_39699 *
                                                                     segmap_group_sizze_39698)];
                int32_t i32_arg_39835;
                
                i32_arg_39835 = futrts_to_bits32(x_39834);
                
                int32_t unsign_arg_39836 = ashr32(i32_arg_39835,
                                                  defunc_0_get_bit_arg_39814);
                int32_t unsign_arg_39837 = 1 & unsign_arg_39836;
                int32_t unsign_arg_39838 = ashr32(i32_arg_39835, 31);
                int32_t unsign_arg_39839 = 1 & unsign_arg_39838;
                bool cond_39840 = unsign_arg_39839 == 1;
                bool x_39841 = !cond_39840;
                bool y_39842 = cond_f_res_39815 && x_39841;
                bool cond_39843 = cond_39840 || y_39842;
                int32_t defunc_1_get_bit_res_39844;
                
                if (cond_39843) {
                    int32_t defunc_1_get_bit_res_t_res_39845 = 1 ^
                            unsign_arg_39837;
                    
                    defunc_1_get_bit_res_39844 =
                        defunc_1_get_bit_res_t_res_39845;
                } else {
                    defunc_1_get_bit_res_39844 = unsign_arg_39837;
                }
                
                int32_t x_39846 = mul32(2, defunc_1_get_bit_res_39844);
                int32_t unsign_arg_39847 = ashr32(i32_arg_39835,
                                                  defunc_2_radix_sort_step_arg_39813);
                int32_t unsign_arg_39848 = 1 & unsign_arg_39847;
                bool y_39849 = cond_f_res_39816 && x_39841;
                bool cond_39850 = cond_39840 || y_39849;
                int32_t defunc_1_get_bit_res_39851;
                
                if (cond_39850) {
                    int32_t defunc_1_get_bit_res_t_res_39852 = 1 ^
                            unsign_arg_39848;
                    
                    defunc_1_get_bit_res_39851 =
                        defunc_1_get_bit_res_t_res_39852;
                } else {
                    defunc_1_get_bit_res_39851 = unsign_arg_39848;
                }
                
                int32_t defunc_0_f_res_39853 = add32(x_39846,
                                                     defunc_1_get_bit_res_39851);
                bool cond_39854 = defunc_0_f_res_39853 == 0;
                int64_t defunc_0_f_res_39855 = btoi_bool_i64(cond_39854);
                int64_t defunc_0_f_res_39856;
                int64_t defunc_0_f_res_39857;
                int64_t defunc_0_f_res_39858;
                
                if (cond_39854) {
                    defunc_0_f_res_39856 = 0;
                    defunc_0_f_res_39857 = 0;
                    defunc_0_f_res_39858 = 0;
                } else {
                    bool cond_39859 = defunc_0_f_res_39853 == 1;
                    int64_t defunc_0_f_res_f_res_39860 =
                            btoi_bool_i64(cond_39859);
                    int64_t defunc_0_f_res_f_res_39861;
                    int64_t defunc_0_f_res_f_res_39862;
                    
                    if (cond_39859) {
                        defunc_0_f_res_f_res_39861 = 0;
                        defunc_0_f_res_f_res_39862 = 0;
                    } else {
                        bool cond_39863 = defunc_0_f_res_39853 == 2;
                        int64_t defunc_0_f_res_f_res_f_res_39864 =
                                btoi_bool_i64(cond_39863);
                        bool cond_neg_39865 = !cond_39863;
                        int64_t defunc_0_f_res_f_res_f_res_39866 =
                                btoi_bool_i64(cond_neg_39865);
                        
                        defunc_0_f_res_f_res_39861 =
                            defunc_0_f_res_f_res_f_res_39864;
                        defunc_0_f_res_f_res_39862 =
                            defunc_0_f_res_f_res_f_res_39866;
                    }
                    defunc_0_f_res_39856 = defunc_0_f_res_f_res_39860;
                    defunc_0_f_res_39857 = defunc_0_f_res_f_res_39861;
                    defunc_0_f_res_39858 = defunc_0_f_res_f_res_39862;
                }
                
                int64_t defunc_1_op_res_39830 = add64(defunc_0_f_res_39855,
                                                      scanacc_43308);
                int64_t defunc_1_op_res_39831 = add64(defunc_0_f_res_39856,
                                                      scanacc_43309);
                int64_t defunc_1_op_res_39832 = add64(defunc_0_f_res_39857,
                                                      scanacc_43310);
                int64_t defunc_1_op_res_39833 = add64(defunc_0_f_res_39858,
                                                      scanacc_43311);
                
                ((__global int64_t *) mem_44100)[phys_tid_39460 + i_43317 *
                                                 (segmap_usable_groups_39699 *
                                                  segmap_group_sizze_39698)] =
                    defunc_1_op_res_39830;
                ((__global int64_t *) mem_44102)[phys_tid_39460 + i_43317 *
                                                 (segmap_usable_groups_39699 *
                                                  segmap_group_sizze_39698)] =
                    defunc_1_op_res_39831;
                ((__global int64_t *) mem_44104)[phys_tid_39460 + i_43317 *
                                                 (segmap_usable_groups_39699 *
                                                  segmap_group_sizze_39698)] =
                    defunc_1_op_res_39832;
                ((__global int64_t *) mem_44106)[phys_tid_39460 + i_43317 *
                                                 (segmap_usable_groups_39699 *
                                                  segmap_group_sizze_39698)] =
                    defunc_1_op_res_39833;
                ((__global int32_t *) mem_44108)[phys_tid_39460 + i_43317 *
                                                 (segmap_usable_groups_39699 *
                                                  segmap_group_sizze_39698)] =
                    defunc_0_f_res_39853;
                
                int64_t scanacc_tmp_45453 = defunc_1_op_res_39830;
                int64_t scanacc_tmp_45454 = defunc_1_op_res_39831;
                int64_t scanacc_tmp_45455 = defunc_1_op_res_39832;
                int64_t scanacc_tmp_45456 = defunc_1_op_res_39833;
                
                scanacc_43308 = scanacc_tmp_45453;
                scanacc_43309 = scanacc_tmp_45454;
                scanacc_43310 = scanacc_tmp_45455;
                scanacc_43311 = scanacc_tmp_45456;
            }
            discard_43323 = scanacc_43308;
            discard_43324 = scanacc_43309;
            discard_43325 = scanacc_43310;
            discard_43326 = scanacc_43311;
            
            int64_t last_res_39867 = ((__global
                                       int64_t *) mem_44100)[phys_tid_39460 +
                                                             i_31223 *
                                                             (segmap_usable_groups_39699 *
                                                              segmap_group_sizze_39698)];
            int64_t last_res_39868 = ((__global
                                       int64_t *) mem_44102)[phys_tid_39460 +
                                                             i_31223 *
                                                             (segmap_usable_groups_39699 *
                                                              segmap_group_sizze_39698)];
            int64_t last_res_39869 = ((__global
                                       int64_t *) mem_44104)[phys_tid_39460 +
                                                             i_31223 *
                                                             (segmap_usable_groups_39699 *
                                                              segmap_group_sizze_39698)];
            
            for (int64_t i_45462 = 0; i_45462 < iota32_arg_31190; i_45462++) {
                ((__global float *) mem_44170)[phys_tid_39460 + i_45462 *
                                               (segmap_usable_groups_39699 *
                                                segmap_group_sizze_39698)] =
                    ((__global
                      float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                        i_45462 *
                                                        (segmap_usable_groups_39699 *
                                                         segmap_group_sizze_39698)];
            }
            for (int64_t write_iter_43327 = 0; write_iter_43327 <
                 iota32_arg_31190; write_iter_43327++) {
                int32_t write_iv_43329 = ((__global
                                           int32_t *) mem_44108)[phys_tid_39460 +
                                                                 write_iter_43327 *
                                                                 (segmap_usable_groups_39699 *
                                                                  segmap_group_sizze_39698)];
                bool match_lit_39878 = 0 == write_iv_43329;
                int64_t defunc_1_f_res_39879;
                
                if (match_lit_39878) {
                    int64_t write_iv_43330 = ((__global
                                               int64_t *) mem_44100)[phys_tid_39460 +
                                                                     write_iter_43327 *
                                                                     (segmap_usable_groups_39699 *
                                                                      segmap_group_sizze_39698)];
                    int64_t case_res_39880 = sub64(write_iv_43330, 1);
                    
                    defunc_1_f_res_39879 = case_res_39880;
                } else {
                    int64_t write_iv_43331 = ((__global
                                               int64_t *) mem_44102)[phys_tid_39460 +
                                                                     write_iter_43327 *
                                                                     (segmap_usable_groups_39699 *
                                                                      segmap_group_sizze_39698)];
                    int64_t write_iv_43332 = ((__global
                                               int64_t *) mem_44104)[phys_tid_39460 +
                                                                     write_iter_43327 *
                                                                     (segmap_usable_groups_39699 *
                                                                      segmap_group_sizze_39698)];
                    int64_t write_iv_43333 = ((__global
                                               int64_t *) mem_44106)[phys_tid_39460 +
                                                                     write_iter_43327 *
                                                                     (segmap_usable_groups_39699 *
                                                                      segmap_group_sizze_39698)];
                    bool match_lit_39881 = 1 == write_iv_43329;
                    int64_t x_39882;
                    
                    if (match_lit_39881) {
                        int64_t x_39883 = add64(last_res_39867, write_iv_43331);
                        int64_t case_res_39884 = sub64(x_39883, 1);
                        
                        x_39882 = case_res_39884;
                    } else {
                        bool match_lit_39885 = 2 == write_iv_43329;
                        int64_t x_39886;
                        
                        if (match_lit_39885) {
                            int64_t x_39887 = add64(last_res_39867,
                                                    last_res_39868);
                            int64_t x_39888 = add64(x_39887, write_iv_43332);
                            int64_t case_res_39889 = sub64(x_39888, 1);
                            
                            x_39886 = case_res_39889;
                        } else {
                            int64_t x_39890 = add64(last_res_39867,
                                                    last_res_39868);
                            int64_t x_39891 = add64(last_res_39869, x_39890);
                            int64_t x_39892 = add64(x_39891, write_iv_43333);
                            int64_t defunc_1_f_res_res_39893 = sub64(x_39892,
                                                                     1);
                            
                            x_39886 = defunc_1_f_res_res_39893;
                        }
                        x_39882 = x_39886;
                    }
                    defunc_1_f_res_39879 = x_39882;
                }
                
                bool less_than_zzero_43335 = slt64(defunc_1_f_res_39879, 0);
                bool greater_than_sizze_43336 = sle64(iota32_arg_31190,
                                                      defunc_1_f_res_39879);
                bool outside_bounds_dim_43337 = less_than_zzero_43335 ||
                     greater_than_sizze_43336;
                
                if (!outside_bounds_dim_43337) {
                    for (int64_t i_45464 = 0; i_45464 < 1; i_45464++) {
                        ((__global float *) mem_44170)[phys_tid_39460 +
                                                       (defunc_1_f_res_39879 +
                                                        i_45464) *
                                                       (segmap_usable_groups_39699 *
                                                        segmap_group_sizze_39698)] =
                            ((__global
                              float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                                segmap_usable_groups_39699 *
                                                                segmap_group_sizze_39698 *
                                                                write_iter_43327 +
                                                                i_45464 *
                                                                (segmap_usable_groups_39699 *
                                                                 segmap_group_sizze_39698)];
                    }
                }
            }
            for (int64_t i_45465 = 0; i_45465 < iota32_arg_31190; i_45465++) {
                ((__global float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                             i_45465 *
                                                             (segmap_usable_groups_39699 *
                                                              segmap_group_sizze_39698)] =
                    ((__global float *) mem_44170)[phys_tid_39460 + i_45465 *
                                                   (segmap_usable_groups_39699 *
                                                    segmap_group_sizze_39698)];
            }
        }
        
        int32_t i_39894 = sdiv32(y_39710, 2);
        int32_t j_39895 = sub32(i_39894, 1);
        bool cond_39896 = x_39703 == x_39704;
        float defunc_0_f_res_39897;
        
        if (cond_39896) {
            defunc_0_f_res_39897 = 0.0F;
        } else {
            int32_t x_39898 = smod32(y_39710, 2);
            bool cond_39899 = x_39898 == 0;
            float defunc_0_f_res_f_res_39900;
            
            if (cond_39899) {
                int64_t j_39901 = sext_i32_i64(j_39895);
                bool x_39902 = sle64(0, j_39901);
                bool y_39903 = slt64(j_39901, iota32_arg_31190);
                bool bounds_check_39904 = x_39902 && y_39903;
                bool index_certs_39905;
                
                if (!bounds_check_39904) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                            -1) {
                            global_failure_args[0] = j_39901;
                            global_failure_args[1] = iota32_arg_31190;
                            ;
                        }
                        return;
                    }
                }
                
                float x_39906 = ((__global
                                  float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                                    j_39901 *
                                                                    (segmap_usable_groups_39699 *
                                                                     segmap_group_sizze_39698)];
                int64_t i_39907 = sext_i32_i64(i_39894);
                bool x_39908 = sle64(0, i_39907);
                bool y_39909 = slt64(i_39907, iota32_arg_31190);
                bool bounds_check_39910 = x_39908 && y_39909;
                bool index_certs_39911;
                
                if (!bounds_check_39910) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                            -1) {
                            global_failure_args[0] = i_39907;
                            global_failure_args[1] = iota32_arg_31190;
                            ;
                        }
                        return;
                    }
                }
                
                float y_39912 = ((__global
                                  float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                                    i_39907 *
                                                                    (segmap_usable_groups_39699 *
                                                                     segmap_group_sizze_39698)];
                float x_39913 = x_39906 + y_39912;
                float defunc_0_f_res_f_res_t_res_39914 = x_39913 / 2.0F;
                
                defunc_0_f_res_f_res_39900 = defunc_0_f_res_f_res_t_res_39914;
            } else {
                int64_t i_39915 = sext_i32_i64(i_39894);
                bool x_39916 = sle64(0, i_39915);
                bool y_39917 = slt64(i_39915, iota32_arg_31190);
                bool bounds_check_39918 = x_39916 && y_39917;
                bool index_certs_39919;
                
                if (!bounds_check_39918) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                            -1) {
                            global_failure_args[0] = i_39915;
                            global_failure_args[1] = iota32_arg_31190;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_39920 = ((__global
                                                           float *) double_buffer_mem_44479)[phys_tid_39460 +
                                                                                             i_39915 *
                                                                                             (segmap_usable_groups_39699 *
                                                                                              segmap_group_sizze_39698)];
                
                defunc_0_f_res_f_res_39900 = defunc_0_f_res_f_res_f_res_39920;
            }
            defunc_0_f_res_39897 = defunc_0_f_res_f_res_39900;
        }
        
        bool cond_39921 = !defunc_0_f_res_39715;
        int32_t fst_breakzq_39922;
        
        if (cond_39921) {
            fst_breakzq_39922 = -1;
        } else {
            bool cond_39923 = slt32(defunc_0_f_res_39716, y_39710);
            int32_t adjustValInds_res_39924;
            
            if (cond_39923) {
                int32_t i_39925 = add32(x_39704, defunc_0_f_res_39716);
                int64_t i_39926 = sext_i32_i64(i_39925);
                int32_t x_39927 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43944)[gtid_39459 *
                                                                           N_30803 +
                                                                           i_39926];
                int32_t adjustValInds_res_t_res_39928 = sub32(x_39927, n_30808);
                
                adjustValInds_res_39924 = adjustValInds_res_t_res_39928;
            } else {
                adjustValInds_res_39924 = -1;
            }
            fst_breakzq_39922 = adjustValInds_res_39924;
        }
        
        bool cond_39929 = sle32(x_39704, 5);
        bool cond_f_res_39930 = sle32(y_39710, 5);
        bool x_39931 = !cond_39929;
        bool y_39932 = cond_f_res_39930 && x_39931;
        bool cond_39933 = cond_39929 || y_39932;
        int32_t fst_breakzq_39934;
        
        if (cond_39933) {
            fst_breakzq_39934 = -2;
        } else {
            fst_breakzq_39934 = fst_breakzq_39922;
        }
        ((__global int32_t *) mem_44189)[gtid_39459] = fst_breakzq_39934;
        ((__global float *) mem_44191)[gtid_39459] = defunc_0_f_res_39786;
        ((__global float *) mem_44193)[gtid_39459] = defunc_0_f_res_39897;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39698
}
__kernel void mainzisegmap_40180(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_30803,
                                 int64_t m_30804, int32_t n_30808,
                                 int64_t iota32_arg_31190, __global
                                 unsigned char *defunc_4_map_res_mem_43942,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_43944,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44023,
                                 __global unsigned char *mem_44240, __global
                                 unsigned char *mem_44254, __global
                                 unsigned char *mem_44256, __global
                                 unsigned char *defunc_2_radix_sort_res_r_mem_44324,
                                 __global unsigned char *mem_44327, __global
                                 unsigned char *mem_44329)
{
    #define segmap_group_sizze_41335 (mainzisegmap_group_sizze_40182)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45819;
    int32_t local_tid_45820;
    int64_t group_sizze_45823;
    int32_t wave_sizze_45822;
    int32_t group_tid_45821;
    
    global_tid_45819 = get_global_id(0);
    local_tid_45820 = get_local_id(0);
    group_sizze_45823 = get_local_size(0);
    wave_sizze_45822 = LOCKSTEP_WIDTH;
    group_tid_45821 = get_group_id(0);
    
    int32_t phys_tid_40180;
    
    phys_tid_40180 = global_tid_45819;
    
    int64_t gtid_40179;
    
    gtid_40179 = sext_i32_i64(group_tid_45821) * segmap_group_sizze_41335 +
        sext_i32_i64(local_tid_45820);
    if (slt64(gtid_40179, m_30804)) {
        int32_t x_41339 = ((__global
                            int32_t *) defunc_4_map_res_mem_43942)[gtid_40179];
        int32_t x_41340 = ((__global
                            int32_t *) defunc_3_map_res_mem_44023)[gtid_40179];
        int32_t y_41342 = ((__global int32_t *) mem_44240)[gtid_40179];
        bool defunc_0_f_res_41343 = ((__global bool *) mem_44254)[gtid_40179];
        int32_t i_41346 = sdiv32(y_41342, 2);
        int32_t j_41347 = sub32(i_41346, 1);
        bool cond_41348 = x_41339 == x_41340;
        float defunc_0_f_res_41349;
        
        if (cond_41348) {
            defunc_0_f_res_41349 = 0.0F;
        } else {
            int32_t x_41350 = smod32(y_41342, 2);
            bool cond_41351 = x_41350 == 0;
            float defunc_0_f_res_f_res_41352;
            
            if (cond_41351) {
                int64_t j_41353 = sext_i32_i64(j_41347);
                bool x_41354 = sle64(0, j_41353);
                bool y_41355 = slt64(j_41353, iota32_arg_31190);
                bool bounds_check_41356 = x_41354 && y_41355;
                bool index_certs_41357;
                
                if (!bounds_check_41356) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = j_41353;
                            global_failure_args[1] = iota32_arg_31190;
                            ;
                        }
                        return;
                    }
                }
                
                float x_41358 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44324)[gtid_40179 *
                                                                                iota32_arg_31190 +
                                                                                j_41353];
                int64_t i_41359 = sext_i32_i64(i_41346);
                bool x_41360 = sle64(0, i_41359);
                bool y_41361 = slt64(i_41359, iota32_arg_31190);
                bool bounds_check_41362 = x_41360 && y_41361;
                bool index_certs_41363;
                
                if (!bounds_check_41362) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_41359;
                            global_failure_args[1] = iota32_arg_31190;
                            ;
                        }
                        return;
                    }
                }
                
                float y_41364 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44324)[gtid_40179 *
                                                                                iota32_arg_31190 +
                                                                                i_41359];
                float x_41365 = x_41358 + y_41364;
                float defunc_0_f_res_f_res_t_res_41366 = x_41365 / 2.0F;
                
                defunc_0_f_res_f_res_41352 = defunc_0_f_res_f_res_t_res_41366;
            } else {
                int64_t i_41367 = sext_i32_i64(i_41346);
                bool x_41368 = sle64(0, i_41367);
                bool y_41369 = slt64(i_41367, iota32_arg_31190);
                bool bounds_check_41370 = x_41368 && y_41369;
                bool index_certs_41371;
                
                if (!bounds_check_41370) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = i_41367;
                            global_failure_args[1] = iota32_arg_31190;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_41372 = ((__global
                                                           float *) defunc_2_radix_sort_res_r_mem_44324)[gtid_40179 *
                                                                                                         iota32_arg_31190 +
                                                                                                         i_41367];
                
                defunc_0_f_res_f_res_41352 = defunc_0_f_res_f_res_f_res_41372;
            }
            defunc_0_f_res_41349 = defunc_0_f_res_f_res_41352;
        }
        
        bool cond_41373 = !defunc_0_f_res_41343;
        int32_t fst_breakzq_41374;
        
        if (cond_41373) {
            fst_breakzq_41374 = -1;
        } else {
            int32_t defunc_0_f_res_41344 = ((__global
                                             int32_t *) mem_44256)[gtid_40179];
            bool cond_41375 = slt32(defunc_0_f_res_41344, y_41342);
            int32_t adjustValInds_res_41376;
            
            if (cond_41375) {
                int32_t i_41377 = add32(x_41340, defunc_0_f_res_41344);
                int64_t i_41378 = sext_i32_i64(i_41377);
                int32_t x_41379 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43944)[gtid_40179 *
                                                                           N_30803 +
                                                                           i_41378];
                int32_t adjustValInds_res_t_res_41380 = sub32(x_41379, n_30808);
                
                adjustValInds_res_41376 = adjustValInds_res_t_res_41380;
            } else {
                adjustValInds_res_41376 = -1;
            }
            fst_breakzq_41374 = adjustValInds_res_41376;
        }
        
        bool cond_41381 = sle32(x_41340, 5);
        bool cond_f_res_41382 = sle32(y_41342, 5);
        bool x_41383 = !cond_41381;
        bool y_41384 = cond_f_res_41382 && x_41383;
        bool cond_41385 = cond_41381 || y_41384;
        int32_t fst_breakzq_41386;
        
        if (cond_41385) {
            fst_breakzq_41386 = -2;
        } else {
            fst_breakzq_41386 = fst_breakzq_41374;
        }
        ((__global int32_t *) mem_44327)[gtid_40179] = fst_breakzq_41386;
        ((__global float *) mem_44329)[gtid_40179] = defunc_0_f_res_41349;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41335
}
__kernel void mainzisegmap_40509(__global int *global_failure, int64_t m_30804,
                                 int64_t iota32_arg_31190, int64_t i_31223,
                                 __global unsigned char *mem_param_44270,
                                 __global unsigned char *mem_44297, __global
                                 unsigned char *mem_44300, __global
                                 unsigned char *mem_44303, __global
                                 unsigned char *mem_44306, __global
                                 unsigned char *mem_44309, __global
                                 unsigned char *mem_44312)
{
    #define segmap_group_sizze_41298 (mainzisegmap_group_sizze_40512)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45813;
    int32_t local_tid_45814;
    int64_t group_sizze_45817;
    int32_t wave_sizze_45816;
    int32_t group_tid_45815;
    
    global_tid_45813 = get_global_id(0);
    local_tid_45814 = get_local_id(0);
    group_sizze_45817 = get_local_size(0);
    wave_sizze_45816 = LOCKSTEP_WIDTH;
    group_tid_45815 = get_group_id(0);
    
    int32_t phys_tid_40509;
    
    phys_tid_40509 = global_tid_45813;
    
    int64_t gtid_40507;
    
    gtid_40507 = squot64(sext_i32_i64(group_tid_45815) *
                         segmap_group_sizze_41298 +
                         sext_i32_i64(local_tid_45814), iota32_arg_31190);
    
    int64_t gtid_40508;
    
    gtid_40508 = sext_i32_i64(group_tid_45815) * segmap_group_sizze_41298 +
        sext_i32_i64(local_tid_45814) - squot64(sext_i32_i64(group_tid_45815) *
                                                segmap_group_sizze_41298 +
                                                sext_i32_i64(local_tid_45814),
                                                iota32_arg_31190) *
        iota32_arg_31190;
    if (slt64(gtid_40507, m_30804) && slt64(gtid_40508, iota32_arg_31190)) {
        int32_t x_41311 = ((__global int32_t *) mem_44309)[gtid_40507 *
                                                           iota32_arg_31190 +
                                                           gtid_40508];
        float write_value_41316 = ((__global
                                    float *) mem_param_44270)[gtid_40507 *
                                                              iota32_arg_31190 +
                                                              gtid_40508];
        bool match_lit_41317 = 0 == x_41311;
        int64_t defunc_1_f_res_41318;
        
        if (match_lit_41317) {
            int64_t x_41312 = ((__global int64_t *) mem_44297)[gtid_40507 *
                                                               iota32_arg_31190 +
                                                               gtid_40508];
            int64_t case_res_41319 = sub64(x_41312, 1);
            
            defunc_1_f_res_41318 = case_res_41319;
        } else {
            int64_t last_res_41307 = ((__global
                                       int64_t *) mem_44297)[gtid_40507 *
                                                             iota32_arg_31190 +
                                                             i_31223];
            int64_t last_res_41308 = ((__global
                                       int64_t *) mem_44300)[gtid_40507 *
                                                             iota32_arg_31190 +
                                                             i_31223];
            int64_t last_res_41309 = ((__global
                                       int64_t *) mem_44303)[gtid_40507 *
                                                             iota32_arg_31190 +
                                                             i_31223];
            int64_t x_41313 = ((__global int64_t *) mem_44300)[gtid_40507 *
                                                               iota32_arg_31190 +
                                                               gtid_40508];
            int64_t x_41314 = ((__global int64_t *) mem_44303)[gtid_40507 *
                                                               iota32_arg_31190 +
                                                               gtid_40508];
            int64_t x_41315 = ((__global int64_t *) mem_44306)[gtid_40507 *
                                                               iota32_arg_31190 +
                                                               gtid_40508];
            bool match_lit_41320 = 1 == x_41311;
            int64_t x_41321;
            
            if (match_lit_41320) {
                int64_t x_41322 = add64(last_res_41307, x_41313);
                int64_t case_res_41323 = sub64(x_41322, 1);
                
                x_41321 = case_res_41323;
            } else {
                bool match_lit_41324 = 2 == x_41311;
                int64_t x_41325;
                
                if (match_lit_41324) {
                    int64_t x_41326 = add64(last_res_41307, last_res_41308);
                    int64_t x_41327 = add64(x_41314, x_41326);
                    int64_t case_res_41328 = sub64(x_41327, 1);
                    
                    x_41325 = case_res_41328;
                } else {
                    int64_t x_41329 = add64(last_res_41307, last_res_41308);
                    int64_t x_41330 = add64(last_res_41309, x_41329);
                    int64_t x_41331 = add64(x_41315, x_41330);
                    int64_t defunc_1_f_res_res_41332 = sub64(x_41331, 1);
                    
                    x_41325 = defunc_1_f_res_res_41332;
                }
                x_41321 = x_41325;
            }
            defunc_1_f_res_41318 = x_41321;
        }
        if ((sle64(0, gtid_40507) && slt64(gtid_40507, m_30804)) && (sle64(0,
                                                                           defunc_1_f_res_41318) &&
                                                                     slt64(defunc_1_f_res_41318,
                                                                           iota32_arg_31190))) {
            ((__global float *) mem_44312)[gtid_40507 * iota32_arg_31190 +
                                           defunc_1_f_res_41318] =
                write_value_41316;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41298
}
__kernel void mainzisegmap_40759(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_30803,
                                 int64_t m_30804, int64_t iota32_arg_31190,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_43943,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44023,
                                 __global unsigned char *mem_44240, __global
                                 unsigned char *mem_44262)
{
    #define segmap_group_sizze_41104 (mainzisegmap_group_sizze_40762)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45682;
    int32_t local_tid_45683;
    int64_t group_sizze_45686;
    int32_t wave_sizze_45685;
    int32_t group_tid_45684;
    
    global_tid_45682 = get_global_id(0);
    local_tid_45683 = get_local_id(0);
    group_sizze_45686 = get_local_size(0);
    wave_sizze_45685 = LOCKSTEP_WIDTH;
    group_tid_45684 = get_group_id(0);
    
    int32_t phys_tid_40759;
    
    phys_tid_40759 = global_tid_45682;
    
    int64_t gtid_40757;
    
    gtid_40757 = squot64(sext_i32_i64(group_tid_45684) *
                         segmap_group_sizze_41104 +
                         sext_i32_i64(local_tid_45683), iota32_arg_31190);
    
    int64_t gtid_40758;
    
    gtid_40758 = sext_i32_i64(group_tid_45684) * segmap_group_sizze_41104 +
        sext_i32_i64(local_tid_45683) - squot64(sext_i32_i64(group_tid_45684) *
                                                segmap_group_sizze_41104 +
                                                sext_i32_i64(local_tid_45683),
                                                iota32_arg_31190) *
        iota32_arg_31190;
    if (slt64(gtid_40757, m_30804) && slt64(gtid_40758, iota32_arg_31190)) {
        int32_t x_41107 = ((__global
                            int32_t *) defunc_3_map_res_mem_44023)[gtid_40757];
        int32_t y_41109 = ((__global int32_t *) mem_44240)[gtid_40757];
        int32_t index_primexp_41481 = sext_i64_i32(gtid_40758);
        bool cond_41111 = slt32(index_primexp_41481, y_41109);
        bool cond_41112;
        
        if (cond_41111) {
            int32_t i_41113 = add32(x_41107, index_primexp_41481);
            int64_t i_41114 = sext_i32_i64(i_41113);
            bool x_41115 = sle64(0, i_41114);
            bool y_41116 = slt64(i_41114, N_30803);
            bool bounds_check_41117 = x_41115 && y_41116;
            bool index_certs_41118;
            
            if (!bounds_check_41117) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_41114;
                        global_failure_args[1] = N_30803;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_41119 = ((__global
                                      float *) defunc_4_map_res_mem_43943)[gtid_40757 *
                                                                           N_30803 +
                                                                           i_41114];
            bool isnan_res_41120;
            
            isnan_res_41120 = futrts_isnan32(isnan_arg_41119);
            
            bool cond_t_res_41121 = !isnan_res_41120;
            
            cond_41112 = cond_t_res_41121;
        } else {
            cond_41112 = 0;
        }
        
        float defunc_0_f_res_41122;
        
        if (cond_41112) {
            int32_t i_41123 = add32(x_41107, index_primexp_41481);
            int64_t i_41124 = sext_i32_i64(i_41123);
            bool x_41125 = sle64(0, i_41124);
            bool y_41126 = slt64(i_41124, N_30803);
            bool bounds_check_41127 = x_41125 && y_41126;
            bool index_certs_41128;
            
            if (!bounds_check_41127) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_41124;
                        global_failure_args[1] = N_30803;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_41129 = ((__global
                                                 float *) defunc_4_map_res_mem_43943)[gtid_40757 *
                                                                                      N_30803 +
                                                                                      i_41124];
            
            defunc_0_f_res_41122 = defunc_0_f_res_t_res_41129;
        } else {
            defunc_0_f_res_41122 = INFINITY;
        }
        ((__global float *) mem_44262)[gtid_40757 * iota32_arg_31190 +
                                       gtid_40758] = defunc_0_f_res_41122;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41104
}
__kernel void mainzisegmap_40821(__global int *global_failure, int64_t m_30804,
                                 __global unsigned char *mem_44240, __global
                                 unsigned char *mem_44247, __global
                                 unsigned char *mem_44249, __global
                                 unsigned char *mem_44251, __global
                                 unsigned char *mem_44254, __global
                                 unsigned char *mem_44256, __global
                                 unsigned char *mem_44258)
{
    #define segmap_group_sizze_41069 (mainzisegmap_group_sizze_40823)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45677;
    int32_t local_tid_45678;
    int64_t group_sizze_45681;
    int32_t wave_sizze_45680;
    int32_t group_tid_45679;
    
    global_tid_45677 = get_global_id(0);
    local_tid_45678 = get_local_id(0);
    group_sizze_45681 = get_local_size(0);
    wave_sizze_45680 = LOCKSTEP_WIDTH;
    group_tid_45679 = get_group_id(0);
    
    int32_t phys_tid_40821;
    
    phys_tid_40821 = global_tid_45677;
    
    int64_t gtid_40820;
    
    gtid_40820 = sext_i32_i64(group_tid_45679) * segmap_group_sizze_41069 +
        sext_i32_i64(local_tid_45678);
    if (slt64(gtid_40820, m_30804)) {
        int32_t y_41074 = ((__global int32_t *) mem_44240)[gtid_40820];
        bool acc0_41076 = ((__global bool *) mem_44247)[gtid_40820];
        bool x_41081 = acc0_41076 && acc0_41076;
        int32_t defunc_1_op_res_f_res_41085;
        
        if (acc0_41076) {
            int32_t acc0_41077 = ((__global int32_t *) mem_44249)[gtid_40820];
            
            defunc_1_op_res_f_res_41085 = acc0_41077;
        } else {
            defunc_1_op_res_f_res_41085 = -1;
        }
        
        bool cond_41091 = y_41074 == 0;
        float defunc_0_f_res_41092;
        
        if (cond_41091) {
            defunc_0_f_res_41092 = 0.0F;
        } else {
            float acc0_41078 = ((__global float *) mem_44251)[gtid_40820];
            float i32_res_41093 = sitofp_i32_f32(y_41074);
            float defunc_0_f_res_f_res_41094 = acc0_41078 / i32_res_41093;
            
            defunc_0_f_res_41092 = defunc_0_f_res_f_res_41094;
        }
        ((__global bool *) mem_44254)[gtid_40820] = x_41081;
        ((__global int32_t *) mem_44256)[gtid_40820] =
            defunc_1_op_res_f_res_41085;
        ((__global float *) mem_44258)[gtid_40820] = defunc_0_f_res_41092;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41069
}
__kernel void mainzisegmap_40947(__global int *global_failure, int64_t m_30804,
                                 int64_t num_groups_40970, __global
                                 unsigned char *defunc_4_map_res_mem_43942,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44023,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44024,
                                 __global unsigned char *mem_44238, __global
                                 unsigned char *mem_44240)
{
    #define segmap_group_sizze_40969 (mainzisegmap_group_sizze_40949)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45515;
    int32_t local_tid_45516;
    int64_t group_sizze_45519;
    int32_t wave_sizze_45518;
    int32_t group_tid_45517;
    
    global_tid_45515 = get_global_id(0);
    local_tid_45516 = get_local_id(0);
    group_sizze_45519 = get_local_size(0);
    wave_sizze_45518 = LOCKSTEP_WIDTH;
    group_tid_45517 = get_group_id(0);
    
    int32_t phys_tid_40947;
    
    phys_tid_40947 = global_tid_45515;
    
    int32_t phys_group_id_45520;
    
    phys_group_id_45520 = get_group_id(0);
    for (int32_t i_45521 = 0; i_45521 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804, segmap_group_sizze_40969)) -
                   phys_group_id_45520, sext_i64_i32(num_groups_40970));
         i_45521++) {
        int32_t virt_group_id_45522 = phys_group_id_45520 + i_45521 *
                sext_i64_i32(num_groups_40970);
        int64_t gtid_40946 = sext_i32_i64(virt_group_id_45522) *
                segmap_group_sizze_40969 + sext_i32_i64(local_tid_45516);
        
        if (slt64(gtid_40946, m_30804)) {
            int32_t x_40976 = ((__global
                                int32_t *) defunc_4_map_res_mem_43942)[gtid_40946];
            int32_t x_40977 = ((__global
                                int32_t *) defunc_3_map_res_mem_44023)[gtid_40946];
            float x_40978 = ((__global
                              float *) defunc_3_map_res_mem_44024)[gtid_40946];
            int32_t y_40979 = sub32(x_40976, x_40977);
            float i32_res_40980 = sitofp_i32_f32(x_40977);
            float sqrt_res_40981;
            
            sqrt_res_40981 = futrts_sqrt32(i32_res_40980);
            
            float y_40982 = x_40978 * sqrt_res_40981;
            
            ((__global float *) mem_44238)[gtid_40946] = y_40982;
            ((__global int32_t *) mem_44240)[gtid_40946] = y_40979;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40969
}
__kernel void mainzisegmap_intragroup_37354(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_43568_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43558_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43548_backing_aligned_2,
                                            int32_t k2p2zq_30821,
                                            int64_t i32_res_30823,
                                            int64_t m_30954, int64_t nm_30955,
                                            int32_t i64_res_30963,
                                            int64_t computed_group_sizze_37295,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43544,
                                            __global unsigned char *mem_43572)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43568_backing_2 = (__local volatile
                                                           char *) mem_43568_backing_aligned_0;
    __local volatile char *restrict mem_43558_backing_1 = (__local volatile
                                                           char *) mem_43558_backing_aligned_1;
    __local volatile char *restrict mem_43548_backing_0 = (__local volatile
                                                           char *) mem_43548_backing_aligned_2;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_44741;
    int32_t local_tid_44742;
    int64_t group_sizze_44745;
    int32_t wave_sizze_44744;
    int32_t group_tid_44743;
    
    global_tid_44741 = get_global_id(0);
    local_tid_44742 = get_local_id(0);
    group_sizze_44745 = get_local_size(0);
    wave_sizze_44744 = LOCKSTEP_WIDTH;
    group_tid_44743 = get_group_id(0);
    
    int32_t phys_tid_37354;
    
    phys_tid_37354 = group_tid_44743;
    
    int32_t ltid_pre_44746;
    
    ltid_pre_44746 = squot32(local_tid_44742, sext_i64_i32(i32_res_30823));
    
    int32_t ltid_pre_44747;
    
    ltid_pre_44747 = local_tid_44742 - squot32(local_tid_44742,
                                               sext_i64_i32(i32_res_30823)) *
        sext_i64_i32(i32_res_30823);
    
    int32_t ltid_pre_44748;
    
    ltid_pre_44748 = local_tid_44742;
    
    int64_t gtid_37293;
    
    gtid_37293 = sext_i32_i64(group_tid_44743);
    
    __local char *mem_43548;
    
    mem_43548 = (__local char *) mem_43548_backing_0;
    
    int64_t gtid_37296 = sext_i32_i64(ltid_pre_44748);
    int32_t phys_tid_37297 = local_tid_44742;
    
    if (slt64(gtid_37296, nm_30955)) {
        int64_t defunc_0_f_res_37493 = sdiv64(gtid_37296, m_30954);
        int64_t defunc_0_f_res_37494 = smod64(gtid_37296, m_30954);
        bool cond_37495 = slt64(defunc_0_f_res_37494, i32_res_30823);
        float defunc_0_f_res_37496;
        
        if (cond_37495) {
            float defunc_0_f_res_t_res_37497 = ((__global
                                                 float *) defunc_3_map_res_mem_43544)[gtid_37293 *
                                                                                      (i32_res_30823 *
                                                                                       i32_res_30823) +
                                                                                      defunc_0_f_res_37493 *
                                                                                      i32_res_30823 +
                                                                                      defunc_0_f_res_37494];
            
            defunc_0_f_res_37496 = defunc_0_f_res_t_res_37497;
        } else {
            int64_t y_37498 = add64(i32_res_30823, defunc_0_f_res_37493);
            bool cond_37499 = defunc_0_f_res_37494 == y_37498;
            float defunc_0_f_res_f_res_37500;
            
            if (cond_37499) {
                defunc_0_f_res_f_res_37500 = 1.0F;
            } else {
                defunc_0_f_res_f_res_37500 = 0.0F;
            }
            defunc_0_f_res_37496 = defunc_0_f_res_f_res_37500;
        }
        ((__local float *) mem_43548)[gtid_37296] = defunc_0_f_res_37496;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43558;
    
    mem_43558 = (__local char *) mem_43558_backing_1;
    for (int32_t i_37502 = 0; i_37502 < k2p2zq_30821; i_37502++) {
        int64_t i_37504 = sext_i32_i64(i_37502);
        bool x_37505 = sle64(0, i_37504);
        bool y_37506 = slt64(i_37504, nm_30955);
        bool bounds_check_37507 = x_37505 && y_37506;
        bool index_certs_37508;
        
        if (!bounds_check_37507) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 0) == -1) {
                    global_failure_args[0] = i_37504;
                    global_failure_args[1] = nm_30955;
                    ;
                }
                local_failure = true;
                goto error_1;
            }
        }
        
        float v1_37509 = ((__local float *) mem_43548)[i_37504];
        bool cond_37510 = v1_37509 == 0.0F;
        int64_t gtid_37307 = sext_i32_i64(ltid_pre_44748);
        int32_t phys_tid_37308 = local_tid_44742;
        
        if (slt64(gtid_37307, nm_30955)) {
            int32_t defunc_0_f_res_37513 = sext_i64_i32(gtid_37307);
            int32_t defunc_0_f_res_37514 = sdiv32(defunc_0_f_res_37513,
                                                  i64_res_30963);
            int32_t defunc_0_f_res_37515 = smod32(defunc_0_f_res_37513,
                                                  i64_res_30963);
            float defunc_0_f_res_37516;
            
            if (cond_37510) {
                int32_t x_37517 = mul32(i64_res_30963, defunc_0_f_res_37514);
                int32_t i_37518 = add32(defunc_0_f_res_37515, x_37517);
                int64_t i_37519 = sext_i32_i64(i_37518);
                float defunc_0_f_res_t_res_37520 = ((__local
                                                     float *) mem_43548)[i_37519];
                
                defunc_0_f_res_37516 = defunc_0_f_res_t_res_37520;
            } else {
                int64_t j_37521 = sext_i32_i64(defunc_0_f_res_37515);
                float x_37522 = ((__local float *) mem_43548)[j_37521];
                float x_37523 = x_37522 / v1_37509;
                int32_t y_37524 = sub32(k2p2zq_30821, 1);
                bool cond_37525 = slt32(defunc_0_f_res_37514, y_37524);
                float defunc_0_f_res_f_res_37526;
                
                if (cond_37525) {
                    int32_t x_37527 = add32(1, defunc_0_f_res_37514);
                    int32_t x_37528 = mul32(i64_res_30963, x_37527);
                    int32_t i_37529 = add32(defunc_0_f_res_37515, x_37528);
                    int64_t i_37530 = sext_i32_i64(i_37529);
                    float x_37531 = ((__local float *) mem_43548)[i_37530];
                    int32_t i_37532 = add32(i_37502, x_37528);
                    int64_t i_37533 = sext_i32_i64(i_37532);
                    float x_37534 = ((__local float *) mem_43548)[i_37533];
                    float y_37535 = x_37523 * x_37534;
                    float defunc_0_f_res_f_res_t_res_37536 = x_37531 - y_37535;
                    
                    defunc_0_f_res_f_res_37526 =
                        defunc_0_f_res_f_res_t_res_37536;
                } else {
                    defunc_0_f_res_f_res_37526 = x_37523;
                }
                defunc_0_f_res_37516 = defunc_0_f_res_f_res_37526;
            }
            ((__local float *) mem_43558)[gtid_37307] = defunc_0_f_res_37516;
        }
        
      error_1:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_37334 = sext_i32_i64(ltid_pre_44748);
        int32_t phys_tid_37335 = local_tid_44742;
        
        if (slt64(write_i_37334, nm_30955)) {
            float write_value_37539 = ((__local
                                        float *) mem_43558)[write_i_37334];
            
            if (sle64(0, write_i_37334) && slt64(write_i_37334, nm_30955)) {
                ((__local float *) mem_43548)[write_i_37334] =
                    write_value_37539;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    __local char *mem_43568;
    
    mem_43568 = (__local char *) mem_43568_backing_2;
    
    int64_t gtid_37337 = sext_i32_i64(ltid_pre_44746);
    int64_t gtid_37338 = sext_i32_i64(ltid_pre_44747);
    int32_t phys_tid_37339 = local_tid_44742;
    
    if (slt64(gtid_37337, i32_res_30823) && slt64(gtid_37338, i32_res_30823)) {
        int64_t index_primexp_41423 = m_30954 * gtid_37337;
        int64_t i_37546 = add64(i32_res_30823, gtid_37338);
        int64_t new_index_37547 = i_37546 + index_primexp_41423;
        float defunc_0_f_res_37548 = ((__local
                                       float *) mem_43548)[new_index_37547];
        
        ((__local float *) mem_43568)[gtid_37337 * i32_res_30823 + gtid_37338] =
            defunc_0_f_res_37548;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_44750 = 0; i_44750 < sdiv_up64(i32_res_30823 *
                                                  i32_res_30823 -
                                                  sext_i32_i64(local_tid_44742),
                                                  computed_group_sizze_37295);
         i_44750++) {
        ((__global float *) mem_43572)[gtid_37293 * (i32_res_30823 *
                                                     i32_res_30823) +
                                       squot64(i_44750 *
                                               computed_group_sizze_37295 +
                                               sext_i32_i64(local_tid_44742),
                                               i32_res_30823) * i32_res_30823 +
                                       (i_44750 * computed_group_sizze_37295 +
                                        sext_i32_i64(local_tid_44742) -
                                        squot64(i_44750 *
                                                computed_group_sizze_37295 +
                                                sext_i32_i64(local_tid_44742),
                                                i32_res_30823) *
                                        i32_res_30823)] = ((__local
                                                            float *) mem_43568)[squot64(i_44750 *
                                                                                        computed_group_sizze_37295 +
                                                                                        sext_i32_i64(local_tid_44742),
                                                                                        i32_res_30823) *
                                                                                i32_res_30823 +
                                                                                (i_44750 *
                                                                                 computed_group_sizze_37295 +
                                                                                 sext_i32_i64(local_tid_44742) -
                                                                                 squot64(i_44750 *
                                                                                         computed_group_sizze_37295 +
                                                                                         sext_i32_i64(local_tid_44742),
                                                                                         i32_res_30823) *
                                                                                 i32_res_30823)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_37698(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43593_backing_aligned_0,
                                            int64_t m_30804,
                                            int32_t k2p2zq_30821,
                                            int64_t nm_30955,
                                            int32_t i64_res_30963,
                                            int32_t i_38085, int64_t i_38087,
                                            int64_t ctx_param_ext_43579,
                                            int64_t ctx_param_ext_43580,
                                            int64_t ctx_param_ext_43582,
                                            __global
                                            unsigned char *mem_param_43584,
                                            __global unsigned char *mem_43589,
                                            __global unsigned char *mem_43597)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43593_backing_0 = (__local volatile
                                                           char *) mem_43593_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44777;
    int32_t local_tid_44778;
    int64_t group_sizze_44781;
    int32_t wave_sizze_44780;
    int32_t group_tid_44779;
    
    global_tid_44777 = get_global_id(0);
    local_tid_44778 = get_local_id(0);
    group_sizze_44781 = get_local_size(0);
    wave_sizze_44780 = LOCKSTEP_WIDTH;
    group_tid_44779 = get_group_id(0);
    
    int32_t phys_tid_37698;
    
    phys_tid_37698 = group_tid_44779;
    
    int32_t ltid_pre_44782;
    
    ltid_pre_44782 = local_tid_44778;
    
    int64_t gtid_37666;
    
    gtid_37666 = sext_i32_i64(group_tid_44779);
    
    float v1_38104 = ((__global float *) mem_param_43584)[ctx_param_ext_43579 +
                                                          (gtid_37666 *
                                                           ctx_param_ext_43580 +
                                                           i_38087 *
                                                           ctx_param_ext_43582)];
    bool cond_38105 = v1_38104 == 0.0F;
    __local char *mem_43593;
    
    mem_43593 = (__local char *) mem_43593_backing_0;
    
    int64_t gtid_37669 = sext_i32_i64(ltid_pre_44782);
    int32_t phys_tid_37670 = local_tid_44778;
    int32_t defunc_0_f_res_38108 = sext_i64_i32(gtid_37669);
    int32_t defunc_0_f_res_38109 = sdiv32(defunc_0_f_res_38108, i64_res_30963);
    int32_t defunc_0_f_res_38110 = smod32(defunc_0_f_res_38108, i64_res_30963);
    float defunc_0_f_res_38111;
    
    if (cond_38105) {
        int32_t x_38112 = mul32(i64_res_30963, defunc_0_f_res_38109);
        int32_t i_38113 = add32(defunc_0_f_res_38110, x_38112);
        int64_t i_38114 = sext_i32_i64(i_38113);
        float defunc_0_f_res_t_res_38115 = ((__global
                                             float *) mem_param_43584)[ctx_param_ext_43579 +
                                                                       (gtid_37666 *
                                                                        ctx_param_ext_43580 +
                                                                        i_38114 *
                                                                        ctx_param_ext_43582)];
        
        defunc_0_f_res_38111 = defunc_0_f_res_t_res_38115;
    } else {
        int64_t j_38116 = sext_i32_i64(defunc_0_f_res_38110);
        float x_38117 = ((__global
                          float *) mem_param_43584)[ctx_param_ext_43579 +
                                                    (gtid_37666 *
                                                     ctx_param_ext_43580 +
                                                     j_38116 *
                                                     ctx_param_ext_43582)];
        float x_38118 = x_38117 / v1_38104;
        int32_t y_38119 = sub32(k2p2zq_30821, 1);
        bool cond_38120 = slt32(defunc_0_f_res_38109, y_38119);
        float defunc_0_f_res_f_res_38121;
        
        if (cond_38120) {
            int32_t x_38122 = add32(1, defunc_0_f_res_38109);
            int32_t x_38123 = mul32(i64_res_30963, x_38122);
            int32_t i_38124 = add32(defunc_0_f_res_38110, x_38123);
            int64_t i_38125 = sext_i32_i64(i_38124);
            float x_38126 = ((__global
                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                        (gtid_37666 *
                                                         ctx_param_ext_43580 +
                                                         i_38125 *
                                                         ctx_param_ext_43582)];
            int32_t i_38127 = add32(i_38085, x_38123);
            int64_t i_38128 = sext_i32_i64(i_38127);
            float x_38129 = ((__global
                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                        (gtid_37666 *
                                                         ctx_param_ext_43580 +
                                                         i_38128 *
                                                         ctx_param_ext_43582)];
            float y_38130 = x_38118 * x_38129;
            float defunc_0_f_res_f_res_t_res_38131 = x_38126 - y_38130;
            
            defunc_0_f_res_f_res_38121 = defunc_0_f_res_f_res_t_res_38131;
        } else {
            defunc_0_f_res_f_res_38121 = x_38118;
        }
        defunc_0_f_res_38111 = defunc_0_f_res_f_res_38121;
    }
    ((__local float *) mem_43593)[gtid_37669] = defunc_0_f_res_38111;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_37696 = sext_i32_i64(ltid_pre_44782);
    int32_t phys_tid_37697 = local_tid_44778;
    float write_value_38134 = ((__local float *) mem_43593)[write_i_37696];
    
    if (sle64(0, write_i_37696) && slt64(write_i_37696, nm_30955)) {
        ((__global float *) mem_43589)[gtid_37666 + write_i_37696 * m_30804] =
            write_value_38134;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44778 == 0) {
        for (int64_t i_44783 = 0; i_44783 < nm_30955; i_44783++) {
            ((__global float *) mem_43597)[gtid_37666 * nm_30955 + i_44783] =
                ((__global float *) mem_43589)[gtid_37666 + i_44783 * m_30804];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_38672(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43921_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43919_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43917_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43915_backing_aligned_3,
                                            int64_t N_30803, int64_t N_30805,
                                            int64_t i_31070, __global
                                            unsigned char *images_mem_43378,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43905,
                                            __global unsigned char *mem_43924,
                                            __global unsigned char *mem_43927,
                                            __global unsigned char *mem_43930)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43921_backing_3 = (__local volatile
                                                           char *) mem_43921_backing_aligned_0;
    __local volatile char *restrict mem_43919_backing_2 = (__local volatile
                                                           char *) mem_43919_backing_aligned_1;
    __local volatile char *restrict mem_43917_backing_1 = (__local volatile
                                                           char *) mem_43917_backing_aligned_2;
    __local volatile char *restrict mem_43915_backing_0 = (__local volatile
                                                           char *) mem_43915_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45089;
    int32_t local_tid_45090;
    int64_t group_sizze_45093;
    int32_t wave_sizze_45092;
    int32_t group_tid_45091;
    
    global_tid_45089 = get_global_id(0);
    local_tid_45090 = get_local_id(0);
    group_sizze_45093 = get_local_size(0);
    wave_sizze_45092 = LOCKSTEP_WIDTH;
    group_tid_45091 = get_group_id(0);
    
    int32_t phys_tid_38672;
    
    phys_tid_38672 = group_tid_45091;
    
    int32_t ltid_pre_45094;
    
    ltid_pre_45094 = local_tid_45090;
    
    int64_t gtid_38665;
    
    gtid_38665 = sext_i32_i64(group_tid_45091);
    
    __local char *mem_43915;
    
    mem_43915 = (__local char *) mem_43915_backing_0;
    
    __local char *mem_43917;
    
    mem_43917 = (__local char *) mem_43917_backing_1;
    
    int64_t gtid_38668 = sext_i32_i64(ltid_pre_45094);
    int32_t phys_tid_38669 = local_tid_45090;
    float x_38761 = ((__global float *) images_mem_43378)[gtid_38665 * N_30805 +
                                                          gtid_38668];
    bool isnan_res_38763;
    
    isnan_res_38763 = futrts_isnan32(x_38761);
    
    bool cond_38764 = !isnan_res_38763;
    float defunc_0_f_res_38765;
    
    if (cond_38764) {
        float x_38762 = ((__global
                          float *) defunc_3_map_res_mem_43905)[gtid_38665 *
                                                               N_30803 +
                                                               gtid_38668];
        float defunc_0_f_res_t_res_38766 = x_38761 - x_38762;
        
        defunc_0_f_res_38765 = defunc_0_f_res_t_res_38766;
    } else {
        defunc_0_f_res_38765 = NAN;
    }
    
    bool isnan_res_38767;
    
    isnan_res_38767 = futrts_isnan32(defunc_0_f_res_38765);
    
    bool defunc_0_p_res_38768 = !isnan_res_38767;
    int64_t defunc_0_f_res_38769 = btoi_bool_i64(defunc_0_p_res_38768);
    
    ((__local int64_t *) mem_43915)[gtid_38668] = defunc_0_f_res_38769;
    ((__local float *) mem_43917)[gtid_38668] = defunc_0_f_res_38765;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45095;
    
    dims_flat_45095 = N_30803;
    
    int64_t x_38758;
    int64_t x_38759;
    int64_t x_45097;
    int64_t x_45098;
    bool ltid_in_bounds_45100;
    
    ltid_in_bounds_45100 = slt64(sext_i32_i64(local_tid_45090), N_30803);
    
    int32_t skip_threads_45101;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45100) {
            x_38759 = ((volatile __local
                        int64_t *) mem_43915)[sext_i32_i64(local_tid_45090)];
            if ((local_tid_45090 - squot32(local_tid_45090, 32) * 32) == 0) {
                x_38758 = x_38759;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45101 = 1;
        while (slt32(skip_threads_45101, 32)) {
            if (sle32(skip_threads_45101, local_tid_45090 -
                      squot32(local_tid_45090, 32) * 32) &&
                ltid_in_bounds_45100) {
                // read operands
                {
                    x_38758 = ((volatile __local
                                int64_t *) mem_43915)[sext_i32_i64(local_tid_45090) -
                                                      sext_i32_i64(skip_threads_45101)];
                }
                // perform operation
                {
                    bool inactive_45102 =
                         slt64(srem64(sext_i32_i64(local_tid_45090), N_30803),
                               sext_i32_i64(local_tid_45090) -
                               sext_i32_i64(local_tid_45090 -
                               skip_threads_45101));
                    
                    if (inactive_45102) {
                        x_38758 = x_38759;
                    }
                    if (!inactive_45102) {
                        int64_t defunc_1_op_res_38760 = add64(x_38758, x_38759);
                        
                        x_38758 = defunc_1_op_res_38760;
                    }
                }
            }
            if (sle32(wave_sizze_45092, skip_threads_45101)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45101, local_tid_45090 -
                      squot32(local_tid_45090, 32) * 32) &&
                ltid_in_bounds_45100) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43915)[sext_i32_i64(local_tid_45090)] =
                        x_38758;
                    x_38759 = x_38758;
                }
            }
            if (sle32(wave_sizze_45092, skip_threads_45101)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45101 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45090 - squot32(local_tid_45090, 32) * 32) == 31 &&
            ltid_in_bounds_45100) {
            ((volatile __local
              int64_t *) mem_43915)[sext_i32_i64(squot32(local_tid_45090,
                                                         32))] = x_38758;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45103;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45090, 32) == 0 && ltid_in_bounds_45100) {
                x_45098 = ((volatile __local
                            int64_t *) mem_43915)[sext_i32_i64(local_tid_45090)];
                if ((local_tid_45090 - squot32(local_tid_45090, 32) * 32) ==
                    0) {
                    x_45097 = x_45098;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45103 = 1;
            while (slt32(skip_threads_45103, 32)) {
                if (sle32(skip_threads_45103, local_tid_45090 -
                          squot32(local_tid_45090, 32) * 32) &&
                    (squot32(local_tid_45090, 32) == 0 &&
                     ltid_in_bounds_45100)) {
                    // read operands
                    {
                        x_45097 = ((volatile __local
                                    int64_t *) mem_43915)[sext_i32_i64(local_tid_45090) -
                                                          sext_i32_i64(skip_threads_45103)];
                    }
                    // perform operation
                    {
                        bool inactive_45104 =
                             slt64(srem64(sext_i32_i64(local_tid_45090 * 32 +
                                          32 - 1), N_30803),
                                   sext_i32_i64(local_tid_45090 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45090 -
                                                 skip_threads_45103) * 32 + 32 -
                                   1));
                        
                        if (inactive_45104) {
                            x_45097 = x_45098;
                        }
                        if (!inactive_45104) {
                            int64_t defunc_1_op_res_45099 = add64(x_45097,
                                                                  x_45098);
                            
                            x_45097 = defunc_1_op_res_45099;
                        }
                    }
                }
                if (sle32(wave_sizze_45092, skip_threads_45103)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45103, local_tid_45090 -
                          squot32(local_tid_45090, 32) * 32) &&
                    (squot32(local_tid_45090, 32) == 0 &&
                     ltid_in_bounds_45100)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43915)[sext_i32_i64(local_tid_45090)] =
                            x_45097;
                        x_45098 = x_45097;
                    }
                }
                if (sle32(wave_sizze_45092, skip_threads_45103)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45103 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45090, 32) == 0 || !ltid_in_bounds_45100)) {
            // read operands
            {
                x_38759 = x_38758;
                x_38758 = ((__local
                            int64_t *) mem_43915)[sext_i32_i64(squot32(local_tid_45090,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45105 =
                     slt64(srem64(sext_i32_i64(local_tid_45090), N_30803),
                           sext_i32_i64(local_tid_45090) -
                           sext_i32_i64(squot32(local_tid_45090, 32) * 32 - 1));
                
                if (inactive_45105) {
                    x_38758 = x_38759;
                }
                if (!inactive_45105) {
                    int64_t defunc_1_op_res_38760 = add64(x_38758, x_38759);
                    
                    x_38758 = defunc_1_op_res_38760;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43915)[sext_i32_i64(local_tid_45090)] =
                    x_38758;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45090, 32) == 0) {
            ((__local int64_t *) mem_43915)[sext_i32_i64(local_tid_45090)] =
                x_38759;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_38770 = ((__local int64_t *) mem_43915)[i_31070];
    int32_t defunc_0_f_res_38771 = sext_i64_i32(last_res_38770);
    __local char *mem_43919;
    
    mem_43919 = (__local char *) mem_43919_backing_2;
    ((__local float *) mem_43919)[sext_i32_i64(local_tid_45090)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43921;
    
    mem_43921 = (__local char *) mem_43921_backing_3;
    ((__local int32_t *) mem_43921)[sext_i32_i64(local_tid_45090)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_38670 = sext_i32_i64(ltid_pre_45094);
    int32_t phys_tid_38671 = local_tid_45090;
    float x_38776 = ((__local float *) mem_43917)[write_i_38670];
    int32_t index_primexp_41445 = sext_i64_i32(write_i_38670);
    bool isnan_res_38779;
    
    isnan_res_38779 = futrts_isnan32(x_38776);
    
    bool defunc_0_p_res_38780 = !isnan_res_38779;
    int64_t defunc_1_f_res_38781;
    
    if (defunc_0_p_res_38780) {
        int64_t x_38777 = ((__local int64_t *) mem_43915)[write_i_38670];
        int64_t defunc_1_f_res_t_res_38782 = sub64(x_38777, 1);
        
        defunc_1_f_res_38781 = defunc_1_f_res_t_res_38782;
    } else {
        defunc_1_f_res_38781 = -1;
    }
    if (sle64(0, defunc_1_f_res_38781) && slt64(defunc_1_f_res_38781,
                                                N_30803)) {
        ((__local int32_t *) mem_43921)[defunc_1_f_res_38781] =
            index_primexp_41445;
    }
    if (sle64(0, defunc_1_f_res_38781) && slt64(defunc_1_f_res_38781,
                                                N_30803)) {
        ((__local float *) mem_43919)[defunc_1_f_res_38781] = x_38776;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45090 == 0) {
        ((__global int32_t *) mem_43924)[gtid_38665] = defunc_0_f_res_38771;
    }
    ((__global float *) mem_43927)[gtid_38665 * N_30803 +
                                   sext_i32_i64(local_tid_45090)] = ((__local
                                                                      float *) mem_43919)[sext_i32_i64(local_tid_45090)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43930)[gtid_38665 * N_30803 +
                                     sext_i32_i64(local_tid_45090)] = ((__local
                                                                        int32_t *) mem_43921)[sext_i32_i64(local_tid_45090)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39012(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_45198_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_45194_backing_aligned_1,
                                            int64_t N_30803, int64_t N_30805,
                                            float hfrac_30810,
                                            int64_t i32_res_30817,
                                            int32_t k2p2_30819, __global
                                            unsigned char *images_mem_43378,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43943,
                                            __global unsigned char *mem_44003,
                                            __global unsigned char *mem_44005,
                                            __global unsigned char *mem_44007)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45198_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45198_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45194_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45194_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45188;
    int32_t local_tid_45189;
    int64_t group_sizze_45192;
    int32_t wave_sizze_45191;
    int32_t group_tid_45190;
    
    global_tid_45188 = get_global_id(0);
    local_tid_45189 = get_local_id(0);
    group_sizze_45192 = get_local_size(0);
    wave_sizze_45191 = LOCKSTEP_WIDTH;
    group_tid_45190 = get_group_id(0);
    
    int32_t phys_tid_39012;
    
    phys_tid_39012 = group_tid_45190;
    
    int32_t ltid_pre_45193;
    
    ltid_pre_45193 = local_tid_45189;
    
    int64_t gtid_39005;
    
    gtid_39005 = sext_i32_i64(group_tid_45190);
    
    int32_t defunc_0_f_res_39089;
    int64_t gtid_39008 = sext_i32_i64(ltid_pre_45193);
    int32_t phys_tid_39009 = local_tid_45189;
    __local char *red_arr_mem_45194;
    
    red_arr_mem_45194 = (__local char *) red_arr_mem_45194_backing_0;
    
    float x_39093;
    
    x_39093 = ((__global float *) images_mem_43378)[gtid_39005 * N_30805 +
                                                    gtid_39008];
    
    bool isnan_res_39094;
    
    isnan_res_39094 = futrts_isnan32(x_39093);
    
    bool cond_39095 = !isnan_res_39094;
    int32_t defunc_0_f_res_39096 = btoi_bool_i32(cond_39095);
    
    ((__local int32_t *) red_arr_mem_45194)[gtid_39008] = defunc_0_f_res_39096;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45196;
    int32_t skip_waves_45197;
    
    skip_waves_45197 = 1;
    
    int32_t x_39090;
    int32_t x_39091;
    
    offset_45196 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45189, sext_i64_i32(i32_res_30817))) {
            x_39090 = ((__local
                        int32_t *) red_arr_mem_45194)[sext_i32_i64(local_tid_45189 +
                                                      offset_45196)];
        }
    }
    offset_45196 = 1;
    while (slt32(offset_45196, wave_sizze_45191)) {
        if (slt32(local_tid_45189 + offset_45196,
                  sext_i64_i32(i32_res_30817)) && ((local_tid_45189 -
                                                    squot32(local_tid_45189,
                                                            wave_sizze_45191) *
                                                    wave_sizze_45191) & (2 *
                                                                         offset_45196 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39091 = ((volatile __local
                            int32_t *) red_arr_mem_45194)[sext_i32_i64(local_tid_45189 +
                                                          offset_45196)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39092 = add32(x_39090, x_39091);
                
                x_39090 = defunc_1_op_res_39092;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45194)[sext_i32_i64(local_tid_45189)] =
                    x_39090;
            }
        }
        offset_45196 *= 2;
    }
    while (slt32(skip_waves_45197, squot32(sext_i64_i32(i32_res_30817) +
                                           wave_sizze_45191 - 1,
                                           wave_sizze_45191))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45196 = skip_waves_45197 * wave_sizze_45191;
        if (slt32(local_tid_45189 + offset_45196,
                  sext_i64_i32(i32_res_30817)) && ((local_tid_45189 -
                                                    squot32(local_tid_45189,
                                                            wave_sizze_45191) *
                                                    wave_sizze_45191) == 0 &&
                                                   (squot32(local_tid_45189,
                                                            wave_sizze_45191) &
                                                    (2 * skip_waves_45197 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39091 = ((__local
                            int32_t *) red_arr_mem_45194)[sext_i32_i64(local_tid_45189 +
                                                          offset_45196)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39092 = add32(x_39090, x_39091);
                
                x_39090 = defunc_1_op_res_39092;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45194)[sext_i32_i64(local_tid_45189)] =
                    x_39090;
            }
        }
        skip_waves_45197 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39089 = ((__local int32_t *) red_arr_mem_45194)[0];
    
    float defunc_0_f_res_39097;
    int64_t gtid_39010 = sext_i32_i64(ltid_pre_45193);
    int32_t phys_tid_39011 = local_tid_45189;
    __local char *red_arr_mem_45198;
    
    red_arr_mem_45198 = (__local char *) red_arr_mem_45198_backing_1;
    
    int32_t index_primexp_41453;
    
    index_primexp_41453 = sext_i64_i32(gtid_39010);
    
    bool cond_39102 = slt32(index_primexp_41453, defunc_0_f_res_39089);
    float defunc_0_f_res_39103;
    
    if (cond_39102) {
        int64_t i_39104 = sext_i32_i64(index_primexp_41453);
        float defunc_0_f_res_t_res_39105 = ((__global
                                             float *) defunc_4_map_res_mem_43943)[gtid_39005 *
                                                                                  N_30803 +
                                                                                  i_39104];
        
        defunc_0_f_res_39103 = defunc_0_f_res_t_res_39105;
    } else {
        defunc_0_f_res_39103 = 0.0F;
    }
    
    float defunc_0_f_res_39106 = defunc_0_f_res_39103 * defunc_0_f_res_39103;
    
    ((__local float *) red_arr_mem_45198)[gtid_39010] = defunc_0_f_res_39106;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45200;
    int32_t skip_waves_45201;
    
    skip_waves_45201 = 1;
    
    float x_39098;
    float x_39099;
    
    offset_45200 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45189, sext_i64_i32(i32_res_30817))) {
            x_39098 = ((__local
                        float *) red_arr_mem_45198)[sext_i32_i64(local_tid_45189 +
                                                    offset_45200)];
        }
    }
    offset_45200 = 1;
    while (slt32(offset_45200, wave_sizze_45191)) {
        if (slt32(local_tid_45189 + offset_45200,
                  sext_i64_i32(i32_res_30817)) && ((local_tid_45189 -
                                                    squot32(local_tid_45189,
                                                            wave_sizze_45191) *
                                                    wave_sizze_45191) & (2 *
                                                                         offset_45200 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39099 = ((volatile __local
                            float *) red_arr_mem_45198)[sext_i32_i64(local_tid_45189 +
                                                        offset_45200)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39100 = x_39098 + x_39099;
                
                x_39098 = defunc_1_op_res_39100;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45198)[sext_i32_i64(local_tid_45189)] =
                    x_39098;
            }
        }
        offset_45200 *= 2;
    }
    while (slt32(skip_waves_45201, squot32(sext_i64_i32(i32_res_30817) +
                                           wave_sizze_45191 - 1,
                                           wave_sizze_45191))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45200 = skip_waves_45201 * wave_sizze_45191;
        if (slt32(local_tid_45189 + offset_45200,
                  sext_i64_i32(i32_res_30817)) && ((local_tid_45189 -
                                                    squot32(local_tid_45189,
                                                            wave_sizze_45191) *
                                                    wave_sizze_45191) == 0 &&
                                                   (squot32(local_tid_45189,
                                                            wave_sizze_45191) &
                                                    (2 * skip_waves_45201 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39099 = ((__local
                            float *) red_arr_mem_45198)[sext_i32_i64(local_tid_45189 +
                                                        offset_45200)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39100 = x_39098 + x_39099;
                
                x_39098 = defunc_1_op_res_39100;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45198)[sext_i32_i64(local_tid_45189)] =
                    x_39098;
            }
        }
        skip_waves_45201 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39097 = ((__local float *) red_arr_mem_45198)[0];
    
    int32_t r32_arg_39107 = sub32(defunc_0_f_res_39089, k2p2_30819);
    float i32_res_39108 = sitofp_i32_f32(r32_arg_39107);
    float sqrt_arg_39109 = defunc_0_f_res_39097 / i32_res_39108;
    float sqrt_res_39110;
    
    sqrt_res_39110 = futrts_sqrt32(sqrt_arg_39109);
    
    float i32_res_39111 = sitofp_i32_f32(defunc_0_f_res_39089);
    float t32_arg_39112 = hfrac_30810 * i32_res_39111;
    int32_t f32_res_39113 = fptosi_f32_i32(t32_arg_39112);
    
    if (local_tid_45189 == 0) {
        ((__global int32_t *) mem_44003)[gtid_39005] = f32_res_39113;
    }
    if (local_tid_45189 == 0) {
        ((__global int32_t *) mem_44005)[gtid_39005] = defunc_0_f_res_39089;
    }
    if (local_tid_45189 == 0) {
        ((__global float *) mem_44007)[gtid_39005] = sqrt_res_39110;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_39458(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_44221_backing_aligned_0,
                                            __local volatile
                                            int64_t *double_buffer_mem_44483_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_44219_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44217_backing_aligned_3,
                                            __local volatile
                                            int64_t *mem_44215_backing_aligned_4,
                                            __local volatile
                                            int64_t *mem_44213_backing_aligned_5,
                                            __local volatile
                                            int64_t *mem_44211_backing_aligned_6,
                                            __local volatile
                                            int64_t *mem_44201_backing_aligned_7,
                                            __local volatile
                                            int64_t *red_arr_mem_45487_backing_aligned_8,
                                            __local volatile
                                            int64_t *red_arr_mem_45485_backing_aligned_9,
                                            __local volatile
                                            int64_t *red_arr_mem_45483_backing_aligned_10,
                                            __local volatile
                                            int64_t *mem_44197_backing_aligned_11,
                                            int64_t N_30803, int32_t n_30808,
                                            int64_t iota32_arg_31190,
                                            int32_t iters_31221,
                                            int64_t i_31223, __global
                                            unsigned char *defunc_4_map_res_mem_43942,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43943,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43944,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44022,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44023,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44024,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_44073,
                                            __global unsigned char *mem_44078,
                                            __global unsigned char *mem_44231,
                                            __global unsigned char *mem_44233,
                                            __global unsigned char *mem_44235)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44221_backing_11 = (__local volatile
                                                            char *) mem_44221_backing_aligned_0;
    __local volatile char *restrict double_buffer_mem_44483_backing_10 =
                          (__local volatile
                           char *) double_buffer_mem_44483_backing_aligned_1;
    __local volatile char *restrict mem_44219_backing_9 = (__local volatile
                                                           char *) mem_44219_backing_aligned_2;
    __local volatile char *restrict mem_44217_backing_8 = (__local volatile
                                                           char *) mem_44217_backing_aligned_3;
    __local volatile char *restrict mem_44215_backing_7 = (__local volatile
                                                           char *) mem_44215_backing_aligned_4;
    __local volatile char *restrict mem_44213_backing_6 = (__local volatile
                                                           char *) mem_44213_backing_aligned_5;
    __local volatile char *restrict mem_44211_backing_5 = (__local volatile
                                                           char *) mem_44211_backing_aligned_6;
    __local volatile char *restrict mem_44201_backing_4 = (__local volatile
                                                           char *) mem_44201_backing_aligned_7;
    __local volatile char *restrict red_arr_mem_45487_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45487_backing_aligned_8;
    __local volatile char *restrict red_arr_mem_45485_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45485_backing_aligned_9;
    __local volatile char *restrict red_arr_mem_45483_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45483_backing_aligned_10;
    __local volatile char *restrict mem_44197_backing_0 = (__local volatile
                                                           char *) mem_44197_backing_aligned_11;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45466;
    int32_t local_tid_45467;
    int64_t group_sizze_45470;
    int32_t wave_sizze_45469;
    int32_t group_tid_45468;
    
    global_tid_45466 = get_global_id(0);
    local_tid_45467 = get_local_id(0);
    group_sizze_45470 = get_local_size(0);
    wave_sizze_45469 = LOCKSTEP_WIDTH;
    group_tid_45468 = get_group_id(0);
    
    int32_t phys_tid_39458;
    
    phys_tid_39458 = group_tid_45468;
    
    int32_t ltid_pre_45471;
    
    ltid_pre_45471 = local_tid_45467;
    
    int64_t gtid_39425;
    
    gtid_39425 = sext_i32_i64(group_tid_45468);
    
    int32_t x_39943;
    
    x_39943 = ((__global int32_t *) defunc_4_map_res_mem_43942)[gtid_39425];
    
    int32_t x_39944 = ((__global
                        int32_t *) defunc_3_map_res_mem_44023)[gtid_39425];
    float x_39945 = ((__global float *) defunc_3_map_res_mem_44024)[gtid_39425];
    int32_t x_39946 = ((__global
                        int32_t *) defunc_3_map_res_mem_44022)[gtid_39425];
    float x_39947 = ((__global float *) defunc_0_f_res_mem_44073)[gtid_39425];
    int32_t y_39950 = sub32(x_39943, x_39944);
    float i32_res_39951 = sitofp_i32_f32(x_39944);
    float sqrt_res_39952;
    
    sqrt_res_39952 = futrts_sqrt32(i32_res_39951);
    
    float y_39953 = x_39945 * sqrt_res_39952;
    __local char *mem_44197;
    
    mem_44197 = (__local char *) mem_44197_backing_0;
    
    int64_t gtid_39428 = sext_i32_i64(ltid_pre_45471);
    int32_t phys_tid_39429 = local_tid_45467;
    int32_t index_primexp_41466 = sext_i64_i32(gtid_39428);
    bool cond_39966 = sle32(y_39950, index_primexp_41466);
    float defunc_0_f_res_39967;
    
    if (cond_39966) {
        defunc_0_f_res_39967 = 0.0F;
    } else {
        bool cond_39968 = index_primexp_41466 == 0;
        float defunc_0_f_res_f_res_39969;
        
        if (cond_39968) {
            defunc_0_f_res_f_res_39969 = x_39947;
        } else {
            int32_t i_39970 = add32(x_39944, index_primexp_41466);
            int64_t i_39971 = sext_i32_i64(i_39970);
            float x_39972 = ((__global
                              float *) defunc_4_map_res_mem_43943)[gtid_39425 *
                                                                   N_30803 +
                                                                   i_39971];
            int32_t x_39973 = sub32(x_39944, x_39946);
            int32_t i_39974 = add32(x_39973, index_primexp_41466);
            int64_t i_39975 = sext_i32_i64(i_39974);
            float y_39976 = ((__global
                              float *) defunc_4_map_res_mem_43943)[gtid_39425 *
                                                                   N_30803 +
                                                                   i_39975];
            float defunc_0_f_res_f_res_f_res_39977 = x_39972 - y_39976;
            
            defunc_0_f_res_f_res_39969 = defunc_0_f_res_f_res_f_res_39977;
        }
        defunc_0_f_res_39967 = defunc_0_f_res_f_res_39969;
    }
    ((__local float *) mem_44197)[gtid_39428] = defunc_0_f_res_39967;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45472;
    
    dims_flat_45472 = iota32_arg_31190;
    
    float x_39962;
    float x_39963;
    float x_45474;
    float x_45475;
    bool ltid_in_bounds_45477;
    
    ltid_in_bounds_45477 = slt64(sext_i32_i64(local_tid_45467),
                                 iota32_arg_31190);
    
    int32_t skip_threads_45478;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45477) {
            x_39963 = ((volatile __local
                        float *) mem_44197)[sext_i32_i64(local_tid_45467)];
            if ((local_tid_45467 - squot32(local_tid_45467, 32) * 32) == 0) {
                x_39962 = x_39963;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45478 = 1;
        while (slt32(skip_threads_45478, 32)) {
            if (sle32(skip_threads_45478, local_tid_45467 -
                      squot32(local_tid_45467, 32) * 32) &&
                ltid_in_bounds_45477) {
                // read operands
                {
                    x_39962 = ((volatile __local
                                float *) mem_44197)[sext_i32_i64(local_tid_45467) -
                                                    sext_i32_i64(skip_threads_45478)];
                }
                // perform operation
                {
                    bool inactive_45479 =
                         slt64(srem64(sext_i32_i64(local_tid_45467),
                                      iota32_arg_31190),
                               sext_i32_i64(local_tid_45467) -
                               sext_i32_i64(local_tid_45467 -
                               skip_threads_45478));
                    
                    if (inactive_45479) {
                        x_39962 = x_39963;
                    }
                    if (!inactive_45479) {
                        float defunc_1_op_res_39964 = x_39962 + x_39963;
                        
                        x_39962 = defunc_1_op_res_39964;
                    }
                }
            }
            if (sle32(wave_sizze_45469, skip_threads_45478)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45478, local_tid_45467 -
                      squot32(local_tid_45467, 32) * 32) &&
                ltid_in_bounds_45477) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44197)[sext_i32_i64(local_tid_45467)] =
                        x_39962;
                    x_39963 = x_39962;
                }
            }
            if (sle32(wave_sizze_45469, skip_threads_45478)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45478 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45467 - squot32(local_tid_45467, 32) * 32) == 31 &&
            ltid_in_bounds_45477) {
            ((volatile __local
              float *) mem_44197)[sext_i32_i64(squot32(local_tid_45467, 32))] =
                x_39962;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45480;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45467, 32) == 0 && ltid_in_bounds_45477) {
                x_45475 = ((volatile __local
                            float *) mem_44197)[sext_i32_i64(local_tid_45467)];
                if ((local_tid_45467 - squot32(local_tid_45467, 32) * 32) ==
                    0) {
                    x_45474 = x_45475;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45480 = 1;
            while (slt32(skip_threads_45480, 32)) {
                if (sle32(skip_threads_45480, local_tid_45467 -
                          squot32(local_tid_45467, 32) * 32) &&
                    (squot32(local_tid_45467, 32) == 0 &&
                     ltid_in_bounds_45477)) {
                    // read operands
                    {
                        x_45474 = ((volatile __local
                                    float *) mem_44197)[sext_i32_i64(local_tid_45467) -
                                                        sext_i32_i64(skip_threads_45480)];
                    }
                    // perform operation
                    {
                        bool inactive_45481 =
                             slt64(srem64(sext_i32_i64(local_tid_45467 * 32 +
                                          32 - 1), iota32_arg_31190),
                                   sext_i32_i64(local_tid_45467 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45467 -
                                                 skip_threads_45480) * 32 + 32 -
                                   1));
                        
                        if (inactive_45481) {
                            x_45474 = x_45475;
                        }
                        if (!inactive_45481) {
                            float defunc_1_op_res_45476 = x_45474 + x_45475;
                            
                            x_45474 = defunc_1_op_res_45476;
                        }
                    }
                }
                if (sle32(wave_sizze_45469, skip_threads_45480)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45480, local_tid_45467 -
                          squot32(local_tid_45467, 32) * 32) &&
                    (squot32(local_tid_45467, 32) == 0 &&
                     ltid_in_bounds_45477)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44197)[sext_i32_i64(local_tid_45467)] =
                            x_45474;
                        x_45475 = x_45474;
                    }
                }
                if (sle32(wave_sizze_45469, skip_threads_45480)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45480 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45467, 32) == 0 || !ltid_in_bounds_45477)) {
            // read operands
            {
                x_39963 = x_39962;
                x_39962 = ((__local
                            float *) mem_44197)[sext_i32_i64(squot32(local_tid_45467,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45482 =
                     slt64(srem64(sext_i32_i64(local_tid_45467),
                                  iota32_arg_31190),
                           sext_i32_i64(local_tid_45467) -
                           sext_i32_i64(squot32(local_tid_45467, 32) * 32 - 1));
                
                if (inactive_45482) {
                    x_39962 = x_39963;
                }
                if (!inactive_45482) {
                    float defunc_1_op_res_39964 = x_39962 + x_39963;
                    
                    x_39962 = defunc_1_op_res_39964;
                }
            }
            // write final result
            {
                ((__local float *) mem_44197)[sext_i32_i64(local_tid_45467)] =
                    x_39962;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45467, 32) == 0) {
            ((__local float *) mem_44197)[sext_i32_i64(local_tid_45467)] =
                x_39963;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_39983;
    int32_t acc0_39984;
    float acc0_39985;
    int64_t gtid_39430 = sext_i32_i64(ltid_pre_45471);
    int32_t phys_tid_39431 = local_tid_45467;
    __local char *red_arr_mem_45483;
    
    red_arr_mem_45483 = (__local char *) red_arr_mem_45483_backing_1;
    
    __local char *red_arr_mem_45485;
    
    red_arr_mem_45485 = (__local char *) red_arr_mem_45485_backing_2;
    
    __local char *red_arr_mem_45487;
    
    red_arr_mem_45487 = (__local char *) red_arr_mem_45487_backing_3;
    
    float x_40000;
    
    x_40000 = ((__local float *) mem_44197)[gtid_39430];
    
    float x_40001 = ((__global float *) mem_44078)[gtid_39430];
    int32_t index_primexp_41469 = sext_i64_i32(gtid_39430);
    float defunc_0_f_res_40004 = x_40000 / y_39953;
    bool cond_40005 = slt32(index_primexp_41469, y_39950);
    bool isnan_res_40006;
    
    isnan_res_40006 = futrts_isnan32(defunc_0_f_res_40004);
    
    bool cond_t_res_40007 = !isnan_res_40006;
    bool x_40008 = cond_40005 && cond_t_res_40007;
    float abs_res_40009 = (float) fabs(defunc_0_f_res_40004);
    bool defunc_2_f_res_t_res_40010 = x_40001 < abs_res_40009;
    bool x_40011 = x_40008 && defunc_2_f_res_t_res_40010;
    float defunc_1_f_res_40012;
    
    if (cond_40005) {
        defunc_1_f_res_40012 = defunc_0_f_res_40004;
    } else {
        defunc_1_f_res_40012 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45483)[gtid_39430] = x_40011;
    ((__local int32_t *) red_arr_mem_45485)[gtid_39430] = index_primexp_41469;
    ((__local float *) red_arr_mem_45487)[gtid_39430] = defunc_1_f_res_40012;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45489;
    int32_t skip_waves_45490;
    
    skip_waves_45490 = 1;
    
    bool x_39986;
    int32_t x_39987;
    float x_39988;
    bool x_39989;
    int32_t x_39990;
    float x_39991;
    
    offset_45489 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45467, sext_i64_i32(iota32_arg_31190))) {
            x_39986 = ((__local
                        bool *) red_arr_mem_45483)[sext_i32_i64(local_tid_45467 +
                                                   offset_45489)];
            x_39987 = ((__local
                        int32_t *) red_arr_mem_45485)[sext_i32_i64(local_tid_45467 +
                                                      offset_45489)];
            x_39988 = ((__local
                        float *) red_arr_mem_45487)[sext_i32_i64(local_tid_45467 +
                                                    offset_45489)];
        }
    }
    offset_45489 = 1;
    while (slt32(offset_45489, wave_sizze_45469)) {
        if (slt32(local_tid_45467 + offset_45489,
                  sext_i64_i32(iota32_arg_31190)) && ((local_tid_45467 -
                                                       squot32(local_tid_45467,
                                                               wave_sizze_45469) *
                                                       wave_sizze_45469) & (2 *
                                                                            offset_45489 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_39989 = ((volatile __local
                            bool *) red_arr_mem_45483)[sext_i32_i64(local_tid_45467 +
                                                       offset_45489)];
                x_39990 = ((volatile __local
                            int32_t *) red_arr_mem_45485)[sext_i32_i64(local_tid_45467 +
                                                          offset_45489)];
                x_39991 = ((volatile __local
                            float *) red_arr_mem_45487)[sext_i32_i64(local_tid_45467 +
                                                        offset_45489)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_39992;
                int32_t defunc_1_op_res_39993;
                
                if (x_39986) {
                    defunc_1_op_res_39992 = x_39986;
                    defunc_1_op_res_39993 = x_39987;
                } else {
                    bool x_39994 = x_39989 && x_39989;
                    bool x_39995 = !x_39989;
                    bool y_39996 = x_39986 && x_39995;
                    bool defunc_1_op_res_f_res_39997 = x_39994 || y_39996;
                    int32_t defunc_1_op_res_f_res_39998;
                    
                    if (x_39989) {
                        defunc_1_op_res_f_res_39998 = x_39990;
                    } else {
                        defunc_1_op_res_f_res_39998 = x_39987;
                    }
                    defunc_1_op_res_39992 = defunc_1_op_res_f_res_39997;
                    defunc_1_op_res_39993 = defunc_1_op_res_f_res_39998;
                }
                
                float defunc_1_op_res_39999 = x_39988 + x_39991;
                
                x_39986 = defunc_1_op_res_39992;
                x_39987 = defunc_1_op_res_39993;
                x_39988 = defunc_1_op_res_39999;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45483)[sext_i32_i64(local_tid_45467)] =
                    x_39986;
                ((volatile __local
                  int32_t *) red_arr_mem_45485)[sext_i32_i64(local_tid_45467)] =
                    x_39987;
                ((volatile __local
                  float *) red_arr_mem_45487)[sext_i32_i64(local_tid_45467)] =
                    x_39988;
            }
        }
        offset_45489 *= 2;
    }
    while (slt32(skip_waves_45490, squot32(sext_i64_i32(iota32_arg_31190) +
                                           wave_sizze_45469 - 1,
                                           wave_sizze_45469))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45489 = skip_waves_45490 * wave_sizze_45469;
        if (slt32(local_tid_45467 + offset_45489,
                  sext_i64_i32(iota32_arg_31190)) && ((local_tid_45467 -
                                                       squot32(local_tid_45467,
                                                               wave_sizze_45469) *
                                                       wave_sizze_45469) == 0 &&
                                                      (squot32(local_tid_45467,
                                                               wave_sizze_45469) &
                                                       (2 * skip_waves_45490 -
                                                        1)) == 0)) {
            // read array element
            {
                x_39989 = ((__local
                            bool *) red_arr_mem_45483)[sext_i32_i64(local_tid_45467 +
                                                       offset_45489)];
                x_39990 = ((__local
                            int32_t *) red_arr_mem_45485)[sext_i32_i64(local_tid_45467 +
                                                          offset_45489)];
                x_39991 = ((__local
                            float *) red_arr_mem_45487)[sext_i32_i64(local_tid_45467 +
                                                        offset_45489)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_39992;
                int32_t defunc_1_op_res_39993;
                
                if (x_39986) {
                    defunc_1_op_res_39992 = x_39986;
                    defunc_1_op_res_39993 = x_39987;
                } else {
                    bool x_39994 = x_39989 && x_39989;
                    bool x_39995 = !x_39989;
                    bool y_39996 = x_39986 && x_39995;
                    bool defunc_1_op_res_f_res_39997 = x_39994 || y_39996;
                    int32_t defunc_1_op_res_f_res_39998;
                    
                    if (x_39989) {
                        defunc_1_op_res_f_res_39998 = x_39990;
                    } else {
                        defunc_1_op_res_f_res_39998 = x_39987;
                    }
                    defunc_1_op_res_39992 = defunc_1_op_res_f_res_39997;
                    defunc_1_op_res_39993 = defunc_1_op_res_f_res_39998;
                }
                
                float defunc_1_op_res_39999 = x_39988 + x_39991;
                
                x_39986 = defunc_1_op_res_39992;
                x_39987 = defunc_1_op_res_39993;
                x_39988 = defunc_1_op_res_39999;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45483)[sext_i32_i64(local_tid_45467)] =
                    x_39986;
                ((__local
                  int32_t *) red_arr_mem_45485)[sext_i32_i64(local_tid_45467)] =
                    x_39987;
                ((__local
                  float *) red_arr_mem_45487)[sext_i32_i64(local_tid_45467)] =
                    x_39988;
            }
        }
        skip_waves_45490 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_39983 = ((__local bool *) red_arr_mem_45483)[0];
    acc0_39984 = ((__local int32_t *) red_arr_mem_45485)[0];
    acc0_39985 = ((__local float *) red_arr_mem_45487)[0];
    
    bool x_40015 = acc0_39983 && acc0_39983;
    int32_t defunc_1_op_res_f_res_40019;
    
    if (acc0_39983) {
        defunc_1_op_res_f_res_40019 = acc0_39984;
    } else {
        defunc_1_op_res_f_res_40019 = -1;
    }
    
    bool cond_40025 = y_39950 == 0;
    float defunc_0_f_res_40026;
    
    if (cond_40025) {
        defunc_0_f_res_40026 = 0.0F;
    } else {
        float i32_res_40027 = sitofp_i32_f32(y_39950);
        float defunc_0_f_res_f_res_40028 = acc0_39985 / i32_res_40027;
        
        defunc_0_f_res_40026 = defunc_0_f_res_f_res_40028;
    }
    
    __local char *mem_44201;
    
    mem_44201 = (__local char *) mem_44201_backing_4;
    
    int64_t gtid_39432 = sext_i32_i64(ltid_pre_45471);
    int32_t phys_tid_39433 = local_tid_45467;
    int32_t index_primexp_41472 = sext_i64_i32(gtid_39432);
    bool cond_40031 = slt32(index_primexp_41472, y_39950);
    bool cond_40032;
    
    if (cond_40031) {
        int32_t i_40033 = add32(x_39944, index_primexp_41472);
        int64_t i_40034 = sext_i32_i64(i_40033);
        bool x_40035 = sle64(0, i_40034);
        bool y_40036 = slt64(i_40034, N_30803);
        bool bounds_check_40037 = x_40035 && y_40036;
        bool index_certs_40038;
        
        if (!bounds_check_40037) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 6) == -1) {
                    global_failure_args[0] = i_40034;
                    global_failure_args[1] = N_30803;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_40039 = ((__global
                                  float *) defunc_4_map_res_mem_43943)[gtid_39425 *
                                                                       N_30803 +
                                                                       i_40034];
        bool isnan_res_40040;
        
        isnan_res_40040 = futrts_isnan32(isnan_arg_40039);
        
        bool cond_t_res_40041 = !isnan_res_40040;
        
        cond_40032 = cond_t_res_40041;
    } else {
        cond_40032 = 0;
    }
    
    float defunc_0_f_res_40042;
    
    if (cond_40032) {
        int32_t i_40043 = add32(x_39944, index_primexp_41472);
        int64_t i_40044 = sext_i32_i64(i_40043);
        bool x_40045 = sle64(0, i_40044);
        bool y_40046 = slt64(i_40044, N_30803);
        bool bounds_check_40047 = x_40045 && y_40046;
        bool index_certs_40048;
        
        if (!bounds_check_40047) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 7) == -1) {
                    global_failure_args[0] = i_40044;
                    global_failure_args[1] = N_30803;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_40049 = ((__global
                                             float *) defunc_4_map_res_mem_43943)[gtid_39425 *
                                                                                  N_30803 +
                                                                                  i_40044];
        
        defunc_0_f_res_40042 = defunc_0_f_res_t_res_40049;
    } else {
        defunc_0_f_res_40042 = INFINITY;
    }
    ((__local float *) mem_44201)[gtid_39432] = defunc_0_f_res_40042;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44211;
    
    mem_44211 = (__local char *) mem_44211_backing_5;
    
    __local char *mem_44213;
    
    mem_44213 = (__local char *) mem_44213_backing_6;
    
    __local char *mem_44215;
    
    mem_44215 = (__local char *) mem_44215_backing_7;
    
    __local char *mem_44217;
    
    mem_44217 = (__local char *) mem_44217_backing_8;
    
    __local char *mem_44219;
    
    mem_44219 = (__local char *) mem_44219_backing_9;
    
    __local char *double_buffer_mem_44483;
    
    double_buffer_mem_44483 = (__local
                               char *) double_buffer_mem_44483_backing_10;
    ((__local float *) double_buffer_mem_44483)[sext_i32_i64(local_tid_45467)] =
        ((__local float *) mem_44201)[sext_i32_i64(local_tid_45467)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44221;
    
    mem_44221 = (__local char *) mem_44221_backing_11;
    for (int32_t i_40051 = 0; i_40051 < iters_31221; i_40051++) {
        int32_t defunc_2_radix_sort_step_arg_40053 = mul32(2, i_40051);
        int32_t defunc_0_get_bit_arg_40054 = add32(1,
                                                   defunc_2_radix_sort_step_arg_40053);
        bool cond_f_res_40055 = defunc_0_get_bit_arg_40054 == 31;
        bool cond_f_res_40056 = defunc_2_radix_sort_step_arg_40053 == 31;
        int64_t gtid_39454 = sext_i32_i64(ltid_pre_45471);
        int32_t phys_tid_39455 = local_tid_45467;
        float x_40074 = ((__local float *) double_buffer_mem_44483)[gtid_39454];
        int32_t i32_arg_40075;
        
        i32_arg_40075 = futrts_to_bits32(x_40074);
        
        int32_t unsign_arg_40076 = ashr32(i32_arg_40075,
                                          defunc_0_get_bit_arg_40054);
        int32_t unsign_arg_40077 = 1 & unsign_arg_40076;
        int32_t unsign_arg_40078 = ashr32(i32_arg_40075, 31);
        int32_t unsign_arg_40079 = 1 & unsign_arg_40078;
        bool cond_40080 = unsign_arg_40079 == 1;
        bool x_40081 = !cond_40080;
        bool y_40082 = cond_f_res_40055 && x_40081;
        bool cond_40083 = cond_40080 || y_40082;
        int32_t defunc_1_get_bit_res_40084;
        
        if (cond_40083) {
            int32_t defunc_1_get_bit_res_t_res_40085 = 1 ^ unsign_arg_40077;
            
            defunc_1_get_bit_res_40084 = defunc_1_get_bit_res_t_res_40085;
        } else {
            defunc_1_get_bit_res_40084 = unsign_arg_40077;
        }
        
        int32_t x_40086 = mul32(2, defunc_1_get_bit_res_40084);
        int32_t unsign_arg_40087 = ashr32(i32_arg_40075,
                                          defunc_2_radix_sort_step_arg_40053);
        int32_t unsign_arg_40088 = 1 & unsign_arg_40087;
        bool y_40089 = cond_f_res_40056 && x_40081;
        bool cond_40090 = cond_40080 || y_40089;
        int32_t defunc_1_get_bit_res_40091;
        
        if (cond_40090) {
            int32_t defunc_1_get_bit_res_t_res_40092 = 1 ^ unsign_arg_40088;
            
            defunc_1_get_bit_res_40091 = defunc_1_get_bit_res_t_res_40092;
        } else {
            defunc_1_get_bit_res_40091 = unsign_arg_40088;
        }
        
        int32_t defunc_0_f_res_40093 = add32(x_40086,
                                             defunc_1_get_bit_res_40091);
        bool cond_40094 = defunc_0_f_res_40093 == 0;
        int64_t defunc_0_f_res_40095 = btoi_bool_i64(cond_40094);
        int64_t defunc_0_f_res_40096;
        int64_t defunc_0_f_res_40097;
        int64_t defunc_0_f_res_40098;
        
        if (cond_40094) {
            defunc_0_f_res_40096 = 0;
            defunc_0_f_res_40097 = 0;
            defunc_0_f_res_40098 = 0;
        } else {
            bool cond_40099 = defunc_0_f_res_40093 == 1;
            int64_t defunc_0_f_res_f_res_40100 = btoi_bool_i64(cond_40099);
            int64_t defunc_0_f_res_f_res_40101;
            int64_t defunc_0_f_res_f_res_40102;
            
            if (cond_40099) {
                defunc_0_f_res_f_res_40101 = 0;
                defunc_0_f_res_f_res_40102 = 0;
            } else {
                bool cond_40103 = defunc_0_f_res_40093 == 2;
                int64_t defunc_0_f_res_f_res_f_res_40104 =
                        btoi_bool_i64(cond_40103);
                bool cond_neg_40105 = !cond_40103;
                int64_t defunc_0_f_res_f_res_f_res_40106 =
                        btoi_bool_i64(cond_neg_40105);
                
                defunc_0_f_res_f_res_40101 = defunc_0_f_res_f_res_f_res_40104;
                defunc_0_f_res_f_res_40102 = defunc_0_f_res_f_res_f_res_40106;
            }
            defunc_0_f_res_40096 = defunc_0_f_res_f_res_40100;
            defunc_0_f_res_40097 = defunc_0_f_res_f_res_40101;
            defunc_0_f_res_40098 = defunc_0_f_res_f_res_40102;
        }
        ((__local int64_t *) mem_44211)[gtid_39454] = defunc_0_f_res_40095;
        ((__local int64_t *) mem_44213)[gtid_39454] = defunc_0_f_res_40096;
        ((__local int64_t *) mem_44215)[gtid_39454] = defunc_0_f_res_40097;
        ((__local int64_t *) mem_44217)[gtid_39454] = defunc_0_f_res_40098;
        ((__local int32_t *) mem_44219)[gtid_39454] = defunc_0_f_res_40093;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t dims_flat_45492;
        
        dims_flat_45492 = iota32_arg_31190;
        
        int64_t x_40062;
        int64_t x_40063;
        int64_t x_40064;
        int64_t x_40065;
        int64_t x_40066;
        int64_t x_40067;
        int64_t x_40068;
        int64_t x_40069;
        int64_t x_45497;
        int64_t x_45498;
        int64_t x_45499;
        int64_t x_45500;
        int64_t x_45501;
        int64_t x_45502;
        int64_t x_45503;
        int64_t x_45504;
        bool ltid_in_bounds_45509;
        
        ltid_in_bounds_45509 = slt64(sext_i32_i64(local_tid_45467),
                                     iota32_arg_31190);
        
        int32_t skip_threads_45510;
        
        // read input for in-block scan
        {
            if (ltid_in_bounds_45509) {
                x_40066 = ((volatile __local
                            int64_t *) mem_44211)[sext_i32_i64(local_tid_45467)];
                x_40067 = ((volatile __local
                            int64_t *) mem_44213)[sext_i32_i64(local_tid_45467)];
                x_40068 = ((volatile __local
                            int64_t *) mem_44215)[sext_i32_i64(local_tid_45467)];
                x_40069 = ((volatile __local
                            int64_t *) mem_44217)[sext_i32_i64(local_tid_45467)];
                if ((local_tid_45467 - squot32(local_tid_45467, 32) * 32) ==
                    0) {
                    x_40062 = x_40066;
                    x_40063 = x_40067;
                    x_40064 = x_40068;
                    x_40065 = x_40069;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45510 = 1;
            while (slt32(skip_threads_45510, 32)) {
                if (sle32(skip_threads_45510, local_tid_45467 -
                          squot32(local_tid_45467, 32) * 32) &&
                    ltid_in_bounds_45509) {
                    // read operands
                    {
                        x_40062 = ((volatile __local
                                    int64_t *) mem_44211)[sext_i32_i64(local_tid_45467) -
                                                          sext_i32_i64(skip_threads_45510)];
                        x_40063 = ((volatile __local
                                    int64_t *) mem_44213)[sext_i32_i64(local_tid_45467) -
                                                          sext_i32_i64(skip_threads_45510)];
                        x_40064 = ((volatile __local
                                    int64_t *) mem_44215)[sext_i32_i64(local_tid_45467) -
                                                          sext_i32_i64(skip_threads_45510)];
                        x_40065 = ((volatile __local
                                    int64_t *) mem_44217)[sext_i32_i64(local_tid_45467) -
                                                          sext_i32_i64(skip_threads_45510)];
                    }
                    // perform operation
                    {
                        bool inactive_45511 =
                             slt64(srem64(sext_i32_i64(local_tid_45467),
                                          iota32_arg_31190),
                                   sext_i32_i64(local_tid_45467) -
                                   sext_i32_i64(local_tid_45467 -
                                   skip_threads_45510));
                        
                        if (inactive_45511) {
                            x_40062 = x_40066;
                            x_40063 = x_40067;
                            x_40064 = x_40068;
                            x_40065 = x_40069;
                        }
                        if (!inactive_45511) {
                            int64_t defunc_1_op_res_40070 = add64(x_40062,
                                                                  x_40066);
                            int64_t defunc_1_op_res_40071 = add64(x_40063,
                                                                  x_40067);
                            int64_t defunc_1_op_res_40072 = add64(x_40064,
                                                                  x_40068);
                            int64_t defunc_1_op_res_40073 = add64(x_40065,
                                                                  x_40069);
                            
                            x_40062 = defunc_1_op_res_40070;
                            x_40063 = defunc_1_op_res_40071;
                            x_40064 = defunc_1_op_res_40072;
                            x_40065 = defunc_1_op_res_40073;
                        }
                    }
                }
                if (sle32(wave_sizze_45469, skip_threads_45510)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45510, local_tid_45467 -
                          squot32(local_tid_45467, 32) * 32) &&
                    ltid_in_bounds_45509) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44211)[sext_i32_i64(local_tid_45467)] =
                            x_40062;
                        x_40066 = x_40062;
                        ((volatile __local
                          int64_t *) mem_44213)[sext_i32_i64(local_tid_45467)] =
                            x_40063;
                        x_40067 = x_40063;
                        ((volatile __local
                          int64_t *) mem_44215)[sext_i32_i64(local_tid_45467)] =
                            x_40064;
                        x_40068 = x_40064;
                        ((volatile __local
                          int64_t *) mem_44217)[sext_i32_i64(local_tid_45467)] =
                            x_40065;
                        x_40069 = x_40065;
                    }
                }
                if (sle32(wave_sizze_45469, skip_threads_45510)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45510 *= 2;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // last thread of block 'i' writes its result to offset 'i'
        {
            if ((local_tid_45467 - squot32(local_tid_45467, 32) * 32) == 31 &&
                ltid_in_bounds_45509) {
                ((volatile __local
                  int64_t *) mem_44211)[sext_i32_i64(squot32(local_tid_45467,
                                                             32))] = x_40062;
                ((volatile __local
                  int64_t *) mem_44213)[sext_i32_i64(squot32(local_tid_45467,
                                                             32))] = x_40063;
                ((volatile __local
                  int64_t *) mem_44215)[sext_i32_i64(squot32(local_tid_45467,
                                                             32))] = x_40064;
                ((volatile __local
                  int64_t *) mem_44217)[sext_i32_i64(squot32(local_tid_45467,
                                                             32))] = x_40065;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
        {
            int32_t skip_threads_45512;
            
            // read input for in-block scan
            {
                if (squot32(local_tid_45467, 32) == 0 && ltid_in_bounds_45509) {
                    x_45501 = ((volatile __local
                                int64_t *) mem_44211)[sext_i32_i64(local_tid_45467)];
                    x_45502 = ((volatile __local
                                int64_t *) mem_44213)[sext_i32_i64(local_tid_45467)];
                    x_45503 = ((volatile __local
                                int64_t *) mem_44215)[sext_i32_i64(local_tid_45467)];
                    x_45504 = ((volatile __local
                                int64_t *) mem_44217)[sext_i32_i64(local_tid_45467)];
                    if ((local_tid_45467 - squot32(local_tid_45467, 32) * 32) ==
                        0) {
                        x_45497 = x_45501;
                        x_45498 = x_45502;
                        x_45499 = x_45503;
                        x_45500 = x_45504;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45512 = 1;
                while (slt32(skip_threads_45512, 32)) {
                    if (sle32(skip_threads_45512, local_tid_45467 -
                              squot32(local_tid_45467, 32) * 32) &&
                        (squot32(local_tid_45467, 32) == 0 &&
                         ltid_in_bounds_45509)) {
                        // read operands
                        {
                            x_45497 = ((volatile __local
                                        int64_t *) mem_44211)[sext_i32_i64(local_tid_45467) -
                                                              sext_i32_i64(skip_threads_45512)];
                            x_45498 = ((volatile __local
                                        int64_t *) mem_44213)[sext_i32_i64(local_tid_45467) -
                                                              sext_i32_i64(skip_threads_45512)];
                            x_45499 = ((volatile __local
                                        int64_t *) mem_44215)[sext_i32_i64(local_tid_45467) -
                                                              sext_i32_i64(skip_threads_45512)];
                            x_45500 = ((volatile __local
                                        int64_t *) mem_44217)[sext_i32_i64(local_tid_45467) -
                                                              sext_i32_i64(skip_threads_45512)];
                        }
                        // perform operation
                        {
                            bool inactive_45513 =
                                 slt64(srem64(sext_i32_i64(local_tid_45467 *
                                              32 + 32 - 1), iota32_arg_31190),
                                       sext_i32_i64(local_tid_45467 * 32 + 32 -
                                       1) - sext_i32_i64((local_tid_45467 -
                                                          skip_threads_45512) *
                                       32 + 32 - 1));
                            
                            if (inactive_45513) {
                                x_45497 = x_45501;
                                x_45498 = x_45502;
                                x_45499 = x_45503;
                                x_45500 = x_45504;
                            }
                            if (!inactive_45513) {
                                int64_t defunc_1_op_res_45505 = add64(x_45497,
                                                                      x_45501);
                                int64_t defunc_1_op_res_45506 = add64(x_45498,
                                                                      x_45502);
                                int64_t defunc_1_op_res_45507 = add64(x_45499,
                                                                      x_45503);
                                int64_t defunc_1_op_res_45508 = add64(x_45500,
                                                                      x_45504);
                                
                                x_45497 = defunc_1_op_res_45505;
                                x_45498 = defunc_1_op_res_45506;
                                x_45499 = defunc_1_op_res_45507;
                                x_45500 = defunc_1_op_res_45508;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45469, skip_threads_45512)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45512, local_tid_45467 -
                              squot32(local_tid_45467, 32) * 32) &&
                        (squot32(local_tid_45467, 32) == 0 &&
                         ltid_in_bounds_45509)) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) mem_44211)[sext_i32_i64(local_tid_45467)] =
                                x_45497;
                            x_45501 = x_45497;
                            ((volatile __local
                              int64_t *) mem_44213)[sext_i32_i64(local_tid_45467)] =
                                x_45498;
                            x_45502 = x_45498;
                            ((volatile __local
                              int64_t *) mem_44215)[sext_i32_i64(local_tid_45467)] =
                                x_45499;
                            x_45503 = x_45499;
                            ((volatile __local
                              int64_t *) mem_44217)[sext_i32_i64(local_tid_45467)] =
                                x_45500;
                            x_45504 = x_45500;
                        }
                    }
                    if (sle32(wave_sizze_45469, skip_threads_45512)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45512 *= 2;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // carry-in for every block except the first
        {
            if (!(squot32(local_tid_45467, 32) == 0 || !ltid_in_bounds_45509)) {
                // read operands
                {
                    x_40066 = x_40062;
                    x_40067 = x_40063;
                    x_40068 = x_40064;
                    x_40069 = x_40065;
                    x_40062 = ((__local
                                int64_t *) mem_44211)[sext_i32_i64(squot32(local_tid_45467,
                                                                           32)) -
                                                      1];
                    x_40063 = ((__local
                                int64_t *) mem_44213)[sext_i32_i64(squot32(local_tid_45467,
                                                                           32)) -
                                                      1];
                    x_40064 = ((__local
                                int64_t *) mem_44215)[sext_i32_i64(squot32(local_tid_45467,
                                                                           32)) -
                                                      1];
                    x_40065 = ((__local
                                int64_t *) mem_44217)[sext_i32_i64(squot32(local_tid_45467,
                                                                           32)) -
                                                      1];
                }
                // perform operation
                {
                    bool inactive_45514 =
                         slt64(srem64(sext_i32_i64(local_tid_45467),
                                      iota32_arg_31190),
                               sext_i32_i64(local_tid_45467) -
                               sext_i32_i64(squot32(local_tid_45467, 32) * 32 -
                               1));
                    
                    if (inactive_45514) {
                        x_40062 = x_40066;
                        x_40063 = x_40067;
                        x_40064 = x_40068;
                        x_40065 = x_40069;
                    }
                    if (!inactive_45514) {
                        int64_t defunc_1_op_res_40070 = add64(x_40062, x_40066);
                        int64_t defunc_1_op_res_40071 = add64(x_40063, x_40067);
                        int64_t defunc_1_op_res_40072 = add64(x_40064, x_40068);
                        int64_t defunc_1_op_res_40073 = add64(x_40065, x_40069);
                        
                        x_40062 = defunc_1_op_res_40070;
                        x_40063 = defunc_1_op_res_40071;
                        x_40064 = defunc_1_op_res_40072;
                        x_40065 = defunc_1_op_res_40073;
                    }
                }
                // write final result
                {
                    ((__local
                      int64_t *) mem_44211)[sext_i32_i64(local_tid_45467)] =
                        x_40062;
                    ((__local
                      int64_t *) mem_44213)[sext_i32_i64(local_tid_45467)] =
                        x_40063;
                    ((__local
                      int64_t *) mem_44215)[sext_i32_i64(local_tid_45467)] =
                        x_40064;
                    ((__local
                      int64_t *) mem_44217)[sext_i32_i64(local_tid_45467)] =
                        x_40065;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // restore correct values for first block
        {
            if (squot32(local_tid_45467, 32) == 0) {
                ((__local int64_t *) mem_44211)[sext_i32_i64(local_tid_45467)] =
                    x_40066;
                ((__local int64_t *) mem_44213)[sext_i32_i64(local_tid_45467)] =
                    x_40067;
                ((__local int64_t *) mem_44215)[sext_i32_i64(local_tid_45467)] =
                    x_40068;
                ((__local int64_t *) mem_44217)[sext_i32_i64(local_tid_45467)] =
                    x_40069;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t last_res_40107 = ((__local int64_t *) mem_44211)[i_31223];
        int64_t last_res_40108 = ((__local int64_t *) mem_44213)[i_31223];
        int64_t last_res_40109 = ((__local int64_t *) mem_44215)[i_31223];
        
        ((__local float *) mem_44221)[sext_i32_i64(local_tid_45467)] = ((__local
                                                                         float *) double_buffer_mem_44483)[sext_i32_i64(local_tid_45467)];
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_39456 = sext_i32_i64(ltid_pre_45471);
        int32_t phys_tid_39457 = local_tid_45467;
        int32_t x_40112 = ((__local int32_t *) mem_44219)[write_i_39456];
        float write_value_40117 = ((__local
                                    float *) double_buffer_mem_44483)[write_i_39456];
        bool match_lit_40118 = 0 == x_40112;
        int64_t defunc_1_f_res_40119;
        
        if (match_lit_40118) {
            int64_t x_40113 = ((__local int64_t *) mem_44211)[write_i_39456];
            int64_t case_res_40120 = sub64(x_40113, 1);
            
            defunc_1_f_res_40119 = case_res_40120;
        } else {
            int64_t x_40114 = ((__local int64_t *) mem_44213)[write_i_39456];
            int64_t x_40115 = ((__local int64_t *) mem_44215)[write_i_39456];
            int64_t x_40116 = ((__local int64_t *) mem_44217)[write_i_39456];
            bool match_lit_40121 = 1 == x_40112;
            int64_t x_40122;
            
            if (match_lit_40121) {
                int64_t x_40123 = add64(last_res_40107, x_40114);
                int64_t case_res_40124 = sub64(x_40123, 1);
                
                x_40122 = case_res_40124;
            } else {
                bool match_lit_40125 = 2 == x_40112;
                int64_t x_40126;
                
                if (match_lit_40125) {
                    int64_t x_40127 = add64(last_res_40107, last_res_40108);
                    int64_t x_40128 = add64(x_40115, x_40127);
                    int64_t case_res_40129 = sub64(x_40128, 1);
                    
                    x_40126 = case_res_40129;
                } else {
                    int64_t x_40130 = add64(last_res_40107, last_res_40108);
                    int64_t x_40131 = add64(last_res_40109, x_40130);
                    int64_t x_40132 = add64(x_40116, x_40131);
                    int64_t defunc_1_f_res_res_40133 = sub64(x_40132, 1);
                    
                    x_40126 = defunc_1_f_res_res_40133;
                }
                x_40122 = x_40126;
            }
            defunc_1_f_res_40119 = x_40122;
        }
        if (sle64(0, defunc_1_f_res_40119) && slt64(defunc_1_f_res_40119,
                                                    iota32_arg_31190)) {
            ((__local float *) mem_44221)[defunc_1_f_res_40119] =
                write_value_40117;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        ((__local
          float *) double_buffer_mem_44483)[sext_i32_i64(local_tid_45467)] =
            ((__local float *) mem_44221)[sext_i32_i64(local_tid_45467)];
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    int32_t i_40134 = sdiv32(y_39950, 2);
    int32_t j_40135 = sub32(i_40134, 1);
    bool cond_40136 = x_39943 == x_39944;
    float defunc_0_f_res_40137;
    
    if (cond_40136) {
        defunc_0_f_res_40137 = 0.0F;
    } else {
        int32_t x_40138 = smod32(y_39950, 2);
        bool cond_40139 = x_40138 == 0;
        float defunc_0_f_res_f_res_40140;
        
        if (cond_40139) {
            int64_t j_40141 = sext_i32_i64(j_40135);
            bool x_40142 = sle64(0, j_40141);
            bool y_40143 = slt64(j_40141, iota32_arg_31190);
            bool bounds_check_40144 = x_40142 && y_40143;
            bool index_certs_40145;
            
            if (!bounds_check_40144) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                        -1) {
                        global_failure_args[0] = j_40141;
                        global_failure_args[1] = iota32_arg_31190;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float x_40146 = ((__local
                              float *) double_buffer_mem_44483)[j_40141];
            int64_t i_40147 = sext_i32_i64(i_40134);
            bool x_40148 = sle64(0, i_40147);
            bool y_40149 = slt64(i_40147, iota32_arg_31190);
            bool bounds_check_40150 = x_40148 && y_40149;
            bool index_certs_40151;
            
            if (!bounds_check_40150) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                        -1) {
                        global_failure_args[0] = i_40147;
                        global_failure_args[1] = iota32_arg_31190;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float y_40152 = ((__local
                              float *) double_buffer_mem_44483)[i_40147];
            float x_40153 = x_40146 + y_40152;
            float defunc_0_f_res_f_res_t_res_40154 = x_40153 / 2.0F;
            
            defunc_0_f_res_f_res_40140 = defunc_0_f_res_f_res_t_res_40154;
        } else {
            int64_t i_40155 = sext_i32_i64(i_40134);
            bool x_40156 = sle64(0, i_40155);
            bool y_40157 = slt64(i_40155, iota32_arg_31190);
            bool bounds_check_40158 = x_40156 && y_40157;
            bool index_certs_40159;
            
            if (!bounds_check_40158) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                        -1) {
                        global_failure_args[0] = i_40155;
                        global_failure_args[1] = iota32_arg_31190;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_40160 = ((__local
                                                       float *) double_buffer_mem_44483)[i_40155];
            
            defunc_0_f_res_f_res_40140 = defunc_0_f_res_f_res_f_res_40160;
        }
        defunc_0_f_res_40137 = defunc_0_f_res_f_res_40140;
    }
    
    bool cond_40161 = !x_40015;
    int32_t fst_breakzq_40162;
    
    if (cond_40161) {
        fst_breakzq_40162 = -1;
    } else {
        bool cond_40163 = slt32(defunc_1_op_res_f_res_40019, y_39950);
        int32_t adjustValInds_res_40164;
        
        if (cond_40163) {
            int32_t i_40165 = add32(x_39944, defunc_1_op_res_f_res_40019);
            int64_t i_40166 = sext_i32_i64(i_40165);
            int32_t x_40167 = ((__global
                                int32_t *) defunc_4_map_res_mem_43944)[gtid_39425 *
                                                                       N_30803 +
                                                                       i_40166];
            int32_t adjustValInds_res_t_res_40168 = sub32(x_40167, n_30808);
            
            adjustValInds_res_40164 = adjustValInds_res_t_res_40168;
        } else {
            adjustValInds_res_40164 = -1;
        }
        fst_breakzq_40162 = adjustValInds_res_40164;
    }
    
    bool cond_40169 = sle32(x_39944, 5);
    bool cond_f_res_40170 = sle32(y_39950, 5);
    bool x_40171 = !cond_40169;
    bool y_40172 = cond_f_res_40170 && x_40171;
    bool cond_40173 = cond_40169 || y_40172;
    int32_t fst_breakzq_40174;
    
    if (cond_40173) {
        fst_breakzq_40174 = -2;
    } else {
        fst_breakzq_40174 = fst_breakzq_40162;
    }
    if (local_tid_45467 == 0) {
        ((__global int32_t *) mem_44231)[gtid_39425] = fst_breakzq_40174;
    }
    if (local_tid_45467 == 0) {
        ((__global float *) mem_44233)[gtid_39425] = defunc_0_f_res_40026;
    }
    if (local_tid_45467 == 0) {
        ((__global float *) mem_44235)[gtid_39425] = defunc_0_f_res_40137;
    }
    
  error_6:
    return;
}
__kernel void mainzisegmap_intragroup_40244(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44289_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44287_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_44285_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44283_backing_aligned_3,
                                            __local volatile
                                            int64_t *mem_44281_backing_aligned_4,
                                            __local volatile
                                            int64_t *mem_44279_backing_aligned_5,
                                            int64_t m_30804,
                                            int64_t iota32_arg_31190,
                                            int64_t i_31223,
                                            int32_t defunc_2_radix_sort_step_arg_41134,
                                            int32_t defunc_0_get_bit_arg_41135,
                                            unsigned char cond_f_res_41136,
                                            unsigned char cond_f_res_41137,
                                            __global
                                            unsigned char *mem_param_44270,
                                            __global unsigned char *mem_44275,
                                            __global unsigned char *mem_44293)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44289_backing_5 = (__local volatile
                                                           char *) mem_44289_backing_aligned_0;
    __local volatile char *restrict mem_44287_backing_4 = (__local volatile
                                                           char *) mem_44287_backing_aligned_1;
    __local volatile char *restrict mem_44285_backing_3 = (__local volatile
                                                           char *) mem_44285_backing_aligned_2;
    __local volatile char *restrict mem_44283_backing_2 = (__local volatile
                                                           char *) mem_44283_backing_aligned_3;
    __local volatile char *restrict mem_44281_backing_1 = (__local volatile
                                                           char *) mem_44281_backing_aligned_4;
    __local volatile char *restrict mem_44279_backing_0 = (__local volatile
                                                           char *) mem_44279_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45689;
    int32_t local_tid_45690;
    int64_t group_sizze_45693;
    int32_t wave_sizze_45692;
    int32_t group_tid_45691;
    
    global_tid_45689 = get_global_id(0);
    local_tid_45690 = get_local_id(0);
    group_sizze_45693 = get_local_size(0);
    wave_sizze_45692 = LOCKSTEP_WIDTH;
    group_tid_45691 = get_group_id(0);
    
    int32_t phys_tid_40244;
    
    phys_tid_40244 = group_tid_45691;
    
    int32_t ltid_pre_45694;
    
    ltid_pre_45694 = local_tid_45690;
    
    int64_t gtid_40237;
    
    gtid_40237 = sext_i32_i64(group_tid_45691);
    
    __local char *mem_44279;
    
    mem_44279 = (__local char *) mem_44279_backing_0;
    
    __local char *mem_44281;
    
    mem_44281 = (__local char *) mem_44281_backing_1;
    
    __local char *mem_44283;
    
    mem_44283 = (__local char *) mem_44283_backing_2;
    
    __local char *mem_44285;
    
    mem_44285 = (__local char *) mem_44285_backing_3;
    
    __local char *mem_44287;
    
    mem_44287 = (__local char *) mem_44287_backing_4;
    
    int64_t gtid_40240 = sext_i32_i64(ltid_pre_45694);
    int32_t phys_tid_40241 = local_tid_45690;
    float x_41167 = ((__global float *) mem_param_44270)[gtid_40237 *
                                                         iota32_arg_31190 +
                                                         gtid_40240];
    int32_t i32_arg_41168;
    
    i32_arg_41168 = futrts_to_bits32(x_41167);
    
    int32_t unsign_arg_41169 = ashr32(i32_arg_41168,
                                      defunc_0_get_bit_arg_41135);
    int32_t unsign_arg_41170 = 1 & unsign_arg_41169;
    int32_t unsign_arg_41171 = ashr32(i32_arg_41168, 31);
    int32_t unsign_arg_41172 = 1 & unsign_arg_41171;
    bool cond_41173 = unsign_arg_41172 == 1;
    bool x_41174 = !cond_41173;
    bool y_41175 = cond_f_res_41136 && x_41174;
    bool cond_41176 = cond_41173 || y_41175;
    int32_t defunc_1_get_bit_res_41177;
    
    if (cond_41176) {
        int32_t defunc_1_get_bit_res_t_res_41178 = 1 ^ unsign_arg_41170;
        
        defunc_1_get_bit_res_41177 = defunc_1_get_bit_res_t_res_41178;
    } else {
        defunc_1_get_bit_res_41177 = unsign_arg_41170;
    }
    
    int32_t x_41179 = mul32(2, defunc_1_get_bit_res_41177);
    int32_t unsign_arg_41180 = ashr32(i32_arg_41168,
                                      defunc_2_radix_sort_step_arg_41134);
    int32_t unsign_arg_41181 = 1 & unsign_arg_41180;
    bool y_41182 = cond_f_res_41137 && x_41174;
    bool cond_41183 = cond_41173 || y_41182;
    int32_t defunc_1_get_bit_res_41184;
    
    if (cond_41183) {
        int32_t defunc_1_get_bit_res_t_res_41185 = 1 ^ unsign_arg_41181;
        
        defunc_1_get_bit_res_41184 = defunc_1_get_bit_res_t_res_41185;
    } else {
        defunc_1_get_bit_res_41184 = unsign_arg_41181;
    }
    
    int32_t defunc_0_f_res_41186 = add32(x_41179, defunc_1_get_bit_res_41184);
    bool cond_41187 = defunc_0_f_res_41186 == 0;
    int64_t defunc_0_f_res_41188 = btoi_bool_i64(cond_41187);
    int64_t defunc_0_f_res_41189;
    int64_t defunc_0_f_res_41190;
    int64_t defunc_0_f_res_41191;
    
    if (cond_41187) {
        defunc_0_f_res_41189 = 0;
        defunc_0_f_res_41190 = 0;
        defunc_0_f_res_41191 = 0;
    } else {
        bool cond_41192 = defunc_0_f_res_41186 == 1;
        int64_t defunc_0_f_res_f_res_41193 = btoi_bool_i64(cond_41192);
        int64_t defunc_0_f_res_f_res_41194;
        int64_t defunc_0_f_res_f_res_41195;
        
        if (cond_41192) {
            defunc_0_f_res_f_res_41194 = 0;
            defunc_0_f_res_f_res_41195 = 0;
        } else {
            bool cond_41196 = defunc_0_f_res_41186 == 2;
            int64_t defunc_0_f_res_f_res_f_res_41197 =
                    btoi_bool_i64(cond_41196);
            bool cond_neg_41198 = !cond_41196;
            int64_t defunc_0_f_res_f_res_f_res_41199 =
                    btoi_bool_i64(cond_neg_41198);
            
            defunc_0_f_res_f_res_41194 = defunc_0_f_res_f_res_f_res_41197;
            defunc_0_f_res_f_res_41195 = defunc_0_f_res_f_res_f_res_41199;
        }
        defunc_0_f_res_41189 = defunc_0_f_res_f_res_41193;
        defunc_0_f_res_41190 = defunc_0_f_res_f_res_41194;
        defunc_0_f_res_41191 = defunc_0_f_res_f_res_41195;
    }
    ((__local int64_t *) mem_44279)[gtid_40240] = defunc_0_f_res_41188;
    ((__local int64_t *) mem_44281)[gtid_40240] = defunc_0_f_res_41189;
    ((__local int64_t *) mem_44283)[gtid_40240] = defunc_0_f_res_41190;
    ((__local int64_t *) mem_44285)[gtid_40240] = defunc_0_f_res_41191;
    ((__local int32_t *) mem_44287)[gtid_40240] = defunc_0_f_res_41186;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45695;
    
    dims_flat_45695 = iota32_arg_31190;
    
    int64_t x_41155;
    int64_t x_41156;
    int64_t x_41157;
    int64_t x_41158;
    int64_t x_41159;
    int64_t x_41160;
    int64_t x_41161;
    int64_t x_41162;
    int64_t x_45700;
    int64_t x_45701;
    int64_t x_45702;
    int64_t x_45703;
    int64_t x_45704;
    int64_t x_45705;
    int64_t x_45706;
    int64_t x_45707;
    bool ltid_in_bounds_45712;
    
    ltid_in_bounds_45712 = slt64(sext_i32_i64(local_tid_45690),
                                 iota32_arg_31190);
    
    int32_t skip_threads_45713;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45712) {
            x_41159 = ((volatile __local
                        int64_t *) mem_44279)[sext_i32_i64(local_tid_45690)];
            x_41160 = ((volatile __local
                        int64_t *) mem_44281)[sext_i32_i64(local_tid_45690)];
            x_41161 = ((volatile __local
                        int64_t *) mem_44283)[sext_i32_i64(local_tid_45690)];
            x_41162 = ((volatile __local
                        int64_t *) mem_44285)[sext_i32_i64(local_tid_45690)];
            if ((local_tid_45690 - squot32(local_tid_45690, 32) * 32) == 0) {
                x_41155 = x_41159;
                x_41156 = x_41160;
                x_41157 = x_41161;
                x_41158 = x_41162;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45713 = 1;
        while (slt32(skip_threads_45713, 32)) {
            if (sle32(skip_threads_45713, local_tid_45690 -
                      squot32(local_tid_45690, 32) * 32) &&
                ltid_in_bounds_45712) {
                // read operands
                {
                    x_41155 = ((volatile __local
                                int64_t *) mem_44279)[sext_i32_i64(local_tid_45690) -
                                                      sext_i32_i64(skip_threads_45713)];
                    x_41156 = ((volatile __local
                                int64_t *) mem_44281)[sext_i32_i64(local_tid_45690) -
                                                      sext_i32_i64(skip_threads_45713)];
                    x_41157 = ((volatile __local
                                int64_t *) mem_44283)[sext_i32_i64(local_tid_45690) -
                                                      sext_i32_i64(skip_threads_45713)];
                    x_41158 = ((volatile __local
                                int64_t *) mem_44285)[sext_i32_i64(local_tid_45690) -
                                                      sext_i32_i64(skip_threads_45713)];
                }
                // perform operation
                {
                    bool inactive_45714 =
                         slt64(srem64(sext_i32_i64(local_tid_45690),
                                      iota32_arg_31190),
                               sext_i32_i64(local_tid_45690) -
                               sext_i32_i64(local_tid_45690 -
                               skip_threads_45713));
                    
                    if (inactive_45714) {
                        x_41155 = x_41159;
                        x_41156 = x_41160;
                        x_41157 = x_41161;
                        x_41158 = x_41162;
                    }
                    if (!inactive_45714) {
                        int64_t defunc_1_op_res_41163 = add64(x_41155, x_41159);
                        int64_t defunc_1_op_res_41164 = add64(x_41156, x_41160);
                        int64_t defunc_1_op_res_41165 = add64(x_41157, x_41161);
                        int64_t defunc_1_op_res_41166 = add64(x_41158, x_41162);
                        
                        x_41155 = defunc_1_op_res_41163;
                        x_41156 = defunc_1_op_res_41164;
                        x_41157 = defunc_1_op_res_41165;
                        x_41158 = defunc_1_op_res_41166;
                    }
                }
            }
            if (sle32(wave_sizze_45692, skip_threads_45713)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45713, local_tid_45690 -
                      squot32(local_tid_45690, 32) * 32) &&
                ltid_in_bounds_45712) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44279)[sext_i32_i64(local_tid_45690)] =
                        x_41155;
                    x_41159 = x_41155;
                    ((volatile __local
                      int64_t *) mem_44281)[sext_i32_i64(local_tid_45690)] =
                        x_41156;
                    x_41160 = x_41156;
                    ((volatile __local
                      int64_t *) mem_44283)[sext_i32_i64(local_tid_45690)] =
                        x_41157;
                    x_41161 = x_41157;
                    ((volatile __local
                      int64_t *) mem_44285)[sext_i32_i64(local_tid_45690)] =
                        x_41158;
                    x_41162 = x_41158;
                }
            }
            if (sle32(wave_sizze_45692, skip_threads_45713)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45713 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45690 - squot32(local_tid_45690, 32) * 32) == 31 &&
            ltid_in_bounds_45712) {
            ((volatile __local
              int64_t *) mem_44279)[sext_i32_i64(squot32(local_tid_45690,
                                                         32))] = x_41155;
            ((volatile __local
              int64_t *) mem_44281)[sext_i32_i64(squot32(local_tid_45690,
                                                         32))] = x_41156;
            ((volatile __local
              int64_t *) mem_44283)[sext_i32_i64(squot32(local_tid_45690,
                                                         32))] = x_41157;
            ((volatile __local
              int64_t *) mem_44285)[sext_i32_i64(squot32(local_tid_45690,
                                                         32))] = x_41158;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45715;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45690, 32) == 0 && ltid_in_bounds_45712) {
                x_45704 = ((volatile __local
                            int64_t *) mem_44279)[sext_i32_i64(local_tid_45690)];
                x_45705 = ((volatile __local
                            int64_t *) mem_44281)[sext_i32_i64(local_tid_45690)];
                x_45706 = ((volatile __local
                            int64_t *) mem_44283)[sext_i32_i64(local_tid_45690)];
                x_45707 = ((volatile __local
                            int64_t *) mem_44285)[sext_i32_i64(local_tid_45690)];
                if ((local_tid_45690 - squot32(local_tid_45690, 32) * 32) ==
                    0) {
                    x_45700 = x_45704;
                    x_45701 = x_45705;
                    x_45702 = x_45706;
                    x_45703 = x_45707;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45715 = 1;
            while (slt32(skip_threads_45715, 32)) {
                if (sle32(skip_threads_45715, local_tid_45690 -
                          squot32(local_tid_45690, 32) * 32) &&
                    (squot32(local_tid_45690, 32) == 0 &&
                     ltid_in_bounds_45712)) {
                    // read operands
                    {
                        x_45700 = ((volatile __local
                                    int64_t *) mem_44279)[sext_i32_i64(local_tid_45690) -
                                                          sext_i32_i64(skip_threads_45715)];
                        x_45701 = ((volatile __local
                                    int64_t *) mem_44281)[sext_i32_i64(local_tid_45690) -
                                                          sext_i32_i64(skip_threads_45715)];
                        x_45702 = ((volatile __local
                                    int64_t *) mem_44283)[sext_i32_i64(local_tid_45690) -
                                                          sext_i32_i64(skip_threads_45715)];
                        x_45703 = ((volatile __local
                                    int64_t *) mem_44285)[sext_i32_i64(local_tid_45690) -
                                                          sext_i32_i64(skip_threads_45715)];
                    }
                    // perform operation
                    {
                        bool inactive_45716 =
                             slt64(srem64(sext_i32_i64(local_tid_45690 * 32 +
                                          32 - 1), iota32_arg_31190),
                                   sext_i32_i64(local_tid_45690 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45690 -
                                                 skip_threads_45715) * 32 + 32 -
                                   1));
                        
                        if (inactive_45716) {
                            x_45700 = x_45704;
                            x_45701 = x_45705;
                            x_45702 = x_45706;
                            x_45703 = x_45707;
                        }
                        if (!inactive_45716) {
                            int64_t defunc_1_op_res_45708 = add64(x_45700,
                                                                  x_45704);
                            int64_t defunc_1_op_res_45709 = add64(x_45701,
                                                                  x_45705);
                            int64_t defunc_1_op_res_45710 = add64(x_45702,
                                                                  x_45706);
                            int64_t defunc_1_op_res_45711 = add64(x_45703,
                                                                  x_45707);
                            
                            x_45700 = defunc_1_op_res_45708;
                            x_45701 = defunc_1_op_res_45709;
                            x_45702 = defunc_1_op_res_45710;
                            x_45703 = defunc_1_op_res_45711;
                        }
                    }
                }
                if (sle32(wave_sizze_45692, skip_threads_45715)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45715, local_tid_45690 -
                          squot32(local_tid_45690, 32) * 32) &&
                    (squot32(local_tid_45690, 32) == 0 &&
                     ltid_in_bounds_45712)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44279)[sext_i32_i64(local_tid_45690)] =
                            x_45700;
                        x_45704 = x_45700;
                        ((volatile __local
                          int64_t *) mem_44281)[sext_i32_i64(local_tid_45690)] =
                            x_45701;
                        x_45705 = x_45701;
                        ((volatile __local
                          int64_t *) mem_44283)[sext_i32_i64(local_tid_45690)] =
                            x_45702;
                        x_45706 = x_45702;
                        ((volatile __local
                          int64_t *) mem_44285)[sext_i32_i64(local_tid_45690)] =
                            x_45703;
                        x_45707 = x_45703;
                    }
                }
                if (sle32(wave_sizze_45692, skip_threads_45715)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45715 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45690, 32) == 0 || !ltid_in_bounds_45712)) {
            // read operands
            {
                x_41159 = x_41155;
                x_41160 = x_41156;
                x_41161 = x_41157;
                x_41162 = x_41158;
                x_41155 = ((__local
                            int64_t *) mem_44279)[sext_i32_i64(squot32(local_tid_45690,
                                                                       32)) -
                                                  1];
                x_41156 = ((__local
                            int64_t *) mem_44281)[sext_i32_i64(squot32(local_tid_45690,
                                                                       32)) -
                                                  1];
                x_41157 = ((__local
                            int64_t *) mem_44283)[sext_i32_i64(squot32(local_tid_45690,
                                                                       32)) -
                                                  1];
                x_41158 = ((__local
                            int64_t *) mem_44285)[sext_i32_i64(squot32(local_tid_45690,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45717 =
                     slt64(srem64(sext_i32_i64(local_tid_45690),
                                  iota32_arg_31190),
                           sext_i32_i64(local_tid_45690) -
                           sext_i32_i64(squot32(local_tid_45690, 32) * 32 - 1));
                
                if (inactive_45717) {
                    x_41155 = x_41159;
                    x_41156 = x_41160;
                    x_41157 = x_41161;
                    x_41158 = x_41162;
                }
                if (!inactive_45717) {
                    int64_t defunc_1_op_res_41163 = add64(x_41155, x_41159);
                    int64_t defunc_1_op_res_41164 = add64(x_41156, x_41160);
                    int64_t defunc_1_op_res_41165 = add64(x_41157, x_41161);
                    int64_t defunc_1_op_res_41166 = add64(x_41158, x_41162);
                    
                    x_41155 = defunc_1_op_res_41163;
                    x_41156 = defunc_1_op_res_41164;
                    x_41157 = defunc_1_op_res_41165;
                    x_41158 = defunc_1_op_res_41166;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44279)[sext_i32_i64(local_tid_45690)] =
                    x_41155;
                ((__local int64_t *) mem_44281)[sext_i32_i64(local_tid_45690)] =
                    x_41156;
                ((__local int64_t *) mem_44283)[sext_i32_i64(local_tid_45690)] =
                    x_41157;
                ((__local int64_t *) mem_44285)[sext_i32_i64(local_tid_45690)] =
                    x_41158;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45690, 32) == 0) {
            ((__local int64_t *) mem_44279)[sext_i32_i64(local_tid_45690)] =
                x_41159;
            ((__local int64_t *) mem_44281)[sext_i32_i64(local_tid_45690)] =
                x_41160;
            ((__local int64_t *) mem_44283)[sext_i32_i64(local_tid_45690)] =
                x_41161;
            ((__local int64_t *) mem_44285)[sext_i32_i64(local_tid_45690)] =
                x_41162;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_41200 = ((__local int64_t *) mem_44279)[i_31223];
    int64_t last_res_41201 = ((__local int64_t *) mem_44281)[i_31223];
    int64_t last_res_41202 = ((__local int64_t *) mem_44283)[i_31223];
    __local char *mem_44289;
    
    mem_44289 = (__local char *) mem_44289_backing_5;
    ((__local float *) mem_44289)[sext_i32_i64(local_tid_45690)] = ((__global
                                                                     float *) mem_44275)[gtid_40237 +
                                                                                         sext_i32_i64(local_tid_45690) *
                                                                                         m_30804];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_40242 = sext_i32_i64(ltid_pre_45694);
    int32_t phys_tid_40243 = local_tid_45690;
    int32_t x_41205 = ((__local int32_t *) mem_44287)[write_i_40242];
    float write_value_41210 = ((__global float *) mem_param_44270)[gtid_40237 *
                                                                   iota32_arg_31190 +
                                                                   write_i_40242];
    bool match_lit_41211 = 0 == x_41205;
    int64_t defunc_1_f_res_41212;
    
    if (match_lit_41211) {
        int64_t x_41206 = ((__local int64_t *) mem_44279)[write_i_40242];
        int64_t case_res_41213 = sub64(x_41206, 1);
        
        defunc_1_f_res_41212 = case_res_41213;
    } else {
        int64_t x_41207 = ((__local int64_t *) mem_44281)[write_i_40242];
        int64_t x_41208 = ((__local int64_t *) mem_44283)[write_i_40242];
        int64_t x_41209 = ((__local int64_t *) mem_44285)[write_i_40242];
        bool match_lit_41214 = 1 == x_41205;
        int64_t x_41215;
        
        if (match_lit_41214) {
            int64_t x_41216 = add64(last_res_41200, x_41207);
            int64_t case_res_41217 = sub64(x_41216, 1);
            
            x_41215 = case_res_41217;
        } else {
            bool match_lit_41218 = 2 == x_41205;
            int64_t x_41219;
            
            if (match_lit_41218) {
                int64_t x_41220 = add64(last_res_41200, last_res_41201);
                int64_t x_41221 = add64(x_41208, x_41220);
                int64_t case_res_41222 = sub64(x_41221, 1);
                
                x_41219 = case_res_41222;
            } else {
                int64_t x_41223 = add64(last_res_41200, last_res_41201);
                int64_t x_41224 = add64(last_res_41202, x_41223);
                int64_t x_41225 = add64(x_41209, x_41224);
                int64_t defunc_1_f_res_res_41226 = sub64(x_41225, 1);
                
                x_41219 = defunc_1_f_res_res_41226;
            }
            x_41215 = x_41219;
        }
        defunc_1_f_res_41212 = x_41215;
    }
    if (sle64(0, defunc_1_f_res_41212) && slt64(defunc_1_f_res_41212,
                                                iota32_arg_31190)) {
        ((__local float *) mem_44289)[defunc_1_f_res_41212] = write_value_41210;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44293)[gtid_40237 * iota32_arg_31190 +
                                   sext_i32_i64(local_tid_45690)] = ((__local
                                                                      float *) mem_44289)[sext_i32_i64(local_tid_45690)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_41566(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43507_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43504_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43485_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43482_backing_aligned_3,
                                            int64_t m_30804, int64_t N_30805,
                                            int64_t i32_res_30817,
                                            int64_t i32_res_30823,
                                            int64_t num_groups_x_41562,
                                            int64_t num_whole_tiles_41582,
                                            int64_t residual_input_41744,
                                            unsigned char cond_41745, __global
                                            unsigned char *images_mem_43378,
                                            __global unsigned char *mem_43390,
                                            __global unsigned char *mem_43394,
                                            __global unsigned char *mem_43523)
{
    #define tile_sizze_41560 (mainzitile_sizze_41559)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43507_backing_7 = (__local volatile
                                                           char *) mem_43507_backing_aligned_0;
    __local volatile char *restrict mem_43504_backing_6 = (__local volatile
                                                           char *) mem_43504_backing_aligned_1;
    __local volatile char *restrict mem_43485_backing_1 = (__local volatile
                                                           char *) mem_43485_backing_aligned_2;
    __local volatile char *restrict mem_43482_backing_0 = (__local volatile
                                                           char *) mem_43482_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44664;
    int32_t local_tid_44665;
    int64_t group_sizze_44668;
    int32_t wave_sizze_44667;
    int32_t group_tid_44666;
    
    global_tid_44664 = get_global_id(0);
    local_tid_44665 = get_local_id(0);
    group_sizze_44668 = get_local_size(0);
    wave_sizze_44667 = LOCKSTEP_WIDTH;
    group_tid_44666 = get_group_id(0);
    
    int32_t gid_flat_41566;
    
    gid_flat_41566 = group_tid_44666;
    
    int32_t ltid_pre_44669;
    
    ltid_pre_44669 = squot32(local_tid_44665, sext_i64_i32(tile_sizze_41560));
    
    int32_t ltid_pre_44670;
    
    ltid_pre_44670 = local_tid_44665 - squot32(local_tid_44665,
                                               sext_i64_i32(tile_sizze_41560)) *
        sext_i64_i32(tile_sizze_41560);
    
    int64_t gtid_37091;
    
    gtid_37091 = squot64(sext_i32_i64(group_tid_44666), num_groups_x_41562 *
                         num_groups_x_41562);
    
    int64_t gid_x_41557;
    
    gid_x_41557 = squot64(sext_i32_i64(group_tid_44666) -
                          squot64(sext_i32_i64(group_tid_44666),
                                  num_groups_x_41562 * num_groups_x_41562) *
                          (num_groups_x_41562 * num_groups_x_41562),
                          num_groups_x_41562);
    
    int64_t gid_y_41558;
    
    gid_y_41558 = sext_i32_i64(group_tid_44666) -
        squot64(sext_i32_i64(group_tid_44666), num_groups_x_41562 *
                num_groups_x_41562) * (num_groups_x_41562 *
                                       num_groups_x_41562) -
        squot64(sext_i32_i64(group_tid_44666) -
                squot64(sext_i32_i64(group_tid_44666), num_groups_x_41562 *
                        num_groups_x_41562) * (num_groups_x_41562 *
                                               num_groups_x_41562),
                num_groups_x_41562) * num_groups_x_41562;
    
    float mem_43467[1];
    int64_t ltid_x_41583 = sext_i32_i64(ltid_pre_44669);
    int64_t ltid_y_41584 = sext_i32_i64(ltid_pre_44670);
    int32_t ltid_flat_41585 = local_tid_44665;
    
    if (slt64(ltid_x_41583, tile_sizze_41560) && slt64(ltid_y_41584,
                                                       tile_sizze_41560)) {
        mem_43467[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41688 = gid_x_41557 * tile_sizze_41560;
    int64_t binop_x_41690 = gid_y_41558 * tile_sizze_41560;
    __local char *mem_43482;
    
    mem_43482 = (__local char *) mem_43482_backing_0;
    
    __local char *mem_43485;
    
    mem_43485 = (__local char *) mem_43485_backing_1;
    
    float accs_mem_43500[1];
    float mem_param_43475[1];
    
    for (int32_t i_2 = 0; i_2 < 1; i_2++)
        mem_param_43475[i_2] = mem_43467[i_2];
    for (int64_t tile_id_41594 = 0; tile_id_41594 < num_whole_tiles_41582;
         tile_id_41594++) {
        int64_t binop_x_41684 = tile_sizze_41560 * tile_id_41594;
        int64_t ltid_x_41595 = sext_i32_i64(ltid_pre_44669);
        int64_t ltid_y_41596 = sext_i32_i64(ltid_pre_44670);
        int32_t ltid_flat_41597 = local_tid_44665;
        int64_t i_41685 = ltid_x_41595 + binop_x_41684;
        int64_t j_41687 = ltid_y_41596 + binop_x_41684;
        int64_t gtid_41689 = ltid_x_41595 + binop_x_41688;
        int64_t gtid_41691 = ltid_y_41596 + binop_x_41690;
        bool binop_x_41694 = slt64(j_41687, i32_res_30817);
        bool binop_y_41695 = slt64(gtid_41689, i32_res_30823);
        bool cond_41696 = binop_x_41694 && binop_y_41695;
        float pre_41697;
        
        if (cond_41696) {
            float x_41698 = ((__global float *) mem_43390)[j_41687 *
                                                           i32_res_30823 +
                                                           gtid_41689];
            
            pre_41697 = x_41698;
        } else {
            pre_41697 = 0.0F;
        }
        
        bool binop_x_41700 = slt64(i_41685, i32_res_30817);
        bool binop_y_41701 = slt64(gtid_41691, i32_res_30823);
        bool cond_41702 = binop_x_41700 && binop_y_41701;
        float pre_41703;
        
        if (cond_41702) {
            float x_41704 = ((__global float *) mem_43394)[i_41685 *
                                                           i32_res_30823 +
                                                           gtid_41691];
            
            pre_41703 = x_41704;
        } else {
            pre_41703 = 0.0F;
        }
        ((__local float *) mem_43482)[ltid_x_41595 * tile_sizze_41560 +
                                      ltid_y_41596] = pre_41697;
        ((__local float *) mem_43485)[ltid_x_41595 * tile_sizze_41560 +
                                      ltid_y_41596] = pre_41703;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43489[1];
        int64_t ltid_x_41640 = sext_i32_i64(ltid_pre_44669);
        int64_t ltid_y_41641 = sext_i32_i64(ltid_pre_44670);
        int32_t ltid_flat_41642 = local_tid_44665;
        int64_t gtid_41708 = ltid_x_41640 + binop_x_41688;
        int64_t gtid_41710 = ltid_y_41641 + binop_x_41690;
        float acc_41713 = mem_param_43475[0];
        bool binop_x_41718 = slt64(gtid_41708, i32_res_30823);
        bool binop_y_41719 = slt64(gtid_41710, i32_res_30823);
        bool cond_41720 = binop_x_41718 && binop_y_41719;
        float acc_41721;
        
        if (cond_41720) {
            float x_41722;
            float redout_43251 = acc_41713;
            
            for (int64_t i_43252 = 0; i_43252 < tile_sizze_41560; i_43252++) {
                int64_t slice_43356 = binop_x_41684 + i_43252;
                float x_41726 = ((__global
                                  float *) images_mem_43378)[gtid_37091 *
                                                             N_30805 +
                                                             slice_43356];
                float x_41727 = ((__local float *) mem_43482)[ltid_x_41640 *
                                                              tile_sizze_41560 +
                                                              i_43252];
                float x_41728 = ((__local float *) mem_43485)[i_43252 *
                                                              tile_sizze_41560 +
                                                              ltid_y_41641];
                float x_41729 = x_41727 * x_41728;
                bool isnan_res_41730;
                
                isnan_res_41730 = futrts_isnan32(x_41726);
                
                float y_41731;
                
                if (isnan_res_41730) {
                    y_41731 = 0.0F;
                } else {
                    y_41731 = 1.0F;
                }
                
                float defunc_2_f_res_41732 = x_41729 * y_41731;
                float defunc_1_op_res_41725 = defunc_2_f_res_41732 +
                      redout_43251;
                float redout_tmp_44673 = defunc_1_op_res_41725;
                
                redout_43251 = redout_tmp_44673;
            }
            x_41722 = redout_43251;
            acc_41721 = x_41722;
        } else {
            acc_41721 = acc_41713;
        }
        mem_43489[0] = acc_41721;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44671[1];
        
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_tmp_44671[i_3] = mem_43489[i_3];
        for (int32_t i_4 = 0; i_4 < 1; i_4++)
            mem_param_43475[i_4] = mem_param_tmp_44671[i_4];
    }
    for (int32_t i_5 = 0; i_5 < 1; i_5++)
        accs_mem_43500[i_5] = mem_param_43475[i_5];
    
    __local char *mem_43504;
    
    mem_43504 = (__local char *) mem_43504_backing_6;
    
    __local char *mem_43507;
    
    mem_43507 = (__local char *) mem_43507_backing_7;
    
    float mem_43511[1];
    float mem_44410[1];
    
    if (cond_41745) {
        mem_44410[0] = accs_mem_43500[0];
    } else {
        int64_t binop_x_41837 = tile_sizze_41560 * num_whole_tiles_41582;
        int64_t ltid_x_41746 = sext_i32_i64(ltid_pre_44669);
        int64_t ltid_y_41747 = sext_i32_i64(ltid_pre_44670);
        int32_t ltid_flat_41748 = local_tid_44665;
        int64_t i_41838 = ltid_x_41746 + binop_x_41837;
        int64_t j_41840 = ltid_y_41747 + binop_x_41837;
        int64_t gtid_41842 = binop_x_41688 + ltid_x_41746;
        int64_t gtid_41844 = binop_x_41690 + ltid_y_41747;
        bool binop_x_41847 = slt64(j_41840, i32_res_30817);
        bool binop_y_41848 = slt64(gtid_41842, i32_res_30823);
        bool cond_41849 = binop_x_41847 && binop_y_41848;
        float pre_41850;
        
        if (cond_41849) {
            float x_41851 = ((__global float *) mem_43390)[j_41840 *
                                                           i32_res_30823 +
                                                           gtid_41842];
            
            pre_41850 = x_41851;
        } else {
            pre_41850 = 0.0F;
        }
        
        bool binop_x_41853 = slt64(i_41838, i32_res_30817);
        bool binop_y_41854 = slt64(gtid_41844, i32_res_30823);
        bool cond_41855 = binop_x_41853 && binop_y_41854;
        float pre_41856;
        
        if (cond_41855) {
            float x_41857 = ((__global float *) mem_43394)[i_41838 *
                                                           i32_res_30823 +
                                                           gtid_41844];
            
            pre_41856 = x_41857;
        } else {
            pre_41856 = 0.0F;
        }
        ((__local float *) mem_43504)[ltid_x_41746 * tile_sizze_41560 +
                                      ltid_y_41747] = pre_41850;
        ((__local float *) mem_43507)[ltid_x_41746 * tile_sizze_41560 +
                                      ltid_y_41747] = pre_41856;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_41793 = sext_i32_i64(ltid_pre_44669);
        int64_t ltid_y_41794 = sext_i32_i64(ltid_pre_44670);
        int32_t ltid_flat_41795 = local_tid_44665;
        int64_t gtid_41863 = binop_x_41688 + ltid_x_41793;
        int64_t gtid_41865 = binop_x_41690 + ltid_y_41794;
        float acc_41868 = accs_mem_43500[0];
        bool binop_x_41873 = slt64(gtid_41863, i32_res_30823);
        bool binop_y_41874 = slt64(gtid_41865, i32_res_30823);
        bool cond_41875 = binop_x_41873 && binop_y_41874;
        float acc_41876;
        
        if (cond_41875) {
            float x_41877;
            float redout_43253 = acc_41868;
            
            for (int64_t i_43254 = 0; i_43254 < residual_input_41744;
                 i_43254++) {
                int64_t slice_43357 = binop_x_41837 + i_43254;
                float x_41881 = ((__global
                                  float *) images_mem_43378)[gtid_37091 *
                                                             N_30805 +
                                                             slice_43357];
                float x_41882 = ((__local float *) mem_43504)[ltid_x_41793 *
                                                              tile_sizze_41560 +
                                                              i_43254];
                float x_41883 = ((__local float *) mem_43507)[i_43254 *
                                                              tile_sizze_41560 +
                                                              ltid_y_41794];
                float x_41884 = x_41882 * x_41883;
                bool isnan_res_41885;
                
                isnan_res_41885 = futrts_isnan32(x_41881);
                
                float y_41886;
                
                if (isnan_res_41885) {
                    y_41886 = 0.0F;
                } else {
                    y_41886 = 1.0F;
                }
                
                float defunc_2_f_res_41887 = x_41884 * y_41886;
                float defunc_1_op_res_41880 = defunc_2_f_res_41887 +
                      redout_43253;
                float redout_tmp_44674 = defunc_1_op_res_41880;
                
                redout_43253 = redout_tmp_44674;
            }
            x_41877 = redout_43253;
            acc_41876 = x_41877;
        } else {
            acc_41876 = acc_41868;
        }
        mem_43511[0] = acc_41876;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44410[0] = mem_43511[0];
    }
    
    int64_t thread_out_index_44675 = gtid_37091 +
            squot64(sext_i32_i64(local_tid_44665), tile_sizze_41560 *
                    tile_sizze_41560);
    int64_t thread_out_index_44676 = gid_x_41557 * tile_sizze_41560 +
            squot64(sext_i32_i64(local_tid_44665) -
                    squot64(sext_i32_i64(local_tid_44665), tile_sizze_41560 *
                            tile_sizze_41560) * (tile_sizze_41560 *
                                                 tile_sizze_41560),
                    tile_sizze_41560);
    int64_t thread_out_index_44677 = gid_y_41558 * tile_sizze_41560 +
            (sext_i32_i64(local_tid_44665) -
             squot64(sext_i32_i64(local_tid_44665), tile_sizze_41560 *
                     tile_sizze_41560) * (tile_sizze_41560 * tile_sizze_41560) -
             squot64(sext_i32_i64(local_tid_44665) -
                     squot64(sext_i32_i64(local_tid_44665), tile_sizze_41560 *
                             tile_sizze_41560) * (tile_sizze_41560 *
                                                  tile_sizze_41560),
                     tile_sizze_41560) * tile_sizze_41560);
    
    if ((slt64(thread_out_index_44675, m_30804) && slt64(thread_out_index_44676,
                                                         i32_res_30823)) &&
        slt64(thread_out_index_44677, i32_res_30823)) {
        ((__global float *) mem_43523)[thread_out_index_44675 * (i32_res_30823 *
                                                                 i32_res_30823) +
                                       thread_out_index_44676 * i32_res_30823 +
                                       thread_out_index_44677] = mem_44410[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41560
}
__kernel void mainzisegmap_intragroup_41911(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43693_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43690_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43671_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43668_backing_aligned_3,
                                            int64_t m_30804, int64_t N_30805,
                                            int64_t i32_res_30817,
                                            int64_t i32_res_30823,
                                            int64_t num_groups_y_41909,
                                            int64_t num_whole_tiles_41927,
                                            int64_t residual_input_42077,
                                            unsigned char cond_42078, __global
                                            unsigned char *images_mem_43378,
                                            __global unsigned char *mem_43390,
                                            __global unsigned char *mem_43708)
{
    #define tile_sizze_41906 (mainzitile_sizze_41905)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43693_backing_7 = (__local volatile
                                                           char *) mem_43693_backing_aligned_0;
    __local volatile char *restrict mem_43690_backing_6 = (__local volatile
                                                           char *) mem_43690_backing_aligned_1;
    __local volatile char *restrict mem_43671_backing_1 = (__local volatile
                                                           char *) mem_43671_backing_aligned_2;
    __local volatile char *restrict mem_43668_backing_0 = (__local volatile
                                                           char *) mem_43668_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44819;
    int32_t local_tid_44820;
    int64_t group_sizze_44823;
    int32_t wave_sizze_44822;
    int32_t group_tid_44821;
    
    global_tid_44819 = get_global_id(0);
    local_tid_44820 = get_local_id(0);
    group_sizze_44823 = get_local_size(0);
    wave_sizze_44822 = LOCKSTEP_WIDTH;
    group_tid_44821 = get_group_id(0);
    
    int32_t gid_flat_41911;
    
    gid_flat_41911 = group_tid_44821;
    
    int32_t ltid_pre_44824;
    
    ltid_pre_44824 = squot32(local_tid_44820, sext_i64_i32(tile_sizze_41906));
    
    int32_t ltid_pre_44825;
    
    ltid_pre_44825 = local_tid_44820 - squot32(local_tid_44820,
                                               sext_i64_i32(tile_sizze_41906)) *
        sext_i64_i32(tile_sizze_41906);
    
    int64_t gid_x_41903;
    
    gid_x_41903 = squot64(sext_i32_i64(group_tid_44821), num_groups_y_41909);
    
    int64_t gid_y_41904;
    
    gid_y_41904 = sext_i32_i64(group_tid_44821) -
        squot64(sext_i32_i64(group_tid_44821), num_groups_y_41909) *
        num_groups_y_41909;
    
    float mem_43653[1];
    int64_t ltid_x_41928 = sext_i32_i64(ltid_pre_44824);
    int64_t ltid_y_41929 = sext_i32_i64(ltid_pre_44825);
    int32_t ltid_flat_41930 = local_tid_44820;
    
    if (slt64(ltid_x_41928, tile_sizze_41906) && slt64(ltid_y_41929,
                                                       tile_sizze_41906)) {
        mem_43653[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42027 = gid_x_41903 * tile_sizze_41906;
    int64_t binop_x_42029 = gid_y_41904 * tile_sizze_41906;
    __local char *mem_43668;
    
    mem_43668 = (__local char *) mem_43668_backing_0;
    
    __local char *mem_43671;
    
    mem_43671 = (__local char *) mem_43671_backing_1;
    
    float accs_mem_43686[1];
    float mem_param_43661[1];
    
    for (int32_t i_2 = 0; i_2 < 1; i_2++)
        mem_param_43661[i_2] = mem_43653[i_2];
    for (int64_t tile_id_41939 = 0; tile_id_41939 < num_whole_tiles_41927;
         tile_id_41939++) {
        int64_t binop_x_42023 = tile_sizze_41906 * tile_id_41939;
        int64_t ltid_x_41940 = sext_i32_i64(ltid_pre_44824);
        int64_t ltid_y_41941 = sext_i32_i64(ltid_pre_44825);
        int32_t ltid_flat_41942 = local_tid_44820;
        int64_t i_42024 = ltid_x_41940 + binop_x_42023;
        int64_t j_42026 = ltid_y_41941 + binop_x_42023;
        int64_t gtid_42028 = ltid_x_41940 + binop_x_42027;
        int64_t gtid_42030 = ltid_y_41941 + binop_x_42029;
        bool binop_x_42033 = slt64(i_42024, i32_res_30817);
        bool binop_y_42034 = slt64(gtid_42030, i32_res_30823);
        bool cond_42035 = binop_x_42033 && binop_y_42034;
        float pre_42036;
        
        if (cond_42035) {
            float x_42037 = ((__global float *) mem_43390)[i_42024 *
                                                           i32_res_30823 +
                                                           gtid_42030];
            
            pre_42036 = x_42037;
        } else {
            pre_42036 = 0.0F;
        }
        
        bool binop_x_42039 = slt64(j_42026, i32_res_30817);
        bool binop_y_42040 = slt64(gtid_42028, m_30804);
        bool cond_42041 = binop_x_42039 && binop_y_42040;
        float pre_42042;
        
        if (cond_42041) {
            float x_42043 = ((__global float *) images_mem_43378)[gtid_42028 *
                                                                  N_30805 +
                                                                  j_42026];
            
            pre_42042 = x_42043;
        } else {
            pre_42042 = 0.0F;
        }
        ((__local float *) mem_43668)[ltid_x_41940 * tile_sizze_41906 +
                                      ltid_y_41941] = pre_42036;
        ((__local float *) mem_43671)[ltid_x_41940 * tile_sizze_41906 +
                                      ltid_y_41941] = pre_42042;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43675[1];
        int64_t ltid_x_41985 = sext_i32_i64(ltid_pre_44824);
        int64_t ltid_y_41986 = sext_i32_i64(ltid_pre_44825);
        int32_t ltid_flat_41987 = local_tid_44820;
        int64_t gtid_42047 = ltid_x_41985 + binop_x_42027;
        int64_t gtid_42049 = ltid_y_41986 + binop_x_42029;
        float acc_42052 = mem_param_43661[0];
        bool binop_x_42055 = slt64(gtid_42047, m_30804);
        bool binop_y_42056 = slt64(gtid_42049, i32_res_30823);
        bool cond_42057 = binop_x_42055 && binop_y_42056;
        float acc_42058;
        
        if (cond_42057) {
            float x_42059;
            float redout_43261 = acc_42052;
            
            for (int64_t i_43262 = 0; i_43262 < tile_sizze_41906; i_43262++) {
                float x_42064 = ((__local float *) mem_43671)[ltid_x_41985 *
                                                              tile_sizze_41906 +
                                                              i_43262];
                bool isnan_res_42065;
                
                isnan_res_42065 = futrts_isnan32(x_42064);
                
                float defunc_1_f_res_42066;
                
                if (isnan_res_42065) {
                    defunc_1_f_res_42066 = 0.0F;
                } else {
                    float x_42063 = ((__local float *) mem_43668)[i_43262 *
                                                                  tile_sizze_41906 +
                                                                  ltid_y_41986];
                    float defunc_1_f_res_f_res_42067 = x_42063 * x_42064;
                    
                    defunc_1_f_res_42066 = defunc_1_f_res_f_res_42067;
                }
                
                float defunc_1_op_res_42062 = defunc_1_f_res_42066 +
                      redout_43261;
                float redout_tmp_44828 = defunc_1_op_res_42062;
                
                redout_43261 = redout_tmp_44828;
            }
            x_42059 = redout_43261;
            acc_42058 = x_42059;
        } else {
            acc_42058 = acc_42052;
        }
        mem_43675[0] = acc_42058;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44826[1];
        
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_tmp_44826[i_3] = mem_43675[i_3];
        for (int32_t i_4 = 0; i_4 < 1; i_4++)
            mem_param_43661[i_4] = mem_param_tmp_44826[i_4];
    }
    for (int32_t i_5 = 0; i_5 < 1; i_5++)
        accs_mem_43686[i_5] = mem_param_43661[i_5];
    
    __local char *mem_43690;
    
    mem_43690 = (__local char *) mem_43690_backing_6;
    
    __local char *mem_43693;
    
    mem_43693 = (__local char *) mem_43693_backing_7;
    
    float mem_43697[1];
    float mem_44424[1];
    
    if (cond_42078) {
        mem_44424[0] = accs_mem_43686[0];
    } else {
        int64_t binop_x_42164 = tile_sizze_41906 * num_whole_tiles_41927;
        int64_t ltid_x_42079 = sext_i32_i64(ltid_pre_44824);
        int64_t ltid_y_42080 = sext_i32_i64(ltid_pre_44825);
        int32_t ltid_flat_42081 = local_tid_44820;
        int64_t i_42165 = ltid_x_42079 + binop_x_42164;
        int64_t j_42167 = ltid_y_42080 + binop_x_42164;
        int64_t gtid_42169 = binop_x_42027 + ltid_x_42079;
        int64_t gtid_42171 = binop_x_42029 + ltid_y_42080;
        bool binop_x_42174 = slt64(i_42165, i32_res_30817);
        bool binop_y_42175 = slt64(gtid_42171, i32_res_30823);
        bool cond_42176 = binop_x_42174 && binop_y_42175;
        float pre_42177;
        
        if (cond_42176) {
            float x_42178 = ((__global float *) mem_43390)[i_42165 *
                                                           i32_res_30823 +
                                                           gtid_42171];
            
            pre_42177 = x_42178;
        } else {
            pre_42177 = 0.0F;
        }
        
        bool binop_x_42180 = slt64(j_42167, i32_res_30817);
        bool binop_y_42181 = slt64(gtid_42169, m_30804);
        bool cond_42182 = binop_x_42180 && binop_y_42181;
        float pre_42183;
        
        if (cond_42182) {
            float x_42184 = ((__global float *) images_mem_43378)[gtid_42169 *
                                                                  N_30805 +
                                                                  j_42167];
            
            pre_42183 = x_42184;
        } else {
            pre_42183 = 0.0F;
        }
        ((__local float *) mem_43690)[ltid_x_42079 * tile_sizze_41906 +
                                      ltid_y_42080] = pre_42177;
        ((__local float *) mem_43693)[ltid_x_42079 * tile_sizze_41906 +
                                      ltid_y_42080] = pre_42183;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42126 = sext_i32_i64(ltid_pre_44824);
        int64_t ltid_y_42127 = sext_i32_i64(ltid_pre_44825);
        int32_t ltid_flat_42128 = local_tid_44820;
        int64_t gtid_42190 = binop_x_42027 + ltid_x_42126;
        int64_t gtid_42192 = binop_x_42029 + ltid_y_42127;
        float acc_42195 = accs_mem_43686[0];
        bool binop_x_42198 = slt64(gtid_42190, m_30804);
        bool binop_y_42199 = slt64(gtid_42192, i32_res_30823);
        bool cond_42200 = binop_x_42198 && binop_y_42199;
        float acc_42201;
        
        if (cond_42200) {
            float x_42202;
            float redout_43263 = acc_42195;
            
            for (int64_t i_43264 = 0; i_43264 < residual_input_42077;
                 i_43264++) {
                float x_42207 = ((__local float *) mem_43693)[ltid_x_42126 *
                                                              tile_sizze_41906 +
                                                              i_43264];
                bool isnan_res_42208;
                
                isnan_res_42208 = futrts_isnan32(x_42207);
                
                float defunc_1_f_res_42209;
                
                if (isnan_res_42208) {
                    defunc_1_f_res_42209 = 0.0F;
                } else {
                    float x_42206 = ((__local float *) mem_43690)[i_43264 *
                                                                  tile_sizze_41906 +
                                                                  ltid_y_42127];
                    float defunc_1_f_res_f_res_42210 = x_42206 * x_42207;
                    
                    defunc_1_f_res_42209 = defunc_1_f_res_f_res_42210;
                }
                
                float defunc_1_op_res_42205 = defunc_1_f_res_42209 +
                      redout_43263;
                float redout_tmp_44829 = defunc_1_op_res_42205;
                
                redout_43263 = redout_tmp_44829;
            }
            x_42202 = redout_43263;
            acc_42201 = x_42202;
        } else {
            acc_42201 = acc_42195;
        }
        mem_43697[0] = acc_42201;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44424[0] = mem_43697[0];
    }
    
    int64_t thread_out_index_44830 = gid_x_41903 * tile_sizze_41906 +
            sext_i32_i64(ltid_pre_44824);
    int64_t thread_out_index_44831 = gid_y_41904 * tile_sizze_41906 +
            sext_i32_i64(ltid_pre_44825);
    
    if (slt64(thread_out_index_44830, m_30804) && slt64(thread_out_index_44831,
                                                        i32_res_30823)) {
        ((__global float *) mem_43708)[thread_out_index_44830 * i32_res_30823 +
                                       thread_out_index_44831] = mem_44424[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41906
}
__kernel void mainzisegmap_intragroup_42233(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43786_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43767_backing_aligned_1,
                                            int64_t m_30804,
                                            int64_t i32_res_30823,
                                            int64_t num_groups_y_42231,
                                            int64_t num_whole_tiles_42249,
                                            int64_t residual_input_42376,
                                            unsigned char cond_42377, __global
                                            unsigned char *defunc_3_map_res_mem_43718,
                                            __global unsigned char *mem_43747,
                                            __global unsigned char *mem_43801)
{
    #define tile_sizze_42228 (mainzitile_sizze_42227)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43786_backing_5 = (__local volatile
                                                           char *) mem_43786_backing_aligned_0;
    __local volatile char *restrict mem_43767_backing_0 = (__local volatile
                                                           char *) mem_43767_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44907;
    int32_t local_tid_44908;
    int64_t group_sizze_44911;
    int32_t wave_sizze_44910;
    int32_t group_tid_44909;
    
    global_tid_44907 = get_global_id(0);
    local_tid_44908 = get_local_id(0);
    group_sizze_44911 = get_local_size(0);
    wave_sizze_44910 = LOCKSTEP_WIDTH;
    group_tid_44909 = get_group_id(0);
    
    int32_t gid_flat_42233;
    
    gid_flat_42233 = group_tid_44909;
    
    int32_t ltid_pre_44912;
    
    ltid_pre_44912 = squot32(local_tid_44908, sext_i64_i32(tile_sizze_42228));
    
    int32_t ltid_pre_44913;
    
    ltid_pre_44913 = local_tid_44908 - squot32(local_tid_44908,
                                               sext_i64_i32(tile_sizze_42228)) *
        sext_i64_i32(tile_sizze_42228);
    
    int64_t gid_x_42225;
    
    gid_x_42225 = squot64(sext_i32_i64(group_tid_44909), num_groups_y_42231);
    
    int64_t gid_y_42226;
    
    gid_y_42226 = sext_i32_i64(group_tid_44909) -
        squot64(sext_i32_i64(group_tid_44909), num_groups_y_42231) *
        num_groups_y_42231;
    
    float mem_43752[1];
    int64_t ltid_x_42250 = sext_i32_i64(ltid_pre_44912);
    int64_t ltid_y_42251 = sext_i32_i64(ltid_pre_44913);
    int32_t ltid_flat_42252 = local_tid_44908;
    
    if (slt64(ltid_x_42250, tile_sizze_42228) && slt64(ltid_y_42251,
                                                       tile_sizze_42228)) {
        mem_43752[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42335 = gid_x_42225 * tile_sizze_42228;
    int64_t binop_x_42350 = gid_y_42226 * tile_sizze_42228;
    __local char *mem_43767;
    
    mem_43767 = (__local char *) mem_43767_backing_0;
    
    float accs_mem_43782[1];
    float mem_param_43760[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43760[i_1] = mem_43752[i_1];
    for (int64_t tile_id_42261 = 0; tile_id_42261 < num_whole_tiles_42249;
         tile_id_42261++) {
        int64_t binop_x_42333 = tile_sizze_42228 * tile_id_42261;
        int64_t ltid_x_42262 = sext_i32_i64(ltid_pre_44912);
        int64_t ltid_y_42263 = sext_i32_i64(ltid_pre_44913);
        int32_t ltid_flat_42264 = local_tid_44908;
        int64_t j_42334 = ltid_y_42263 + binop_x_42333;
        int64_t gtid_42336 = ltid_x_42262 + binop_x_42335;
        bool binop_x_42341 = slt64(j_42334, i32_res_30823);
        bool binop_y_42342 = slt64(gtid_42336, m_30804);
        bool cond_42343 = binop_x_42341 && binop_y_42342;
        float pre_42344;
        
        if (cond_42343) {
            float x_42345 = ((__global
                              float *) defunc_3_map_res_mem_43718)[gtid_42336 *
                                                                   i32_res_30823 +
                                                                   j_42334];
            
            pre_42344 = x_42345;
        } else {
            pre_42344 = 0.0F;
        }
        ((__local float *) mem_43767)[ltid_x_42262 * tile_sizze_42228 +
                                      ltid_y_42263] = pre_42344;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43771[1];
        int64_t ltid_x_42294 = sext_i32_i64(ltid_pre_44912);
        int64_t ltid_y_42295 = sext_i32_i64(ltid_pre_44913);
        int32_t ltid_flat_42296 = local_tid_44908;
        int64_t gtid_42349 = ltid_x_42294 + binop_x_42335;
        int64_t gtid_42351 = ltid_y_42295 + binop_x_42350;
        float acc_42354 = mem_param_43760[0];
        bool binop_x_42358 = slt64(gtid_42349, m_30804);
        bool binop_y_42359 = slt64(gtid_42351, i32_res_30823);
        bool cond_42360 = binop_x_42358 && binop_y_42359;
        float acc_42361;
        
        if (cond_42360) {
            float x_42362;
            float redout_43271 = acc_42354;
            
            for (int64_t i_43272 = 0; i_43272 < tile_sizze_42228; i_43272++) {
                float x_42366 = ((__local float *) mem_43767)[ltid_x_42294 *
                                                              tile_sizze_42228 +
                                                              i_43272];
                int64_t slice_43362 = binop_x_42333 + i_43272;
                float x_42367 = ((__global float *) mem_43747)[slice_43362 *
                                                               (i32_res_30823 *
                                                                m_30804) +
                                                               gtid_42349 *
                                                               i32_res_30823 +
                                                               gtid_42351];
                float defunc_1_f_res_42368 = x_42366 * x_42367;
                float defunc_1_op_res_42365 = defunc_1_f_res_42368 +
                      redout_43271;
                float redout_tmp_44916 = defunc_1_op_res_42365;
                
                redout_43271 = redout_tmp_44916;
            }
            x_42362 = redout_43271;
            acc_42361 = x_42362;
        } else {
            acc_42361 = acc_42354;
        }
        mem_43771[0] = acc_42361;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44914[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44914[i_2] = mem_43771[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43760[i_3] = mem_param_tmp_44914[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43782[i_4] = mem_param_43760[i_4];
    
    __local char *mem_43786;
    
    mem_43786 = (__local char *) mem_43786_backing_5;
    
    float mem_43790[1];
    float mem_44434[1];
    
    if (cond_42377) {
        mem_44434[0] = accs_mem_43782[0];
    } else {
        int64_t binop_x_42450 = tile_sizze_42228 * num_whole_tiles_42249;
        int64_t ltid_x_42378 = sext_i32_i64(ltid_pre_44912);
        int64_t ltid_y_42379 = sext_i32_i64(ltid_pre_44913);
        int32_t ltid_flat_42380 = local_tid_44908;
        int64_t j_42451 = ltid_y_42379 + binop_x_42450;
        int64_t gtid_42453 = binop_x_42335 + ltid_x_42378;
        bool binop_x_42458 = slt64(j_42451, i32_res_30823);
        bool binop_y_42459 = slt64(gtid_42453, m_30804);
        bool cond_42460 = binop_x_42458 && binop_y_42459;
        float pre_42461;
        
        if (cond_42460) {
            float x_42462 = ((__global
                              float *) defunc_3_map_res_mem_43718)[gtid_42453 *
                                                                   i32_res_30823 +
                                                                   j_42451];
            
            pre_42461 = x_42462;
        } else {
            pre_42461 = 0.0F;
        }
        ((__local float *) mem_43786)[ltid_x_42378 * tile_sizze_42228 +
                                      ltid_y_42379] = pre_42461;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42411 = sext_i32_i64(ltid_pre_44912);
        int64_t ltid_y_42412 = sext_i32_i64(ltid_pre_44913);
        int32_t ltid_flat_42413 = local_tid_44908;
        int64_t gtid_42467 = binop_x_42335 + ltid_x_42411;
        int64_t gtid_42469 = binop_x_42350 + ltid_y_42412;
        float acc_42472 = accs_mem_43782[0];
        bool binop_x_42476 = slt64(gtid_42467, m_30804);
        bool binop_y_42477 = slt64(gtid_42469, i32_res_30823);
        bool cond_42478 = binop_x_42476 && binop_y_42477;
        float acc_42479;
        
        if (cond_42478) {
            float x_42480;
            float redout_43273 = acc_42472;
            
            for (int64_t i_43274 = 0; i_43274 < residual_input_42376;
                 i_43274++) {
                float x_42484 = ((__local float *) mem_43786)[ltid_x_42411 *
                                                              tile_sizze_42228 +
                                                              i_43274];
                int64_t slice_43363 = binop_x_42450 + i_43274;
                float x_42485 = ((__global float *) mem_43747)[slice_43363 *
                                                               (i32_res_30823 *
                                                                m_30804) +
                                                               gtid_42467 *
                                                               i32_res_30823 +
                                                               gtid_42469];
                float defunc_1_f_res_42486 = x_42484 * x_42485;
                float defunc_1_op_res_42483 = defunc_1_f_res_42486 +
                      redout_43273;
                float redout_tmp_44917 = defunc_1_op_res_42483;
                
                redout_43273 = redout_tmp_44917;
            }
            x_42480 = redout_43273;
            acc_42479 = x_42480;
        } else {
            acc_42479 = acc_42472;
        }
        mem_43790[0] = acc_42479;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44434[0] = mem_43790[0];
    }
    
    int64_t thread_out_index_44918 = gid_x_42225 * tile_sizze_42228 +
            sext_i32_i64(ltid_pre_44912);
    int64_t thread_out_index_44919 = gid_y_42226 * tile_sizze_42228 +
            sext_i32_i64(ltid_pre_44913);
    
    if (slt64(thread_out_index_44918, m_30804) && slt64(thread_out_index_44919,
                                                        i32_res_30823)) {
        ((__global float *) mem_43801)[thread_out_index_44918 * i32_res_30823 +
                                       thread_out_index_44919] = mem_44434[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42228
}
__kernel void mainzisegmap_intragroup_42509(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43880_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43877_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43858_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43855_backing_aligned_3,
                                            int64_t N_30803, int64_t m_30804,
                                            int64_t i32_res_30823,
                                            int64_t num_groups_y_42507,
                                            int64_t num_whole_tiles_42525,
                                            int64_t residual_input_42669,
                                            unsigned char cond_42670, __global
                                            unsigned char *defunc_4_map_res_mem_43811,
                                            __global unsigned char *mem_43835,
                                            __global unsigned char *mem_43895)
{
    #define tile_sizze_42504 (mainzitile_sizze_42503)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43880_backing_7 = (__local volatile
                                                           char *) mem_43880_backing_aligned_0;
    __local volatile char *restrict mem_43877_backing_6 = (__local volatile
                                                           char *) mem_43877_backing_aligned_1;
    __local volatile char *restrict mem_43858_backing_1 = (__local volatile
                                                           char *) mem_43858_backing_aligned_2;
    __local volatile char *restrict mem_43855_backing_0 = (__local volatile
                                                           char *) mem_43855_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44995;
    int32_t local_tid_44996;
    int64_t group_sizze_44999;
    int32_t wave_sizze_44998;
    int32_t group_tid_44997;
    
    global_tid_44995 = get_global_id(0);
    local_tid_44996 = get_local_id(0);
    group_sizze_44999 = get_local_size(0);
    wave_sizze_44998 = LOCKSTEP_WIDTH;
    group_tid_44997 = get_group_id(0);
    
    int32_t gid_flat_42509;
    
    gid_flat_42509 = group_tid_44997;
    
    int32_t ltid_pre_45000;
    
    ltid_pre_45000 = squot32(local_tid_44996, sext_i64_i32(tile_sizze_42504));
    
    int32_t ltid_pre_45001;
    
    ltid_pre_45001 = local_tid_44996 - squot32(local_tid_44996,
                                               sext_i64_i32(tile_sizze_42504)) *
        sext_i64_i32(tile_sizze_42504);
    
    int64_t gid_x_42501;
    
    gid_x_42501 = squot64(sext_i32_i64(group_tid_44997), num_groups_y_42507);
    
    int64_t gid_y_42502;
    
    gid_y_42502 = sext_i32_i64(group_tid_44997) -
        squot64(sext_i32_i64(group_tid_44997), num_groups_y_42507) *
        num_groups_y_42507;
    
    float mem_43840[1];
    int64_t ltid_x_42526 = sext_i32_i64(ltid_pre_45000);
    int64_t ltid_y_42527 = sext_i32_i64(ltid_pre_45001);
    int32_t ltid_flat_42528 = local_tid_44996;
    
    if (slt64(ltid_x_42526, tile_sizze_42504) && slt64(ltid_y_42527,
                                                       tile_sizze_42504)) {
        mem_43840[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42623 = gid_x_42501 * tile_sizze_42504;
    int64_t binop_x_42625 = gid_y_42502 * tile_sizze_42504;
    __local char *mem_43855;
    
    mem_43855 = (__local char *) mem_43855_backing_0;
    
    __local char *mem_43858;
    
    mem_43858 = (__local char *) mem_43858_backing_1;
    
    float accs_mem_43873[1];
    float mem_param_43848[1];
    
    for (int32_t i_2 = 0; i_2 < 1; i_2++)
        mem_param_43848[i_2] = mem_43840[i_2];
    for (int64_t tile_id_42537 = 0; tile_id_42537 < num_whole_tiles_42525;
         tile_id_42537++) {
        int64_t binop_x_42619 = tile_sizze_42504 * tile_id_42537;
        int64_t ltid_x_42538 = sext_i32_i64(ltid_pre_45000);
        int64_t ltid_y_42539 = sext_i32_i64(ltid_pre_45001);
        int32_t ltid_flat_42540 = local_tid_44996;
        int64_t i_42620 = ltid_x_42538 + binop_x_42619;
        int64_t j_42622 = ltid_y_42539 + binop_x_42619;
        int64_t gtid_42624 = ltid_x_42538 + binop_x_42623;
        int64_t gtid_42626 = ltid_y_42539 + binop_x_42625;
        bool binop_x_42629 = slt64(j_42622, i32_res_30823);
        bool binop_y_42630 = slt64(gtid_42624, m_30804);
        bool cond_42631 = binop_x_42629 && binop_y_42630;
        float pre_42632;
        
        if (cond_42631) {
            float x_42633 = ((__global
                              float *) defunc_4_map_res_mem_43811)[gtid_42624 *
                                                                   i32_res_30823 +
                                                                   j_42622];
            
            pre_42632 = x_42633;
        } else {
            pre_42632 = 0.0F;
        }
        
        bool binop_x_42635 = slt64(i_42620, i32_res_30823);
        bool binop_y_42636 = slt64(gtid_42626, N_30803);
        bool cond_42637 = binop_x_42635 && binop_y_42636;
        float pre_42638;
        
        if (cond_42637) {
            float x_42639 = ((__global float *) mem_43835)[i_42620 * N_30803 +
                                                           gtid_42626];
            
            pre_42638 = x_42639;
        } else {
            pre_42638 = 0.0F;
        }
        ((__local float *) mem_43855)[ltid_x_42538 * tile_sizze_42504 +
                                      ltid_y_42539] = pre_42632;
        ((__local float *) mem_43858)[ltid_x_42538 * tile_sizze_42504 +
                                      ltid_y_42539] = pre_42638;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43862[1];
        int64_t ltid_x_42583 = sext_i32_i64(ltid_pre_45000);
        int64_t ltid_y_42584 = sext_i32_i64(ltid_pre_45001);
        int32_t ltid_flat_42585 = local_tid_44996;
        int64_t gtid_42643 = ltid_x_42583 + binop_x_42623;
        int64_t gtid_42645 = ltid_y_42584 + binop_x_42625;
        float acc_42648 = mem_param_43848[0];
        bool binop_x_42651 = slt64(gtid_42643, m_30804);
        bool binop_y_42652 = slt64(gtid_42645, N_30803);
        bool cond_42653 = binop_x_42651 && binop_y_42652;
        float acc_42654;
        
        if (cond_42653) {
            float x_42655;
            float redout_43281 = acc_42648;
            
            for (int64_t i_43282 = 0; i_43282 < tile_sizze_42504; i_43282++) {
                float x_42659 = ((__local float *) mem_43855)[ltid_x_42583 *
                                                              tile_sizze_42504 +
                                                              i_43282];
                float x_42660 = ((__local float *) mem_43858)[i_43282 *
                                                              tile_sizze_42504 +
                                                              ltid_y_42584];
                float defunc_1_f_res_42661 = x_42659 * x_42660;
                float defunc_1_op_res_42658 = defunc_1_f_res_42661 +
                      redout_43281;
                float redout_tmp_45004 = defunc_1_op_res_42658;
                
                redout_43281 = redout_tmp_45004;
            }
            x_42655 = redout_43281;
            acc_42654 = x_42655;
        } else {
            acc_42654 = acc_42648;
        }
        mem_43862[0] = acc_42654;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45002[1];
        
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_tmp_45002[i_3] = mem_43862[i_3];
        for (int32_t i_4 = 0; i_4 < 1; i_4++)
            mem_param_43848[i_4] = mem_param_tmp_45002[i_4];
    }
    for (int32_t i_5 = 0; i_5 < 1; i_5++)
        accs_mem_43873[i_5] = mem_param_43848[i_5];
    
    __local char *mem_43877;
    
    mem_43877 = (__local char *) mem_43877_backing_6;
    
    __local char *mem_43880;
    
    mem_43880 = (__local char *) mem_43880_backing_7;
    
    float mem_43884[1];
    float mem_44446[1];
    
    if (cond_42670) {
        mem_44446[0] = accs_mem_43873[0];
    } else {
        int64_t binop_x_42754 = tile_sizze_42504 * num_whole_tiles_42525;
        int64_t ltid_x_42671 = sext_i32_i64(ltid_pre_45000);
        int64_t ltid_y_42672 = sext_i32_i64(ltid_pre_45001);
        int32_t ltid_flat_42673 = local_tid_44996;
        int64_t i_42755 = ltid_x_42671 + binop_x_42754;
        int64_t j_42757 = ltid_y_42672 + binop_x_42754;
        int64_t gtid_42759 = binop_x_42623 + ltid_x_42671;
        int64_t gtid_42761 = binop_x_42625 + ltid_y_42672;
        bool binop_x_42764 = slt64(j_42757, i32_res_30823);
        bool binop_y_42765 = slt64(gtid_42759, m_30804);
        bool cond_42766 = binop_x_42764 && binop_y_42765;
        float pre_42767;
        
        if (cond_42766) {
            float x_42768 = ((__global
                              float *) defunc_4_map_res_mem_43811)[gtid_42759 *
                                                                   i32_res_30823 +
                                                                   j_42757];
            
            pre_42767 = x_42768;
        } else {
            pre_42767 = 0.0F;
        }
        
        bool binop_x_42770 = slt64(i_42755, i32_res_30823);
        bool binop_y_42771 = slt64(gtid_42761, N_30803);
        bool cond_42772 = binop_x_42770 && binop_y_42771;
        float pre_42773;
        
        if (cond_42772) {
            float x_42774 = ((__global float *) mem_43835)[i_42755 * N_30803 +
                                                           gtid_42761];
            
            pre_42773 = x_42774;
        } else {
            pre_42773 = 0.0F;
        }
        ((__local float *) mem_43877)[ltid_x_42671 * tile_sizze_42504 +
                                      ltid_y_42672] = pre_42767;
        ((__local float *) mem_43880)[ltid_x_42671 * tile_sizze_42504 +
                                      ltid_y_42672] = pre_42773;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42718 = sext_i32_i64(ltid_pre_45000);
        int64_t ltid_y_42719 = sext_i32_i64(ltid_pre_45001);
        int32_t ltid_flat_42720 = local_tid_44996;
        int64_t gtid_42780 = binop_x_42623 + ltid_x_42718;
        int64_t gtid_42782 = binop_x_42625 + ltid_y_42719;
        float acc_42785 = accs_mem_43873[0];
        bool binop_x_42788 = slt64(gtid_42780, m_30804);
        bool binop_y_42789 = slt64(gtid_42782, N_30803);
        bool cond_42790 = binop_x_42788 && binop_y_42789;
        float acc_42791;
        
        if (cond_42790) {
            float x_42792;
            float redout_43283 = acc_42785;
            
            for (int64_t i_43284 = 0; i_43284 < residual_input_42669;
                 i_43284++) {
                float x_42796 = ((__local float *) mem_43877)[ltid_x_42718 *
                                                              tile_sizze_42504 +
                                                              i_43284];
                float x_42797 = ((__local float *) mem_43880)[i_43284 *
                                                              tile_sizze_42504 +
                                                              ltid_y_42719];
                float defunc_1_f_res_42798 = x_42796 * x_42797;
                float defunc_1_op_res_42795 = defunc_1_f_res_42798 +
                      redout_43283;
                float redout_tmp_45005 = defunc_1_op_res_42795;
                
                redout_43283 = redout_tmp_45005;
            }
            x_42792 = redout_43283;
            acc_42791 = x_42792;
        } else {
            acc_42791 = acc_42785;
        }
        mem_43884[0] = acc_42791;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44446[0] = mem_43884[0];
    }
    
    int64_t thread_out_index_45006 = gid_x_42501 * tile_sizze_42504 +
            sext_i32_i64(ltid_pre_45000);
    int64_t thread_out_index_45007 = gid_y_42502 * tile_sizze_42504 +
            sext_i32_i64(ltid_pre_45001);
    
    if (slt64(thread_out_index_45006, m_30804) && slt64(thread_out_index_45007,
                                                        N_30803)) {
        ((__global float *) mem_43895)[thread_out_index_45006 * N_30803 +
                                       thread_out_index_45007] = mem_44446[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42504
}
__kernel void mainzisegmap_intragroup_42814(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43977_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43964_backing_aligned_1,
                                            int64_t m_30804, int32_t n_30808,
                                            float hfrac_30810,
                                            int64_t i32_res_30817,
                                            int32_t k2p2_30819,
                                            int64_t num_whole_tiles_42822,
                                            int64_t residual_input_42943,
                                            unsigned char cond_42944, __global
                                            unsigned char *mem_43947, __global
                                            unsigned char *mem_43950, __global
                                            unsigned char *mem_43994, __global
                                            unsigned char *mem_43996, __global
                                            unsigned char *mem_43998)
{
    #define segmap_group_sizze_39047 (mainzisegmap_group_sizze_39016)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43977_backing_5 = (__local volatile
                                                           char *) mem_43977_backing_aligned_0;
    __local volatile char *restrict mem_43964_backing_0 = (__local volatile
                                                           char *) mem_43964_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45175;
    int32_t local_tid_45176;
    int64_t group_sizze_45179;
    int32_t wave_sizze_45178;
    int32_t group_tid_45177;
    
    global_tid_45175 = get_global_id(0);
    local_tid_45176 = get_local_id(0);
    group_sizze_45179 = get_local_size(0);
    wave_sizze_45178 = LOCKSTEP_WIDTH;
    group_tid_45177 = get_group_id(0);
    
    int32_t gid_flat_42814;
    
    gid_flat_42814 = group_tid_45177;
    
    int32_t ltid_pre_45180;
    
    ltid_pre_45180 = local_tid_45176;
    
    int64_t gid_42813;
    
    gid_42813 = sext_i32_i64(group_tid_45177);
    
    float mem_43954[1];
    int64_t ltid_42823 = sext_i32_i64(ltid_pre_45180);
    int32_t ltid_flat_42824 = local_tid_45176;
    
    mem_43954[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42909 = segmap_group_sizze_39047 * gid_42813;
    __local char *mem_43964;
    
    mem_43964 = (__local char *) mem_43964_backing_0;
    
    float accs_mem_43974[1];
    float mem_param_43959[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43959[i_1] = mem_43954[i_1];
    for (int64_t tile_id_42830 = 0; tile_id_42830 < num_whole_tiles_42822;
         tile_id_42830++) {
        int64_t binop_x_42891 = segmap_group_sizze_39047 * tile_id_42830;
        int64_t ltid_42831 = sext_i32_i64(ltid_pre_45180);
        int32_t ltid_flat_42832 = local_tid_45176;
        int64_t j_42892 = ltid_42831 + binop_x_42891;
        bool cond_42904 = slt64(j_42892, i32_res_30817);
        int32_t pre_42905;
        
        if (cond_42904) {
            int32_t index_primexp_43229 = sext_i64_i32(j_42892);
            
            pre_42905 = index_primexp_43229;
        } else {
            pre_42905 = 0;
        }
        ((__local int32_t *) mem_43964)[ltid_42831] = pre_42905;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43967[1];
        int64_t ltid_42858 = sext_i32_i64(ltid_pre_45180);
        int32_t ltid_flat_42859 = local_tid_45176;
        int64_t gtid_42910 = ltid_42858 + binop_x_42909;
        int32_t defunc_0_f_res_42912;
        int32_t redout_43285 = 0;
        
        for (int32_t i_43365 = 0; i_43365 < n_30808; i_43365++) {
            int64_t i_43286 = sext_i32_i64(i_43365);
            float x_42916 = ((__global float *) mem_43947)[i_43286 * m_30804 +
                                                           gtid_42910];
            bool isnan_res_42917;
            
            isnan_res_42917 = futrts_isnan32(x_42916);
            
            bool cond_42918 = !isnan_res_42917;
            int32_t defunc_0_f_res_42919 = btoi_bool_i32(cond_42918);
            int32_t defunc_1_op_res_42915 = add32(defunc_0_f_res_42919,
                                                  redout_43285);
            int32_t redout_tmp_45183 = defunc_1_op_res_42915;
            
            redout_43285 = redout_tmp_45183;
        }
        defunc_0_f_res_42912 = redout_43285;
        
        float acc_42920 = mem_param_43959[0];
        bool cond_42921 = slt64(gtid_42910, m_30804);
        float acc_42922;
        
        if (cond_42921) {
            float x_42923;
            float redout_43287 = acc_42920;
            
            for (int64_t i_43288 = 0; i_43288 < segmap_group_sizze_39047;
                 i_43288++) {
                int32_t x_42927 = ((__local int32_t *) mem_43964)[i_43288];
                bool cond_42928 = slt32(x_42927, defunc_0_f_res_42912);
                float defunc_0_f_res_42929;
                
                if (cond_42928) {
                    int64_t i_42930 = sext_i32_i64(x_42927);
                    float defunc_0_f_res_t_res_42931 = ((__global
                                                         float *) mem_43950)[i_42930 *
                                                                             m_30804 +
                                                                             gtid_42910];
                    
                    defunc_0_f_res_42929 = defunc_0_f_res_t_res_42931;
                } else {
                    defunc_0_f_res_42929 = 0.0F;
                }
                
                float defunc_0_f_res_42932 = defunc_0_f_res_42929 *
                      defunc_0_f_res_42929;
                float defunc_1_op_res_42926 = defunc_0_f_res_42932 +
                      redout_43287;
                float redout_tmp_45184 = defunc_1_op_res_42926;
                
                redout_43287 = redout_tmp_45184;
            }
            x_42923 = redout_43287;
            acc_42922 = x_42923;
        } else {
            acc_42922 = acc_42920;
        }
        mem_43967[0] = acc_42922;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45181[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45181[i_2] = mem_43967[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43959[i_3] = mem_param_tmp_45181[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43974[i_4] = mem_param_43959[i_4];
    
    __local char *mem_43977;
    
    mem_43977 = (__local char *) mem_43977_backing_5;
    
    float mem_43980[1];
    float mem_44455[1];
    
    if (cond_42944) {
        mem_44455[0] = accs_mem_43974[0];
    } else {
        int64_t binop_x_42954 = segmap_group_sizze_39047 *
                num_whole_tiles_42822;
        int64_t ltid_42945 = sext_i32_i64(ltid_pre_45180);
        int32_t ltid_flat_42946 = local_tid_45176;
        int64_t j_42955 = ltid_42945 + binop_x_42954;
        bool cond_42967 = slt64(j_42955, i32_res_30817);
        int32_t pre_42968;
        
        if (cond_42967) {
            int32_t index_primexp_43230 = sext_i64_i32(j_42955);
            
            pre_42968 = index_primexp_43230;
        } else {
            pre_42968 = 0;
        }
        ((__local int32_t *) mem_43977)[ltid_42945] = pre_42968;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42973 = sext_i32_i64(ltid_pre_45180);
        int32_t ltid_flat_42974 = local_tid_45176;
        int64_t gtid_42981 = binop_x_42909 + ltid_42973;
        int32_t defunc_0_f_res_42983;
        int32_t redout_43289 = 0;
        
        for (int32_t i_43366 = 0; i_43366 < n_30808; i_43366++) {
            int64_t i_43290 = sext_i32_i64(i_43366);
            float x_42987 = ((__global float *) mem_43947)[i_43290 * m_30804 +
                                                           gtid_42981];
            bool isnan_res_42988;
            
            isnan_res_42988 = futrts_isnan32(x_42987);
            
            bool cond_42989 = !isnan_res_42988;
            int32_t defunc_0_f_res_42990 = btoi_bool_i32(cond_42989);
            int32_t defunc_1_op_res_42986 = add32(defunc_0_f_res_42990,
                                                  redout_43289);
            int32_t redout_tmp_45185 = defunc_1_op_res_42986;
            
            redout_43289 = redout_tmp_45185;
        }
        defunc_0_f_res_42983 = redout_43289;
        
        float acc_42991 = accs_mem_43974[0];
        bool cond_42992 = slt64(gtid_42981, m_30804);
        float acc_42993;
        
        if (cond_42992) {
            float x_42994;
            float redout_43291 = acc_42991;
            
            for (int64_t i_43292 = 0; i_43292 < residual_input_42943;
                 i_43292++) {
                int32_t x_42998 = ((__local int32_t *) mem_43977)[i_43292];
                bool cond_42999 = slt32(x_42998, defunc_0_f_res_42983);
                float defunc_0_f_res_43000;
                
                if (cond_42999) {
                    int64_t i_43001 = sext_i32_i64(x_42998);
                    float defunc_0_f_res_t_res_43002 = ((__global
                                                         float *) mem_43950)[i_43001 *
                                                                             m_30804 +
                                                                             gtid_42981];
                    
                    defunc_0_f_res_43000 = defunc_0_f_res_t_res_43002;
                } else {
                    defunc_0_f_res_43000 = 0.0F;
                }
                
                float defunc_0_f_res_43003 = defunc_0_f_res_43000 *
                      defunc_0_f_res_43000;
                float defunc_1_op_res_42997 = defunc_0_f_res_43003 +
                      redout_43291;
                float redout_tmp_45186 = defunc_1_op_res_42997;
                
                redout_43291 = redout_tmp_45186;
            }
            x_42994 = redout_43291;
            acc_42993 = x_42994;
        } else {
            acc_42993 = acc_42991;
        }
        mem_43980[0] = acc_42993;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44455[0] = mem_43980[0];
    }
    
    int32_t mem_43988[1];
    int32_t mem_43990[1];
    float mem_43992[1];
    int64_t ltid_43006 = sext_i32_i64(ltid_pre_45180);
    int32_t ltid_flat_43007 = local_tid_45176;
    int64_t gtid_43017 = binop_x_42909 + ltid_43006;
    bool cond_43019 = slt64(gtid_43017, m_30804);
    int32_t postlude_43020;
    int32_t postlude_43021;
    float postlude_43022;
    
    if (cond_43019) {
        float defunc_0_f_res_43018 = mem_44455[0];
        int32_t defunc_0_f_res_43024;
        int32_t redout_43293 = 0;
        
        for (int32_t i_43367 = 0; i_43367 < n_30808; i_43367++) {
            int64_t i_43294 = sext_i32_i64(i_43367);
            float x_43028 = ((__global float *) mem_43947)[i_43294 * m_30804 +
                                                           gtid_43017];
            bool isnan_res_43029;
            
            isnan_res_43029 = futrts_isnan32(x_43028);
            
            bool cond_43030 = !isnan_res_43029;
            int32_t defunc_0_f_res_43031 = btoi_bool_i32(cond_43030);
            int32_t defunc_1_op_res_43027 = add32(defunc_0_f_res_43031,
                                                  redout_43293);
            int32_t redout_tmp_45187 = defunc_1_op_res_43027;
            
            redout_43293 = redout_tmp_45187;
        }
        defunc_0_f_res_43024 = redout_43293;
        
        int32_t r32_arg_43032 = sub32(defunc_0_f_res_43024, k2p2_30819);
        float i32_res_43033 = sitofp_i32_f32(r32_arg_43032);
        float sqrt_arg_43034 = defunc_0_f_res_43018 / i32_res_43033;
        float sqrt_res_43035;
        
        sqrt_res_43035 = futrts_sqrt32(sqrt_arg_43034);
        
        float i32_res_43036 = sitofp_i32_f32(defunc_0_f_res_43024);
        float t32_arg_43037 = hfrac_30810 * i32_res_43036;
        int32_t f32_res_43038 = fptosi_f32_i32(t32_arg_43037);
        
        postlude_43020 = f32_res_43038;
        postlude_43021 = defunc_0_f_res_43024;
        postlude_43022 = sqrt_res_43035;
    } else {
        postlude_43020 = 0;
        postlude_43021 = 0;
        postlude_43022 = 0.0F;
    }
    mem_43988[0] = postlude_43020;
    mem_43990[0] = postlude_43021;
    mem_43992[0] = postlude_43022;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45176) + segmap_group_sizze_39047 *
              sext_i32_i64(group_tid_45177), m_30804)) {
        ((__global int32_t *) mem_43994)[sext_i32_i64(local_tid_45176) +
                                         segmap_group_sizze_39047 *
                                         sext_i32_i64(group_tid_45177)] =
            mem_43988[0];
    }
    if (slt64(sext_i32_i64(local_tid_45176) + segmap_group_sizze_39047 *
              sext_i32_i64(group_tid_45177), m_30804)) {
        ((__global int32_t *) mem_43996)[sext_i32_i64(local_tid_45176) +
                                         segmap_group_sizze_39047 *
                                         sext_i32_i64(group_tid_45177)] =
            mem_43990[0];
    }
    if (slt64(sext_i32_i64(local_tid_45176) + segmap_group_sizze_39047 *
              sext_i32_i64(group_tid_45177), m_30804)) {
        ((__global float *) mem_43998)[sext_i32_i64(local_tid_45176) +
                                       segmap_group_sizze_39047 *
                                       sext_i32_i64(group_tid_45177)] =
            mem_43992[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_39047
}
__kernel void mainzisegmap_intragroup_43046(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44059_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44046_backing_aligned_1,
                                            int64_t N_30803, int64_t m_30804,
                                            int64_t i32_res_31165,
                                            int64_t num_whole_tiles_43066,
                                            int64_t residual_input_43165,
                                            unsigned char cond_43166, __global
                                            unsigned char *defunc_4_map_res_mem_43943,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44022,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44023,
                                            __global unsigned char *mem_44069)
{
    #define segmap_group_sizze_39284 (mainzisegmap_group_sizze_39265)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44059_backing_5 = (__local volatile
                                                           char *) mem_44059_backing_aligned_0;
    __local volatile char *restrict mem_44046_backing_0 = (__local volatile
                                                           char *) mem_44046_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45361;
    int32_t local_tid_45362;
    int64_t group_sizze_45365;
    int32_t wave_sizze_45364;
    int32_t group_tid_45363;
    
    global_tid_45361 = get_global_id(0);
    local_tid_45362 = get_local_id(0);
    group_sizze_45365 = get_local_size(0);
    wave_sizze_45364 = LOCKSTEP_WIDTH;
    group_tid_45363 = get_group_id(0);
    
    int32_t gid_flat_43046;
    
    gid_flat_43046 = group_tid_45363;
    
    int32_t ltid_pre_45366;
    
    ltid_pre_45366 = local_tid_45362;
    
    int64_t gid_43045;
    
    gid_43045 = sext_i32_i64(group_tid_45363);
    
    int64_t binop_x_43055;
    
    binop_x_43055 = segmap_group_sizze_39284 * gid_43045;
    
    int32_t mem_44031[1];
    int32_t mem_44033[1];
    int64_t ltid_43047 = sext_i32_i64(ltid_pre_45366);
    int32_t ltid_flat_43048 = local_tid_45362;
    int64_t gtid_43056 = ltid_43047 + binop_x_43055;
    bool cond_43057 = slt64(gtid_43056, m_30804);
    int32_t pre_43058;
    int32_t pre_43059;
    
    if (cond_43057) {
        int32_t x_43060 = ((__global
                            int32_t *) defunc_3_map_res_mem_44023)[gtid_43056];
        int32_t x_43061 = ((__global
                            int32_t *) defunc_3_map_res_mem_44022)[gtid_43056];
        
        pre_43058 = x_43060;
        pre_43059 = x_43061;
    } else {
        pre_43058 = 0;
        pre_43059 = 0;
    }
    mem_44031[0] = pre_43058;
    mem_44033[0] = pre_43059;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_44036[1];
    int64_t ltid_43067 = sext_i32_i64(ltid_pre_45366);
    int32_t ltid_flat_43068 = local_tid_45362;
    
    mem_44036[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44046;
    
    mem_44046 = (__local char *) mem_44046_backing_0;
    
    float accs_mem_44056[1];
    float mem_param_44041[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44041[i_1] = mem_44036[i_1];
    for (int64_t tile_id_43074 = 0; tile_id_43074 < num_whole_tiles_43066;
         tile_id_43074++) {
        int64_t binop_x_43123 = segmap_group_sizze_39284 * tile_id_43074;
        int64_t ltid_43075 = sext_i32_i64(ltid_pre_45366);
        int32_t ltid_flat_43076 = local_tid_45362;
        int64_t j_43124 = ltid_43075 + binop_x_43123;
        bool cond_43129 = slt64(j_43124, i32_res_31165);
        int32_t pre_43130;
        
        if (cond_43129) {
            int32_t index_primexp_43231 = sext_i64_i32(j_43124);
            int32_t tile_elem_43131 = index_primexp_43231;
            
            pre_43130 = tile_elem_43131;
        } else {
            pre_43130 = 0;
        }
        ((__local int32_t *) mem_44046)[ltid_43075] = pre_43130;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44049[1];
        int64_t ltid_43095 = sext_i32_i64(ltid_pre_45366);
        int32_t ltid_flat_43096 = local_tid_45362;
        int64_t gtid_43135 = binop_x_43055 + ltid_43095;
        float acc_43138 = mem_param_44041[0];
        bool cond_43139 = slt64(gtid_43135, m_30804);
        float acc_43140;
        
        if (cond_43139) {
            int32_t x_43136 = mem_44031[0];
            int32_t x_43137 = mem_44033[0];
            float x_43141;
            float redout_43295 = acc_43138;
            
            for (int64_t i_43296 = 0; i_43296 < segmap_group_sizze_39284;
                 i_43296++) {
                int32_t x_43145 = ((__local int32_t *) mem_44046)[i_43296];
                bool cond_43146 = slt32(x_43145, x_43137);
                float defunc_0_f_res_43147;
                
                if (cond_43146) {
                    int32_t x_43148 = add32(x_43136, x_43145);
                    int32_t x_43149 = sub32(x_43148, x_43137);
                    int32_t i_43150 = add32(1, x_43149);
                    int64_t i_43151 = sext_i32_i64(i_43150);
                    float defunc_0_f_res_t_res_43152 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_43135 *
                                                                                              N_30803 +
                                                                                              i_43151];
                    
                    defunc_0_f_res_43147 = defunc_0_f_res_t_res_43152;
                } else {
                    defunc_0_f_res_43147 = 0.0F;
                }
                
                float defunc_1_op_res_43144 = defunc_0_f_res_43147 +
                      redout_43295;
                float redout_tmp_45369 = defunc_1_op_res_43144;
                
                redout_43295 = redout_tmp_45369;
            }
            x_43141 = redout_43295;
            acc_43140 = x_43141;
        } else {
            acc_43140 = acc_43138;
        }
        mem_44049[0] = acc_43140;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45367[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45367[i_2] = mem_44049[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44041[i_3] = mem_param_tmp_45367[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44056[i_4] = mem_param_44041[i_4];
    
    __local char *mem_44059;
    
    mem_44059 = (__local char *) mem_44059_backing_5;
    
    float mem_44062[1];
    float mem_44464[1];
    
    if (cond_43166) {
        mem_44464[0] = accs_mem_44056[0];
    } else {
        int64_t binop_x_43176 = segmap_group_sizze_39284 *
                num_whole_tiles_43066;
        int64_t ltid_43167 = sext_i32_i64(ltid_pre_45366);
        int32_t ltid_flat_43168 = local_tid_45362;
        int64_t j_43177 = ltid_43167 + binop_x_43176;
        bool cond_43182 = slt64(j_43177, i32_res_31165);
        int32_t pre_43183;
        
        if (cond_43182) {
            int32_t index_primexp_43232 = sext_i64_i32(j_43177);
            int32_t tile_elem_43184 = index_primexp_43232;
            
            pre_43183 = tile_elem_43184;
        } else {
            pre_43183 = 0;
        }
        ((__local int32_t *) mem_44059)[ltid_43167] = pre_43183;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43188 = sext_i32_i64(ltid_pre_45366);
        int32_t ltid_flat_43189 = local_tid_45362;
        int64_t gtid_43196 = binop_x_43055 + ltid_43188;
        float acc_43199 = accs_mem_44056[0];
        bool cond_43200 = slt64(gtid_43196, m_30804);
        float acc_43201;
        
        if (cond_43200) {
            int32_t x_43197 = mem_44031[0];
            int32_t x_43198 = mem_44033[0];
            float x_43202;
            float redout_43297 = acc_43199;
            
            for (int64_t i_43298 = 0; i_43298 < residual_input_43165;
                 i_43298++) {
                int32_t x_43206 = ((__local int32_t *) mem_44059)[i_43298];
                bool cond_43207 = slt32(x_43206, x_43198);
                float defunc_0_f_res_43208;
                
                if (cond_43207) {
                    int32_t x_43209 = add32(x_43197, x_43206);
                    int32_t x_43210 = sub32(x_43209, x_43198);
                    int32_t i_43211 = add32(1, x_43210);
                    int64_t i_43212 = sext_i32_i64(i_43211);
                    float defunc_0_f_res_t_res_43213 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_43196 *
                                                                                              N_30803 +
                                                                                              i_43212];
                    
                    defunc_0_f_res_43208 = defunc_0_f_res_t_res_43213;
                } else {
                    defunc_0_f_res_43208 = 0.0F;
                }
                
                float defunc_1_op_res_43205 = defunc_0_f_res_43208 +
                      redout_43297;
                float redout_tmp_45370 = defunc_1_op_res_43205;
                
                redout_43297 = redout_tmp_45370;
            }
            x_43202 = redout_43297;
            acc_43201 = x_43202;
        } else {
            acc_43201 = acc_43199;
        }
        mem_44062[0] = acc_43201;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44464[0] = mem_44062[0];
    }
    if (slt64(sext_i32_i64(local_tid_45362) + segmap_group_sizze_39284 *
              sext_i32_i64(group_tid_45363), m_30804)) {
        ((__global float *) mem_44069)[sext_i32_i64(local_tid_45362) +
                                       segmap_group_sizze_39284 *
                                       sext_i32_i64(group_tid_45363)] =
            mem_44464[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_39284
}
__kernel void mainzisegred_large_37133(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44715_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44713_backing_aligned_1,
                                       int64_t N_30803, int64_t N_30805,
                                       int64_t i32_res_30817,
                                       int64_t i32_res_30823,
                                       int64_t num_groups_37272, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43526,
                                       __global unsigned char *mem_43531,
                                       int64_t groups_per_segment_44699,
                                       int64_t elements_per_thread_44700,
                                       int64_t virt_num_groups_44701,
                                       int64_t threads_per_segment_44703,
                                       __global
                                       unsigned char *group_res_arr_mem_44704,
                                       __global
                                       unsigned char *mainzicounter_mem_44706)
{
    #define segred_group_sizze_37271 (mainzisegred_group_sizze_37127)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44715_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44715_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44713_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44713_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44708;
    int32_t local_tid_44709;
    int64_t group_sizze_44712;
    int32_t wave_sizze_44711;
    int32_t group_tid_44710;
    
    global_tid_44708 = get_global_id(0);
    local_tid_44709 = get_local_id(0);
    group_sizze_44712 = get_local_size(0);
    wave_sizze_44711 = LOCKSTEP_WIDTH;
    group_tid_44710 = get_group_id(0);
    
    int32_t phys_tid_37133;
    
    phys_tid_37133 = global_tid_44708;
    
    __local char *red_arr_mem_44713;
    
    red_arr_mem_44713 = (__local char *) red_arr_mem_44713_backing_0;
    
    __local char *sync_arr_mem_44715;
    
    sync_arr_mem_44715 = (__local char *) sync_arr_mem_44715_backing_1;
    
    int32_t phys_group_id_44717;
    
    phys_group_id_44717 = get_group_id(0);
    for (int32_t i_44718 = 0; i_44718 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44701) - phys_group_id_44717,
                   sext_i64_i32(num_groups_37272)); i_44718++) {
        int32_t virt_group_id_44719 = phys_group_id_44717 + i_44718 *
                sext_i64_i32(num_groups_37272);
        int32_t flat_segment_id_44720 = squot32(virt_group_id_44719,
                                                sext_i64_i32(groups_per_segment_44699));
        int64_t global_tid_44721 = srem64(sext_i32_i64(virt_group_id_44719) *
                                          segred_group_sizze_37271 +
                                          sext_i32_i64(local_tid_44709),
                                          segred_group_sizze_37271 *
                                          groups_per_segment_44699);
        int64_t gtid_37120 = squot64(sext_i32_i64(flat_segment_id_44720),
                                     i32_res_30823 * i32_res_30823);
        int64_t gtid_37121 = squot64(sext_i32_i64(flat_segment_id_44720) -
                                     squot64(sext_i32_i64(flat_segment_id_44720),
                                             i32_res_30823 * i32_res_30823) *
                                     (i32_res_30823 * i32_res_30823),
                                     i32_res_30823);
        int64_t gtid_37122 = sext_i32_i64(flat_segment_id_44720) -
                squot64(sext_i32_i64(flat_segment_id_44720), i32_res_30823 *
                        i32_res_30823) * (i32_res_30823 * i32_res_30823) -
                squot64(sext_i32_i64(flat_segment_id_44720) -
                        squot64(sext_i32_i64(flat_segment_id_44720),
                                i32_res_30823 * i32_res_30823) *
                        (i32_res_30823 * i32_res_30823), i32_res_30823) *
                i32_res_30823;
        int64_t gtid_37132;
        float x_acc_44722;
        int64_t chunk_sizze_44723;
        
        chunk_sizze_44723 = smin64(elements_per_thread_44700,
                                   sdiv_up64(i32_res_30817 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44721)),
                                             threads_per_segment_44703));
        
        float x_37275;
        float x_37276;
        
        // neutral-initialise the accumulators
        {
            x_acc_44722 = 0.0F;
        }
        for (int64_t i_44727 = 0; i_44727 < chunk_sizze_44723; i_44727++) {
            gtid_37132 = sext_i32_i64(sext_i64_i32(global_tid_44721)) +
                threads_per_segment_44703 * i_44727;
            // apply map function
            {
                float x_37281 = ((__global
                                  float *) images_mem_43378)[gtid_37120 *
                                                             N_30805 +
                                                             gtid_37132];
                float x_37282 = ((__global
                                  float *) binop_p_mem_43387)[gtid_37121 *
                                                              N_30803 +
                                                              gtid_37132];
                float x_37283 = ((__global float *) mem_43526)[gtid_37122 *
                                                               N_30803 +
                                                               gtid_37132];
                float x_37284 = x_37282 * x_37283;
                bool isnan_res_37285;
                
                isnan_res_37285 = futrts_isnan32(x_37281);
                
                float y_37286;
                
                if (isnan_res_37285) {
                    y_37286 = 0.0F;
                } else {
                    y_37286 = 1.0F;
                }
                
                float defunc_2_f_res_37287 = x_37284 * y_37286;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_37275 = x_acc_44722;
                }
                // load new values
                {
                    x_37276 = defunc_2_f_res_37287;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_37277 = x_37275 + x_37276;
                    
                    // store in accumulator
                    {
                        x_acc_44722 = defunc_1_op_res_37277;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_37275 = x_acc_44722;
            ((__local
              float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709)] =
                x_37275;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44728;
        int32_t skip_waves_44729;
        
        skip_waves_44729 = 1;
        
        float x_44724;
        float x_44725;
        
        offset_44728 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44709,
                      sext_i64_i32(segred_group_sizze_37271))) {
                x_44724 = ((__local
                            float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709 +
                                                        offset_44728)];
            }
        }
        offset_44728 = 1;
        while (slt32(offset_44728, wave_sizze_44711)) {
            if (slt32(local_tid_44709 + offset_44728,
                      sext_i64_i32(segred_group_sizze_37271)) &&
                ((local_tid_44709 - squot32(local_tid_44709, wave_sizze_44711) *
                  wave_sizze_44711) & (2 * offset_44728 - 1)) == 0) {
                // read array element
                {
                    x_44725 = ((volatile __local
                                float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709 +
                                                            offset_44728)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44726 = x_44724 + x_44725;
                    
                    x_44724 = defunc_1_op_res_44726;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709)] =
                        x_44724;
                }
            }
            offset_44728 *= 2;
        }
        while (slt32(skip_waves_44729,
                     squot32(sext_i64_i32(segred_group_sizze_37271) +
                             wave_sizze_44711 - 1, wave_sizze_44711))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44728 = skip_waves_44729 * wave_sizze_44711;
            if (slt32(local_tid_44709 + offset_44728,
                      sext_i64_i32(segred_group_sizze_37271)) &&
                ((local_tid_44709 - squot32(local_tid_44709, wave_sizze_44711) *
                  wave_sizze_44711) == 0 && (squot32(local_tid_44709,
                                                     wave_sizze_44711) & (2 *
                                                                          skip_waves_44729 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44725 = ((__local
                                float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709 +
                                                            offset_44728)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44726 = x_44724 + x_44725;
                    
                    x_44724 = defunc_1_op_res_44726;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709)] =
                        x_44724;
                }
            }
            skip_waves_44729 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44709) == 0) {
                x_acc_44722 = x_44724;
            }
        }
        if (groups_per_segment_44699 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44709 == 0) {
                    ((__global float *) mem_43531)[gtid_37120 * (i32_res_30823 *
                                                                 i32_res_30823) +
                                                   gtid_37121 * i32_res_30823 +
                                                   gtid_37122] = x_acc_44722;
                }
            }
        } else {
            int32_t old_counter_44730;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44709 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44704)[sext_i32_i64(virt_group_id_44719) *
                                                        segred_group_sizze_37271] =
                        x_acc_44722;
                    mem_fence_global();
                    old_counter_44730 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44706)[sext_i32_i64(srem32(flat_segment_id_44720,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44715)[0] =
                        old_counter_44730 == groups_per_segment_44699 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44731;
            
            is_last_group_44731 = ((__local bool *) sync_arr_mem_44715)[0];
            if (is_last_group_44731) {
                if (local_tid_44709 == 0) {
                    old_counter_44730 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44706)[sext_i32_i64(srem32(flat_segment_id_44720,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44699));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44732 =
                            sdiv_up64(groups_per_segment_44699,
                                      segred_group_sizze_37271);
                    
                    x_37275 = 0.0F;
                    for (int64_t i_44733 = 0; i_44733 < read_per_thread_44732;
                         i_44733++) {
                        int64_t group_res_id_44734 =
                                sext_i32_i64(local_tid_44709) *
                                read_per_thread_44732 + i_44733;
                        int64_t index_of_group_res_44735 =
                                sext_i32_i64(flat_segment_id_44720) *
                                groups_per_segment_44699 + group_res_id_44734;
                        
                        if (slt64(group_res_id_44734,
                                  groups_per_segment_44699)) {
                            x_37276 = ((__global
                                        float *) group_res_arr_mem_44704)[index_of_group_res_44735 *
                                                                          segred_group_sizze_37271];
                            
                            float defunc_1_op_res_37277;
                            
                            defunc_1_op_res_37277 = x_37275 + x_37276;
                            x_37275 = defunc_1_op_res_37277;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709)] =
                    x_37275;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44736;
                    int32_t skip_waves_44737;
                    
                    skip_waves_44737 = 1;
                    
                    float x_44724;
                    float x_44725;
                    
                    offset_44736 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44709,
                                  sext_i64_i32(segred_group_sizze_37271))) {
                            x_44724 = ((__local
                                        float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709 +
                                                                    offset_44736)];
                        }
                    }
                    offset_44736 = 1;
                    while (slt32(offset_44736, wave_sizze_44711)) {
                        if (slt32(local_tid_44709 + offset_44736,
                                  sext_i64_i32(segred_group_sizze_37271)) &&
                            ((local_tid_44709 - squot32(local_tid_44709,
                                                        wave_sizze_44711) *
                              wave_sizze_44711) & (2 * offset_44736 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44725 = ((volatile __local
                                            float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709 +
                                                                        offset_44736)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44726 = x_44724 + x_44725;
                                
                                x_44724 = defunc_1_op_res_44726;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709)] =
                                    x_44724;
                            }
                        }
                        offset_44736 *= 2;
                    }
                    while (slt32(skip_waves_44737,
                                 squot32(sext_i64_i32(segred_group_sizze_37271) +
                                         wave_sizze_44711 - 1,
                                         wave_sizze_44711))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44736 = skip_waves_44737 * wave_sizze_44711;
                        if (slt32(local_tid_44709 + offset_44736,
                                  sext_i64_i32(segred_group_sizze_37271)) &&
                            ((local_tid_44709 - squot32(local_tid_44709,
                                                        wave_sizze_44711) *
                              wave_sizze_44711) == 0 &&
                             (squot32(local_tid_44709, wave_sizze_44711) & (2 *
                                                                            skip_waves_44737 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44725 = ((__local
                                            float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709 +
                                                                        offset_44736)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44726 = x_44724 + x_44725;
                                
                                x_44724 = defunc_1_op_res_44726;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44713)[sext_i32_i64(local_tid_44709)] =
                                    x_44724;
                            }
                        }
                        skip_waves_44737 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44709 == 0) {
                            ((__global float *) mem_43531)[gtid_37120 *
                                                           (i32_res_30823 *
                                                            i32_res_30823) +
                                                           gtid_37121 *
                                                           i32_res_30823 +
                                                           gtid_37122] =
                                x_44724;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37271
}
__kernel void mainzisegred_large_38306(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44869_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44867_backing_aligned_1,
                                       int64_t N_30803, int64_t N_30805,
                                       int64_t i32_res_30817,
                                       int64_t i32_res_30823,
                                       int64_t num_groups_38359, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43712,
                                       int64_t groups_per_segment_44853,
                                       int64_t elements_per_thread_44854,
                                       int64_t virt_num_groups_44855,
                                       int64_t threads_per_segment_44857,
                                       __global
                                       unsigned char *group_res_arr_mem_44858,
                                       __global
                                       unsigned char *mainzicounter_mem_44860)
{
    #define segred_group_sizze_38358 (mainzisegred_group_sizze_38300)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44869_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44869_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44867_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44867_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44862;
    int32_t local_tid_44863;
    int64_t group_sizze_44866;
    int32_t wave_sizze_44865;
    int32_t group_tid_44864;
    
    global_tid_44862 = get_global_id(0);
    local_tid_44863 = get_local_id(0);
    group_sizze_44866 = get_local_size(0);
    wave_sizze_44865 = LOCKSTEP_WIDTH;
    group_tid_44864 = get_group_id(0);
    
    int32_t phys_tid_38306;
    
    phys_tid_38306 = global_tid_44862;
    
    __local char *red_arr_mem_44867;
    
    red_arr_mem_44867 = (__local char *) red_arr_mem_44867_backing_0;
    
    __local char *sync_arr_mem_44869;
    
    sync_arr_mem_44869 = (__local char *) sync_arr_mem_44869_backing_1;
    
    int32_t phys_group_id_44871;
    
    phys_group_id_44871 = get_group_id(0);
    for (int32_t i_44872 = 0; i_44872 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44855) - phys_group_id_44871,
                   sext_i64_i32(num_groups_38359)); i_44872++) {
        int32_t virt_group_id_44873 = phys_group_id_44871 + i_44872 *
                sext_i64_i32(num_groups_38359);
        int32_t flat_segment_id_44874 = squot32(virt_group_id_44873,
                                                sext_i64_i32(groups_per_segment_44853));
        int64_t global_tid_44875 = srem64(sext_i32_i64(virt_group_id_44873) *
                                          segred_group_sizze_38358 +
                                          sext_i32_i64(local_tid_44863),
                                          segred_group_sizze_38358 *
                                          groups_per_segment_44853);
        int64_t gtid_38295 = squot64(sext_i32_i64(flat_segment_id_44874),
                                     i32_res_30823);
        int64_t gtid_38296 = sext_i32_i64(flat_segment_id_44874) -
                squot64(sext_i32_i64(flat_segment_id_44874), i32_res_30823) *
                i32_res_30823;
        int64_t gtid_38305;
        float x_acc_44876;
        int64_t chunk_sizze_44877;
        
        chunk_sizze_44877 = smin64(elements_per_thread_44854,
                                   sdiv_up64(i32_res_30817 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44875)),
                                             threads_per_segment_44857));
        
        float x_38362;
        float x_38363;
        
        // neutral-initialise the accumulators
        {
            x_acc_44876 = 0.0F;
        }
        for (int64_t i_44881 = 0; i_44881 < chunk_sizze_44877; i_44881++) {
            gtid_38305 = sext_i32_i64(sext_i64_i32(global_tid_44875)) +
                threads_per_segment_44857 * i_44881;
            // apply map function
            {
                float x_38368 = ((__global
                                  float *) images_mem_43378)[gtid_38295 *
                                                             N_30805 +
                                                             gtid_38305];
                bool isnan_res_38369;
                
                isnan_res_38369 = futrts_isnan32(x_38368);
                
                float defunc_1_f_res_38370;
                
                if (isnan_res_38369) {
                    defunc_1_f_res_38370 = 0.0F;
                } else {
                    float x_38367 = ((__global
                                      float *) binop_p_mem_43387)[gtid_38296 *
                                                                  N_30803 +
                                                                  gtid_38305];
                    float defunc_1_f_res_f_res_38371 = x_38367 * x_38368;
                    
                    defunc_1_f_res_38370 = defunc_1_f_res_f_res_38371;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_38362 = x_acc_44876;
                }
                // load new values
                {
                    x_38363 = defunc_1_f_res_38370;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38364 = x_38362 + x_38363;
                    
                    // store in accumulator
                    {
                        x_acc_44876 = defunc_1_op_res_38364;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38362 = x_acc_44876;
            ((__local
              float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                x_38362;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44882;
        int32_t skip_waves_44883;
        
        skip_waves_44883 = 1;
        
        float x_44878;
        float x_44879;
        
        offset_44882 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44863,
                      sext_i64_i32(segred_group_sizze_38358))) {
                x_44878 = ((__local
                            float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863 +
                                                        offset_44882)];
            }
        }
        offset_44882 = 1;
        while (slt32(offset_44882, wave_sizze_44865)) {
            if (slt32(local_tid_44863 + offset_44882,
                      sext_i64_i32(segred_group_sizze_38358)) &&
                ((local_tid_44863 - squot32(local_tid_44863, wave_sizze_44865) *
                  wave_sizze_44865) & (2 * offset_44882 - 1)) == 0) {
                // read array element
                {
                    x_44879 = ((volatile __local
                                float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863 +
                                                            offset_44882)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44880 = x_44878 + x_44879;
                    
                    x_44878 = defunc_1_op_res_44880;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                        x_44878;
                }
            }
            offset_44882 *= 2;
        }
        while (slt32(skip_waves_44883,
                     squot32(sext_i64_i32(segred_group_sizze_38358) +
                             wave_sizze_44865 - 1, wave_sizze_44865))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44882 = skip_waves_44883 * wave_sizze_44865;
            if (slt32(local_tid_44863 + offset_44882,
                      sext_i64_i32(segred_group_sizze_38358)) &&
                ((local_tid_44863 - squot32(local_tid_44863, wave_sizze_44865) *
                  wave_sizze_44865) == 0 && (squot32(local_tid_44863,
                                                     wave_sizze_44865) & (2 *
                                                                          skip_waves_44883 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44879 = ((__local
                                float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863 +
                                                            offset_44882)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44880 = x_44878 + x_44879;
                    
                    x_44878 = defunc_1_op_res_44880;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                        x_44878;
                }
            }
            skip_waves_44883 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44863) == 0) {
                x_acc_44876 = x_44878;
            }
        }
        if (groups_per_segment_44853 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44863 == 0) {
                    ((__global float *) mem_43712)[gtid_38295 * i32_res_30823 +
                                                   gtid_38296] = x_acc_44876;
                }
            }
        } else {
            int32_t old_counter_44884;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44863 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44858)[sext_i32_i64(virt_group_id_44873) *
                                                        segred_group_sizze_38358] =
                        x_acc_44876;
                    mem_fence_global();
                    old_counter_44884 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44860)[sext_i32_i64(srem32(flat_segment_id_44874,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44869)[0] =
                        old_counter_44884 == groups_per_segment_44853 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44885;
            
            is_last_group_44885 = ((__local bool *) sync_arr_mem_44869)[0];
            if (is_last_group_44885) {
                if (local_tid_44863 == 0) {
                    old_counter_44884 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44860)[sext_i32_i64(srem32(flat_segment_id_44874,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44853));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44886 =
                            sdiv_up64(groups_per_segment_44853,
                                      segred_group_sizze_38358);
                    
                    x_38362 = 0.0F;
                    for (int64_t i_44887 = 0; i_44887 < read_per_thread_44886;
                         i_44887++) {
                        int64_t group_res_id_44888 =
                                sext_i32_i64(local_tid_44863) *
                                read_per_thread_44886 + i_44887;
                        int64_t index_of_group_res_44889 =
                                sext_i32_i64(flat_segment_id_44874) *
                                groups_per_segment_44853 + group_res_id_44888;
                        
                        if (slt64(group_res_id_44888,
                                  groups_per_segment_44853)) {
                            x_38363 = ((__global
                                        float *) group_res_arr_mem_44858)[index_of_group_res_44889 *
                                                                          segred_group_sizze_38358];
                            
                            float defunc_1_op_res_38364;
                            
                            defunc_1_op_res_38364 = x_38362 + x_38363;
                            x_38362 = defunc_1_op_res_38364;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                    x_38362;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44890;
                    int32_t skip_waves_44891;
                    
                    skip_waves_44891 = 1;
                    
                    float x_44878;
                    float x_44879;
                    
                    offset_44890 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44863,
                                  sext_i64_i32(segred_group_sizze_38358))) {
                            x_44878 = ((__local
                                        float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863 +
                                                                    offset_44890)];
                        }
                    }
                    offset_44890 = 1;
                    while (slt32(offset_44890, wave_sizze_44865)) {
                        if (slt32(local_tid_44863 + offset_44890,
                                  sext_i64_i32(segred_group_sizze_38358)) &&
                            ((local_tid_44863 - squot32(local_tid_44863,
                                                        wave_sizze_44865) *
                              wave_sizze_44865) & (2 * offset_44890 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44879 = ((volatile __local
                                            float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863 +
                                                                        offset_44890)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44880 = x_44878 + x_44879;
                                
                                x_44878 = defunc_1_op_res_44880;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                                    x_44878;
                            }
                        }
                        offset_44890 *= 2;
                    }
                    while (slt32(skip_waves_44891,
                                 squot32(sext_i64_i32(segred_group_sizze_38358) +
                                         wave_sizze_44865 - 1,
                                         wave_sizze_44865))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44890 = skip_waves_44891 * wave_sizze_44865;
                        if (slt32(local_tid_44863 + offset_44890,
                                  sext_i64_i32(segred_group_sizze_38358)) &&
                            ((local_tid_44863 - squot32(local_tid_44863,
                                                        wave_sizze_44865) *
                              wave_sizze_44865) == 0 &&
                             (squot32(local_tid_44863, wave_sizze_44865) & (2 *
                                                                            skip_waves_44891 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44879 = ((__local
                                            float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863 +
                                                                        offset_44890)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44880 = x_44878 + x_44879;
                                
                                x_44878 = defunc_1_op_res_44880;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                                    x_44878;
                            }
                        }
                        skip_waves_44891 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44863 == 0) {
                            ((__global float *) mem_43712)[gtid_38295 *
                                                           i32_res_30823 +
                                                           gtid_38296] =
                                x_44878;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38358
}
__kernel void mainzisegred_large_38443(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44957_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44955_backing_aligned_1,
                                       int64_t i32_res_30823,
                                       int64_t num_groups_38492, __global
                                       unsigned char *defunc_3_map_res_mem_43627,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43718,
                                       __global unsigned char *mem_43805,
                                       int64_t groups_per_segment_44941,
                                       int64_t elements_per_thread_44942,
                                       int64_t virt_num_groups_44943,
                                       int64_t threads_per_segment_44945,
                                       __global
                                       unsigned char *group_res_arr_mem_44946,
                                       __global
                                       unsigned char *mainzicounter_mem_44948)
{
    #define segred_group_sizze_38491 (mainzisegred_group_sizze_38437)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44957_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44957_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44955_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44955_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44950;
    int32_t local_tid_44951;
    int64_t group_sizze_44954;
    int32_t wave_sizze_44953;
    int32_t group_tid_44952;
    
    global_tid_44950 = get_global_id(0);
    local_tid_44951 = get_local_id(0);
    group_sizze_44954 = get_local_size(0);
    wave_sizze_44953 = LOCKSTEP_WIDTH;
    group_tid_44952 = get_group_id(0);
    
    int32_t phys_tid_38443;
    
    phys_tid_38443 = global_tid_44950;
    
    __local char *red_arr_mem_44955;
    
    red_arr_mem_44955 = (__local char *) red_arr_mem_44955_backing_0;
    
    __local char *sync_arr_mem_44957;
    
    sync_arr_mem_44957 = (__local char *) sync_arr_mem_44957_backing_1;
    
    int32_t phys_group_id_44959;
    
    phys_group_id_44959 = get_group_id(0);
    for (int32_t i_44960 = 0; i_44960 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44943) - phys_group_id_44959,
                   sext_i64_i32(num_groups_38492)); i_44960++) {
        int32_t virt_group_id_44961 = phys_group_id_44959 + i_44960 *
                sext_i64_i32(num_groups_38492);
        int32_t flat_segment_id_44962 = squot32(virt_group_id_44961,
                                                sext_i64_i32(groups_per_segment_44941));
        int64_t global_tid_44963 = srem64(sext_i32_i64(virt_group_id_44961) *
                                          segred_group_sizze_38491 +
                                          sext_i32_i64(local_tid_44951),
                                          segred_group_sizze_38491 *
                                          groups_per_segment_44941);
        int64_t gtid_38432 = squot64(sext_i32_i64(flat_segment_id_44962),
                                     i32_res_30823);
        int64_t gtid_38433 = sext_i32_i64(flat_segment_id_44962) -
                squot64(sext_i32_i64(flat_segment_id_44962), i32_res_30823) *
                i32_res_30823;
        int64_t gtid_38442;
        float x_acc_44964;
        int64_t chunk_sizze_44965;
        
        chunk_sizze_44965 = smin64(elements_per_thread_44942,
                                   sdiv_up64(i32_res_30823 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44963)),
                                             threads_per_segment_44945));
        
        float x_38495;
        float x_38496;
        
        // neutral-initialise the accumulators
        {
            x_acc_44964 = 0.0F;
        }
        for (int64_t i_44969 = 0; i_44969 < chunk_sizze_44965; i_44969++) {
            gtid_38442 = sext_i32_i64(sext_i64_i32(global_tid_44963)) +
                threads_per_segment_44945 * i_44969;
            // apply map function
            {
                float x_38501 = ((__global
                                  float *) defunc_3_map_res_mem_43718)[gtid_38432 *
                                                                       i32_res_30823 +
                                                                       gtid_38442];
                float x_38502 = ((__global
                                  float *) defunc_3_map_res_mem_43627)[gtid_38432 *
                                                                       (i32_res_30823 *
                                                                        i32_res_30823) +
                                                                       gtid_38433 *
                                                                       i32_res_30823 +
                                                                       gtid_38442];
                float defunc_1_f_res_38503 = x_38501 * x_38502;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38495 = x_acc_44964;
                }
                // load new values
                {
                    x_38496 = defunc_1_f_res_38503;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38497 = x_38495 + x_38496;
                    
                    // store in accumulator
                    {
                        x_acc_44964 = defunc_1_op_res_38497;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38495 = x_acc_44964;
            ((__local
              float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951)] =
                x_38495;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44970;
        int32_t skip_waves_44971;
        
        skip_waves_44971 = 1;
        
        float x_44966;
        float x_44967;
        
        offset_44970 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44951,
                      sext_i64_i32(segred_group_sizze_38491))) {
                x_44966 = ((__local
                            float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951 +
                                                        offset_44970)];
            }
        }
        offset_44970 = 1;
        while (slt32(offset_44970, wave_sizze_44953)) {
            if (slt32(local_tid_44951 + offset_44970,
                      sext_i64_i32(segred_group_sizze_38491)) &&
                ((local_tid_44951 - squot32(local_tid_44951, wave_sizze_44953) *
                  wave_sizze_44953) & (2 * offset_44970 - 1)) == 0) {
                // read array element
                {
                    x_44967 = ((volatile __local
                                float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951 +
                                                            offset_44970)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44968 = x_44966 + x_44967;
                    
                    x_44966 = defunc_1_op_res_44968;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951)] =
                        x_44966;
                }
            }
            offset_44970 *= 2;
        }
        while (slt32(skip_waves_44971,
                     squot32(sext_i64_i32(segred_group_sizze_38491) +
                             wave_sizze_44953 - 1, wave_sizze_44953))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44970 = skip_waves_44971 * wave_sizze_44953;
            if (slt32(local_tid_44951 + offset_44970,
                      sext_i64_i32(segred_group_sizze_38491)) &&
                ((local_tid_44951 - squot32(local_tid_44951, wave_sizze_44953) *
                  wave_sizze_44953) == 0 && (squot32(local_tid_44951,
                                                     wave_sizze_44953) & (2 *
                                                                          skip_waves_44971 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44967 = ((__local
                                float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951 +
                                                            offset_44970)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44968 = x_44966 + x_44967;
                    
                    x_44966 = defunc_1_op_res_44968;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951)] =
                        x_44966;
                }
            }
            skip_waves_44971 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44951) == 0) {
                x_acc_44964 = x_44966;
            }
        }
        if (groups_per_segment_44941 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44951 == 0) {
                    ((__global float *) mem_43805)[gtid_38432 * i32_res_30823 +
                                                   gtid_38433] = x_acc_44964;
                }
            }
        } else {
            int32_t old_counter_44972;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44951 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44946)[sext_i32_i64(virt_group_id_44961) *
                                                        segred_group_sizze_38491] =
                        x_acc_44964;
                    mem_fence_global();
                    old_counter_44972 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44948)[sext_i32_i64(srem32(flat_segment_id_44962,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44957)[0] =
                        old_counter_44972 == groups_per_segment_44941 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44973;
            
            is_last_group_44973 = ((__local bool *) sync_arr_mem_44957)[0];
            if (is_last_group_44973) {
                if (local_tid_44951 == 0) {
                    old_counter_44972 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44948)[sext_i32_i64(srem32(flat_segment_id_44962,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44941));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44974 =
                            sdiv_up64(groups_per_segment_44941,
                                      segred_group_sizze_38491);
                    
                    x_38495 = 0.0F;
                    for (int64_t i_44975 = 0; i_44975 < read_per_thread_44974;
                         i_44975++) {
                        int64_t group_res_id_44976 =
                                sext_i32_i64(local_tid_44951) *
                                read_per_thread_44974 + i_44975;
                        int64_t index_of_group_res_44977 =
                                sext_i32_i64(flat_segment_id_44962) *
                                groups_per_segment_44941 + group_res_id_44976;
                        
                        if (slt64(group_res_id_44976,
                                  groups_per_segment_44941)) {
                            x_38496 = ((__global
                                        float *) group_res_arr_mem_44946)[index_of_group_res_44977 *
                                                                          segred_group_sizze_38491];
                            
                            float defunc_1_op_res_38497;
                            
                            defunc_1_op_res_38497 = x_38495 + x_38496;
                            x_38495 = defunc_1_op_res_38497;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951)] =
                    x_38495;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44978;
                    int32_t skip_waves_44979;
                    
                    skip_waves_44979 = 1;
                    
                    float x_44966;
                    float x_44967;
                    
                    offset_44978 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44951,
                                  sext_i64_i32(segred_group_sizze_38491))) {
                            x_44966 = ((__local
                                        float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951 +
                                                                    offset_44978)];
                        }
                    }
                    offset_44978 = 1;
                    while (slt32(offset_44978, wave_sizze_44953)) {
                        if (slt32(local_tid_44951 + offset_44978,
                                  sext_i64_i32(segred_group_sizze_38491)) &&
                            ((local_tid_44951 - squot32(local_tid_44951,
                                                        wave_sizze_44953) *
                              wave_sizze_44953) & (2 * offset_44978 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44967 = ((volatile __local
                                            float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951 +
                                                                        offset_44978)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44968 = x_44966 + x_44967;
                                
                                x_44966 = defunc_1_op_res_44968;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951)] =
                                    x_44966;
                            }
                        }
                        offset_44978 *= 2;
                    }
                    while (slt32(skip_waves_44979,
                                 squot32(sext_i64_i32(segred_group_sizze_38491) +
                                         wave_sizze_44953 - 1,
                                         wave_sizze_44953))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44978 = skip_waves_44979 * wave_sizze_44953;
                        if (slt32(local_tid_44951 + offset_44978,
                                  sext_i64_i32(segred_group_sizze_38491)) &&
                            ((local_tid_44951 - squot32(local_tid_44951,
                                                        wave_sizze_44953) *
                              wave_sizze_44953) == 0 &&
                             (squot32(local_tid_44951, wave_sizze_44953) & (2 *
                                                                            skip_waves_44979 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44967 = ((__local
                                            float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951 +
                                                                        offset_44978)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44968 = x_44966 + x_44967;
                                
                                x_44966 = defunc_1_op_res_44968;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44955)[sext_i32_i64(local_tid_44951)] =
                                    x_44966;
                            }
                        }
                        skip_waves_44979 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44951 == 0) {
                            ((__global float *) mem_43805)[gtid_38432 *
                                                           i32_res_30823 +
                                                           gtid_38433] =
                                x_44966;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38491
}
__kernel void mainzisegred_large_38573(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45045_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45043_backing_aligned_1,
                                       int64_t N_30803, int64_t i32_res_30823,
                                       int64_t num_groups_38620, __global
                                       unsigned char *mem_43394, __global
                                       unsigned char *defunc_4_map_res_mem_43811,
                                       __global unsigned char *mem_43899,
                                       int64_t groups_per_segment_45029,
                                       int64_t elements_per_thread_45030,
                                       int64_t virt_num_groups_45031,
                                       int64_t threads_per_segment_45033,
                                       __global
                                       unsigned char *group_res_arr_mem_45034,
                                       __global
                                       unsigned char *mainzicounter_mem_45036)
{
    #define segred_group_sizze_38619 (mainzisegred_group_sizze_38567)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45045_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45045_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45043_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45043_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45038;
    int32_t local_tid_45039;
    int64_t group_sizze_45042;
    int32_t wave_sizze_45041;
    int32_t group_tid_45040;
    
    global_tid_45038 = get_global_id(0);
    local_tid_45039 = get_local_id(0);
    group_sizze_45042 = get_local_size(0);
    wave_sizze_45041 = LOCKSTEP_WIDTH;
    group_tid_45040 = get_group_id(0);
    
    int32_t phys_tid_38573;
    
    phys_tid_38573 = global_tid_45038;
    
    __local char *red_arr_mem_45043;
    
    red_arr_mem_45043 = (__local char *) red_arr_mem_45043_backing_0;
    
    __local char *sync_arr_mem_45045;
    
    sync_arr_mem_45045 = (__local char *) sync_arr_mem_45045_backing_1;
    
    int32_t phys_group_id_45047;
    
    phys_group_id_45047 = get_group_id(0);
    for (int32_t i_45048 = 0; i_45048 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45031) - phys_group_id_45047,
                   sext_i64_i32(num_groups_38620)); i_45048++) {
        int32_t virt_group_id_45049 = phys_group_id_45047 + i_45048 *
                sext_i64_i32(num_groups_38620);
        int32_t flat_segment_id_45050 = squot32(virt_group_id_45049,
                                                sext_i64_i32(groups_per_segment_45029));
        int64_t global_tid_45051 = srem64(sext_i32_i64(virt_group_id_45049) *
                                          segred_group_sizze_38619 +
                                          sext_i32_i64(local_tid_45039),
                                          segred_group_sizze_38619 *
                                          groups_per_segment_45029);
        int64_t gtid_38562 = squot64(sext_i32_i64(flat_segment_id_45050),
                                     N_30803);
        int64_t gtid_38563 = sext_i32_i64(flat_segment_id_45050) -
                squot64(sext_i32_i64(flat_segment_id_45050), N_30803) * N_30803;
        int64_t gtid_38572;
        float x_acc_45052;
        int64_t chunk_sizze_45053;
        
        chunk_sizze_45053 = smin64(elements_per_thread_45030,
                                   sdiv_up64(i32_res_30823 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45051)),
                                             threads_per_segment_45033));
        
        float x_38623;
        float x_38624;
        
        // neutral-initialise the accumulators
        {
            x_acc_45052 = 0.0F;
        }
        for (int64_t i_45057 = 0; i_45057 < chunk_sizze_45053; i_45057++) {
            gtid_38572 = sext_i32_i64(sext_i64_i32(global_tid_45051)) +
                threads_per_segment_45033 * i_45057;
            // apply map function
            {
                float x_38628 = ((__global
                                  float *) defunc_4_map_res_mem_43811)[gtid_38562 *
                                                                       i32_res_30823 +
                                                                       gtid_38572];
                float x_38629 = ((__global float *) mem_43394)[gtid_38563 *
                                                               i32_res_30823 +
                                                               gtid_38572];
                float defunc_1_f_res_38630 = x_38628 * x_38629;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38623 = x_acc_45052;
                }
                // load new values
                {
                    x_38624 = defunc_1_f_res_38630;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38625 = x_38623 + x_38624;
                    
                    // store in accumulator
                    {
                        x_acc_45052 = defunc_1_op_res_38625;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38623 = x_acc_45052;
            ((__local
              float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039)] =
                x_38623;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45058;
        int32_t skip_waves_45059;
        
        skip_waves_45059 = 1;
        
        float x_45054;
        float x_45055;
        
        offset_45058 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45039,
                      sext_i64_i32(segred_group_sizze_38619))) {
                x_45054 = ((__local
                            float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039 +
                                                        offset_45058)];
            }
        }
        offset_45058 = 1;
        while (slt32(offset_45058, wave_sizze_45041)) {
            if (slt32(local_tid_45039 + offset_45058,
                      sext_i64_i32(segred_group_sizze_38619)) &&
                ((local_tid_45039 - squot32(local_tid_45039, wave_sizze_45041) *
                  wave_sizze_45041) & (2 * offset_45058 - 1)) == 0) {
                // read array element
                {
                    x_45055 = ((volatile __local
                                float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039 +
                                                            offset_45058)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45056 = x_45054 + x_45055;
                    
                    x_45054 = defunc_1_op_res_45056;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039)] =
                        x_45054;
                }
            }
            offset_45058 *= 2;
        }
        while (slt32(skip_waves_45059,
                     squot32(sext_i64_i32(segred_group_sizze_38619) +
                             wave_sizze_45041 - 1, wave_sizze_45041))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45058 = skip_waves_45059 * wave_sizze_45041;
            if (slt32(local_tid_45039 + offset_45058,
                      sext_i64_i32(segred_group_sizze_38619)) &&
                ((local_tid_45039 - squot32(local_tid_45039, wave_sizze_45041) *
                  wave_sizze_45041) == 0 && (squot32(local_tid_45039,
                                                     wave_sizze_45041) & (2 *
                                                                          skip_waves_45059 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45055 = ((__local
                                float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039 +
                                                            offset_45058)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45056 = x_45054 + x_45055;
                    
                    x_45054 = defunc_1_op_res_45056;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039)] =
                        x_45054;
                }
            }
            skip_waves_45059 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45039) == 0) {
                x_acc_45052 = x_45054;
            }
        }
        if (groups_per_segment_45029 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45039 == 0) {
                    ((__global float *) mem_43899)[gtid_38562 * N_30803 +
                                                   gtid_38563] = x_acc_45052;
                }
            }
        } else {
            int32_t old_counter_45060;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45039 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45034)[sext_i32_i64(virt_group_id_45049) *
                                                        segred_group_sizze_38619] =
                        x_acc_45052;
                    mem_fence_global();
                    old_counter_45060 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45036)[sext_i32_i64(srem32(flat_segment_id_45050,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45045)[0] =
                        old_counter_45060 == groups_per_segment_45029 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45061;
            
            is_last_group_45061 = ((__local bool *) sync_arr_mem_45045)[0];
            if (is_last_group_45061) {
                if (local_tid_45039 == 0) {
                    old_counter_45060 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45036)[sext_i32_i64(srem32(flat_segment_id_45050,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45029));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45062 =
                            sdiv_up64(groups_per_segment_45029,
                                      segred_group_sizze_38619);
                    
                    x_38623 = 0.0F;
                    for (int64_t i_45063 = 0; i_45063 < read_per_thread_45062;
                         i_45063++) {
                        int64_t group_res_id_45064 =
                                sext_i32_i64(local_tid_45039) *
                                read_per_thread_45062 + i_45063;
                        int64_t index_of_group_res_45065 =
                                sext_i32_i64(flat_segment_id_45050) *
                                groups_per_segment_45029 + group_res_id_45064;
                        
                        if (slt64(group_res_id_45064,
                                  groups_per_segment_45029)) {
                            x_38624 = ((__global
                                        float *) group_res_arr_mem_45034)[index_of_group_res_45065 *
                                                                          segred_group_sizze_38619];
                            
                            float defunc_1_op_res_38625;
                            
                            defunc_1_op_res_38625 = x_38623 + x_38624;
                            x_38623 = defunc_1_op_res_38625;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039)] =
                    x_38623;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45066;
                    int32_t skip_waves_45067;
                    
                    skip_waves_45067 = 1;
                    
                    float x_45054;
                    float x_45055;
                    
                    offset_45066 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45039,
                                  sext_i64_i32(segred_group_sizze_38619))) {
                            x_45054 = ((__local
                                        float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039 +
                                                                    offset_45066)];
                        }
                    }
                    offset_45066 = 1;
                    while (slt32(offset_45066, wave_sizze_45041)) {
                        if (slt32(local_tid_45039 + offset_45066,
                                  sext_i64_i32(segred_group_sizze_38619)) &&
                            ((local_tid_45039 - squot32(local_tid_45039,
                                                        wave_sizze_45041) *
                              wave_sizze_45041) & (2 * offset_45066 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45055 = ((volatile __local
                                            float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039 +
                                                                        offset_45066)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45056 = x_45054 + x_45055;
                                
                                x_45054 = defunc_1_op_res_45056;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039)] =
                                    x_45054;
                            }
                        }
                        offset_45066 *= 2;
                    }
                    while (slt32(skip_waves_45067,
                                 squot32(sext_i64_i32(segred_group_sizze_38619) +
                                         wave_sizze_45041 - 1,
                                         wave_sizze_45041))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45066 = skip_waves_45067 * wave_sizze_45041;
                        if (slt32(local_tid_45039 + offset_45066,
                                  sext_i64_i32(segred_group_sizze_38619)) &&
                            ((local_tid_45039 - squot32(local_tid_45039,
                                                        wave_sizze_45041) *
                              wave_sizze_45041) == 0 &&
                             (squot32(local_tid_45039, wave_sizze_45041) & (2 *
                                                                            skip_waves_45067 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45055 = ((__local
                                            float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039 +
                                                                        offset_45066)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45056 = x_45054 + x_45055;
                                
                                x_45054 = defunc_1_op_res_45056;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45043)[sext_i32_i64(local_tid_45039)] =
                                    x_45054;
                            }
                        }
                        skip_waves_45067 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45039 == 0) {
                            ((__global float *) mem_43899)[gtid_38562 *
                                                           N_30803 +
                                                           gtid_38563] =
                                x_45054;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38619
}
__kernel void mainzisegred_large_39139(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45299_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45297_backing_aligned_1,
                                       int64_t N_30803, int64_t i32_res_30817,
                                       int64_t num_groups_39186, __global
                                       unsigned char *defunc_4_map_res_mem_43943,
                                       __global unsigned char *mem_44010,
                                       __global unsigned char *mem_44013,
                                       int64_t groups_per_segment_45283,
                                       int64_t elements_per_thread_45284,
                                       int64_t virt_num_groups_45285,
                                       int64_t threads_per_segment_45287,
                                       __global
                                       unsigned char *group_res_arr_mem_45288,
                                       __global
                                       unsigned char *mainzicounter_mem_45290)
{
    #define segred_group_sizze_39185 (mainzisegred_group_sizze_39133)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45299_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45299_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45297_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45297_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45292;
    int32_t local_tid_45293;
    int64_t group_sizze_45296;
    int32_t wave_sizze_45295;
    int32_t group_tid_45294;
    
    global_tid_45292 = get_global_id(0);
    local_tid_45293 = get_local_id(0);
    group_sizze_45296 = get_local_size(0);
    wave_sizze_45295 = LOCKSTEP_WIDTH;
    group_tid_45294 = get_group_id(0);
    
    int32_t phys_tid_39139;
    
    phys_tid_39139 = global_tid_45292;
    
    __local char *red_arr_mem_45297;
    
    red_arr_mem_45297 = (__local char *) red_arr_mem_45297_backing_0;
    
    __local char *sync_arr_mem_45299;
    
    sync_arr_mem_45299 = (__local char *) sync_arr_mem_45299_backing_1;
    
    int32_t phys_group_id_45301;
    
    phys_group_id_45301 = get_group_id(0);
    for (int32_t i_45302 = 0; i_45302 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45285) - phys_group_id_45301,
                   sext_i64_i32(num_groups_39186)); i_45302++) {
        int32_t virt_group_id_45303 = phys_group_id_45301 + i_45302 *
                sext_i64_i32(num_groups_39186);
        int32_t flat_segment_id_45304 = squot32(virt_group_id_45303,
                                                sext_i64_i32(groups_per_segment_45283));
        int64_t global_tid_45305 = srem64(sext_i32_i64(virt_group_id_45303) *
                                          segred_group_sizze_39185 +
                                          sext_i32_i64(local_tid_45293),
                                          segred_group_sizze_39185 *
                                          groups_per_segment_45283);
        int64_t gtid_39130 = sext_i32_i64(flat_segment_id_45304);
        int64_t gtid_39138;
        float x_acc_45306;
        int64_t chunk_sizze_45307;
        
        chunk_sizze_45307 = smin64(elements_per_thread_45284,
                                   sdiv_up64(i32_res_30817 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45305)),
                                             threads_per_segment_45287));
        
        float x_39189;
        float x_39190;
        
        // neutral-initialise the accumulators
        {
            x_acc_45306 = 0.0F;
        }
        for (int64_t i_45311 = 0; i_45311 < chunk_sizze_45307; i_45311++) {
            gtid_39138 = sext_i32_i64(sext_i64_i32(global_tid_45305)) +
                threads_per_segment_45287 * i_45311;
            // apply map function
            {
                int32_t defunc_0_f_res_39193 = ((__global
                                                 int32_t *) mem_44010)[gtid_39130];
                int32_t index_primexp_41456 = sext_i64_i32(gtid_39138);
                bool cond_39195 = slt32(index_primexp_41456,
                                        defunc_0_f_res_39193);
                float defunc_0_f_res_39196;
                
                if (cond_39195) {
                    int64_t i_39197 = sext_i32_i64(index_primexp_41456);
                    float defunc_0_f_res_t_res_39198 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_39130 *
                                                                                              N_30803 +
                                                                                              i_39197];
                    
                    defunc_0_f_res_39196 = defunc_0_f_res_t_res_39198;
                } else {
                    defunc_0_f_res_39196 = 0.0F;
                }
                
                float defunc_0_f_res_39199 = defunc_0_f_res_39196 *
                      defunc_0_f_res_39196;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39189 = x_acc_45306;
                }
                // load new values
                {
                    x_39190 = defunc_0_f_res_39199;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39191 = x_39189 + x_39190;
                    
                    // store in accumulator
                    {
                        x_acc_45306 = defunc_1_op_res_39191;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39189 = x_acc_45306;
            ((__local
              float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293)] =
                x_39189;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45312;
        int32_t skip_waves_45313;
        
        skip_waves_45313 = 1;
        
        float x_45308;
        float x_45309;
        
        offset_45312 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45293,
                      sext_i64_i32(segred_group_sizze_39185))) {
                x_45308 = ((__local
                            float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293 +
                                                        offset_45312)];
            }
        }
        offset_45312 = 1;
        while (slt32(offset_45312, wave_sizze_45295)) {
            if (slt32(local_tid_45293 + offset_45312,
                      sext_i64_i32(segred_group_sizze_39185)) &&
                ((local_tid_45293 - squot32(local_tid_45293, wave_sizze_45295) *
                  wave_sizze_45295) & (2 * offset_45312 - 1)) == 0) {
                // read array element
                {
                    x_45309 = ((volatile __local
                                float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293 +
                                                            offset_45312)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45310 = x_45308 + x_45309;
                    
                    x_45308 = defunc_1_op_res_45310;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293)] =
                        x_45308;
                }
            }
            offset_45312 *= 2;
        }
        while (slt32(skip_waves_45313,
                     squot32(sext_i64_i32(segred_group_sizze_39185) +
                             wave_sizze_45295 - 1, wave_sizze_45295))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45312 = skip_waves_45313 * wave_sizze_45295;
            if (slt32(local_tid_45293 + offset_45312,
                      sext_i64_i32(segred_group_sizze_39185)) &&
                ((local_tid_45293 - squot32(local_tid_45293, wave_sizze_45295) *
                  wave_sizze_45295) == 0 && (squot32(local_tid_45293,
                                                     wave_sizze_45295) & (2 *
                                                                          skip_waves_45313 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45309 = ((__local
                                float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293 +
                                                            offset_45312)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45310 = x_45308 + x_45309;
                    
                    x_45308 = defunc_1_op_res_45310;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293)] =
                        x_45308;
                }
            }
            skip_waves_45313 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45293) == 0) {
                x_acc_45306 = x_45308;
            }
        }
        if (groups_per_segment_45283 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45293 == 0) {
                    ((__global float *) mem_44013)[gtid_39130] = x_acc_45306;
                }
            }
        } else {
            int32_t old_counter_45314;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45293 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45288)[sext_i32_i64(virt_group_id_45303) *
                                                        segred_group_sizze_39185] =
                        x_acc_45306;
                    mem_fence_global();
                    old_counter_45314 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45290)[sext_i32_i64(srem32(flat_segment_id_45304,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45299)[0] =
                        old_counter_45314 == groups_per_segment_45283 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45315;
            
            is_last_group_45315 = ((__local bool *) sync_arr_mem_45299)[0];
            if (is_last_group_45315) {
                if (local_tid_45293 == 0) {
                    old_counter_45314 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45290)[sext_i32_i64(srem32(flat_segment_id_45304,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45283));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45316 =
                            sdiv_up64(groups_per_segment_45283,
                                      segred_group_sizze_39185);
                    
                    x_39189 = 0.0F;
                    for (int64_t i_45317 = 0; i_45317 < read_per_thread_45316;
                         i_45317++) {
                        int64_t group_res_id_45318 =
                                sext_i32_i64(local_tid_45293) *
                                read_per_thread_45316 + i_45317;
                        int64_t index_of_group_res_45319 =
                                sext_i32_i64(flat_segment_id_45304) *
                                groups_per_segment_45283 + group_res_id_45318;
                        
                        if (slt64(group_res_id_45318,
                                  groups_per_segment_45283)) {
                            x_39190 = ((__global
                                        float *) group_res_arr_mem_45288)[index_of_group_res_45319 *
                                                                          segred_group_sizze_39185];
                            
                            float defunc_1_op_res_39191;
                            
                            defunc_1_op_res_39191 = x_39189 + x_39190;
                            x_39189 = defunc_1_op_res_39191;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293)] =
                    x_39189;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45320;
                    int32_t skip_waves_45321;
                    
                    skip_waves_45321 = 1;
                    
                    float x_45308;
                    float x_45309;
                    
                    offset_45320 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45293,
                                  sext_i64_i32(segred_group_sizze_39185))) {
                            x_45308 = ((__local
                                        float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293 +
                                                                    offset_45320)];
                        }
                    }
                    offset_45320 = 1;
                    while (slt32(offset_45320, wave_sizze_45295)) {
                        if (slt32(local_tid_45293 + offset_45320,
                                  sext_i64_i32(segred_group_sizze_39185)) &&
                            ((local_tid_45293 - squot32(local_tid_45293,
                                                        wave_sizze_45295) *
                              wave_sizze_45295) & (2 * offset_45320 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45309 = ((volatile __local
                                            float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293 +
                                                                        offset_45320)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45310 = x_45308 + x_45309;
                                
                                x_45308 = defunc_1_op_res_45310;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293)] =
                                    x_45308;
                            }
                        }
                        offset_45320 *= 2;
                    }
                    while (slt32(skip_waves_45321,
                                 squot32(sext_i64_i32(segred_group_sizze_39185) +
                                         wave_sizze_45295 - 1,
                                         wave_sizze_45295))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45320 = skip_waves_45321 * wave_sizze_45295;
                        if (slt32(local_tid_45293 + offset_45320,
                                  sext_i64_i32(segred_group_sizze_39185)) &&
                            ((local_tid_45293 - squot32(local_tid_45293,
                                                        wave_sizze_45295) *
                              wave_sizze_45295) == 0 &&
                             (squot32(local_tid_45293, wave_sizze_45295) & (2 *
                                                                            skip_waves_45321 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45309 = ((__local
                                            float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293 +
                                                                        offset_45320)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45310 = x_45308 + x_45309;
                                
                                x_45308 = defunc_1_op_res_45310;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45297)[sext_i32_i64(local_tid_45293)] =
                                    x_45308;
                            }
                        }
                        skip_waves_45321 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45293 == 0) {
                            ((__global float *) mem_44013)[gtid_39130] =
                                x_45308;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39185
}
__kernel void mainzisegred_large_39160(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45239_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45237_backing_aligned_1,
                                       int64_t N_30805, int64_t i32_res_30817,
                                       int64_t num_groups_39172, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *mem_44010,
                                       int64_t groups_per_segment_45223,
                                       int64_t elements_per_thread_45224,
                                       int64_t virt_num_groups_45225,
                                       int64_t threads_per_segment_45227,
                                       __global
                                       unsigned char *group_res_arr_mem_45228,
                                       __global
                                       unsigned char *mainzicounter_mem_45230)
{
    #define segred_group_sizze_39171 (mainzisegred_group_sizze_39154)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45239_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45239_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45237_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45237_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45232;
    int32_t local_tid_45233;
    int64_t group_sizze_45236;
    int32_t wave_sizze_45235;
    int32_t group_tid_45234;
    
    global_tid_45232 = get_global_id(0);
    local_tid_45233 = get_local_id(0);
    group_sizze_45236 = get_local_size(0);
    wave_sizze_45235 = LOCKSTEP_WIDTH;
    group_tid_45234 = get_group_id(0);
    
    int32_t phys_tid_39160;
    
    phys_tid_39160 = global_tid_45232;
    
    __local char *red_arr_mem_45237;
    
    red_arr_mem_45237 = (__local char *) red_arr_mem_45237_backing_0;
    
    __local char *sync_arr_mem_45239;
    
    sync_arr_mem_45239 = (__local char *) sync_arr_mem_45239_backing_1;
    
    int32_t phys_group_id_45241;
    
    phys_group_id_45241 = get_group_id(0);
    for (int32_t i_45242 = 0; i_45242 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45225) - phys_group_id_45241,
                   sext_i64_i32(num_groups_39172)); i_45242++) {
        int32_t virt_group_id_45243 = phys_group_id_45241 + i_45242 *
                sext_i64_i32(num_groups_39172);
        int32_t flat_segment_id_45244 = squot32(virt_group_id_45243,
                                                sext_i64_i32(groups_per_segment_45223));
        int64_t global_tid_45245 = srem64(sext_i32_i64(virt_group_id_45243) *
                                          segred_group_sizze_39171 +
                                          sext_i32_i64(local_tid_45233),
                                          segred_group_sizze_39171 *
                                          groups_per_segment_45223);
        int64_t gtid_39151 = sext_i32_i64(flat_segment_id_45244);
        int64_t gtid_39159;
        int32_t x_acc_45246;
        int64_t chunk_sizze_45247;
        
        chunk_sizze_45247 = smin64(elements_per_thread_45224,
                                   sdiv_up64(i32_res_30817 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45245)),
                                             threads_per_segment_45227));
        
        int32_t x_39175;
        int32_t x_39176;
        
        // neutral-initialise the accumulators
        {
            x_acc_45246 = 0;
        }
        for (int64_t i_45251 = 0; i_45251 < chunk_sizze_45247; i_45251++) {
            gtid_39159 = sext_i32_i64(sext_i64_i32(global_tid_45245)) +
                threads_per_segment_45227 * i_45251;
            // apply map function
            {
                float x_39179 = ((__global
                                  float *) images_mem_43378)[gtid_39151 *
                                                             N_30805 +
                                                             gtid_39159];
                bool isnan_res_39180;
                
                isnan_res_39180 = futrts_isnan32(x_39179);
                
                bool cond_39181 = !isnan_res_39180;
                int32_t defunc_0_f_res_39182 = btoi_bool_i32(cond_39181);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39175 = x_acc_45246;
                }
                // load new values
                {
                    x_39176 = defunc_0_f_res_39182;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_39177 = add32(x_39175, x_39176);
                    
                    // store in accumulator
                    {
                        x_acc_45246 = defunc_1_op_res_39177;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39175 = x_acc_45246;
            ((__local
              int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                x_39175;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45252;
        int32_t skip_waves_45253;
        
        skip_waves_45253 = 1;
        
        int32_t x_45248;
        int32_t x_45249;
        
        offset_45252 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45233,
                      sext_i64_i32(segred_group_sizze_39171))) {
                x_45248 = ((__local
                            int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233 +
                                                          offset_45252)];
            }
        }
        offset_45252 = 1;
        while (slt32(offset_45252, wave_sizze_45235)) {
            if (slt32(local_tid_45233 + offset_45252,
                      sext_i64_i32(segred_group_sizze_39171)) &&
                ((local_tid_45233 - squot32(local_tid_45233, wave_sizze_45235) *
                  wave_sizze_45235) & (2 * offset_45252 - 1)) == 0) {
                // read array element
                {
                    x_45249 = ((volatile __local
                                int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233 +
                                                              offset_45252)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45250 = add32(x_45248, x_45249);
                    
                    x_45248 = defunc_1_op_res_45250;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                        x_45248;
                }
            }
            offset_45252 *= 2;
        }
        while (slt32(skip_waves_45253,
                     squot32(sext_i64_i32(segred_group_sizze_39171) +
                             wave_sizze_45235 - 1, wave_sizze_45235))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45252 = skip_waves_45253 * wave_sizze_45235;
            if (slt32(local_tid_45233 + offset_45252,
                      sext_i64_i32(segred_group_sizze_39171)) &&
                ((local_tid_45233 - squot32(local_tid_45233, wave_sizze_45235) *
                  wave_sizze_45235) == 0 && (squot32(local_tid_45233,
                                                     wave_sizze_45235) & (2 *
                                                                          skip_waves_45253 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45249 = ((__local
                                int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233 +
                                                              offset_45252)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45250 = add32(x_45248, x_45249);
                    
                    x_45248 = defunc_1_op_res_45250;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                        x_45248;
                }
            }
            skip_waves_45253 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45233) == 0) {
                x_acc_45246 = x_45248;
            }
        }
        if (groups_per_segment_45223 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45233 == 0) {
                    ((__global int32_t *) mem_44010)[gtid_39151] = x_acc_45246;
                }
            }
        } else {
            int32_t old_counter_45254;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45233 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45228)[sext_i32_i64(virt_group_id_45243) *
                                                          segred_group_sizze_39171] =
                        x_acc_45246;
                    mem_fence_global();
                    old_counter_45254 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45230)[sext_i32_i64(srem32(flat_segment_id_45244,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45239)[0] =
                        old_counter_45254 == groups_per_segment_45223 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45255;
            
            is_last_group_45255 = ((__local bool *) sync_arr_mem_45239)[0];
            if (is_last_group_45255) {
                if (local_tid_45233 == 0) {
                    old_counter_45254 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45230)[sext_i32_i64(srem32(flat_segment_id_45244,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45223));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45256 =
                            sdiv_up64(groups_per_segment_45223,
                                      segred_group_sizze_39171);
                    
                    x_39175 = 0;
                    for (int64_t i_45257 = 0; i_45257 < read_per_thread_45256;
                         i_45257++) {
                        int64_t group_res_id_45258 =
                                sext_i32_i64(local_tid_45233) *
                                read_per_thread_45256 + i_45257;
                        int64_t index_of_group_res_45259 =
                                sext_i32_i64(flat_segment_id_45244) *
                                groups_per_segment_45223 + group_res_id_45258;
                        
                        if (slt64(group_res_id_45258,
                                  groups_per_segment_45223)) {
                            x_39176 = ((__global
                                        int32_t *) group_res_arr_mem_45228)[index_of_group_res_45259 *
                                                                            segred_group_sizze_39171];
                            
                            int32_t defunc_1_op_res_39177;
                            
                            defunc_1_op_res_39177 = add32(x_39175, x_39176);
                            x_39175 = defunc_1_op_res_39177;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                    x_39175;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45260;
                    int32_t skip_waves_45261;
                    
                    skip_waves_45261 = 1;
                    
                    int32_t x_45248;
                    int32_t x_45249;
                    
                    offset_45260 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45233,
                                  sext_i64_i32(segred_group_sizze_39171))) {
                            x_45248 = ((__local
                                        int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233 +
                                                                      offset_45260)];
                        }
                    }
                    offset_45260 = 1;
                    while (slt32(offset_45260, wave_sizze_45235)) {
                        if (slt32(local_tid_45233 + offset_45260,
                                  sext_i64_i32(segred_group_sizze_39171)) &&
                            ((local_tid_45233 - squot32(local_tid_45233,
                                                        wave_sizze_45235) *
                              wave_sizze_45235) & (2 * offset_45260 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45249 = ((volatile __local
                                            int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233 +
                                                                          offset_45260)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45250 = add32(x_45248,
                                                                      x_45249);
                                
                                x_45248 = defunc_1_op_res_45250;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                                    x_45248;
                            }
                        }
                        offset_45260 *= 2;
                    }
                    while (slt32(skip_waves_45261,
                                 squot32(sext_i64_i32(segred_group_sizze_39171) +
                                         wave_sizze_45235 - 1,
                                         wave_sizze_45235))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45260 = skip_waves_45261 * wave_sizze_45235;
                        if (slt32(local_tid_45233 + offset_45260,
                                  sext_i64_i32(segred_group_sizze_39171)) &&
                            ((local_tid_45233 - squot32(local_tid_45233,
                                                        wave_sizze_45235) *
                              wave_sizze_45235) == 0 &&
                             (squot32(local_tid_45233, wave_sizze_45235) & (2 *
                                                                            skip_waves_45261 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45249 = ((__local
                                            int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233 +
                                                                          offset_45260)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45250 = add32(x_45248,
                                                                      x_45249);
                                
                                x_45248 = defunc_1_op_res_45250;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                                    x_45248;
                            }
                        }
                        skip_waves_45261 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45233 == 0) {
                            ((__global int32_t *) mem_44010)[gtid_39151] =
                                x_45248;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39171
}
__kernel void mainzisegred_large_39311(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45408_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45406_backing_aligned_1,
                                       int64_t N_30803, int64_t i32_res_31165,
                                       int64_t num_groups_39329, __global
                                       unsigned char *defunc_4_map_res_mem_43943,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44022,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44023,
                                       __global unsigned char *mem_44072,
                                       int64_t groups_per_segment_45392,
                                       int64_t elements_per_thread_45393,
                                       int64_t virt_num_groups_45394,
                                       int64_t threads_per_segment_45396,
                                       __global
                                       unsigned char *group_res_arr_mem_45397,
                                       __global
                                       unsigned char *mainzicounter_mem_45399)
{
    #define segred_group_sizze_39328 (mainzisegred_group_sizze_39305)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45408_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45408_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45406_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45406_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45401;
    int32_t local_tid_45402;
    int64_t group_sizze_45405;
    int32_t wave_sizze_45404;
    int32_t group_tid_45403;
    
    global_tid_45401 = get_global_id(0);
    local_tid_45402 = get_local_id(0);
    group_sizze_45405 = get_local_size(0);
    wave_sizze_45404 = LOCKSTEP_WIDTH;
    group_tid_45403 = get_group_id(0);
    
    int32_t phys_tid_39311;
    
    phys_tid_39311 = global_tid_45401;
    
    __local char *red_arr_mem_45406;
    
    red_arr_mem_45406 = (__local char *) red_arr_mem_45406_backing_0;
    
    __local char *sync_arr_mem_45408;
    
    sync_arr_mem_45408 = (__local char *) sync_arr_mem_45408_backing_1;
    
    int32_t phys_group_id_45410;
    
    phys_group_id_45410 = get_group_id(0);
    for (int32_t i_45411 = 0; i_45411 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45394) - phys_group_id_45410,
                   sext_i64_i32(num_groups_39329)); i_45411++) {
        int32_t virt_group_id_45412 = phys_group_id_45410 + i_45411 *
                sext_i64_i32(num_groups_39329);
        int32_t flat_segment_id_45413 = squot32(virt_group_id_45412,
                                                sext_i64_i32(groups_per_segment_45392));
        int64_t global_tid_45414 = srem64(sext_i32_i64(virt_group_id_45412) *
                                          segred_group_sizze_39328 +
                                          sext_i32_i64(local_tid_45402),
                                          segred_group_sizze_39328 *
                                          groups_per_segment_45392);
        int64_t gtid_39302 = sext_i32_i64(flat_segment_id_45413);
        int64_t gtid_39310;
        float x_acc_45415;
        int64_t chunk_sizze_45416;
        
        chunk_sizze_45416 = smin64(elements_per_thread_45393,
                                   sdiv_up64(i32_res_31165 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45414)),
                                             threads_per_segment_45396));
        
        float x_39332;
        float x_39333;
        
        // neutral-initialise the accumulators
        {
            x_acc_45415 = 0.0F;
        }
        for (int64_t i_45420 = 0; i_45420 < chunk_sizze_45416; i_45420++) {
            gtid_39310 = sext_i32_i64(sext_i64_i32(global_tid_45414)) +
                threads_per_segment_45396 * i_45420;
            // apply map function
            {
                int32_t x_39337 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44022)[gtid_39302];
                int32_t index_primexp_41461 = sext_i64_i32(gtid_39310);
                bool cond_39339 = slt32(index_primexp_41461, x_39337);
                float defunc_0_f_res_39340;
                
                if (cond_39339) {
                    int32_t x_39336 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44023)[gtid_39302];
                    int32_t x_39341 = add32(x_39336, index_primexp_41461);
                    int32_t x_39342 = sub32(x_39341, x_39337);
                    int32_t i_39343 = add32(1, x_39342);
                    int64_t i_39344 = sext_i32_i64(i_39343);
                    float defunc_0_f_res_t_res_39345 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_39302 *
                                                                                              N_30803 +
                                                                                              i_39344];
                    
                    defunc_0_f_res_39340 = defunc_0_f_res_t_res_39345;
                } else {
                    defunc_0_f_res_39340 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_39332 = x_acc_45415;
                }
                // load new values
                {
                    x_39333 = defunc_0_f_res_39340;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39334 = x_39332 + x_39333;
                    
                    // store in accumulator
                    {
                        x_acc_45415 = defunc_1_op_res_39334;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39332 = x_acc_45415;
            ((__local
              float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402)] =
                x_39332;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45421;
        int32_t skip_waves_45422;
        
        skip_waves_45422 = 1;
        
        float x_45417;
        float x_45418;
        
        offset_45421 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45402,
                      sext_i64_i32(segred_group_sizze_39328))) {
                x_45417 = ((__local
                            float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402 +
                                                        offset_45421)];
            }
        }
        offset_45421 = 1;
        while (slt32(offset_45421, wave_sizze_45404)) {
            if (slt32(local_tid_45402 + offset_45421,
                      sext_i64_i32(segred_group_sizze_39328)) &&
                ((local_tid_45402 - squot32(local_tid_45402, wave_sizze_45404) *
                  wave_sizze_45404) & (2 * offset_45421 - 1)) == 0) {
                // read array element
                {
                    x_45418 = ((volatile __local
                                float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402 +
                                                            offset_45421)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45419 = x_45417 + x_45418;
                    
                    x_45417 = defunc_1_op_res_45419;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402)] =
                        x_45417;
                }
            }
            offset_45421 *= 2;
        }
        while (slt32(skip_waves_45422,
                     squot32(sext_i64_i32(segred_group_sizze_39328) +
                             wave_sizze_45404 - 1, wave_sizze_45404))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45421 = skip_waves_45422 * wave_sizze_45404;
            if (slt32(local_tid_45402 + offset_45421,
                      sext_i64_i32(segred_group_sizze_39328)) &&
                ((local_tid_45402 - squot32(local_tid_45402, wave_sizze_45404) *
                  wave_sizze_45404) == 0 && (squot32(local_tid_45402,
                                                     wave_sizze_45404) & (2 *
                                                                          skip_waves_45422 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45418 = ((__local
                                float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402 +
                                                            offset_45421)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45419 = x_45417 + x_45418;
                    
                    x_45417 = defunc_1_op_res_45419;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402)] =
                        x_45417;
                }
            }
            skip_waves_45422 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45402) == 0) {
                x_acc_45415 = x_45417;
            }
        }
        if (groups_per_segment_45392 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45402 == 0) {
                    ((__global float *) mem_44072)[gtid_39302] = x_acc_45415;
                }
            }
        } else {
            int32_t old_counter_45423;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45402 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45397)[sext_i32_i64(virt_group_id_45412) *
                                                        segred_group_sizze_39328] =
                        x_acc_45415;
                    mem_fence_global();
                    old_counter_45423 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45399)[sext_i32_i64(srem32(flat_segment_id_45413,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45408)[0] =
                        old_counter_45423 == groups_per_segment_45392 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45424;
            
            is_last_group_45424 = ((__local bool *) sync_arr_mem_45408)[0];
            if (is_last_group_45424) {
                if (local_tid_45402 == 0) {
                    old_counter_45423 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45399)[sext_i32_i64(srem32(flat_segment_id_45413,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45392));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45425 =
                            sdiv_up64(groups_per_segment_45392,
                                      segred_group_sizze_39328);
                    
                    x_39332 = 0.0F;
                    for (int64_t i_45426 = 0; i_45426 < read_per_thread_45425;
                         i_45426++) {
                        int64_t group_res_id_45427 =
                                sext_i32_i64(local_tid_45402) *
                                read_per_thread_45425 + i_45426;
                        int64_t index_of_group_res_45428 =
                                sext_i32_i64(flat_segment_id_45413) *
                                groups_per_segment_45392 + group_res_id_45427;
                        
                        if (slt64(group_res_id_45427,
                                  groups_per_segment_45392)) {
                            x_39333 = ((__global
                                        float *) group_res_arr_mem_45397)[index_of_group_res_45428 *
                                                                          segred_group_sizze_39328];
                            
                            float defunc_1_op_res_39334;
                            
                            defunc_1_op_res_39334 = x_39332 + x_39333;
                            x_39332 = defunc_1_op_res_39334;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402)] =
                    x_39332;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45429;
                    int32_t skip_waves_45430;
                    
                    skip_waves_45430 = 1;
                    
                    float x_45417;
                    float x_45418;
                    
                    offset_45429 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45402,
                                  sext_i64_i32(segred_group_sizze_39328))) {
                            x_45417 = ((__local
                                        float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402 +
                                                                    offset_45429)];
                        }
                    }
                    offset_45429 = 1;
                    while (slt32(offset_45429, wave_sizze_45404)) {
                        if (slt32(local_tid_45402 + offset_45429,
                                  sext_i64_i32(segred_group_sizze_39328)) &&
                            ((local_tid_45402 - squot32(local_tid_45402,
                                                        wave_sizze_45404) *
                              wave_sizze_45404) & (2 * offset_45429 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45418 = ((volatile __local
                                            float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402 +
                                                                        offset_45429)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45419 = x_45417 + x_45418;
                                
                                x_45417 = defunc_1_op_res_45419;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402)] =
                                    x_45417;
                            }
                        }
                        offset_45429 *= 2;
                    }
                    while (slt32(skip_waves_45430,
                                 squot32(sext_i64_i32(segred_group_sizze_39328) +
                                         wave_sizze_45404 - 1,
                                         wave_sizze_45404))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45429 = skip_waves_45430 * wave_sizze_45404;
                        if (slt32(local_tid_45402 + offset_45429,
                                  sext_i64_i32(segred_group_sizze_39328)) &&
                            ((local_tid_45402 - squot32(local_tid_45402,
                                                        wave_sizze_45404) *
                              wave_sizze_45404) == 0 &&
                             (squot32(local_tid_45402, wave_sizze_45404) & (2 *
                                                                            skip_waves_45430 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45418 = ((__local
                                            float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402 +
                                                                        offset_45429)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45419 = x_45417 + x_45418;
                                
                                x_45417 = defunc_1_op_res_45419;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45406)[sext_i32_i64(local_tid_45402)] =
                                    x_45417;
                            }
                        }
                        skip_waves_45430 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45402 == 0) {
                            ((__global float *) mem_44072)[gtid_39302] =
                                x_45417;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39328
}
__kernel void mainzisegred_large_40860(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45639_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45637_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45635_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_45633_backing_aligned_3,
                                       int64_t iota32_arg_31190,
                                       int64_t num_groups_41031, __global
                                       unsigned char *mem_44078, __global
                                       unsigned char *mem_44238, __global
                                       unsigned char *mem_44240, __global
                                       unsigned char *mem_44244, __global
                                       unsigned char *mem_44247, __global
                                       unsigned char *mem_44249, __global
                                       unsigned char *mem_44251,
                                       int64_t groups_per_segment_45615,
                                       int64_t elements_per_thread_45616,
                                       int64_t virt_num_groups_45617, __global
                                       unsigned char *group_res_arr_mem_45620,
                                       __global
                                       unsigned char *group_res_arr_mem_45622,
                                       __global
                                       unsigned char *group_res_arr_mem_45624,
                                       __global
                                       unsigned char *mainzicounter_mem_45626)
{
    #define segred_group_sizze_41030 (mainzisegred_group_sizze_40854)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45639_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45639_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45637_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45637_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45635_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45635_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45633_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45633_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45628;
    int32_t local_tid_45629;
    int64_t group_sizze_45632;
    int32_t wave_sizze_45631;
    int32_t group_tid_45630;
    
    global_tid_45628 = get_global_id(0);
    local_tid_45629 = get_local_id(0);
    group_sizze_45632 = get_local_size(0);
    wave_sizze_45631 = LOCKSTEP_WIDTH;
    group_tid_45630 = get_group_id(0);
    
    int32_t phys_tid_40860;
    
    phys_tid_40860 = global_tid_45628;
    
    __local char *red_arr_mem_45633;
    
    red_arr_mem_45633 = (__local char *) red_arr_mem_45633_backing_0;
    
    __local char *red_arr_mem_45635;
    
    red_arr_mem_45635 = (__local char *) red_arr_mem_45635_backing_1;
    
    __local char *red_arr_mem_45637;
    
    red_arr_mem_45637 = (__local char *) red_arr_mem_45637_backing_2;
    
    __local char *sync_arr_mem_45639;
    
    sync_arr_mem_45639 = (__local char *) sync_arr_mem_45639_backing_3;
    
    int32_t phys_group_id_45641;
    
    phys_group_id_45641 = get_group_id(0);
    for (int32_t i_45642 = 0; i_45642 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45617) - phys_group_id_45641,
                   sext_i64_i32(num_groups_41031)); i_45642++) {
        int32_t virt_group_id_45643 = phys_group_id_45641 + i_45642 *
                sext_i64_i32(num_groups_41031);
        int32_t flat_segment_id_45644 = squot32(virt_group_id_45643,
                                                sext_i64_i32(groups_per_segment_45615));
        int64_t global_tid_45645 = srem64(sext_i32_i64(virt_group_id_45643) *
                                          segred_group_sizze_41030 +
                                          sext_i32_i64(local_tid_45629),
                                          segred_group_sizze_41030 *
                                          groups_per_segment_45615);
        int64_t gtid_40851 = sext_i32_i64(flat_segment_id_45644);
        int64_t gtid_40859;
        bool x_acc_45646;
        int32_t x_acc_45647;
        float x_acc_45648;
        int64_t chunk_sizze_45649;
        int64_t starting_point_45650;
        
        starting_point_45650 = sext_i32_i64(sext_i64_i32(global_tid_45645)) *
            elements_per_thread_45616;
        
        int64_t remaining_elements_45651;
        
        remaining_elements_45651 = iota32_arg_31190 - starting_point_45650;
        if (sle64(remaining_elements_45651, 0) || sle64(iota32_arg_31190,
                                                        starting_point_45650)) {
            chunk_sizze_45649 = 0;
        } else {
            if (slt64(iota32_arg_31190,
                      (sext_i32_i64(sext_i64_i32(global_tid_45645)) + 1) *
                      elements_per_thread_45616)) {
                chunk_sizze_45649 = iota32_arg_31190 -
                    sext_i32_i64(sext_i64_i32(global_tid_45645)) *
                    elements_per_thread_45616;
            } else {
                chunk_sizze_45649 = elements_per_thread_45616;
            }
        }
        
        bool x_41036;
        int32_t x_41037;
        float x_41038;
        bool x_41039;
        int32_t x_41040;
        float x_41041;
        
        // neutral-initialise the accumulators
        {
            x_acc_45646 = 0;
            x_acc_45647 = -1;
            x_acc_45648 = 0.0F;
        }
        for (int64_t i_45666 = 0; i_45666 < elements_per_thread_45616;
             i_45666++) {
            gtid_40859 = sext_i32_i64(local_tid_45629) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45645),
                                      sext_i64_i32(segred_group_sizze_41030))) *
                 elements_per_thread_45616 + i_45666) *
                segred_group_sizze_41030;
            if (slt64(gtid_40859, iota32_arg_31190)) {
                // apply map function
                {
                    int32_t y_41050 = ((__global
                                        int32_t *) mem_44240)[gtid_40851];
                    float y_41051 = ((__global float *) mem_44238)[gtid_40851];
                    float x_41055 = ((__global float *) mem_44244)[gtid_40851 *
                                                                   iota32_arg_31190 +
                                                                   gtid_40859];
                    float x_41056 = ((__global float *) mem_44078)[gtid_40859];
                    int32_t index_primexp_41478 = sext_i64_i32(gtid_40859);
                    float defunc_0_f_res_41059 = x_41055 / y_41051;
                    bool cond_41060 = slt32(index_primexp_41478, y_41050);
                    bool isnan_res_41061;
                    
                    isnan_res_41061 = futrts_isnan32(defunc_0_f_res_41059);
                    
                    bool cond_t_res_41062 = !isnan_res_41061;
                    bool x_41063 = cond_41060 && cond_t_res_41062;
                    float abs_res_41064 = (float) fabs(defunc_0_f_res_41059);
                    bool defunc_2_f_res_t_res_41065 = x_41056 < abs_res_41064;
                    bool x_41066 = x_41063 && defunc_2_f_res_t_res_41065;
                    float defunc_1_f_res_41067;
                    
                    if (cond_41060) {
                        defunc_1_f_res_41067 = defunc_0_f_res_41059;
                    } else {
                        defunc_1_f_res_41067 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_41036 = x_acc_45646;
                        x_41037 = x_acc_45647;
                        x_41038 = x_acc_45648;
                    }
                    // load new values
                    {
                        x_41039 = x_41066;
                        x_41040 = index_primexp_41478;
                        x_41041 = defunc_1_f_res_41067;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_41042;
                        int32_t defunc_1_op_res_41043;
                        
                        if (x_41036) {
                            defunc_1_op_res_41042 = x_41036;
                            defunc_1_op_res_41043 = x_41037;
                        } else {
                            bool x_41044 = x_41039 && x_41039;
                            bool x_41045 = !x_41039;
                            bool y_41046 = x_41036 && x_41045;
                            bool defunc_1_op_res_f_res_41047 = x_41044 ||
                                 y_41046;
                            int32_t defunc_1_op_res_f_res_41048;
                            
                            if (x_41039) {
                                defunc_1_op_res_f_res_41048 = x_41040;
                            } else {
                                defunc_1_op_res_f_res_41048 = x_41037;
                            }
                            defunc_1_op_res_41042 = defunc_1_op_res_f_res_41047;
                            defunc_1_op_res_41043 = defunc_1_op_res_f_res_41048;
                        }
                        
                        float defunc_1_op_res_41049 = x_41038 + x_41041;
                        
                        // store in accumulator
                        {
                            x_acc_45646 = defunc_1_op_res_41042;
                            x_acc_45647 = defunc_1_op_res_41043;
                            x_acc_45648 = defunc_1_op_res_41049;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_41036 = x_acc_45646;
                x_41037 = x_acc_45647;
                x_41038 = x_acc_45648;
                ((__local
                  bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629)] =
                    x_41036;
                ((__local
                  int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629)] =
                    x_41037;
                ((__local
                  float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629)] =
                    x_41038;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45667;
            int32_t skip_waves_45668;
            
            skip_waves_45668 = 1;
            
            bool x_45652;
            int32_t x_45653;
            float x_45654;
            bool x_45655;
            int32_t x_45656;
            float x_45657;
            
            offset_45667 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45629,
                          sext_i64_i32(segred_group_sizze_41030))) {
                    x_45652 = ((__local
                                bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629 +
                                                           offset_45667)];
                    x_45653 = ((__local
                                int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629 +
                                                              offset_45667)];
                    x_45654 = ((__local
                                float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629 +
                                                            offset_45667)];
                }
            }
            offset_45667 = 1;
            while (slt32(offset_45667, wave_sizze_45631)) {
                if (slt32(local_tid_45629 + offset_45667,
                          sext_i64_i32(segred_group_sizze_41030)) &&
                    ((local_tid_45629 - squot32(local_tid_45629,
                                                wave_sizze_45631) *
                      wave_sizze_45631) & (2 * offset_45667 - 1)) == 0) {
                    // read array element
                    {
                        x_45655 = ((volatile __local
                                    bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629 +
                                                               offset_45667)];
                        x_45656 = ((volatile __local
                                    int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629 +
                                                                  offset_45667)];
                        x_45657 = ((volatile __local
                                    float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629 +
                                                                offset_45667)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45658;
                        int32_t defunc_1_op_res_45659;
                        
                        if (x_45652) {
                            defunc_1_op_res_45658 = x_45652;
                            defunc_1_op_res_45659 = x_45653;
                        } else {
                            bool x_45660 = x_45655 && x_45655;
                            bool x_45661 = !x_45655;
                            bool y_45662 = x_45652 && x_45661;
                            bool defunc_1_op_res_f_res_45663 = x_45660 ||
                                 y_45662;
                            int32_t defunc_1_op_res_f_res_45664;
                            
                            if (x_45655) {
                                defunc_1_op_res_f_res_45664 = x_45656;
                            } else {
                                defunc_1_op_res_f_res_45664 = x_45653;
                            }
                            defunc_1_op_res_45658 = defunc_1_op_res_f_res_45663;
                            defunc_1_op_res_45659 = defunc_1_op_res_f_res_45664;
                        }
                        
                        float defunc_1_op_res_45665 = x_45654 + x_45657;
                        
                        x_45652 = defunc_1_op_res_45658;
                        x_45653 = defunc_1_op_res_45659;
                        x_45654 = defunc_1_op_res_45665;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629)] =
                            x_45652;
                        ((volatile __local
                          int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629)] =
                            x_45653;
                        ((volatile __local
                          float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629)] =
                            x_45654;
                    }
                }
                offset_45667 *= 2;
            }
            while (slt32(skip_waves_45668,
                         squot32(sext_i64_i32(segred_group_sizze_41030) +
                                 wave_sizze_45631 - 1, wave_sizze_45631))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45667 = skip_waves_45668 * wave_sizze_45631;
                if (slt32(local_tid_45629 + offset_45667,
                          sext_i64_i32(segred_group_sizze_41030)) &&
                    ((local_tid_45629 - squot32(local_tid_45629,
                                                wave_sizze_45631) *
                      wave_sizze_45631) == 0 && (squot32(local_tid_45629,
                                                         wave_sizze_45631) &
                                                 (2 * skip_waves_45668 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45655 = ((__local
                                    bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629 +
                                                               offset_45667)];
                        x_45656 = ((__local
                                    int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629 +
                                                                  offset_45667)];
                        x_45657 = ((__local
                                    float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629 +
                                                                offset_45667)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45658;
                        int32_t defunc_1_op_res_45659;
                        
                        if (x_45652) {
                            defunc_1_op_res_45658 = x_45652;
                            defunc_1_op_res_45659 = x_45653;
                        } else {
                            bool x_45660 = x_45655 && x_45655;
                            bool x_45661 = !x_45655;
                            bool y_45662 = x_45652 && x_45661;
                            bool defunc_1_op_res_f_res_45663 = x_45660 ||
                                 y_45662;
                            int32_t defunc_1_op_res_f_res_45664;
                            
                            if (x_45655) {
                                defunc_1_op_res_f_res_45664 = x_45656;
                            } else {
                                defunc_1_op_res_f_res_45664 = x_45653;
                            }
                            defunc_1_op_res_45658 = defunc_1_op_res_f_res_45663;
                            defunc_1_op_res_45659 = defunc_1_op_res_f_res_45664;
                        }
                        
                        float defunc_1_op_res_45665 = x_45654 + x_45657;
                        
                        x_45652 = defunc_1_op_res_45658;
                        x_45653 = defunc_1_op_res_45659;
                        x_45654 = defunc_1_op_res_45665;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629)] =
                            x_45652;
                        ((__local
                          int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629)] =
                            x_45653;
                        ((__local
                          float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629)] =
                            x_45654;
                    }
                }
                skip_waves_45668 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45629) == 0) {
                    x_acc_45646 = x_45652;
                    x_acc_45647 = x_45653;
                    x_acc_45648 = x_45654;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45629) == 0)) {
                    x_acc_45646 = 0;
                    x_acc_45647 = -1;
                    x_acc_45648 = 0.0F;
                }
            }
        }
        x_41036 = x_acc_45646;
        x_41037 = x_acc_45647;
        x_41038 = x_acc_45648;
        if (groups_per_segment_45615 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45629 == 0) {
                    ((__global bool *) mem_44247)[gtid_40851] = x_acc_45646;
                    ((__global int32_t *) mem_44249)[gtid_40851] = x_acc_45647;
                    ((__global float *) mem_44251)[gtid_40851] = x_acc_45648;
                }
            }
        } else {
            int32_t old_counter_45669;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45629 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45620)[sext_i32_i64(virt_group_id_45643) *
                                                       segred_group_sizze_41030] =
                        x_acc_45646;
                    ((__global
                      int32_t *) group_res_arr_mem_45622)[sext_i32_i64(virt_group_id_45643) *
                                                          segred_group_sizze_41030] =
                        x_acc_45647;
                    ((__global
                      float *) group_res_arr_mem_45624)[sext_i32_i64(virt_group_id_45643) *
                                                        segred_group_sizze_41030] =
                        x_acc_45648;
                    mem_fence_global();
                    old_counter_45669 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45626)[sext_i32_i64(srem32(flat_segment_id_45644,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45639)[0] =
                        old_counter_45669 == groups_per_segment_45615 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45670;
            
            is_last_group_45670 = ((__local bool *) sync_arr_mem_45639)[0];
            if (is_last_group_45670) {
                if (local_tid_45629 == 0) {
                    old_counter_45669 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45626)[sext_i32_i64(srem32(flat_segment_id_45644,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45615));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45671 =
                            sdiv_up64(groups_per_segment_45615,
                                      segred_group_sizze_41030);
                    
                    x_41036 = 0;
                    x_41037 = -1;
                    x_41038 = 0.0F;
                    for (int64_t i_45672 = 0; i_45672 < read_per_thread_45671;
                         i_45672++) {
                        int64_t group_res_id_45673 =
                                sext_i32_i64(local_tid_45629) *
                                read_per_thread_45671 + i_45672;
                        int64_t index_of_group_res_45674 =
                                sext_i32_i64(flat_segment_id_45644) *
                                groups_per_segment_45615 + group_res_id_45673;
                        
                        if (slt64(group_res_id_45673,
                                  groups_per_segment_45615)) {
                            x_41039 = ((__global
                                        bool *) group_res_arr_mem_45620)[index_of_group_res_45674 *
                                                                         segred_group_sizze_41030];
                            x_41040 = ((__global
                                        int32_t *) group_res_arr_mem_45622)[index_of_group_res_45674 *
                                                                            segred_group_sizze_41030];
                            x_41041 = ((__global
                                        float *) group_res_arr_mem_45624)[index_of_group_res_45674 *
                                                                          segred_group_sizze_41030];
                            
                            bool defunc_1_op_res_41042;
                            int32_t defunc_1_op_res_41043;
                            
                            if (x_41036) {
                                defunc_1_op_res_41042 = x_41036;
                                defunc_1_op_res_41043 = x_41037;
                            } else {
                                bool x_41044 = x_41039 && x_41039;
                                bool x_41045 = !x_41039;
                                bool y_41046 = x_41036 && x_41045;
                                bool defunc_1_op_res_f_res_41047 = x_41044 ||
                                     y_41046;
                                int32_t defunc_1_op_res_f_res_41048;
                                
                                if (x_41039) {
                                    defunc_1_op_res_f_res_41048 = x_41040;
                                } else {
                                    defunc_1_op_res_f_res_41048 = x_41037;
                                }
                                defunc_1_op_res_41042 =
                                    defunc_1_op_res_f_res_41047;
                                defunc_1_op_res_41043 =
                                    defunc_1_op_res_f_res_41048;
                            }
                            
                            float defunc_1_op_res_41049 = x_41038 + x_41041;
                            
                            x_41036 = defunc_1_op_res_41042;
                            x_41037 = defunc_1_op_res_41043;
                            x_41038 = defunc_1_op_res_41049;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629)] =
                    x_41036;
                ((__local
                  int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629)] =
                    x_41037;
                ((__local
                  float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629)] =
                    x_41038;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45675;
                    int32_t skip_waves_45676;
                    
                    skip_waves_45676 = 1;
                    
                    bool x_45652;
                    int32_t x_45653;
                    float x_45654;
                    bool x_45655;
                    int32_t x_45656;
                    float x_45657;
                    
                    offset_45675 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45629,
                                  sext_i64_i32(segred_group_sizze_41030))) {
                            x_45652 = ((__local
                                        bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629 +
                                                                   offset_45675)];
                            x_45653 = ((__local
                                        int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629 +
                                                                      offset_45675)];
                            x_45654 = ((__local
                                        float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629 +
                                                                    offset_45675)];
                        }
                    }
                    offset_45675 = 1;
                    while (slt32(offset_45675, wave_sizze_45631)) {
                        if (slt32(local_tid_45629 + offset_45675,
                                  sext_i64_i32(segred_group_sizze_41030)) &&
                            ((local_tid_45629 - squot32(local_tid_45629,
                                                        wave_sizze_45631) *
                              wave_sizze_45631) & (2 * offset_45675 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45655 = ((volatile __local
                                            bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629 +
                                                                       offset_45675)];
                                x_45656 = ((volatile __local
                                            int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629 +
                                                                          offset_45675)];
                                x_45657 = ((volatile __local
                                            float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629 +
                                                                        offset_45675)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45658;
                                int32_t defunc_1_op_res_45659;
                                
                                if (x_45652) {
                                    defunc_1_op_res_45658 = x_45652;
                                    defunc_1_op_res_45659 = x_45653;
                                } else {
                                    bool x_45660 = x_45655 && x_45655;
                                    bool x_45661 = !x_45655;
                                    bool y_45662 = x_45652 && x_45661;
                                    bool defunc_1_op_res_f_res_45663 =
                                         x_45660 || y_45662;
                                    int32_t defunc_1_op_res_f_res_45664;
                                    
                                    if (x_45655) {
                                        defunc_1_op_res_f_res_45664 = x_45656;
                                    } else {
                                        defunc_1_op_res_f_res_45664 = x_45653;
                                    }
                                    defunc_1_op_res_45658 =
                                        defunc_1_op_res_f_res_45663;
                                    defunc_1_op_res_45659 =
                                        defunc_1_op_res_f_res_45664;
                                }
                                
                                float defunc_1_op_res_45665 = x_45654 + x_45657;
                                
                                x_45652 = defunc_1_op_res_45658;
                                x_45653 = defunc_1_op_res_45659;
                                x_45654 = defunc_1_op_res_45665;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629)] =
                                    x_45652;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629)] =
                                    x_45653;
                                ((volatile __local
                                  float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629)] =
                                    x_45654;
                            }
                        }
                        offset_45675 *= 2;
                    }
                    while (slt32(skip_waves_45676,
                                 squot32(sext_i64_i32(segred_group_sizze_41030) +
                                         wave_sizze_45631 - 1,
                                         wave_sizze_45631))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45675 = skip_waves_45676 * wave_sizze_45631;
                        if (slt32(local_tid_45629 + offset_45675,
                                  sext_i64_i32(segred_group_sizze_41030)) &&
                            ((local_tid_45629 - squot32(local_tid_45629,
                                                        wave_sizze_45631) *
                              wave_sizze_45631) == 0 &&
                             (squot32(local_tid_45629, wave_sizze_45631) & (2 *
                                                                            skip_waves_45676 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45655 = ((__local
                                            bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629 +
                                                                       offset_45675)];
                                x_45656 = ((__local
                                            int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629 +
                                                                          offset_45675)];
                                x_45657 = ((__local
                                            float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629 +
                                                                        offset_45675)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45658;
                                int32_t defunc_1_op_res_45659;
                                
                                if (x_45652) {
                                    defunc_1_op_res_45658 = x_45652;
                                    defunc_1_op_res_45659 = x_45653;
                                } else {
                                    bool x_45660 = x_45655 && x_45655;
                                    bool x_45661 = !x_45655;
                                    bool y_45662 = x_45652 && x_45661;
                                    bool defunc_1_op_res_f_res_45663 =
                                         x_45660 || y_45662;
                                    int32_t defunc_1_op_res_f_res_45664;
                                    
                                    if (x_45655) {
                                        defunc_1_op_res_f_res_45664 = x_45656;
                                    } else {
                                        defunc_1_op_res_f_res_45664 = x_45653;
                                    }
                                    defunc_1_op_res_45658 =
                                        defunc_1_op_res_f_res_45663;
                                    defunc_1_op_res_45659 =
                                        defunc_1_op_res_f_res_45664;
                                }
                                
                                float defunc_1_op_res_45665 = x_45654 + x_45657;
                                
                                x_45652 = defunc_1_op_res_45658;
                                x_45653 = defunc_1_op_res_45659;
                                x_45654 = defunc_1_op_res_45665;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45633)[sext_i32_i64(local_tid_45629)] =
                                    x_45652;
                                ((__local
                                  int32_t *) red_arr_mem_45635)[sext_i32_i64(local_tid_45629)] =
                                    x_45653;
                                ((__local
                                  float *) red_arr_mem_45637)[sext_i32_i64(local_tid_45629)] =
                                    x_45654;
                            }
                        }
                        skip_waves_45676 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45629 == 0) {
                            ((__global bool *) mem_44247)[gtid_40851] = x_45652;
                            ((__global int32_t *) mem_44249)[gtid_40851] =
                                x_45653;
                            ((__global float *) mem_44251)[gtid_40851] =
                                x_45654;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41030
}
__kernel void mainzisegred_nonseg_39229(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_45342_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_45340_backing_aligned_1,
                                        int64_t m_30804,
                                        int64_t num_groups_39224, __global
                                        unsigned char *defunc_3_map_res_mem_44022,
                                        __global unsigned char *mem_44027,
                                        __global
                                        unsigned char *mainzicounter_mem_45330,
                                        __global
                                        unsigned char *group_res_arr_mem_45332,
                                        int64_t num_threads_45334)
{
    #define segred_group_sizze_39222 (mainzisegred_group_sizze_39221)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45342_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45342_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45340_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45340_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45335;
    int32_t local_tid_45336;
    int64_t group_sizze_45339;
    int32_t wave_sizze_45338;
    int32_t group_tid_45337;
    
    global_tid_45335 = get_global_id(0);
    local_tid_45336 = get_local_id(0);
    group_sizze_45339 = get_local_size(0);
    wave_sizze_45338 = LOCKSTEP_WIDTH;
    group_tid_45337 = get_group_id(0);
    
    int32_t phys_tid_39229;
    
    phys_tid_39229 = global_tid_45335;
    
    __local char *sync_arr_mem_45340;
    
    sync_arr_mem_45340 = (__local char *) sync_arr_mem_45340_backing_0;
    
    __local char *red_arr_mem_45342;
    
    red_arr_mem_45342 = (__local char *) red_arr_mem_45342_backing_1;
    
    int64_t dummy_39227;
    
    dummy_39227 = 0;
    
    int64_t gtid_39228;
    
    gtid_39228 = 0;
    
    int32_t x_acc_45344;
    int64_t chunk_sizze_45345;
    
    chunk_sizze_45345 = smin64(sdiv_up64(m_30804,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_39222 *
                                         num_groups_39224))),
                               sdiv_up64(m_30804 - sext_i32_i64(phys_tid_39229),
                                         num_threads_45334));
    
    int32_t x_31161;
    int32_t x_31162;
    
    // neutral-initialise the accumulators
    {
        x_acc_45344 = 0;
    }
    for (int64_t i_45349 = 0; i_45349 < chunk_sizze_45345; i_45349++) {
        gtid_39228 = sext_i32_i64(phys_tid_39229) + num_threads_45334 * i_45349;
        // apply map function
        {
            int32_t x_31164 = ((__global
                                int32_t *) defunc_3_map_res_mem_44022)[gtid_39228];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_31161 = x_acc_45344;
            }
            // load new values
            {
                x_31162 = x_31164;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_31163 = smax32(x_31161, x_31162);
                
                // store in accumulator
                {
                    x_acc_45344 = defunc_1_op_res_31163;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_31161 = x_acc_45344;
        ((__local int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336)] =
            x_31161;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45350;
    int32_t skip_waves_45351;
    
    skip_waves_45351 = 1;
    
    int32_t x_45346;
    int32_t x_45347;
    
    offset_45350 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45336, sext_i64_i32(segred_group_sizze_39222))) {
            x_45346 = ((__local
                        int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336 +
                                                      offset_45350)];
        }
    }
    offset_45350 = 1;
    while (slt32(offset_45350, wave_sizze_45338)) {
        if (slt32(local_tid_45336 + offset_45350,
                  sext_i64_i32(segred_group_sizze_39222)) && ((local_tid_45336 -
                                                               squot32(local_tid_45336,
                                                                       wave_sizze_45338) *
                                                               wave_sizze_45338) &
                                                              (2 *
                                                               offset_45350 -
                                                               1)) == 0) {
            // read array element
            {
                x_45347 = ((volatile __local
                            int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336 +
                                                          offset_45350)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45348 = smax32(x_45346, x_45347);
                
                x_45346 = defunc_1_op_res_45348;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336)] =
                    x_45346;
            }
        }
        offset_45350 *= 2;
    }
    while (slt32(skip_waves_45351,
                 squot32(sext_i64_i32(segred_group_sizze_39222) +
                         wave_sizze_45338 - 1, wave_sizze_45338))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45350 = skip_waves_45351 * wave_sizze_45338;
        if (slt32(local_tid_45336 + offset_45350,
                  sext_i64_i32(segred_group_sizze_39222)) && ((local_tid_45336 -
                                                               squot32(local_tid_45336,
                                                                       wave_sizze_45338) *
                                                               wave_sizze_45338) ==
                                                              0 &&
                                                              (squot32(local_tid_45336,
                                                                       wave_sizze_45338) &
                                                               (2 *
                                                                skip_waves_45351 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45347 = ((__local
                            int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336 +
                                                          offset_45350)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45348 = smax32(x_45346, x_45347);
                
                x_45346 = defunc_1_op_res_45348;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336)] =
                    x_45346;
            }
        }
        skip_waves_45351 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45336) == 0) {
            x_acc_45344 = x_45346;
        }
    }
    
    int32_t old_counter_45352;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45336 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45332)[sext_i32_i64(group_tid_45337) *
                                                  segred_group_sizze_39222] =
                x_acc_45344;
            mem_fence_global();
            old_counter_45352 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45330)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45340)[0] = old_counter_45352 ==
                num_groups_39224 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45353;
    
    is_last_group_45353 = ((__local bool *) sync_arr_mem_45340)[0];
    if (is_last_group_45353) {
        if (local_tid_45336 == 0) {
            old_counter_45352 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45330)[0],
                                                      (int) (0 -
                                                             num_groups_39224));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45354 = sdiv_up64(num_groups_39224,
                                                      segred_group_sizze_39222);
            
            x_31161 = 0;
            for (int64_t i_45355 = 0; i_45355 < read_per_thread_45354;
                 i_45355++) {
                int64_t group_res_id_45356 = sext_i32_i64(local_tid_45336) *
                        read_per_thread_45354 + i_45355;
                int64_t index_of_group_res_45357 = group_res_id_45356;
                
                if (slt64(group_res_id_45356, num_groups_39224)) {
                    x_31162 = ((__global
                                int32_t *) group_res_arr_mem_45332)[index_of_group_res_45357 *
                                                                    segred_group_sizze_39222];
                    
                    int32_t defunc_1_op_res_31163;
                    
                    defunc_1_op_res_31163 = smax32(x_31161, x_31162);
                    x_31161 = defunc_1_op_res_31163;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336)] =
            x_31161;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45358;
            int32_t skip_waves_45359;
            
            skip_waves_45359 = 1;
            
            int32_t x_45346;
            int32_t x_45347;
            
            offset_45358 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45336,
                          sext_i64_i32(segred_group_sizze_39222))) {
                    x_45346 = ((__local
                                int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336 +
                                                              offset_45358)];
                }
            }
            offset_45358 = 1;
            while (slt32(offset_45358, wave_sizze_45338)) {
                if (slt32(local_tid_45336 + offset_45358,
                          sext_i64_i32(segred_group_sizze_39222)) &&
                    ((local_tid_45336 - squot32(local_tid_45336,
                                                wave_sizze_45338) *
                      wave_sizze_45338) & (2 * offset_45358 - 1)) == 0) {
                    // read array element
                    {
                        x_45347 = ((volatile __local
                                    int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336 +
                                                                  offset_45358)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45348 = smax32(x_45346,
                                                               x_45347);
                        
                        x_45346 = defunc_1_op_res_45348;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336)] =
                            x_45346;
                    }
                }
                offset_45358 *= 2;
            }
            while (slt32(skip_waves_45359,
                         squot32(sext_i64_i32(segred_group_sizze_39222) +
                                 wave_sizze_45338 - 1, wave_sizze_45338))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45358 = skip_waves_45359 * wave_sizze_45338;
                if (slt32(local_tid_45336 + offset_45358,
                          sext_i64_i32(segred_group_sizze_39222)) &&
                    ((local_tid_45336 - squot32(local_tid_45336,
                                                wave_sizze_45338) *
                      wave_sizze_45338) == 0 && (squot32(local_tid_45336,
                                                         wave_sizze_45338) &
                                                 (2 * skip_waves_45359 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45347 = ((__local
                                    int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336 +
                                                                  offset_45358)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45348 = smax32(x_45346,
                                                               x_45347);
                        
                        x_45346 = defunc_1_op_res_45348;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45342)[sext_i32_i64(local_tid_45336)] =
                            x_45346;
                    }
                }
                skip_waves_45359 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45336 == 0) {
                    ((__global int32_t *) mem_44027)[0] = x_45346;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39222
}
__kernel void mainzisegred_small_37133(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44685_backing_aligned_0,
                                       int64_t N_30803, int64_t m_30804,
                                       int64_t N_30805, int64_t i32_res_30817,
                                       int64_t i32_res_30823,
                                       int64_t num_groups_37272, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43526,
                                       __global unsigned char *mem_43531,
                                       int64_t segment_sizze_nonzzero_44678)
{
    #define segred_group_sizze_37271 (mainzisegred_group_sizze_37127)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44685_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44685_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44680;
    int32_t local_tid_44681;
    int64_t group_sizze_44684;
    int32_t wave_sizze_44683;
    int32_t group_tid_44682;
    
    global_tid_44680 = get_global_id(0);
    local_tid_44681 = get_local_id(0);
    group_sizze_44684 = get_local_size(0);
    wave_sizze_44683 = LOCKSTEP_WIDTH;
    group_tid_44682 = get_group_id(0);
    
    int32_t phys_tid_37133;
    
    phys_tid_37133 = global_tid_44680;
    
    __local char *red_arr_mem_44685;
    
    red_arr_mem_44685 = (__local char *) red_arr_mem_44685_backing_0;
    
    int32_t phys_group_id_44687;
    
    phys_group_id_44687 = get_group_id(0);
    for (int32_t i_44688 = 0; i_44688 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804 * i32_res_30823 *
                                          i32_res_30823,
                                          squot64(segred_group_sizze_37271,
                                                  segment_sizze_nonzzero_44678))) -
                   phys_group_id_44687, sext_i64_i32(num_groups_37272));
         i_44688++) {
        int32_t virt_group_id_44689 = phys_group_id_44687 + i_44688 *
                sext_i64_i32(num_groups_37272);
        int64_t gtid_37120 = squot64(squot64(sext_i32_i64(local_tid_44681),
                                             segment_sizze_nonzzero_44678) +
                                     sext_i32_i64(virt_group_id_44689) *
                                     squot64(segred_group_sizze_37271,
                                             segment_sizze_nonzzero_44678),
                                     i32_res_30823 * i32_res_30823);
        int64_t gtid_37121 = squot64(squot64(sext_i32_i64(local_tid_44681),
                                             segment_sizze_nonzzero_44678) +
                                     sext_i32_i64(virt_group_id_44689) *
                                     squot64(segred_group_sizze_37271,
                                             segment_sizze_nonzzero_44678) -
                                     squot64(squot64(sext_i32_i64(local_tid_44681),
                                                     segment_sizze_nonzzero_44678) +
                                             sext_i32_i64(virt_group_id_44689) *
                                             squot64(segred_group_sizze_37271,
                                                     segment_sizze_nonzzero_44678),
                                             i32_res_30823 * i32_res_30823) *
                                     (i32_res_30823 * i32_res_30823),
                                     i32_res_30823);
        int64_t gtid_37122 = squot64(sext_i32_i64(local_tid_44681),
                                     segment_sizze_nonzzero_44678) +
                sext_i32_i64(virt_group_id_44689) *
                squot64(segred_group_sizze_37271,
                        segment_sizze_nonzzero_44678) -
                squot64(squot64(sext_i32_i64(local_tid_44681),
                                segment_sizze_nonzzero_44678) +
                        sext_i32_i64(virt_group_id_44689) *
                        squot64(segred_group_sizze_37271,
                                segment_sizze_nonzzero_44678), i32_res_30823 *
                        i32_res_30823) * (i32_res_30823 * i32_res_30823) -
                squot64(squot64(sext_i32_i64(local_tid_44681),
                                segment_sizze_nonzzero_44678) +
                        sext_i32_i64(virt_group_id_44689) *
                        squot64(segred_group_sizze_37271,
                                segment_sizze_nonzzero_44678) -
                        squot64(squot64(sext_i32_i64(local_tid_44681),
                                        segment_sizze_nonzzero_44678) +
                                sext_i32_i64(virt_group_id_44689) *
                                squot64(segred_group_sizze_37271,
                                        segment_sizze_nonzzero_44678),
                                i32_res_30823 * i32_res_30823) *
                        (i32_res_30823 * i32_res_30823), i32_res_30823) *
                i32_res_30823;
        int64_t gtid_37132 = srem64(sext_i32_i64(local_tid_44681),
                                    i32_res_30817);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30817) && (((slt64(gtid_37120, m_30804) &&
                                              slt64(gtid_37121,
                                                    i32_res_30823)) &&
                                             slt64(gtid_37122,
                                                   i32_res_30823)) &&
                                            slt64(sext_i32_i64(local_tid_44681),
                                                  i32_res_30817 *
                                                  squot64(segred_group_sizze_37271,
                                                          segment_sizze_nonzzero_44678)))) {
                float x_37281 = ((__global
                                  float *) images_mem_43378)[gtid_37120 *
                                                             N_30805 +
                                                             gtid_37132];
                float x_37282 = ((__global
                                  float *) binop_p_mem_43387)[gtid_37121 *
                                                              N_30803 +
                                                              gtid_37132];
                float x_37283 = ((__global float *) mem_43526)[gtid_37122 *
                                                               N_30803 +
                                                               gtid_37132];
                float x_37284 = x_37282 * x_37283;
                bool isnan_res_37285;
                
                isnan_res_37285 = futrts_isnan32(x_37281);
                
                float y_37286;
                
                if (isnan_res_37285) {
                    y_37286 = 0.0F;
                } else {
                    y_37286 = 1.0F;
                }
                
                float defunc_2_f_res_37287 = x_37284 * y_37286;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)] =
                        defunc_2_f_res_37287;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30817)) {
            // perform segmented scan to imitate reduction
            {
                float x_37275;
                float x_37276;
                float x_44690;
                float x_44691;
                bool ltid_in_bounds_44693;
                
                ltid_in_bounds_44693 = slt64(sext_i32_i64(local_tid_44681),
                                             i32_res_30817 *
                                             squot64(segred_group_sizze_37271,
                                                     segment_sizze_nonzzero_44678));
                
                int32_t skip_threads_44694;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44693) {
                        x_37276 = ((volatile __local
                                    float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)];
                        if ((local_tid_44681 - squot32(local_tid_44681, 32) *
                             32) == 0) {
                            x_37275 = x_37276;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44694 = 1;
                    while (slt32(skip_threads_44694, 32)) {
                        if (sle32(skip_threads_44694, local_tid_44681 -
                                  squot32(local_tid_44681, 32) * 32) &&
                            ltid_in_bounds_44693) {
                            // read operands
                            {
                                x_37275 = ((volatile __local
                                            float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681) -
                                                                        sext_i32_i64(skip_threads_44694)];
                            }
                            // perform operation
                            {
                                bool inactive_44695 =
                                     slt64(srem64(sext_i32_i64(local_tid_44681),
                                                  i32_res_30817),
                                           sext_i32_i64(local_tid_44681) -
                                           sext_i32_i64(local_tid_44681 -
                                           skip_threads_44694));
                                
                                if (inactive_44695) {
                                    x_37275 = x_37276;
                                }
                                if (!inactive_44695) {
                                    float defunc_1_op_res_37277 = x_37275 +
                                          x_37276;
                                    
                                    x_37275 = defunc_1_op_res_37277;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44683, skip_threads_44694)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44694, local_tid_44681 -
                                  squot32(local_tid_44681, 32) * 32) &&
                            ltid_in_bounds_44693) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)] =
                                    x_37275;
                                x_37276 = x_37275;
                            }
                        }
                        if (sle32(wave_sizze_44683, skip_threads_44694)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44694 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44681 - squot32(local_tid_44681, 32) * 32) ==
                        31 && ltid_in_bounds_44693) {
                        ((volatile __local
                          float *) red_arr_mem_44685)[sext_i32_i64(squot32(local_tid_44681,
                                                                           32))] =
                            x_37275;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44696;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44681, 32) == 0 &&
                            ltid_in_bounds_44693) {
                            x_44691 = ((volatile __local
                                        float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)];
                            if ((local_tid_44681 - squot32(local_tid_44681,
                                                           32) * 32) == 0) {
                                x_44690 = x_44691;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44696 = 1;
                        while (slt32(skip_threads_44696, 32)) {
                            if (sle32(skip_threads_44696, local_tid_44681 -
                                      squot32(local_tid_44681, 32) * 32) &&
                                (squot32(local_tid_44681, 32) == 0 &&
                                 ltid_in_bounds_44693)) {
                                // read operands
                                {
                                    x_44690 = ((volatile __local
                                                float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681) -
                                                                            sext_i32_i64(skip_threads_44696)];
                                }
                                // perform operation
                                {
                                    bool inactive_44697 =
                                         slt64(srem64(sext_i32_i64(local_tid_44681 *
                                                      32 + 32 - 1),
                                                      i32_res_30817),
                                               sext_i32_i64(local_tid_44681 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44681 -
                                                             skip_threads_44696) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44697) {
                                        x_44690 = x_44691;
                                    }
                                    if (!inactive_44697) {
                                        float defunc_1_op_res_44692 = x_44690 +
                                              x_44691;
                                        
                                        x_44690 = defunc_1_op_res_44692;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44683, skip_threads_44696)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44696, local_tid_44681 -
                                      squot32(local_tid_44681, 32) * 32) &&
                                (squot32(local_tid_44681, 32) == 0 &&
                                 ltid_in_bounds_44693)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)] =
                                        x_44690;
                                    x_44691 = x_44690;
                                }
                            }
                            if (sle32(wave_sizze_44683, skip_threads_44696)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44696 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44681, 32) == 0 ||
                          !ltid_in_bounds_44693)) {
                        // read operands
                        {
                            x_37276 = x_37275;
                            x_37275 = ((__local
                                        float *) red_arr_mem_44685)[sext_i32_i64(squot32(local_tid_44681,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44698 =
                                 slt64(srem64(sext_i32_i64(local_tid_44681),
                                              i32_res_30817),
                                       sext_i32_i64(local_tid_44681) -
                                       sext_i32_i64(squot32(local_tid_44681,
                                                            32) * 32 - 1));
                            
                            if (inactive_44698) {
                                x_37275 = x_37276;
                            }
                            if (!inactive_44698) {
                                float defunc_1_op_res_37277 = x_37275 + x_37276;
                                
                                x_37275 = defunc_1_op_res_37277;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)] =
                                x_37275;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44681, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44685)[sext_i32_i64(local_tid_44681)] =
                            x_37276;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44689) *
                      squot64(segred_group_sizze_37271,
                              segment_sizze_nonzzero_44678) +
                      sext_i32_i64(local_tid_44681), m_30804 * i32_res_30823 *
                      i32_res_30823) && slt64(sext_i32_i64(local_tid_44681),
                                              squot64(segred_group_sizze_37271,
                                                      segment_sizze_nonzzero_44678))) {
                ((__global
                  float *) mem_43531)[squot64(sext_i32_i64(virt_group_id_44689) *
                                              squot64(segred_group_sizze_37271,
                                                      segment_sizze_nonzzero_44678) +
                                              sext_i32_i64(local_tid_44681),
                                              i32_res_30823 * i32_res_30823) *
                                      (i32_res_30823 * i32_res_30823) +
                                      squot64(sext_i32_i64(virt_group_id_44689) *
                                              squot64(segred_group_sizze_37271,
                                                      segment_sizze_nonzzero_44678) +
                                              sext_i32_i64(local_tid_44681) -
                                              squot64(sext_i32_i64(virt_group_id_44689) *
                                                      squot64(segred_group_sizze_37271,
                                                              segment_sizze_nonzzero_44678) +
                                                      sext_i32_i64(local_tid_44681),
                                                      i32_res_30823 *
                                                      i32_res_30823) *
                                              (i32_res_30823 * i32_res_30823),
                                              i32_res_30823) * i32_res_30823 +
                                      (sext_i32_i64(virt_group_id_44689) *
                                       squot64(segred_group_sizze_37271,
                                               segment_sizze_nonzzero_44678) +
                                       sext_i32_i64(local_tid_44681) -
                                       squot64(sext_i32_i64(virt_group_id_44689) *
                                               squot64(segred_group_sizze_37271,
                                                       segment_sizze_nonzzero_44678) +
                                               sext_i32_i64(local_tid_44681),
                                               i32_res_30823 * i32_res_30823) *
                                       (i32_res_30823 * i32_res_30823) -
                                       squot64(sext_i32_i64(virt_group_id_44689) *
                                               squot64(segred_group_sizze_37271,
                                                       segment_sizze_nonzzero_44678) +
                                               sext_i32_i64(local_tid_44681) -
                                               squot64(sext_i32_i64(virt_group_id_44689) *
                                                       squot64(segred_group_sizze_37271,
                                                               segment_sizze_nonzzero_44678) +
                                                       sext_i32_i64(local_tid_44681),
                                                       i32_res_30823 *
                                                       i32_res_30823) *
                                               (i32_res_30823 * i32_res_30823),
                                               i32_res_30823) *
                                       i32_res_30823)] = ((__local
                                                           float *) red_arr_mem_44685)[(sext_i32_i64(local_tid_44681) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44678 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37271
}
__kernel void mainzisegred_small_38306(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44839_backing_aligned_0,
                                       int64_t N_30803, int64_t m_30804,
                                       int64_t N_30805, int64_t i32_res_30817,
                                       int64_t i32_res_30823,
                                       int64_t num_groups_38359, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43712,
                                       int64_t segment_sizze_nonzzero_44832)
{
    #define segred_group_sizze_38358 (mainzisegred_group_sizze_38300)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44839_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44839_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44834;
    int32_t local_tid_44835;
    int64_t group_sizze_44838;
    int32_t wave_sizze_44837;
    int32_t group_tid_44836;
    
    global_tid_44834 = get_global_id(0);
    local_tid_44835 = get_local_id(0);
    group_sizze_44838 = get_local_size(0);
    wave_sizze_44837 = LOCKSTEP_WIDTH;
    group_tid_44836 = get_group_id(0);
    
    int32_t phys_tid_38306;
    
    phys_tid_38306 = global_tid_44834;
    
    __local char *red_arr_mem_44839;
    
    red_arr_mem_44839 = (__local char *) red_arr_mem_44839_backing_0;
    
    int32_t phys_group_id_44841;
    
    phys_group_id_44841 = get_group_id(0);
    for (int32_t i_44842 = 0; i_44842 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804 * i32_res_30823,
                                          squot64(segred_group_sizze_38358,
                                                  segment_sizze_nonzzero_44832))) -
                   phys_group_id_44841, sext_i64_i32(num_groups_38359));
         i_44842++) {
        int32_t virt_group_id_44843 = phys_group_id_44841 + i_44842 *
                sext_i64_i32(num_groups_38359);
        int64_t gtid_38295 = squot64(squot64(sext_i32_i64(local_tid_44835),
                                             segment_sizze_nonzzero_44832) +
                                     sext_i32_i64(virt_group_id_44843) *
                                     squot64(segred_group_sizze_38358,
                                             segment_sizze_nonzzero_44832),
                                     i32_res_30823);
        int64_t gtid_38296 = squot64(sext_i32_i64(local_tid_44835),
                                     segment_sizze_nonzzero_44832) +
                sext_i32_i64(virt_group_id_44843) *
                squot64(segred_group_sizze_38358,
                        segment_sizze_nonzzero_44832) -
                squot64(squot64(sext_i32_i64(local_tid_44835),
                                segment_sizze_nonzzero_44832) +
                        sext_i32_i64(virt_group_id_44843) *
                        squot64(segred_group_sizze_38358,
                                segment_sizze_nonzzero_44832), i32_res_30823) *
                i32_res_30823;
        int64_t gtid_38305 = srem64(sext_i32_i64(local_tid_44835),
                                    i32_res_30817);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30817) && ((slt64(gtid_38295, m_30804) &&
                                             slt64(gtid_38296,
                                                   i32_res_30823)) &&
                                            slt64(sext_i32_i64(local_tid_44835),
                                                  i32_res_30817 *
                                                  squot64(segred_group_sizze_38358,
                                                          segment_sizze_nonzzero_44832)))) {
                float x_38368 = ((__global
                                  float *) images_mem_43378)[gtid_38295 *
                                                             N_30805 +
                                                             gtid_38305];
                bool isnan_res_38369;
                
                isnan_res_38369 = futrts_isnan32(x_38368);
                
                float defunc_1_f_res_38370;
                
                if (isnan_res_38369) {
                    defunc_1_f_res_38370 = 0.0F;
                } else {
                    float x_38367 = ((__global
                                      float *) binop_p_mem_43387)[gtid_38296 *
                                                                  N_30803 +
                                                                  gtid_38305];
                    float defunc_1_f_res_f_res_38371 = x_38367 * x_38368;
                    
                    defunc_1_f_res_38370 = defunc_1_f_res_f_res_38371;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)] =
                        defunc_1_f_res_38370;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30817)) {
            // perform segmented scan to imitate reduction
            {
                float x_38362;
                float x_38363;
                float x_44844;
                float x_44845;
                bool ltid_in_bounds_44847;
                
                ltid_in_bounds_44847 = slt64(sext_i32_i64(local_tid_44835),
                                             i32_res_30817 *
                                             squot64(segred_group_sizze_38358,
                                                     segment_sizze_nonzzero_44832));
                
                int32_t skip_threads_44848;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44847) {
                        x_38363 = ((volatile __local
                                    float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)];
                        if ((local_tid_44835 - squot32(local_tid_44835, 32) *
                             32) == 0) {
                            x_38362 = x_38363;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44848 = 1;
                    while (slt32(skip_threads_44848, 32)) {
                        if (sle32(skip_threads_44848, local_tid_44835 -
                                  squot32(local_tid_44835, 32) * 32) &&
                            ltid_in_bounds_44847) {
                            // read operands
                            {
                                x_38362 = ((volatile __local
                                            float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835) -
                                                                        sext_i32_i64(skip_threads_44848)];
                            }
                            // perform operation
                            {
                                bool inactive_44849 =
                                     slt64(srem64(sext_i32_i64(local_tid_44835),
                                                  i32_res_30817),
                                           sext_i32_i64(local_tid_44835) -
                                           sext_i32_i64(local_tid_44835 -
                                           skip_threads_44848));
                                
                                if (inactive_44849) {
                                    x_38362 = x_38363;
                                }
                                if (!inactive_44849) {
                                    float defunc_1_op_res_38364 = x_38362 +
                                          x_38363;
                                    
                                    x_38362 = defunc_1_op_res_38364;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44837, skip_threads_44848)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44848, local_tid_44835 -
                                  squot32(local_tid_44835, 32) * 32) &&
                            ltid_in_bounds_44847) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)] =
                                    x_38362;
                                x_38363 = x_38362;
                            }
                        }
                        if (sle32(wave_sizze_44837, skip_threads_44848)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44848 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44835 - squot32(local_tid_44835, 32) * 32) ==
                        31 && ltid_in_bounds_44847) {
                        ((volatile __local
                          float *) red_arr_mem_44839)[sext_i32_i64(squot32(local_tid_44835,
                                                                           32))] =
                            x_38362;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44850;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44835, 32) == 0 &&
                            ltid_in_bounds_44847) {
                            x_44845 = ((volatile __local
                                        float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)];
                            if ((local_tid_44835 - squot32(local_tid_44835,
                                                           32) * 32) == 0) {
                                x_44844 = x_44845;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44850 = 1;
                        while (slt32(skip_threads_44850, 32)) {
                            if (sle32(skip_threads_44850, local_tid_44835 -
                                      squot32(local_tid_44835, 32) * 32) &&
                                (squot32(local_tid_44835, 32) == 0 &&
                                 ltid_in_bounds_44847)) {
                                // read operands
                                {
                                    x_44844 = ((volatile __local
                                                float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835) -
                                                                            sext_i32_i64(skip_threads_44850)];
                                }
                                // perform operation
                                {
                                    bool inactive_44851 =
                                         slt64(srem64(sext_i32_i64(local_tid_44835 *
                                                      32 + 32 - 1),
                                                      i32_res_30817),
                                               sext_i32_i64(local_tid_44835 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44835 -
                                                             skip_threads_44850) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44851) {
                                        x_44844 = x_44845;
                                    }
                                    if (!inactive_44851) {
                                        float defunc_1_op_res_44846 = x_44844 +
                                              x_44845;
                                        
                                        x_44844 = defunc_1_op_res_44846;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44837, skip_threads_44850)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44850, local_tid_44835 -
                                      squot32(local_tid_44835, 32) * 32) &&
                                (squot32(local_tid_44835, 32) == 0 &&
                                 ltid_in_bounds_44847)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)] =
                                        x_44844;
                                    x_44845 = x_44844;
                                }
                            }
                            if (sle32(wave_sizze_44837, skip_threads_44850)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44850 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44835, 32) == 0 ||
                          !ltid_in_bounds_44847)) {
                        // read operands
                        {
                            x_38363 = x_38362;
                            x_38362 = ((__local
                                        float *) red_arr_mem_44839)[sext_i32_i64(squot32(local_tid_44835,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44852 =
                                 slt64(srem64(sext_i32_i64(local_tid_44835),
                                              i32_res_30817),
                                       sext_i32_i64(local_tid_44835) -
                                       sext_i32_i64(squot32(local_tid_44835,
                                                            32) * 32 - 1));
                            
                            if (inactive_44852) {
                                x_38362 = x_38363;
                            }
                            if (!inactive_44852) {
                                float defunc_1_op_res_38364 = x_38362 + x_38363;
                                
                                x_38362 = defunc_1_op_res_38364;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)] =
                                x_38362;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44835, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44839)[sext_i32_i64(local_tid_44835)] =
                            x_38363;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44843) *
                      squot64(segred_group_sizze_38358,
                              segment_sizze_nonzzero_44832) +
                      sext_i32_i64(local_tid_44835), m_30804 * i32_res_30823) &&
                slt64(sext_i32_i64(local_tid_44835),
                      squot64(segred_group_sizze_38358,
                              segment_sizze_nonzzero_44832))) {
                ((__global
                  float *) mem_43712)[squot64(sext_i32_i64(virt_group_id_44843) *
                                              squot64(segred_group_sizze_38358,
                                                      segment_sizze_nonzzero_44832) +
                                              sext_i32_i64(local_tid_44835),
                                              i32_res_30823) * i32_res_30823 +
                                      (sext_i32_i64(virt_group_id_44843) *
                                       squot64(segred_group_sizze_38358,
                                               segment_sizze_nonzzero_44832) +
                                       sext_i32_i64(local_tid_44835) -
                                       squot64(sext_i32_i64(virt_group_id_44843) *
                                               squot64(segred_group_sizze_38358,
                                                       segment_sizze_nonzzero_44832) +
                                               sext_i32_i64(local_tid_44835),
                                               i32_res_30823) *
                                       i32_res_30823)] = ((__local
                                                           float *) red_arr_mem_44839)[(sext_i32_i64(local_tid_44835) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44832 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38358
}
__kernel void mainzisegred_small_38443(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44927_backing_aligned_0,
                                       int64_t m_30804, int64_t i32_res_30823,
                                       int64_t num_groups_38492, __global
                                       unsigned char *defunc_3_map_res_mem_43627,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43718,
                                       __global unsigned char *mem_43805,
                                       int64_t segment_sizze_nonzzero_44920)
{
    #define segred_group_sizze_38491 (mainzisegred_group_sizze_38437)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44927_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44927_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44922;
    int32_t local_tid_44923;
    int64_t group_sizze_44926;
    int32_t wave_sizze_44925;
    int32_t group_tid_44924;
    
    global_tid_44922 = get_global_id(0);
    local_tid_44923 = get_local_id(0);
    group_sizze_44926 = get_local_size(0);
    wave_sizze_44925 = LOCKSTEP_WIDTH;
    group_tid_44924 = get_group_id(0);
    
    int32_t phys_tid_38443;
    
    phys_tid_38443 = global_tid_44922;
    
    __local char *red_arr_mem_44927;
    
    red_arr_mem_44927 = (__local char *) red_arr_mem_44927_backing_0;
    
    int32_t phys_group_id_44929;
    
    phys_group_id_44929 = get_group_id(0);
    for (int32_t i_44930 = 0; i_44930 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804 * i32_res_30823,
                                          squot64(segred_group_sizze_38491,
                                                  segment_sizze_nonzzero_44920))) -
                   phys_group_id_44929, sext_i64_i32(num_groups_38492));
         i_44930++) {
        int32_t virt_group_id_44931 = phys_group_id_44929 + i_44930 *
                sext_i64_i32(num_groups_38492);
        int64_t gtid_38432 = squot64(squot64(sext_i32_i64(local_tid_44923),
                                             segment_sizze_nonzzero_44920) +
                                     sext_i32_i64(virt_group_id_44931) *
                                     squot64(segred_group_sizze_38491,
                                             segment_sizze_nonzzero_44920),
                                     i32_res_30823);
        int64_t gtid_38433 = squot64(sext_i32_i64(local_tid_44923),
                                     segment_sizze_nonzzero_44920) +
                sext_i32_i64(virt_group_id_44931) *
                squot64(segred_group_sizze_38491,
                        segment_sizze_nonzzero_44920) -
                squot64(squot64(sext_i32_i64(local_tid_44923),
                                segment_sizze_nonzzero_44920) +
                        sext_i32_i64(virt_group_id_44931) *
                        squot64(segred_group_sizze_38491,
                                segment_sizze_nonzzero_44920), i32_res_30823) *
                i32_res_30823;
        int64_t gtid_38442 = srem64(sext_i32_i64(local_tid_44923),
                                    i32_res_30823);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30823) && ((slt64(gtid_38432, m_30804) &&
                                             slt64(gtid_38433,
                                                   i32_res_30823)) &&
                                            slt64(sext_i32_i64(local_tid_44923),
                                                  i32_res_30823 *
                                                  squot64(segred_group_sizze_38491,
                                                          segment_sizze_nonzzero_44920)))) {
                float x_38501 = ((__global
                                  float *) defunc_3_map_res_mem_43718)[gtid_38432 *
                                                                       i32_res_30823 +
                                                                       gtid_38442];
                float x_38502 = ((__global
                                  float *) defunc_3_map_res_mem_43627)[gtid_38432 *
                                                                       (i32_res_30823 *
                                                                        i32_res_30823) +
                                                                       gtid_38433 *
                                                                       i32_res_30823 +
                                                                       gtid_38442];
                float defunc_1_f_res_38503 = x_38501 * x_38502;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)] =
                        defunc_1_f_res_38503;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30823)) {
            // perform segmented scan to imitate reduction
            {
                float x_38495;
                float x_38496;
                float x_44932;
                float x_44933;
                bool ltid_in_bounds_44935;
                
                ltid_in_bounds_44935 = slt64(sext_i32_i64(local_tid_44923),
                                             i32_res_30823 *
                                             squot64(segred_group_sizze_38491,
                                                     segment_sizze_nonzzero_44920));
                
                int32_t skip_threads_44936;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44935) {
                        x_38496 = ((volatile __local
                                    float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)];
                        if ((local_tid_44923 - squot32(local_tid_44923, 32) *
                             32) == 0) {
                            x_38495 = x_38496;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44936 = 1;
                    while (slt32(skip_threads_44936, 32)) {
                        if (sle32(skip_threads_44936, local_tid_44923 -
                                  squot32(local_tid_44923, 32) * 32) &&
                            ltid_in_bounds_44935) {
                            // read operands
                            {
                                x_38495 = ((volatile __local
                                            float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923) -
                                                                        sext_i32_i64(skip_threads_44936)];
                            }
                            // perform operation
                            {
                                bool inactive_44937 =
                                     slt64(srem64(sext_i32_i64(local_tid_44923),
                                                  i32_res_30823),
                                           sext_i32_i64(local_tid_44923) -
                                           sext_i32_i64(local_tid_44923 -
                                           skip_threads_44936));
                                
                                if (inactive_44937) {
                                    x_38495 = x_38496;
                                }
                                if (!inactive_44937) {
                                    float defunc_1_op_res_38497 = x_38495 +
                                          x_38496;
                                    
                                    x_38495 = defunc_1_op_res_38497;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44925, skip_threads_44936)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44936, local_tid_44923 -
                                  squot32(local_tid_44923, 32) * 32) &&
                            ltid_in_bounds_44935) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)] =
                                    x_38495;
                                x_38496 = x_38495;
                            }
                        }
                        if (sle32(wave_sizze_44925, skip_threads_44936)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44936 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44923 - squot32(local_tid_44923, 32) * 32) ==
                        31 && ltid_in_bounds_44935) {
                        ((volatile __local
                          float *) red_arr_mem_44927)[sext_i32_i64(squot32(local_tid_44923,
                                                                           32))] =
                            x_38495;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44938;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44923, 32) == 0 &&
                            ltid_in_bounds_44935) {
                            x_44933 = ((volatile __local
                                        float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)];
                            if ((local_tid_44923 - squot32(local_tid_44923,
                                                           32) * 32) == 0) {
                                x_44932 = x_44933;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44938 = 1;
                        while (slt32(skip_threads_44938, 32)) {
                            if (sle32(skip_threads_44938, local_tid_44923 -
                                      squot32(local_tid_44923, 32) * 32) &&
                                (squot32(local_tid_44923, 32) == 0 &&
                                 ltid_in_bounds_44935)) {
                                // read operands
                                {
                                    x_44932 = ((volatile __local
                                                float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923) -
                                                                            sext_i32_i64(skip_threads_44938)];
                                }
                                // perform operation
                                {
                                    bool inactive_44939 =
                                         slt64(srem64(sext_i32_i64(local_tid_44923 *
                                                      32 + 32 - 1),
                                                      i32_res_30823),
                                               sext_i32_i64(local_tid_44923 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44923 -
                                                             skip_threads_44938) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44939) {
                                        x_44932 = x_44933;
                                    }
                                    if (!inactive_44939) {
                                        float defunc_1_op_res_44934 = x_44932 +
                                              x_44933;
                                        
                                        x_44932 = defunc_1_op_res_44934;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44925, skip_threads_44938)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44938, local_tid_44923 -
                                      squot32(local_tid_44923, 32) * 32) &&
                                (squot32(local_tid_44923, 32) == 0 &&
                                 ltid_in_bounds_44935)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)] =
                                        x_44932;
                                    x_44933 = x_44932;
                                }
                            }
                            if (sle32(wave_sizze_44925, skip_threads_44938)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44938 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44923, 32) == 0 ||
                          !ltid_in_bounds_44935)) {
                        // read operands
                        {
                            x_38496 = x_38495;
                            x_38495 = ((__local
                                        float *) red_arr_mem_44927)[sext_i32_i64(squot32(local_tid_44923,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44940 =
                                 slt64(srem64(sext_i32_i64(local_tid_44923),
                                              i32_res_30823),
                                       sext_i32_i64(local_tid_44923) -
                                       sext_i32_i64(squot32(local_tid_44923,
                                                            32) * 32 - 1));
                            
                            if (inactive_44940) {
                                x_38495 = x_38496;
                            }
                            if (!inactive_44940) {
                                float defunc_1_op_res_38497 = x_38495 + x_38496;
                                
                                x_38495 = defunc_1_op_res_38497;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)] =
                                x_38495;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44923, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44927)[sext_i32_i64(local_tid_44923)] =
                            x_38496;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44931) *
                      squot64(segred_group_sizze_38491,
                              segment_sizze_nonzzero_44920) +
                      sext_i32_i64(local_tid_44923), m_30804 * i32_res_30823) &&
                slt64(sext_i32_i64(local_tid_44923),
                      squot64(segred_group_sizze_38491,
                              segment_sizze_nonzzero_44920))) {
                ((__global
                  float *) mem_43805)[squot64(sext_i32_i64(virt_group_id_44931) *
                                              squot64(segred_group_sizze_38491,
                                                      segment_sizze_nonzzero_44920) +
                                              sext_i32_i64(local_tid_44923),
                                              i32_res_30823) * i32_res_30823 +
                                      (sext_i32_i64(virt_group_id_44931) *
                                       squot64(segred_group_sizze_38491,
                                               segment_sizze_nonzzero_44920) +
                                       sext_i32_i64(local_tid_44923) -
                                       squot64(sext_i32_i64(virt_group_id_44931) *
                                               squot64(segred_group_sizze_38491,
                                                       segment_sizze_nonzzero_44920) +
                                               sext_i32_i64(local_tid_44923),
                                               i32_res_30823) *
                                       i32_res_30823)] = ((__local
                                                           float *) red_arr_mem_44927)[(sext_i32_i64(local_tid_44923) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44920 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38491
}
__kernel void mainzisegred_small_38573(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45015_backing_aligned_0,
                                       int64_t N_30803, int64_t m_30804,
                                       int64_t i32_res_30823,
                                       int64_t num_groups_38620, __global
                                       unsigned char *mem_43394, __global
                                       unsigned char *defunc_4_map_res_mem_43811,
                                       __global unsigned char *mem_43899,
                                       int64_t segment_sizze_nonzzero_45008)
{
    #define segred_group_sizze_38619 (mainzisegred_group_sizze_38567)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45015_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45015_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45010;
    int32_t local_tid_45011;
    int64_t group_sizze_45014;
    int32_t wave_sizze_45013;
    int32_t group_tid_45012;
    
    global_tid_45010 = get_global_id(0);
    local_tid_45011 = get_local_id(0);
    group_sizze_45014 = get_local_size(0);
    wave_sizze_45013 = LOCKSTEP_WIDTH;
    group_tid_45012 = get_group_id(0);
    
    int32_t phys_tid_38573;
    
    phys_tid_38573 = global_tid_45010;
    
    __local char *red_arr_mem_45015;
    
    red_arr_mem_45015 = (__local char *) red_arr_mem_45015_backing_0;
    
    int32_t phys_group_id_45017;
    
    phys_group_id_45017 = get_group_id(0);
    for (int32_t i_45018 = 0; i_45018 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804 * N_30803,
                                          squot64(segred_group_sizze_38619,
                                                  segment_sizze_nonzzero_45008))) -
                   phys_group_id_45017, sext_i64_i32(num_groups_38620));
         i_45018++) {
        int32_t virt_group_id_45019 = phys_group_id_45017 + i_45018 *
                sext_i64_i32(num_groups_38620);
        int64_t gtid_38562 = squot64(squot64(sext_i32_i64(local_tid_45011),
                                             segment_sizze_nonzzero_45008) +
                                     sext_i32_i64(virt_group_id_45019) *
                                     squot64(segred_group_sizze_38619,
                                             segment_sizze_nonzzero_45008),
                                     N_30803);
        int64_t gtid_38563 = squot64(sext_i32_i64(local_tid_45011),
                                     segment_sizze_nonzzero_45008) +
                sext_i32_i64(virt_group_id_45019) *
                squot64(segred_group_sizze_38619,
                        segment_sizze_nonzzero_45008) -
                squot64(squot64(sext_i32_i64(local_tid_45011),
                                segment_sizze_nonzzero_45008) +
                        sext_i32_i64(virt_group_id_45019) *
                        squot64(segred_group_sizze_38619,
                                segment_sizze_nonzzero_45008), N_30803) *
                N_30803;
        int64_t gtid_38572 = srem64(sext_i32_i64(local_tid_45011),
                                    i32_res_30823);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30823) && ((slt64(gtid_38562, m_30804) &&
                                             slt64(gtid_38563, N_30803)) &&
                                            slt64(sext_i32_i64(local_tid_45011),
                                                  i32_res_30823 *
                                                  squot64(segred_group_sizze_38619,
                                                          segment_sizze_nonzzero_45008)))) {
                float x_38628 = ((__global
                                  float *) defunc_4_map_res_mem_43811)[gtid_38562 *
                                                                       i32_res_30823 +
                                                                       gtid_38572];
                float x_38629 = ((__global float *) mem_43394)[gtid_38563 *
                                                               i32_res_30823 +
                                                               gtid_38572];
                float defunc_1_f_res_38630 = x_38628 * x_38629;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)] =
                        defunc_1_f_res_38630;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30823)) {
            // perform segmented scan to imitate reduction
            {
                float x_38623;
                float x_38624;
                float x_45020;
                float x_45021;
                bool ltid_in_bounds_45023;
                
                ltid_in_bounds_45023 = slt64(sext_i32_i64(local_tid_45011),
                                             i32_res_30823 *
                                             squot64(segred_group_sizze_38619,
                                                     segment_sizze_nonzzero_45008));
                
                int32_t skip_threads_45024;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45023) {
                        x_38624 = ((volatile __local
                                    float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)];
                        if ((local_tid_45011 - squot32(local_tid_45011, 32) *
                             32) == 0) {
                            x_38623 = x_38624;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45024 = 1;
                    while (slt32(skip_threads_45024, 32)) {
                        if (sle32(skip_threads_45024, local_tid_45011 -
                                  squot32(local_tid_45011, 32) * 32) &&
                            ltid_in_bounds_45023) {
                            // read operands
                            {
                                x_38623 = ((volatile __local
                                            float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011) -
                                                                        sext_i32_i64(skip_threads_45024)];
                            }
                            // perform operation
                            {
                                bool inactive_45025 =
                                     slt64(srem64(sext_i32_i64(local_tid_45011),
                                                  i32_res_30823),
                                           sext_i32_i64(local_tid_45011) -
                                           sext_i32_i64(local_tid_45011 -
                                           skip_threads_45024));
                                
                                if (inactive_45025) {
                                    x_38623 = x_38624;
                                }
                                if (!inactive_45025) {
                                    float defunc_1_op_res_38625 = x_38623 +
                                          x_38624;
                                    
                                    x_38623 = defunc_1_op_res_38625;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45013, skip_threads_45024)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45024, local_tid_45011 -
                                  squot32(local_tid_45011, 32) * 32) &&
                            ltid_in_bounds_45023) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)] =
                                    x_38623;
                                x_38624 = x_38623;
                            }
                        }
                        if (sle32(wave_sizze_45013, skip_threads_45024)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45024 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45011 - squot32(local_tid_45011, 32) * 32) ==
                        31 && ltid_in_bounds_45023) {
                        ((volatile __local
                          float *) red_arr_mem_45015)[sext_i32_i64(squot32(local_tid_45011,
                                                                           32))] =
                            x_38623;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45026;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45011, 32) == 0 &&
                            ltid_in_bounds_45023) {
                            x_45021 = ((volatile __local
                                        float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)];
                            if ((local_tid_45011 - squot32(local_tid_45011,
                                                           32) * 32) == 0) {
                                x_45020 = x_45021;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45026 = 1;
                        while (slt32(skip_threads_45026, 32)) {
                            if (sle32(skip_threads_45026, local_tid_45011 -
                                      squot32(local_tid_45011, 32) * 32) &&
                                (squot32(local_tid_45011, 32) == 0 &&
                                 ltid_in_bounds_45023)) {
                                // read operands
                                {
                                    x_45020 = ((volatile __local
                                                float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011) -
                                                                            sext_i32_i64(skip_threads_45026)];
                                }
                                // perform operation
                                {
                                    bool inactive_45027 =
                                         slt64(srem64(sext_i32_i64(local_tid_45011 *
                                                      32 + 32 - 1),
                                                      i32_res_30823),
                                               sext_i32_i64(local_tid_45011 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45011 -
                                                             skip_threads_45026) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45027) {
                                        x_45020 = x_45021;
                                    }
                                    if (!inactive_45027) {
                                        float defunc_1_op_res_45022 = x_45020 +
                                              x_45021;
                                        
                                        x_45020 = defunc_1_op_res_45022;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45013, skip_threads_45026)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45026, local_tid_45011 -
                                      squot32(local_tid_45011, 32) * 32) &&
                                (squot32(local_tid_45011, 32) == 0 &&
                                 ltid_in_bounds_45023)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)] =
                                        x_45020;
                                    x_45021 = x_45020;
                                }
                            }
                            if (sle32(wave_sizze_45013, skip_threads_45026)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45026 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45011, 32) == 0 ||
                          !ltid_in_bounds_45023)) {
                        // read operands
                        {
                            x_38624 = x_38623;
                            x_38623 = ((__local
                                        float *) red_arr_mem_45015)[sext_i32_i64(squot32(local_tid_45011,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45028 =
                                 slt64(srem64(sext_i32_i64(local_tid_45011),
                                              i32_res_30823),
                                       sext_i32_i64(local_tid_45011) -
                                       sext_i32_i64(squot32(local_tid_45011,
                                                            32) * 32 - 1));
                            
                            if (inactive_45028) {
                                x_38623 = x_38624;
                            }
                            if (!inactive_45028) {
                                float defunc_1_op_res_38625 = x_38623 + x_38624;
                                
                                x_38623 = defunc_1_op_res_38625;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)] =
                                x_38623;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45011, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45015)[sext_i32_i64(local_tid_45011)] =
                            x_38624;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45019) *
                      squot64(segred_group_sizze_38619,
                              segment_sizze_nonzzero_45008) +
                      sext_i32_i64(local_tid_45011), m_30804 * N_30803) &&
                slt64(sext_i32_i64(local_tid_45011),
                      squot64(segred_group_sizze_38619,
                              segment_sizze_nonzzero_45008))) {
                ((__global
                  float *) mem_43899)[squot64(sext_i32_i64(virt_group_id_45019) *
                                              squot64(segred_group_sizze_38619,
                                                      segment_sizze_nonzzero_45008) +
                                              sext_i32_i64(local_tid_45011),
                                              N_30803) * N_30803 +
                                      (sext_i32_i64(virt_group_id_45019) *
                                       squot64(segred_group_sizze_38619,
                                               segment_sizze_nonzzero_45008) +
                                       sext_i32_i64(local_tid_45011) -
                                       squot64(sext_i32_i64(virt_group_id_45019) *
                                               squot64(segred_group_sizze_38619,
                                                       segment_sizze_nonzzero_45008) +
                                               sext_i32_i64(local_tid_45011),
                                               N_30803) * N_30803)] = ((__local
                                                                        float *) red_arr_mem_45015)[(sext_i32_i64(local_tid_45011) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_45008 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38619
}
__kernel void mainzisegred_small_39139(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45269_backing_aligned_0,
                                       int64_t N_30803, int64_t m_30804,
                                       int64_t i32_res_30817,
                                       int64_t num_groups_39186, __global
                                       unsigned char *defunc_4_map_res_mem_43943,
                                       __global unsigned char *mem_44010,
                                       __global unsigned char *mem_44013,
                                       int64_t segment_sizze_nonzzero_45262)
{
    #define segred_group_sizze_39185 (mainzisegred_group_sizze_39133)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45269_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45269_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45264;
    int32_t local_tid_45265;
    int64_t group_sizze_45268;
    int32_t wave_sizze_45267;
    int32_t group_tid_45266;
    
    global_tid_45264 = get_global_id(0);
    local_tid_45265 = get_local_id(0);
    group_sizze_45268 = get_local_size(0);
    wave_sizze_45267 = LOCKSTEP_WIDTH;
    group_tid_45266 = get_group_id(0);
    
    int32_t phys_tid_39139;
    
    phys_tid_39139 = global_tid_45264;
    
    __local char *red_arr_mem_45269;
    
    red_arr_mem_45269 = (__local char *) red_arr_mem_45269_backing_0;
    
    int32_t phys_group_id_45271;
    
    phys_group_id_45271 = get_group_id(0);
    for (int32_t i_45272 = 0; i_45272 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804,
                                          squot64(segred_group_sizze_39185,
                                                  segment_sizze_nonzzero_45262))) -
                   phys_group_id_45271, sext_i64_i32(num_groups_39186));
         i_45272++) {
        int32_t virt_group_id_45273 = phys_group_id_45271 + i_45272 *
                sext_i64_i32(num_groups_39186);
        int64_t gtid_39130 = squot64(sext_i32_i64(local_tid_45265),
                                     segment_sizze_nonzzero_45262) +
                sext_i32_i64(virt_group_id_45273) *
                squot64(segred_group_sizze_39185, segment_sizze_nonzzero_45262);
        int64_t gtid_39138 = srem64(sext_i32_i64(local_tid_45265),
                                    i32_res_30817);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30817) && (slt64(gtid_39130, m_30804) &&
                                            slt64(sext_i32_i64(local_tid_45265),
                                                  i32_res_30817 *
                                                  squot64(segred_group_sizze_39185,
                                                          segment_sizze_nonzzero_45262)))) {
                int32_t defunc_0_f_res_39193 = ((__global
                                                 int32_t *) mem_44010)[gtid_39130];
                int32_t index_primexp_41456 = sext_i64_i32(gtid_39138);
                bool cond_39195 = slt32(index_primexp_41456,
                                        defunc_0_f_res_39193);
                float defunc_0_f_res_39196;
                
                if (cond_39195) {
                    int64_t i_39197 = sext_i32_i64(index_primexp_41456);
                    float defunc_0_f_res_t_res_39198 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_39130 *
                                                                                              N_30803 +
                                                                                              i_39197];
                    
                    defunc_0_f_res_39196 = defunc_0_f_res_t_res_39198;
                } else {
                    defunc_0_f_res_39196 = 0.0F;
                }
                
                float defunc_0_f_res_39199 = defunc_0_f_res_39196 *
                      defunc_0_f_res_39196;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)] =
                        defunc_0_f_res_39199;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30817)) {
            // perform segmented scan to imitate reduction
            {
                float x_39189;
                float x_39190;
                float x_45274;
                float x_45275;
                bool ltid_in_bounds_45277;
                
                ltid_in_bounds_45277 = slt64(sext_i32_i64(local_tid_45265),
                                             i32_res_30817 *
                                             squot64(segred_group_sizze_39185,
                                                     segment_sizze_nonzzero_45262));
                
                int32_t skip_threads_45278;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45277) {
                        x_39190 = ((volatile __local
                                    float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)];
                        if ((local_tid_45265 - squot32(local_tid_45265, 32) *
                             32) == 0) {
                            x_39189 = x_39190;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45278 = 1;
                    while (slt32(skip_threads_45278, 32)) {
                        if (sle32(skip_threads_45278, local_tid_45265 -
                                  squot32(local_tid_45265, 32) * 32) &&
                            ltid_in_bounds_45277) {
                            // read operands
                            {
                                x_39189 = ((volatile __local
                                            float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265) -
                                                                        sext_i32_i64(skip_threads_45278)];
                            }
                            // perform operation
                            {
                                bool inactive_45279 =
                                     slt64(srem64(sext_i32_i64(local_tid_45265),
                                                  i32_res_30817),
                                           sext_i32_i64(local_tid_45265) -
                                           sext_i32_i64(local_tid_45265 -
                                           skip_threads_45278));
                                
                                if (inactive_45279) {
                                    x_39189 = x_39190;
                                }
                                if (!inactive_45279) {
                                    float defunc_1_op_res_39191 = x_39189 +
                                          x_39190;
                                    
                                    x_39189 = defunc_1_op_res_39191;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45267, skip_threads_45278)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45278, local_tid_45265 -
                                  squot32(local_tid_45265, 32) * 32) &&
                            ltid_in_bounds_45277) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)] =
                                    x_39189;
                                x_39190 = x_39189;
                            }
                        }
                        if (sle32(wave_sizze_45267, skip_threads_45278)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45278 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45265 - squot32(local_tid_45265, 32) * 32) ==
                        31 && ltid_in_bounds_45277) {
                        ((volatile __local
                          float *) red_arr_mem_45269)[sext_i32_i64(squot32(local_tid_45265,
                                                                           32))] =
                            x_39189;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45280;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45265, 32) == 0 &&
                            ltid_in_bounds_45277) {
                            x_45275 = ((volatile __local
                                        float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)];
                            if ((local_tid_45265 - squot32(local_tid_45265,
                                                           32) * 32) == 0) {
                                x_45274 = x_45275;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45280 = 1;
                        while (slt32(skip_threads_45280, 32)) {
                            if (sle32(skip_threads_45280, local_tid_45265 -
                                      squot32(local_tid_45265, 32) * 32) &&
                                (squot32(local_tid_45265, 32) == 0 &&
                                 ltid_in_bounds_45277)) {
                                // read operands
                                {
                                    x_45274 = ((volatile __local
                                                float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265) -
                                                                            sext_i32_i64(skip_threads_45280)];
                                }
                                // perform operation
                                {
                                    bool inactive_45281 =
                                         slt64(srem64(sext_i32_i64(local_tid_45265 *
                                                      32 + 32 - 1),
                                                      i32_res_30817),
                                               sext_i32_i64(local_tid_45265 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45265 -
                                                             skip_threads_45280) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45281) {
                                        x_45274 = x_45275;
                                    }
                                    if (!inactive_45281) {
                                        float defunc_1_op_res_45276 = x_45274 +
                                              x_45275;
                                        
                                        x_45274 = defunc_1_op_res_45276;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45267, skip_threads_45280)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45280, local_tid_45265 -
                                      squot32(local_tid_45265, 32) * 32) &&
                                (squot32(local_tid_45265, 32) == 0 &&
                                 ltid_in_bounds_45277)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)] =
                                        x_45274;
                                    x_45275 = x_45274;
                                }
                            }
                            if (sle32(wave_sizze_45267, skip_threads_45280)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45280 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45265, 32) == 0 ||
                          !ltid_in_bounds_45277)) {
                        // read operands
                        {
                            x_39190 = x_39189;
                            x_39189 = ((__local
                                        float *) red_arr_mem_45269)[sext_i32_i64(squot32(local_tid_45265,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45282 =
                                 slt64(srem64(sext_i32_i64(local_tid_45265),
                                              i32_res_30817),
                                       sext_i32_i64(local_tid_45265) -
                                       sext_i32_i64(squot32(local_tid_45265,
                                                            32) * 32 - 1));
                            
                            if (inactive_45282) {
                                x_39189 = x_39190;
                            }
                            if (!inactive_45282) {
                                float defunc_1_op_res_39191 = x_39189 + x_39190;
                                
                                x_39189 = defunc_1_op_res_39191;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)] =
                                x_39189;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45265, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45269)[sext_i32_i64(local_tid_45265)] =
                            x_39190;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45273) *
                      squot64(segred_group_sizze_39185,
                              segment_sizze_nonzzero_45262) +
                      sext_i32_i64(local_tid_45265), m_30804) &&
                slt64(sext_i32_i64(local_tid_45265),
                      squot64(segred_group_sizze_39185,
                              segment_sizze_nonzzero_45262))) {
                ((__global
                  float *) mem_44013)[sext_i32_i64(virt_group_id_45273) *
                                      squot64(segred_group_sizze_39185,
                                              segment_sizze_nonzzero_45262) +
                                      sext_i32_i64(local_tid_45265)] = ((__local
                                                                         float *) red_arr_mem_45269)[(sext_i32_i64(local_tid_45265) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45262 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39185
}
__kernel void mainzisegred_small_39160(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45209_backing_aligned_0,
                                       int64_t m_30804, int64_t N_30805,
                                       int64_t i32_res_30817,
                                       int64_t num_groups_39172, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *mem_44010,
                                       int64_t segment_sizze_nonzzero_45202)
{
    #define segred_group_sizze_39171 (mainzisegred_group_sizze_39154)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45209_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45209_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45204;
    int32_t local_tid_45205;
    int64_t group_sizze_45208;
    int32_t wave_sizze_45207;
    int32_t group_tid_45206;
    
    global_tid_45204 = get_global_id(0);
    local_tid_45205 = get_local_id(0);
    group_sizze_45208 = get_local_size(0);
    wave_sizze_45207 = LOCKSTEP_WIDTH;
    group_tid_45206 = get_group_id(0);
    
    int32_t phys_tid_39160;
    
    phys_tid_39160 = global_tid_45204;
    
    __local char *red_arr_mem_45209;
    
    red_arr_mem_45209 = (__local char *) red_arr_mem_45209_backing_0;
    
    int32_t phys_group_id_45211;
    
    phys_group_id_45211 = get_group_id(0);
    for (int32_t i_45212 = 0; i_45212 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804,
                                          squot64(segred_group_sizze_39171,
                                                  segment_sizze_nonzzero_45202))) -
                   phys_group_id_45211, sext_i64_i32(num_groups_39172));
         i_45212++) {
        int32_t virt_group_id_45213 = phys_group_id_45211 + i_45212 *
                sext_i64_i32(num_groups_39172);
        int64_t gtid_39151 = squot64(sext_i32_i64(local_tid_45205),
                                     segment_sizze_nonzzero_45202) +
                sext_i32_i64(virt_group_id_45213) *
                squot64(segred_group_sizze_39171, segment_sizze_nonzzero_45202);
        int64_t gtid_39159 = srem64(sext_i32_i64(local_tid_45205),
                                    i32_res_30817);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30817) && (slt64(gtid_39151, m_30804) &&
                                            slt64(sext_i32_i64(local_tid_45205),
                                                  i32_res_30817 *
                                                  squot64(segred_group_sizze_39171,
                                                          segment_sizze_nonzzero_45202)))) {
                float x_39179 = ((__global
                                  float *) images_mem_43378)[gtid_39151 *
                                                             N_30805 +
                                                             gtid_39159];
                bool isnan_res_39180;
                
                isnan_res_39180 = futrts_isnan32(x_39179);
                
                bool cond_39181 = !isnan_res_39180;
                int32_t defunc_0_f_res_39182 = btoi_bool_i32(cond_39181);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)] =
                        defunc_0_f_res_39182;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30817)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_39175;
                int32_t x_39176;
                int32_t x_45214;
                int32_t x_45215;
                bool ltid_in_bounds_45217;
                
                ltid_in_bounds_45217 = slt64(sext_i32_i64(local_tid_45205),
                                             i32_res_30817 *
                                             squot64(segred_group_sizze_39171,
                                                     segment_sizze_nonzzero_45202));
                
                int32_t skip_threads_45218;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45217) {
                        x_39176 = ((volatile __local
                                    int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)];
                        if ((local_tid_45205 - squot32(local_tid_45205, 32) *
                             32) == 0) {
                            x_39175 = x_39176;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45218 = 1;
                    while (slt32(skip_threads_45218, 32)) {
                        if (sle32(skip_threads_45218, local_tid_45205 -
                                  squot32(local_tid_45205, 32) * 32) &&
                            ltid_in_bounds_45217) {
                            // read operands
                            {
                                x_39175 = ((volatile __local
                                            int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205) -
                                                                          sext_i32_i64(skip_threads_45218)];
                            }
                            // perform operation
                            {
                                bool inactive_45219 =
                                     slt64(srem64(sext_i32_i64(local_tid_45205),
                                                  i32_res_30817),
                                           sext_i32_i64(local_tid_45205) -
                                           sext_i32_i64(local_tid_45205 -
                                           skip_threads_45218));
                                
                                if (inactive_45219) {
                                    x_39175 = x_39176;
                                }
                                if (!inactive_45219) {
                                    int32_t defunc_1_op_res_39177 =
                                            add32(x_39175, x_39176);
                                    
                                    x_39175 = defunc_1_op_res_39177;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45207, skip_threads_45218)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45218, local_tid_45205 -
                                  squot32(local_tid_45205, 32) * 32) &&
                            ltid_in_bounds_45217) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)] =
                                    x_39175;
                                x_39176 = x_39175;
                            }
                        }
                        if (sle32(wave_sizze_45207, skip_threads_45218)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45218 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45205 - squot32(local_tid_45205, 32) * 32) ==
                        31 && ltid_in_bounds_45217) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45209)[sext_i32_i64(squot32(local_tid_45205,
                                                                             32))] =
                            x_39175;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45220;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45205, 32) == 0 &&
                            ltid_in_bounds_45217) {
                            x_45215 = ((volatile __local
                                        int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)];
                            if ((local_tid_45205 - squot32(local_tid_45205,
                                                           32) * 32) == 0) {
                                x_45214 = x_45215;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45220 = 1;
                        while (slt32(skip_threads_45220, 32)) {
                            if (sle32(skip_threads_45220, local_tid_45205 -
                                      squot32(local_tid_45205, 32) * 32) &&
                                (squot32(local_tid_45205, 32) == 0 &&
                                 ltid_in_bounds_45217)) {
                                // read operands
                                {
                                    x_45214 = ((volatile __local
                                                int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205) -
                                                                              sext_i32_i64(skip_threads_45220)];
                                }
                                // perform operation
                                {
                                    bool inactive_45221 =
                                         slt64(srem64(sext_i32_i64(local_tid_45205 *
                                                      32 + 32 - 1),
                                                      i32_res_30817),
                                               sext_i32_i64(local_tid_45205 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45205 -
                                                             skip_threads_45220) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45221) {
                                        x_45214 = x_45215;
                                    }
                                    if (!inactive_45221) {
                                        int32_t defunc_1_op_res_45216 =
                                                add32(x_45214, x_45215);
                                        
                                        x_45214 = defunc_1_op_res_45216;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45207, skip_threads_45220)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45220, local_tid_45205 -
                                      squot32(local_tid_45205, 32) * 32) &&
                                (squot32(local_tid_45205, 32) == 0 &&
                                 ltid_in_bounds_45217)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)] =
                                        x_45214;
                                    x_45215 = x_45214;
                                }
                            }
                            if (sle32(wave_sizze_45207, skip_threads_45220)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45220 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45205, 32) == 0 ||
                          !ltid_in_bounds_45217)) {
                        // read operands
                        {
                            x_39176 = x_39175;
                            x_39175 = ((__local
                                        int32_t *) red_arr_mem_45209)[sext_i32_i64(squot32(local_tid_45205,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45222 =
                                 slt64(srem64(sext_i32_i64(local_tid_45205),
                                              i32_res_30817),
                                       sext_i32_i64(local_tid_45205) -
                                       sext_i32_i64(squot32(local_tid_45205,
                                                            32) * 32 - 1));
                            
                            if (inactive_45222) {
                                x_39175 = x_39176;
                            }
                            if (!inactive_45222) {
                                int32_t defunc_1_op_res_39177 = add32(x_39175,
                                                                      x_39176);
                                
                                x_39175 = defunc_1_op_res_39177;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)] =
                                x_39175;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45205, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45209)[sext_i32_i64(local_tid_45205)] =
                            x_39176;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45213) *
                      squot64(segred_group_sizze_39171,
                              segment_sizze_nonzzero_45202) +
                      sext_i32_i64(local_tid_45205), m_30804) &&
                slt64(sext_i32_i64(local_tid_45205),
                      squot64(segred_group_sizze_39171,
                              segment_sizze_nonzzero_45202))) {
                ((__global
                  int32_t *) mem_44010)[sext_i32_i64(virt_group_id_45213) *
                                        squot64(segred_group_sizze_39171,
                                                segment_sizze_nonzzero_45202) +
                                        sext_i32_i64(local_tid_45205)] =
                    ((__local
                      int32_t *) red_arr_mem_45209)[(sext_i32_i64(local_tid_45205) +
                                                     1) *
                                                    segment_sizze_nonzzero_45202 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39171
}
__kernel void mainzisegred_small_39311(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45378_backing_aligned_0,
                                       int64_t N_30803, int64_t m_30804,
                                       int64_t i32_res_31165,
                                       int64_t num_groups_39329, __global
                                       unsigned char *defunc_4_map_res_mem_43943,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44022,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44023,
                                       __global unsigned char *mem_44072,
                                       int64_t segment_sizze_nonzzero_45371)
{
    #define segred_group_sizze_39328 (mainzisegred_group_sizze_39305)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45378_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45378_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45373;
    int32_t local_tid_45374;
    int64_t group_sizze_45377;
    int32_t wave_sizze_45376;
    int32_t group_tid_45375;
    
    global_tid_45373 = get_global_id(0);
    local_tid_45374 = get_local_id(0);
    group_sizze_45377 = get_local_size(0);
    wave_sizze_45376 = LOCKSTEP_WIDTH;
    group_tid_45375 = get_group_id(0);
    
    int32_t phys_tid_39311;
    
    phys_tid_39311 = global_tid_45373;
    
    __local char *red_arr_mem_45378;
    
    red_arr_mem_45378 = (__local char *) red_arr_mem_45378_backing_0;
    
    int32_t phys_group_id_45380;
    
    phys_group_id_45380 = get_group_id(0);
    for (int32_t i_45381 = 0; i_45381 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804,
                                          squot64(segred_group_sizze_39328,
                                                  segment_sizze_nonzzero_45371))) -
                   phys_group_id_45380, sext_i64_i32(num_groups_39329));
         i_45381++) {
        int32_t virt_group_id_45382 = phys_group_id_45380 + i_45381 *
                sext_i64_i32(num_groups_39329);
        int64_t gtid_39302 = squot64(sext_i32_i64(local_tid_45374),
                                     segment_sizze_nonzzero_45371) +
                sext_i32_i64(virt_group_id_45382) *
                squot64(segred_group_sizze_39328, segment_sizze_nonzzero_45371);
        int64_t gtid_39310 = srem64(sext_i32_i64(local_tid_45374),
                                    i32_res_31165);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_31165) && (slt64(gtid_39302, m_30804) &&
                                            slt64(sext_i32_i64(local_tid_45374),
                                                  i32_res_31165 *
                                                  squot64(segred_group_sizze_39328,
                                                          segment_sizze_nonzzero_45371)))) {
                int32_t x_39337 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44022)[gtid_39302];
                int32_t index_primexp_41461 = sext_i64_i32(gtid_39310);
                bool cond_39339 = slt32(index_primexp_41461, x_39337);
                float defunc_0_f_res_39340;
                
                if (cond_39339) {
                    int32_t x_39336 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44023)[gtid_39302];
                    int32_t x_39341 = add32(x_39336, index_primexp_41461);
                    int32_t x_39342 = sub32(x_39341, x_39337);
                    int32_t i_39343 = add32(1, x_39342);
                    int64_t i_39344 = sext_i32_i64(i_39343);
                    float defunc_0_f_res_t_res_39345 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_39302 *
                                                                                              N_30803 +
                                                                                              i_39344];
                    
                    defunc_0_f_res_39340 = defunc_0_f_res_t_res_39345;
                } else {
                    defunc_0_f_res_39340 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)] =
                        defunc_0_f_res_39340;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_31165)) {
            // perform segmented scan to imitate reduction
            {
                float x_39332;
                float x_39333;
                float x_45383;
                float x_45384;
                bool ltid_in_bounds_45386;
                
                ltid_in_bounds_45386 = slt64(sext_i32_i64(local_tid_45374),
                                             i32_res_31165 *
                                             squot64(segred_group_sizze_39328,
                                                     segment_sizze_nonzzero_45371));
                
                int32_t skip_threads_45387;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45386) {
                        x_39333 = ((volatile __local
                                    float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)];
                        if ((local_tid_45374 - squot32(local_tid_45374, 32) *
                             32) == 0) {
                            x_39332 = x_39333;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45387 = 1;
                    while (slt32(skip_threads_45387, 32)) {
                        if (sle32(skip_threads_45387, local_tid_45374 -
                                  squot32(local_tid_45374, 32) * 32) &&
                            ltid_in_bounds_45386) {
                            // read operands
                            {
                                x_39332 = ((volatile __local
                                            float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374) -
                                                                        sext_i32_i64(skip_threads_45387)];
                            }
                            // perform operation
                            {
                                bool inactive_45388 =
                                     slt64(srem64(sext_i32_i64(local_tid_45374),
                                                  i32_res_31165),
                                           sext_i32_i64(local_tid_45374) -
                                           sext_i32_i64(local_tid_45374 -
                                           skip_threads_45387));
                                
                                if (inactive_45388) {
                                    x_39332 = x_39333;
                                }
                                if (!inactive_45388) {
                                    float defunc_1_op_res_39334 = x_39332 +
                                          x_39333;
                                    
                                    x_39332 = defunc_1_op_res_39334;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45376, skip_threads_45387)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45387, local_tid_45374 -
                                  squot32(local_tid_45374, 32) * 32) &&
                            ltid_in_bounds_45386) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)] =
                                    x_39332;
                                x_39333 = x_39332;
                            }
                        }
                        if (sle32(wave_sizze_45376, skip_threads_45387)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45387 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45374 - squot32(local_tid_45374, 32) * 32) ==
                        31 && ltid_in_bounds_45386) {
                        ((volatile __local
                          float *) red_arr_mem_45378)[sext_i32_i64(squot32(local_tid_45374,
                                                                           32))] =
                            x_39332;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45389;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45374, 32) == 0 &&
                            ltid_in_bounds_45386) {
                            x_45384 = ((volatile __local
                                        float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)];
                            if ((local_tid_45374 - squot32(local_tid_45374,
                                                           32) * 32) == 0) {
                                x_45383 = x_45384;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45389 = 1;
                        while (slt32(skip_threads_45389, 32)) {
                            if (sle32(skip_threads_45389, local_tid_45374 -
                                      squot32(local_tid_45374, 32) * 32) &&
                                (squot32(local_tid_45374, 32) == 0 &&
                                 ltid_in_bounds_45386)) {
                                // read operands
                                {
                                    x_45383 = ((volatile __local
                                                float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374) -
                                                                            sext_i32_i64(skip_threads_45389)];
                                }
                                // perform operation
                                {
                                    bool inactive_45390 =
                                         slt64(srem64(sext_i32_i64(local_tid_45374 *
                                                      32 + 32 - 1),
                                                      i32_res_31165),
                                               sext_i32_i64(local_tid_45374 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45374 -
                                                             skip_threads_45389) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45390) {
                                        x_45383 = x_45384;
                                    }
                                    if (!inactive_45390) {
                                        float defunc_1_op_res_45385 = x_45383 +
                                              x_45384;
                                        
                                        x_45383 = defunc_1_op_res_45385;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45376, skip_threads_45389)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45389, local_tid_45374 -
                                      squot32(local_tid_45374, 32) * 32) &&
                                (squot32(local_tid_45374, 32) == 0 &&
                                 ltid_in_bounds_45386)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)] =
                                        x_45383;
                                    x_45384 = x_45383;
                                }
                            }
                            if (sle32(wave_sizze_45376, skip_threads_45389)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45389 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45374, 32) == 0 ||
                          !ltid_in_bounds_45386)) {
                        // read operands
                        {
                            x_39333 = x_39332;
                            x_39332 = ((__local
                                        float *) red_arr_mem_45378)[sext_i32_i64(squot32(local_tid_45374,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45391 =
                                 slt64(srem64(sext_i32_i64(local_tid_45374),
                                              i32_res_31165),
                                       sext_i32_i64(local_tid_45374) -
                                       sext_i32_i64(squot32(local_tid_45374,
                                                            32) * 32 - 1));
                            
                            if (inactive_45391) {
                                x_39332 = x_39333;
                            }
                            if (!inactive_45391) {
                                float defunc_1_op_res_39334 = x_39332 + x_39333;
                                
                                x_39332 = defunc_1_op_res_39334;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)] =
                                x_39332;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45374, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45378)[sext_i32_i64(local_tid_45374)] =
                            x_39333;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45382) *
                      squot64(segred_group_sizze_39328,
                              segment_sizze_nonzzero_45371) +
                      sext_i32_i64(local_tid_45374), m_30804) &&
                slt64(sext_i32_i64(local_tid_45374),
                      squot64(segred_group_sizze_39328,
                              segment_sizze_nonzzero_45371))) {
                ((__global
                  float *) mem_44072)[sext_i32_i64(virt_group_id_45382) *
                                      squot64(segred_group_sizze_39328,
                                              segment_sizze_nonzzero_45371) +
                                      sext_i32_i64(local_tid_45374)] = ((__local
                                                                         float *) red_arr_mem_45378)[(sext_i32_i64(local_tid_45374) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45371 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39328
}
__kernel void mainzisegred_small_40860(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45590_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45588_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45586_backing_aligned_2,
                                       int64_t m_30804,
                                       int64_t iota32_arg_31190,
                                       int64_t num_groups_41031, __global
                                       unsigned char *mem_44078, __global
                                       unsigned char *mem_44238, __global
                                       unsigned char *mem_44240, __global
                                       unsigned char *mem_44244, __global
                                       unsigned char *mem_44247, __global
                                       unsigned char *mem_44249, __global
                                       unsigned char *mem_44251,
                                       int64_t segment_sizze_nonzzero_45579)
{
    #define segred_group_sizze_41030 (mainzisegred_group_sizze_40854)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45590_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45590_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45588_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45588_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45586_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45586_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45581;
    int32_t local_tid_45582;
    int64_t group_sizze_45585;
    int32_t wave_sizze_45584;
    int32_t group_tid_45583;
    
    global_tid_45581 = get_global_id(0);
    local_tid_45582 = get_local_id(0);
    group_sizze_45585 = get_local_size(0);
    wave_sizze_45584 = LOCKSTEP_WIDTH;
    group_tid_45583 = get_group_id(0);
    
    int32_t phys_tid_40860;
    
    phys_tid_40860 = global_tid_45581;
    
    __local char *red_arr_mem_45586;
    
    red_arr_mem_45586 = (__local char *) red_arr_mem_45586_backing_0;
    
    __local char *red_arr_mem_45588;
    
    red_arr_mem_45588 = (__local char *) red_arr_mem_45588_backing_1;
    
    __local char *red_arr_mem_45590;
    
    red_arr_mem_45590 = (__local char *) red_arr_mem_45590_backing_2;
    
    int32_t phys_group_id_45592;
    
    phys_group_id_45592 = get_group_id(0);
    for (int32_t i_45593 = 0; i_45593 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30804,
                                          squot64(segred_group_sizze_41030,
                                                  segment_sizze_nonzzero_45579))) -
                   phys_group_id_45592, sext_i64_i32(num_groups_41031));
         i_45593++) {
        int32_t virt_group_id_45594 = phys_group_id_45592 + i_45593 *
                sext_i64_i32(num_groups_41031);
        int64_t gtid_40851 = squot64(sext_i32_i64(local_tid_45582),
                                     segment_sizze_nonzzero_45579) +
                sext_i32_i64(virt_group_id_45594) *
                squot64(segred_group_sizze_41030, segment_sizze_nonzzero_45579);
        int64_t gtid_40859 = srem64(sext_i32_i64(local_tid_45582),
                                    iota32_arg_31190);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_31190) && (slt64(gtid_40851, m_30804) &&
                                               slt64(sext_i32_i64(local_tid_45582),
                                                     iota32_arg_31190 *
                                                     squot64(segred_group_sizze_41030,
                                                             segment_sizze_nonzzero_45579)))) {
                int32_t y_41050 = ((__global int32_t *) mem_44240)[gtid_40851];
                float y_41051 = ((__global float *) mem_44238)[gtid_40851];
                float x_41055 = ((__global float *) mem_44244)[gtid_40851 *
                                                               iota32_arg_31190 +
                                                               gtid_40859];
                float x_41056 = ((__global float *) mem_44078)[gtid_40859];
                int32_t index_primexp_41478 = sext_i64_i32(gtid_40859);
                float defunc_0_f_res_41059 = x_41055 / y_41051;
                bool cond_41060 = slt32(index_primexp_41478, y_41050);
                bool isnan_res_41061;
                
                isnan_res_41061 = futrts_isnan32(defunc_0_f_res_41059);
                
                bool cond_t_res_41062 = !isnan_res_41061;
                bool x_41063 = cond_41060 && cond_t_res_41062;
                float abs_res_41064 = (float) fabs(defunc_0_f_res_41059);
                bool defunc_2_f_res_t_res_41065 = x_41056 < abs_res_41064;
                bool x_41066 = x_41063 && defunc_2_f_res_t_res_41065;
                float defunc_1_f_res_41067;
                
                if (cond_41060) {
                    defunc_1_f_res_41067 = defunc_0_f_res_41059;
                } else {
                    defunc_1_f_res_41067 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)] =
                        x_41066;
                    ((__local
                      int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)] =
                        index_primexp_41478;
                    ((__local
                      float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)] =
                        defunc_1_f_res_41067;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_31190)) {
            // perform segmented scan to imitate reduction
            {
                bool x_41036;
                int32_t x_41037;
                float x_41038;
                bool x_41039;
                int32_t x_41040;
                float x_41041;
                bool x_45595;
                int32_t x_45596;
                float x_45597;
                bool x_45598;
                int32_t x_45599;
                float x_45600;
                bool ltid_in_bounds_45609;
                
                ltid_in_bounds_45609 = slt64(sext_i32_i64(local_tid_45582),
                                             iota32_arg_31190 *
                                             squot64(segred_group_sizze_41030,
                                                     segment_sizze_nonzzero_45579));
                
                int32_t skip_threads_45610;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45609) {
                        x_41039 = ((volatile __local
                                    bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)];
                        x_41040 = ((volatile __local
                                    int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)];
                        x_41041 = ((volatile __local
                                    float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)];
                        if ((local_tid_45582 - squot32(local_tid_45582, 32) *
                             32) == 0) {
                            x_41036 = x_41039;
                            x_41037 = x_41040;
                            x_41038 = x_41041;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45610 = 1;
                    while (slt32(skip_threads_45610, 32)) {
                        if (sle32(skip_threads_45610, local_tid_45582 -
                                  squot32(local_tid_45582, 32) * 32) &&
                            ltid_in_bounds_45609) {
                            // read operands
                            {
                                x_41036 = ((volatile __local
                                            bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582) -
                                                                       sext_i32_i64(skip_threads_45610)];
                                x_41037 = ((volatile __local
                                            int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582) -
                                                                          sext_i32_i64(skip_threads_45610)];
                                x_41038 = ((volatile __local
                                            float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582) -
                                                                        sext_i32_i64(skip_threads_45610)];
                            }
                            // perform operation
                            {
                                bool inactive_45611 =
                                     slt64(srem64(sext_i32_i64(local_tid_45582),
                                                  iota32_arg_31190),
                                           sext_i32_i64(local_tid_45582) -
                                           sext_i32_i64(local_tid_45582 -
                                           skip_threads_45610));
                                
                                if (inactive_45611) {
                                    x_41036 = x_41039;
                                    x_41037 = x_41040;
                                    x_41038 = x_41041;
                                }
                                if (!inactive_45611) {
                                    bool defunc_1_op_res_41042;
                                    int32_t defunc_1_op_res_41043;
                                    
                                    if (x_41036) {
                                        defunc_1_op_res_41042 = x_41036;
                                        defunc_1_op_res_41043 = x_41037;
                                    } else {
                                        bool x_41044 = x_41039 && x_41039;
                                        bool x_41045 = !x_41039;
                                        bool y_41046 = x_41036 && x_41045;
                                        bool defunc_1_op_res_f_res_41047 =
                                             x_41044 || y_41046;
                                        int32_t defunc_1_op_res_f_res_41048;
                                        
                                        if (x_41039) {
                                            defunc_1_op_res_f_res_41048 =
                                                x_41040;
                                        } else {
                                            defunc_1_op_res_f_res_41048 =
                                                x_41037;
                                        }
                                        defunc_1_op_res_41042 =
                                            defunc_1_op_res_f_res_41047;
                                        defunc_1_op_res_41043 =
                                            defunc_1_op_res_f_res_41048;
                                    }
                                    
                                    float defunc_1_op_res_41049 = x_41038 +
                                          x_41041;
                                    
                                    x_41036 = defunc_1_op_res_41042;
                                    x_41037 = defunc_1_op_res_41043;
                                    x_41038 = defunc_1_op_res_41049;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45584, skip_threads_45610)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45610, local_tid_45582 -
                                  squot32(local_tid_45582, 32) * 32) &&
                            ltid_in_bounds_45609) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)] =
                                    x_41036;
                                x_41039 = x_41036;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)] =
                                    x_41037;
                                x_41040 = x_41037;
                                ((volatile __local
                                  float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)] =
                                    x_41038;
                                x_41041 = x_41038;
                            }
                        }
                        if (sle32(wave_sizze_45584, skip_threads_45610)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45610 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45582 - squot32(local_tid_45582, 32) * 32) ==
                        31 && ltid_in_bounds_45609) {
                        ((volatile __local
                          bool *) red_arr_mem_45586)[sext_i32_i64(squot32(local_tid_45582,
                                                                          32))] =
                            x_41036;
                        ((volatile __local
                          int32_t *) red_arr_mem_45588)[sext_i32_i64(squot32(local_tid_45582,
                                                                             32))] =
                            x_41037;
                        ((volatile __local
                          float *) red_arr_mem_45590)[sext_i32_i64(squot32(local_tid_45582,
                                                                           32))] =
                            x_41038;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45612;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45582, 32) == 0 &&
                            ltid_in_bounds_45609) {
                            x_45598 = ((volatile __local
                                        bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)];
                            x_45599 = ((volatile __local
                                        int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)];
                            x_45600 = ((volatile __local
                                        float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)];
                            if ((local_tid_45582 - squot32(local_tid_45582,
                                                           32) * 32) == 0) {
                                x_45595 = x_45598;
                                x_45596 = x_45599;
                                x_45597 = x_45600;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45612 = 1;
                        while (slt32(skip_threads_45612, 32)) {
                            if (sle32(skip_threads_45612, local_tid_45582 -
                                      squot32(local_tid_45582, 32) * 32) &&
                                (squot32(local_tid_45582, 32) == 0 &&
                                 ltid_in_bounds_45609)) {
                                // read operands
                                {
                                    x_45595 = ((volatile __local
                                                bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582) -
                                                                           sext_i32_i64(skip_threads_45612)];
                                    x_45596 = ((volatile __local
                                                int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582) -
                                                                              sext_i32_i64(skip_threads_45612)];
                                    x_45597 = ((volatile __local
                                                float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582) -
                                                                            sext_i32_i64(skip_threads_45612)];
                                }
                                // perform operation
                                {
                                    bool inactive_45613 =
                                         slt64(srem64(sext_i32_i64(local_tid_45582 *
                                                      32 + 32 - 1),
                                                      iota32_arg_31190),
                                               sext_i32_i64(local_tid_45582 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45582 -
                                                             skip_threads_45612) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45613) {
                                        x_45595 = x_45598;
                                        x_45596 = x_45599;
                                        x_45597 = x_45600;
                                    }
                                    if (!inactive_45613) {
                                        bool defunc_1_op_res_45601;
                                        int32_t defunc_1_op_res_45602;
                                        
                                        if (x_45595) {
                                            defunc_1_op_res_45601 = x_45595;
                                            defunc_1_op_res_45602 = x_45596;
                                        } else {
                                            bool x_45603 = x_45598 && x_45598;
                                            bool x_45604 = !x_45598;
                                            bool y_45605 = x_45595 && x_45604;
                                            bool defunc_1_op_res_f_res_45606 =
                                                 x_45603 || y_45605;
                                            int32_t defunc_1_op_res_f_res_45607;
                                            
                                            if (x_45598) {
                                                defunc_1_op_res_f_res_45607 =
                                                    x_45599;
                                            } else {
                                                defunc_1_op_res_f_res_45607 =
                                                    x_45596;
                                            }
                                            defunc_1_op_res_45601 =
                                                defunc_1_op_res_f_res_45606;
                                            defunc_1_op_res_45602 =
                                                defunc_1_op_res_f_res_45607;
                                        }
                                        
                                        float defunc_1_op_res_45608 = x_45597 +
                                              x_45600;
                                        
                                        x_45595 = defunc_1_op_res_45601;
                                        x_45596 = defunc_1_op_res_45602;
                                        x_45597 = defunc_1_op_res_45608;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45584, skip_threads_45612)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45612, local_tid_45582 -
                                      squot32(local_tid_45582, 32) * 32) &&
                                (squot32(local_tid_45582, 32) == 0 &&
                                 ltid_in_bounds_45609)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)] =
                                        x_45595;
                                    x_45598 = x_45595;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)] =
                                        x_45596;
                                    x_45599 = x_45596;
                                    ((volatile __local
                                      float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)] =
                                        x_45597;
                                    x_45600 = x_45597;
                                }
                            }
                            if (sle32(wave_sizze_45584, skip_threads_45612)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45612 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45582, 32) == 0 ||
                          !ltid_in_bounds_45609)) {
                        // read operands
                        {
                            x_41039 = x_41036;
                            x_41040 = x_41037;
                            x_41041 = x_41038;
                            x_41036 = ((__local
                                        bool *) red_arr_mem_45586)[sext_i32_i64(squot32(local_tid_45582,
                                                                                        32)) -
                                                                   1];
                            x_41037 = ((__local
                                        int32_t *) red_arr_mem_45588)[sext_i32_i64(squot32(local_tid_45582,
                                                                                           32)) -
                                                                      1];
                            x_41038 = ((__local
                                        float *) red_arr_mem_45590)[sext_i32_i64(squot32(local_tid_45582,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45614 =
                                 slt64(srem64(sext_i32_i64(local_tid_45582),
                                              iota32_arg_31190),
                                       sext_i32_i64(local_tid_45582) -
                                       sext_i32_i64(squot32(local_tid_45582,
                                                            32) * 32 - 1));
                            
                            if (inactive_45614) {
                                x_41036 = x_41039;
                                x_41037 = x_41040;
                                x_41038 = x_41041;
                            }
                            if (!inactive_45614) {
                                bool defunc_1_op_res_41042;
                                int32_t defunc_1_op_res_41043;
                                
                                if (x_41036) {
                                    defunc_1_op_res_41042 = x_41036;
                                    defunc_1_op_res_41043 = x_41037;
                                } else {
                                    bool x_41044 = x_41039 && x_41039;
                                    bool x_41045 = !x_41039;
                                    bool y_41046 = x_41036 && x_41045;
                                    bool defunc_1_op_res_f_res_41047 =
                                         x_41044 || y_41046;
                                    int32_t defunc_1_op_res_f_res_41048;
                                    
                                    if (x_41039) {
                                        defunc_1_op_res_f_res_41048 = x_41040;
                                    } else {
                                        defunc_1_op_res_f_res_41048 = x_41037;
                                    }
                                    defunc_1_op_res_41042 =
                                        defunc_1_op_res_f_res_41047;
                                    defunc_1_op_res_41043 =
                                        defunc_1_op_res_f_res_41048;
                                }
                                
                                float defunc_1_op_res_41049 = x_41038 + x_41041;
                                
                                x_41036 = defunc_1_op_res_41042;
                                x_41037 = defunc_1_op_res_41043;
                                x_41038 = defunc_1_op_res_41049;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)] =
                                x_41036;
                            ((__local
                              int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)] =
                                x_41037;
                            ((__local
                              float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)] =
                                x_41038;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45582, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45586)[sext_i32_i64(local_tid_45582)] =
                            x_41039;
                        ((__local
                          int32_t *) red_arr_mem_45588)[sext_i32_i64(local_tid_45582)] =
                            x_41040;
                        ((__local
                          float *) red_arr_mem_45590)[sext_i32_i64(local_tid_45582)] =
                            x_41041;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45594) *
                      squot64(segred_group_sizze_41030,
                              segment_sizze_nonzzero_45579) +
                      sext_i32_i64(local_tid_45582), m_30804) &&
                slt64(sext_i32_i64(local_tid_45582),
                      squot64(segred_group_sizze_41030,
                              segment_sizze_nonzzero_45579))) {
                ((__global
                  bool *) mem_44247)[sext_i32_i64(virt_group_id_45594) *
                                     squot64(segred_group_sizze_41030,
                                             segment_sizze_nonzzero_45579) +
                                     sext_i32_i64(local_tid_45582)] = ((__local
                                                                        bool *) red_arr_mem_45586)[(sext_i32_i64(local_tid_45582) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45579 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44249)[sext_i32_i64(virt_group_id_45594) *
                                        squot64(segred_group_sizze_41030,
                                                segment_sizze_nonzzero_45579) +
                                        sext_i32_i64(local_tid_45582)] =
                    ((__local
                      int32_t *) red_arr_mem_45588)[(sext_i32_i64(local_tid_45582) +
                                                     1) *
                                                    segment_sizze_nonzzero_45579 -
                                                    1];
                ((__global
                  float *) mem_44251)[sext_i32_i64(virt_group_id_45594) *
                                      squot64(segred_group_sizze_41030,
                                              segment_sizze_nonzzero_45579) +
                                      sext_i32_i64(local_tid_45582)] = ((__local
                                                                         float *) red_arr_mem_45590)[(sext_i32_i64(local_tid_45582) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45579 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41030
}
__kernel void mainDetailedzicopy_44794(int64_t m_30057, int64_t nm_30208,
                                       int64_t ctx_param_ext_43579,
                                       int64_t ctx_param_ext_43580,
                                       int64_t ctx_param_ext_43582, __global
                                       unsigned char *mem_param_43584, __global
                                       unsigned char *mem_43589)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44794;
    int32_t copy_ltid_44795;
    int32_t copy_gid_44796;
    
    copy_gtid_44794 = get_global_id(0);
    copy_ltid_44795 = get_local_id(0);
    copy_gid_44796 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44794), m_30057 * nm_30208)) {
        ((__global float *) mem_43589)[(sext_i32_i64(copy_gtid_44794) -
                                        squot64(sext_i32_i64(copy_gtid_44794),
                                                nm_30208) * nm_30208) *
                                       m_30057 +
                                       squot64(sext_i32_i64(copy_gtid_44794),
                                               nm_30208)] = ((__global
                                                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                                                        (squot64(sext_i32_i64(copy_gtid_44794),
                                                                                                 nm_30208) *
                                                                                         ctx_param_ext_43580 +
                                                                                         (sext_i32_i64(copy_gtid_44794) -
                                                                                          squot64(sext_i32_i64(copy_gtid_44794),
                                                                                                  nm_30208) *
                                                                                          nm_30208) *
                                                                                         ctx_param_ext_43582)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_33926(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45136_backing_aligned_0,
                                              int64_t N_30056, int64_t m_30057,
                                              int64_t N_30058, __global
                                              unsigned char *images_mem_43378,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43905,
                                              __global unsigned char *mem_43934,
                                              __global unsigned char *mem_43937,
                                              int32_t num_threads_45130)
{
    #define segscan_group_sizze_33943 (mainDetailedzisegscan_group_sizze_33920)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45136_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45136_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45131;
    int32_t local_tid_45132;
    int64_t group_sizze_45135;
    int32_t wave_sizze_45134;
    int32_t group_tid_45133;
    
    global_tid_45131 = get_global_id(0);
    local_tid_45132 = get_local_id(0);
    group_sizze_45135 = get_local_size(0);
    wave_sizze_45134 = LOCKSTEP_WIDTH;
    group_tid_45133 = get_group_id(0);
    
    int32_t phys_tid_33926;
    
    phys_tid_33926 = global_tid_45131;
    
    __local char *scan_arr_mem_45136;
    
    scan_arr_mem_45136 = (__local char *) scan_arr_mem_45136_backing_0;
    
    int64_t x_33948;
    int64_t x_33949;
    
    x_33948 = 0;
    for (int64_t j_45138 = 0; j_45138 < sdiv_up64(m_30057 * N_30056,
                                                  sext_i32_i64(num_threads_45130));
         j_45138++) {
        int64_t chunk_offset_45139 = segscan_group_sizze_33943 * j_45138 +
                sext_i32_i64(group_tid_45133) * (segscan_group_sizze_33943 *
                                                 sdiv_up64(m_30057 * N_30056,
                                                           sext_i32_i64(num_threads_45130)));
        int64_t flat_idx_45140 = chunk_offset_45139 +
                sext_i32_i64(local_tid_45132);
        int64_t gtid_33917 = squot64(flat_idx_45140, N_30056);
        int64_t gtid_33925 = flat_idx_45140 - squot64(flat_idx_45140, N_30056) *
                N_30056;
        
        // threads in bounds read input
        {
            if (slt64(gtid_33917, m_30057) && slt64(gtid_33925, N_30056)) {
                float x_33953 = ((__global
                                  float *) images_mem_43378)[gtid_33917 *
                                                             N_30058 +
                                                             gtid_33925];
                bool isnan_res_33955;
                
                isnan_res_33955 = futrts_isnan32(x_33953);
                
                bool cond_33956 = !isnan_res_33955;
                float defunc_0_f_res_33957;
                
                if (cond_33956) {
                    float x_33954 = ((__global
                                      float *) defunc_3_map_res_mem_43905)[gtid_33917 *
                                                                           N_30056 +
                                                                           gtid_33925];
                    float defunc_0_f_res_t_res_33958 = x_33953 - x_33954;
                    
                    defunc_0_f_res_33957 = defunc_0_f_res_t_res_33958;
                } else {
                    defunc_0_f_res_33957 = NAN;
                }
                
                bool isnan_res_33959;
                
                isnan_res_33959 = futrts_isnan32(defunc_0_f_res_33957);
                
                bool defunc_0_p_res_33960 = !isnan_res_33959;
                int64_t defunc_0_f_res_33961 =
                        btoi_bool_i64(defunc_0_p_res_33960);
                
                // write to-scan values to parameters
                {
                    x_33949 = defunc_0_f_res_33961;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43937)[gtid_33917 * N_30056 +
                                                   gtid_33925] =
                        defunc_0_f_res_33957;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_33917, m_30057) && slt64(gtid_33925,
                                                          N_30056))) {
                    x_33949 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_33950 = add64(x_33948, x_33949);
                
                ((__local
                  int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)] =
                    defunc_1_op_res_33950;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45141;
            int64_t x_45142;
            int64_t x_45144;
            int64_t x_45145;
            bool ltid_in_bounds_45147;
            
            ltid_in_bounds_45147 = slt64(sext_i32_i64(local_tid_45132),
                                         segscan_group_sizze_33943);
            
            int32_t skip_threads_45148;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45147) {
                    x_45142 = ((volatile __local
                                int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)];
                    if ((local_tid_45132 - squot32(local_tid_45132, 32) * 32) ==
                        0) {
                        x_45141 = x_45142;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45148 = 1;
                while (slt32(skip_threads_45148, 32)) {
                    if (sle32(skip_threads_45148, local_tid_45132 -
                              squot32(local_tid_45132, 32) * 32) &&
                        ltid_in_bounds_45147) {
                        // read operands
                        {
                            x_45141 = ((volatile __local
                                        int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132) -
                                                                       sext_i32_i64(skip_threads_45148)];
                        }
                        // perform operation
                        {
                            bool inactive_45149 =
                                 slt64(srem64(sext_i32_i64(local_tid_45132) +
                                              chunk_offset_45139, N_30056),
                                       sext_i32_i64(local_tid_45132) +
                                       chunk_offset_45139 -
                                       (sext_i32_i64(local_tid_45132 -
                                        skip_threads_45148) +
                                        chunk_offset_45139));
                            
                            if (inactive_45149) {
                                x_45141 = x_45142;
                            }
                            if (!inactive_45149) {
                                int64_t defunc_1_op_res_45143 = add64(x_45141,
                                                                      x_45142);
                                
                                x_45141 = defunc_1_op_res_45143;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45134, skip_threads_45148)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45148, local_tid_45132 -
                              squot32(local_tid_45132, 32) * 32) &&
                        ltid_in_bounds_45147) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)] =
                                x_45141;
                            x_45142 = x_45141;
                        }
                    }
                    if (sle32(wave_sizze_45134, skip_threads_45148)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45148 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45132 - squot32(local_tid_45132, 32) * 32) ==
                    31 && ltid_in_bounds_45147) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45136)[sext_i32_i64(squot32(local_tid_45132,
                                                                          32))] =
                        x_45141;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45150;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45132, 32) == 0 &&
                        ltid_in_bounds_45147) {
                        x_45145 = ((volatile __local
                                    int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)];
                        if ((local_tid_45132 - squot32(local_tid_45132, 32) *
                             32) == 0) {
                            x_45144 = x_45145;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45150 = 1;
                    while (slt32(skip_threads_45150, 32)) {
                        if (sle32(skip_threads_45150, local_tid_45132 -
                                  squot32(local_tid_45132, 32) * 32) &&
                            (squot32(local_tid_45132, 32) == 0 &&
                             ltid_in_bounds_45147)) {
                            // read operands
                            {
                                x_45144 = ((volatile __local
                                            int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132) -
                                                                           sext_i32_i64(skip_threads_45150)];
                            }
                            // perform operation
                            {
                                bool inactive_45151 =
                                     slt64(srem64(sext_i32_i64(local_tid_45132 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45139, N_30056),
                                           sext_i32_i64(local_tid_45132 * 32 +
                                           32 - 1) + chunk_offset_45139 -
                                           (sext_i32_i64((local_tid_45132 -
                                                          skip_threads_45150) *
                                            32 + 32 - 1) + chunk_offset_45139));
                                
                                if (inactive_45151) {
                                    x_45144 = x_45145;
                                }
                                if (!inactive_45151) {
                                    int64_t defunc_1_op_res_45146 =
                                            add64(x_45144, x_45145);
                                    
                                    x_45144 = defunc_1_op_res_45146;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45134, skip_threads_45150)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45150, local_tid_45132 -
                                  squot32(local_tid_45132, 32) * 32) &&
                            (squot32(local_tid_45132, 32) == 0 &&
                             ltid_in_bounds_45147)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)] =
                                    x_45144;
                                x_45145 = x_45144;
                            }
                        }
                        if (sle32(wave_sizze_45134, skip_threads_45150)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45150 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45132, 32) == 0 ||
                      !ltid_in_bounds_45147)) {
                    // read operands
                    {
                        x_45142 = x_45141;
                        x_45141 = ((__local
                                    int64_t *) scan_arr_mem_45136)[sext_i32_i64(squot32(local_tid_45132,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45152 =
                             slt64(srem64(sext_i32_i64(local_tid_45132) +
                                          chunk_offset_45139, N_30056),
                                   sext_i32_i64(local_tid_45132) +
                                   chunk_offset_45139 -
                                   (sext_i32_i64(squot32(local_tid_45132, 32) *
                                    32 - 1) + chunk_offset_45139));
                        
                        if (inactive_45152) {
                            x_45141 = x_45142;
                        }
                        if (!inactive_45152) {
                            int64_t defunc_1_op_res_45143 = add64(x_45141,
                                                                  x_45142);
                            
                            x_45141 = defunc_1_op_res_45143;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)] =
                            x_45141;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45132, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)] =
                        x_45142;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_33917, m_30057) && slt64(gtid_33925, N_30056)) {
                    ((__global int64_t *) mem_43934)[gtid_33917 * N_30056 +
                                                     gtid_33925] = ((__local
                                                                     int64_t *) scan_arr_mem_45136)[sext_i32_i64(local_tid_45132)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45153 = slt64(srem64(chunk_offset_45139 +
                                                          segscan_group_sizze_33943,
                                                          N_30056),
                                                   chunk_offset_45139 +
                                                   segscan_group_sizze_33943 -
                                                   (chunk_offset_45139 +
                                                    segscan_group_sizze_33943 -
                                                    1));
                bool should_load_carry_45154 = local_tid_45132 == 0 &&
                     !crosses_segment_45153;
                
                if (should_load_carry_45154) {
                    x_33948 = ((__local
                                int64_t *) scan_arr_mem_45136)[segscan_group_sizze_33943 -
                                                               1];
                }
                if (!should_load_carry_45154) {
                    x_33948 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_33943
}
__kernel void mainDetailedziscan_stage1_35712(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45769_backing_aligned_0,
                                              __local volatile
                                              int64_t *scan_arr_mem_45767_backing_aligned_1,
                                              __local volatile
                                              int64_t *scan_arr_mem_45765_backing_aligned_2,
                                              __local volatile
                                              int64_t *scan_arr_mem_45763_backing_aligned_3,
                                              int64_t m_30057,
                                              int64_t iota32_arg_30443,
                                              int32_t defunc_2_radix_sort_step_arg_36294,
                                              int32_t defunc_0_get_bit_arg_36295,
                                              unsigned char cond_f_res_36296,
                                              unsigned char cond_f_res_36297,
                                              __global
                                              unsigned char *mem_param_44322,
                                              __global unsigned char *mem_44349,
                                              __global unsigned char *mem_44352,
                                              __global unsigned char *mem_44355,
                                              __global unsigned char *mem_44358,
                                              __global unsigned char *mem_44361,
                                              int32_t num_threads_45757)
{
    #define segscan_group_sizze_36389 (mainDetailedzisegscan_group_sizze_35706)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45769_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_45769_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_45767_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_45767_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_45765_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_45765_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_45763_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45763_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45758;
    int32_t local_tid_45759;
    int64_t group_sizze_45762;
    int32_t wave_sizze_45761;
    int32_t group_tid_45760;
    
    global_tid_45758 = get_global_id(0);
    local_tid_45759 = get_local_id(0);
    group_sizze_45762 = get_local_size(0);
    wave_sizze_45761 = LOCKSTEP_WIDTH;
    group_tid_45760 = get_group_id(0);
    
    int32_t phys_tid_35712;
    
    phys_tid_35712 = global_tid_45758;
    
    __local char *scan_arr_mem_45763;
    __local char *scan_arr_mem_45765;
    __local char *scan_arr_mem_45767;
    __local char *scan_arr_mem_45769;
    
    scan_arr_mem_45763 = (__local char *) scan_arr_mem_45763_backing_0;
    scan_arr_mem_45765 = (__local char *) scan_arr_mem_45765_backing_1;
    scan_arr_mem_45767 = (__local char *) scan_arr_mem_45767_backing_2;
    scan_arr_mem_45769 = (__local char *) scan_arr_mem_45769_backing_3;
    
    int64_t x_36397;
    int64_t x_36398;
    int64_t x_36399;
    int64_t x_36400;
    int64_t x_36401;
    int64_t x_36402;
    int64_t x_36403;
    int64_t x_36404;
    
    x_36397 = 0;
    x_36398 = 0;
    x_36399 = 0;
    x_36400 = 0;
    for (int64_t j_45771 = 0; j_45771 < sdiv_up64(m_30057 * iota32_arg_30443,
                                                  sext_i32_i64(num_threads_45757));
         j_45771++) {
        int64_t chunk_offset_45772 = segscan_group_sizze_36389 * j_45771 +
                sext_i32_i64(group_tid_45760) * (segscan_group_sizze_36389 *
                                                 sdiv_up64(m_30057 *
                                                           iota32_arg_30443,
                                                           sext_i32_i64(num_threads_45757)));
        int64_t flat_idx_45773 = chunk_offset_45772 +
                sext_i32_i64(local_tid_45759);
        int64_t gtid_35703 = squot64(flat_idx_45773, iota32_arg_30443);
        int64_t gtid_35711 = flat_idx_45773 - squot64(flat_idx_45773,
                                                      iota32_arg_30443) *
                iota32_arg_30443;
        
        // threads in bounds read input
        {
            if (slt64(gtid_35703, m_30057) && slt64(gtid_35711,
                                                    iota32_arg_30443)) {
                float x_36410 = ((__global
                                  float *) mem_param_44322)[gtid_35703 *
                                                            iota32_arg_30443 +
                                                            gtid_35711];
                int32_t i32_arg_36411;
                
                i32_arg_36411 = futrts_to_bits32(x_36410);
                
                int32_t unsign_arg_36412 = ashr32(i32_arg_36411,
                                                  defunc_0_get_bit_arg_36295);
                int32_t unsign_arg_36413 = 1 & unsign_arg_36412;
                int32_t unsign_arg_36414 = ashr32(i32_arg_36411, 31);
                int32_t unsign_arg_36415 = 1 & unsign_arg_36414;
                bool cond_36416 = unsign_arg_36415 == 1;
                bool x_36417 = !cond_36416;
                bool y_36418 = cond_f_res_36296 && x_36417;
                bool cond_36419 = cond_36416 || y_36418;
                int32_t defunc_1_get_bit_res_36420;
                
                if (cond_36419) {
                    int32_t defunc_1_get_bit_res_t_res_36421 = 1 ^
                            unsign_arg_36413;
                    
                    defunc_1_get_bit_res_36420 =
                        defunc_1_get_bit_res_t_res_36421;
                } else {
                    defunc_1_get_bit_res_36420 = unsign_arg_36413;
                }
                
                int32_t x_36422 = mul32(2, defunc_1_get_bit_res_36420);
                int32_t unsign_arg_36423 = ashr32(i32_arg_36411,
                                                  defunc_2_radix_sort_step_arg_36294);
                int32_t unsign_arg_36424 = 1 & unsign_arg_36423;
                bool y_36425 = cond_f_res_36297 && x_36417;
                bool cond_36426 = cond_36416 || y_36425;
                int32_t defunc_1_get_bit_res_36427;
                
                if (cond_36426) {
                    int32_t defunc_1_get_bit_res_t_res_36428 = 1 ^
                            unsign_arg_36424;
                    
                    defunc_1_get_bit_res_36427 =
                        defunc_1_get_bit_res_t_res_36428;
                } else {
                    defunc_1_get_bit_res_36427 = unsign_arg_36424;
                }
                
                int32_t defunc_0_f_res_36429 = add32(x_36422,
                                                     defunc_1_get_bit_res_36427);
                bool cond_36430 = defunc_0_f_res_36429 == 0;
                int64_t defunc_0_f_res_36431 = btoi_bool_i64(cond_36430);
                int64_t defunc_0_f_res_36432;
                int64_t defunc_0_f_res_36433;
                int64_t defunc_0_f_res_36434;
                
                if (cond_36430) {
                    defunc_0_f_res_36432 = 0;
                    defunc_0_f_res_36433 = 0;
                    defunc_0_f_res_36434 = 0;
                } else {
                    bool cond_36435 = defunc_0_f_res_36429 == 1;
                    int64_t defunc_0_f_res_f_res_36436 =
                            btoi_bool_i64(cond_36435);
                    int64_t defunc_0_f_res_f_res_36437;
                    int64_t defunc_0_f_res_f_res_36438;
                    
                    if (cond_36435) {
                        defunc_0_f_res_f_res_36437 = 0;
                        defunc_0_f_res_f_res_36438 = 0;
                    } else {
                        bool cond_36439 = defunc_0_f_res_36429 == 2;
                        int64_t defunc_0_f_res_f_res_f_res_36440 =
                                btoi_bool_i64(cond_36439);
                        bool cond_neg_36441 = !cond_36439;
                        int64_t defunc_0_f_res_f_res_f_res_36442 =
                                btoi_bool_i64(cond_neg_36441);
                        
                        defunc_0_f_res_f_res_36437 =
                            defunc_0_f_res_f_res_f_res_36440;
                        defunc_0_f_res_f_res_36438 =
                            defunc_0_f_res_f_res_f_res_36442;
                    }
                    defunc_0_f_res_36432 = defunc_0_f_res_f_res_36436;
                    defunc_0_f_res_36433 = defunc_0_f_res_f_res_36437;
                    defunc_0_f_res_36434 = defunc_0_f_res_f_res_36438;
                }
                // write to-scan values to parameters
                {
                    x_36401 = defunc_0_f_res_36431;
                    x_36402 = defunc_0_f_res_36432;
                    x_36403 = defunc_0_f_res_36433;
                    x_36404 = defunc_0_f_res_36434;
                }
                // write mapped values results to global memory
                {
                    ((__global int32_t *) mem_44361)[gtid_35703 *
                                                     iota32_arg_30443 +
                                                     gtid_35711] =
                        defunc_0_f_res_36429;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_35703, m_30057) && slt64(gtid_35711,
                                                          iota32_arg_30443))) {
                    x_36401 = 0;
                    x_36402 = 0;
                    x_36403 = 0;
                    x_36404 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_36405 = add64(x_36397, x_36401);
                int64_t defunc_1_op_res_36406 = add64(x_36398, x_36402);
                int64_t defunc_1_op_res_36407 = add64(x_36399, x_36403);
                int64_t defunc_1_op_res_36408 = add64(x_36400, x_36404);
                
                ((__local
                  int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                    defunc_1_op_res_36405;
                ((__local
                  int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)] =
                    defunc_1_op_res_36406;
                ((__local
                  int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)] =
                    defunc_1_op_res_36407;
                ((__local
                  int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)] =
                    defunc_1_op_res_36408;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45774;
            int64_t x_45775;
            int64_t x_45776;
            int64_t x_45777;
            int64_t x_45778;
            int64_t x_45779;
            int64_t x_45780;
            int64_t x_45781;
            int64_t x_45786;
            int64_t x_45787;
            int64_t x_45788;
            int64_t x_45789;
            int64_t x_45790;
            int64_t x_45791;
            int64_t x_45792;
            int64_t x_45793;
            bool ltid_in_bounds_45798;
            
            ltid_in_bounds_45798 = slt64(sext_i32_i64(local_tid_45759),
                                         segscan_group_sizze_36389);
            
            int32_t skip_threads_45799;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45798) {
                    x_45778 = ((volatile __local
                                int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)];
                    x_45779 = ((volatile __local
                                int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)];
                    x_45780 = ((volatile __local
                                int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)];
                    x_45781 = ((volatile __local
                                int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)];
                    if ((local_tid_45759 - squot32(local_tid_45759, 32) * 32) ==
                        0) {
                        x_45774 = x_45778;
                        x_45775 = x_45779;
                        x_45776 = x_45780;
                        x_45777 = x_45781;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45799 = 1;
                while (slt32(skip_threads_45799, 32)) {
                    if (sle32(skip_threads_45799, local_tid_45759 -
                              squot32(local_tid_45759, 32) * 32) &&
                        ltid_in_bounds_45798) {
                        // read operands
                        {
                            x_45774 = ((volatile __local
                                        int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759) -
                                                                       sext_i32_i64(skip_threads_45799)];
                            x_45775 = ((volatile __local
                                        int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759) -
                                                                       sext_i32_i64(skip_threads_45799)];
                            x_45776 = ((volatile __local
                                        int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759) -
                                                                       sext_i32_i64(skip_threads_45799)];
                            x_45777 = ((volatile __local
                                        int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759) -
                                                                       sext_i32_i64(skip_threads_45799)];
                        }
                        // perform operation
                        {
                            bool inactive_45800 =
                                 slt64(srem64(sext_i32_i64(local_tid_45759) +
                                              chunk_offset_45772,
                                              iota32_arg_30443),
                                       sext_i32_i64(local_tid_45759) +
                                       chunk_offset_45772 -
                                       (sext_i32_i64(local_tid_45759 -
                                        skip_threads_45799) +
                                        chunk_offset_45772));
                            
                            if (inactive_45800) {
                                x_45774 = x_45778;
                                x_45775 = x_45779;
                                x_45776 = x_45780;
                                x_45777 = x_45781;
                            }
                            if (!inactive_45800) {
                                int64_t defunc_1_op_res_45782 = add64(x_45774,
                                                                      x_45778);
                                int64_t defunc_1_op_res_45783 = add64(x_45775,
                                                                      x_45779);
                                int64_t defunc_1_op_res_45784 = add64(x_45776,
                                                                      x_45780);
                                int64_t defunc_1_op_res_45785 = add64(x_45777,
                                                                      x_45781);
                                
                                x_45774 = defunc_1_op_res_45782;
                                x_45775 = defunc_1_op_res_45783;
                                x_45776 = defunc_1_op_res_45784;
                                x_45777 = defunc_1_op_res_45785;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45761, skip_threads_45799)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45799, local_tid_45759 -
                              squot32(local_tid_45759, 32) * 32) &&
                        ltid_in_bounds_45798) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                                x_45774;
                            x_45778 = x_45774;
                            ((volatile __local
                              int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)] =
                                x_45775;
                            x_45779 = x_45775;
                            ((volatile __local
                              int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)] =
                                x_45776;
                            x_45780 = x_45776;
                            ((volatile __local
                              int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)] =
                                x_45777;
                            x_45781 = x_45777;
                        }
                    }
                    if (sle32(wave_sizze_45761, skip_threads_45799)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45799 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45759 - squot32(local_tid_45759, 32) * 32) ==
                    31 && ltid_in_bounds_45798) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45763)[sext_i32_i64(squot32(local_tid_45759,
                                                                          32))] =
                        x_45774;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45765)[sext_i32_i64(squot32(local_tid_45759,
                                                                          32))] =
                        x_45775;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45767)[sext_i32_i64(squot32(local_tid_45759,
                                                                          32))] =
                        x_45776;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45769)[sext_i32_i64(squot32(local_tid_45759,
                                                                          32))] =
                        x_45777;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45801;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45759, 32) == 0 &&
                        ltid_in_bounds_45798) {
                        x_45790 = ((volatile __local
                                    int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)];
                        x_45791 = ((volatile __local
                                    int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)];
                        x_45792 = ((volatile __local
                                    int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)];
                        x_45793 = ((volatile __local
                                    int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)];
                        if ((local_tid_45759 - squot32(local_tid_45759, 32) *
                             32) == 0) {
                            x_45786 = x_45790;
                            x_45787 = x_45791;
                            x_45788 = x_45792;
                            x_45789 = x_45793;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45801 = 1;
                    while (slt32(skip_threads_45801, 32)) {
                        if (sle32(skip_threads_45801, local_tid_45759 -
                                  squot32(local_tid_45759, 32) * 32) &&
                            (squot32(local_tid_45759, 32) == 0 &&
                             ltid_in_bounds_45798)) {
                            // read operands
                            {
                                x_45786 = ((volatile __local
                                            int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759) -
                                                                           sext_i32_i64(skip_threads_45801)];
                                x_45787 = ((volatile __local
                                            int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759) -
                                                                           sext_i32_i64(skip_threads_45801)];
                                x_45788 = ((volatile __local
                                            int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759) -
                                                                           sext_i32_i64(skip_threads_45801)];
                                x_45789 = ((volatile __local
                                            int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759) -
                                                                           sext_i32_i64(skip_threads_45801)];
                            }
                            // perform operation
                            {
                                bool inactive_45802 =
                                     slt64(srem64(sext_i32_i64(local_tid_45759 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45772,
                                                  iota32_arg_30443),
                                           sext_i32_i64(local_tid_45759 * 32 +
                                           32 - 1) + chunk_offset_45772 -
                                           (sext_i32_i64((local_tid_45759 -
                                                          skip_threads_45801) *
                                            32 + 32 - 1) + chunk_offset_45772));
                                
                                if (inactive_45802) {
                                    x_45786 = x_45790;
                                    x_45787 = x_45791;
                                    x_45788 = x_45792;
                                    x_45789 = x_45793;
                                }
                                if (!inactive_45802) {
                                    int64_t defunc_1_op_res_45794 =
                                            add64(x_45786, x_45790);
                                    int64_t defunc_1_op_res_45795 =
                                            add64(x_45787, x_45791);
                                    int64_t defunc_1_op_res_45796 =
                                            add64(x_45788, x_45792);
                                    int64_t defunc_1_op_res_45797 =
                                            add64(x_45789, x_45793);
                                    
                                    x_45786 = defunc_1_op_res_45794;
                                    x_45787 = defunc_1_op_res_45795;
                                    x_45788 = defunc_1_op_res_45796;
                                    x_45789 = defunc_1_op_res_45797;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45761, skip_threads_45801)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45801, local_tid_45759 -
                                  squot32(local_tid_45759, 32) * 32) &&
                            (squot32(local_tid_45759, 32) == 0 &&
                             ltid_in_bounds_45798)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                                    x_45786;
                                x_45790 = x_45786;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)] =
                                    x_45787;
                                x_45791 = x_45787;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)] =
                                    x_45788;
                                x_45792 = x_45788;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)] =
                                    x_45789;
                                x_45793 = x_45789;
                            }
                        }
                        if (sle32(wave_sizze_45761, skip_threads_45801)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45801 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45759, 32) == 0 ||
                      !ltid_in_bounds_45798)) {
                    // read operands
                    {
                        x_45778 = x_45774;
                        x_45779 = x_45775;
                        x_45780 = x_45776;
                        x_45781 = x_45777;
                        x_45774 = ((__local
                                    int64_t *) scan_arr_mem_45763)[sext_i32_i64(squot32(local_tid_45759,
                                                                                        32)) -
                                                                   1];
                        x_45775 = ((__local
                                    int64_t *) scan_arr_mem_45765)[sext_i32_i64(squot32(local_tid_45759,
                                                                                        32)) -
                                                                   1];
                        x_45776 = ((__local
                                    int64_t *) scan_arr_mem_45767)[sext_i32_i64(squot32(local_tid_45759,
                                                                                        32)) -
                                                                   1];
                        x_45777 = ((__local
                                    int64_t *) scan_arr_mem_45769)[sext_i32_i64(squot32(local_tid_45759,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45803 =
                             slt64(srem64(sext_i32_i64(local_tid_45759) +
                                          chunk_offset_45772, iota32_arg_30443),
                                   sext_i32_i64(local_tid_45759) +
                                   chunk_offset_45772 -
                                   (sext_i32_i64(squot32(local_tid_45759, 32) *
                                    32 - 1) + chunk_offset_45772));
                        
                        if (inactive_45803) {
                            x_45774 = x_45778;
                            x_45775 = x_45779;
                            x_45776 = x_45780;
                            x_45777 = x_45781;
                        }
                        if (!inactive_45803) {
                            int64_t defunc_1_op_res_45782 = add64(x_45774,
                                                                  x_45778);
                            int64_t defunc_1_op_res_45783 = add64(x_45775,
                                                                  x_45779);
                            int64_t defunc_1_op_res_45784 = add64(x_45776,
                                                                  x_45780);
                            int64_t defunc_1_op_res_45785 = add64(x_45777,
                                                                  x_45781);
                            
                            x_45774 = defunc_1_op_res_45782;
                            x_45775 = defunc_1_op_res_45783;
                            x_45776 = defunc_1_op_res_45784;
                            x_45777 = defunc_1_op_res_45785;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                            x_45774;
                        ((__local
                          int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)] =
                            x_45775;
                        ((__local
                          int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)] =
                            x_45776;
                        ((__local
                          int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)] =
                            x_45777;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45759, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                        x_45778;
                    ((__local
                      int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)] =
                        x_45779;
                    ((__local
                      int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)] =
                        x_45780;
                    ((__local
                      int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)] =
                        x_45781;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_35703, m_30057) && slt64(gtid_35711,
                                                        iota32_arg_30443)) {
                    ((__global int64_t *) mem_44349)[gtid_35703 *
                                                     iota32_arg_30443 +
                                                     gtid_35711] = ((__local
                                                                     int64_t *) scan_arr_mem_45763)[sext_i32_i64(local_tid_45759)];
                    ((__global int64_t *) mem_44352)[gtid_35703 *
                                                     iota32_arg_30443 +
                                                     gtid_35711] = ((__local
                                                                     int64_t *) scan_arr_mem_45765)[sext_i32_i64(local_tid_45759)];
                    ((__global int64_t *) mem_44355)[gtid_35703 *
                                                     iota32_arg_30443 +
                                                     gtid_35711] = ((__local
                                                                     int64_t *) scan_arr_mem_45767)[sext_i32_i64(local_tid_45759)];
                    ((__global int64_t *) mem_44358)[gtid_35703 *
                                                     iota32_arg_30443 +
                                                     gtid_35711] = ((__local
                                                                     int64_t *) scan_arr_mem_45769)[sext_i32_i64(local_tid_45759)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45804 = slt64(srem64(chunk_offset_45772 +
                                                          segscan_group_sizze_36389,
                                                          iota32_arg_30443),
                                                   chunk_offset_45772 +
                                                   segscan_group_sizze_36389 -
                                                   (chunk_offset_45772 +
                                                    segscan_group_sizze_36389 -
                                                    1));
                bool should_load_carry_45805 = local_tid_45759 == 0 &&
                     !crosses_segment_45804;
                
                if (should_load_carry_45805) {
                    x_36397 = ((__local
                                int64_t *) scan_arr_mem_45763)[segscan_group_sizze_36389 -
                                                               1];
                    x_36398 = ((__local
                                int64_t *) scan_arr_mem_45765)[segscan_group_sizze_36389 -
                                                               1];
                    x_36399 = ((__local
                                int64_t *) scan_arr_mem_45767)[segscan_group_sizze_36389 -
                                                               1];
                    x_36400 = ((__local
                                int64_t *) scan_arr_mem_45769)[segscan_group_sizze_36389 -
                                                               1];
                }
                if (!should_load_carry_45805) {
                    x_36397 = 0;
                    x_36398 = 0;
                    x_36399 = 0;
                    x_36400 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36389
}
__kernel void mainDetailedziscan_stage1_36067(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45563_backing_aligned_0,
                                              int64_t N_30056, int64_t m_30057,
                                              int64_t iota32_arg_30443, __global
                                              unsigned char *defunc_4_map_res_mem_43943,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44022,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44023,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_44073,
                                              __global unsigned char *mem_44288,
                                              __global unsigned char *mem_44292,
                                              int32_t num_threads_45557)
{
    #define segscan_group_sizze_36145 (mainDetailedzisegscan_group_sizze_36061)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45563_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45563_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45558;
    int32_t local_tid_45559;
    int64_t group_sizze_45562;
    int32_t wave_sizze_45561;
    int32_t group_tid_45560;
    
    global_tid_45558 = get_global_id(0);
    local_tid_45559 = get_local_id(0);
    group_sizze_45562 = get_local_size(0);
    wave_sizze_45561 = LOCKSTEP_WIDTH;
    group_tid_45560 = get_group_id(0);
    
    int32_t phys_tid_36067;
    
    phys_tid_36067 = global_tid_45558;
    
    __local char *scan_arr_mem_45563;
    
    scan_arr_mem_45563 = (__local char *) scan_arr_mem_45563_backing_0;
    
    float x_36149;
    float x_36150;
    
    x_36149 = 0.0F;
    for (int64_t j_45565 = 0; j_45565 < sdiv_up64(m_30057 * iota32_arg_30443,
                                                  sext_i32_i64(num_threads_45557));
         j_45565++) {
        int64_t chunk_offset_45566 = segscan_group_sizze_36145 * j_45565 +
                sext_i32_i64(group_tid_45560) * (segscan_group_sizze_36145 *
                                                 sdiv_up64(m_30057 *
                                                           iota32_arg_30443,
                                                           sext_i32_i64(num_threads_45557)));
        int64_t flat_idx_45567 = chunk_offset_45566 +
                sext_i32_i64(local_tid_45559);
        int64_t gtid_36058 = squot64(flat_idx_45567, iota32_arg_30443);
        int64_t gtid_36066 = flat_idx_45567 - squot64(flat_idx_45567,
                                                      iota32_arg_30443) *
                iota32_arg_30443;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36058, m_30057) && slt64(gtid_36066,
                                                    iota32_arg_30443)) {
                int32_t y_36156 = ((__global int32_t *) mem_44288)[gtid_36058];
                int32_t index_primexp_41478 = sext_i64_i32(gtid_36066);
                bool cond_36159 = sle32(y_36156, index_primexp_41478);
                float defunc_0_f_res_36160;
                
                if (cond_36159) {
                    defunc_0_f_res_36160 = 0.0F;
                } else {
                    int32_t x_36152 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44023)[gtid_36058];
                    int32_t x_36153 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44022)[gtid_36058];
                    float x_36154 = ((__global
                                      float *) defunc_0_f_res_mem_44073)[gtid_36058];
                    bool cond_36161 = index_primexp_41478 == 0;
                    float defunc_0_f_res_f_res_36162;
                    
                    if (cond_36161) {
                        defunc_0_f_res_f_res_36162 = x_36154;
                    } else {
                        int32_t i_36163 = add32(x_36152, index_primexp_41478);
                        int64_t i_36164 = sext_i32_i64(i_36163);
                        float x_36165 = ((__global
                                          float *) defunc_4_map_res_mem_43943)[gtid_36058 *
                                                                               N_30056 +
                                                                               i_36164];
                        int32_t x_36166 = sub32(x_36152, x_36153);
                        int32_t i_36167 = add32(x_36166, index_primexp_41478);
                        int64_t i_36168 = sext_i32_i64(i_36167);
                        float y_36169 = ((__global
                                          float *) defunc_4_map_res_mem_43943)[gtid_36058 *
                                                                               N_30056 +
                                                                               i_36168];
                        float defunc_0_f_res_f_res_f_res_36170 = x_36165 -
                              y_36169;
                        
                        defunc_0_f_res_f_res_36162 =
                            defunc_0_f_res_f_res_f_res_36170;
                    }
                    defunc_0_f_res_36160 = defunc_0_f_res_f_res_36162;
                }
                // write to-scan values to parameters
                {
                    x_36150 = defunc_0_f_res_36160;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36058, m_30057) && slt64(gtid_36066,
                                                          iota32_arg_30443))) {
                    x_36150 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_36151 = x_36149 + x_36150;
                
                ((__local
                  float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)] =
                    defunc_1_op_res_36151;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45568;
            float x_45569;
            float x_45571;
            float x_45572;
            bool ltid_in_bounds_45574;
            
            ltid_in_bounds_45574 = slt64(sext_i32_i64(local_tid_45559),
                                         segscan_group_sizze_36145);
            
            int32_t skip_threads_45575;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45574) {
                    x_45569 = ((volatile __local
                                float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)];
                    if ((local_tid_45559 - squot32(local_tid_45559, 32) * 32) ==
                        0) {
                        x_45568 = x_45569;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45575 = 1;
                while (slt32(skip_threads_45575, 32)) {
                    if (sle32(skip_threads_45575, local_tid_45559 -
                              squot32(local_tid_45559, 32) * 32) &&
                        ltid_in_bounds_45574) {
                        // read operands
                        {
                            x_45568 = ((volatile __local
                                        float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559) -
                                                                     sext_i32_i64(skip_threads_45575)];
                        }
                        // perform operation
                        {
                            bool inactive_45576 =
                                 slt64(srem64(sext_i32_i64(local_tid_45559) +
                                              chunk_offset_45566,
                                              iota32_arg_30443),
                                       sext_i32_i64(local_tid_45559) +
                                       chunk_offset_45566 -
                                       (sext_i32_i64(local_tid_45559 -
                                        skip_threads_45575) +
                                        chunk_offset_45566));
                            
                            if (inactive_45576) {
                                x_45568 = x_45569;
                            }
                            if (!inactive_45576) {
                                float defunc_1_op_res_45570 = x_45568 + x_45569;
                                
                                x_45568 = defunc_1_op_res_45570;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45561, skip_threads_45575)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45575, local_tid_45559 -
                              squot32(local_tid_45559, 32) * 32) &&
                        ltid_in_bounds_45574) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)] =
                                x_45568;
                            x_45569 = x_45568;
                        }
                    }
                    if (sle32(wave_sizze_45561, skip_threads_45575)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45575 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45559 - squot32(local_tid_45559, 32) * 32) ==
                    31 && ltid_in_bounds_45574) {
                    ((volatile __local
                      float *) scan_arr_mem_45563)[sext_i32_i64(squot32(local_tid_45559,
                                                                        32))] =
                        x_45568;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45577;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45559, 32) == 0 &&
                        ltid_in_bounds_45574) {
                        x_45572 = ((volatile __local
                                    float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)];
                        if ((local_tid_45559 - squot32(local_tid_45559, 32) *
                             32) == 0) {
                            x_45571 = x_45572;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45577 = 1;
                    while (slt32(skip_threads_45577, 32)) {
                        if (sle32(skip_threads_45577, local_tid_45559 -
                                  squot32(local_tid_45559, 32) * 32) &&
                            (squot32(local_tid_45559, 32) == 0 &&
                             ltid_in_bounds_45574)) {
                            // read operands
                            {
                                x_45571 = ((volatile __local
                                            float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559) -
                                                                         sext_i32_i64(skip_threads_45577)];
                            }
                            // perform operation
                            {
                                bool inactive_45578 =
                                     slt64(srem64(sext_i32_i64(local_tid_45559 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45566,
                                                  iota32_arg_30443),
                                           sext_i32_i64(local_tid_45559 * 32 +
                                           32 - 1) + chunk_offset_45566 -
                                           (sext_i32_i64((local_tid_45559 -
                                                          skip_threads_45577) *
                                            32 + 32 - 1) + chunk_offset_45566));
                                
                                if (inactive_45578) {
                                    x_45571 = x_45572;
                                }
                                if (!inactive_45578) {
                                    float defunc_1_op_res_45573 = x_45571 +
                                          x_45572;
                                    
                                    x_45571 = defunc_1_op_res_45573;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45561, skip_threads_45577)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45577, local_tid_45559 -
                                  squot32(local_tid_45559, 32) * 32) &&
                            (squot32(local_tid_45559, 32) == 0 &&
                             ltid_in_bounds_45574)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)] =
                                    x_45571;
                                x_45572 = x_45571;
                            }
                        }
                        if (sle32(wave_sizze_45561, skip_threads_45577)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45577 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45559, 32) == 0 ||
                      !ltid_in_bounds_45574)) {
                    // read operands
                    {
                        x_45569 = x_45568;
                        x_45568 = ((__local
                                    float *) scan_arr_mem_45563)[sext_i32_i64(squot32(local_tid_45559,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45579 =
                             slt64(srem64(sext_i32_i64(local_tid_45559) +
                                          chunk_offset_45566, iota32_arg_30443),
                                   sext_i32_i64(local_tid_45559) +
                                   chunk_offset_45566 -
                                   (sext_i32_i64(squot32(local_tid_45559, 32) *
                                    32 - 1) + chunk_offset_45566));
                        
                        if (inactive_45579) {
                            x_45568 = x_45569;
                        }
                        if (!inactive_45579) {
                            float defunc_1_op_res_45570 = x_45568 + x_45569;
                            
                            x_45568 = defunc_1_op_res_45570;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)] =
                            x_45568;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45559, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)] =
                        x_45569;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36058, m_30057) && slt64(gtid_36066,
                                                        iota32_arg_30443)) {
                    ((__global float *) mem_44292)[gtid_36058 *
                                                   iota32_arg_30443 +
                                                   gtid_36066] = ((__local
                                                                   float *) scan_arr_mem_45563)[sext_i32_i64(local_tid_45559)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45580 = slt64(srem64(chunk_offset_45566 +
                                                          segscan_group_sizze_36145,
                                                          iota32_arg_30443),
                                                   chunk_offset_45566 +
                                                   segscan_group_sizze_36145 -
                                                   (chunk_offset_45566 +
                                                    segscan_group_sizze_36145 -
                                                    1));
                bool should_load_carry_45581 = local_tid_45559 == 0 &&
                     !crosses_segment_45580;
                
                if (should_load_carry_45581) {
                    x_36149 = ((__local
                                float *) scan_arr_mem_45563)[segscan_group_sizze_36145 -
                                                             1];
                }
                if (!should_load_carry_45581) {
                    x_36149 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36145
}
__kernel void mainDetailedziscan_stage2_33926(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45160_backing_aligned_0,
                                              int64_t N_30056, int64_t m_30057,
                                              __global unsigned char *mem_43934,
                                              int64_t stage1_num_groups_45129,
                                              int32_t num_threads_45130)
{
    #define segscan_group_sizze_33943 (mainDetailedzisegscan_group_sizze_33920)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45160_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45160_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45155;
    int32_t local_tid_45156;
    int64_t group_sizze_45159;
    int32_t wave_sizze_45158;
    int32_t group_tid_45157;
    
    global_tid_45155 = get_global_id(0);
    local_tid_45156 = get_local_id(0);
    group_sizze_45159 = get_local_size(0);
    wave_sizze_45158 = LOCKSTEP_WIDTH;
    group_tid_45157 = get_group_id(0);
    
    int32_t phys_tid_33926;
    
    phys_tid_33926 = global_tid_45155;
    
    __local char *scan_arr_mem_45160;
    
    scan_arr_mem_45160 = (__local char *) scan_arr_mem_45160_backing_0;
    
    int64_t flat_idx_45162;
    
    flat_idx_45162 = (sext_i32_i64(local_tid_45156) + 1) *
        (segscan_group_sizze_33943 * sdiv_up64(m_30057 * N_30056,
                                               sext_i32_i64(num_threads_45130))) -
        1;
    
    int64_t gtid_33917;
    
    gtid_33917 = squot64(flat_idx_45162, N_30056);
    
    int64_t gtid_33925;
    
    gtid_33925 = flat_idx_45162 - squot64(flat_idx_45162, N_30056) * N_30056;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_33917, m_30057) && slt64(gtid_33925, N_30056)) {
            ((__local
              int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                ((__global int64_t *) mem_43934)[gtid_33917 * N_30056 +
                                                 gtid_33925];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_33948;
    int64_t x_33949;
    int64_t x_45163;
    int64_t x_45164;
    bool ltid_in_bounds_45166;
    
    ltid_in_bounds_45166 = slt64(sext_i32_i64(local_tid_45156),
                                 stage1_num_groups_45129);
    
    int32_t skip_threads_45167;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45166) {
            x_33949 = ((volatile __local
                        int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)];
            if ((local_tid_45156 - squot32(local_tid_45156, 32) * 32) == 0) {
                x_33948 = x_33949;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45167 = 1;
        while (slt32(skip_threads_45167, 32)) {
            if (sle32(skip_threads_45167, local_tid_45156 -
                      squot32(local_tid_45156, 32) * 32) &&
                ltid_in_bounds_45166) {
                // read operands
                {
                    x_33948 = ((volatile __local
                                int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156) -
                                                               sext_i32_i64(skip_threads_45167)];
                }
                // perform operation
                {
                    bool inactive_45168 =
                         slt64(srem64((sext_i32_i64(local_tid_45156) + 1) *
                                      (segscan_group_sizze_33943 *
                                       sdiv_up64(m_30057 * N_30056,
                                                 sext_i32_i64(num_threads_45130))) -
                                      1, N_30056),
                               (sext_i32_i64(local_tid_45156) + 1) *
                               (segscan_group_sizze_33943 * sdiv_up64(m_30057 *
                                                                      N_30056,
                                                                      sext_i32_i64(num_threads_45130))) -
                               1 - ((sext_i32_i64(local_tid_45156 -
                                     skip_threads_45167) + 1) *
                                    (segscan_group_sizze_33943 *
                                     sdiv_up64(m_30057 * N_30056,
                                               sext_i32_i64(num_threads_45130))) -
                                    1));
                    
                    if (inactive_45168) {
                        x_33948 = x_33949;
                    }
                    if (!inactive_45168) {
                        int64_t defunc_1_op_res_33950 = add64(x_33948, x_33949);
                        
                        x_33948 = defunc_1_op_res_33950;
                    }
                }
            }
            if (sle32(wave_sizze_45158, skip_threads_45167)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45167, local_tid_45156 -
                      squot32(local_tid_45156, 32) * 32) &&
                ltid_in_bounds_45166) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                        x_33948;
                    x_33949 = x_33948;
                }
            }
            if (sle32(wave_sizze_45158, skip_threads_45167)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45167 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45156 - squot32(local_tid_45156, 32) * 32) == 31 &&
            ltid_in_bounds_45166) {
            ((volatile __local
              int64_t *) scan_arr_mem_45160)[sext_i32_i64(squot32(local_tid_45156,
                                                                  32))] =
                x_33948;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45169;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45156, 32) == 0 && ltid_in_bounds_45166) {
                x_45164 = ((volatile __local
                            int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)];
                if ((local_tid_45156 - squot32(local_tid_45156, 32) * 32) ==
                    0) {
                    x_45163 = x_45164;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45169 = 1;
            while (slt32(skip_threads_45169, 32)) {
                if (sle32(skip_threads_45169, local_tid_45156 -
                          squot32(local_tid_45156, 32) * 32) &&
                    (squot32(local_tid_45156, 32) == 0 &&
                     ltid_in_bounds_45166)) {
                    // read operands
                    {
                        x_45163 = ((volatile __local
                                    int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156) -
                                                                   sext_i32_i64(skip_threads_45169)];
                    }
                    // perform operation
                    {
                        bool inactive_45170 =
                             slt64(srem64((sext_i32_i64(local_tid_45156 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_33943 *
                                           sdiv_up64(m_30057 * N_30056,
                                                     sext_i32_i64(num_threads_45130))) -
                                          1, N_30056),
                                   (sext_i32_i64(local_tid_45156 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_33943 *
                                               sdiv_up64(m_30057 * N_30056,
                                                         sext_i32_i64(num_threads_45130))) -
                                   1 - ((sext_i32_i64((local_tid_45156 -
                                                       skip_threads_45169) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_33943 *
                                         sdiv_up64(m_30057 * N_30056,
                                                   sext_i32_i64(num_threads_45130))) -
                                        1));
                        
                        if (inactive_45170) {
                            x_45163 = x_45164;
                        }
                        if (!inactive_45170) {
                            int64_t defunc_1_op_res_45165 = add64(x_45163,
                                                                  x_45164);
                            
                            x_45163 = defunc_1_op_res_45165;
                        }
                    }
                }
                if (sle32(wave_sizze_45158, skip_threads_45169)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45169, local_tid_45156 -
                          squot32(local_tid_45156, 32) * 32) &&
                    (squot32(local_tid_45156, 32) == 0 &&
                     ltid_in_bounds_45166)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                            x_45163;
                        x_45164 = x_45163;
                    }
                }
                if (sle32(wave_sizze_45158, skip_threads_45169)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45169 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45156, 32) == 0 || !ltid_in_bounds_45166)) {
            // read operands
            {
                x_33949 = x_33948;
                x_33948 = ((__local
                            int64_t *) scan_arr_mem_45160)[sext_i32_i64(squot32(local_tid_45156,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45171 =
                     slt64(srem64((sext_i32_i64(local_tid_45156) + 1) *
                                  (segscan_group_sizze_33943 *
                                   sdiv_up64(m_30057 * N_30056,
                                             sext_i32_i64(num_threads_45130))) -
                                  1, N_30056), (sext_i32_i64(local_tid_45156) +
                                                1) *
                           (segscan_group_sizze_33943 * sdiv_up64(m_30057 *
                                                                  N_30056,
                                                                  sext_i32_i64(num_threads_45130))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45156, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_33943 *
                                                 sdiv_up64(m_30057 * N_30056,
                                                           sext_i32_i64(num_threads_45130))) -
                                1));
                
                if (inactive_45171) {
                    x_33948 = x_33949;
                }
                if (!inactive_45171) {
                    int64_t defunc_1_op_res_33950 = add64(x_33948, x_33949);
                    
                    x_33948 = defunc_1_op_res_33950;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                    x_33948;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45156, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                x_33949;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_33917, m_30057) && slt64(gtid_33925, N_30056)) {
            ((__global int64_t *) mem_43934)[gtid_33917 * N_30056 +
                                             gtid_33925] = ((__local
                                                             int64_t *) scan_arr_mem_45160)[sext_i32_i64(local_tid_45156)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33943
}
__kernel void mainDetailedziscan_stage2_35712(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45817_backing_aligned_0,
                                              __local volatile
                                              int64_t *scan_arr_mem_45815_backing_aligned_1,
                                              __local volatile
                                              int64_t *scan_arr_mem_45813_backing_aligned_2,
                                              __local volatile
                                              int64_t *scan_arr_mem_45811_backing_aligned_3,
                                              int64_t m_30057,
                                              int64_t iota32_arg_30443, __global
                                              unsigned char *mem_44349, __global
                                              unsigned char *mem_44352, __global
                                              unsigned char *mem_44355, __global
                                              unsigned char *mem_44358,
                                              int64_t stage1_num_groups_45756,
                                              int32_t num_threads_45757)
{
    #define segscan_group_sizze_36389 (mainDetailedzisegscan_group_sizze_35706)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45817_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_45817_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_45815_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_45815_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_45813_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_45813_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_45811_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45811_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45806;
    int32_t local_tid_45807;
    int64_t group_sizze_45810;
    int32_t wave_sizze_45809;
    int32_t group_tid_45808;
    
    global_tid_45806 = get_global_id(0);
    local_tid_45807 = get_local_id(0);
    group_sizze_45810 = get_local_size(0);
    wave_sizze_45809 = LOCKSTEP_WIDTH;
    group_tid_45808 = get_group_id(0);
    
    int32_t phys_tid_35712;
    
    phys_tid_35712 = global_tid_45806;
    
    __local char *scan_arr_mem_45811;
    __local char *scan_arr_mem_45813;
    __local char *scan_arr_mem_45815;
    __local char *scan_arr_mem_45817;
    
    scan_arr_mem_45811 = (__local char *) scan_arr_mem_45811_backing_0;
    scan_arr_mem_45813 = (__local char *) scan_arr_mem_45813_backing_1;
    scan_arr_mem_45815 = (__local char *) scan_arr_mem_45815_backing_2;
    scan_arr_mem_45817 = (__local char *) scan_arr_mem_45817_backing_3;
    
    int64_t flat_idx_45819;
    
    flat_idx_45819 = (sext_i32_i64(local_tid_45807) + 1) *
        (segscan_group_sizze_36389 * sdiv_up64(m_30057 * iota32_arg_30443,
                                               sext_i32_i64(num_threads_45757))) -
        1;
    
    int64_t gtid_35703;
    
    gtid_35703 = squot64(flat_idx_45819, iota32_arg_30443);
    
    int64_t gtid_35711;
    
    gtid_35711 = flat_idx_45819 - squot64(flat_idx_45819, iota32_arg_30443) *
        iota32_arg_30443;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_35703, m_30057) && slt64(gtid_35711, iota32_arg_30443)) {
            ((__local
              int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)] =
                ((__global int64_t *) mem_44349)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711];
            ((__local
              int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)] =
                ((__global int64_t *) mem_44352)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711];
            ((__local
              int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)] =
                ((__global int64_t *) mem_44355)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711];
            ((__local
              int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)] =
                ((__global int64_t *) mem_44358)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)] = 0;
            ((__local
              int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)] = 0;
            ((__local
              int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)] = 0;
            ((__local
              int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_36397;
    int64_t x_36398;
    int64_t x_36399;
    int64_t x_36400;
    int64_t x_36401;
    int64_t x_36402;
    int64_t x_36403;
    int64_t x_36404;
    int64_t x_45820;
    int64_t x_45821;
    int64_t x_45822;
    int64_t x_45823;
    int64_t x_45824;
    int64_t x_45825;
    int64_t x_45826;
    int64_t x_45827;
    bool ltid_in_bounds_45832;
    
    ltid_in_bounds_45832 = slt64(sext_i32_i64(local_tid_45807),
                                 stage1_num_groups_45756);
    
    int32_t skip_threads_45833;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45832) {
            x_36401 = ((volatile __local
                        int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)];
            x_36402 = ((volatile __local
                        int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)];
            x_36403 = ((volatile __local
                        int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)];
            x_36404 = ((volatile __local
                        int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)];
            if ((local_tid_45807 - squot32(local_tid_45807, 32) * 32) == 0) {
                x_36397 = x_36401;
                x_36398 = x_36402;
                x_36399 = x_36403;
                x_36400 = x_36404;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45833 = 1;
        while (slt32(skip_threads_45833, 32)) {
            if (sle32(skip_threads_45833, local_tid_45807 -
                      squot32(local_tid_45807, 32) * 32) &&
                ltid_in_bounds_45832) {
                // read operands
                {
                    x_36397 = ((volatile __local
                                int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807) -
                                                               sext_i32_i64(skip_threads_45833)];
                    x_36398 = ((volatile __local
                                int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807) -
                                                               sext_i32_i64(skip_threads_45833)];
                    x_36399 = ((volatile __local
                                int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807) -
                                                               sext_i32_i64(skip_threads_45833)];
                    x_36400 = ((volatile __local
                                int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807) -
                                                               sext_i32_i64(skip_threads_45833)];
                }
                // perform operation
                {
                    bool inactive_45834 =
                         slt64(srem64((sext_i32_i64(local_tid_45807) + 1) *
                                      (segscan_group_sizze_36389 *
                                       sdiv_up64(m_30057 * iota32_arg_30443,
                                                 sext_i32_i64(num_threads_45757))) -
                                      1, iota32_arg_30443),
                               (sext_i32_i64(local_tid_45807) + 1) *
                               (segscan_group_sizze_36389 * sdiv_up64(m_30057 *
                                                                      iota32_arg_30443,
                                                                      sext_i32_i64(num_threads_45757))) -
                               1 - ((sext_i32_i64(local_tid_45807 -
                                     skip_threads_45833) + 1) *
                                    (segscan_group_sizze_36389 *
                                     sdiv_up64(m_30057 * iota32_arg_30443,
                                               sext_i32_i64(num_threads_45757))) -
                                    1));
                    
                    if (inactive_45834) {
                        x_36397 = x_36401;
                        x_36398 = x_36402;
                        x_36399 = x_36403;
                        x_36400 = x_36404;
                    }
                    if (!inactive_45834) {
                        int64_t defunc_1_op_res_36405 = add64(x_36397, x_36401);
                        int64_t defunc_1_op_res_36406 = add64(x_36398, x_36402);
                        int64_t defunc_1_op_res_36407 = add64(x_36399, x_36403);
                        int64_t defunc_1_op_res_36408 = add64(x_36400, x_36404);
                        
                        x_36397 = defunc_1_op_res_36405;
                        x_36398 = defunc_1_op_res_36406;
                        x_36399 = defunc_1_op_res_36407;
                        x_36400 = defunc_1_op_res_36408;
                    }
                }
            }
            if (sle32(wave_sizze_45809, skip_threads_45833)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45833, local_tid_45807 -
                      squot32(local_tid_45807, 32) * 32) &&
                ltid_in_bounds_45832) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)] =
                        x_36397;
                    x_36401 = x_36397;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)] =
                        x_36398;
                    x_36402 = x_36398;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)] =
                        x_36399;
                    x_36403 = x_36399;
                    ((volatile __local
                      int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)] =
                        x_36400;
                    x_36404 = x_36400;
                }
            }
            if (sle32(wave_sizze_45809, skip_threads_45833)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45833 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45807 - squot32(local_tid_45807, 32) * 32) == 31 &&
            ltid_in_bounds_45832) {
            ((volatile __local
              int64_t *) scan_arr_mem_45811)[sext_i32_i64(squot32(local_tid_45807,
                                                                  32))] =
                x_36397;
            ((volatile __local
              int64_t *) scan_arr_mem_45813)[sext_i32_i64(squot32(local_tid_45807,
                                                                  32))] =
                x_36398;
            ((volatile __local
              int64_t *) scan_arr_mem_45815)[sext_i32_i64(squot32(local_tid_45807,
                                                                  32))] =
                x_36399;
            ((volatile __local
              int64_t *) scan_arr_mem_45817)[sext_i32_i64(squot32(local_tid_45807,
                                                                  32))] =
                x_36400;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45835;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45807, 32) == 0 && ltid_in_bounds_45832) {
                x_45824 = ((volatile __local
                            int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)];
                x_45825 = ((volatile __local
                            int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)];
                x_45826 = ((volatile __local
                            int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)];
                x_45827 = ((volatile __local
                            int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)];
                if ((local_tid_45807 - squot32(local_tid_45807, 32) * 32) ==
                    0) {
                    x_45820 = x_45824;
                    x_45821 = x_45825;
                    x_45822 = x_45826;
                    x_45823 = x_45827;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45835 = 1;
            while (slt32(skip_threads_45835, 32)) {
                if (sle32(skip_threads_45835, local_tid_45807 -
                          squot32(local_tid_45807, 32) * 32) &&
                    (squot32(local_tid_45807, 32) == 0 &&
                     ltid_in_bounds_45832)) {
                    // read operands
                    {
                        x_45820 = ((volatile __local
                                    int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807) -
                                                                   sext_i32_i64(skip_threads_45835)];
                        x_45821 = ((volatile __local
                                    int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807) -
                                                                   sext_i32_i64(skip_threads_45835)];
                        x_45822 = ((volatile __local
                                    int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807) -
                                                                   sext_i32_i64(skip_threads_45835)];
                        x_45823 = ((volatile __local
                                    int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807) -
                                                                   sext_i32_i64(skip_threads_45835)];
                    }
                    // perform operation
                    {
                        bool inactive_45836 =
                             slt64(srem64((sext_i32_i64(local_tid_45807 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_36389 *
                                           sdiv_up64(m_30057 * iota32_arg_30443,
                                                     sext_i32_i64(num_threads_45757))) -
                                          1, iota32_arg_30443),
                                   (sext_i32_i64(local_tid_45807 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_36389 *
                                               sdiv_up64(m_30057 *
                                                         iota32_arg_30443,
                                                         sext_i32_i64(num_threads_45757))) -
                                   1 - ((sext_i32_i64((local_tid_45807 -
                                                       skip_threads_45835) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_36389 *
                                         sdiv_up64(m_30057 * iota32_arg_30443,
                                                   sext_i32_i64(num_threads_45757))) -
                                        1));
                        
                        if (inactive_45836) {
                            x_45820 = x_45824;
                            x_45821 = x_45825;
                            x_45822 = x_45826;
                            x_45823 = x_45827;
                        }
                        if (!inactive_45836) {
                            int64_t defunc_1_op_res_45828 = add64(x_45820,
                                                                  x_45824);
                            int64_t defunc_1_op_res_45829 = add64(x_45821,
                                                                  x_45825);
                            int64_t defunc_1_op_res_45830 = add64(x_45822,
                                                                  x_45826);
                            int64_t defunc_1_op_res_45831 = add64(x_45823,
                                                                  x_45827);
                            
                            x_45820 = defunc_1_op_res_45828;
                            x_45821 = defunc_1_op_res_45829;
                            x_45822 = defunc_1_op_res_45830;
                            x_45823 = defunc_1_op_res_45831;
                        }
                    }
                }
                if (sle32(wave_sizze_45809, skip_threads_45835)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45835, local_tid_45807 -
                          squot32(local_tid_45807, 32) * 32) &&
                    (squot32(local_tid_45807, 32) == 0 &&
                     ltid_in_bounds_45832)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)] =
                            x_45820;
                        x_45824 = x_45820;
                        ((volatile __local
                          int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)] =
                            x_45821;
                        x_45825 = x_45821;
                        ((volatile __local
                          int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)] =
                            x_45822;
                        x_45826 = x_45822;
                        ((volatile __local
                          int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)] =
                            x_45823;
                        x_45827 = x_45823;
                    }
                }
                if (sle32(wave_sizze_45809, skip_threads_45835)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45835 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45807, 32) == 0 || !ltid_in_bounds_45832)) {
            // read operands
            {
                x_36401 = x_36397;
                x_36402 = x_36398;
                x_36403 = x_36399;
                x_36404 = x_36400;
                x_36397 = ((__local
                            int64_t *) scan_arr_mem_45811)[sext_i32_i64(squot32(local_tid_45807,
                                                                                32)) -
                                                           1];
                x_36398 = ((__local
                            int64_t *) scan_arr_mem_45813)[sext_i32_i64(squot32(local_tid_45807,
                                                                                32)) -
                                                           1];
                x_36399 = ((__local
                            int64_t *) scan_arr_mem_45815)[sext_i32_i64(squot32(local_tid_45807,
                                                                                32)) -
                                                           1];
                x_36400 = ((__local
                            int64_t *) scan_arr_mem_45817)[sext_i32_i64(squot32(local_tid_45807,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45837 =
                     slt64(srem64((sext_i32_i64(local_tid_45807) + 1) *
                                  (segscan_group_sizze_36389 *
                                   sdiv_up64(m_30057 * iota32_arg_30443,
                                             sext_i32_i64(num_threads_45757))) -
                                  1, iota32_arg_30443),
                           (sext_i32_i64(local_tid_45807) + 1) *
                           (segscan_group_sizze_36389 * sdiv_up64(m_30057 *
                                                                  iota32_arg_30443,
                                                                  sext_i32_i64(num_threads_45757))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45807, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_36389 *
                                                 sdiv_up64(m_30057 *
                                                           iota32_arg_30443,
                                                           sext_i32_i64(num_threads_45757))) -
                                1));
                
                if (inactive_45837) {
                    x_36397 = x_36401;
                    x_36398 = x_36402;
                    x_36399 = x_36403;
                    x_36400 = x_36404;
                }
                if (!inactive_45837) {
                    int64_t defunc_1_op_res_36405 = add64(x_36397, x_36401);
                    int64_t defunc_1_op_res_36406 = add64(x_36398, x_36402);
                    int64_t defunc_1_op_res_36407 = add64(x_36399, x_36403);
                    int64_t defunc_1_op_res_36408 = add64(x_36400, x_36404);
                    
                    x_36397 = defunc_1_op_res_36405;
                    x_36398 = defunc_1_op_res_36406;
                    x_36399 = defunc_1_op_res_36407;
                    x_36400 = defunc_1_op_res_36408;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)] =
                    x_36397;
                ((__local
                  int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)] =
                    x_36398;
                ((__local
                  int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)] =
                    x_36399;
                ((__local
                  int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)] =
                    x_36400;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45807, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)] =
                x_36401;
            ((__local
              int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)] =
                x_36402;
            ((__local
              int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)] =
                x_36403;
            ((__local
              int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)] =
                x_36404;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_35703, m_30057) && slt64(gtid_35711, iota32_arg_30443)) {
            ((__global int64_t *) mem_44349)[gtid_35703 * iota32_arg_30443 +
                                             gtid_35711] = ((__local
                                                             int64_t *) scan_arr_mem_45811)[sext_i32_i64(local_tid_45807)];
            ((__global int64_t *) mem_44352)[gtid_35703 * iota32_arg_30443 +
                                             gtid_35711] = ((__local
                                                             int64_t *) scan_arr_mem_45813)[sext_i32_i64(local_tid_45807)];
            ((__global int64_t *) mem_44355)[gtid_35703 * iota32_arg_30443 +
                                             gtid_35711] = ((__local
                                                             int64_t *) scan_arr_mem_45815)[sext_i32_i64(local_tid_45807)];
            ((__global int64_t *) mem_44358)[gtid_35703 * iota32_arg_30443 +
                                             gtid_35711] = ((__local
                                                             int64_t *) scan_arr_mem_45817)[sext_i32_i64(local_tid_45807)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36389
}
__kernel void mainDetailedziscan_stage2_36067(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45587_backing_aligned_0,
                                              int64_t m_30057,
                                              int64_t iota32_arg_30443, __global
                                              unsigned char *mem_44292,
                                              int64_t stage1_num_groups_45556,
                                              int32_t num_threads_45557)
{
    #define segscan_group_sizze_36145 (mainDetailedzisegscan_group_sizze_36061)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45587_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45587_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45582;
    int32_t local_tid_45583;
    int64_t group_sizze_45586;
    int32_t wave_sizze_45585;
    int32_t group_tid_45584;
    
    global_tid_45582 = get_global_id(0);
    local_tid_45583 = get_local_id(0);
    group_sizze_45586 = get_local_size(0);
    wave_sizze_45585 = LOCKSTEP_WIDTH;
    group_tid_45584 = get_group_id(0);
    
    int32_t phys_tid_36067;
    
    phys_tid_36067 = global_tid_45582;
    
    __local char *scan_arr_mem_45587;
    
    scan_arr_mem_45587 = (__local char *) scan_arr_mem_45587_backing_0;
    
    int64_t flat_idx_45589;
    
    flat_idx_45589 = (sext_i32_i64(local_tid_45583) + 1) *
        (segscan_group_sizze_36145 * sdiv_up64(m_30057 * iota32_arg_30443,
                                               sext_i32_i64(num_threads_45557))) -
        1;
    
    int64_t gtid_36058;
    
    gtid_36058 = squot64(flat_idx_45589, iota32_arg_30443);
    
    int64_t gtid_36066;
    
    gtid_36066 = flat_idx_45589 - squot64(flat_idx_45589, iota32_arg_30443) *
        iota32_arg_30443;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36058, m_30057) && slt64(gtid_36066, iota32_arg_30443)) {
            ((__local
              float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)] =
                ((__global float *) mem_44292)[gtid_36058 * iota32_arg_30443 +
                                               gtid_36066];
        } else {
            ((__local
              float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_36149;
    float x_36150;
    float x_45590;
    float x_45591;
    bool ltid_in_bounds_45593;
    
    ltid_in_bounds_45593 = slt64(sext_i32_i64(local_tid_45583),
                                 stage1_num_groups_45556);
    
    int32_t skip_threads_45594;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45593) {
            x_36150 = ((volatile __local
                        float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)];
            if ((local_tid_45583 - squot32(local_tid_45583, 32) * 32) == 0) {
                x_36149 = x_36150;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45594 = 1;
        while (slt32(skip_threads_45594, 32)) {
            if (sle32(skip_threads_45594, local_tid_45583 -
                      squot32(local_tid_45583, 32) * 32) &&
                ltid_in_bounds_45593) {
                // read operands
                {
                    x_36149 = ((volatile __local
                                float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583) -
                                                             sext_i32_i64(skip_threads_45594)];
                }
                // perform operation
                {
                    bool inactive_45595 =
                         slt64(srem64((sext_i32_i64(local_tid_45583) + 1) *
                                      (segscan_group_sizze_36145 *
                                       sdiv_up64(m_30057 * iota32_arg_30443,
                                                 sext_i32_i64(num_threads_45557))) -
                                      1, iota32_arg_30443),
                               (sext_i32_i64(local_tid_45583) + 1) *
                               (segscan_group_sizze_36145 * sdiv_up64(m_30057 *
                                                                      iota32_arg_30443,
                                                                      sext_i32_i64(num_threads_45557))) -
                               1 - ((sext_i32_i64(local_tid_45583 -
                                     skip_threads_45594) + 1) *
                                    (segscan_group_sizze_36145 *
                                     sdiv_up64(m_30057 * iota32_arg_30443,
                                               sext_i32_i64(num_threads_45557))) -
                                    1));
                    
                    if (inactive_45595) {
                        x_36149 = x_36150;
                    }
                    if (!inactive_45595) {
                        float defunc_1_op_res_36151 = x_36149 + x_36150;
                        
                        x_36149 = defunc_1_op_res_36151;
                    }
                }
            }
            if (sle32(wave_sizze_45585, skip_threads_45594)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45594, local_tid_45583 -
                      squot32(local_tid_45583, 32) * 32) &&
                ltid_in_bounds_45593) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)] =
                        x_36149;
                    x_36150 = x_36149;
                }
            }
            if (sle32(wave_sizze_45585, skip_threads_45594)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45594 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45583 - squot32(local_tid_45583, 32) * 32) == 31 &&
            ltid_in_bounds_45593) {
            ((volatile __local
              float *) scan_arr_mem_45587)[sext_i32_i64(squot32(local_tid_45583,
                                                                32))] = x_36149;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45596;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45583, 32) == 0 && ltid_in_bounds_45593) {
                x_45591 = ((volatile __local
                            float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)];
                if ((local_tid_45583 - squot32(local_tid_45583, 32) * 32) ==
                    0) {
                    x_45590 = x_45591;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45596 = 1;
            while (slt32(skip_threads_45596, 32)) {
                if (sle32(skip_threads_45596, local_tid_45583 -
                          squot32(local_tid_45583, 32) * 32) &&
                    (squot32(local_tid_45583, 32) == 0 &&
                     ltid_in_bounds_45593)) {
                    // read operands
                    {
                        x_45590 = ((volatile __local
                                    float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583) -
                                                                 sext_i32_i64(skip_threads_45596)];
                    }
                    // perform operation
                    {
                        bool inactive_45597 =
                             slt64(srem64((sext_i32_i64(local_tid_45583 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_36145 *
                                           sdiv_up64(m_30057 * iota32_arg_30443,
                                                     sext_i32_i64(num_threads_45557))) -
                                          1, iota32_arg_30443),
                                   (sext_i32_i64(local_tid_45583 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_36145 *
                                               sdiv_up64(m_30057 *
                                                         iota32_arg_30443,
                                                         sext_i32_i64(num_threads_45557))) -
                                   1 - ((sext_i32_i64((local_tid_45583 -
                                                       skip_threads_45596) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_36145 *
                                         sdiv_up64(m_30057 * iota32_arg_30443,
                                                   sext_i32_i64(num_threads_45557))) -
                                        1));
                        
                        if (inactive_45597) {
                            x_45590 = x_45591;
                        }
                        if (!inactive_45597) {
                            float defunc_1_op_res_45592 = x_45590 + x_45591;
                            
                            x_45590 = defunc_1_op_res_45592;
                        }
                    }
                }
                if (sle32(wave_sizze_45585, skip_threads_45596)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45596, local_tid_45583 -
                          squot32(local_tid_45583, 32) * 32) &&
                    (squot32(local_tid_45583, 32) == 0 &&
                     ltid_in_bounds_45593)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)] =
                            x_45590;
                        x_45591 = x_45590;
                    }
                }
                if (sle32(wave_sizze_45585, skip_threads_45596)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45596 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45583, 32) == 0 || !ltid_in_bounds_45593)) {
            // read operands
            {
                x_36150 = x_36149;
                x_36149 = ((__local
                            float *) scan_arr_mem_45587)[sext_i32_i64(squot32(local_tid_45583,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45598 =
                     slt64(srem64((sext_i32_i64(local_tid_45583) + 1) *
                                  (segscan_group_sizze_36145 *
                                   sdiv_up64(m_30057 * iota32_arg_30443,
                                             sext_i32_i64(num_threads_45557))) -
                                  1, iota32_arg_30443),
                           (sext_i32_i64(local_tid_45583) + 1) *
                           (segscan_group_sizze_36145 * sdiv_up64(m_30057 *
                                                                  iota32_arg_30443,
                                                                  sext_i32_i64(num_threads_45557))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45583, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_36145 *
                                                 sdiv_up64(m_30057 *
                                                           iota32_arg_30443,
                                                           sext_i32_i64(num_threads_45557))) -
                                1));
                
                if (inactive_45598) {
                    x_36149 = x_36150;
                }
                if (!inactive_45598) {
                    float defunc_1_op_res_36151 = x_36149 + x_36150;
                    
                    x_36149 = defunc_1_op_res_36151;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)] =
                    x_36149;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45583, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)] =
                x_36150;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36058, m_30057) && slt64(gtid_36066, iota32_arg_30443)) {
            ((__global float *) mem_44292)[gtid_36058 * iota32_arg_30443 +
                                           gtid_36066] = ((__local
                                                           float *) scan_arr_mem_45587)[sext_i32_i64(local_tid_45583)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36145
}
__kernel void mainDetailedziscan_stage3_33926(__global int *global_failure,
                                              int64_t N_30056, int64_t m_30057,
                                              int64_t num_groups_33944, __global
                                              unsigned char *mem_43934,
                                              int32_t num_threads_45130,
                                              int32_t required_groups_45172)
{
    #define segscan_group_sizze_33943 (mainDetailedzisegscan_group_sizze_33920)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45173;
    int32_t local_tid_45174;
    int64_t group_sizze_45177;
    int32_t wave_sizze_45176;
    int32_t group_tid_45175;
    
    global_tid_45173 = get_global_id(0);
    local_tid_45174 = get_local_id(0);
    group_sizze_45177 = get_local_size(0);
    wave_sizze_45176 = LOCKSTEP_WIDTH;
    group_tid_45175 = get_group_id(0);
    
    int32_t phys_tid_33926;
    
    phys_tid_33926 = global_tid_45173;
    
    int32_t phys_group_id_45178;
    
    phys_group_id_45178 = get_group_id(0);
    for (int32_t i_45179 = 0; i_45179 < sdiv_up32(required_groups_45172 -
                                                  phys_group_id_45178,
                                                  sext_i64_i32(num_groups_33944));
         i_45179++) {
        int32_t virt_group_id_45180 = phys_group_id_45178 + i_45179 *
                sext_i64_i32(num_groups_33944);
        int64_t flat_idx_45181 = sext_i32_i64(virt_group_id_45180) *
                segscan_group_sizze_33943 + sext_i32_i64(local_tid_45174);
        int64_t gtid_33917 = squot64(flat_idx_45181, N_30056);
        int64_t gtid_33925 = flat_idx_45181 - squot64(flat_idx_45181, N_30056) *
                N_30056;
        int64_t orig_group_45182 = squot64(flat_idx_45181,
                                           segscan_group_sizze_33943 *
                                           sdiv_up64(m_30057 * N_30056,
                                                     sext_i32_i64(num_threads_45130)));
        int64_t carry_in_flat_idx_45183 = orig_group_45182 *
                (segscan_group_sizze_33943 * sdiv_up64(m_30057 * N_30056,
                                                       sext_i32_i64(num_threads_45130))) -
                1;
        
        if (slt64(gtid_33917, m_30057) && slt64(gtid_33925, N_30056)) {
            if (!(orig_group_45182 == 0 || (flat_idx_45181 ==
                                            (orig_group_45182 + 1) *
                                            (segscan_group_sizze_33943 *
                                             sdiv_up64(m_30057 * N_30056,
                                                       sext_i32_i64(num_threads_45130))) -
                                            1 || slt64(srem64(flat_idx_45181,
                                                              N_30056),
                                                       flat_idx_45181 -
                                                       carry_in_flat_idx_45183)))) {
                int64_t x_33948;
                int64_t x_33949;
                
                x_33948 = ((__global
                            int64_t *) mem_43934)[squot64(carry_in_flat_idx_45183,
                                                          N_30056) * N_30056 +
                                                  (carry_in_flat_idx_45183 -
                                                   squot64(carry_in_flat_idx_45183,
                                                           N_30056) * N_30056)];
                x_33949 = ((__global int64_t *) mem_43934)[gtid_33917 *
                                                           N_30056 +
                                                           gtid_33925];
                
                int64_t defunc_1_op_res_33950;
                
                defunc_1_op_res_33950 = add64(x_33948, x_33949);
                x_33948 = defunc_1_op_res_33950;
                ((__global int64_t *) mem_43934)[gtid_33917 * N_30056 +
                                                 gtid_33925] = x_33948;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33943
}
__kernel void mainDetailedziscan_stage3_35712(__global int *global_failure,
                                              int64_t m_30057,
                                              int64_t iota32_arg_30443,
                                              int64_t num_groups_36390, __global
                                              unsigned char *mem_44349, __global
                                              unsigned char *mem_44352, __global
                                              unsigned char *mem_44355, __global
                                              unsigned char *mem_44358,
                                              int32_t num_threads_45757,
                                              int32_t required_groups_45838)
{
    #define segscan_group_sizze_36389 (mainDetailedzisegscan_group_sizze_35706)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45839;
    int32_t local_tid_45840;
    int64_t group_sizze_45843;
    int32_t wave_sizze_45842;
    int32_t group_tid_45841;
    
    global_tid_45839 = get_global_id(0);
    local_tid_45840 = get_local_id(0);
    group_sizze_45843 = get_local_size(0);
    wave_sizze_45842 = LOCKSTEP_WIDTH;
    group_tid_45841 = get_group_id(0);
    
    int32_t phys_tid_35712;
    
    phys_tid_35712 = global_tid_45839;
    
    int32_t phys_group_id_45844;
    
    phys_group_id_45844 = get_group_id(0);
    for (int32_t i_45845 = 0; i_45845 < sdiv_up32(required_groups_45838 -
                                                  phys_group_id_45844,
                                                  sext_i64_i32(num_groups_36390));
         i_45845++) {
        int32_t virt_group_id_45846 = phys_group_id_45844 + i_45845 *
                sext_i64_i32(num_groups_36390);
        int64_t flat_idx_45847 = sext_i32_i64(virt_group_id_45846) *
                segscan_group_sizze_36389 + sext_i32_i64(local_tid_45840);
        int64_t gtid_35703 = squot64(flat_idx_45847, iota32_arg_30443);
        int64_t gtid_35711 = flat_idx_45847 - squot64(flat_idx_45847,
                                                      iota32_arg_30443) *
                iota32_arg_30443;
        int64_t orig_group_45848 = squot64(flat_idx_45847,
                                           segscan_group_sizze_36389 *
                                           sdiv_up64(m_30057 * iota32_arg_30443,
                                                     sext_i32_i64(num_threads_45757)));
        int64_t carry_in_flat_idx_45849 = orig_group_45848 *
                (segscan_group_sizze_36389 * sdiv_up64(m_30057 *
                                                       iota32_arg_30443,
                                                       sext_i32_i64(num_threads_45757))) -
                1;
        
        if (slt64(gtid_35703, m_30057) && slt64(gtid_35711, iota32_arg_30443)) {
            if (!(orig_group_45848 == 0 || (flat_idx_45847 ==
                                            (orig_group_45848 + 1) *
                                            (segscan_group_sizze_36389 *
                                             sdiv_up64(m_30057 *
                                                       iota32_arg_30443,
                                                       sext_i32_i64(num_threads_45757))) -
                                            1 || slt64(srem64(flat_idx_45847,
                                                              iota32_arg_30443),
                                                       flat_idx_45847 -
                                                       carry_in_flat_idx_45849)))) {
                int64_t x_36397;
                int64_t x_36398;
                int64_t x_36399;
                int64_t x_36400;
                int64_t x_36401;
                int64_t x_36402;
                int64_t x_36403;
                int64_t x_36404;
                
                x_36397 = ((__global
                            int64_t *) mem_44349)[squot64(carry_in_flat_idx_45849,
                                                          iota32_arg_30443) *
                                                  iota32_arg_30443 +
                                                  (carry_in_flat_idx_45849 -
                                                   squot64(carry_in_flat_idx_45849,
                                                           iota32_arg_30443) *
                                                   iota32_arg_30443)];
                x_36398 = ((__global
                            int64_t *) mem_44352)[squot64(carry_in_flat_idx_45849,
                                                          iota32_arg_30443) *
                                                  iota32_arg_30443 +
                                                  (carry_in_flat_idx_45849 -
                                                   squot64(carry_in_flat_idx_45849,
                                                           iota32_arg_30443) *
                                                   iota32_arg_30443)];
                x_36399 = ((__global
                            int64_t *) mem_44355)[squot64(carry_in_flat_idx_45849,
                                                          iota32_arg_30443) *
                                                  iota32_arg_30443 +
                                                  (carry_in_flat_idx_45849 -
                                                   squot64(carry_in_flat_idx_45849,
                                                           iota32_arg_30443) *
                                                   iota32_arg_30443)];
                x_36400 = ((__global
                            int64_t *) mem_44358)[squot64(carry_in_flat_idx_45849,
                                                          iota32_arg_30443) *
                                                  iota32_arg_30443 +
                                                  (carry_in_flat_idx_45849 -
                                                   squot64(carry_in_flat_idx_45849,
                                                           iota32_arg_30443) *
                                                   iota32_arg_30443)];
                x_36401 = ((__global int64_t *) mem_44349)[gtid_35703 *
                                                           iota32_arg_30443 +
                                                           gtid_35711];
                x_36402 = ((__global int64_t *) mem_44352)[gtid_35703 *
                                                           iota32_arg_30443 +
                                                           gtid_35711];
                x_36403 = ((__global int64_t *) mem_44355)[gtid_35703 *
                                                           iota32_arg_30443 +
                                                           gtid_35711];
                x_36404 = ((__global int64_t *) mem_44358)[gtid_35703 *
                                                           iota32_arg_30443 +
                                                           gtid_35711];
                
                int64_t defunc_1_op_res_36405;
                
                defunc_1_op_res_36405 = add64(x_36397, x_36401);
                
                int64_t defunc_1_op_res_36406 = add64(x_36398, x_36402);
                int64_t defunc_1_op_res_36407 = add64(x_36399, x_36403);
                int64_t defunc_1_op_res_36408 = add64(x_36400, x_36404);
                
                x_36397 = defunc_1_op_res_36405;
                x_36398 = defunc_1_op_res_36406;
                x_36399 = defunc_1_op_res_36407;
                x_36400 = defunc_1_op_res_36408;
                ((__global int64_t *) mem_44349)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711] = x_36397;
                ((__global int64_t *) mem_44352)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711] = x_36398;
                ((__global int64_t *) mem_44355)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711] = x_36399;
                ((__global int64_t *) mem_44358)[gtid_35703 * iota32_arg_30443 +
                                                 gtid_35711] = x_36400;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36389
}
__kernel void mainDetailedziscan_stage3_36067(__global int *global_failure,
                                              int64_t m_30057,
                                              int64_t iota32_arg_30443,
                                              int64_t num_groups_36146, __global
                                              unsigned char *mem_44292,
                                              int32_t num_threads_45557,
                                              int32_t required_groups_45599)
{
    #define segscan_group_sizze_36145 (mainDetailedzisegscan_group_sizze_36061)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45600;
    int32_t local_tid_45601;
    int64_t group_sizze_45604;
    int32_t wave_sizze_45603;
    int32_t group_tid_45602;
    
    global_tid_45600 = get_global_id(0);
    local_tid_45601 = get_local_id(0);
    group_sizze_45604 = get_local_size(0);
    wave_sizze_45603 = LOCKSTEP_WIDTH;
    group_tid_45602 = get_group_id(0);
    
    int32_t phys_tid_36067;
    
    phys_tid_36067 = global_tid_45600;
    
    int32_t phys_group_id_45605;
    
    phys_group_id_45605 = get_group_id(0);
    for (int32_t i_45606 = 0; i_45606 < sdiv_up32(required_groups_45599 -
                                                  phys_group_id_45605,
                                                  sext_i64_i32(num_groups_36146));
         i_45606++) {
        int32_t virt_group_id_45607 = phys_group_id_45605 + i_45606 *
                sext_i64_i32(num_groups_36146);
        int64_t flat_idx_45608 = sext_i32_i64(virt_group_id_45607) *
                segscan_group_sizze_36145 + sext_i32_i64(local_tid_45601);
        int64_t gtid_36058 = squot64(flat_idx_45608, iota32_arg_30443);
        int64_t gtid_36066 = flat_idx_45608 - squot64(flat_idx_45608,
                                                      iota32_arg_30443) *
                iota32_arg_30443;
        int64_t orig_group_45609 = squot64(flat_idx_45608,
                                           segscan_group_sizze_36145 *
                                           sdiv_up64(m_30057 * iota32_arg_30443,
                                                     sext_i32_i64(num_threads_45557)));
        int64_t carry_in_flat_idx_45610 = orig_group_45609 *
                (segscan_group_sizze_36145 * sdiv_up64(m_30057 *
                                                       iota32_arg_30443,
                                                       sext_i32_i64(num_threads_45557))) -
                1;
        
        if (slt64(gtid_36058, m_30057) && slt64(gtid_36066, iota32_arg_30443)) {
            if (!(orig_group_45609 == 0 || (flat_idx_45608 ==
                                            (orig_group_45609 + 1) *
                                            (segscan_group_sizze_36145 *
                                             sdiv_up64(m_30057 *
                                                       iota32_arg_30443,
                                                       sext_i32_i64(num_threads_45557))) -
                                            1 || slt64(srem64(flat_idx_45608,
                                                              iota32_arg_30443),
                                                       flat_idx_45608 -
                                                       carry_in_flat_idx_45610)))) {
                float x_36149;
                float x_36150;
                
                x_36149 = ((__global
                            float *) mem_44292)[squot64(carry_in_flat_idx_45610,
                                                        iota32_arg_30443) *
                                                iota32_arg_30443 +
                                                (carry_in_flat_idx_45610 -
                                                 squot64(carry_in_flat_idx_45610,
                                                         iota32_arg_30443) *
                                                 iota32_arg_30443)];
                x_36150 = ((__global float *) mem_44292)[gtid_36058 *
                                                         iota32_arg_30443 +
                                                         gtid_36066];
                
                float defunc_1_op_res_36151;
                
                defunc_1_op_res_36151 = x_36149 + x_36150;
                x_36149 = defunc_1_op_res_36151;
                ((__global float *) mem_44292)[gtid_36058 * iota32_arg_30443 +
                                               gtid_36066] = x_36149;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36145
}
__kernel void mainDetailedzisegmap_31723(__global int *global_failure,
                                         int64_t N_30056, float freq_30062,
                                         int64_t i32_res_30076, __global
                                         unsigned char *mappingindices_mem_43377,
                                         __global unsigned char *mem_43382)
{
    #define segmap_group_sizze_31796 (mainDetailedzisegmap_group_sizze_31726)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44644;
    int32_t local_tid_44645;
    int64_t group_sizze_44648;
    int32_t wave_sizze_44647;
    int32_t group_tid_44646;
    
    global_tid_44644 = get_global_id(0);
    local_tid_44645 = get_local_id(0);
    group_sizze_44648 = get_local_size(0);
    wave_sizze_44647 = LOCKSTEP_WIDTH;
    group_tid_44646 = get_group_id(0);
    
    int32_t phys_tid_31723;
    
    phys_tid_31723 = global_tid_44644;
    
    int64_t gtid_31721;
    
    gtid_31721 = squot64(sext_i32_i64(group_tid_44646) *
                         segmap_group_sizze_31796 +
                         sext_i32_i64(local_tid_44645), N_30056);
    
    int64_t gtid_31722;
    
    gtid_31722 = sext_i32_i64(group_tid_44646) * segmap_group_sizze_31796 +
        sext_i32_i64(local_tid_44645) - squot64(sext_i32_i64(group_tid_44646) *
                                                segmap_group_sizze_31796 +
                                                sext_i32_i64(local_tid_44645),
                                                N_30056) * N_30056;
    if (slt64(gtid_31721, i32_res_30076) && slt64(gtid_31722, N_30056)) {
        int32_t index_primexp_41401 = sext_i64_i32(gtid_31721);
        bool index_primexp_41398 = index_primexp_41401 == 0;
        float defunc_0_f_res_31802;
        
        if (index_primexp_41398) {
            defunc_0_f_res_31802 = 1.0F;
        } else {
            int32_t x_31801 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_31722];
            bool cond_31803 = index_primexp_41401 == 1;
            float defunc_0_f_res_f_res_31804;
            
            if (cond_31803) {
                float i32_res_31805 = sitofp_i32_f32(x_31801);
                
                defunc_0_f_res_f_res_31804 = i32_res_31805;
            } else {
                int32_t r32_arg_31806 = sdiv32(index_primexp_41401, 2);
                float i32_res_31807 = sitofp_i32_f32(r32_arg_31806);
                float i32_res_31808 = sitofp_i32_f32(x_31801);
                float x_31809 = 6.2831855F * i32_res_31807;
                float x_31810 = i32_res_31808 * x_31809;
                float angle_31811 = x_31810 / freq_30062;
                int32_t x_31812 = smod32(index_primexp_41401, 2);
                bool cond_31813 = x_31812 == 0;
                float defunc_0_f_res_f_res_f_res_31814;
                
                if (cond_31813) {
                    float sin_res_31815;
                    
                    sin_res_31815 = futrts_sin32(angle_31811);
                    defunc_0_f_res_f_res_f_res_31814 = sin_res_31815;
                } else {
                    float cos_res_31816;
                    
                    cos_res_31816 = futrts_cos32(angle_31811);
                    defunc_0_f_res_f_res_f_res_31814 = cos_res_31816;
                }
                defunc_0_f_res_f_res_31804 = defunc_0_f_res_f_res_f_res_31814;
            }
            defunc_0_f_res_31802 = defunc_0_f_res_f_res_31804;
        }
        ((__global float *) mem_43382)[gtid_31721 * N_30056 + gtid_31722] =
            defunc_0_f_res_31802;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31796
}
__kernel void mainDetailedzisegmap_31901(__global int *global_failure,
                                         int64_t N_30056, float freq_30062,
                                         int64_t i32_res_30076, __global
                                         unsigned char *mappingindices_mem_43377,
                                         __global unsigned char *mem_43386)
{
    #define segmap_group_sizze_31970 (mainDetailedzisegmap_group_sizze_31904)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44649;
    int32_t local_tid_44650;
    int64_t group_sizze_44653;
    int32_t wave_sizze_44652;
    int32_t group_tid_44651;
    
    global_tid_44649 = get_global_id(0);
    local_tid_44650 = get_local_id(0);
    group_sizze_44653 = get_local_size(0);
    wave_sizze_44652 = LOCKSTEP_WIDTH;
    group_tid_44651 = get_group_id(0);
    
    int32_t phys_tid_31901;
    
    phys_tid_31901 = global_tid_44649;
    
    int64_t gtid_31899;
    
    gtid_31899 = squot64(sext_i32_i64(group_tid_44651) *
                         segmap_group_sizze_31970 +
                         sext_i32_i64(local_tid_44650), N_30056);
    
    int64_t gtid_31900;
    
    gtid_31900 = sext_i32_i64(group_tid_44651) * segmap_group_sizze_31970 +
        sext_i32_i64(local_tid_44650) - squot64(sext_i32_i64(group_tid_44651) *
                                                segmap_group_sizze_31970 +
                                                sext_i32_i64(local_tid_44650),
                                                N_30056) * N_30056;
    if (slt64(gtid_31899, i32_res_30076) && slt64(gtid_31900, N_30056)) {
        int32_t index_primexp_41410 = sext_i64_i32(gtid_31899);
        bool index_primexp_41407 = index_primexp_41410 == 0;
        float defunc_0_f_res_31976;
        
        if (index_primexp_41407) {
            defunc_0_f_res_31976 = 1.0F;
        } else {
            int32_t x_31975 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_31900];
            int32_t i_31977 = add32(1, index_primexp_41410);
            int32_t r32_arg_31978 = sdiv32(i_31977, 2);
            float i32_res_31979 = sitofp_i32_f32(r32_arg_31978);
            float i32_res_31980 = sitofp_i32_f32(x_31975);
            float x_31981 = 6.2831855F * i32_res_31979;
            float x_31982 = i32_res_31980 * x_31981;
            float angle_31983 = x_31982 / freq_30062;
            int32_t x_31984 = smod32(i_31977, 2);
            bool cond_31985 = x_31984 == 0;
            float defunc_0_f_res_f_res_31986;
            
            if (cond_31985) {
                float sin_res_31987;
                
                sin_res_31987 = futrts_sin32(angle_31983);
                defunc_0_f_res_f_res_31986 = sin_res_31987;
            } else {
                float cos_res_31988;
                
                cos_res_31988 = futrts_cos32(angle_31983);
                defunc_0_f_res_f_res_31986 = cos_res_31988;
            }
            defunc_0_f_res_31976 = defunc_0_f_res_f_res_31986;
        }
        ((__global float *) mem_43386)[gtid_31899 * N_30056 + gtid_31900] =
            defunc_0_f_res_31976;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31970
}
__kernel void mainDetailedzisegmap_32029(__global int *global_failure,
                                         int64_t N_30056, int64_t i32_res_30076,
                                         float i32_res_30141, __global
                                         unsigned char *mem_43390, __global
                                         unsigned char *mem_43394)
{
    #define segmap_group_sizze_32053 (mainDetailedzisegmap_group_sizze_32032)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44654;
    int32_t local_tid_44655;
    int64_t group_sizze_44658;
    int32_t wave_sizze_44657;
    int32_t group_tid_44656;
    
    global_tid_44654 = get_global_id(0);
    local_tid_44655 = get_local_id(0);
    group_sizze_44658 = get_local_size(0);
    wave_sizze_44657 = LOCKSTEP_WIDTH;
    group_tid_44656 = get_group_id(0);
    
    int32_t phys_tid_32029;
    
    phys_tid_32029 = global_tid_44654;
    
    int64_t gtid_32027;
    
    gtid_32027 = squot64(sext_i32_i64(group_tid_44656) *
                         segmap_group_sizze_32053 +
                         sext_i32_i64(local_tid_44655), i32_res_30076);
    
    int64_t gtid_32028;
    
    gtid_32028 = sext_i32_i64(group_tid_44656) * segmap_group_sizze_32053 +
        sext_i32_i64(local_tid_44655) - squot64(sext_i32_i64(group_tid_44656) *
                                                segmap_group_sizze_32053 +
                                                sext_i32_i64(local_tid_44655),
                                                i32_res_30076) * i32_res_30076;
    if (slt64(gtid_32027, N_30056) && slt64(gtid_32028, i32_res_30076)) {
        float x_32056 = ((__global float *) mem_43390)[gtid_32027 *
                                                       i32_res_30076 +
                                                       gtid_32028];
        float defunc_0_f_res_32057 = i32_res_30141 + x_32056;
        
        ((__global float *) mem_43394)[gtid_32027 * i32_res_30076 +
                                       gtid_32028] = defunc_0_f_res_32057;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32053
}
__kernel void mainDetailedzisegmap_32062(__global int *global_failure,
                                         int64_t N_30056, int64_t m_30057,
                                         int32_t n_30061, int32_t k2p2zq_30074,
                                         int64_t i32_res_30076,
                                         int64_t num_groups_32087, __global
                                         unsigned char *binop_p_mem_43387,
                                         __global unsigned char *mem_43394,
                                         __global unsigned char *mem_43397,
                                         __global unsigned char *mem_43401,
                                         __global unsigned char *mem_43443)
{
    #define segmap_group_sizze_32086 (mainDetailedzisegmap_group_sizze_32064)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44662;
    int32_t local_tid_44663;
    int64_t group_sizze_44666;
    int32_t wave_sizze_44665;
    int32_t group_tid_44664;
    
    global_tid_44662 = get_global_id(0);
    local_tid_44663 = get_local_id(0);
    group_sizze_44666 = get_local_size(0);
    wave_sizze_44665 = LOCKSTEP_WIDTH;
    group_tid_44664 = get_group_id(0);
    
    int32_t phys_tid_32062;
    
    phys_tid_32062 = global_tid_44662;
    
    int32_t phys_group_id_44667;
    
    phys_group_id_44667 = get_group_id(0);
    for (int32_t i_44668 = 0; i_44668 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057, segmap_group_sizze_32086)) -
                   phys_group_id_44667, sext_i64_i32(num_groups_32087));
         i_44668++) {
        int32_t virt_group_id_44669 = phys_group_id_44667 + i_44668 *
                sext_i64_i32(num_groups_32087);
        int64_t gtid_32061 = sext_i32_i64(virt_group_id_44669) *
                segmap_group_sizze_32086 + sext_i32_i64(local_tid_44663);
        
        if (slt64(gtid_32061, m_30057)) {
            for (int32_t i_43353 = 0; i_43353 < k2p2zq_30074; i_43353++) {
                int64_t i_43237 = sext_i32_i64(i_43353);
                
                for (int32_t i_43352 = 0; i_43352 < k2p2zq_30074; i_43352++) {
                    int64_t i_43241 = sext_i32_i64(i_43352);
                    float defunc_2_reduce_res_32095;
                    float redout_43243 = 0.0F;
                    
                    for (int32_t i_43351 = 0; i_43351 < n_30061; i_43351++) {
                        int64_t i_43244 = sext_i32_i64(i_43351);
                        float x_32099 = ((__global float *) mem_43397)[i_43244 *
                                                                       m_30057 +
                                                                       gtid_32061];
                        float x_32100 = ((__global
                                          float *) binop_p_mem_43387)[i_43237 *
                                                                      N_30056 +
                                                                      i_43244];
                        float x_32101 = ((__global float *) mem_43394)[i_43244 *
                                                                       i32_res_30076 +
                                                                       i_43241];
                        float x_32102 = x_32100 * x_32101;
                        bool isnan_res_32103;
                        
                        isnan_res_32103 = futrts_isnan32(x_32099);
                        
                        float y_32104;
                        
                        if (isnan_res_32103) {
                            y_32104 = 0.0F;
                        } else {
                            y_32104 = 1.0F;
                        }
                        
                        float defunc_2_f_res_32105 = x_32102 * y_32104;
                        float defunc_1_op_res_32098 = defunc_2_f_res_32105 +
                              redout_43243;
                        float redout_tmp_44672 = defunc_1_op_res_32098;
                        
                        redout_43243 = redout_tmp_44672;
                    }
                    defunc_2_reduce_res_32095 = redout_43243;
                    ((__global float *) mem_43401)[phys_tid_32062 + (i_43237 *
                                                                     (num_groups_32087 *
                                                                      segmap_group_sizze_32086 *
                                                                      i32_res_30076) +
                                                                     i_43241 *
                                                                     (num_groups_32087 *
                                                                      segmap_group_sizze_32086))] =
                        defunc_2_reduce_res_32095;
                }
            }
            for (int64_t i_44673 = 0; i_44673 < i32_res_30076; i_44673++) {
                for (int64_t i_44674 = 0; i_44674 < i32_res_30076; i_44674++) {
                    ((__global float *) mem_43443)[i_44673 * (m_30057 *
                                                              i32_res_30076) +
                                                   i_44674 * m_30057 +
                                                   gtid_32061] = ((__global
                                                                   float *) mem_43401)[phys_tid_32062 +
                                                                                       (i_44673 *
                                                                                        (num_groups_32087 *
                                                                                         segmap_group_sizze_32086 *
                                                                                         i32_res_30076) +
                                                                                        i_44674 *
                                                                                        (num_groups_32087 *
                                                                                         segmap_group_sizze_32086))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32086
}
__kernel void mainDetailedzisegmap_32108(__global int *global_failure,
                                         int64_t m_30057, int64_t N_30058,
                                         int32_t n_30061, int32_t k2p2zq_30074,
                                         int64_t i32_res_30076,
                                         int64_t num_groups_32264, __global
                                         unsigned char *images_mem_43378,
                                         __global unsigned char *mem_43390,
                                         __global unsigned char *mem_43394,
                                         __global unsigned char *mem_43446,
                                         __global unsigned char *mem_43462)
{
    #define segmap_group_sizze_32263 (mainDetailedzisegmap_group_sizze_32111)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44675;
    int32_t local_tid_44676;
    int64_t group_sizze_44679;
    int32_t wave_sizze_44678;
    int32_t group_tid_44677;
    
    global_tid_44675 = get_global_id(0);
    local_tid_44676 = get_local_id(0);
    group_sizze_44679 = get_local_size(0);
    wave_sizze_44678 = LOCKSTEP_WIDTH;
    group_tid_44677 = get_group_id(0);
    
    int32_t phys_tid_32108;
    
    phys_tid_32108 = global_tid_44675;
    
    int32_t phys_group_id_44680;
    
    phys_group_id_44680 = get_group_id(0);
    for (int32_t i_44681 = 0; i_44681 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057 * i32_res_30076,
                                          segmap_group_sizze_32263)) -
                   phys_group_id_44680, sext_i64_i32(num_groups_32264));
         i_44681++) {
        int32_t virt_group_id_44682 = phys_group_id_44680 + i_44681 *
                sext_i64_i32(num_groups_32264);
        int64_t gtid_32106 = squot64(sext_i32_i64(virt_group_id_44682) *
                                     segmap_group_sizze_32263 +
                                     sext_i32_i64(local_tid_44676),
                                     i32_res_30076);
        int64_t gtid_32107 = sext_i32_i64(virt_group_id_44682) *
                segmap_group_sizze_32263 + sext_i32_i64(local_tid_44676) -
                squot64(sext_i32_i64(virt_group_id_44682) *
                        segmap_group_sizze_32263 +
                        sext_i32_i64(local_tid_44676), i32_res_30076) *
                i32_res_30076;
        
        if (slt64(gtid_32106, m_30057) && slt64(gtid_32107, i32_res_30076)) {
            for (int32_t i_43355 = 0; i_43355 < k2p2zq_30074; i_43355++) {
                int64_t i_43247 = sext_i32_i64(i_43355);
                float defunc_2_reduce_res_32275;
                float redout_43249 = 0.0F;
                
                for (int32_t i_43354 = 0; i_43354 < n_30061; i_43354++) {
                    int64_t i_43250 = sext_i32_i64(i_43354);
                    float x_32279 = ((__global
                                      float *) images_mem_43378)[gtid_32106 *
                                                                 N_30058 +
                                                                 i_43250];
                    float x_32280 = ((__global float *) mem_43390)[i_43250 *
                                                                   i32_res_30076 +
                                                                   gtid_32107];
                    float x_32281 = ((__global float *) mem_43394)[i_43250 *
                                                                   i32_res_30076 +
                                                                   i_43247];
                    float x_32282 = x_32280 * x_32281;
                    bool isnan_res_32283;
                    
                    isnan_res_32283 = futrts_isnan32(x_32279);
                    
                    float y_32284;
                    
                    if (isnan_res_32283) {
                        y_32284 = 0.0F;
                    } else {
                        y_32284 = 1.0F;
                    }
                    
                    float defunc_2_f_res_32285 = x_32282 * y_32284;
                    float defunc_1_op_res_32278 = defunc_2_f_res_32285 +
                          redout_43249;
                    float redout_tmp_44684 = defunc_1_op_res_32278;
                    
                    redout_43249 = redout_tmp_44684;
                }
                defunc_2_reduce_res_32275 = redout_43249;
                ((__global float *) mem_43446)[phys_tid_32108 + i_43247 *
                                               (num_groups_32264 *
                                                segmap_group_sizze_32263)] =
                    defunc_2_reduce_res_32275;
            }
            for (int64_t i_44685 = 0; i_44685 < i32_res_30076; i_44685++) {
                ((__global float *) mem_43462)[i_44685 * (i32_res_30076 *
                                                          m_30057) +
                                               gtid_32106 * i32_res_30076 +
                                               gtid_32107] = ((__global
                                                               float *) mem_43446)[phys_tid_32108 +
                                                                                   i_44685 *
                                                                                   (num_groups_32264 *
                                                                                    segmap_group_sizze_32263)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32263
}
__kernel void mainDetailedzisegmap_32642(__global int *global_failure,
                                         int64_t m_30057, int64_t i32_res_30076,
                                         int64_t m_30207,
                                         int64_t gauss_jordan_res_r_ixfn_43616,
                                         int64_t gauss_jordan_res_r_ixfn_43617,
                                         int64_t gauss_jordan_res_r_ixfn_43619,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_43621,
                                         __global unsigned char *mem_43626)
{
    #define segmap_group_sizze_33265 (mainDetailedzisegmap_group_sizze_32646)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44822;
    int32_t local_tid_44823;
    int64_t group_sizze_44826;
    int32_t wave_sizze_44825;
    int32_t group_tid_44824;
    
    global_tid_44822 = get_global_id(0);
    local_tid_44823 = get_local_id(0);
    group_sizze_44826 = get_local_size(0);
    wave_sizze_44825 = LOCKSTEP_WIDTH;
    group_tid_44824 = get_group_id(0);
    
    int32_t phys_tid_32642;
    
    phys_tid_32642 = global_tid_44822;
    
    int64_t gtid_32639;
    
    gtid_32639 = squot64(sext_i32_i64(group_tid_44824) *
                         segmap_group_sizze_33265 +
                         sext_i32_i64(local_tid_44823), i32_res_30076 *
                         i32_res_30076);
    
    int64_t gtid_32640;
    
    gtid_32640 = squot64(sext_i32_i64(group_tid_44824) *
                         segmap_group_sizze_33265 +
                         sext_i32_i64(local_tid_44823) -
                         squot64(sext_i32_i64(group_tid_44824) *
                                 segmap_group_sizze_33265 +
                                 sext_i32_i64(local_tid_44823), i32_res_30076 *
                                 i32_res_30076) * (i32_res_30076 *
                                                   i32_res_30076),
                         i32_res_30076);
    
    int64_t gtid_32641;
    
    gtid_32641 = sext_i32_i64(group_tid_44824) * segmap_group_sizze_33265 +
        sext_i32_i64(local_tid_44823) - squot64(sext_i32_i64(group_tid_44824) *
                                                segmap_group_sizze_33265 +
                                                sext_i32_i64(local_tid_44823),
                                                i32_res_30076 * i32_res_30076) *
        (i32_res_30076 * i32_res_30076) -
        squot64(sext_i32_i64(group_tid_44824) * segmap_group_sizze_33265 +
                sext_i32_i64(local_tid_44823) -
                squot64(sext_i32_i64(group_tid_44824) *
                        segmap_group_sizze_33265 +
                        sext_i32_i64(local_tid_44823), i32_res_30076 *
                        i32_res_30076) * (i32_res_30076 * i32_res_30076),
                i32_res_30076) * i32_res_30076;
    if ((slt64(gtid_32639, m_30057) && slt64(gtid_32640, i32_res_30076)) &&
        slt64(gtid_32641, i32_res_30076)) {
        int64_t index_primexp_41440 = m_30207 * gtid_32640;
        int64_t i_33271 = add64(i32_res_30076, gtid_32641);
        int64_t new_index_33272 = i_33271 + index_primexp_41440;
        float defunc_0_f_res_33273 = ((__global
                                       float *) gauss_jordan_res_r_mem_43621)[gauss_jordan_res_r_ixfn_43616 +
                                                                              (gtid_32639 *
                                                                               gauss_jordan_res_r_ixfn_43617 +
                                                                               new_index_33272 *
                                                                               gauss_jordan_res_r_ixfn_43619)];
        
        ((__global float *) mem_43626)[gtid_32639 * (i32_res_30076 *
                                                     i32_res_30076) +
                                       gtid_32640 * i32_res_30076 +
                                       gtid_32641] = defunc_0_f_res_33273;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33265
}
__kernel void mainDetailedzisegmap_32861(__global int *global_failure,
                                         int64_t m_30057, int64_t nm_30208,
                                         int64_t ctx_param_ext_43579,
                                         int64_t ctx_param_ext_43580,
                                         int64_t ctx_param_ext_43582, __global
                                         unsigned char *mem_param_43584,
                                         __global unsigned char *mem_43604)
{
    #define segmap_group_sizze_33230 (mainDetailedzisegmap_group_sizze_32864)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44816;
    int32_t local_tid_44817;
    int64_t group_sizze_44820;
    int32_t wave_sizze_44819;
    int32_t group_tid_44818;
    
    global_tid_44816 = get_global_id(0);
    local_tid_44817 = get_local_id(0);
    group_sizze_44820 = get_local_size(0);
    wave_sizze_44819 = LOCKSTEP_WIDTH;
    group_tid_44818 = get_group_id(0);
    
    int32_t phys_tid_32861;
    
    phys_tid_32861 = global_tid_44816;
    
    int64_t gtid_32859;
    
    gtid_32859 = squot64(sext_i32_i64(group_tid_44818) *
                         segmap_group_sizze_33230 +
                         sext_i32_i64(local_tid_44817), nm_30208);
    
    int64_t gtid_32860;
    
    gtid_32860 = sext_i32_i64(group_tid_44818) * segmap_group_sizze_33230 +
        sext_i32_i64(local_tid_44817) - squot64(sext_i32_i64(group_tid_44818) *
                                                segmap_group_sizze_33230 +
                                                sext_i32_i64(local_tid_44817),
                                                nm_30208) * nm_30208;
    if (slt64(gtid_32859, m_30057) && slt64(gtid_32860, nm_30208)) {
        float write_value_33236 = ((__global float *) mem_43604)[gtid_32859 *
                                                                 nm_30208 +
                                                                 gtid_32860];
        
        if ((sle64(0, gtid_32859) && slt64(gtid_32859, m_30057)) && (sle64(0,
                                                                           gtid_32860) &&
                                                                     slt64(gtid_32860,
                                                                           nm_30208))) {
            ((__global float *) mem_param_43584)[ctx_param_ext_43579 +
                                                 (gtid_32859 *
                                                  ctx_param_ext_43580 +
                                                  gtid_32860 *
                                                  ctx_param_ext_43582)] =
                write_value_33236;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33230
}
__kernel void mainDetailedzisegmap_32915(__global int *global_failure,
                                         int64_t m_30057, int32_t k2p2zq_30074,
                                         int64_t nm_30208,
                                         int32_t i64_res_30216, int32_t i_33129,
                                         int64_t i_33131,
                                         int64_t ctx_param_ext_43579,
                                         int64_t ctx_param_ext_43580,
                                         int64_t ctx_param_ext_43582, __global
                                         unsigned char *mem_param_43584,
                                         __global unsigned char *mem_43600,
                                         __global unsigned char *mem_43604)
{
    #define segmap_group_sizze_33196 (mainDetailedzisegmap_group_sizze_32918)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44811;
    int32_t local_tid_44812;
    int64_t group_sizze_44815;
    int32_t wave_sizze_44814;
    int32_t group_tid_44813;
    
    global_tid_44811 = get_global_id(0);
    local_tid_44812 = get_local_id(0);
    group_sizze_44815 = get_local_size(0);
    wave_sizze_44814 = LOCKSTEP_WIDTH;
    group_tid_44813 = get_group_id(0);
    
    int32_t phys_tid_32915;
    
    phys_tid_32915 = global_tid_44811;
    
    int64_t gtid_32913;
    
    gtid_32913 = squot64(sext_i32_i64(group_tid_44813) *
                         segmap_group_sizze_33196 +
                         sext_i32_i64(local_tid_44812), nm_30208);
    
    int64_t gtid_32914;
    
    gtid_32914 = sext_i32_i64(group_tid_44813) * segmap_group_sizze_33196 +
        sext_i32_i64(local_tid_44812) - squot64(sext_i32_i64(group_tid_44813) *
                                                segmap_group_sizze_33196 +
                                                sext_i32_i64(local_tid_44812),
                                                nm_30208) * nm_30208;
    if (slt64(gtid_32913, m_30057) && slt64(gtid_32914, nm_30208)) {
        bool cond_33201 = ((__global bool *) mem_43600)[gtid_32913];
        int32_t defunc_0_f_res_33203 = sext_i64_i32(gtid_32914);
        int32_t defunc_0_f_res_33204 = sdiv32(defunc_0_f_res_33203,
                                              i64_res_30216);
        int32_t defunc_0_f_res_33205 = smod32(defunc_0_f_res_33203,
                                              i64_res_30216);
        float defunc_0_f_res_33206;
        
        if (cond_33201) {
            int32_t x_33207 = mul32(i64_res_30216, defunc_0_f_res_33204);
            int32_t i_33208 = add32(defunc_0_f_res_33205, x_33207);
            int64_t i_33209 = sext_i32_i64(i_33208);
            float defunc_0_f_res_t_res_33210 = ((__global
                                                 float *) mem_param_43584)[ctx_param_ext_43579 +
                                                                           (gtid_32913 *
                                                                            ctx_param_ext_43580 +
                                                                            i_33209 *
                                                                            ctx_param_ext_43582)];
            
            defunc_0_f_res_33206 = defunc_0_f_res_t_res_33210;
        } else {
            float v1_33200 = ((__global
                               float *) mem_param_43584)[ctx_param_ext_43579 +
                                                         (gtid_32913 *
                                                          ctx_param_ext_43580 +
                                                          i_33131 *
                                                          ctx_param_ext_43582)];
            int64_t j_33211 = sext_i32_i64(defunc_0_f_res_33205);
            float x_33212 = ((__global
                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                        (gtid_32913 *
                                                         ctx_param_ext_43580 +
                                                         j_33211 *
                                                         ctx_param_ext_43582)];
            float x_33213 = x_33212 / v1_33200;
            int32_t y_33214 = sub32(k2p2zq_30074, 1);
            bool cond_33215 = slt32(defunc_0_f_res_33204, y_33214);
            float defunc_0_f_res_f_res_33216;
            
            if (cond_33215) {
                int32_t x_33217 = add32(1, defunc_0_f_res_33204);
                int32_t x_33218 = mul32(i64_res_30216, x_33217);
                int32_t i_33219 = add32(defunc_0_f_res_33205, x_33218);
                int64_t i_33220 = sext_i32_i64(i_33219);
                float x_33221 = ((__global
                                  float *) mem_param_43584)[ctx_param_ext_43579 +
                                                            (gtid_32913 *
                                                             ctx_param_ext_43580 +
                                                             i_33220 *
                                                             ctx_param_ext_43582)];
                int32_t i_33222 = add32(i_33129, x_33218);
                int64_t i_33223 = sext_i32_i64(i_33222);
                float x_33224 = ((__global
                                  float *) mem_param_43584)[ctx_param_ext_43579 +
                                                            (gtid_32913 *
                                                             ctx_param_ext_43580 +
                                                             i_33223 *
                                                             ctx_param_ext_43582)];
                float y_33225 = x_33213 * x_33224;
                float defunc_0_f_res_f_res_t_res_33226 = x_33221 - y_33225;
                
                defunc_0_f_res_f_res_33216 = defunc_0_f_res_f_res_t_res_33226;
            } else {
                defunc_0_f_res_f_res_33216 = x_33213;
            }
            defunc_0_f_res_33206 = defunc_0_f_res_f_res_33216;
        }
        ((__global float *) mem_43604)[gtid_32913 * nm_30208 + gtid_32914] =
            defunc_0_f_res_33206;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33196
}
__kernel void mainDetailedzisegmap_32983(__global int *global_failure,
                                         int64_t m_30057, int64_t i_33131,
                                         int64_t ctx_param_ext_43579,
                                         int64_t ctx_param_ext_43580,
                                         int64_t ctx_param_ext_43582, __global
                                         unsigned char *mem_param_43584,
                                         __global unsigned char *mem_43600)
{
    #define segmap_group_sizze_33180 (mainDetailedzisegmap_group_sizze_32985)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44806;
    int32_t local_tid_44807;
    int64_t group_sizze_44810;
    int32_t wave_sizze_44809;
    int32_t group_tid_44808;
    
    global_tid_44806 = get_global_id(0);
    local_tid_44807 = get_local_id(0);
    group_sizze_44810 = get_local_size(0);
    wave_sizze_44809 = LOCKSTEP_WIDTH;
    group_tid_44808 = get_group_id(0);
    
    int32_t phys_tid_32983;
    
    phys_tid_32983 = global_tid_44806;
    
    int64_t gtid_32982;
    
    gtid_32982 = sext_i32_i64(group_tid_44808) * segmap_group_sizze_33180 +
        sext_i32_i64(local_tid_44807);
    if (slt64(gtid_32982, m_30057)) {
        float v1_33185 = ((__global
                           float *) mem_param_43584)[ctx_param_ext_43579 +
                                                     (gtid_32982 *
                                                      ctx_param_ext_43580 +
                                                      i_33131 *
                                                      ctx_param_ext_43582)];
        bool cond_33186 = v1_33185 == 0.0F;
        
        ((__global bool *) mem_43600)[gtid_32982] = cond_33186;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33180
}
__kernel void mainDetailedzisegmap_33074(__global int *global_failure,
                                         int64_t m_30057, int64_t i32_res_30076,
                                         int64_t m_30207, int64_t nm_30208,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43544,
                                         __global unsigned char *mem_43576)
{
    #define segmap_group_sizze_33114 (mainDetailedzisegmap_group_sizze_33077)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44773;
    int32_t local_tid_44774;
    int64_t group_sizze_44777;
    int32_t wave_sizze_44776;
    int32_t group_tid_44775;
    
    global_tid_44773 = get_global_id(0);
    local_tid_44774 = get_local_id(0);
    group_sizze_44777 = get_local_size(0);
    wave_sizze_44776 = LOCKSTEP_WIDTH;
    group_tid_44775 = get_group_id(0);
    
    int32_t phys_tid_33074;
    
    phys_tid_33074 = global_tid_44773;
    
    int64_t gtid_33072;
    
    gtid_33072 = squot64(sext_i32_i64(group_tid_44775) *
                         segmap_group_sizze_33114 +
                         sext_i32_i64(local_tid_44774), nm_30208);
    
    int64_t gtid_33073;
    
    gtid_33073 = sext_i32_i64(group_tid_44775) * segmap_group_sizze_33114 +
        sext_i32_i64(local_tid_44774) - squot64(sext_i32_i64(group_tid_44775) *
                                                segmap_group_sizze_33114 +
                                                sext_i32_i64(local_tid_44774),
                                                nm_30208) * nm_30208;
    if (slt64(gtid_33072, m_30057) && slt64(gtid_33073, nm_30208)) {
        int64_t defunc_0_f_res_33119 = sdiv64(gtid_33073, m_30207);
        int64_t defunc_0_f_res_33120 = smod64(gtid_33073, m_30207);
        bool cond_33121 = slt64(defunc_0_f_res_33120, i32_res_30076);
        float defunc_0_f_res_33122;
        
        if (cond_33121) {
            float defunc_0_f_res_t_res_33123 = ((__global
                                                 float *) defunc_3_map_res_mem_43544)[gtid_33072 *
                                                                                      (i32_res_30076 *
                                                                                       i32_res_30076) +
                                                                                      defunc_0_f_res_33119 *
                                                                                      i32_res_30076 +
                                                                                      defunc_0_f_res_33120];
            
            defunc_0_f_res_33122 = defunc_0_f_res_t_res_33123;
        } else {
            int64_t y_33124 = add64(i32_res_30076, defunc_0_f_res_33119);
            bool cond_33125 = defunc_0_f_res_33120 == y_33124;
            float defunc_0_f_res_f_res_33126;
            
            if (cond_33125) {
                defunc_0_f_res_f_res_33126 = 1.0F;
            } else {
                defunc_0_f_res_f_res_33126 = 0.0F;
            }
            defunc_0_f_res_33122 = defunc_0_f_res_f_res_33126;
        }
        ((__global float *) mem_43576)[gtid_33072 * nm_30208 + gtid_33073] =
            defunc_0_f_res_33122;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33114
}
__kernel void mainDetailedzisegmap_33280(__global int *global_failure,
                                         int64_t N_30056, int64_t m_30057,
                                         int32_t n_30061, int32_t k2p2zq_30074,
                                         int64_t i32_res_30076,
                                         int64_t num_groups_33301, __global
                                         unsigned char *binop_p_mem_43387,
                                         __global unsigned char *mem_43630,
                                         __global unsigned char *mem_43633,
                                         __global unsigned char *mem_43648)
{
    #define segmap_group_sizze_33300 (mainDetailedzisegmap_group_sizze_33282)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44830;
    int32_t local_tid_44831;
    int64_t group_sizze_44834;
    int32_t wave_sizze_44833;
    int32_t group_tid_44832;
    
    global_tid_44830 = get_global_id(0);
    local_tid_44831 = get_local_id(0);
    group_sizze_44834 = get_local_size(0);
    wave_sizze_44833 = LOCKSTEP_WIDTH;
    group_tid_44832 = get_group_id(0);
    
    int32_t phys_tid_33280;
    
    phys_tid_33280 = global_tid_44830;
    
    int32_t phys_group_id_44835;
    
    phys_group_id_44835 = get_group_id(0);
    for (int32_t i_44836 = 0; i_44836 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057, segmap_group_sizze_33300)) -
                   phys_group_id_44835, sext_i64_i32(num_groups_33301));
         i_44836++) {
        int32_t virt_group_id_44837 = phys_group_id_44835 + i_44836 *
                sext_i64_i32(num_groups_33301);
        int64_t gtid_33279 = sext_i32_i64(virt_group_id_44837) *
                segmap_group_sizze_33300 + sext_i32_i64(local_tid_44831);
        
        if (slt64(gtid_33279, m_30057)) {
            for (int32_t i_43359 = 0; i_43359 < k2p2zq_30074; i_43359++) {
                int64_t i_43257 = sext_i32_i64(i_43359);
                float defunc_2_reduce_res_33307;
                float redout_43259 = 0.0F;
                
                for (int32_t i_43358 = 0; i_43358 < n_30061; i_43358++) {
                    int64_t i_43260 = sext_i32_i64(i_43358);
                    float x_33312 = ((__global float *) mem_43630)[i_43260 *
                                                                   m_30057 +
                                                                   gtid_33279];
                    bool isnan_res_33313;
                    
                    isnan_res_33313 = futrts_isnan32(x_33312);
                    
                    float defunc_1_f_res_33314;
                    
                    if (isnan_res_33313) {
                        defunc_1_f_res_33314 = 0.0F;
                    } else {
                        float x_33311 = ((__global
                                          float *) binop_p_mem_43387)[i_43257 *
                                                                      N_30056 +
                                                                      i_43260];
                        float defunc_1_f_res_f_res_33315 = x_33311 * x_33312;
                        
                        defunc_1_f_res_33314 = defunc_1_f_res_f_res_33315;
                    }
                    
                    float defunc_1_op_res_33310 = defunc_1_f_res_33314 +
                          redout_43259;
                    float redout_tmp_44839 = defunc_1_op_res_33310;
                    
                    redout_43259 = redout_tmp_44839;
                }
                defunc_2_reduce_res_33307 = redout_43259;
                ((__global float *) mem_43633)[phys_tid_33280 + i_43257 *
                                               (num_groups_33301 *
                                                segmap_group_sizze_33300)] =
                    defunc_2_reduce_res_33307;
            }
            for (int64_t i_44840 = 0; i_44840 < i32_res_30076; i_44840++) {
                ((__global float *) mem_43648)[i_44840 * m_30057 + gtid_33279] =
                    ((__global float *) mem_43633)[phys_tid_33280 + i_44840 *
                                                   (num_groups_33301 *
                                                    segmap_group_sizze_33300)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33300
}
__kernel void mainDetailedzisegmap_33421(__global int *global_failure,
                                         int64_t m_30057, int32_t k2p2zq_30074,
                                         int64_t i32_res_30076,
                                         int64_t num_groups_33441, __global
                                         unsigned char *mem_43722, __global
                                         unsigned char *mem_43725, __global
                                         unsigned char *mem_43728, __global
                                         unsigned char *mem_43743)
{
    #define segmap_group_sizze_33440 (mainDetailedzisegmap_group_sizze_33423)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44918;
    int32_t local_tid_44919;
    int64_t group_sizze_44922;
    int32_t wave_sizze_44921;
    int32_t group_tid_44920;
    
    global_tid_44918 = get_global_id(0);
    local_tid_44919 = get_local_id(0);
    group_sizze_44922 = get_local_size(0);
    wave_sizze_44921 = LOCKSTEP_WIDTH;
    group_tid_44920 = get_group_id(0);
    
    int32_t phys_tid_33421;
    
    phys_tid_33421 = global_tid_44918;
    
    int32_t phys_group_id_44923;
    
    phys_group_id_44923 = get_group_id(0);
    for (int32_t i_44924 = 0; i_44924 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057, segmap_group_sizze_33440)) -
                   phys_group_id_44923, sext_i64_i32(num_groups_33441));
         i_44924++) {
        int32_t virt_group_id_44925 = phys_group_id_44923 + i_44924 *
                sext_i64_i32(num_groups_33441);
        int64_t gtid_33420 = sext_i32_i64(virt_group_id_44925) *
                segmap_group_sizze_33440 + sext_i32_i64(local_tid_44919);
        
        if (slt64(gtid_33420, m_30057)) {
            for (int32_t i_43361 = 0; i_43361 < k2p2zq_30074; i_43361++) {
                int64_t i_43267 = sext_i32_i64(i_43361);
                float defunc_0_f_res_33448;
                float redout_43269 = 0.0F;
                
                for (int32_t i_43360 = 0; i_43360 < k2p2zq_30074; i_43360++) {
                    int64_t i_43270 = sext_i32_i64(i_43360);
                    float x_33452 = ((__global float *) mem_43725)[i_43270 *
                                                                   m_30057 +
                                                                   gtid_33420];
                    float x_33453 = ((__global float *) mem_43722)[i_43267 *
                                                                   (m_30057 *
                                                                    i32_res_30076) +
                                                                   i_43270 *
                                                                   m_30057 +
                                                                   gtid_33420];
                    float defunc_1_f_res_33454 = x_33452 * x_33453;
                    float defunc_1_op_res_33451 = defunc_1_f_res_33454 +
                          redout_43269;
                    float redout_tmp_44927 = defunc_1_op_res_33451;
                    
                    redout_43269 = redout_tmp_44927;
                }
                defunc_0_f_res_33448 = redout_43269;
                ((__global float *) mem_43728)[phys_tid_33421 + i_43267 *
                                               (num_groups_33441 *
                                                segmap_group_sizze_33440)] =
                    defunc_0_f_res_33448;
            }
            for (int64_t i_44928 = 0; i_44928 < i32_res_30076; i_44928++) {
                ((__global float *) mem_43743)[i_44928 * m_30057 + gtid_33420] =
                    ((__global float *) mem_43728)[phys_tid_33421 + i_44928 *
                                                   (num_groups_33441 *
                                                    segmap_group_sizze_33440)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33440
}
__kernel void mainDetailedzisegmap_33553(__global int *global_failure,
                                         int64_t N_30056, int64_t m_30057,
                                         int32_t k2p2zq_30074,
                                         int64_t i32_res_30076,
                                         int64_t num_groups_33572, __global
                                         unsigned char *mem_43394, __global
                                         unsigned char *mem_43814, __global
                                         unsigned char *mem_43817, __global
                                         unsigned char *mem_43832)
{
    #define segmap_group_sizze_33571 (mainDetailedzisegmap_group_sizze_33555)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45006;
    int32_t local_tid_45007;
    int64_t group_sizze_45010;
    int32_t wave_sizze_45009;
    int32_t group_tid_45008;
    
    global_tid_45006 = get_global_id(0);
    local_tid_45007 = get_local_id(0);
    group_sizze_45010 = get_local_size(0);
    wave_sizze_45009 = LOCKSTEP_WIDTH;
    group_tid_45008 = get_group_id(0);
    
    int32_t phys_tid_33553;
    
    phys_tid_33553 = global_tid_45006;
    
    int32_t phys_group_id_45011;
    
    phys_group_id_45011 = get_group_id(0);
    for (int32_t i_45012 = 0; i_45012 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057, segmap_group_sizze_33571)) -
                   phys_group_id_45011, sext_i64_i32(num_groups_33572));
         i_45012++) {
        int32_t virt_group_id_45013 = phys_group_id_45011 + i_45012 *
                sext_i64_i32(num_groups_33572);
        int64_t gtid_33552 = sext_i32_i64(virt_group_id_45013) *
                segmap_group_sizze_33571 + sext_i32_i64(local_tid_45007);
        
        if (slt64(gtid_33552, m_30057)) {
            for (int64_t i_43277 = 0; i_43277 < N_30056; i_43277++) {
                float defunc_0_f_res_33578;
                float redout_43279 = 0.0F;
                
                for (int32_t i_43364 = 0; i_43364 < k2p2zq_30074; i_43364++) {
                    int64_t i_43280 = sext_i32_i64(i_43364);
                    float x_33582 = ((__global float *) mem_43814)[i_43280 *
                                                                   m_30057 +
                                                                   gtid_33552];
                    float x_33583 = ((__global float *) mem_43394)[i_43277 *
                                                                   i32_res_30076 +
                                                                   i_43280];
                    float defunc_1_f_res_33584 = x_33582 * x_33583;
                    float defunc_1_op_res_33581 = defunc_1_f_res_33584 +
                          redout_43279;
                    float redout_tmp_45015 = defunc_1_op_res_33581;
                    
                    redout_43279 = redout_tmp_45015;
                }
                defunc_0_f_res_33578 = redout_43279;
                ((__global float *) mem_43817)[phys_tid_33553 + i_43277 *
                                               (num_groups_33572 *
                                                segmap_group_sizze_33571)] =
                    defunc_0_f_res_33578;
            }
            for (int64_t i_45016 = 0; i_45016 < N_30056; i_45016++) {
                ((__global float *) mem_43832)[i_45016 * m_30057 + gtid_33552] =
                    ((__global float *) mem_43817)[phys_tid_33553 + i_45016 *
                                                   (num_groups_33572 *
                                                    segmap_group_sizze_33571)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33571
}
__kernel void mainDetailedzisegmap_33833(__global int *global_failure,
                                         int64_t N_30056, int64_t m_30057,
                                         __global unsigned char *mem_43908,
                                         __global unsigned char *mem_43911,
                                         __global unsigned char *mem_43934,
                                         __global unsigned char *mem_43937)
{
    #define segmap_group_sizze_33999 (mainDetailedzisegmap_group_sizze_33836)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45189;
    int32_t local_tid_45190;
    int64_t group_sizze_45193;
    int32_t wave_sizze_45192;
    int32_t group_tid_45191;
    
    global_tid_45189 = get_global_id(0);
    local_tid_45190 = get_local_id(0);
    group_sizze_45193 = get_local_size(0);
    wave_sizze_45192 = LOCKSTEP_WIDTH;
    group_tid_45191 = get_group_id(0);
    
    int32_t phys_tid_33833;
    
    phys_tid_33833 = global_tid_45189;
    
    int64_t gtid_33831;
    
    gtid_33831 = squot64(sext_i32_i64(group_tid_45191) *
                         segmap_group_sizze_33999 +
                         sext_i32_i64(local_tid_45190), N_30056);
    
    int64_t gtid_33832;
    
    gtid_33832 = sext_i32_i64(group_tid_45191) * segmap_group_sizze_33999 +
        sext_i32_i64(local_tid_45190) - squot64(sext_i32_i64(group_tid_45191) *
                                                segmap_group_sizze_33999 +
                                                sext_i32_i64(local_tid_45190),
                                                N_30056) * N_30056;
    if (slt64(gtid_33831, m_30057) && slt64(gtid_33832, N_30056)) {
        float x_34007 = ((__global float *) mem_43937)[gtid_33831 * N_30056 +
                                                       gtid_33832];
        int32_t index_primexp_41448 = sext_i64_i32(gtid_33832);
        bool isnan_res_34010;
        
        isnan_res_34010 = futrts_isnan32(x_34007);
        
        bool defunc_0_p_res_34011 = !isnan_res_34010;
        int64_t defunc_1_f_res_34012;
        
        if (defunc_0_p_res_34011) {
            int64_t x_34008 = ((__global int64_t *) mem_43934)[gtid_33831 *
                                                               N_30056 +
                                                               gtid_33832];
            int64_t defunc_1_f_res_t_res_34013 = sub64(x_34008, 1);
            
            defunc_1_f_res_34012 = defunc_1_f_res_t_res_34013;
        } else {
            defunc_1_f_res_34012 = -1;
        }
        if ((sle64(0, gtid_33831) && slt64(gtid_33831, m_30057)) && (sle64(0,
                                                                           defunc_1_f_res_34012) &&
                                                                     slt64(defunc_1_f_res_34012,
                                                                           N_30056))) {
            ((__global int32_t *) mem_43911)[gtid_33831 * N_30056 +
                                             defunc_1_f_res_34012] =
                index_primexp_41448;
        }
        if ((sle64(0, gtid_33831) && slt64(gtid_33831, m_30057)) && (sle64(0,
                                                                           defunc_1_f_res_34012) &&
                                                                     slt64(defunc_1_f_res_34012,
                                                                           N_30056))) {
            ((__global float *) mem_43908)[gtid_33831 * N_30056 +
                                           defunc_1_f_res_34012] = x_34007;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33999
}
__kernel void mainDetailedzisegmap_33909(__global int *global_failure,
                                         int64_t N_30056, int64_t m_30057,
                                         int64_t i_30323, __global
                                         unsigned char *mem_43934, __global
                                         unsigned char *mem_43940)
{
    #define segmap_group_sizze_33963 (mainDetailedzisegmap_group_sizze_33911)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45184;
    int32_t local_tid_45185;
    int64_t group_sizze_45188;
    int32_t wave_sizze_45187;
    int32_t group_tid_45186;
    
    global_tid_45184 = get_global_id(0);
    local_tid_45185 = get_local_id(0);
    group_sizze_45188 = get_local_size(0);
    wave_sizze_45187 = LOCKSTEP_WIDTH;
    group_tid_45186 = get_group_id(0);
    
    int32_t phys_tid_33909;
    
    phys_tid_33909 = global_tid_45184;
    
    int64_t gtid_33908;
    
    gtid_33908 = sext_i32_i64(group_tid_45186) * segmap_group_sizze_33963 +
        sext_i32_i64(local_tid_45185);
    if (slt64(gtid_33908, m_30057)) {
        int64_t last_res_33967 = ((__global int64_t *) mem_43934)[gtid_33908 *
                                                                  N_30056 +
                                                                  i_30323];
        int32_t defunc_0_f_res_33968 = sext_i64_i32(last_res_33967);
        
        ((__global int32_t *) mem_43940)[gtid_33908] = defunc_0_f_res_33968;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33963
}
__kernel void mainDetailedzisegmap_34160(__global int *global_failure,
                                         int64_t m_30057, float hfrac_30063,
                                         int32_t k2p2_30072, __global
                                         unsigned char *mem_44010, __global
                                         unsigned char *mem_44013, __global
                                         unsigned char *mem_44016, __global
                                         unsigned char *mem_44018)
{
    #define segmap_group_sizze_34245 (mainDetailedzisegmap_group_sizze_34162)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45344;
    int32_t local_tid_45345;
    int64_t group_sizze_45348;
    int32_t wave_sizze_45347;
    int32_t group_tid_45346;
    
    global_tid_45344 = get_global_id(0);
    local_tid_45345 = get_local_id(0);
    group_sizze_45348 = get_local_size(0);
    wave_sizze_45347 = LOCKSTEP_WIDTH;
    group_tid_45346 = get_group_id(0);
    
    int32_t phys_tid_34160;
    
    phys_tid_34160 = global_tid_45344;
    
    int64_t gtid_34159;
    
    gtid_34159 = sext_i32_i64(group_tid_45346) * segmap_group_sizze_34245 +
        sext_i32_i64(local_tid_45345);
    if (slt64(gtid_34159, m_30057)) {
        int32_t defunc_0_f_res_34249 = ((__global
                                         int32_t *) mem_44010)[gtid_34159];
        float defunc_0_f_res_34250 = ((__global float *) mem_44013)[gtid_34159];
        int32_t r32_arg_34251 = sub32(defunc_0_f_res_34249, k2p2_30072);
        float i32_res_34252 = sitofp_i32_f32(r32_arg_34251);
        float sqrt_arg_34253 = defunc_0_f_res_34250 / i32_res_34252;
        float sqrt_res_34254;
        
        sqrt_res_34254 = futrts_sqrt32(sqrt_arg_34253);
        
        float i32_res_34255 = sitofp_i32_f32(defunc_0_f_res_34249);
        float t32_arg_34256 = hfrac_30063 * i32_res_34255;
        int32_t f32_res_34257 = fptosi_f32_i32(t32_arg_34256);
        
        ((__global int32_t *) mem_44016)[gtid_34159] = f32_res_34257;
        ((__global float *) mem_44018)[gtid_34159] = sqrt_res_34254;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34245
}
__kernel void mainDetailedzisegmap_34431(__global int *global_failure,
                                         float lam_30064,
                                         int64_t iota32_arg_30443,
                                         int32_t x_30448, float i32_res_30456,
                                         __global
                                         unsigned char *mappingindices_mem_43377,
                                         __global unsigned char *mem_44076,
                                         __global unsigned char *mem_44078)
{
    #define segmap_group_sizze_34450 (mainDetailedzisegmap_group_sizze_34433)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45454;
    int32_t local_tid_45455;
    int64_t group_sizze_45458;
    int32_t wave_sizze_45457;
    int32_t group_tid_45456;
    
    global_tid_45454 = get_global_id(0);
    local_tid_45455 = get_local_id(0);
    group_sizze_45458 = get_local_size(0);
    wave_sizze_45457 = LOCKSTEP_WIDTH;
    group_tid_45456 = get_group_id(0);
    
    int32_t phys_tid_34431;
    
    phys_tid_34431 = global_tid_45454;
    
    int64_t gtid_34430;
    
    gtid_34430 = sext_i32_i64(group_tid_45456) * segmap_group_sizze_34450 +
        sext_i32_i64(local_tid_45455);
    if (slt64(gtid_34430, iota32_arg_30443)) {
        int32_t defunc_0_f_res_34455 = sext_i64_i32(gtid_34430);
        int32_t t_34456 = add32(x_30448, defunc_0_f_res_34455);
        int32_t i_34457 = sub32(t_34456, 1);
        int64_t i_34458 = sext_i32_i64(i_34457);
        int32_t time_34459 = ((__global
                               int32_t *) mappingindices_mem_43377)[i_34458];
        float i32_res_34460 = sitofp_i32_f32(time_34459);
        float logplus_arg_34461 = i32_res_34460 / i32_res_30456;
        bool cond_34462 = 2.7182817F < logplus_arg_34461;
        float logplus_res_34463;
        
        if (cond_34462) {
            float log_res_34464;
            
            log_res_34464 = futrts_log32(logplus_arg_34461);
            logplus_res_34463 = log_res_34464;
        } else {
            logplus_res_34463 = 1.0F;
        }
        
        float sqrt_res_34465;
        
        sqrt_res_34465 = futrts_sqrt32(logplus_res_34463);
        
        float defunc_0_f_res_34466 = lam_30064 * sqrt_res_34465;
        
        ((__global int32_t *) mem_44076)[gtid_34430] = defunc_0_f_res_34455;
        ((__global float *) mem_44078)[gtid_34430] = defunc_0_f_res_34466;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34450
}
__kernel void mainDetailedzisegmap_34506(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_30056, int64_t m_30057,
                                         int32_t n_30061,
                                         int64_t iota32_arg_30443,
                                         int32_t iters_30474, int64_t i_30476,
                                         int64_t num_groups_34760, __global
                                         unsigned char *defunc_4_map_res_mem_43942,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43943,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43944,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44022,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44023,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44024,
                                         __global
                                         unsigned char *defunc_0_f_res_mem_44073,
                                         __global unsigned char *mem_44078,
                                         __global unsigned char *mem_44084,
                                         __global unsigned char *mem_44098,
                                         __global unsigned char *mem_44117,
                                         __global unsigned char *mem_44119,
                                         __global unsigned char *mem_44121,
                                         __global unsigned char *mem_44123,
                                         __global unsigned char *mem_44125,
                                         __global unsigned char *mem_44187,
                                         __global unsigned char *mem_44206,
                                         __global unsigned char *mem_44221,
                                         __global unsigned char *mem_44224,
                                         __global unsigned char *mem_44226,
                                         __global unsigned char *mem_44228,
                                         __global unsigned char *mem_44230,
                                         __global
                                         unsigned char *double_buffer_mem_44479)
{
    #define segmap_group_sizze_34759 (mainDetailedzisegmap_group_sizze_34508)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45464;
    int32_t local_tid_45465;
    int64_t group_sizze_45468;
    int32_t wave_sizze_45467;
    int32_t group_tid_45466;
    
    global_tid_45464 = get_global_id(0);
    local_tid_45465 = get_local_id(0);
    group_sizze_45468 = get_local_size(0);
    wave_sizze_45467 = LOCKSTEP_WIDTH;
    group_tid_45466 = get_group_id(0);
    
    int32_t phys_tid_34506;
    
    phys_tid_34506 = global_tid_45464;
    
    int32_t phys_group_id_45469;
    
    phys_group_id_45469 = get_group_id(0);
    for (int32_t i_45470 = 0; i_45470 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057, segmap_group_sizze_34759)) -
                   phys_group_id_45469, sext_i64_i32(num_groups_34760));
         i_45470++) {
        int32_t virt_group_id_45471 = phys_group_id_45469 + i_45470 *
                sext_i64_i32(num_groups_34760);
        int64_t gtid_34505 = sext_i32_i64(virt_group_id_45471) *
                segmap_group_sizze_34759 + sext_i32_i64(local_tid_45465);
        
        if (slt64(gtid_34505, m_30057)) {
            int32_t x_34767 = ((__global
                                int32_t *) defunc_4_map_res_mem_43942)[gtid_34505];
            int32_t x_34768 = ((__global
                                int32_t *) defunc_3_map_res_mem_44023)[gtid_34505];
            float x_34769 = ((__global
                              float *) defunc_3_map_res_mem_44024)[gtid_34505];
            int32_t x_34770 = ((__global
                                int32_t *) defunc_3_map_res_mem_44022)[gtid_34505];
            float x_34771 = ((__global
                              float *) defunc_0_f_res_mem_44073)[gtid_34505];
            int32_t y_34774 = sub32(x_34767, x_34768);
            float i32_res_34775 = sitofp_i32_f32(x_34768);
            float sqrt_res_34776;
            
            sqrt_res_34776 = futrts_sqrt32(i32_res_34775);
            
            float y_34777 = x_34769 * sqrt_res_34776;
            float inpacc_34778;
            bool defunc_0_f_res_34779;
            int32_t defunc_0_f_res_34780;
            float defunc_0_f_res_34781;
            float inpacc_34784;
            bool inpacc_34785;
            int32_t inpacc_34786;
            float inpacc_34787;
            
            inpacc_34784 = 0.0F;
            inpacc_34785 = 0;
            inpacc_34786 = -1;
            inpacc_34787 = 0.0F;
            for (int64_t i_43227 = 0; i_43227 < iota32_arg_30443; i_43227++) {
                int32_t index_primexp_43234 = sext_i64_i32(i_43227);
                bool cond_34795 = sle32(y_34774, index_primexp_43234);
                float defunc_0_f_res_34796;
                
                if (cond_34795) {
                    defunc_0_f_res_34796 = 0.0F;
                } else {
                    bool cond_34797 = index_primexp_43234 == 0;
                    float defunc_0_f_res_f_res_34798;
                    
                    if (cond_34797) {
                        defunc_0_f_res_f_res_34798 = x_34771;
                    } else {
                        int32_t i_34799 = add32(x_34768, index_primexp_43234);
                        int64_t i_34800 = sext_i32_i64(i_34799);
                        float x_34801 = ((__global
                                          float *) defunc_4_map_res_mem_43943)[gtid_34505 *
                                                                               N_30056 +
                                                                               i_34800];
                        int32_t x_34802 = sub32(x_34768, x_34770);
                        int32_t i_34803 = add32(x_34802, index_primexp_43234);
                        int64_t i_34804 = sext_i32_i64(i_34803);
                        float y_34805 = ((__global
                                          float *) defunc_4_map_res_mem_43943)[gtid_34505 *
                                                                               N_30056 +
                                                                               i_34804];
                        float defunc_0_f_res_f_res_f_res_34806 = x_34801 -
                              y_34805;
                        
                        defunc_0_f_res_f_res_34798 =
                            defunc_0_f_res_f_res_f_res_34806;
                    }
                    defunc_0_f_res_34796 = defunc_0_f_res_f_res_34798;
                }
                
                float defunc_1_op_res_34811 = inpacc_34784 +
                      defunc_0_f_res_34796;
                float x_34831 = ((__global float *) mem_44078)[i_43227];
                float defunc_0_f_res_34834 = defunc_1_op_res_34811 / y_34777;
                bool cond_34835 = slt32(index_primexp_43234, y_34774);
                bool isnan_res_34836;
                
                isnan_res_34836 = futrts_isnan32(defunc_0_f_res_34834);
                
                bool cond_t_res_34837 = !isnan_res_34836;
                bool x_34838 = cond_34835 && cond_t_res_34837;
                float abs_res_34839 = (float) fabs(defunc_0_f_res_34834);
                bool defunc_2_f_res_t_res_34840 = x_34831 < abs_res_34839;
                bool x_34841 = x_34838 && defunc_2_f_res_t_res_34840;
                float defunc_1_f_res_34842;
                
                if (cond_34835) {
                    defunc_1_f_res_34842 = defunc_0_f_res_34834;
                } else {
                    defunc_1_f_res_34842 = 0.0F;
                }
                
                int32_t x_34820 = index_primexp_43234;
                bool x_34824 = x_34841 && x_34841;
                int32_t defunc_1_op_res_f_res_34828;
                
                if (x_34841) {
                    defunc_1_op_res_f_res_34828 = x_34820;
                } else {
                    defunc_1_op_res_f_res_34828 = -1;
                }
                
                bool defunc_1_op_res_34843;
                int32_t defunc_1_op_res_34844;
                
                if (inpacc_34785) {
                    defunc_1_op_res_34843 = inpacc_34785;
                    defunc_1_op_res_34844 = inpacc_34786;
                } else {
                    bool x_34845 = x_34824 && x_34824;
                    bool x_34846 = !x_34824;
                    bool y_34847 = inpacc_34785 && x_34846;
                    bool defunc_1_op_res_f_res_34848 = x_34845 || y_34847;
                    int32_t defunc_1_op_res_f_res_34849;
                    
                    if (x_34824) {
                        defunc_1_op_res_f_res_34849 =
                            defunc_1_op_res_f_res_34828;
                    } else {
                        defunc_1_op_res_f_res_34849 = inpacc_34786;
                    }
                    defunc_1_op_res_34843 = defunc_1_op_res_f_res_34848;
                    defunc_1_op_res_34844 = defunc_1_op_res_f_res_34849;
                }
                
                float defunc_1_op_res_34850 = inpacc_34787 +
                      defunc_1_f_res_34842;
                
                ((__global float *) mem_44084)[phys_tid_34506 + i_43227 *
                                               (num_groups_34760 *
                                                segmap_group_sizze_34759)] =
                    defunc_0_f_res_34834;
                
                float inpacc_tmp_45472 = defunc_1_op_res_34811;
                bool inpacc_tmp_45473 = defunc_1_op_res_34843;
                int32_t inpacc_tmp_45474 = defunc_1_op_res_34844;
                float inpacc_tmp_45475 = defunc_1_op_res_34850;
                
                inpacc_34784 = inpacc_tmp_45472;
                inpacc_34785 = inpacc_tmp_45473;
                inpacc_34786 = inpacc_tmp_45474;
                inpacc_34787 = inpacc_tmp_45475;
            }
            inpacc_34778 = inpacc_34784;
            defunc_0_f_res_34779 = inpacc_34785;
            defunc_0_f_res_34780 = inpacc_34786;
            defunc_0_f_res_34781 = inpacc_34787;
            
            bool cond_34851 = y_34774 == 0;
            float defunc_0_f_res_34852;
            
            if (cond_34851) {
                defunc_0_f_res_34852 = 0.0F;
            } else {
                float i32_res_34853 = sitofp_i32_f32(y_34774);
                float defunc_0_f_res_f_res_34854 = defunc_0_f_res_34781 /
                      i32_res_34853;
                
                defunc_0_f_res_34852 = defunc_0_f_res_f_res_34854;
            }
            for (int64_t i_43301 = 0; i_43301 < iota32_arg_30443; i_43301++) {
                int32_t index_primexp_43368 = sext_i64_i32(i_43301);
                bool cond_34857 = slt32(index_primexp_43368, y_34774);
                bool cond_34858;
                
                if (cond_34857) {
                    int32_t i_34859 = add32(x_34768, index_primexp_43368);
                    int64_t i_34860 = sext_i32_i64(i_34859);
                    bool x_34861 = sle64(0, i_34860);
                    bool y_34862 = slt64(i_34860, N_30056);
                    bool bounds_check_34863 = x_34861 && y_34862;
                    bool index_certs_34864;
                    
                    if (!bounds_check_34863) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = i_34860;
                                global_failure_args[1] = N_30056;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float isnan_arg_34865 = ((__global
                                              float *) defunc_4_map_res_mem_43943)[gtid_34505 *
                                                                                   N_30056 +
                                                                                   i_34860];
                    bool isnan_res_34866;
                    
                    isnan_res_34866 = futrts_isnan32(isnan_arg_34865);
                    
                    bool cond_t_res_34867 = !isnan_res_34866;
                    
                    cond_34858 = cond_t_res_34867;
                } else {
                    cond_34858 = 0;
                }
                
                float defunc_0_f_res_34868;
                
                if (cond_34858) {
                    int32_t i_34869 = add32(x_34768, index_primexp_43368);
                    int64_t i_34870 = sext_i32_i64(i_34869);
                    bool x_34871 = sle64(0, i_34870);
                    bool y_34872 = slt64(i_34870, N_30056);
                    bool bounds_check_34873 = x_34871 && y_34872;
                    bool index_certs_34874;
                    
                    if (!bounds_check_34873) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_34870;
                                global_failure_args[1] = N_30056;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_34875 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_34505 *
                                                                                              N_30056 +
                                                                                              i_34870];
                    
                    defunc_0_f_res_34868 = defunc_0_f_res_t_res_34875;
                } else {
                    defunc_0_f_res_34868 = INFINITY;
                }
                ((__global float *) mem_44098)[phys_tid_34506 + i_43301 *
                                               (num_groups_34760 *
                                                segmap_group_sizze_34759)] =
                    defunc_0_f_res_34868;
            }
            for (int64_t i_45478 = 0; i_45478 < iota32_arg_30443; i_45478++) {
                ((__global float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                             i_45478 *
                                                             (num_groups_34760 *
                                                              segmap_group_sizze_34759)] =
                    ((__global float *) mem_44098)[phys_tid_34506 + i_45478 *
                                                   (num_groups_34760 *
                                                    segmap_group_sizze_34759)];
            }
            for (int32_t i_34877 = 0; i_34877 < iters_30474; i_34877++) {
                int32_t defunc_2_radix_sort_step_arg_34879 = mul32(2, i_34877);
                int32_t defunc_0_get_bit_arg_34880 = add32(1,
                                                           defunc_2_radix_sort_step_arg_34879);
                bool cond_f_res_34881 = defunc_0_get_bit_arg_34880 == 31;
                bool cond_f_res_34882 = defunc_2_radix_sort_step_arg_34879 ==
                     31;
                int64_t discard_43323;
                int64_t discard_43324;
                int64_t discard_43325;
                int64_t discard_43326;
                int64_t scanacc_43308;
                int64_t scanacc_43309;
                int64_t scanacc_43310;
                int64_t scanacc_43311;
                
                scanacc_43308 = 0;
                scanacc_43309 = 0;
                scanacc_43310 = 0;
                scanacc_43311 = 0;
                for (int64_t i_43317 = 0; i_43317 < iota32_arg_30443;
                     i_43317++) {
                    float x_34900 = ((__global
                                      float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                                        i_43317 *
                                                                        (num_groups_34760 *
                                                                         segmap_group_sizze_34759)];
                    int32_t i32_arg_34901;
                    
                    i32_arg_34901 = futrts_to_bits32(x_34900);
                    
                    int32_t unsign_arg_34902 = ashr32(i32_arg_34901,
                                                      defunc_0_get_bit_arg_34880);
                    int32_t unsign_arg_34903 = 1 & unsign_arg_34902;
                    int32_t unsign_arg_34904 = ashr32(i32_arg_34901, 31);
                    int32_t unsign_arg_34905 = 1 & unsign_arg_34904;
                    bool cond_34906 = unsign_arg_34905 == 1;
                    bool x_34907 = !cond_34906;
                    bool y_34908 = cond_f_res_34881 && x_34907;
                    bool cond_34909 = cond_34906 || y_34908;
                    int32_t defunc_1_get_bit_res_34910;
                    
                    if (cond_34909) {
                        int32_t defunc_1_get_bit_res_t_res_34911 = 1 ^
                                unsign_arg_34903;
                        
                        defunc_1_get_bit_res_34910 =
                            defunc_1_get_bit_res_t_res_34911;
                    } else {
                        defunc_1_get_bit_res_34910 = unsign_arg_34903;
                    }
                    
                    int32_t x_34912 = mul32(2, defunc_1_get_bit_res_34910);
                    int32_t unsign_arg_34913 = ashr32(i32_arg_34901,
                                                      defunc_2_radix_sort_step_arg_34879);
                    int32_t unsign_arg_34914 = 1 & unsign_arg_34913;
                    bool y_34915 = cond_f_res_34882 && x_34907;
                    bool cond_34916 = cond_34906 || y_34915;
                    int32_t defunc_1_get_bit_res_34917;
                    
                    if (cond_34916) {
                        int32_t defunc_1_get_bit_res_t_res_34918 = 1 ^
                                unsign_arg_34914;
                        
                        defunc_1_get_bit_res_34917 =
                            defunc_1_get_bit_res_t_res_34918;
                    } else {
                        defunc_1_get_bit_res_34917 = unsign_arg_34914;
                    }
                    
                    int32_t defunc_0_f_res_34919 = add32(x_34912,
                                                         defunc_1_get_bit_res_34917);
                    bool cond_34920 = defunc_0_f_res_34919 == 0;
                    int64_t defunc_0_f_res_34921 = btoi_bool_i64(cond_34920);
                    int64_t defunc_0_f_res_34922;
                    int64_t defunc_0_f_res_34923;
                    int64_t defunc_0_f_res_34924;
                    
                    if (cond_34920) {
                        defunc_0_f_res_34922 = 0;
                        defunc_0_f_res_34923 = 0;
                        defunc_0_f_res_34924 = 0;
                    } else {
                        bool cond_34925 = defunc_0_f_res_34919 == 1;
                        int64_t defunc_0_f_res_f_res_34926 =
                                btoi_bool_i64(cond_34925);
                        int64_t defunc_0_f_res_f_res_34927;
                        int64_t defunc_0_f_res_f_res_34928;
                        
                        if (cond_34925) {
                            defunc_0_f_res_f_res_34927 = 0;
                            defunc_0_f_res_f_res_34928 = 0;
                        } else {
                            bool cond_34929 = defunc_0_f_res_34919 == 2;
                            int64_t defunc_0_f_res_f_res_f_res_34930 =
                                    btoi_bool_i64(cond_34929);
                            bool cond_neg_34931 = !cond_34929;
                            int64_t defunc_0_f_res_f_res_f_res_34932 =
                                    btoi_bool_i64(cond_neg_34931);
                            
                            defunc_0_f_res_f_res_34927 =
                                defunc_0_f_res_f_res_f_res_34930;
                            defunc_0_f_res_f_res_34928 =
                                defunc_0_f_res_f_res_f_res_34932;
                        }
                        defunc_0_f_res_34922 = defunc_0_f_res_f_res_34926;
                        defunc_0_f_res_34923 = defunc_0_f_res_f_res_34927;
                        defunc_0_f_res_34924 = defunc_0_f_res_f_res_34928;
                    }
                    
                    int64_t defunc_1_op_res_34896 = add64(defunc_0_f_res_34921,
                                                          scanacc_43308);
                    int64_t defunc_1_op_res_34897 = add64(defunc_0_f_res_34922,
                                                          scanacc_43309);
                    int64_t defunc_1_op_res_34898 = add64(defunc_0_f_res_34923,
                                                          scanacc_43310);
                    int64_t defunc_1_op_res_34899 = add64(defunc_0_f_res_34924,
                                                          scanacc_43311);
                    
                    ((__global int64_t *) mem_44117)[phys_tid_34506 + i_43317 *
                                                     (num_groups_34760 *
                                                      segmap_group_sizze_34759)] =
                        defunc_1_op_res_34896;
                    ((__global int64_t *) mem_44119)[phys_tid_34506 + i_43317 *
                                                     (num_groups_34760 *
                                                      segmap_group_sizze_34759)] =
                        defunc_1_op_res_34897;
                    ((__global int64_t *) mem_44121)[phys_tid_34506 + i_43317 *
                                                     (num_groups_34760 *
                                                      segmap_group_sizze_34759)] =
                        defunc_1_op_res_34898;
                    ((__global int64_t *) mem_44123)[phys_tid_34506 + i_43317 *
                                                     (num_groups_34760 *
                                                      segmap_group_sizze_34759)] =
                        defunc_1_op_res_34899;
                    ((__global int32_t *) mem_44125)[phys_tid_34506 + i_43317 *
                                                     (num_groups_34760 *
                                                      segmap_group_sizze_34759)] =
                        defunc_0_f_res_34919;
                    
                    int64_t scanacc_tmp_45480 = defunc_1_op_res_34896;
                    int64_t scanacc_tmp_45481 = defunc_1_op_res_34897;
                    int64_t scanacc_tmp_45482 = defunc_1_op_res_34898;
                    int64_t scanacc_tmp_45483 = defunc_1_op_res_34899;
                    
                    scanacc_43308 = scanacc_tmp_45480;
                    scanacc_43309 = scanacc_tmp_45481;
                    scanacc_43310 = scanacc_tmp_45482;
                    scanacc_43311 = scanacc_tmp_45483;
                }
                discard_43323 = scanacc_43308;
                discard_43324 = scanacc_43309;
                discard_43325 = scanacc_43310;
                discard_43326 = scanacc_43311;
                
                int64_t last_res_34933 = ((__global
                                           int64_t *) mem_44117)[phys_tid_34506 +
                                                                 i_30476 *
                                                                 (num_groups_34760 *
                                                                  segmap_group_sizze_34759)];
                int64_t last_res_34934 = ((__global
                                           int64_t *) mem_44119)[phys_tid_34506 +
                                                                 i_30476 *
                                                                 (num_groups_34760 *
                                                                  segmap_group_sizze_34759)];
                int64_t last_res_34935 = ((__global
                                           int64_t *) mem_44121)[phys_tid_34506 +
                                                                 i_30476 *
                                                                 (num_groups_34760 *
                                                                  segmap_group_sizze_34759)];
                
                for (int64_t i_45489 = 0; i_45489 < iota32_arg_30443;
                     i_45489++) {
                    ((__global float *) mem_44187)[phys_tid_34506 + i_45489 *
                                                   (num_groups_34760 *
                                                    segmap_group_sizze_34759)] =
                        ((__global
                          float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                            i_45489 *
                                                            (num_groups_34760 *
                                                             segmap_group_sizze_34759)];
                }
                for (int64_t write_iter_43327 = 0; write_iter_43327 <
                     iota32_arg_30443; write_iter_43327++) {
                    int32_t write_iv_43329 = ((__global
                                               int32_t *) mem_44125)[phys_tid_34506 +
                                                                     write_iter_43327 *
                                                                     (num_groups_34760 *
                                                                      segmap_group_sizze_34759)];
                    bool match_lit_34944 = 0 == write_iv_43329;
                    int64_t defunc_1_f_res_34945;
                    
                    if (match_lit_34944) {
                        int64_t write_iv_43330 = ((__global
                                                   int64_t *) mem_44117)[phys_tid_34506 +
                                                                         write_iter_43327 *
                                                                         (num_groups_34760 *
                                                                          segmap_group_sizze_34759)];
                        int64_t case_res_34946 = sub64(write_iv_43330, 1);
                        
                        defunc_1_f_res_34945 = case_res_34946;
                    } else {
                        int64_t write_iv_43331 = ((__global
                                                   int64_t *) mem_44119)[phys_tid_34506 +
                                                                         write_iter_43327 *
                                                                         (num_groups_34760 *
                                                                          segmap_group_sizze_34759)];
                        int64_t write_iv_43332 = ((__global
                                                   int64_t *) mem_44121)[phys_tid_34506 +
                                                                         write_iter_43327 *
                                                                         (num_groups_34760 *
                                                                          segmap_group_sizze_34759)];
                        int64_t write_iv_43333 = ((__global
                                                   int64_t *) mem_44123)[phys_tid_34506 +
                                                                         write_iter_43327 *
                                                                         (num_groups_34760 *
                                                                          segmap_group_sizze_34759)];
                        bool match_lit_34947 = 1 == write_iv_43329;
                        int64_t x_34948;
                        
                        if (match_lit_34947) {
                            int64_t x_34949 = add64(last_res_34933,
                                                    write_iv_43331);
                            int64_t case_res_34950 = sub64(x_34949, 1);
                            
                            x_34948 = case_res_34950;
                        } else {
                            bool match_lit_34951 = 2 == write_iv_43329;
                            int64_t x_34952;
                            
                            if (match_lit_34951) {
                                int64_t x_34953 = add64(last_res_34933,
                                                        last_res_34934);
                                int64_t x_34954 = add64(x_34953,
                                                        write_iv_43332);
                                int64_t case_res_34955 = sub64(x_34954, 1);
                                
                                x_34952 = case_res_34955;
                            } else {
                                int64_t x_34956 = add64(last_res_34933,
                                                        last_res_34934);
                                int64_t x_34957 = add64(last_res_34935,
                                                        x_34956);
                                int64_t x_34958 = add64(x_34957,
                                                        write_iv_43333);
                                int64_t defunc_1_f_res_res_34959 =
                                        sub64(x_34958, 1);
                                
                                x_34952 = defunc_1_f_res_res_34959;
                            }
                            x_34948 = x_34952;
                        }
                        defunc_1_f_res_34945 = x_34948;
                    }
                    
                    bool less_than_zzero_43335 = slt64(defunc_1_f_res_34945, 0);
                    bool greater_than_sizze_43336 = sle64(iota32_arg_30443,
                                                          defunc_1_f_res_34945);
                    bool outside_bounds_dim_43337 = less_than_zzero_43335 ||
                         greater_than_sizze_43336;
                    
                    if (!outside_bounds_dim_43337) {
                        for (int64_t i_45491 = 0; i_45491 < 1; i_45491++) {
                            ((__global float *) mem_44187)[phys_tid_34506 +
                                                           (defunc_1_f_res_34945 +
                                                            i_45491) *
                                                           (num_groups_34760 *
                                                            segmap_group_sizze_34759)] =
                                ((__global
                                  float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                                    num_groups_34760 *
                                                                    segmap_group_sizze_34759 *
                                                                    write_iter_43327 +
                                                                    i_45491 *
                                                                    (num_groups_34760 *
                                                                     segmap_group_sizze_34759)];
                        }
                    }
                }
                for (int64_t i_45492 = 0; i_45492 < iota32_arg_30443;
                     i_45492++) {
                    ((__global
                      float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                        i_45492 *
                                                        (num_groups_34760 *
                                                         segmap_group_sizze_34759)] =
                        ((__global float *) mem_44187)[phys_tid_34506 +
                                                       i_45492 *
                                                       (num_groups_34760 *
                                                        segmap_group_sizze_34759)];
                }
            }
            
            int32_t i_34960 = sdiv32(y_34774, 2);
            int32_t j_34961 = sub32(i_34960, 1);
            bool cond_34962 = x_34767 == x_34768;
            float defunc_0_f_res_34963;
            
            if (cond_34962) {
                defunc_0_f_res_34963 = 0.0F;
            } else {
                int32_t x_34964 = smod32(y_34774, 2);
                bool cond_34965 = x_34964 == 0;
                float defunc_0_f_res_f_res_34966;
                
                if (cond_34965) {
                    int64_t j_34967 = sext_i32_i64(j_34961);
                    bool x_34968 = sle64(0, j_34967);
                    bool y_34969 = slt64(j_34967, iota32_arg_30443);
                    bool bounds_check_34970 = x_34968 && y_34969;
                    bool index_certs_34971;
                    
                    if (!bounds_check_34970) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          19) == -1) {
                                global_failure_args[0] = j_34967;
                                global_failure_args[1] = iota32_arg_30443;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float x_34972 = ((__global
                                      float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                                        j_34967 *
                                                                        (num_groups_34760 *
                                                                         segmap_group_sizze_34759)];
                    int64_t i_34973 = sext_i32_i64(i_34960);
                    bool x_34974 = sle64(0, i_34973);
                    bool y_34975 = slt64(i_34973, iota32_arg_30443);
                    bool bounds_check_34976 = x_34974 && y_34975;
                    bool index_certs_34977;
                    
                    if (!bounds_check_34976) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          20) == -1) {
                                global_failure_args[0] = i_34973;
                                global_failure_args[1] = iota32_arg_30443;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float y_34978 = ((__global
                                      float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                                        i_34973 *
                                                                        (num_groups_34760 *
                                                                         segmap_group_sizze_34759)];
                    float x_34979 = x_34972 + y_34978;
                    float defunc_0_f_res_f_res_t_res_34980 = x_34979 / 2.0F;
                    
                    defunc_0_f_res_f_res_34966 =
                        defunc_0_f_res_f_res_t_res_34980;
                } else {
                    int64_t i_34981 = sext_i32_i64(i_34960);
                    bool x_34982 = sle64(0, i_34981);
                    bool y_34983 = slt64(i_34981, iota32_arg_30443);
                    bool bounds_check_34984 = x_34982 && y_34983;
                    bool index_certs_34985;
                    
                    if (!bounds_check_34984) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          21) == -1) {
                                global_failure_args[0] = i_34981;
                                global_failure_args[1] = iota32_arg_30443;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_f_res_f_res_34986 = ((__global
                                                               float *) double_buffer_mem_44479)[phys_tid_34506 +
                                                                                                 i_34981 *
                                                                                                 (num_groups_34760 *
                                                                                                  segmap_group_sizze_34759)];
                    
                    defunc_0_f_res_f_res_34966 =
                        defunc_0_f_res_f_res_f_res_34986;
                }
                defunc_0_f_res_34963 = defunc_0_f_res_f_res_34966;
            }
            
            bool cond_34987 = !defunc_0_f_res_34779;
            int32_t fst_breakzq_34988;
            
            if (cond_34987) {
                fst_breakzq_34988 = -1;
            } else {
                bool cond_34989 = slt32(defunc_0_f_res_34780, y_34774);
                int32_t adjustValInds_res_34990;
                
                if (cond_34989) {
                    int32_t i_34991 = add32(x_34768, defunc_0_f_res_34780);
                    int64_t i_34992 = sext_i32_i64(i_34991);
                    int32_t x_34993 = ((__global
                                        int32_t *) defunc_4_map_res_mem_43944)[gtid_34505 *
                                                                               N_30056 +
                                                                               i_34992];
                    int32_t adjustValInds_res_t_res_34994 = sub32(x_34993,
                                                                  n_30061);
                    
                    adjustValInds_res_34990 = adjustValInds_res_t_res_34994;
                } else {
                    adjustValInds_res_34990 = -1;
                }
                fst_breakzq_34988 = adjustValInds_res_34990;
            }
            
            bool cond_34995 = sle32(x_34768, 5);
            bool cond_f_res_34996 = sle32(y_34774, 5);
            bool x_34997 = !cond_34995;
            bool y_34998 = cond_f_res_34996 && x_34997;
            bool cond_34999 = cond_34995 || y_34998;
            int32_t fst_breakzq_35000;
            
            if (cond_34999) {
                fst_breakzq_35000 = -2;
            } else {
                fst_breakzq_35000 = fst_breakzq_34988;
            }
            for (int64_t i_45493 = 0; i_45493 < iota32_arg_30443; i_45493++) {
                ((__global float *) mem_44206)[phys_tid_34506 + i_45493 *
                                               (num_groups_34760 *
                                                segmap_group_sizze_34759)] =
                    NAN;
            }
            for (int64_t write_iter_43341 = 0; write_iter_43341 <
                 iota32_arg_30443; write_iter_43341++) {
                int32_t index_primexp_43371 = sext_i64_i32(write_iter_43341);
                bool cond_35005 = slt32(index_primexp_43371, y_34774);
                int32_t defunc_0_f_res_35006;
                
                if (cond_35005) {
                    int32_t i_35007 = add32(x_34768, index_primexp_43371);
                    int64_t i_35008 = sext_i32_i64(i_35007);
                    int32_t x_35009 = ((__global
                                        int32_t *) defunc_4_map_res_mem_43944)[gtid_34505 *
                                                                               N_30056 +
                                                                               i_35008];
                    int32_t defunc_0_f_res_t_res_35010 = sub32(x_35009,
                                                               n_30061);
                    
                    defunc_0_f_res_35006 = defunc_0_f_res_t_res_35010;
                } else {
                    defunc_0_f_res_35006 = -1;
                }
                
                int64_t defunc_0_f_res_35011 =
                        sext_i32_i64(defunc_0_f_res_35006);
                bool less_than_zzero_43345 = slt64(defunc_0_f_res_35011, 0);
                bool greater_than_sizze_43346 = sle64(iota32_arg_30443,
                                                      defunc_0_f_res_35011);
                bool outside_bounds_dim_43347 = less_than_zzero_43345 ||
                     greater_than_sizze_43346;
                
                if (!outside_bounds_dim_43347) {
                    for (int64_t i_45495 = 0; i_45495 < 1; i_45495++) {
                        ((__global float *) mem_44206)[phys_tid_34506 +
                                                       (defunc_0_f_res_35011 +
                                                        i_45495) *
                                                       (num_groups_34760 *
                                                        segmap_group_sizze_34759)] =
                            ((__global float *) mem_44084)[phys_tid_34506 +
                                                           num_groups_34760 *
                                                           segmap_group_sizze_34759 *
                                                           write_iter_43341 +
                                                           i_45495 *
                                                           (num_groups_34760 *
                                                            segmap_group_sizze_34759)];
                    }
                }
            }
            for (int64_t i_45496 = 0; i_45496 < iota32_arg_30443; i_45496++) {
                ((__global float *) mem_44221)[i_45496 * m_30057 + gtid_34505] =
                    ((__global float *) mem_44206)[phys_tid_34506 + i_45496 *
                                                   (num_groups_34760 *
                                                    segmap_group_sizze_34759)];
            }
            for (int64_t i_45497 = 0; i_45497 < iota32_arg_30443; i_45497++) {
                ((__global float *) mem_44224)[i_45497 * m_30057 + gtid_34505] =
                    ((__global float *) mem_44084)[phys_tid_34506 + i_45497 *
                                                   (num_groups_34760 *
                                                    segmap_group_sizze_34759)];
            }
            ((__global int32_t *) mem_44226)[gtid_34505] = fst_breakzq_35000;
            ((__global float *) mem_44228)[gtid_34505] = defunc_0_f_res_34852;
            ((__global float *) mem_44230)[gtid_34505] = defunc_0_f_res_34963;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34759
}
__kernel void mainDetailedzisegmap_35271(__global int *global_failure,
                                         int64_t N_30056, int64_t m_30057,
                                         int32_t n_30061,
                                         int64_t iota32_arg_30443, __global
                                         unsigned char *defunc_4_map_res_mem_43944,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44023,
                                         __global unsigned char *mem_44081,
                                         __global unsigned char *mem_44288,
                                         __global unsigned char *mem_44302)
{
    #define segmap_group_sizze_36563 (mainDetailedzisegmap_group_sizze_35274)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45861;
    int32_t local_tid_45862;
    int64_t group_sizze_45865;
    int32_t wave_sizze_45864;
    int32_t group_tid_45863;
    
    global_tid_45861 = get_global_id(0);
    local_tid_45862 = get_local_id(0);
    group_sizze_45865 = get_local_size(0);
    wave_sizze_45864 = LOCKSTEP_WIDTH;
    group_tid_45863 = get_group_id(0);
    
    int32_t phys_tid_35271;
    
    phys_tid_35271 = global_tid_45861;
    
    int64_t gtid_35269;
    
    gtid_35269 = squot64(sext_i32_i64(group_tid_45863) *
                         segmap_group_sizze_36563 +
                         sext_i32_i64(local_tid_45862), iota32_arg_30443);
    
    int64_t gtid_35270;
    
    gtid_35270 = sext_i32_i64(group_tid_45863) * segmap_group_sizze_36563 +
        sext_i32_i64(local_tid_45862) - squot64(sext_i32_i64(group_tid_45863) *
                                                segmap_group_sizze_36563 +
                                                sext_i32_i64(local_tid_45862),
                                                iota32_arg_30443) *
        iota32_arg_30443;
    if (slt64(gtid_35269, m_30057) && slt64(gtid_35270, iota32_arg_30443)) {
        int32_t y_36568 = ((__global int32_t *) mem_44288)[gtid_35269];
        int32_t index_primexp_41487 = sext_i64_i32(gtid_35270);
        float write_value_36572 = ((__global float *) mem_44302)[gtid_35269 *
                                                                 iota32_arg_30443 +
                                                                 gtid_35270];
        bool cond_36573 = slt32(index_primexp_41487, y_36568);
        int32_t defunc_0_f_res_36574;
        
        if (cond_36573) {
            int32_t x_36566 = ((__global
                                int32_t *) defunc_3_map_res_mem_44023)[gtid_35269];
            int32_t i_36575 = add32(x_36566, index_primexp_41487);
            int64_t i_36576 = sext_i32_i64(i_36575);
            int32_t x_36577 = ((__global
                                int32_t *) defunc_4_map_res_mem_43944)[gtid_35269 *
                                                                       N_30056 +
                                                                       i_36576];
            int32_t defunc_0_f_res_t_res_36578 = sub32(x_36577, n_30061);
            
            defunc_0_f_res_36574 = defunc_0_f_res_t_res_36578;
        } else {
            defunc_0_f_res_36574 = -1;
        }
        
        int64_t defunc_0_f_res_36579 = sext_i32_i64(defunc_0_f_res_36574);
        
        if ((sle64(0, gtid_35269) && slt64(gtid_35269, m_30057)) && (sle64(0,
                                                                           defunc_0_f_res_36579) &&
                                                                     slt64(defunc_0_f_res_36579,
                                                                           iota32_arg_30443))) {
            ((__global float *) mem_44081)[gtid_35269 * iota32_arg_30443 +
                                           defunc_0_f_res_36579] =
                write_value_36572;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36563
}
__kernel void mainDetailedzisegmap_35324(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_30056, int64_t m_30057,
                                         int32_t n_30061,
                                         int64_t iota32_arg_30443, __global
                                         unsigned char *defunc_4_map_res_mem_43942,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43944,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44023,
                                         __global unsigned char *mem_44288,
                                         __global unsigned char *mem_44305,
                                         __global unsigned char *mem_44307,
                                         __global
                                         unsigned char *defunc_2_radix_sort_res_r_mem_44376,
                                         __global unsigned char *mem_44379,
                                         __global unsigned char *mem_44381)
{
    #define segmap_group_sizze_36495 (mainDetailedzisegmap_group_sizze_35326)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45856;
    int32_t local_tid_45857;
    int64_t group_sizze_45860;
    int32_t wave_sizze_45859;
    int32_t group_tid_45858;
    
    global_tid_45856 = get_global_id(0);
    local_tid_45857 = get_local_id(0);
    group_sizze_45860 = get_local_size(0);
    wave_sizze_45859 = LOCKSTEP_WIDTH;
    group_tid_45858 = get_group_id(0);
    
    int32_t phys_tid_35324;
    
    phys_tid_35324 = global_tid_45856;
    
    int64_t gtid_35323;
    
    gtid_35323 = sext_i32_i64(group_tid_45858) * segmap_group_sizze_36495 +
        sext_i32_i64(local_tid_45857);
    if (slt64(gtid_35323, m_30057)) {
        int32_t x_36499 = ((__global
                            int32_t *) defunc_4_map_res_mem_43942)[gtid_35323];
        int32_t x_36500 = ((__global
                            int32_t *) defunc_3_map_res_mem_44023)[gtid_35323];
        int32_t y_36502 = ((__global int32_t *) mem_44288)[gtid_35323];
        bool defunc_0_f_res_36503 = ((__global bool *) mem_44305)[gtid_35323];
        int32_t i_36506 = sdiv32(y_36502, 2);
        int32_t j_36507 = sub32(i_36506, 1);
        bool cond_36508 = x_36499 == x_36500;
        float defunc_0_f_res_36509;
        
        if (cond_36508) {
            defunc_0_f_res_36509 = 0.0F;
        } else {
            int32_t x_36510 = smod32(y_36502, 2);
            bool cond_36511 = x_36510 == 0;
            float defunc_0_f_res_f_res_36512;
            
            if (cond_36511) {
                int64_t j_36513 = sext_i32_i64(j_36507);
                bool x_36514 = sle64(0, j_36513);
                bool y_36515 = slt64(j_36513, iota32_arg_30443);
                bool bounds_check_36516 = x_36514 && y_36515;
                bool index_certs_36517;
                
                if (!bounds_check_36516) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 29) ==
                            -1) {
                            global_failure_args[0] = j_36513;
                            global_failure_args[1] = iota32_arg_30443;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36518 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44376)[gtid_35323 *
                                                                                iota32_arg_30443 +
                                                                                j_36513];
                int64_t i_36519 = sext_i32_i64(i_36506);
                bool x_36520 = sle64(0, i_36519);
                bool y_36521 = slt64(i_36519, iota32_arg_30443);
                bool bounds_check_36522 = x_36520 && y_36521;
                bool index_certs_36523;
                
                if (!bounds_check_36522) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 30) ==
                            -1) {
                            global_failure_args[0] = i_36519;
                            global_failure_args[1] = iota32_arg_30443;
                            ;
                        }
                        return;
                    }
                }
                
                float y_36524 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44376)[gtid_35323 *
                                                                                iota32_arg_30443 +
                                                                                i_36519];
                float x_36525 = x_36518 + y_36524;
                float defunc_0_f_res_f_res_t_res_36526 = x_36525 / 2.0F;
                
                defunc_0_f_res_f_res_36512 = defunc_0_f_res_f_res_t_res_36526;
            } else {
                int64_t i_36527 = sext_i32_i64(i_36506);
                bool x_36528 = sle64(0, i_36527);
                bool y_36529 = slt64(i_36527, iota32_arg_30443);
                bool bounds_check_36530 = x_36528 && y_36529;
                bool index_certs_36531;
                
                if (!bounds_check_36530) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 31) ==
                            -1) {
                            global_failure_args[0] = i_36527;
                            global_failure_args[1] = iota32_arg_30443;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_36532 = ((__global
                                                           float *) defunc_2_radix_sort_res_r_mem_44376)[gtid_35323 *
                                                                                                         iota32_arg_30443 +
                                                                                                         i_36527];
                
                defunc_0_f_res_f_res_36512 = defunc_0_f_res_f_res_f_res_36532;
            }
            defunc_0_f_res_36509 = defunc_0_f_res_f_res_36512;
        }
        
        bool cond_36533 = !defunc_0_f_res_36503;
        int32_t fst_breakzq_36534;
        
        if (cond_36533) {
            fst_breakzq_36534 = -1;
        } else {
            int32_t defunc_0_f_res_36504 = ((__global
                                             int32_t *) mem_44307)[gtid_35323];
            bool cond_36535 = slt32(defunc_0_f_res_36504, y_36502);
            int32_t adjustValInds_res_36536;
            
            if (cond_36535) {
                int32_t i_36537 = add32(x_36500, defunc_0_f_res_36504);
                int64_t i_36538 = sext_i32_i64(i_36537);
                int32_t x_36539 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43944)[gtid_35323 *
                                                                           N_30056 +
                                                                           i_36538];
                int32_t adjustValInds_res_t_res_36540 = sub32(x_36539, n_30061);
                
                adjustValInds_res_36536 = adjustValInds_res_t_res_36540;
            } else {
                adjustValInds_res_36536 = -1;
            }
            fst_breakzq_36534 = adjustValInds_res_36536;
        }
        
        bool cond_36541 = sle32(x_36500, 5);
        bool cond_f_res_36542 = sle32(y_36502, 5);
        bool x_36543 = !cond_36541;
        bool y_36544 = cond_f_res_36542 && x_36543;
        bool cond_36545 = cond_36541 || y_36544;
        int32_t fst_breakzq_36546;
        
        if (cond_36545) {
            fst_breakzq_36546 = -2;
        } else {
            fst_breakzq_36546 = fst_breakzq_36534;
        }
        ((__global int32_t *) mem_44379)[gtid_35323] = fst_breakzq_36546;
        ((__global float *) mem_44381)[gtid_35323] = defunc_0_f_res_36509;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36495
}
__kernel void mainDetailedzisegmap_35653(__global int *global_failure,
                                         int64_t m_30057,
                                         int64_t iota32_arg_30443,
                                         int64_t i_30476, __global
                                         unsigned char *mem_param_44322,
                                         __global unsigned char *mem_44349,
                                         __global unsigned char *mem_44352,
                                         __global unsigned char *mem_44355,
                                         __global unsigned char *mem_44358,
                                         __global unsigned char *mem_44361,
                                         __global unsigned char *mem_44364)
{
    #define segmap_group_sizze_36458 (mainDetailedzisegmap_group_sizze_35656)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45850;
    int32_t local_tid_45851;
    int64_t group_sizze_45854;
    int32_t wave_sizze_45853;
    int32_t group_tid_45852;
    
    global_tid_45850 = get_global_id(0);
    local_tid_45851 = get_local_id(0);
    group_sizze_45854 = get_local_size(0);
    wave_sizze_45853 = LOCKSTEP_WIDTH;
    group_tid_45852 = get_group_id(0);
    
    int32_t phys_tid_35653;
    
    phys_tid_35653 = global_tid_45850;
    
    int64_t gtid_35651;
    
    gtid_35651 = squot64(sext_i32_i64(group_tid_45852) *
                         segmap_group_sizze_36458 +
                         sext_i32_i64(local_tid_45851), iota32_arg_30443);
    
    int64_t gtid_35652;
    
    gtid_35652 = sext_i32_i64(group_tid_45852) * segmap_group_sizze_36458 +
        sext_i32_i64(local_tid_45851) - squot64(sext_i32_i64(group_tid_45852) *
                                                segmap_group_sizze_36458 +
                                                sext_i32_i64(local_tid_45851),
                                                iota32_arg_30443) *
        iota32_arg_30443;
    if (slt64(gtid_35651, m_30057) && slt64(gtid_35652, iota32_arg_30443)) {
        int32_t x_36471 = ((__global int32_t *) mem_44361)[gtid_35651 *
                                                           iota32_arg_30443 +
                                                           gtid_35652];
        float write_value_36476 = ((__global
                                    float *) mem_param_44322)[gtid_35651 *
                                                              iota32_arg_30443 +
                                                              gtid_35652];
        bool match_lit_36477 = 0 == x_36471;
        int64_t defunc_1_f_res_36478;
        
        if (match_lit_36477) {
            int64_t x_36472 = ((__global int64_t *) mem_44349)[gtid_35651 *
                                                               iota32_arg_30443 +
                                                               gtid_35652];
            int64_t case_res_36479 = sub64(x_36472, 1);
            
            defunc_1_f_res_36478 = case_res_36479;
        } else {
            int64_t last_res_36467 = ((__global
                                       int64_t *) mem_44349)[gtid_35651 *
                                                             iota32_arg_30443 +
                                                             i_30476];
            int64_t last_res_36468 = ((__global
                                       int64_t *) mem_44352)[gtid_35651 *
                                                             iota32_arg_30443 +
                                                             i_30476];
            int64_t last_res_36469 = ((__global
                                       int64_t *) mem_44355)[gtid_35651 *
                                                             iota32_arg_30443 +
                                                             i_30476];
            int64_t x_36473 = ((__global int64_t *) mem_44352)[gtid_35651 *
                                                               iota32_arg_30443 +
                                                               gtid_35652];
            int64_t x_36474 = ((__global int64_t *) mem_44355)[gtid_35651 *
                                                               iota32_arg_30443 +
                                                               gtid_35652];
            int64_t x_36475 = ((__global int64_t *) mem_44358)[gtid_35651 *
                                                               iota32_arg_30443 +
                                                               gtid_35652];
            bool match_lit_36480 = 1 == x_36471;
            int64_t x_36481;
            
            if (match_lit_36480) {
                int64_t x_36482 = add64(last_res_36467, x_36473);
                int64_t case_res_36483 = sub64(x_36482, 1);
                
                x_36481 = case_res_36483;
            } else {
                bool match_lit_36484 = 2 == x_36471;
                int64_t x_36485;
                
                if (match_lit_36484) {
                    int64_t x_36486 = add64(last_res_36467, last_res_36468);
                    int64_t x_36487 = add64(x_36474, x_36486);
                    int64_t case_res_36488 = sub64(x_36487, 1);
                    
                    x_36485 = case_res_36488;
                } else {
                    int64_t x_36489 = add64(last_res_36467, last_res_36468);
                    int64_t x_36490 = add64(last_res_36469, x_36489);
                    int64_t x_36491 = add64(x_36475, x_36490);
                    int64_t defunc_1_f_res_res_36492 = sub64(x_36491, 1);
                    
                    x_36485 = defunc_1_f_res_res_36492;
                }
                x_36481 = x_36485;
            }
            defunc_1_f_res_36478 = x_36481;
        }
        if ((sle64(0, gtid_35651) && slt64(gtid_35651, m_30057)) && (sle64(0,
                                                                           defunc_1_f_res_36478) &&
                                                                     slt64(defunc_1_f_res_36478,
                                                                           iota32_arg_30443))) {
            ((__global float *) mem_44364)[gtid_35651 * iota32_arg_30443 +
                                           defunc_1_f_res_36478] =
                write_value_36476;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36458
}
__kernel void mainDetailedzisegmap_35903(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_30056, int64_t m_30057,
                                         int64_t iota32_arg_30443, __global
                                         unsigned char *defunc_4_map_res_mem_43943,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44023,
                                         __global unsigned char *mem_44288,
                                         __global unsigned char *mem_44314)
{
    #define segmap_group_sizze_36264 (mainDetailedzisegmap_group_sizze_35906)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45719;
    int32_t local_tid_45720;
    int64_t group_sizze_45723;
    int32_t wave_sizze_45722;
    int32_t group_tid_45721;
    
    global_tid_45719 = get_global_id(0);
    local_tid_45720 = get_local_id(0);
    group_sizze_45723 = get_local_size(0);
    wave_sizze_45722 = LOCKSTEP_WIDTH;
    group_tid_45721 = get_group_id(0);
    
    int32_t phys_tid_35903;
    
    phys_tid_35903 = global_tid_45719;
    
    int64_t gtid_35901;
    
    gtid_35901 = squot64(sext_i32_i64(group_tid_45721) *
                         segmap_group_sizze_36264 +
                         sext_i32_i64(local_tid_45720), iota32_arg_30443);
    
    int64_t gtid_35902;
    
    gtid_35902 = sext_i32_i64(group_tid_45721) * segmap_group_sizze_36264 +
        sext_i32_i64(local_tid_45720) - squot64(sext_i32_i64(group_tid_45721) *
                                                segmap_group_sizze_36264 +
                                                sext_i32_i64(local_tid_45720),
                                                iota32_arg_30443) *
        iota32_arg_30443;
    if (slt64(gtid_35901, m_30057) && slt64(gtid_35902, iota32_arg_30443)) {
        int32_t x_36267 = ((__global
                            int32_t *) defunc_3_map_res_mem_44023)[gtid_35901];
        int32_t y_36269 = ((__global int32_t *) mem_44288)[gtid_35901];
        int32_t index_primexp_41484 = sext_i64_i32(gtid_35902);
        bool cond_36271 = slt32(index_primexp_41484, y_36269);
        bool cond_36272;
        
        if (cond_36271) {
            int32_t i_36273 = add32(x_36267, index_primexp_41484);
            int64_t i_36274 = sext_i32_i64(i_36273);
            bool x_36275 = sle64(0, i_36274);
            bool y_36276 = slt64(i_36274, N_30056);
            bool bounds_check_36277 = x_36275 && y_36276;
            bool index_certs_36278;
            
            if (!bounds_check_36277) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 27) ==
                        -1) {
                        global_failure_args[0] = i_36274;
                        global_failure_args[1] = N_30056;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_36279 = ((__global
                                      float *) defunc_4_map_res_mem_43943)[gtid_35901 *
                                                                           N_30056 +
                                                                           i_36274];
            bool isnan_res_36280;
            
            isnan_res_36280 = futrts_isnan32(isnan_arg_36279);
            
            bool cond_t_res_36281 = !isnan_res_36280;
            
            cond_36272 = cond_t_res_36281;
        } else {
            cond_36272 = 0;
        }
        
        float defunc_0_f_res_36282;
        
        if (cond_36272) {
            int32_t i_36283 = add32(x_36267, index_primexp_41484);
            int64_t i_36284 = sext_i32_i64(i_36283);
            bool x_36285 = sle64(0, i_36284);
            bool y_36286 = slt64(i_36284, N_30056);
            bool bounds_check_36287 = x_36285 && y_36286;
            bool index_certs_36288;
            
            if (!bounds_check_36287) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 28) ==
                        -1) {
                        global_failure_args[0] = i_36284;
                        global_failure_args[1] = N_30056;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_36289 = ((__global
                                                 float *) defunc_4_map_res_mem_43943)[gtid_35901 *
                                                                                      N_30056 +
                                                                                      i_36284];
            
            defunc_0_f_res_36282 = defunc_0_f_res_t_res_36289;
        } else {
            defunc_0_f_res_36282 = INFINITY;
        }
        ((__global float *) mem_44314)[gtid_35901 * iota32_arg_30443 +
                                       gtid_35902] = defunc_0_f_res_36282;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36264
}
__kernel void mainDetailedzisegmap_35962(__global int *global_failure,
                                         int64_t m_30057, __global
                                         unsigned char *mem_44288, __global
                                         unsigned char *mem_44299, __global
                                         unsigned char *mem_44310)
{
    #define segmap_group_sizze_36246 (mainDetailedzisegmap_group_sizze_35964)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45714;
    int32_t local_tid_45715;
    int64_t group_sizze_45718;
    int32_t wave_sizze_45717;
    int32_t group_tid_45716;
    
    global_tid_45714 = get_global_id(0);
    local_tid_45715 = get_local_id(0);
    group_sizze_45718 = get_local_size(0);
    wave_sizze_45717 = LOCKSTEP_WIDTH;
    group_tid_45716 = get_group_id(0);
    
    int32_t phys_tid_35962;
    
    phys_tid_35962 = global_tid_45714;
    
    int64_t gtid_35961;
    
    gtid_35961 = sext_i32_i64(group_tid_45716) * segmap_group_sizze_36246 +
        sext_i32_i64(local_tid_45715);
    if (slt64(gtid_35961, m_30057)) {
        int32_t y_36249 = ((__global int32_t *) mem_44288)[gtid_35961];
        bool cond_36251 = y_36249 == 0;
        float defunc_0_f_res_36252;
        
        if (cond_36251) {
            defunc_0_f_res_36252 = 0.0F;
        } else {
            float defunc_0_f_res_36250 = ((__global
                                           float *) mem_44299)[gtid_35961];
            float i32_res_36253 = sitofp_i32_f32(y_36249);
            float defunc_0_f_res_f_res_36254 = defunc_0_f_res_36250 /
                  i32_res_36253;
            
            defunc_0_f_res_36252 = defunc_0_f_res_f_res_36254;
        }
        ((__global float *) mem_44310)[gtid_35961] = defunc_0_f_res_36252;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36246
}
__kernel void mainDetailedzisegmap_35979(__global int *global_failure,
                                         int64_t m_30057, __global
                                         unsigned char *mem_44295, __global
                                         unsigned char *mem_44297, __global
                                         unsigned char *mem_44305, __global
                                         unsigned char *mem_44307)
{
    #define segmap_group_sizze_36223 (mainDetailedzisegmap_group_sizze_35981)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45709;
    int32_t local_tid_45710;
    int64_t group_sizze_45713;
    int32_t wave_sizze_45712;
    int32_t group_tid_45711;
    
    global_tid_45709 = get_global_id(0);
    local_tid_45710 = get_local_id(0);
    group_sizze_45713 = get_local_size(0);
    wave_sizze_45712 = LOCKSTEP_WIDTH;
    group_tid_45711 = get_group_id(0);
    
    int32_t phys_tid_35979;
    
    phys_tid_35979 = global_tid_45709;
    
    int64_t gtid_35978;
    
    gtid_35978 = sext_i32_i64(group_tid_45711) * segmap_group_sizze_36223 +
        sext_i32_i64(local_tid_45710);
    if (slt64(gtid_35978, m_30057)) {
        bool acc0_36229 = ((__global bool *) mem_44295)[gtid_35978];
        bool x_36234 = acc0_36229 && acc0_36229;
        int32_t defunc_1_op_res_f_res_36238;
        
        if (acc0_36229) {
            int32_t acc0_36230 = ((__global int32_t *) mem_44297)[gtid_35978];
            
            defunc_1_op_res_f_res_36238 = acc0_36230;
        } else {
            defunc_1_op_res_f_res_36238 = -1;
        }
        ((__global bool *) mem_44305)[gtid_35978] = x_36234;
        ((__global int32_t *) mem_44307)[gtid_35978] =
            defunc_1_op_res_f_res_36238;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36223
}
__kernel void mainDetailedzisegmap_36100(__global int *global_failure,
                                         int64_t m_30057,
                                         int64_t num_groups_36123, __global
                                         unsigned char *defunc_4_map_res_mem_43942,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44023,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44024,
                                         __global unsigned char *mem_44286,
                                         __global unsigned char *mem_44288)
{
    #define segmap_group_sizze_36122 (mainDetailedzisegmap_group_sizze_36102)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45547;
    int32_t local_tid_45548;
    int64_t group_sizze_45551;
    int32_t wave_sizze_45550;
    int32_t group_tid_45549;
    
    global_tid_45547 = get_global_id(0);
    local_tid_45548 = get_local_id(0);
    group_sizze_45551 = get_local_size(0);
    wave_sizze_45550 = LOCKSTEP_WIDTH;
    group_tid_45549 = get_group_id(0);
    
    int32_t phys_tid_36100;
    
    phys_tid_36100 = global_tid_45547;
    
    int32_t phys_group_id_45552;
    
    phys_group_id_45552 = get_group_id(0);
    for (int32_t i_45553 = 0; i_45553 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057, segmap_group_sizze_36122)) -
                   phys_group_id_45552, sext_i64_i32(num_groups_36123));
         i_45553++) {
        int32_t virt_group_id_45554 = phys_group_id_45552 + i_45553 *
                sext_i64_i32(num_groups_36123);
        int64_t gtid_36099 = sext_i32_i64(virt_group_id_45554) *
                segmap_group_sizze_36122 + sext_i32_i64(local_tid_45548);
        
        if (slt64(gtid_36099, m_30057)) {
            int32_t x_36129 = ((__global
                                int32_t *) defunc_4_map_res_mem_43942)[gtid_36099];
            int32_t x_36130 = ((__global
                                int32_t *) defunc_3_map_res_mem_44023)[gtid_36099];
            float x_36131 = ((__global
                              float *) defunc_3_map_res_mem_44024)[gtid_36099];
            int32_t y_36132 = sub32(x_36129, x_36130);
            float i32_res_36133 = sitofp_i32_f32(x_36130);
            float sqrt_res_36134;
            
            sqrt_res_36134 = futrts_sqrt32(i32_res_36133);
            
            float y_36135 = x_36131 * sqrt_res_36134;
            
            ((__global float *) mem_44286)[gtid_36099] = y_36135;
            ((__global int32_t *) mem_44288)[gtid_36099] = y_36132;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36122
}
__kernel void mainDetailedzisegmap_intragroup_32398(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_43568_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43558_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43548_backing_aligned_2,
                                                    int32_t k2p2zq_30074,
                                                    int64_t i32_res_30076,
                                                    int64_t m_30207,
                                                    int64_t nm_30208,
                                                    int32_t i64_res_30216,
                                                    int64_t computed_group_sizze_32339,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43544,
                                                    __global
                                                    unsigned char *mem_43572)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43568_backing_2 = (__local volatile
                                                           char *) mem_43568_backing_aligned_0;
    __local volatile char *restrict mem_43558_backing_1 = (__local volatile
                                                           char *) mem_43558_backing_aligned_1;
    __local volatile char *restrict mem_43548_backing_0 = (__local volatile
                                                           char *) mem_43548_backing_aligned_2;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_44763;
    int32_t local_tid_44764;
    int64_t group_sizze_44767;
    int32_t wave_sizze_44766;
    int32_t group_tid_44765;
    
    global_tid_44763 = get_global_id(0);
    local_tid_44764 = get_local_id(0);
    group_sizze_44767 = get_local_size(0);
    wave_sizze_44766 = LOCKSTEP_WIDTH;
    group_tid_44765 = get_group_id(0);
    
    int32_t phys_tid_32398;
    
    phys_tid_32398 = group_tid_44765;
    
    int32_t ltid_pre_44768;
    
    ltid_pre_44768 = squot32(local_tid_44764, sext_i64_i32(i32_res_30076));
    
    int32_t ltid_pre_44769;
    
    ltid_pre_44769 = local_tid_44764 - squot32(local_tid_44764,
                                               sext_i64_i32(i32_res_30076)) *
        sext_i64_i32(i32_res_30076);
    
    int32_t ltid_pre_44770;
    
    ltid_pre_44770 = local_tid_44764;
    
    int64_t gtid_32337;
    
    gtid_32337 = sext_i32_i64(group_tid_44765);
    
    __local char *mem_43548;
    
    mem_43548 = (__local char *) mem_43548_backing_0;
    
    int64_t gtid_32340 = sext_i32_i64(ltid_pre_44770);
    int32_t phys_tid_32341 = local_tid_44764;
    
    if (slt64(gtid_32340, nm_30208)) {
        int64_t defunc_0_f_res_32537 = sdiv64(gtid_32340, m_30207);
        int64_t defunc_0_f_res_32538 = smod64(gtid_32340, m_30207);
        bool cond_32539 = slt64(defunc_0_f_res_32538, i32_res_30076);
        float defunc_0_f_res_32540;
        
        if (cond_32539) {
            float defunc_0_f_res_t_res_32541 = ((__global
                                                 float *) defunc_3_map_res_mem_43544)[gtid_32337 *
                                                                                      (i32_res_30076 *
                                                                                       i32_res_30076) +
                                                                                      defunc_0_f_res_32537 *
                                                                                      i32_res_30076 +
                                                                                      defunc_0_f_res_32538];
            
            defunc_0_f_res_32540 = defunc_0_f_res_t_res_32541;
        } else {
            int64_t y_32542 = add64(i32_res_30076, defunc_0_f_res_32537);
            bool cond_32543 = defunc_0_f_res_32538 == y_32542;
            float defunc_0_f_res_f_res_32544;
            
            if (cond_32543) {
                defunc_0_f_res_f_res_32544 = 1.0F;
            } else {
                defunc_0_f_res_f_res_32544 = 0.0F;
            }
            defunc_0_f_res_32540 = defunc_0_f_res_f_res_32544;
        }
        ((__local float *) mem_43548)[gtid_32340] = defunc_0_f_res_32540;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43558;
    
    mem_43558 = (__local char *) mem_43558_backing_1;
    for (int32_t i_32546 = 0; i_32546 < k2p2zq_30074; i_32546++) {
        int64_t i_32548 = sext_i32_i64(i_32546);
        bool x_32549 = sle64(0, i_32548);
        bool y_32550 = slt64(i_32548, nm_30208);
        bool bounds_check_32551 = x_32549 && y_32550;
        bool index_certs_32552;
        
        if (!bounds_check_32551) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 16) == -1) {
                    global_failure_args[0] = i_32548;
                    global_failure_args[1] = nm_30208;
                    ;
                }
                local_failure = true;
                goto error_1;
            }
        }
        
        float v1_32553 = ((__local float *) mem_43548)[i_32548];
        bool cond_32554 = v1_32553 == 0.0F;
        int64_t gtid_32351 = sext_i32_i64(ltid_pre_44770);
        int32_t phys_tid_32352 = local_tid_44764;
        
        if (slt64(gtid_32351, nm_30208)) {
            int32_t defunc_0_f_res_32557 = sext_i64_i32(gtid_32351);
            int32_t defunc_0_f_res_32558 = sdiv32(defunc_0_f_res_32557,
                                                  i64_res_30216);
            int32_t defunc_0_f_res_32559 = smod32(defunc_0_f_res_32557,
                                                  i64_res_30216);
            float defunc_0_f_res_32560;
            
            if (cond_32554) {
                int32_t x_32561 = mul32(i64_res_30216, defunc_0_f_res_32558);
                int32_t i_32562 = add32(defunc_0_f_res_32559, x_32561);
                int64_t i_32563 = sext_i32_i64(i_32562);
                float defunc_0_f_res_t_res_32564 = ((__local
                                                     float *) mem_43548)[i_32563];
                
                defunc_0_f_res_32560 = defunc_0_f_res_t_res_32564;
            } else {
                int64_t j_32565 = sext_i32_i64(defunc_0_f_res_32559);
                float x_32566 = ((__local float *) mem_43548)[j_32565];
                float x_32567 = x_32566 / v1_32553;
                int32_t y_32568 = sub32(k2p2zq_30074, 1);
                bool cond_32569 = slt32(defunc_0_f_res_32558, y_32568);
                float defunc_0_f_res_f_res_32570;
                
                if (cond_32569) {
                    int32_t x_32571 = add32(1, defunc_0_f_res_32558);
                    int32_t x_32572 = mul32(i64_res_30216, x_32571);
                    int32_t i_32573 = add32(defunc_0_f_res_32559, x_32572);
                    int64_t i_32574 = sext_i32_i64(i_32573);
                    float x_32575 = ((__local float *) mem_43548)[i_32574];
                    int32_t i_32576 = add32(i_32546, x_32572);
                    int64_t i_32577 = sext_i32_i64(i_32576);
                    float x_32578 = ((__local float *) mem_43548)[i_32577];
                    float y_32579 = x_32567 * x_32578;
                    float defunc_0_f_res_f_res_t_res_32580 = x_32575 - y_32579;
                    
                    defunc_0_f_res_f_res_32570 =
                        defunc_0_f_res_f_res_t_res_32580;
                } else {
                    defunc_0_f_res_f_res_32570 = x_32567;
                }
                defunc_0_f_res_32560 = defunc_0_f_res_f_res_32570;
            }
            ((__local float *) mem_43558)[gtid_32351] = defunc_0_f_res_32560;
        }
        
      error_1:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_32378 = sext_i32_i64(ltid_pre_44770);
        int32_t phys_tid_32379 = local_tid_44764;
        
        if (slt64(write_i_32378, nm_30208)) {
            float write_value_32583 = ((__local
                                        float *) mem_43558)[write_i_32378];
            
            if (sle64(0, write_i_32378) && slt64(write_i_32378, nm_30208)) {
                ((__local float *) mem_43548)[write_i_32378] =
                    write_value_32583;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    __local char *mem_43568;
    
    mem_43568 = (__local char *) mem_43568_backing_2;
    
    int64_t gtid_32381 = sext_i32_i64(ltid_pre_44768);
    int64_t gtid_32382 = sext_i32_i64(ltid_pre_44769);
    int32_t phys_tid_32383 = local_tid_44764;
    
    if (slt64(gtid_32381, i32_res_30076) && slt64(gtid_32382, i32_res_30076)) {
        int64_t index_primexp_41423 = m_30207 * gtid_32381;
        int64_t i_32590 = add64(i32_res_30076, gtid_32382);
        int64_t new_index_32591 = i_32590 + index_primexp_41423;
        float defunc_0_f_res_32592 = ((__local
                                       float *) mem_43548)[new_index_32591];
        
        ((__local float *) mem_43568)[gtid_32381 * i32_res_30076 + gtid_32382] =
            defunc_0_f_res_32592;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_44772 = 0; i_44772 < sdiv_up64(i32_res_30076 *
                                                  i32_res_30076 -
                                                  sext_i32_i64(local_tid_44764),
                                                  computed_group_sizze_32339);
         i_44772++) {
        ((__global float *) mem_43572)[gtid_32337 * (i32_res_30076 *
                                                     i32_res_30076) +
                                       squot64(i_44772 *
                                               computed_group_sizze_32339 +
                                               sext_i32_i64(local_tid_44764),
                                               i32_res_30076) * i32_res_30076 +
                                       (i_44772 * computed_group_sizze_32339 +
                                        sext_i32_i64(local_tid_44764) -
                                        squot64(i_44772 *
                                                computed_group_sizze_32339 +
                                                sext_i32_i64(local_tid_44764),
                                                i32_res_30076) *
                                        i32_res_30076)] = ((__local
                                                            float *) mem_43568)[squot64(i_44772 *
                                                                                        computed_group_sizze_32339 +
                                                                                        sext_i32_i64(local_tid_44764),
                                                                                        i32_res_30076) *
                                                                                i32_res_30076 +
                                                                                (i_44772 *
                                                                                 computed_group_sizze_32339 +
                                                                                 sext_i32_i64(local_tid_44764) -
                                                                                 squot64(i_44772 *
                                                                                         computed_group_sizze_32339 +
                                                                                         sext_i32_i64(local_tid_44764),
                                                                                         i32_res_30076) *
                                                                                 i32_res_30076)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32742(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43593_backing_aligned_0,
                                                    int64_t m_30057,
                                                    int32_t k2p2zq_30074,
                                                    int64_t nm_30208,
                                                    int32_t i64_res_30216,
                                                    int32_t i_33129,
                                                    int64_t i_33131,
                                                    int64_t ctx_param_ext_43579,
                                                    int64_t ctx_param_ext_43580,
                                                    int64_t ctx_param_ext_43582,
                                                    __global
                                                    unsigned char *mem_param_43584,
                                                    __global
                                                    unsigned char *mem_43589,
                                                    __global
                                                    unsigned char *mem_43597)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43593_backing_0 = (__local volatile
                                                           char *) mem_43593_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44799;
    int32_t local_tid_44800;
    int64_t group_sizze_44803;
    int32_t wave_sizze_44802;
    int32_t group_tid_44801;
    
    global_tid_44799 = get_global_id(0);
    local_tid_44800 = get_local_id(0);
    group_sizze_44803 = get_local_size(0);
    wave_sizze_44802 = LOCKSTEP_WIDTH;
    group_tid_44801 = get_group_id(0);
    
    int32_t phys_tid_32742;
    
    phys_tid_32742 = group_tid_44801;
    
    int32_t ltid_pre_44804;
    
    ltid_pre_44804 = local_tid_44800;
    
    int64_t gtid_32710;
    
    gtid_32710 = sext_i32_i64(group_tid_44801);
    
    float v1_33148 = ((__global float *) mem_param_43584)[ctx_param_ext_43579 +
                                                          (gtid_32710 *
                                                           ctx_param_ext_43580 +
                                                           i_33131 *
                                                           ctx_param_ext_43582)];
    bool cond_33149 = v1_33148 == 0.0F;
    __local char *mem_43593;
    
    mem_43593 = (__local char *) mem_43593_backing_0;
    
    int64_t gtid_32713 = sext_i32_i64(ltid_pre_44804);
    int32_t phys_tid_32714 = local_tid_44800;
    int32_t defunc_0_f_res_33152 = sext_i64_i32(gtid_32713);
    int32_t defunc_0_f_res_33153 = sdiv32(defunc_0_f_res_33152, i64_res_30216);
    int32_t defunc_0_f_res_33154 = smod32(defunc_0_f_res_33152, i64_res_30216);
    float defunc_0_f_res_33155;
    
    if (cond_33149) {
        int32_t x_33156 = mul32(i64_res_30216, defunc_0_f_res_33153);
        int32_t i_33157 = add32(defunc_0_f_res_33154, x_33156);
        int64_t i_33158 = sext_i32_i64(i_33157);
        float defunc_0_f_res_t_res_33159 = ((__global
                                             float *) mem_param_43584)[ctx_param_ext_43579 +
                                                                       (gtid_32710 *
                                                                        ctx_param_ext_43580 +
                                                                        i_33158 *
                                                                        ctx_param_ext_43582)];
        
        defunc_0_f_res_33155 = defunc_0_f_res_t_res_33159;
    } else {
        int64_t j_33160 = sext_i32_i64(defunc_0_f_res_33154);
        float x_33161 = ((__global
                          float *) mem_param_43584)[ctx_param_ext_43579 +
                                                    (gtid_32710 *
                                                     ctx_param_ext_43580 +
                                                     j_33160 *
                                                     ctx_param_ext_43582)];
        float x_33162 = x_33161 / v1_33148;
        int32_t y_33163 = sub32(k2p2zq_30074, 1);
        bool cond_33164 = slt32(defunc_0_f_res_33153, y_33163);
        float defunc_0_f_res_f_res_33165;
        
        if (cond_33164) {
            int32_t x_33166 = add32(1, defunc_0_f_res_33153);
            int32_t x_33167 = mul32(i64_res_30216, x_33166);
            int32_t i_33168 = add32(defunc_0_f_res_33154, x_33167);
            int64_t i_33169 = sext_i32_i64(i_33168);
            float x_33170 = ((__global
                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                        (gtid_32710 *
                                                         ctx_param_ext_43580 +
                                                         i_33169 *
                                                         ctx_param_ext_43582)];
            int32_t i_33171 = add32(i_33129, x_33167);
            int64_t i_33172 = sext_i32_i64(i_33171);
            float x_33173 = ((__global
                              float *) mem_param_43584)[ctx_param_ext_43579 +
                                                        (gtid_32710 *
                                                         ctx_param_ext_43580 +
                                                         i_33172 *
                                                         ctx_param_ext_43582)];
            float y_33174 = x_33162 * x_33173;
            float defunc_0_f_res_f_res_t_res_33175 = x_33170 - y_33174;
            
            defunc_0_f_res_f_res_33165 = defunc_0_f_res_f_res_t_res_33175;
        } else {
            defunc_0_f_res_f_res_33165 = x_33162;
        }
        defunc_0_f_res_33155 = defunc_0_f_res_f_res_33165;
    }
    ((__local float *) mem_43593)[gtid_32713] = defunc_0_f_res_33155;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_32740 = sext_i32_i64(ltid_pre_44804);
    int32_t phys_tid_32741 = local_tid_44800;
    float write_value_33178 = ((__local float *) mem_43593)[write_i_32740];
    
    if (sle64(0, write_i_32740) && slt64(write_i_32740, nm_30208)) {
        ((__global float *) mem_43589)[gtid_32710 + write_i_32740 * m_30057] =
            write_value_33178;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44800 == 0) {
        for (int64_t i_44805 = 0; i_44805 < nm_30208; i_44805++) {
            ((__global float *) mem_43597)[gtid_32710 * nm_30208 + i_44805] =
                ((__global float *) mem_43589)[gtid_32710 + i_44805 * m_30057];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_33716(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43921_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43919_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43917_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43915_backing_aligned_3,
                                                    int64_t N_30056,
                                                    int64_t N_30058,
                                                    int64_t i_30323, __global
                                                    unsigned char *images_mem_43378,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43905,
                                                    __global
                                                    unsigned char *mem_43924,
                                                    __global
                                                    unsigned char *mem_43927,
                                                    __global
                                                    unsigned char *mem_43930)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43921_backing_3 = (__local volatile
                                                           char *) mem_43921_backing_aligned_0;
    __local volatile char *restrict mem_43919_backing_2 = (__local volatile
                                                           char *) mem_43919_backing_aligned_1;
    __local volatile char *restrict mem_43917_backing_1 = (__local volatile
                                                           char *) mem_43917_backing_aligned_2;
    __local volatile char *restrict mem_43915_backing_0 = (__local volatile
                                                           char *) mem_43915_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45111;
    int32_t local_tid_45112;
    int64_t group_sizze_45115;
    int32_t wave_sizze_45114;
    int32_t group_tid_45113;
    
    global_tid_45111 = get_global_id(0);
    local_tid_45112 = get_local_id(0);
    group_sizze_45115 = get_local_size(0);
    wave_sizze_45114 = LOCKSTEP_WIDTH;
    group_tid_45113 = get_group_id(0);
    
    int32_t phys_tid_33716;
    
    phys_tid_33716 = group_tid_45113;
    
    int32_t ltid_pre_45116;
    
    ltid_pre_45116 = local_tid_45112;
    
    int64_t gtid_33709;
    
    gtid_33709 = sext_i32_i64(group_tid_45113);
    
    __local char *mem_43915;
    
    mem_43915 = (__local char *) mem_43915_backing_0;
    
    __local char *mem_43917;
    
    mem_43917 = (__local char *) mem_43917_backing_1;
    
    int64_t gtid_33712 = sext_i32_i64(ltid_pre_45116);
    int32_t phys_tid_33713 = local_tid_45112;
    float x_33805 = ((__global float *) images_mem_43378)[gtid_33709 * N_30058 +
                                                          gtid_33712];
    bool isnan_res_33807;
    
    isnan_res_33807 = futrts_isnan32(x_33805);
    
    bool cond_33808 = !isnan_res_33807;
    float defunc_0_f_res_33809;
    
    if (cond_33808) {
        float x_33806 = ((__global
                          float *) defunc_3_map_res_mem_43905)[gtid_33709 *
                                                               N_30056 +
                                                               gtid_33712];
        float defunc_0_f_res_t_res_33810 = x_33805 - x_33806;
        
        defunc_0_f_res_33809 = defunc_0_f_res_t_res_33810;
    } else {
        defunc_0_f_res_33809 = NAN;
    }
    
    bool isnan_res_33811;
    
    isnan_res_33811 = futrts_isnan32(defunc_0_f_res_33809);
    
    bool defunc_0_p_res_33812 = !isnan_res_33811;
    int64_t defunc_0_f_res_33813 = btoi_bool_i64(defunc_0_p_res_33812);
    
    ((__local int64_t *) mem_43915)[gtid_33712] = defunc_0_f_res_33813;
    ((__local float *) mem_43917)[gtid_33712] = defunc_0_f_res_33809;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45117;
    
    dims_flat_45117 = N_30056;
    
    int64_t x_33802;
    int64_t x_33803;
    int64_t x_45119;
    int64_t x_45120;
    bool ltid_in_bounds_45122;
    
    ltid_in_bounds_45122 = slt64(sext_i32_i64(local_tid_45112), N_30056);
    
    int32_t skip_threads_45123;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45122) {
            x_33803 = ((volatile __local
                        int64_t *) mem_43915)[sext_i32_i64(local_tid_45112)];
            if ((local_tid_45112 - squot32(local_tid_45112, 32) * 32) == 0) {
                x_33802 = x_33803;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45123 = 1;
        while (slt32(skip_threads_45123, 32)) {
            if (sle32(skip_threads_45123, local_tid_45112 -
                      squot32(local_tid_45112, 32) * 32) &&
                ltid_in_bounds_45122) {
                // read operands
                {
                    x_33802 = ((volatile __local
                                int64_t *) mem_43915)[sext_i32_i64(local_tid_45112) -
                                                      sext_i32_i64(skip_threads_45123)];
                }
                // perform operation
                {
                    bool inactive_45124 =
                         slt64(srem64(sext_i32_i64(local_tid_45112), N_30056),
                               sext_i32_i64(local_tid_45112) -
                               sext_i32_i64(local_tid_45112 -
                               skip_threads_45123));
                    
                    if (inactive_45124) {
                        x_33802 = x_33803;
                    }
                    if (!inactive_45124) {
                        int64_t defunc_1_op_res_33804 = add64(x_33802, x_33803);
                        
                        x_33802 = defunc_1_op_res_33804;
                    }
                }
            }
            if (sle32(wave_sizze_45114, skip_threads_45123)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45123, local_tid_45112 -
                      squot32(local_tid_45112, 32) * 32) &&
                ltid_in_bounds_45122) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43915)[sext_i32_i64(local_tid_45112)] =
                        x_33802;
                    x_33803 = x_33802;
                }
            }
            if (sle32(wave_sizze_45114, skip_threads_45123)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45123 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45112 - squot32(local_tid_45112, 32) * 32) == 31 &&
            ltid_in_bounds_45122) {
            ((volatile __local
              int64_t *) mem_43915)[sext_i32_i64(squot32(local_tid_45112,
                                                         32))] = x_33802;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45125;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45112, 32) == 0 && ltid_in_bounds_45122) {
                x_45120 = ((volatile __local
                            int64_t *) mem_43915)[sext_i32_i64(local_tid_45112)];
                if ((local_tid_45112 - squot32(local_tid_45112, 32) * 32) ==
                    0) {
                    x_45119 = x_45120;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45125 = 1;
            while (slt32(skip_threads_45125, 32)) {
                if (sle32(skip_threads_45125, local_tid_45112 -
                          squot32(local_tid_45112, 32) * 32) &&
                    (squot32(local_tid_45112, 32) == 0 &&
                     ltid_in_bounds_45122)) {
                    // read operands
                    {
                        x_45119 = ((volatile __local
                                    int64_t *) mem_43915)[sext_i32_i64(local_tid_45112) -
                                                          sext_i32_i64(skip_threads_45125)];
                    }
                    // perform operation
                    {
                        bool inactive_45126 =
                             slt64(srem64(sext_i32_i64(local_tid_45112 * 32 +
                                          32 - 1), N_30056),
                                   sext_i32_i64(local_tid_45112 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45112 -
                                                 skip_threads_45125) * 32 + 32 -
                                   1));
                        
                        if (inactive_45126) {
                            x_45119 = x_45120;
                        }
                        if (!inactive_45126) {
                            int64_t defunc_1_op_res_45121 = add64(x_45119,
                                                                  x_45120);
                            
                            x_45119 = defunc_1_op_res_45121;
                        }
                    }
                }
                if (sle32(wave_sizze_45114, skip_threads_45125)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45125, local_tid_45112 -
                          squot32(local_tid_45112, 32) * 32) &&
                    (squot32(local_tid_45112, 32) == 0 &&
                     ltid_in_bounds_45122)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43915)[sext_i32_i64(local_tid_45112)] =
                            x_45119;
                        x_45120 = x_45119;
                    }
                }
                if (sle32(wave_sizze_45114, skip_threads_45125)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45125 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45112, 32) == 0 || !ltid_in_bounds_45122)) {
            // read operands
            {
                x_33803 = x_33802;
                x_33802 = ((__local
                            int64_t *) mem_43915)[sext_i32_i64(squot32(local_tid_45112,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45127 =
                     slt64(srem64(sext_i32_i64(local_tid_45112), N_30056),
                           sext_i32_i64(local_tid_45112) -
                           sext_i32_i64(squot32(local_tid_45112, 32) * 32 - 1));
                
                if (inactive_45127) {
                    x_33802 = x_33803;
                }
                if (!inactive_45127) {
                    int64_t defunc_1_op_res_33804 = add64(x_33802, x_33803);
                    
                    x_33802 = defunc_1_op_res_33804;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43915)[sext_i32_i64(local_tid_45112)] =
                    x_33802;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45112, 32) == 0) {
            ((__local int64_t *) mem_43915)[sext_i32_i64(local_tid_45112)] =
                x_33803;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_33814 = ((__local int64_t *) mem_43915)[i_30323];
    int32_t defunc_0_f_res_33815 = sext_i64_i32(last_res_33814);
    __local char *mem_43919;
    
    mem_43919 = (__local char *) mem_43919_backing_2;
    ((__local float *) mem_43919)[sext_i32_i64(local_tid_45112)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43921;
    
    mem_43921 = (__local char *) mem_43921_backing_3;
    ((__local int32_t *) mem_43921)[sext_i32_i64(local_tid_45112)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_33714 = sext_i32_i64(ltid_pre_45116);
    int32_t phys_tid_33715 = local_tid_45112;
    float x_33820 = ((__local float *) mem_43917)[write_i_33714];
    int32_t index_primexp_41445 = sext_i64_i32(write_i_33714);
    bool isnan_res_33823;
    
    isnan_res_33823 = futrts_isnan32(x_33820);
    
    bool defunc_0_p_res_33824 = !isnan_res_33823;
    int64_t defunc_1_f_res_33825;
    
    if (defunc_0_p_res_33824) {
        int64_t x_33821 = ((__local int64_t *) mem_43915)[write_i_33714];
        int64_t defunc_1_f_res_t_res_33826 = sub64(x_33821, 1);
        
        defunc_1_f_res_33825 = defunc_1_f_res_t_res_33826;
    } else {
        defunc_1_f_res_33825 = -1;
    }
    if (sle64(0, defunc_1_f_res_33825) && slt64(defunc_1_f_res_33825,
                                                N_30056)) {
        ((__local int32_t *) mem_43921)[defunc_1_f_res_33825] =
            index_primexp_41445;
    }
    if (sle64(0, defunc_1_f_res_33825) && slt64(defunc_1_f_res_33825,
                                                N_30056)) {
        ((__local float *) mem_43919)[defunc_1_f_res_33825] = x_33820;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45112 == 0) {
        ((__global int32_t *) mem_43924)[gtid_33709] = defunc_0_f_res_33815;
    }
    ((__global float *) mem_43927)[gtid_33709 * N_30056 +
                                   sext_i32_i64(local_tid_45112)] = ((__local
                                                                      float *) mem_43919)[sext_i32_i64(local_tid_45112)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43930)[gtid_33709 * N_30056 +
                                     sext_i32_i64(local_tid_45112)] = ((__local
                                                                        int32_t *) mem_43921)[sext_i32_i64(local_tid_45112)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_34056(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45220_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45216_backing_aligned_1,
                                                    int64_t N_30056,
                                                    int64_t N_30058,
                                                    float hfrac_30063,
                                                    int64_t i32_res_30070,
                                                    int32_t k2p2_30072, __global
                                                    unsigned char *images_mem_43378,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43943,
                                                    __global
                                                    unsigned char *mem_44003,
                                                    __global
                                                    unsigned char *mem_44005,
                                                    __global
                                                    unsigned char *mem_44007)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45220_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45220_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45216_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45216_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45210;
    int32_t local_tid_45211;
    int64_t group_sizze_45214;
    int32_t wave_sizze_45213;
    int32_t group_tid_45212;
    
    global_tid_45210 = get_global_id(0);
    local_tid_45211 = get_local_id(0);
    group_sizze_45214 = get_local_size(0);
    wave_sizze_45213 = LOCKSTEP_WIDTH;
    group_tid_45212 = get_group_id(0);
    
    int32_t phys_tid_34056;
    
    phys_tid_34056 = group_tid_45212;
    
    int32_t ltid_pre_45215;
    
    ltid_pre_45215 = local_tid_45211;
    
    int64_t gtid_34049;
    
    gtid_34049 = sext_i32_i64(group_tid_45212);
    
    int32_t defunc_0_f_res_34133;
    int64_t gtid_34052 = sext_i32_i64(ltid_pre_45215);
    int32_t phys_tid_34053 = local_tid_45211;
    __local char *red_arr_mem_45216;
    
    red_arr_mem_45216 = (__local char *) red_arr_mem_45216_backing_0;
    
    float x_34137;
    
    x_34137 = ((__global float *) images_mem_43378)[gtid_34049 * N_30058 +
                                                    gtid_34052];
    
    bool isnan_res_34138;
    
    isnan_res_34138 = futrts_isnan32(x_34137);
    
    bool cond_34139 = !isnan_res_34138;
    int32_t defunc_0_f_res_34140 = btoi_bool_i32(cond_34139);
    
    ((__local int32_t *) red_arr_mem_45216)[gtid_34052] = defunc_0_f_res_34140;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45218;
    int32_t skip_waves_45219;
    
    skip_waves_45219 = 1;
    
    int32_t x_34134;
    int32_t x_34135;
    
    offset_45218 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45211, sext_i64_i32(i32_res_30070))) {
            x_34134 = ((__local
                        int32_t *) red_arr_mem_45216)[sext_i32_i64(local_tid_45211 +
                                                      offset_45218)];
        }
    }
    offset_45218 = 1;
    while (slt32(offset_45218, wave_sizze_45213)) {
        if (slt32(local_tid_45211 + offset_45218,
                  sext_i64_i32(i32_res_30070)) && ((local_tid_45211 -
                                                    squot32(local_tid_45211,
                                                            wave_sizze_45213) *
                                                    wave_sizze_45213) & (2 *
                                                                         offset_45218 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_34135 = ((volatile __local
                            int32_t *) red_arr_mem_45216)[sext_i32_i64(local_tid_45211 +
                                                          offset_45218)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_34136 = add32(x_34134, x_34135);
                
                x_34134 = defunc_1_op_res_34136;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45216)[sext_i32_i64(local_tid_45211)] =
                    x_34134;
            }
        }
        offset_45218 *= 2;
    }
    while (slt32(skip_waves_45219, squot32(sext_i64_i32(i32_res_30070) +
                                           wave_sizze_45213 - 1,
                                           wave_sizze_45213))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45218 = skip_waves_45219 * wave_sizze_45213;
        if (slt32(local_tid_45211 + offset_45218,
                  sext_i64_i32(i32_res_30070)) && ((local_tid_45211 -
                                                    squot32(local_tid_45211,
                                                            wave_sizze_45213) *
                                                    wave_sizze_45213) == 0 &&
                                                   (squot32(local_tid_45211,
                                                            wave_sizze_45213) &
                                                    (2 * skip_waves_45219 -
                                                     1)) == 0)) {
            // read array element
            {
                x_34135 = ((__local
                            int32_t *) red_arr_mem_45216)[sext_i32_i64(local_tid_45211 +
                                                          offset_45218)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_34136 = add32(x_34134, x_34135);
                
                x_34134 = defunc_1_op_res_34136;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45216)[sext_i32_i64(local_tid_45211)] =
                    x_34134;
            }
        }
        skip_waves_45219 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_34133 = ((__local int32_t *) red_arr_mem_45216)[0];
    
    float defunc_0_f_res_34141;
    int64_t gtid_34054 = sext_i32_i64(ltid_pre_45215);
    int32_t phys_tid_34055 = local_tid_45211;
    __local char *red_arr_mem_45220;
    
    red_arr_mem_45220 = (__local char *) red_arr_mem_45220_backing_1;
    
    int32_t index_primexp_41453;
    
    index_primexp_41453 = sext_i64_i32(gtid_34054);
    
    bool cond_34146 = slt32(index_primexp_41453, defunc_0_f_res_34133);
    float defunc_0_f_res_34147;
    
    if (cond_34146) {
        int64_t i_34148 = sext_i32_i64(index_primexp_41453);
        float defunc_0_f_res_t_res_34149 = ((__global
                                             float *) defunc_4_map_res_mem_43943)[gtid_34049 *
                                                                                  N_30056 +
                                                                                  i_34148];
        
        defunc_0_f_res_34147 = defunc_0_f_res_t_res_34149;
    } else {
        defunc_0_f_res_34147 = 0.0F;
    }
    
    float defunc_0_f_res_34150 = defunc_0_f_res_34147 * defunc_0_f_res_34147;
    
    ((__local float *) red_arr_mem_45220)[gtid_34054] = defunc_0_f_res_34150;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45222;
    int32_t skip_waves_45223;
    
    skip_waves_45223 = 1;
    
    float x_34142;
    float x_34143;
    
    offset_45222 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45211, sext_i64_i32(i32_res_30070))) {
            x_34142 = ((__local
                        float *) red_arr_mem_45220)[sext_i32_i64(local_tid_45211 +
                                                    offset_45222)];
        }
    }
    offset_45222 = 1;
    while (slt32(offset_45222, wave_sizze_45213)) {
        if (slt32(local_tid_45211 + offset_45222,
                  sext_i64_i32(i32_res_30070)) && ((local_tid_45211 -
                                                    squot32(local_tid_45211,
                                                            wave_sizze_45213) *
                                                    wave_sizze_45213) & (2 *
                                                                         offset_45222 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_34143 = ((volatile __local
                            float *) red_arr_mem_45220)[sext_i32_i64(local_tid_45211 +
                                                        offset_45222)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_34144 = x_34142 + x_34143;
                
                x_34142 = defunc_1_op_res_34144;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45220)[sext_i32_i64(local_tid_45211)] =
                    x_34142;
            }
        }
        offset_45222 *= 2;
    }
    while (slt32(skip_waves_45223, squot32(sext_i64_i32(i32_res_30070) +
                                           wave_sizze_45213 - 1,
                                           wave_sizze_45213))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45222 = skip_waves_45223 * wave_sizze_45213;
        if (slt32(local_tid_45211 + offset_45222,
                  sext_i64_i32(i32_res_30070)) && ((local_tid_45211 -
                                                    squot32(local_tid_45211,
                                                            wave_sizze_45213) *
                                                    wave_sizze_45213) == 0 &&
                                                   (squot32(local_tid_45211,
                                                            wave_sizze_45213) &
                                                    (2 * skip_waves_45223 -
                                                     1)) == 0)) {
            // read array element
            {
                x_34143 = ((__local
                            float *) red_arr_mem_45220)[sext_i32_i64(local_tid_45211 +
                                                        offset_45222)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_34144 = x_34142 + x_34143;
                
                x_34142 = defunc_1_op_res_34144;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45220)[sext_i32_i64(local_tid_45211)] =
                    x_34142;
            }
        }
        skip_waves_45223 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_34141 = ((__local float *) red_arr_mem_45220)[0];
    
    int32_t r32_arg_34151 = sub32(defunc_0_f_res_34133, k2p2_30072);
    float i32_res_34152 = sitofp_i32_f32(r32_arg_34151);
    float sqrt_arg_34153 = defunc_0_f_res_34141 / i32_res_34152;
    float sqrt_res_34154;
    
    sqrt_res_34154 = futrts_sqrt32(sqrt_arg_34153);
    
    float i32_res_34155 = sitofp_i32_f32(defunc_0_f_res_34133);
    float t32_arg_34156 = hfrac_30063 * i32_res_34155;
    int32_t f32_res_34157 = fptosi_f32_i32(t32_arg_34156);
    
    if (local_tid_45211 == 0) {
        ((__global int32_t *) mem_44003)[gtid_34049] = f32_res_34157;
    }
    if (local_tid_45211 == 0) {
        ((__global int32_t *) mem_44005)[gtid_34049] = defunc_0_f_res_34133;
    }
    if (local_tid_45211 == 0) {
        ((__global float *) mem_44007)[gtid_34049] = sqrt_res_34154;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_34504(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_44270_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44260_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *double_buffer_mem_44483_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_44258_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_44256_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_44254_backing_aligned_5,
                                                    __local volatile
                                                    int64_t *mem_44252_backing_aligned_6,
                                                    __local volatile
                                                    int64_t *mem_44250_backing_aligned_7,
                                                    __local volatile
                                                    int64_t *mem_44240_backing_aligned_8,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45519_backing_aligned_9,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45517_backing_aligned_10,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45515_backing_aligned_11,
                                                    __local volatile
                                                    int64_t *mem_44237_backing_aligned_12,
                                                    __local volatile
                                                    int64_t *mem_44234_backing_aligned_13,
                                                    int64_t N_30056,
                                                    int32_t n_30061,
                                                    int64_t iota32_arg_30443,
                                                    int32_t iters_30474,
                                                    int64_t i_30476, __global
                                                    unsigned char *defunc_4_map_res_mem_43942,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43943,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43944,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44022,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44023,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44024,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_44073,
                                                    __global
                                                    unsigned char *mem_44078,
                                                    __global
                                                    unsigned char *mem_44274,
                                                    __global
                                                    unsigned char *mem_44277,
                                                    __global
                                                    unsigned char *mem_44279,
                                                    __global
                                                    unsigned char *mem_44281,
                                                    __global
                                                    unsigned char *mem_44283)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44270_backing_13 = (__local volatile
                                                            char *) mem_44270_backing_aligned_0;
    __local volatile char *restrict mem_44260_backing_12 = (__local volatile
                                                            char *) mem_44260_backing_aligned_1;
    __local volatile char *restrict double_buffer_mem_44483_backing_11 =
                          (__local volatile
                           char *) double_buffer_mem_44483_backing_aligned_2;
    __local volatile char *restrict mem_44258_backing_10 = (__local volatile
                                                            char *) mem_44258_backing_aligned_3;
    __local volatile char *restrict mem_44256_backing_9 = (__local volatile
                                                           char *) mem_44256_backing_aligned_4;
    __local volatile char *restrict mem_44254_backing_8 = (__local volatile
                                                           char *) mem_44254_backing_aligned_5;
    __local volatile char *restrict mem_44252_backing_7 = (__local volatile
                                                           char *) mem_44252_backing_aligned_6;
    __local volatile char *restrict mem_44250_backing_6 = (__local volatile
                                                           char *) mem_44250_backing_aligned_7;
    __local volatile char *restrict mem_44240_backing_5 = (__local volatile
                                                           char *) mem_44240_backing_aligned_8;
    __local volatile char *restrict red_arr_mem_45519_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_45519_backing_aligned_9;
    __local volatile char *restrict red_arr_mem_45517_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45517_backing_aligned_10;
    __local volatile char *restrict red_arr_mem_45515_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45515_backing_aligned_11;
    __local volatile char *restrict mem_44237_backing_1 = (__local volatile
                                                           char *) mem_44237_backing_aligned_12;
    __local volatile char *restrict mem_44234_backing_0 = (__local volatile
                                                           char *) mem_44234_backing_aligned_13;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45498;
    int32_t local_tid_45499;
    int64_t group_sizze_45502;
    int32_t wave_sizze_45501;
    int32_t group_tid_45500;
    
    global_tid_45498 = get_global_id(0);
    local_tid_45499 = get_local_id(0);
    group_sizze_45502 = get_local_size(0);
    wave_sizze_45501 = LOCKSTEP_WIDTH;
    group_tid_45500 = get_group_id(0);
    
    int32_t phys_tid_34504;
    
    phys_tid_34504 = group_tid_45500;
    
    int32_t ltid_pre_45503;
    
    ltid_pre_45503 = local_tid_45499;
    
    int64_t gtid_34469;
    
    gtid_34469 = sext_i32_i64(group_tid_45500);
    
    int32_t x_35022;
    
    x_35022 = ((__global int32_t *) defunc_4_map_res_mem_43942)[gtid_34469];
    
    int32_t x_35023 = ((__global
                        int32_t *) defunc_3_map_res_mem_44023)[gtid_34469];
    float x_35024 = ((__global float *) defunc_3_map_res_mem_44024)[gtid_34469];
    int32_t x_35025 = ((__global
                        int32_t *) defunc_3_map_res_mem_44022)[gtid_34469];
    float x_35026 = ((__global float *) defunc_0_f_res_mem_44073)[gtid_34469];
    int32_t y_35029 = sub32(x_35022, x_35023);
    float i32_res_35030 = sitofp_i32_f32(x_35023);
    float sqrt_res_35031;
    
    sqrt_res_35031 = futrts_sqrt32(i32_res_35030);
    
    float y_35032 = x_35024 * sqrt_res_35031;
    __local char *mem_44234;
    
    mem_44234 = (__local char *) mem_44234_backing_0;
    
    int64_t gtid_34472 = sext_i32_i64(ltid_pre_45503);
    int32_t phys_tid_34473 = local_tid_45499;
    int32_t index_primexp_41466 = sext_i64_i32(gtid_34472);
    bool cond_35045 = sle32(y_35029, index_primexp_41466);
    float defunc_0_f_res_35046;
    
    if (cond_35045) {
        defunc_0_f_res_35046 = 0.0F;
    } else {
        bool cond_35047 = index_primexp_41466 == 0;
        float defunc_0_f_res_f_res_35048;
        
        if (cond_35047) {
            defunc_0_f_res_f_res_35048 = x_35026;
        } else {
            int32_t i_35049 = add32(x_35023, index_primexp_41466);
            int64_t i_35050 = sext_i32_i64(i_35049);
            float x_35051 = ((__global
                              float *) defunc_4_map_res_mem_43943)[gtid_34469 *
                                                                   N_30056 +
                                                                   i_35050];
            int32_t x_35052 = sub32(x_35023, x_35025);
            int32_t i_35053 = add32(x_35052, index_primexp_41466);
            int64_t i_35054 = sext_i32_i64(i_35053);
            float y_35055 = ((__global
                              float *) defunc_4_map_res_mem_43943)[gtid_34469 *
                                                                   N_30056 +
                                                                   i_35054];
            float defunc_0_f_res_f_res_f_res_35056 = x_35051 - y_35055;
            
            defunc_0_f_res_f_res_35048 = defunc_0_f_res_f_res_f_res_35056;
        }
        defunc_0_f_res_35046 = defunc_0_f_res_f_res_35048;
    }
    ((__local float *) mem_44234)[gtid_34472] = defunc_0_f_res_35046;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45504;
    
    dims_flat_45504 = iota32_arg_30443;
    
    float x_35041;
    float x_35042;
    float x_45506;
    float x_45507;
    bool ltid_in_bounds_45509;
    
    ltid_in_bounds_45509 = slt64(sext_i32_i64(local_tid_45499),
                                 iota32_arg_30443);
    
    int32_t skip_threads_45510;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45509) {
            x_35042 = ((volatile __local
                        float *) mem_44234)[sext_i32_i64(local_tid_45499)];
            if ((local_tid_45499 - squot32(local_tid_45499, 32) * 32) == 0) {
                x_35041 = x_35042;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45510 = 1;
        while (slt32(skip_threads_45510, 32)) {
            if (sle32(skip_threads_45510, local_tid_45499 -
                      squot32(local_tid_45499, 32) * 32) &&
                ltid_in_bounds_45509) {
                // read operands
                {
                    x_35041 = ((volatile __local
                                float *) mem_44234)[sext_i32_i64(local_tid_45499) -
                                                    sext_i32_i64(skip_threads_45510)];
                }
                // perform operation
                {
                    bool inactive_45511 =
                         slt64(srem64(sext_i32_i64(local_tid_45499),
                                      iota32_arg_30443),
                               sext_i32_i64(local_tid_45499) -
                               sext_i32_i64(local_tid_45499 -
                               skip_threads_45510));
                    
                    if (inactive_45511) {
                        x_35041 = x_35042;
                    }
                    if (!inactive_45511) {
                        float defunc_1_op_res_35043 = x_35041 + x_35042;
                        
                        x_35041 = defunc_1_op_res_35043;
                    }
                }
            }
            if (sle32(wave_sizze_45501, skip_threads_45510)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45510, local_tid_45499 -
                      squot32(local_tid_45499, 32) * 32) &&
                ltid_in_bounds_45509) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44234)[sext_i32_i64(local_tid_45499)] =
                        x_35041;
                    x_35042 = x_35041;
                }
            }
            if (sle32(wave_sizze_45501, skip_threads_45510)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45510 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45499 - squot32(local_tid_45499, 32) * 32) == 31 &&
            ltid_in_bounds_45509) {
            ((volatile __local
              float *) mem_44234)[sext_i32_i64(squot32(local_tid_45499, 32))] =
                x_35041;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45512;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45499, 32) == 0 && ltid_in_bounds_45509) {
                x_45507 = ((volatile __local
                            float *) mem_44234)[sext_i32_i64(local_tid_45499)];
                if ((local_tid_45499 - squot32(local_tid_45499, 32) * 32) ==
                    0) {
                    x_45506 = x_45507;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45512 = 1;
            while (slt32(skip_threads_45512, 32)) {
                if (sle32(skip_threads_45512, local_tid_45499 -
                          squot32(local_tid_45499, 32) * 32) &&
                    (squot32(local_tid_45499, 32) == 0 &&
                     ltid_in_bounds_45509)) {
                    // read operands
                    {
                        x_45506 = ((volatile __local
                                    float *) mem_44234)[sext_i32_i64(local_tid_45499) -
                                                        sext_i32_i64(skip_threads_45512)];
                    }
                    // perform operation
                    {
                        bool inactive_45513 =
                             slt64(srem64(sext_i32_i64(local_tid_45499 * 32 +
                                          32 - 1), iota32_arg_30443),
                                   sext_i32_i64(local_tid_45499 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45499 -
                                                 skip_threads_45512) * 32 + 32 -
                                   1));
                        
                        if (inactive_45513) {
                            x_45506 = x_45507;
                        }
                        if (!inactive_45513) {
                            float defunc_1_op_res_45508 = x_45506 + x_45507;
                            
                            x_45506 = defunc_1_op_res_45508;
                        }
                    }
                }
                if (sle32(wave_sizze_45501, skip_threads_45512)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45512, local_tid_45499 -
                          squot32(local_tid_45499, 32) * 32) &&
                    (squot32(local_tid_45499, 32) == 0 &&
                     ltid_in_bounds_45509)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44234)[sext_i32_i64(local_tid_45499)] =
                            x_45506;
                        x_45507 = x_45506;
                    }
                }
                if (sle32(wave_sizze_45501, skip_threads_45512)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45512 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45499, 32) == 0 || !ltid_in_bounds_45509)) {
            // read operands
            {
                x_35042 = x_35041;
                x_35041 = ((__local
                            float *) mem_44234)[sext_i32_i64(squot32(local_tid_45499,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45514 =
                     slt64(srem64(sext_i32_i64(local_tid_45499),
                                  iota32_arg_30443),
                           sext_i32_i64(local_tid_45499) -
                           sext_i32_i64(squot32(local_tid_45499, 32) * 32 - 1));
                
                if (inactive_45514) {
                    x_35041 = x_35042;
                }
                if (!inactive_45514) {
                    float defunc_1_op_res_35043 = x_35041 + x_35042;
                    
                    x_35041 = defunc_1_op_res_35043;
                }
            }
            // write final result
            {
                ((__local float *) mem_44234)[sext_i32_i64(local_tid_45499)] =
                    x_35041;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45499, 32) == 0) {
            ((__local float *) mem_44234)[sext_i32_i64(local_tid_45499)] =
                x_35042;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44237;
    
    mem_44237 = (__local char *) mem_44237_backing_1;
    
    bool acc0_35062;
    int32_t acc0_35063;
    float acc0_35064;
    int64_t gtid_34474 = sext_i32_i64(ltid_pre_45503);
    int32_t phys_tid_34475 = local_tid_45499;
    __local char *red_arr_mem_45515;
    
    red_arr_mem_45515 = (__local char *) red_arr_mem_45515_backing_2;
    
    __local char *red_arr_mem_45517;
    
    red_arr_mem_45517 = (__local char *) red_arr_mem_45517_backing_3;
    
    __local char *red_arr_mem_45519;
    
    red_arr_mem_45519 = (__local char *) red_arr_mem_45519_backing_4;
    
    float x_35080;
    
    x_35080 = ((__local float *) mem_44234)[gtid_34474];
    
    float x_35081 = ((__global float *) mem_44078)[gtid_34474];
    int32_t index_primexp_41469 = sext_i64_i32(gtid_34474);
    float defunc_0_f_res_35084 = x_35080 / y_35032;
    bool cond_35085 = slt32(index_primexp_41469, y_35029);
    bool isnan_res_35086;
    
    isnan_res_35086 = futrts_isnan32(defunc_0_f_res_35084);
    
    bool cond_t_res_35087 = !isnan_res_35086;
    bool x_35088 = cond_35085 && cond_t_res_35087;
    float abs_res_35089 = (float) fabs(defunc_0_f_res_35084);
    bool defunc_2_f_res_t_res_35090 = x_35081 < abs_res_35089;
    bool x_35091 = x_35088 && defunc_2_f_res_t_res_35090;
    float defunc_1_f_res_35092;
    
    if (cond_35085) {
        defunc_1_f_res_35092 = defunc_0_f_res_35084;
    } else {
        defunc_1_f_res_35092 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45515)[gtid_34474] = x_35091;
    ((__local int32_t *) red_arr_mem_45517)[gtid_34474] = index_primexp_41469;
    ((__local float *) red_arr_mem_45519)[gtid_34474] = defunc_1_f_res_35092;
    ((__local float *) mem_44237)[gtid_34474] = defunc_0_f_res_35084;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45521;
    int32_t skip_waves_45522;
    
    skip_waves_45522 = 1;
    
    bool x_35066;
    int32_t x_35067;
    float x_35068;
    bool x_35069;
    int32_t x_35070;
    float x_35071;
    
    offset_45521 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45499, sext_i64_i32(iota32_arg_30443))) {
            x_35066 = ((__local
                        bool *) red_arr_mem_45515)[sext_i32_i64(local_tid_45499 +
                                                   offset_45521)];
            x_35067 = ((__local
                        int32_t *) red_arr_mem_45517)[sext_i32_i64(local_tid_45499 +
                                                      offset_45521)];
            x_35068 = ((__local
                        float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45499 +
                                                    offset_45521)];
        }
    }
    offset_45521 = 1;
    while (slt32(offset_45521, wave_sizze_45501)) {
        if (slt32(local_tid_45499 + offset_45521,
                  sext_i64_i32(iota32_arg_30443)) && ((local_tid_45499 -
                                                       squot32(local_tid_45499,
                                                               wave_sizze_45501) *
                                                       wave_sizze_45501) & (2 *
                                                                            offset_45521 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_35069 = ((volatile __local
                            bool *) red_arr_mem_45515)[sext_i32_i64(local_tid_45499 +
                                                       offset_45521)];
                x_35070 = ((volatile __local
                            int32_t *) red_arr_mem_45517)[sext_i32_i64(local_tid_45499 +
                                                          offset_45521)];
                x_35071 = ((volatile __local
                            float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45499 +
                                                        offset_45521)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_35072;
                int32_t defunc_1_op_res_35073;
                
                if (x_35066) {
                    defunc_1_op_res_35072 = x_35066;
                    defunc_1_op_res_35073 = x_35067;
                } else {
                    bool x_35074 = x_35069 && x_35069;
                    bool x_35075 = !x_35069;
                    bool y_35076 = x_35066 && x_35075;
                    bool defunc_1_op_res_f_res_35077 = x_35074 || y_35076;
                    int32_t defunc_1_op_res_f_res_35078;
                    
                    if (x_35069) {
                        defunc_1_op_res_f_res_35078 = x_35070;
                    } else {
                        defunc_1_op_res_f_res_35078 = x_35067;
                    }
                    defunc_1_op_res_35072 = defunc_1_op_res_f_res_35077;
                    defunc_1_op_res_35073 = defunc_1_op_res_f_res_35078;
                }
                
                float defunc_1_op_res_35079 = x_35068 + x_35071;
                
                x_35066 = defunc_1_op_res_35072;
                x_35067 = defunc_1_op_res_35073;
                x_35068 = defunc_1_op_res_35079;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45515)[sext_i32_i64(local_tid_45499)] =
                    x_35066;
                ((volatile __local
                  int32_t *) red_arr_mem_45517)[sext_i32_i64(local_tid_45499)] =
                    x_35067;
                ((volatile __local
                  float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45499)] =
                    x_35068;
            }
        }
        offset_45521 *= 2;
    }
    while (slt32(skip_waves_45522, squot32(sext_i64_i32(iota32_arg_30443) +
                                           wave_sizze_45501 - 1,
                                           wave_sizze_45501))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45521 = skip_waves_45522 * wave_sizze_45501;
        if (slt32(local_tid_45499 + offset_45521,
                  sext_i64_i32(iota32_arg_30443)) && ((local_tid_45499 -
                                                       squot32(local_tid_45499,
                                                               wave_sizze_45501) *
                                                       wave_sizze_45501) == 0 &&
                                                      (squot32(local_tid_45499,
                                                               wave_sizze_45501) &
                                                       (2 * skip_waves_45522 -
                                                        1)) == 0)) {
            // read array element
            {
                x_35069 = ((__local
                            bool *) red_arr_mem_45515)[sext_i32_i64(local_tid_45499 +
                                                       offset_45521)];
                x_35070 = ((__local
                            int32_t *) red_arr_mem_45517)[sext_i32_i64(local_tid_45499 +
                                                          offset_45521)];
                x_35071 = ((__local
                            float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45499 +
                                                        offset_45521)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_35072;
                int32_t defunc_1_op_res_35073;
                
                if (x_35066) {
                    defunc_1_op_res_35072 = x_35066;
                    defunc_1_op_res_35073 = x_35067;
                } else {
                    bool x_35074 = x_35069 && x_35069;
                    bool x_35075 = !x_35069;
                    bool y_35076 = x_35066 && x_35075;
                    bool defunc_1_op_res_f_res_35077 = x_35074 || y_35076;
                    int32_t defunc_1_op_res_f_res_35078;
                    
                    if (x_35069) {
                        defunc_1_op_res_f_res_35078 = x_35070;
                    } else {
                        defunc_1_op_res_f_res_35078 = x_35067;
                    }
                    defunc_1_op_res_35072 = defunc_1_op_res_f_res_35077;
                    defunc_1_op_res_35073 = defunc_1_op_res_f_res_35078;
                }
                
                float defunc_1_op_res_35079 = x_35068 + x_35071;
                
                x_35066 = defunc_1_op_res_35072;
                x_35067 = defunc_1_op_res_35073;
                x_35068 = defunc_1_op_res_35079;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45515)[sext_i32_i64(local_tid_45499)] =
                    x_35066;
                ((__local
                  int32_t *) red_arr_mem_45517)[sext_i32_i64(local_tid_45499)] =
                    x_35067;
                ((__local
                  float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45499)] =
                    x_35068;
            }
        }
        skip_waves_45522 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_35062 = ((__local bool *) red_arr_mem_45515)[0];
    acc0_35063 = ((__local int32_t *) red_arr_mem_45517)[0];
    acc0_35064 = ((__local float *) red_arr_mem_45519)[0];
    
    bool x_35095 = acc0_35062 && acc0_35062;
    int32_t defunc_1_op_res_f_res_35099;
    
    if (acc0_35062) {
        defunc_1_op_res_f_res_35099 = acc0_35063;
    } else {
        defunc_1_op_res_f_res_35099 = -1;
    }
    
    bool cond_35106 = y_35029 == 0;
    float defunc_0_f_res_35107;
    
    if (cond_35106) {
        defunc_0_f_res_35107 = 0.0F;
    } else {
        float i32_res_35108 = sitofp_i32_f32(y_35029);
        float defunc_0_f_res_f_res_35109 = acc0_35064 / i32_res_35108;
        
        defunc_0_f_res_35107 = defunc_0_f_res_f_res_35109;
    }
    
    __local char *mem_44240;
    
    mem_44240 = (__local char *) mem_44240_backing_5;
    
    int64_t gtid_34476 = sext_i32_i64(ltid_pre_45503);
    int32_t phys_tid_34477 = local_tid_45499;
    int32_t index_primexp_41472 = sext_i64_i32(gtid_34476);
    bool cond_35112 = slt32(index_primexp_41472, y_35029);
    bool cond_35113;
    
    if (cond_35112) {
        int32_t i_35114 = add32(x_35023, index_primexp_41472);
        int64_t i_35115 = sext_i32_i64(i_35114);
        bool x_35116 = sle64(0, i_35115);
        bool y_35117 = slt64(i_35115, N_30056);
        bool bounds_check_35118 = x_35116 && y_35117;
        bool index_certs_35119;
        
        if (!bounds_check_35118) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 22) == -1) {
                    global_failure_args[0] = i_35115;
                    global_failure_args[1] = N_30056;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_35120 = ((__global
                                  float *) defunc_4_map_res_mem_43943)[gtid_34469 *
                                                                       N_30056 +
                                                                       i_35115];
        bool isnan_res_35121;
        
        isnan_res_35121 = futrts_isnan32(isnan_arg_35120);
        
        bool cond_t_res_35122 = !isnan_res_35121;
        
        cond_35113 = cond_t_res_35122;
    } else {
        cond_35113 = 0;
    }
    
    float defunc_0_f_res_35123;
    
    if (cond_35113) {
        int32_t i_35124 = add32(x_35023, index_primexp_41472);
        int64_t i_35125 = sext_i32_i64(i_35124);
        bool x_35126 = sle64(0, i_35125);
        bool y_35127 = slt64(i_35125, N_30056);
        bool bounds_check_35128 = x_35126 && y_35127;
        bool index_certs_35129;
        
        if (!bounds_check_35128) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 23) == -1) {
                    global_failure_args[0] = i_35125;
                    global_failure_args[1] = N_30056;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_35130 = ((__global
                                             float *) defunc_4_map_res_mem_43943)[gtid_34469 *
                                                                                  N_30056 +
                                                                                  i_35125];
        
        defunc_0_f_res_35123 = defunc_0_f_res_t_res_35130;
    } else {
        defunc_0_f_res_35123 = INFINITY;
    }
    ((__local float *) mem_44240)[gtid_34476] = defunc_0_f_res_35123;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44250;
    
    mem_44250 = (__local char *) mem_44250_backing_6;
    
    __local char *mem_44252;
    
    mem_44252 = (__local char *) mem_44252_backing_7;
    
    __local char *mem_44254;
    
    mem_44254 = (__local char *) mem_44254_backing_8;
    
    __local char *mem_44256;
    
    mem_44256 = (__local char *) mem_44256_backing_9;
    
    __local char *mem_44258;
    
    mem_44258 = (__local char *) mem_44258_backing_10;
    
    __local char *double_buffer_mem_44483;
    
    double_buffer_mem_44483 = (__local
                               char *) double_buffer_mem_44483_backing_11;
    ((__local float *) double_buffer_mem_44483)[sext_i32_i64(local_tid_45499)] =
        ((__local float *) mem_44240)[sext_i32_i64(local_tid_45499)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44260;
    
    mem_44260 = (__local char *) mem_44260_backing_12;
    for (int32_t i_35132 = 0; i_35132 < iters_30474; i_35132++) {
        int32_t defunc_2_radix_sort_step_arg_35134 = mul32(2, i_35132);
        int32_t defunc_0_get_bit_arg_35135 = add32(1,
                                                   defunc_2_radix_sort_step_arg_35134);
        bool cond_f_res_35136 = defunc_0_get_bit_arg_35135 == 31;
        bool cond_f_res_35137 = defunc_2_radix_sort_step_arg_35134 == 31;
        int64_t gtid_34498 = sext_i32_i64(ltid_pre_45503);
        int32_t phys_tid_34499 = local_tid_45499;
        float x_35155 = ((__local float *) double_buffer_mem_44483)[gtid_34498];
        int32_t i32_arg_35156;
        
        i32_arg_35156 = futrts_to_bits32(x_35155);
        
        int32_t unsign_arg_35157 = ashr32(i32_arg_35156,
                                          defunc_0_get_bit_arg_35135);
        int32_t unsign_arg_35158 = 1 & unsign_arg_35157;
        int32_t unsign_arg_35159 = ashr32(i32_arg_35156, 31);
        int32_t unsign_arg_35160 = 1 & unsign_arg_35159;
        bool cond_35161 = unsign_arg_35160 == 1;
        bool x_35162 = !cond_35161;
        bool y_35163 = cond_f_res_35136 && x_35162;
        bool cond_35164 = cond_35161 || y_35163;
        int32_t defunc_1_get_bit_res_35165;
        
        if (cond_35164) {
            int32_t defunc_1_get_bit_res_t_res_35166 = 1 ^ unsign_arg_35158;
            
            defunc_1_get_bit_res_35165 = defunc_1_get_bit_res_t_res_35166;
        } else {
            defunc_1_get_bit_res_35165 = unsign_arg_35158;
        }
        
        int32_t x_35167 = mul32(2, defunc_1_get_bit_res_35165);
        int32_t unsign_arg_35168 = ashr32(i32_arg_35156,
                                          defunc_2_radix_sort_step_arg_35134);
        int32_t unsign_arg_35169 = 1 & unsign_arg_35168;
        bool y_35170 = cond_f_res_35137 && x_35162;
        bool cond_35171 = cond_35161 || y_35170;
        int32_t defunc_1_get_bit_res_35172;
        
        if (cond_35171) {
            int32_t defunc_1_get_bit_res_t_res_35173 = 1 ^ unsign_arg_35169;
            
            defunc_1_get_bit_res_35172 = defunc_1_get_bit_res_t_res_35173;
        } else {
            defunc_1_get_bit_res_35172 = unsign_arg_35169;
        }
        
        int32_t defunc_0_f_res_35174 = add32(x_35167,
                                             defunc_1_get_bit_res_35172);
        bool cond_35175 = defunc_0_f_res_35174 == 0;
        int64_t defunc_0_f_res_35176 = btoi_bool_i64(cond_35175);
        int64_t defunc_0_f_res_35177;
        int64_t defunc_0_f_res_35178;
        int64_t defunc_0_f_res_35179;
        
        if (cond_35175) {
            defunc_0_f_res_35177 = 0;
            defunc_0_f_res_35178 = 0;
            defunc_0_f_res_35179 = 0;
        } else {
            bool cond_35180 = defunc_0_f_res_35174 == 1;
            int64_t defunc_0_f_res_f_res_35181 = btoi_bool_i64(cond_35180);
            int64_t defunc_0_f_res_f_res_35182;
            int64_t defunc_0_f_res_f_res_35183;
            
            if (cond_35180) {
                defunc_0_f_res_f_res_35182 = 0;
                defunc_0_f_res_f_res_35183 = 0;
            } else {
                bool cond_35184 = defunc_0_f_res_35174 == 2;
                int64_t defunc_0_f_res_f_res_f_res_35185 =
                        btoi_bool_i64(cond_35184);
                bool cond_neg_35186 = !cond_35184;
                int64_t defunc_0_f_res_f_res_f_res_35187 =
                        btoi_bool_i64(cond_neg_35186);
                
                defunc_0_f_res_f_res_35182 = defunc_0_f_res_f_res_f_res_35185;
                defunc_0_f_res_f_res_35183 = defunc_0_f_res_f_res_f_res_35187;
            }
            defunc_0_f_res_35177 = defunc_0_f_res_f_res_35181;
            defunc_0_f_res_35178 = defunc_0_f_res_f_res_35182;
            defunc_0_f_res_35179 = defunc_0_f_res_f_res_35183;
        }
        ((__local int64_t *) mem_44250)[gtid_34498] = defunc_0_f_res_35176;
        ((__local int64_t *) mem_44252)[gtid_34498] = defunc_0_f_res_35177;
        ((__local int64_t *) mem_44254)[gtid_34498] = defunc_0_f_res_35178;
        ((__local int64_t *) mem_44256)[gtid_34498] = defunc_0_f_res_35179;
        ((__local int32_t *) mem_44258)[gtid_34498] = defunc_0_f_res_35174;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t dims_flat_45524;
        
        dims_flat_45524 = iota32_arg_30443;
        
        int64_t x_35143;
        int64_t x_35144;
        int64_t x_35145;
        int64_t x_35146;
        int64_t x_35147;
        int64_t x_35148;
        int64_t x_35149;
        int64_t x_35150;
        int64_t x_45529;
        int64_t x_45530;
        int64_t x_45531;
        int64_t x_45532;
        int64_t x_45533;
        int64_t x_45534;
        int64_t x_45535;
        int64_t x_45536;
        bool ltid_in_bounds_45541;
        
        ltid_in_bounds_45541 = slt64(sext_i32_i64(local_tid_45499),
                                     iota32_arg_30443);
        
        int32_t skip_threads_45542;
        
        // read input for in-block scan
        {
            if (ltid_in_bounds_45541) {
                x_35147 = ((volatile __local
                            int64_t *) mem_44250)[sext_i32_i64(local_tid_45499)];
                x_35148 = ((volatile __local
                            int64_t *) mem_44252)[sext_i32_i64(local_tid_45499)];
                x_35149 = ((volatile __local
                            int64_t *) mem_44254)[sext_i32_i64(local_tid_45499)];
                x_35150 = ((volatile __local
                            int64_t *) mem_44256)[sext_i32_i64(local_tid_45499)];
                if ((local_tid_45499 - squot32(local_tid_45499, 32) * 32) ==
                    0) {
                    x_35143 = x_35147;
                    x_35144 = x_35148;
                    x_35145 = x_35149;
                    x_35146 = x_35150;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45542 = 1;
            while (slt32(skip_threads_45542, 32)) {
                if (sle32(skip_threads_45542, local_tid_45499 -
                          squot32(local_tid_45499, 32) * 32) &&
                    ltid_in_bounds_45541) {
                    // read operands
                    {
                        x_35143 = ((volatile __local
                                    int64_t *) mem_44250)[sext_i32_i64(local_tid_45499) -
                                                          sext_i32_i64(skip_threads_45542)];
                        x_35144 = ((volatile __local
                                    int64_t *) mem_44252)[sext_i32_i64(local_tid_45499) -
                                                          sext_i32_i64(skip_threads_45542)];
                        x_35145 = ((volatile __local
                                    int64_t *) mem_44254)[sext_i32_i64(local_tid_45499) -
                                                          sext_i32_i64(skip_threads_45542)];
                        x_35146 = ((volatile __local
                                    int64_t *) mem_44256)[sext_i32_i64(local_tid_45499) -
                                                          sext_i32_i64(skip_threads_45542)];
                    }
                    // perform operation
                    {
                        bool inactive_45543 =
                             slt64(srem64(sext_i32_i64(local_tid_45499),
                                          iota32_arg_30443),
                                   sext_i32_i64(local_tid_45499) -
                                   sext_i32_i64(local_tid_45499 -
                                   skip_threads_45542));
                        
                        if (inactive_45543) {
                            x_35143 = x_35147;
                            x_35144 = x_35148;
                            x_35145 = x_35149;
                            x_35146 = x_35150;
                        }
                        if (!inactive_45543) {
                            int64_t defunc_1_op_res_35151 = add64(x_35143,
                                                                  x_35147);
                            int64_t defunc_1_op_res_35152 = add64(x_35144,
                                                                  x_35148);
                            int64_t defunc_1_op_res_35153 = add64(x_35145,
                                                                  x_35149);
                            int64_t defunc_1_op_res_35154 = add64(x_35146,
                                                                  x_35150);
                            
                            x_35143 = defunc_1_op_res_35151;
                            x_35144 = defunc_1_op_res_35152;
                            x_35145 = defunc_1_op_res_35153;
                            x_35146 = defunc_1_op_res_35154;
                        }
                    }
                }
                if (sle32(wave_sizze_45501, skip_threads_45542)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45542, local_tid_45499 -
                          squot32(local_tid_45499, 32) * 32) &&
                    ltid_in_bounds_45541) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44250)[sext_i32_i64(local_tid_45499)] =
                            x_35143;
                        x_35147 = x_35143;
                        ((volatile __local
                          int64_t *) mem_44252)[sext_i32_i64(local_tid_45499)] =
                            x_35144;
                        x_35148 = x_35144;
                        ((volatile __local
                          int64_t *) mem_44254)[sext_i32_i64(local_tid_45499)] =
                            x_35145;
                        x_35149 = x_35145;
                        ((volatile __local
                          int64_t *) mem_44256)[sext_i32_i64(local_tid_45499)] =
                            x_35146;
                        x_35150 = x_35146;
                    }
                }
                if (sle32(wave_sizze_45501, skip_threads_45542)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45542 *= 2;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // last thread of block 'i' writes its result to offset 'i'
        {
            if ((local_tid_45499 - squot32(local_tid_45499, 32) * 32) == 31 &&
                ltid_in_bounds_45541) {
                ((volatile __local
                  int64_t *) mem_44250)[sext_i32_i64(squot32(local_tid_45499,
                                                             32))] = x_35143;
                ((volatile __local
                  int64_t *) mem_44252)[sext_i32_i64(squot32(local_tid_45499,
                                                             32))] = x_35144;
                ((volatile __local
                  int64_t *) mem_44254)[sext_i32_i64(squot32(local_tid_45499,
                                                             32))] = x_35145;
                ((volatile __local
                  int64_t *) mem_44256)[sext_i32_i64(squot32(local_tid_45499,
                                                             32))] = x_35146;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
        {
            int32_t skip_threads_45544;
            
            // read input for in-block scan
            {
                if (squot32(local_tid_45499, 32) == 0 && ltid_in_bounds_45541) {
                    x_45533 = ((volatile __local
                                int64_t *) mem_44250)[sext_i32_i64(local_tid_45499)];
                    x_45534 = ((volatile __local
                                int64_t *) mem_44252)[sext_i32_i64(local_tid_45499)];
                    x_45535 = ((volatile __local
                                int64_t *) mem_44254)[sext_i32_i64(local_tid_45499)];
                    x_45536 = ((volatile __local
                                int64_t *) mem_44256)[sext_i32_i64(local_tid_45499)];
                    if ((local_tid_45499 - squot32(local_tid_45499, 32) * 32) ==
                        0) {
                        x_45529 = x_45533;
                        x_45530 = x_45534;
                        x_45531 = x_45535;
                        x_45532 = x_45536;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45544 = 1;
                while (slt32(skip_threads_45544, 32)) {
                    if (sle32(skip_threads_45544, local_tid_45499 -
                              squot32(local_tid_45499, 32) * 32) &&
                        (squot32(local_tid_45499, 32) == 0 &&
                         ltid_in_bounds_45541)) {
                        // read operands
                        {
                            x_45529 = ((volatile __local
                                        int64_t *) mem_44250)[sext_i32_i64(local_tid_45499) -
                                                              sext_i32_i64(skip_threads_45544)];
                            x_45530 = ((volatile __local
                                        int64_t *) mem_44252)[sext_i32_i64(local_tid_45499) -
                                                              sext_i32_i64(skip_threads_45544)];
                            x_45531 = ((volatile __local
                                        int64_t *) mem_44254)[sext_i32_i64(local_tid_45499) -
                                                              sext_i32_i64(skip_threads_45544)];
                            x_45532 = ((volatile __local
                                        int64_t *) mem_44256)[sext_i32_i64(local_tid_45499) -
                                                              sext_i32_i64(skip_threads_45544)];
                        }
                        // perform operation
                        {
                            bool inactive_45545 =
                                 slt64(srem64(sext_i32_i64(local_tid_45499 *
                                              32 + 32 - 1), iota32_arg_30443),
                                       sext_i32_i64(local_tid_45499 * 32 + 32 -
                                       1) - sext_i32_i64((local_tid_45499 -
                                                          skip_threads_45544) *
                                       32 + 32 - 1));
                            
                            if (inactive_45545) {
                                x_45529 = x_45533;
                                x_45530 = x_45534;
                                x_45531 = x_45535;
                                x_45532 = x_45536;
                            }
                            if (!inactive_45545) {
                                int64_t defunc_1_op_res_45537 = add64(x_45529,
                                                                      x_45533);
                                int64_t defunc_1_op_res_45538 = add64(x_45530,
                                                                      x_45534);
                                int64_t defunc_1_op_res_45539 = add64(x_45531,
                                                                      x_45535);
                                int64_t defunc_1_op_res_45540 = add64(x_45532,
                                                                      x_45536);
                                
                                x_45529 = defunc_1_op_res_45537;
                                x_45530 = defunc_1_op_res_45538;
                                x_45531 = defunc_1_op_res_45539;
                                x_45532 = defunc_1_op_res_45540;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45501, skip_threads_45544)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45544, local_tid_45499 -
                              squot32(local_tid_45499, 32) * 32) &&
                        (squot32(local_tid_45499, 32) == 0 &&
                         ltid_in_bounds_45541)) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) mem_44250)[sext_i32_i64(local_tid_45499)] =
                                x_45529;
                            x_45533 = x_45529;
                            ((volatile __local
                              int64_t *) mem_44252)[sext_i32_i64(local_tid_45499)] =
                                x_45530;
                            x_45534 = x_45530;
                            ((volatile __local
                              int64_t *) mem_44254)[sext_i32_i64(local_tid_45499)] =
                                x_45531;
                            x_45535 = x_45531;
                            ((volatile __local
                              int64_t *) mem_44256)[sext_i32_i64(local_tid_45499)] =
                                x_45532;
                            x_45536 = x_45532;
                        }
                    }
                    if (sle32(wave_sizze_45501, skip_threads_45544)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45544 *= 2;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // carry-in for every block except the first
        {
            if (!(squot32(local_tid_45499, 32) == 0 || !ltid_in_bounds_45541)) {
                // read operands
                {
                    x_35147 = x_35143;
                    x_35148 = x_35144;
                    x_35149 = x_35145;
                    x_35150 = x_35146;
                    x_35143 = ((__local
                                int64_t *) mem_44250)[sext_i32_i64(squot32(local_tid_45499,
                                                                           32)) -
                                                      1];
                    x_35144 = ((__local
                                int64_t *) mem_44252)[sext_i32_i64(squot32(local_tid_45499,
                                                                           32)) -
                                                      1];
                    x_35145 = ((__local
                                int64_t *) mem_44254)[sext_i32_i64(squot32(local_tid_45499,
                                                                           32)) -
                                                      1];
                    x_35146 = ((__local
                                int64_t *) mem_44256)[sext_i32_i64(squot32(local_tid_45499,
                                                                           32)) -
                                                      1];
                }
                // perform operation
                {
                    bool inactive_45546 =
                         slt64(srem64(sext_i32_i64(local_tid_45499),
                                      iota32_arg_30443),
                               sext_i32_i64(local_tid_45499) -
                               sext_i32_i64(squot32(local_tid_45499, 32) * 32 -
                               1));
                    
                    if (inactive_45546) {
                        x_35143 = x_35147;
                        x_35144 = x_35148;
                        x_35145 = x_35149;
                        x_35146 = x_35150;
                    }
                    if (!inactive_45546) {
                        int64_t defunc_1_op_res_35151 = add64(x_35143, x_35147);
                        int64_t defunc_1_op_res_35152 = add64(x_35144, x_35148);
                        int64_t defunc_1_op_res_35153 = add64(x_35145, x_35149);
                        int64_t defunc_1_op_res_35154 = add64(x_35146, x_35150);
                        
                        x_35143 = defunc_1_op_res_35151;
                        x_35144 = defunc_1_op_res_35152;
                        x_35145 = defunc_1_op_res_35153;
                        x_35146 = defunc_1_op_res_35154;
                    }
                }
                // write final result
                {
                    ((__local
                      int64_t *) mem_44250)[sext_i32_i64(local_tid_45499)] =
                        x_35143;
                    ((__local
                      int64_t *) mem_44252)[sext_i32_i64(local_tid_45499)] =
                        x_35144;
                    ((__local
                      int64_t *) mem_44254)[sext_i32_i64(local_tid_45499)] =
                        x_35145;
                    ((__local
                      int64_t *) mem_44256)[sext_i32_i64(local_tid_45499)] =
                        x_35146;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // restore correct values for first block
        {
            if (squot32(local_tid_45499, 32) == 0) {
                ((__local int64_t *) mem_44250)[sext_i32_i64(local_tid_45499)] =
                    x_35147;
                ((__local int64_t *) mem_44252)[sext_i32_i64(local_tid_45499)] =
                    x_35148;
                ((__local int64_t *) mem_44254)[sext_i32_i64(local_tid_45499)] =
                    x_35149;
                ((__local int64_t *) mem_44256)[sext_i32_i64(local_tid_45499)] =
                    x_35150;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t last_res_35188 = ((__local int64_t *) mem_44250)[i_30476];
        int64_t last_res_35189 = ((__local int64_t *) mem_44252)[i_30476];
        int64_t last_res_35190 = ((__local int64_t *) mem_44254)[i_30476];
        
        ((__local float *) mem_44260)[sext_i32_i64(local_tid_45499)] = ((__local
                                                                         float *) double_buffer_mem_44483)[sext_i32_i64(local_tid_45499)];
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_34500 = sext_i32_i64(ltid_pre_45503);
        int32_t phys_tid_34501 = local_tid_45499;
        int32_t x_35193 = ((__local int32_t *) mem_44258)[write_i_34500];
        float write_value_35198 = ((__local
                                    float *) double_buffer_mem_44483)[write_i_34500];
        bool match_lit_35199 = 0 == x_35193;
        int64_t defunc_1_f_res_35200;
        
        if (match_lit_35199) {
            int64_t x_35194 = ((__local int64_t *) mem_44250)[write_i_34500];
            int64_t case_res_35201 = sub64(x_35194, 1);
            
            defunc_1_f_res_35200 = case_res_35201;
        } else {
            int64_t x_35195 = ((__local int64_t *) mem_44252)[write_i_34500];
            int64_t x_35196 = ((__local int64_t *) mem_44254)[write_i_34500];
            int64_t x_35197 = ((__local int64_t *) mem_44256)[write_i_34500];
            bool match_lit_35202 = 1 == x_35193;
            int64_t x_35203;
            
            if (match_lit_35202) {
                int64_t x_35204 = add64(last_res_35188, x_35195);
                int64_t case_res_35205 = sub64(x_35204, 1);
                
                x_35203 = case_res_35205;
            } else {
                bool match_lit_35206 = 2 == x_35193;
                int64_t x_35207;
                
                if (match_lit_35206) {
                    int64_t x_35208 = add64(last_res_35188, last_res_35189);
                    int64_t x_35209 = add64(x_35196, x_35208);
                    int64_t case_res_35210 = sub64(x_35209, 1);
                    
                    x_35207 = case_res_35210;
                } else {
                    int64_t x_35211 = add64(last_res_35188, last_res_35189);
                    int64_t x_35212 = add64(last_res_35190, x_35211);
                    int64_t x_35213 = add64(x_35197, x_35212);
                    int64_t defunc_1_f_res_res_35214 = sub64(x_35213, 1);
                    
                    x_35207 = defunc_1_f_res_res_35214;
                }
                x_35203 = x_35207;
            }
            defunc_1_f_res_35200 = x_35203;
        }
        if (sle64(0, defunc_1_f_res_35200) && slt64(defunc_1_f_res_35200,
                                                    iota32_arg_30443)) {
            ((__local float *) mem_44260)[defunc_1_f_res_35200] =
                write_value_35198;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        ((__local
          float *) double_buffer_mem_44483)[sext_i32_i64(local_tid_45499)] =
            ((__local float *) mem_44260)[sext_i32_i64(local_tid_45499)];
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    int32_t i_35215 = sdiv32(y_35029, 2);
    int32_t j_35216 = sub32(i_35215, 1);
    bool cond_35217 = x_35022 == x_35023;
    float defunc_0_f_res_35218;
    
    if (cond_35217) {
        defunc_0_f_res_35218 = 0.0F;
    } else {
        int32_t x_35219 = smod32(y_35029, 2);
        bool cond_35220 = x_35219 == 0;
        float defunc_0_f_res_f_res_35221;
        
        if (cond_35220) {
            int64_t j_35222 = sext_i32_i64(j_35216);
            bool x_35223 = sle64(0, j_35222);
            bool y_35224 = slt64(j_35222, iota32_arg_30443);
            bool bounds_check_35225 = x_35223 && y_35224;
            bool index_certs_35226;
            
            if (!bounds_check_35225) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 24) ==
                        -1) {
                        global_failure_args[0] = j_35222;
                        global_failure_args[1] = iota32_arg_30443;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float x_35227 = ((__local
                              float *) double_buffer_mem_44483)[j_35222];
            int64_t i_35228 = sext_i32_i64(i_35215);
            bool x_35229 = sle64(0, i_35228);
            bool y_35230 = slt64(i_35228, iota32_arg_30443);
            bool bounds_check_35231 = x_35229 && y_35230;
            bool index_certs_35232;
            
            if (!bounds_check_35231) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 25) ==
                        -1) {
                        global_failure_args[0] = i_35228;
                        global_failure_args[1] = iota32_arg_30443;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float y_35233 = ((__local
                              float *) double_buffer_mem_44483)[i_35228];
            float x_35234 = x_35227 + y_35233;
            float defunc_0_f_res_f_res_t_res_35235 = x_35234 / 2.0F;
            
            defunc_0_f_res_f_res_35221 = defunc_0_f_res_f_res_t_res_35235;
        } else {
            int64_t i_35236 = sext_i32_i64(i_35215);
            bool x_35237 = sle64(0, i_35236);
            bool y_35238 = slt64(i_35236, iota32_arg_30443);
            bool bounds_check_35239 = x_35237 && y_35238;
            bool index_certs_35240;
            
            if (!bounds_check_35239) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 26) ==
                        -1) {
                        global_failure_args[0] = i_35236;
                        global_failure_args[1] = iota32_arg_30443;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_35241 = ((__local
                                                       float *) double_buffer_mem_44483)[i_35236];
            
            defunc_0_f_res_f_res_35221 = defunc_0_f_res_f_res_f_res_35241;
        }
        defunc_0_f_res_35218 = defunc_0_f_res_f_res_35221;
    }
    
    bool cond_35242 = !x_35095;
    int32_t fst_breakzq_35243;
    
    if (cond_35242) {
        fst_breakzq_35243 = -1;
    } else {
        bool cond_35244 = slt32(defunc_1_op_res_f_res_35099, y_35029);
        int32_t adjustValInds_res_35245;
        
        if (cond_35244) {
            int32_t i_35246 = add32(x_35023, defunc_1_op_res_f_res_35099);
            int64_t i_35247 = sext_i32_i64(i_35246);
            int32_t x_35248 = ((__global
                                int32_t *) defunc_4_map_res_mem_43944)[gtid_34469 *
                                                                       N_30056 +
                                                                       i_35247];
            int32_t adjustValInds_res_t_res_35249 = sub32(x_35248, n_30061);
            
            adjustValInds_res_35245 = adjustValInds_res_t_res_35249;
        } else {
            adjustValInds_res_35245 = -1;
        }
        fst_breakzq_35243 = adjustValInds_res_35245;
    }
    
    bool cond_35250 = sle32(x_35023, 5);
    bool cond_f_res_35251 = sle32(y_35029, 5);
    bool x_35252 = !cond_35250;
    bool y_35253 = cond_f_res_35251 && x_35252;
    bool cond_35254 = cond_35250 || y_35253;
    int32_t fst_breakzq_35255;
    
    if (cond_35254) {
        fst_breakzq_35255 = -2;
    } else {
        fst_breakzq_35255 = fst_breakzq_35243;
    }
    
    __local char *mem_44270;
    
    mem_44270 = (__local char *) mem_44270_backing_13;
    ((__local float *) mem_44270)[sext_i32_i64(local_tid_45499)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_34502 = sext_i32_i64(ltid_pre_45503);
    int32_t phys_tid_34503 = local_tid_45499;
    int32_t index_primexp_41475 = sext_i64_i32(write_i_34502);
    float write_value_35259 = ((__local float *) mem_44237)[write_i_34502];
    bool cond_35260 = slt32(index_primexp_41475, y_35029);
    int32_t defunc_0_f_res_35261;
    
    if (cond_35260) {
        int32_t i_35262 = add32(x_35023, index_primexp_41475);
        int64_t i_35263 = sext_i32_i64(i_35262);
        int32_t x_35264 = ((__global
                            int32_t *) defunc_4_map_res_mem_43944)[gtid_34469 *
                                                                   N_30056 +
                                                                   i_35263];
        int32_t defunc_0_f_res_t_res_35265 = sub32(x_35264, n_30061);
        
        defunc_0_f_res_35261 = defunc_0_f_res_t_res_35265;
    } else {
        defunc_0_f_res_35261 = -1;
    }
    
    int64_t defunc_0_f_res_35266 = sext_i32_i64(defunc_0_f_res_35261);
    
    if (sle64(0, defunc_0_f_res_35266) && slt64(defunc_0_f_res_35266,
                                                iota32_arg_30443)) {
        ((__local float *) mem_44270)[defunc_0_f_res_35266] = write_value_35259;
    }
    
  error_6:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44274)[gtid_34469 * iota32_arg_30443 +
                                   sext_i32_i64(local_tid_45499)] = ((__local
                                                                      float *) mem_44270)[sext_i32_i64(local_tid_45499)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44277)[gtid_34469 * iota32_arg_30443 +
                                   sext_i32_i64(local_tid_45499)] = ((__local
                                                                      float *) mem_44237)[sext_i32_i64(local_tid_45499)];
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45499 == 0) {
        ((__global int32_t *) mem_44279)[gtid_34469] = fst_breakzq_35255;
    }
    if (local_tid_45499 == 0) {
        ((__global float *) mem_44281)[gtid_34469] = defunc_0_f_res_35107;
    }
    if (local_tid_45499 == 0) {
        ((__global float *) mem_44283)[gtid_34469] = defunc_0_f_res_35218;
    }
    
  error_7:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_35388(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44341_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44339_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_44337_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_44335_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_44333_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_44331_backing_aligned_5,
                                                    int64_t m_30057,
                                                    int64_t iota32_arg_30443,
                                                    int64_t i_30476,
                                                    int32_t defunc_2_radix_sort_step_arg_36294,
                                                    int32_t defunc_0_get_bit_arg_36295,
                                                    unsigned char cond_f_res_36296,
                                                    unsigned char cond_f_res_36297,
                                                    __global
                                                    unsigned char *mem_param_44322,
                                                    __global
                                                    unsigned char *mem_44327,
                                                    __global
                                                    unsigned char *mem_44345)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44341_backing_5 = (__local volatile
                                                           char *) mem_44341_backing_aligned_0;
    __local volatile char *restrict mem_44339_backing_4 = (__local volatile
                                                           char *) mem_44339_backing_aligned_1;
    __local volatile char *restrict mem_44337_backing_3 = (__local volatile
                                                           char *) mem_44337_backing_aligned_2;
    __local volatile char *restrict mem_44335_backing_2 = (__local volatile
                                                           char *) mem_44335_backing_aligned_3;
    __local volatile char *restrict mem_44333_backing_1 = (__local volatile
                                                           char *) mem_44333_backing_aligned_4;
    __local volatile char *restrict mem_44331_backing_0 = (__local volatile
                                                           char *) mem_44331_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45726;
    int32_t local_tid_45727;
    int64_t group_sizze_45730;
    int32_t wave_sizze_45729;
    int32_t group_tid_45728;
    
    global_tid_45726 = get_global_id(0);
    local_tid_45727 = get_local_id(0);
    group_sizze_45730 = get_local_size(0);
    wave_sizze_45729 = LOCKSTEP_WIDTH;
    group_tid_45728 = get_group_id(0);
    
    int32_t phys_tid_35388;
    
    phys_tid_35388 = group_tid_45728;
    
    int32_t ltid_pre_45731;
    
    ltid_pre_45731 = local_tid_45727;
    
    int64_t gtid_35381;
    
    gtid_35381 = sext_i32_i64(group_tid_45728);
    
    __local char *mem_44331;
    
    mem_44331 = (__local char *) mem_44331_backing_0;
    
    __local char *mem_44333;
    
    mem_44333 = (__local char *) mem_44333_backing_1;
    
    __local char *mem_44335;
    
    mem_44335 = (__local char *) mem_44335_backing_2;
    
    __local char *mem_44337;
    
    mem_44337 = (__local char *) mem_44337_backing_3;
    
    __local char *mem_44339;
    
    mem_44339 = (__local char *) mem_44339_backing_4;
    
    int64_t gtid_35384 = sext_i32_i64(ltid_pre_45731);
    int32_t phys_tid_35385 = local_tid_45727;
    float x_36327 = ((__global float *) mem_param_44322)[gtid_35381 *
                                                         iota32_arg_30443 +
                                                         gtid_35384];
    int32_t i32_arg_36328;
    
    i32_arg_36328 = futrts_to_bits32(x_36327);
    
    int32_t unsign_arg_36329 = ashr32(i32_arg_36328,
                                      defunc_0_get_bit_arg_36295);
    int32_t unsign_arg_36330 = 1 & unsign_arg_36329;
    int32_t unsign_arg_36331 = ashr32(i32_arg_36328, 31);
    int32_t unsign_arg_36332 = 1 & unsign_arg_36331;
    bool cond_36333 = unsign_arg_36332 == 1;
    bool x_36334 = !cond_36333;
    bool y_36335 = cond_f_res_36296 && x_36334;
    bool cond_36336 = cond_36333 || y_36335;
    int32_t defunc_1_get_bit_res_36337;
    
    if (cond_36336) {
        int32_t defunc_1_get_bit_res_t_res_36338 = 1 ^ unsign_arg_36330;
        
        defunc_1_get_bit_res_36337 = defunc_1_get_bit_res_t_res_36338;
    } else {
        defunc_1_get_bit_res_36337 = unsign_arg_36330;
    }
    
    int32_t x_36339 = mul32(2, defunc_1_get_bit_res_36337);
    int32_t unsign_arg_36340 = ashr32(i32_arg_36328,
                                      defunc_2_radix_sort_step_arg_36294);
    int32_t unsign_arg_36341 = 1 & unsign_arg_36340;
    bool y_36342 = cond_f_res_36297 && x_36334;
    bool cond_36343 = cond_36333 || y_36342;
    int32_t defunc_1_get_bit_res_36344;
    
    if (cond_36343) {
        int32_t defunc_1_get_bit_res_t_res_36345 = 1 ^ unsign_arg_36341;
        
        defunc_1_get_bit_res_36344 = defunc_1_get_bit_res_t_res_36345;
    } else {
        defunc_1_get_bit_res_36344 = unsign_arg_36341;
    }
    
    int32_t defunc_0_f_res_36346 = add32(x_36339, defunc_1_get_bit_res_36344);
    bool cond_36347 = defunc_0_f_res_36346 == 0;
    int64_t defunc_0_f_res_36348 = btoi_bool_i64(cond_36347);
    int64_t defunc_0_f_res_36349;
    int64_t defunc_0_f_res_36350;
    int64_t defunc_0_f_res_36351;
    
    if (cond_36347) {
        defunc_0_f_res_36349 = 0;
        defunc_0_f_res_36350 = 0;
        defunc_0_f_res_36351 = 0;
    } else {
        bool cond_36352 = defunc_0_f_res_36346 == 1;
        int64_t defunc_0_f_res_f_res_36353 = btoi_bool_i64(cond_36352);
        int64_t defunc_0_f_res_f_res_36354;
        int64_t defunc_0_f_res_f_res_36355;
        
        if (cond_36352) {
            defunc_0_f_res_f_res_36354 = 0;
            defunc_0_f_res_f_res_36355 = 0;
        } else {
            bool cond_36356 = defunc_0_f_res_36346 == 2;
            int64_t defunc_0_f_res_f_res_f_res_36357 =
                    btoi_bool_i64(cond_36356);
            bool cond_neg_36358 = !cond_36356;
            int64_t defunc_0_f_res_f_res_f_res_36359 =
                    btoi_bool_i64(cond_neg_36358);
            
            defunc_0_f_res_f_res_36354 = defunc_0_f_res_f_res_f_res_36357;
            defunc_0_f_res_f_res_36355 = defunc_0_f_res_f_res_f_res_36359;
        }
        defunc_0_f_res_36349 = defunc_0_f_res_f_res_36353;
        defunc_0_f_res_36350 = defunc_0_f_res_f_res_36354;
        defunc_0_f_res_36351 = defunc_0_f_res_f_res_36355;
    }
    ((__local int64_t *) mem_44331)[gtid_35384] = defunc_0_f_res_36348;
    ((__local int64_t *) mem_44333)[gtid_35384] = defunc_0_f_res_36349;
    ((__local int64_t *) mem_44335)[gtid_35384] = defunc_0_f_res_36350;
    ((__local int64_t *) mem_44337)[gtid_35384] = defunc_0_f_res_36351;
    ((__local int32_t *) mem_44339)[gtid_35384] = defunc_0_f_res_36346;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45732;
    
    dims_flat_45732 = iota32_arg_30443;
    
    int64_t x_36315;
    int64_t x_36316;
    int64_t x_36317;
    int64_t x_36318;
    int64_t x_36319;
    int64_t x_36320;
    int64_t x_36321;
    int64_t x_36322;
    int64_t x_45737;
    int64_t x_45738;
    int64_t x_45739;
    int64_t x_45740;
    int64_t x_45741;
    int64_t x_45742;
    int64_t x_45743;
    int64_t x_45744;
    bool ltid_in_bounds_45749;
    
    ltid_in_bounds_45749 = slt64(sext_i32_i64(local_tid_45727),
                                 iota32_arg_30443);
    
    int32_t skip_threads_45750;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45749) {
            x_36319 = ((volatile __local
                        int64_t *) mem_44331)[sext_i32_i64(local_tid_45727)];
            x_36320 = ((volatile __local
                        int64_t *) mem_44333)[sext_i32_i64(local_tid_45727)];
            x_36321 = ((volatile __local
                        int64_t *) mem_44335)[sext_i32_i64(local_tid_45727)];
            x_36322 = ((volatile __local
                        int64_t *) mem_44337)[sext_i32_i64(local_tid_45727)];
            if ((local_tid_45727 - squot32(local_tid_45727, 32) * 32) == 0) {
                x_36315 = x_36319;
                x_36316 = x_36320;
                x_36317 = x_36321;
                x_36318 = x_36322;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45750 = 1;
        while (slt32(skip_threads_45750, 32)) {
            if (sle32(skip_threads_45750, local_tid_45727 -
                      squot32(local_tid_45727, 32) * 32) &&
                ltid_in_bounds_45749) {
                // read operands
                {
                    x_36315 = ((volatile __local
                                int64_t *) mem_44331)[sext_i32_i64(local_tid_45727) -
                                                      sext_i32_i64(skip_threads_45750)];
                    x_36316 = ((volatile __local
                                int64_t *) mem_44333)[sext_i32_i64(local_tid_45727) -
                                                      sext_i32_i64(skip_threads_45750)];
                    x_36317 = ((volatile __local
                                int64_t *) mem_44335)[sext_i32_i64(local_tid_45727) -
                                                      sext_i32_i64(skip_threads_45750)];
                    x_36318 = ((volatile __local
                                int64_t *) mem_44337)[sext_i32_i64(local_tid_45727) -
                                                      sext_i32_i64(skip_threads_45750)];
                }
                // perform operation
                {
                    bool inactive_45751 =
                         slt64(srem64(sext_i32_i64(local_tid_45727),
                                      iota32_arg_30443),
                               sext_i32_i64(local_tid_45727) -
                               sext_i32_i64(local_tid_45727 -
                               skip_threads_45750));
                    
                    if (inactive_45751) {
                        x_36315 = x_36319;
                        x_36316 = x_36320;
                        x_36317 = x_36321;
                        x_36318 = x_36322;
                    }
                    if (!inactive_45751) {
                        int64_t defunc_1_op_res_36323 = add64(x_36315, x_36319);
                        int64_t defunc_1_op_res_36324 = add64(x_36316, x_36320);
                        int64_t defunc_1_op_res_36325 = add64(x_36317, x_36321);
                        int64_t defunc_1_op_res_36326 = add64(x_36318, x_36322);
                        
                        x_36315 = defunc_1_op_res_36323;
                        x_36316 = defunc_1_op_res_36324;
                        x_36317 = defunc_1_op_res_36325;
                        x_36318 = defunc_1_op_res_36326;
                    }
                }
            }
            if (sle32(wave_sizze_45729, skip_threads_45750)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45750, local_tid_45727 -
                      squot32(local_tid_45727, 32) * 32) &&
                ltid_in_bounds_45749) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44331)[sext_i32_i64(local_tid_45727)] =
                        x_36315;
                    x_36319 = x_36315;
                    ((volatile __local
                      int64_t *) mem_44333)[sext_i32_i64(local_tid_45727)] =
                        x_36316;
                    x_36320 = x_36316;
                    ((volatile __local
                      int64_t *) mem_44335)[sext_i32_i64(local_tid_45727)] =
                        x_36317;
                    x_36321 = x_36317;
                    ((volatile __local
                      int64_t *) mem_44337)[sext_i32_i64(local_tid_45727)] =
                        x_36318;
                    x_36322 = x_36318;
                }
            }
            if (sle32(wave_sizze_45729, skip_threads_45750)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45750 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45727 - squot32(local_tid_45727, 32) * 32) == 31 &&
            ltid_in_bounds_45749) {
            ((volatile __local
              int64_t *) mem_44331)[sext_i32_i64(squot32(local_tid_45727,
                                                         32))] = x_36315;
            ((volatile __local
              int64_t *) mem_44333)[sext_i32_i64(squot32(local_tid_45727,
                                                         32))] = x_36316;
            ((volatile __local
              int64_t *) mem_44335)[sext_i32_i64(squot32(local_tid_45727,
                                                         32))] = x_36317;
            ((volatile __local
              int64_t *) mem_44337)[sext_i32_i64(squot32(local_tid_45727,
                                                         32))] = x_36318;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45752;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45727, 32) == 0 && ltid_in_bounds_45749) {
                x_45741 = ((volatile __local
                            int64_t *) mem_44331)[sext_i32_i64(local_tid_45727)];
                x_45742 = ((volatile __local
                            int64_t *) mem_44333)[sext_i32_i64(local_tid_45727)];
                x_45743 = ((volatile __local
                            int64_t *) mem_44335)[sext_i32_i64(local_tid_45727)];
                x_45744 = ((volatile __local
                            int64_t *) mem_44337)[sext_i32_i64(local_tid_45727)];
                if ((local_tid_45727 - squot32(local_tid_45727, 32) * 32) ==
                    0) {
                    x_45737 = x_45741;
                    x_45738 = x_45742;
                    x_45739 = x_45743;
                    x_45740 = x_45744;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45752 = 1;
            while (slt32(skip_threads_45752, 32)) {
                if (sle32(skip_threads_45752, local_tid_45727 -
                          squot32(local_tid_45727, 32) * 32) &&
                    (squot32(local_tid_45727, 32) == 0 &&
                     ltid_in_bounds_45749)) {
                    // read operands
                    {
                        x_45737 = ((volatile __local
                                    int64_t *) mem_44331)[sext_i32_i64(local_tid_45727) -
                                                          sext_i32_i64(skip_threads_45752)];
                        x_45738 = ((volatile __local
                                    int64_t *) mem_44333)[sext_i32_i64(local_tid_45727) -
                                                          sext_i32_i64(skip_threads_45752)];
                        x_45739 = ((volatile __local
                                    int64_t *) mem_44335)[sext_i32_i64(local_tid_45727) -
                                                          sext_i32_i64(skip_threads_45752)];
                        x_45740 = ((volatile __local
                                    int64_t *) mem_44337)[sext_i32_i64(local_tid_45727) -
                                                          sext_i32_i64(skip_threads_45752)];
                    }
                    // perform operation
                    {
                        bool inactive_45753 =
                             slt64(srem64(sext_i32_i64(local_tid_45727 * 32 +
                                          32 - 1), iota32_arg_30443),
                                   sext_i32_i64(local_tid_45727 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45727 -
                                                 skip_threads_45752) * 32 + 32 -
                                   1));
                        
                        if (inactive_45753) {
                            x_45737 = x_45741;
                            x_45738 = x_45742;
                            x_45739 = x_45743;
                            x_45740 = x_45744;
                        }
                        if (!inactive_45753) {
                            int64_t defunc_1_op_res_45745 = add64(x_45737,
                                                                  x_45741);
                            int64_t defunc_1_op_res_45746 = add64(x_45738,
                                                                  x_45742);
                            int64_t defunc_1_op_res_45747 = add64(x_45739,
                                                                  x_45743);
                            int64_t defunc_1_op_res_45748 = add64(x_45740,
                                                                  x_45744);
                            
                            x_45737 = defunc_1_op_res_45745;
                            x_45738 = defunc_1_op_res_45746;
                            x_45739 = defunc_1_op_res_45747;
                            x_45740 = defunc_1_op_res_45748;
                        }
                    }
                }
                if (sle32(wave_sizze_45729, skip_threads_45752)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45752, local_tid_45727 -
                          squot32(local_tid_45727, 32) * 32) &&
                    (squot32(local_tid_45727, 32) == 0 &&
                     ltid_in_bounds_45749)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44331)[sext_i32_i64(local_tid_45727)] =
                            x_45737;
                        x_45741 = x_45737;
                        ((volatile __local
                          int64_t *) mem_44333)[sext_i32_i64(local_tid_45727)] =
                            x_45738;
                        x_45742 = x_45738;
                        ((volatile __local
                          int64_t *) mem_44335)[sext_i32_i64(local_tid_45727)] =
                            x_45739;
                        x_45743 = x_45739;
                        ((volatile __local
                          int64_t *) mem_44337)[sext_i32_i64(local_tid_45727)] =
                            x_45740;
                        x_45744 = x_45740;
                    }
                }
                if (sle32(wave_sizze_45729, skip_threads_45752)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45752 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45727, 32) == 0 || !ltid_in_bounds_45749)) {
            // read operands
            {
                x_36319 = x_36315;
                x_36320 = x_36316;
                x_36321 = x_36317;
                x_36322 = x_36318;
                x_36315 = ((__local
                            int64_t *) mem_44331)[sext_i32_i64(squot32(local_tid_45727,
                                                                       32)) -
                                                  1];
                x_36316 = ((__local
                            int64_t *) mem_44333)[sext_i32_i64(squot32(local_tid_45727,
                                                                       32)) -
                                                  1];
                x_36317 = ((__local
                            int64_t *) mem_44335)[sext_i32_i64(squot32(local_tid_45727,
                                                                       32)) -
                                                  1];
                x_36318 = ((__local
                            int64_t *) mem_44337)[sext_i32_i64(squot32(local_tid_45727,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45754 =
                     slt64(srem64(sext_i32_i64(local_tid_45727),
                                  iota32_arg_30443),
                           sext_i32_i64(local_tid_45727) -
                           sext_i32_i64(squot32(local_tid_45727, 32) * 32 - 1));
                
                if (inactive_45754) {
                    x_36315 = x_36319;
                    x_36316 = x_36320;
                    x_36317 = x_36321;
                    x_36318 = x_36322;
                }
                if (!inactive_45754) {
                    int64_t defunc_1_op_res_36323 = add64(x_36315, x_36319);
                    int64_t defunc_1_op_res_36324 = add64(x_36316, x_36320);
                    int64_t defunc_1_op_res_36325 = add64(x_36317, x_36321);
                    int64_t defunc_1_op_res_36326 = add64(x_36318, x_36322);
                    
                    x_36315 = defunc_1_op_res_36323;
                    x_36316 = defunc_1_op_res_36324;
                    x_36317 = defunc_1_op_res_36325;
                    x_36318 = defunc_1_op_res_36326;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44331)[sext_i32_i64(local_tid_45727)] =
                    x_36315;
                ((__local int64_t *) mem_44333)[sext_i32_i64(local_tid_45727)] =
                    x_36316;
                ((__local int64_t *) mem_44335)[sext_i32_i64(local_tid_45727)] =
                    x_36317;
                ((__local int64_t *) mem_44337)[sext_i32_i64(local_tid_45727)] =
                    x_36318;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45727, 32) == 0) {
            ((__local int64_t *) mem_44331)[sext_i32_i64(local_tid_45727)] =
                x_36319;
            ((__local int64_t *) mem_44333)[sext_i32_i64(local_tid_45727)] =
                x_36320;
            ((__local int64_t *) mem_44335)[sext_i32_i64(local_tid_45727)] =
                x_36321;
            ((__local int64_t *) mem_44337)[sext_i32_i64(local_tid_45727)] =
                x_36322;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_36360 = ((__local int64_t *) mem_44331)[i_30476];
    int64_t last_res_36361 = ((__local int64_t *) mem_44333)[i_30476];
    int64_t last_res_36362 = ((__local int64_t *) mem_44335)[i_30476];
    __local char *mem_44341;
    
    mem_44341 = (__local char *) mem_44341_backing_5;
    ((__local float *) mem_44341)[sext_i32_i64(local_tid_45727)] = ((__global
                                                                     float *) mem_44327)[gtid_35381 +
                                                                                         sext_i32_i64(local_tid_45727) *
                                                                                         m_30057];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35386 = sext_i32_i64(ltid_pre_45731);
    int32_t phys_tid_35387 = local_tid_45727;
    int32_t x_36365 = ((__local int32_t *) mem_44339)[write_i_35386];
    float write_value_36370 = ((__global float *) mem_param_44322)[gtid_35381 *
                                                                   iota32_arg_30443 +
                                                                   write_i_35386];
    bool match_lit_36371 = 0 == x_36365;
    int64_t defunc_1_f_res_36372;
    
    if (match_lit_36371) {
        int64_t x_36366 = ((__local int64_t *) mem_44331)[write_i_35386];
        int64_t case_res_36373 = sub64(x_36366, 1);
        
        defunc_1_f_res_36372 = case_res_36373;
    } else {
        int64_t x_36367 = ((__local int64_t *) mem_44333)[write_i_35386];
        int64_t x_36368 = ((__local int64_t *) mem_44335)[write_i_35386];
        int64_t x_36369 = ((__local int64_t *) mem_44337)[write_i_35386];
        bool match_lit_36374 = 1 == x_36365;
        int64_t x_36375;
        
        if (match_lit_36374) {
            int64_t x_36376 = add64(last_res_36360, x_36367);
            int64_t case_res_36377 = sub64(x_36376, 1);
            
            x_36375 = case_res_36377;
        } else {
            bool match_lit_36378 = 2 == x_36365;
            int64_t x_36379;
            
            if (match_lit_36378) {
                int64_t x_36380 = add64(last_res_36360, last_res_36361);
                int64_t x_36381 = add64(x_36368, x_36380);
                int64_t case_res_36382 = sub64(x_36381, 1);
                
                x_36379 = case_res_36382;
            } else {
                int64_t x_36383 = add64(last_res_36360, last_res_36361);
                int64_t x_36384 = add64(last_res_36362, x_36383);
                int64_t x_36385 = add64(x_36369, x_36384);
                int64_t defunc_1_f_res_res_36386 = sub64(x_36385, 1);
                
                x_36379 = defunc_1_f_res_res_36386;
            }
            x_36375 = x_36379;
        }
        defunc_1_f_res_36372 = x_36375;
    }
    if (sle64(0, defunc_1_f_res_36372) && slt64(defunc_1_f_res_36372,
                                                iota32_arg_30443)) {
        ((__local float *) mem_44341)[defunc_1_f_res_36372] = write_value_36370;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44345)[gtid_35381 * iota32_arg_30443 +
                                   sext_i32_i64(local_tid_45727)] = ((__local
                                                                      float *) mem_44341)[sext_i32_i64(local_tid_45727)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41566(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43507_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43504_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43485_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43482_backing_aligned_3,
                                                    int64_t m_30057,
                                                    int64_t N_30058,
                                                    int64_t i32_res_30070,
                                                    int64_t i32_res_30076,
                                                    int64_t num_groups_x_41562,
                                                    int64_t num_whole_tiles_41582,
                                                    int64_t residual_input_41744,
                                                    unsigned char cond_41745,
                                                    __global
                                                    unsigned char *images_mem_43378,
                                                    __global
                                                    unsigned char *mem_43390,
                                                    __global
                                                    unsigned char *mem_43394,
                                                    __global
                                                    unsigned char *mem_43523)
{
    #define tile_sizze_41560 (mainDetailedzitile_sizze_41559)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43507_backing_7 = (__local volatile
                                                           char *) mem_43507_backing_aligned_0;
    __local volatile char *restrict mem_43504_backing_6 = (__local volatile
                                                           char *) mem_43504_backing_aligned_1;
    __local volatile char *restrict mem_43485_backing_1 = (__local volatile
                                                           char *) mem_43485_backing_aligned_2;
    __local volatile char *restrict mem_43482_backing_0 = (__local volatile
                                                           char *) mem_43482_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44686;
    int32_t local_tid_44687;
    int64_t group_sizze_44690;
    int32_t wave_sizze_44689;
    int32_t group_tid_44688;
    
    global_tid_44686 = get_global_id(0);
    local_tid_44687 = get_local_id(0);
    group_sizze_44690 = get_local_size(0);
    wave_sizze_44689 = LOCKSTEP_WIDTH;
    group_tid_44688 = get_group_id(0);
    
    int32_t gid_flat_41566;
    
    gid_flat_41566 = group_tid_44688;
    
    int32_t ltid_pre_44691;
    
    ltid_pre_44691 = squot32(local_tid_44687, sext_i64_i32(tile_sizze_41560));
    
    int32_t ltid_pre_44692;
    
    ltid_pre_44692 = local_tid_44687 - squot32(local_tid_44687,
                                               sext_i64_i32(tile_sizze_41560)) *
        sext_i64_i32(tile_sizze_41560);
    
    int64_t gtid_32135;
    
    gtid_32135 = squot64(sext_i32_i64(group_tid_44688), num_groups_x_41562 *
                         num_groups_x_41562);
    
    int64_t gid_x_41557;
    
    gid_x_41557 = squot64(sext_i32_i64(group_tid_44688) -
                          squot64(sext_i32_i64(group_tid_44688),
                                  num_groups_x_41562 * num_groups_x_41562) *
                          (num_groups_x_41562 * num_groups_x_41562),
                          num_groups_x_41562);
    
    int64_t gid_y_41558;
    
    gid_y_41558 = sext_i32_i64(group_tid_44688) -
        squot64(sext_i32_i64(group_tid_44688), num_groups_x_41562 *
                num_groups_x_41562) * (num_groups_x_41562 *
                                       num_groups_x_41562) -
        squot64(sext_i32_i64(group_tid_44688) -
                squot64(sext_i32_i64(group_tid_44688), num_groups_x_41562 *
                        num_groups_x_41562) * (num_groups_x_41562 *
                                               num_groups_x_41562),
                num_groups_x_41562) * num_groups_x_41562;
    
    float mem_43467[1];
    int64_t ltid_x_41583 = sext_i32_i64(ltid_pre_44691);
    int64_t ltid_y_41584 = sext_i32_i64(ltid_pre_44692);
    int32_t ltid_flat_41585 = local_tid_44687;
    
    if (slt64(ltid_x_41583, tile_sizze_41560) && slt64(ltid_y_41584,
                                                       tile_sizze_41560)) {
        mem_43467[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41688 = gid_x_41557 * tile_sizze_41560;
    int64_t binop_x_41690 = gid_y_41558 * tile_sizze_41560;
    __local char *mem_43482;
    
    mem_43482 = (__local char *) mem_43482_backing_0;
    
    __local char *mem_43485;
    
    mem_43485 = (__local char *) mem_43485_backing_1;
    
    float accs_mem_43500[1];
    float mem_param_43475[1];
    
    for (int32_t i_2 = 0; i_2 < 1; i_2++)
        mem_param_43475[i_2] = mem_43467[i_2];
    for (int64_t tile_id_41594 = 0; tile_id_41594 < num_whole_tiles_41582;
         tile_id_41594++) {
        int64_t binop_x_41684 = tile_sizze_41560 * tile_id_41594;
        int64_t ltid_x_41595 = sext_i32_i64(ltid_pre_44691);
        int64_t ltid_y_41596 = sext_i32_i64(ltid_pre_44692);
        int32_t ltid_flat_41597 = local_tid_44687;
        int64_t i_41685 = ltid_x_41595 + binop_x_41684;
        int64_t j_41687 = ltid_y_41596 + binop_x_41684;
        int64_t gtid_41689 = ltid_x_41595 + binop_x_41688;
        int64_t gtid_41691 = ltid_y_41596 + binop_x_41690;
        bool binop_x_41694 = slt64(j_41687, i32_res_30070);
        bool binop_y_41695 = slt64(gtid_41689, i32_res_30076);
        bool cond_41696 = binop_x_41694 && binop_y_41695;
        float pre_41697;
        
        if (cond_41696) {
            float x_41698 = ((__global float *) mem_43390)[j_41687 *
                                                           i32_res_30076 +
                                                           gtid_41689];
            
            pre_41697 = x_41698;
        } else {
            pre_41697 = 0.0F;
        }
        
        bool binop_x_41700 = slt64(i_41685, i32_res_30070);
        bool binop_y_41701 = slt64(gtid_41691, i32_res_30076);
        bool cond_41702 = binop_x_41700 && binop_y_41701;
        float pre_41703;
        
        if (cond_41702) {
            float x_41704 = ((__global float *) mem_43394)[i_41685 *
                                                           i32_res_30076 +
                                                           gtid_41691];
            
            pre_41703 = x_41704;
        } else {
            pre_41703 = 0.0F;
        }
        ((__local float *) mem_43482)[ltid_x_41595 * tile_sizze_41560 +
                                      ltid_y_41596] = pre_41697;
        ((__local float *) mem_43485)[ltid_x_41595 * tile_sizze_41560 +
                                      ltid_y_41596] = pre_41703;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43489[1];
        int64_t ltid_x_41640 = sext_i32_i64(ltid_pre_44691);
        int64_t ltid_y_41641 = sext_i32_i64(ltid_pre_44692);
        int32_t ltid_flat_41642 = local_tid_44687;
        int64_t gtid_41708 = ltid_x_41640 + binop_x_41688;
        int64_t gtid_41710 = ltid_y_41641 + binop_x_41690;
        float acc_41713 = mem_param_43475[0];
        bool binop_x_41718 = slt64(gtid_41708, i32_res_30076);
        bool binop_y_41719 = slt64(gtid_41710, i32_res_30076);
        bool cond_41720 = binop_x_41718 && binop_y_41719;
        float acc_41721;
        
        if (cond_41720) {
            float x_41722;
            float redout_43251 = acc_41713;
            
            for (int64_t i_43252 = 0; i_43252 < tile_sizze_41560; i_43252++) {
                int64_t slice_43356 = binop_x_41684 + i_43252;
                float x_41726 = ((__global
                                  float *) images_mem_43378)[gtid_32135 *
                                                             N_30058 +
                                                             slice_43356];
                float x_41727 = ((__local float *) mem_43482)[ltid_x_41640 *
                                                              tile_sizze_41560 +
                                                              i_43252];
                float x_41728 = ((__local float *) mem_43485)[i_43252 *
                                                              tile_sizze_41560 +
                                                              ltid_y_41641];
                float x_41729 = x_41727 * x_41728;
                bool isnan_res_41730;
                
                isnan_res_41730 = futrts_isnan32(x_41726);
                
                float y_41731;
                
                if (isnan_res_41730) {
                    y_41731 = 0.0F;
                } else {
                    y_41731 = 1.0F;
                }
                
                float defunc_2_f_res_41732 = x_41729 * y_41731;
                float defunc_1_op_res_41725 = defunc_2_f_res_41732 +
                      redout_43251;
                float redout_tmp_44695 = defunc_1_op_res_41725;
                
                redout_43251 = redout_tmp_44695;
            }
            x_41722 = redout_43251;
            acc_41721 = x_41722;
        } else {
            acc_41721 = acc_41713;
        }
        mem_43489[0] = acc_41721;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44693[1];
        
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_tmp_44693[i_3] = mem_43489[i_3];
        for (int32_t i_4 = 0; i_4 < 1; i_4++)
            mem_param_43475[i_4] = mem_param_tmp_44693[i_4];
    }
    for (int32_t i_5 = 0; i_5 < 1; i_5++)
        accs_mem_43500[i_5] = mem_param_43475[i_5];
    
    __local char *mem_43504;
    
    mem_43504 = (__local char *) mem_43504_backing_6;
    
    __local char *mem_43507;
    
    mem_43507 = (__local char *) mem_43507_backing_7;
    
    float mem_43511[1];
    float mem_44410[1];
    
    if (cond_41745) {
        mem_44410[0] = accs_mem_43500[0];
    } else {
        int64_t binop_x_41837 = tile_sizze_41560 * num_whole_tiles_41582;
        int64_t ltid_x_41746 = sext_i32_i64(ltid_pre_44691);
        int64_t ltid_y_41747 = sext_i32_i64(ltid_pre_44692);
        int32_t ltid_flat_41748 = local_tid_44687;
        int64_t i_41838 = ltid_x_41746 + binop_x_41837;
        int64_t j_41840 = ltid_y_41747 + binop_x_41837;
        int64_t gtid_41842 = binop_x_41688 + ltid_x_41746;
        int64_t gtid_41844 = binop_x_41690 + ltid_y_41747;
        bool binop_x_41847 = slt64(j_41840, i32_res_30070);
        bool binop_y_41848 = slt64(gtid_41842, i32_res_30076);
        bool cond_41849 = binop_x_41847 && binop_y_41848;
        float pre_41850;
        
        if (cond_41849) {
            float x_41851 = ((__global float *) mem_43390)[j_41840 *
                                                           i32_res_30076 +
                                                           gtid_41842];
            
            pre_41850 = x_41851;
        } else {
            pre_41850 = 0.0F;
        }
        
        bool binop_x_41853 = slt64(i_41838, i32_res_30070);
        bool binop_y_41854 = slt64(gtid_41844, i32_res_30076);
        bool cond_41855 = binop_x_41853 && binop_y_41854;
        float pre_41856;
        
        if (cond_41855) {
            float x_41857 = ((__global float *) mem_43394)[i_41838 *
                                                           i32_res_30076 +
                                                           gtid_41844];
            
            pre_41856 = x_41857;
        } else {
            pre_41856 = 0.0F;
        }
        ((__local float *) mem_43504)[ltid_x_41746 * tile_sizze_41560 +
                                      ltid_y_41747] = pre_41850;
        ((__local float *) mem_43507)[ltid_x_41746 * tile_sizze_41560 +
                                      ltid_y_41747] = pre_41856;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_41793 = sext_i32_i64(ltid_pre_44691);
        int64_t ltid_y_41794 = sext_i32_i64(ltid_pre_44692);
        int32_t ltid_flat_41795 = local_tid_44687;
        int64_t gtid_41863 = binop_x_41688 + ltid_x_41793;
        int64_t gtid_41865 = binop_x_41690 + ltid_y_41794;
        float acc_41868 = accs_mem_43500[0];
        bool binop_x_41873 = slt64(gtid_41863, i32_res_30076);
        bool binop_y_41874 = slt64(gtid_41865, i32_res_30076);
        bool cond_41875 = binop_x_41873 && binop_y_41874;
        float acc_41876;
        
        if (cond_41875) {
            float x_41877;
            float redout_43253 = acc_41868;
            
            for (int64_t i_43254 = 0; i_43254 < residual_input_41744;
                 i_43254++) {
                int64_t slice_43357 = binop_x_41837 + i_43254;
                float x_41881 = ((__global
                                  float *) images_mem_43378)[gtid_32135 *
                                                             N_30058 +
                                                             slice_43357];
                float x_41882 = ((__local float *) mem_43504)[ltid_x_41793 *
                                                              tile_sizze_41560 +
                                                              i_43254];
                float x_41883 = ((__local float *) mem_43507)[i_43254 *
                                                              tile_sizze_41560 +
                                                              ltid_y_41794];
                float x_41884 = x_41882 * x_41883;
                bool isnan_res_41885;
                
                isnan_res_41885 = futrts_isnan32(x_41881);
                
                float y_41886;
                
                if (isnan_res_41885) {
                    y_41886 = 0.0F;
                } else {
                    y_41886 = 1.0F;
                }
                
                float defunc_2_f_res_41887 = x_41884 * y_41886;
                float defunc_1_op_res_41880 = defunc_2_f_res_41887 +
                      redout_43253;
                float redout_tmp_44696 = defunc_1_op_res_41880;
                
                redout_43253 = redout_tmp_44696;
            }
            x_41877 = redout_43253;
            acc_41876 = x_41877;
        } else {
            acc_41876 = acc_41868;
        }
        mem_43511[0] = acc_41876;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44410[0] = mem_43511[0];
    }
    
    int64_t thread_out_index_44697 = gtid_32135 +
            squot64(sext_i32_i64(local_tid_44687), tile_sizze_41560 *
                    tile_sizze_41560);
    int64_t thread_out_index_44698 = gid_x_41557 * tile_sizze_41560 +
            squot64(sext_i32_i64(local_tid_44687) -
                    squot64(sext_i32_i64(local_tid_44687), tile_sizze_41560 *
                            tile_sizze_41560) * (tile_sizze_41560 *
                                                 tile_sizze_41560),
                    tile_sizze_41560);
    int64_t thread_out_index_44699 = gid_y_41558 * tile_sizze_41560 +
            (sext_i32_i64(local_tid_44687) -
             squot64(sext_i32_i64(local_tid_44687), tile_sizze_41560 *
                     tile_sizze_41560) * (tile_sizze_41560 * tile_sizze_41560) -
             squot64(sext_i32_i64(local_tid_44687) -
                     squot64(sext_i32_i64(local_tid_44687), tile_sizze_41560 *
                             tile_sizze_41560) * (tile_sizze_41560 *
                                                  tile_sizze_41560),
                     tile_sizze_41560) * tile_sizze_41560);
    
    if ((slt64(thread_out_index_44697, m_30057) && slt64(thread_out_index_44698,
                                                         i32_res_30076)) &&
        slt64(thread_out_index_44699, i32_res_30076)) {
        ((__global float *) mem_43523)[thread_out_index_44697 * (i32_res_30076 *
                                                                 i32_res_30076) +
                                       thread_out_index_44698 * i32_res_30076 +
                                       thread_out_index_44699] = mem_44410[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41560
}
__kernel void mainDetailedzisegmap_intragroup_41911(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43693_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43690_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43671_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43668_backing_aligned_3,
                                                    int64_t m_30057,
                                                    int64_t N_30058,
                                                    int64_t i32_res_30070,
                                                    int64_t i32_res_30076,
                                                    int64_t num_groups_y_41909,
                                                    int64_t num_whole_tiles_41927,
                                                    int64_t residual_input_42077,
                                                    unsigned char cond_42078,
                                                    __global
                                                    unsigned char *images_mem_43378,
                                                    __global
                                                    unsigned char *mem_43390,
                                                    __global
                                                    unsigned char *mem_43708)
{
    #define tile_sizze_41906 (mainDetailedzitile_sizze_41905)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43693_backing_7 = (__local volatile
                                                           char *) mem_43693_backing_aligned_0;
    __local volatile char *restrict mem_43690_backing_6 = (__local volatile
                                                           char *) mem_43690_backing_aligned_1;
    __local volatile char *restrict mem_43671_backing_1 = (__local volatile
                                                           char *) mem_43671_backing_aligned_2;
    __local volatile char *restrict mem_43668_backing_0 = (__local volatile
                                                           char *) mem_43668_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44841;
    int32_t local_tid_44842;
    int64_t group_sizze_44845;
    int32_t wave_sizze_44844;
    int32_t group_tid_44843;
    
    global_tid_44841 = get_global_id(0);
    local_tid_44842 = get_local_id(0);
    group_sizze_44845 = get_local_size(0);
    wave_sizze_44844 = LOCKSTEP_WIDTH;
    group_tid_44843 = get_group_id(0);
    
    int32_t gid_flat_41911;
    
    gid_flat_41911 = group_tid_44843;
    
    int32_t ltid_pre_44846;
    
    ltid_pre_44846 = squot32(local_tid_44842, sext_i64_i32(tile_sizze_41906));
    
    int32_t ltid_pre_44847;
    
    ltid_pre_44847 = local_tid_44842 - squot32(local_tid_44842,
                                               sext_i64_i32(tile_sizze_41906)) *
        sext_i64_i32(tile_sizze_41906);
    
    int64_t gid_x_41903;
    
    gid_x_41903 = squot64(sext_i32_i64(group_tid_44843), num_groups_y_41909);
    
    int64_t gid_y_41904;
    
    gid_y_41904 = sext_i32_i64(group_tid_44843) -
        squot64(sext_i32_i64(group_tid_44843), num_groups_y_41909) *
        num_groups_y_41909;
    
    float mem_43653[1];
    int64_t ltid_x_41928 = sext_i32_i64(ltid_pre_44846);
    int64_t ltid_y_41929 = sext_i32_i64(ltid_pre_44847);
    int32_t ltid_flat_41930 = local_tid_44842;
    
    if (slt64(ltid_x_41928, tile_sizze_41906) && slt64(ltid_y_41929,
                                                       tile_sizze_41906)) {
        mem_43653[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42027 = gid_x_41903 * tile_sizze_41906;
    int64_t binop_x_42029 = gid_y_41904 * tile_sizze_41906;
    __local char *mem_43668;
    
    mem_43668 = (__local char *) mem_43668_backing_0;
    
    __local char *mem_43671;
    
    mem_43671 = (__local char *) mem_43671_backing_1;
    
    float accs_mem_43686[1];
    float mem_param_43661[1];
    
    for (int32_t i_2 = 0; i_2 < 1; i_2++)
        mem_param_43661[i_2] = mem_43653[i_2];
    for (int64_t tile_id_41939 = 0; tile_id_41939 < num_whole_tiles_41927;
         tile_id_41939++) {
        int64_t binop_x_42023 = tile_sizze_41906 * tile_id_41939;
        int64_t ltid_x_41940 = sext_i32_i64(ltid_pre_44846);
        int64_t ltid_y_41941 = sext_i32_i64(ltid_pre_44847);
        int32_t ltid_flat_41942 = local_tid_44842;
        int64_t i_42024 = ltid_x_41940 + binop_x_42023;
        int64_t j_42026 = ltid_y_41941 + binop_x_42023;
        int64_t gtid_42028 = ltid_x_41940 + binop_x_42027;
        int64_t gtid_42030 = ltid_y_41941 + binop_x_42029;
        bool binop_x_42033 = slt64(i_42024, i32_res_30070);
        bool binop_y_42034 = slt64(gtid_42030, i32_res_30076);
        bool cond_42035 = binop_x_42033 && binop_y_42034;
        float pre_42036;
        
        if (cond_42035) {
            float x_42037 = ((__global float *) mem_43390)[i_42024 *
                                                           i32_res_30076 +
                                                           gtid_42030];
            
            pre_42036 = x_42037;
        } else {
            pre_42036 = 0.0F;
        }
        
        bool binop_x_42039 = slt64(j_42026, i32_res_30070);
        bool binop_y_42040 = slt64(gtid_42028, m_30057);
        bool cond_42041 = binop_x_42039 && binop_y_42040;
        float pre_42042;
        
        if (cond_42041) {
            float x_42043 = ((__global float *) images_mem_43378)[gtid_42028 *
                                                                  N_30058 +
                                                                  j_42026];
            
            pre_42042 = x_42043;
        } else {
            pre_42042 = 0.0F;
        }
        ((__local float *) mem_43668)[ltid_x_41940 * tile_sizze_41906 +
                                      ltid_y_41941] = pre_42036;
        ((__local float *) mem_43671)[ltid_x_41940 * tile_sizze_41906 +
                                      ltid_y_41941] = pre_42042;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43675[1];
        int64_t ltid_x_41985 = sext_i32_i64(ltid_pre_44846);
        int64_t ltid_y_41986 = sext_i32_i64(ltid_pre_44847);
        int32_t ltid_flat_41987 = local_tid_44842;
        int64_t gtid_42047 = ltid_x_41985 + binop_x_42027;
        int64_t gtid_42049 = ltid_y_41986 + binop_x_42029;
        float acc_42052 = mem_param_43661[0];
        bool binop_x_42055 = slt64(gtid_42047, m_30057);
        bool binop_y_42056 = slt64(gtid_42049, i32_res_30076);
        bool cond_42057 = binop_x_42055 && binop_y_42056;
        float acc_42058;
        
        if (cond_42057) {
            float x_42059;
            float redout_43261 = acc_42052;
            
            for (int64_t i_43262 = 0; i_43262 < tile_sizze_41906; i_43262++) {
                float x_42064 = ((__local float *) mem_43671)[ltid_x_41985 *
                                                              tile_sizze_41906 +
                                                              i_43262];
                bool isnan_res_42065;
                
                isnan_res_42065 = futrts_isnan32(x_42064);
                
                float defunc_1_f_res_42066;
                
                if (isnan_res_42065) {
                    defunc_1_f_res_42066 = 0.0F;
                } else {
                    float x_42063 = ((__local float *) mem_43668)[i_43262 *
                                                                  tile_sizze_41906 +
                                                                  ltid_y_41986];
                    float defunc_1_f_res_f_res_42067 = x_42063 * x_42064;
                    
                    defunc_1_f_res_42066 = defunc_1_f_res_f_res_42067;
                }
                
                float defunc_1_op_res_42062 = defunc_1_f_res_42066 +
                      redout_43261;
                float redout_tmp_44850 = defunc_1_op_res_42062;
                
                redout_43261 = redout_tmp_44850;
            }
            x_42059 = redout_43261;
            acc_42058 = x_42059;
        } else {
            acc_42058 = acc_42052;
        }
        mem_43675[0] = acc_42058;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44848[1];
        
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_tmp_44848[i_3] = mem_43675[i_3];
        for (int32_t i_4 = 0; i_4 < 1; i_4++)
            mem_param_43661[i_4] = mem_param_tmp_44848[i_4];
    }
    for (int32_t i_5 = 0; i_5 < 1; i_5++)
        accs_mem_43686[i_5] = mem_param_43661[i_5];
    
    __local char *mem_43690;
    
    mem_43690 = (__local char *) mem_43690_backing_6;
    
    __local char *mem_43693;
    
    mem_43693 = (__local char *) mem_43693_backing_7;
    
    float mem_43697[1];
    float mem_44424[1];
    
    if (cond_42078) {
        mem_44424[0] = accs_mem_43686[0];
    } else {
        int64_t binop_x_42164 = tile_sizze_41906 * num_whole_tiles_41927;
        int64_t ltid_x_42079 = sext_i32_i64(ltid_pre_44846);
        int64_t ltid_y_42080 = sext_i32_i64(ltid_pre_44847);
        int32_t ltid_flat_42081 = local_tid_44842;
        int64_t i_42165 = ltid_x_42079 + binop_x_42164;
        int64_t j_42167 = ltid_y_42080 + binop_x_42164;
        int64_t gtid_42169 = binop_x_42027 + ltid_x_42079;
        int64_t gtid_42171 = binop_x_42029 + ltid_y_42080;
        bool binop_x_42174 = slt64(i_42165, i32_res_30070);
        bool binop_y_42175 = slt64(gtid_42171, i32_res_30076);
        bool cond_42176 = binop_x_42174 && binop_y_42175;
        float pre_42177;
        
        if (cond_42176) {
            float x_42178 = ((__global float *) mem_43390)[i_42165 *
                                                           i32_res_30076 +
                                                           gtid_42171];
            
            pre_42177 = x_42178;
        } else {
            pre_42177 = 0.0F;
        }
        
        bool binop_x_42180 = slt64(j_42167, i32_res_30070);
        bool binop_y_42181 = slt64(gtid_42169, m_30057);
        bool cond_42182 = binop_x_42180 && binop_y_42181;
        float pre_42183;
        
        if (cond_42182) {
            float x_42184 = ((__global float *) images_mem_43378)[gtid_42169 *
                                                                  N_30058 +
                                                                  j_42167];
            
            pre_42183 = x_42184;
        } else {
            pre_42183 = 0.0F;
        }
        ((__local float *) mem_43690)[ltid_x_42079 * tile_sizze_41906 +
                                      ltid_y_42080] = pre_42177;
        ((__local float *) mem_43693)[ltid_x_42079 * tile_sizze_41906 +
                                      ltid_y_42080] = pre_42183;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42126 = sext_i32_i64(ltid_pre_44846);
        int64_t ltid_y_42127 = sext_i32_i64(ltid_pre_44847);
        int32_t ltid_flat_42128 = local_tid_44842;
        int64_t gtid_42190 = binop_x_42027 + ltid_x_42126;
        int64_t gtid_42192 = binop_x_42029 + ltid_y_42127;
        float acc_42195 = accs_mem_43686[0];
        bool binop_x_42198 = slt64(gtid_42190, m_30057);
        bool binop_y_42199 = slt64(gtid_42192, i32_res_30076);
        bool cond_42200 = binop_x_42198 && binop_y_42199;
        float acc_42201;
        
        if (cond_42200) {
            float x_42202;
            float redout_43263 = acc_42195;
            
            for (int64_t i_43264 = 0; i_43264 < residual_input_42077;
                 i_43264++) {
                float x_42207 = ((__local float *) mem_43693)[ltid_x_42126 *
                                                              tile_sizze_41906 +
                                                              i_43264];
                bool isnan_res_42208;
                
                isnan_res_42208 = futrts_isnan32(x_42207);
                
                float defunc_1_f_res_42209;
                
                if (isnan_res_42208) {
                    defunc_1_f_res_42209 = 0.0F;
                } else {
                    float x_42206 = ((__local float *) mem_43690)[i_43264 *
                                                                  tile_sizze_41906 +
                                                                  ltid_y_42127];
                    float defunc_1_f_res_f_res_42210 = x_42206 * x_42207;
                    
                    defunc_1_f_res_42209 = defunc_1_f_res_f_res_42210;
                }
                
                float defunc_1_op_res_42205 = defunc_1_f_res_42209 +
                      redout_43263;
                float redout_tmp_44851 = defunc_1_op_res_42205;
                
                redout_43263 = redout_tmp_44851;
            }
            x_42202 = redout_43263;
            acc_42201 = x_42202;
        } else {
            acc_42201 = acc_42195;
        }
        mem_43697[0] = acc_42201;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44424[0] = mem_43697[0];
    }
    
    int64_t thread_out_index_44852 = gid_x_41903 * tile_sizze_41906 +
            sext_i32_i64(ltid_pre_44846);
    int64_t thread_out_index_44853 = gid_y_41904 * tile_sizze_41906 +
            sext_i32_i64(ltid_pre_44847);
    
    if (slt64(thread_out_index_44852, m_30057) && slt64(thread_out_index_44853,
                                                        i32_res_30076)) {
        ((__global float *) mem_43708)[thread_out_index_44852 * i32_res_30076 +
                                       thread_out_index_44853] = mem_44424[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41906
}
__kernel void mainDetailedzisegmap_intragroup_42233(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43786_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43767_backing_aligned_1,
                                                    int64_t m_30057,
                                                    int64_t i32_res_30076,
                                                    int64_t num_groups_y_42231,
                                                    int64_t num_whole_tiles_42249,
                                                    int64_t residual_input_42376,
                                                    unsigned char cond_42377,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43718,
                                                    __global
                                                    unsigned char *mem_43747,
                                                    __global
                                                    unsigned char *mem_43801)
{
    #define tile_sizze_42228 (mainDetailedzitile_sizze_42227)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43786_backing_5 = (__local volatile
                                                           char *) mem_43786_backing_aligned_0;
    __local volatile char *restrict mem_43767_backing_0 = (__local volatile
                                                           char *) mem_43767_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44929;
    int32_t local_tid_44930;
    int64_t group_sizze_44933;
    int32_t wave_sizze_44932;
    int32_t group_tid_44931;
    
    global_tid_44929 = get_global_id(0);
    local_tid_44930 = get_local_id(0);
    group_sizze_44933 = get_local_size(0);
    wave_sizze_44932 = LOCKSTEP_WIDTH;
    group_tid_44931 = get_group_id(0);
    
    int32_t gid_flat_42233;
    
    gid_flat_42233 = group_tid_44931;
    
    int32_t ltid_pre_44934;
    
    ltid_pre_44934 = squot32(local_tid_44930, sext_i64_i32(tile_sizze_42228));
    
    int32_t ltid_pre_44935;
    
    ltid_pre_44935 = local_tid_44930 - squot32(local_tid_44930,
                                               sext_i64_i32(tile_sizze_42228)) *
        sext_i64_i32(tile_sizze_42228);
    
    int64_t gid_x_42225;
    
    gid_x_42225 = squot64(sext_i32_i64(group_tid_44931), num_groups_y_42231);
    
    int64_t gid_y_42226;
    
    gid_y_42226 = sext_i32_i64(group_tid_44931) -
        squot64(sext_i32_i64(group_tid_44931), num_groups_y_42231) *
        num_groups_y_42231;
    
    float mem_43752[1];
    int64_t ltid_x_42250 = sext_i32_i64(ltid_pre_44934);
    int64_t ltid_y_42251 = sext_i32_i64(ltid_pre_44935);
    int32_t ltid_flat_42252 = local_tid_44930;
    
    if (slt64(ltid_x_42250, tile_sizze_42228) && slt64(ltid_y_42251,
                                                       tile_sizze_42228)) {
        mem_43752[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42335 = gid_x_42225 * tile_sizze_42228;
    int64_t binop_x_42350 = gid_y_42226 * tile_sizze_42228;
    __local char *mem_43767;
    
    mem_43767 = (__local char *) mem_43767_backing_0;
    
    float accs_mem_43782[1];
    float mem_param_43760[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43760[i_1] = mem_43752[i_1];
    for (int64_t tile_id_42261 = 0; tile_id_42261 < num_whole_tiles_42249;
         tile_id_42261++) {
        int64_t binop_x_42333 = tile_sizze_42228 * tile_id_42261;
        int64_t ltid_x_42262 = sext_i32_i64(ltid_pre_44934);
        int64_t ltid_y_42263 = sext_i32_i64(ltid_pre_44935);
        int32_t ltid_flat_42264 = local_tid_44930;
        int64_t j_42334 = ltid_y_42263 + binop_x_42333;
        int64_t gtid_42336 = ltid_x_42262 + binop_x_42335;
        bool binop_x_42341 = slt64(j_42334, i32_res_30076);
        bool binop_y_42342 = slt64(gtid_42336, m_30057);
        bool cond_42343 = binop_x_42341 && binop_y_42342;
        float pre_42344;
        
        if (cond_42343) {
            float x_42345 = ((__global
                              float *) defunc_3_map_res_mem_43718)[gtid_42336 *
                                                                   i32_res_30076 +
                                                                   j_42334];
            
            pre_42344 = x_42345;
        } else {
            pre_42344 = 0.0F;
        }
        ((__local float *) mem_43767)[ltid_x_42262 * tile_sizze_42228 +
                                      ltid_y_42263] = pre_42344;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43771[1];
        int64_t ltid_x_42294 = sext_i32_i64(ltid_pre_44934);
        int64_t ltid_y_42295 = sext_i32_i64(ltid_pre_44935);
        int32_t ltid_flat_42296 = local_tid_44930;
        int64_t gtid_42349 = ltid_x_42294 + binop_x_42335;
        int64_t gtid_42351 = ltid_y_42295 + binop_x_42350;
        float acc_42354 = mem_param_43760[0];
        bool binop_x_42358 = slt64(gtid_42349, m_30057);
        bool binop_y_42359 = slt64(gtid_42351, i32_res_30076);
        bool cond_42360 = binop_x_42358 && binop_y_42359;
        float acc_42361;
        
        if (cond_42360) {
            float x_42362;
            float redout_43271 = acc_42354;
            
            for (int64_t i_43272 = 0; i_43272 < tile_sizze_42228; i_43272++) {
                float x_42366 = ((__local float *) mem_43767)[ltid_x_42294 *
                                                              tile_sizze_42228 +
                                                              i_43272];
                int64_t slice_43362 = binop_x_42333 + i_43272;
                float x_42367 = ((__global float *) mem_43747)[slice_43362 *
                                                               (i32_res_30076 *
                                                                m_30057) +
                                                               gtid_42349 *
                                                               i32_res_30076 +
                                                               gtid_42351];
                float defunc_1_f_res_42368 = x_42366 * x_42367;
                float defunc_1_op_res_42365 = defunc_1_f_res_42368 +
                      redout_43271;
                float redout_tmp_44938 = defunc_1_op_res_42365;
                
                redout_43271 = redout_tmp_44938;
            }
            x_42362 = redout_43271;
            acc_42361 = x_42362;
        } else {
            acc_42361 = acc_42354;
        }
        mem_43771[0] = acc_42361;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44936[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44936[i_2] = mem_43771[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43760[i_3] = mem_param_tmp_44936[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43782[i_4] = mem_param_43760[i_4];
    
    __local char *mem_43786;
    
    mem_43786 = (__local char *) mem_43786_backing_5;
    
    float mem_43790[1];
    float mem_44434[1];
    
    if (cond_42377) {
        mem_44434[0] = accs_mem_43782[0];
    } else {
        int64_t binop_x_42450 = tile_sizze_42228 * num_whole_tiles_42249;
        int64_t ltid_x_42378 = sext_i32_i64(ltid_pre_44934);
        int64_t ltid_y_42379 = sext_i32_i64(ltid_pre_44935);
        int32_t ltid_flat_42380 = local_tid_44930;
        int64_t j_42451 = ltid_y_42379 + binop_x_42450;
        int64_t gtid_42453 = binop_x_42335 + ltid_x_42378;
        bool binop_x_42458 = slt64(j_42451, i32_res_30076);
        bool binop_y_42459 = slt64(gtid_42453, m_30057);
        bool cond_42460 = binop_x_42458 && binop_y_42459;
        float pre_42461;
        
        if (cond_42460) {
            float x_42462 = ((__global
                              float *) defunc_3_map_res_mem_43718)[gtid_42453 *
                                                                   i32_res_30076 +
                                                                   j_42451];
            
            pre_42461 = x_42462;
        } else {
            pre_42461 = 0.0F;
        }
        ((__local float *) mem_43786)[ltid_x_42378 * tile_sizze_42228 +
                                      ltid_y_42379] = pre_42461;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42411 = sext_i32_i64(ltid_pre_44934);
        int64_t ltid_y_42412 = sext_i32_i64(ltid_pre_44935);
        int32_t ltid_flat_42413 = local_tid_44930;
        int64_t gtid_42467 = binop_x_42335 + ltid_x_42411;
        int64_t gtid_42469 = binop_x_42350 + ltid_y_42412;
        float acc_42472 = accs_mem_43782[0];
        bool binop_x_42476 = slt64(gtid_42467, m_30057);
        bool binop_y_42477 = slt64(gtid_42469, i32_res_30076);
        bool cond_42478 = binop_x_42476 && binop_y_42477;
        float acc_42479;
        
        if (cond_42478) {
            float x_42480;
            float redout_43273 = acc_42472;
            
            for (int64_t i_43274 = 0; i_43274 < residual_input_42376;
                 i_43274++) {
                float x_42484 = ((__local float *) mem_43786)[ltid_x_42411 *
                                                              tile_sizze_42228 +
                                                              i_43274];
                int64_t slice_43363 = binop_x_42450 + i_43274;
                float x_42485 = ((__global float *) mem_43747)[slice_43363 *
                                                               (i32_res_30076 *
                                                                m_30057) +
                                                               gtid_42467 *
                                                               i32_res_30076 +
                                                               gtid_42469];
                float defunc_1_f_res_42486 = x_42484 * x_42485;
                float defunc_1_op_res_42483 = defunc_1_f_res_42486 +
                      redout_43273;
                float redout_tmp_44939 = defunc_1_op_res_42483;
                
                redout_43273 = redout_tmp_44939;
            }
            x_42480 = redout_43273;
            acc_42479 = x_42480;
        } else {
            acc_42479 = acc_42472;
        }
        mem_43790[0] = acc_42479;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44434[0] = mem_43790[0];
    }
    
    int64_t thread_out_index_44940 = gid_x_42225 * tile_sizze_42228 +
            sext_i32_i64(ltid_pre_44934);
    int64_t thread_out_index_44941 = gid_y_42226 * tile_sizze_42228 +
            sext_i32_i64(ltid_pre_44935);
    
    if (slt64(thread_out_index_44940, m_30057) && slt64(thread_out_index_44941,
                                                        i32_res_30076)) {
        ((__global float *) mem_43801)[thread_out_index_44940 * i32_res_30076 +
                                       thread_out_index_44941] = mem_44434[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42228
}
__kernel void mainDetailedzisegmap_intragroup_42509(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43880_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43877_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43858_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43855_backing_aligned_3,
                                                    int64_t N_30056,
                                                    int64_t m_30057,
                                                    int64_t i32_res_30076,
                                                    int64_t num_groups_y_42507,
                                                    int64_t num_whole_tiles_42525,
                                                    int64_t residual_input_42669,
                                                    unsigned char cond_42670,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43811,
                                                    __global
                                                    unsigned char *mem_43835,
                                                    __global
                                                    unsigned char *mem_43895)
{
    #define tile_sizze_42504 (mainDetailedzitile_sizze_42503)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43880_backing_7 = (__local volatile
                                                           char *) mem_43880_backing_aligned_0;
    __local volatile char *restrict mem_43877_backing_6 = (__local volatile
                                                           char *) mem_43877_backing_aligned_1;
    __local volatile char *restrict mem_43858_backing_1 = (__local volatile
                                                           char *) mem_43858_backing_aligned_2;
    __local volatile char *restrict mem_43855_backing_0 = (__local volatile
                                                           char *) mem_43855_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45017;
    int32_t local_tid_45018;
    int64_t group_sizze_45021;
    int32_t wave_sizze_45020;
    int32_t group_tid_45019;
    
    global_tid_45017 = get_global_id(0);
    local_tid_45018 = get_local_id(0);
    group_sizze_45021 = get_local_size(0);
    wave_sizze_45020 = LOCKSTEP_WIDTH;
    group_tid_45019 = get_group_id(0);
    
    int32_t gid_flat_42509;
    
    gid_flat_42509 = group_tid_45019;
    
    int32_t ltid_pre_45022;
    
    ltid_pre_45022 = squot32(local_tid_45018, sext_i64_i32(tile_sizze_42504));
    
    int32_t ltid_pre_45023;
    
    ltid_pre_45023 = local_tid_45018 - squot32(local_tid_45018,
                                               sext_i64_i32(tile_sizze_42504)) *
        sext_i64_i32(tile_sizze_42504);
    
    int64_t gid_x_42501;
    
    gid_x_42501 = squot64(sext_i32_i64(group_tid_45019), num_groups_y_42507);
    
    int64_t gid_y_42502;
    
    gid_y_42502 = sext_i32_i64(group_tid_45019) -
        squot64(sext_i32_i64(group_tid_45019), num_groups_y_42507) *
        num_groups_y_42507;
    
    float mem_43840[1];
    int64_t ltid_x_42526 = sext_i32_i64(ltid_pre_45022);
    int64_t ltid_y_42527 = sext_i32_i64(ltid_pre_45023);
    int32_t ltid_flat_42528 = local_tid_45018;
    
    if (slt64(ltid_x_42526, tile_sizze_42504) && slt64(ltid_y_42527,
                                                       tile_sizze_42504)) {
        mem_43840[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42623 = gid_x_42501 * tile_sizze_42504;
    int64_t binop_x_42625 = gid_y_42502 * tile_sizze_42504;
    __local char *mem_43855;
    
    mem_43855 = (__local char *) mem_43855_backing_0;
    
    __local char *mem_43858;
    
    mem_43858 = (__local char *) mem_43858_backing_1;
    
    float accs_mem_43873[1];
    float mem_param_43848[1];
    
    for (int32_t i_2 = 0; i_2 < 1; i_2++)
        mem_param_43848[i_2] = mem_43840[i_2];
    for (int64_t tile_id_42537 = 0; tile_id_42537 < num_whole_tiles_42525;
         tile_id_42537++) {
        int64_t binop_x_42619 = tile_sizze_42504 * tile_id_42537;
        int64_t ltid_x_42538 = sext_i32_i64(ltid_pre_45022);
        int64_t ltid_y_42539 = sext_i32_i64(ltid_pre_45023);
        int32_t ltid_flat_42540 = local_tid_45018;
        int64_t i_42620 = ltid_x_42538 + binop_x_42619;
        int64_t j_42622 = ltid_y_42539 + binop_x_42619;
        int64_t gtid_42624 = ltid_x_42538 + binop_x_42623;
        int64_t gtid_42626 = ltid_y_42539 + binop_x_42625;
        bool binop_x_42629 = slt64(j_42622, i32_res_30076);
        bool binop_y_42630 = slt64(gtid_42624, m_30057);
        bool cond_42631 = binop_x_42629 && binop_y_42630;
        float pre_42632;
        
        if (cond_42631) {
            float x_42633 = ((__global
                              float *) defunc_4_map_res_mem_43811)[gtid_42624 *
                                                                   i32_res_30076 +
                                                                   j_42622];
            
            pre_42632 = x_42633;
        } else {
            pre_42632 = 0.0F;
        }
        
        bool binop_x_42635 = slt64(i_42620, i32_res_30076);
        bool binop_y_42636 = slt64(gtid_42626, N_30056);
        bool cond_42637 = binop_x_42635 && binop_y_42636;
        float pre_42638;
        
        if (cond_42637) {
            float x_42639 = ((__global float *) mem_43835)[i_42620 * N_30056 +
                                                           gtid_42626];
            
            pre_42638 = x_42639;
        } else {
            pre_42638 = 0.0F;
        }
        ((__local float *) mem_43855)[ltid_x_42538 * tile_sizze_42504 +
                                      ltid_y_42539] = pre_42632;
        ((__local float *) mem_43858)[ltid_x_42538 * tile_sizze_42504 +
                                      ltid_y_42539] = pre_42638;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43862[1];
        int64_t ltid_x_42583 = sext_i32_i64(ltid_pre_45022);
        int64_t ltid_y_42584 = sext_i32_i64(ltid_pre_45023);
        int32_t ltid_flat_42585 = local_tid_45018;
        int64_t gtid_42643 = ltid_x_42583 + binop_x_42623;
        int64_t gtid_42645 = ltid_y_42584 + binop_x_42625;
        float acc_42648 = mem_param_43848[0];
        bool binop_x_42651 = slt64(gtid_42643, m_30057);
        bool binop_y_42652 = slt64(gtid_42645, N_30056);
        bool cond_42653 = binop_x_42651 && binop_y_42652;
        float acc_42654;
        
        if (cond_42653) {
            float x_42655;
            float redout_43281 = acc_42648;
            
            for (int64_t i_43282 = 0; i_43282 < tile_sizze_42504; i_43282++) {
                float x_42659 = ((__local float *) mem_43855)[ltid_x_42583 *
                                                              tile_sizze_42504 +
                                                              i_43282];
                float x_42660 = ((__local float *) mem_43858)[i_43282 *
                                                              tile_sizze_42504 +
                                                              ltid_y_42584];
                float defunc_1_f_res_42661 = x_42659 * x_42660;
                float defunc_1_op_res_42658 = defunc_1_f_res_42661 +
                      redout_43281;
                float redout_tmp_45026 = defunc_1_op_res_42658;
                
                redout_43281 = redout_tmp_45026;
            }
            x_42655 = redout_43281;
            acc_42654 = x_42655;
        } else {
            acc_42654 = acc_42648;
        }
        mem_43862[0] = acc_42654;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45024[1];
        
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_tmp_45024[i_3] = mem_43862[i_3];
        for (int32_t i_4 = 0; i_4 < 1; i_4++)
            mem_param_43848[i_4] = mem_param_tmp_45024[i_4];
    }
    for (int32_t i_5 = 0; i_5 < 1; i_5++)
        accs_mem_43873[i_5] = mem_param_43848[i_5];
    
    __local char *mem_43877;
    
    mem_43877 = (__local char *) mem_43877_backing_6;
    
    __local char *mem_43880;
    
    mem_43880 = (__local char *) mem_43880_backing_7;
    
    float mem_43884[1];
    float mem_44446[1];
    
    if (cond_42670) {
        mem_44446[0] = accs_mem_43873[0];
    } else {
        int64_t binop_x_42754 = tile_sizze_42504 * num_whole_tiles_42525;
        int64_t ltid_x_42671 = sext_i32_i64(ltid_pre_45022);
        int64_t ltid_y_42672 = sext_i32_i64(ltid_pre_45023);
        int32_t ltid_flat_42673 = local_tid_45018;
        int64_t i_42755 = ltid_x_42671 + binop_x_42754;
        int64_t j_42757 = ltid_y_42672 + binop_x_42754;
        int64_t gtid_42759 = binop_x_42623 + ltid_x_42671;
        int64_t gtid_42761 = binop_x_42625 + ltid_y_42672;
        bool binop_x_42764 = slt64(j_42757, i32_res_30076);
        bool binop_y_42765 = slt64(gtid_42759, m_30057);
        bool cond_42766 = binop_x_42764 && binop_y_42765;
        float pre_42767;
        
        if (cond_42766) {
            float x_42768 = ((__global
                              float *) defunc_4_map_res_mem_43811)[gtid_42759 *
                                                                   i32_res_30076 +
                                                                   j_42757];
            
            pre_42767 = x_42768;
        } else {
            pre_42767 = 0.0F;
        }
        
        bool binop_x_42770 = slt64(i_42755, i32_res_30076);
        bool binop_y_42771 = slt64(gtid_42761, N_30056);
        bool cond_42772 = binop_x_42770 && binop_y_42771;
        float pre_42773;
        
        if (cond_42772) {
            float x_42774 = ((__global float *) mem_43835)[i_42755 * N_30056 +
                                                           gtid_42761];
            
            pre_42773 = x_42774;
        } else {
            pre_42773 = 0.0F;
        }
        ((__local float *) mem_43877)[ltid_x_42671 * tile_sizze_42504 +
                                      ltid_y_42672] = pre_42767;
        ((__local float *) mem_43880)[ltid_x_42671 * tile_sizze_42504 +
                                      ltid_y_42672] = pre_42773;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42718 = sext_i32_i64(ltid_pre_45022);
        int64_t ltid_y_42719 = sext_i32_i64(ltid_pre_45023);
        int32_t ltid_flat_42720 = local_tid_45018;
        int64_t gtid_42780 = binop_x_42623 + ltid_x_42718;
        int64_t gtid_42782 = binop_x_42625 + ltid_y_42719;
        float acc_42785 = accs_mem_43873[0];
        bool binop_x_42788 = slt64(gtid_42780, m_30057);
        bool binop_y_42789 = slt64(gtid_42782, N_30056);
        bool cond_42790 = binop_x_42788 && binop_y_42789;
        float acc_42791;
        
        if (cond_42790) {
            float x_42792;
            float redout_43283 = acc_42785;
            
            for (int64_t i_43284 = 0; i_43284 < residual_input_42669;
                 i_43284++) {
                float x_42796 = ((__local float *) mem_43877)[ltid_x_42718 *
                                                              tile_sizze_42504 +
                                                              i_43284];
                float x_42797 = ((__local float *) mem_43880)[i_43284 *
                                                              tile_sizze_42504 +
                                                              ltid_y_42719];
                float defunc_1_f_res_42798 = x_42796 * x_42797;
                float defunc_1_op_res_42795 = defunc_1_f_res_42798 +
                      redout_43283;
                float redout_tmp_45027 = defunc_1_op_res_42795;
                
                redout_43283 = redout_tmp_45027;
            }
            x_42792 = redout_43283;
            acc_42791 = x_42792;
        } else {
            acc_42791 = acc_42785;
        }
        mem_43884[0] = acc_42791;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44446[0] = mem_43884[0];
    }
    
    int64_t thread_out_index_45028 = gid_x_42501 * tile_sizze_42504 +
            sext_i32_i64(ltid_pre_45022);
    int64_t thread_out_index_45029 = gid_y_42502 * tile_sizze_42504 +
            sext_i32_i64(ltid_pre_45023);
    
    if (slt64(thread_out_index_45028, m_30057) && slt64(thread_out_index_45029,
                                                        N_30056)) {
        ((__global float *) mem_43895)[thread_out_index_45028 * N_30056 +
                                       thread_out_index_45029] = mem_44446[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42504
}
__kernel void mainDetailedzisegmap_intragroup_42814(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43977_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43964_backing_aligned_1,
                                                    int64_t m_30057,
                                                    int32_t n_30061,
                                                    float hfrac_30063,
                                                    int64_t i32_res_30070,
                                                    int32_t k2p2_30072,
                                                    int64_t num_whole_tiles_42822,
                                                    int64_t residual_input_42943,
                                                    unsigned char cond_42944,
                                                    __global
                                                    unsigned char *mem_43947,
                                                    __global
                                                    unsigned char *mem_43950,
                                                    __global
                                                    unsigned char *mem_43994,
                                                    __global
                                                    unsigned char *mem_43996,
                                                    __global
                                                    unsigned char *mem_43998)
{
    #define segmap_group_sizze_34091 (mainDetailedzisegmap_group_sizze_34060)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43977_backing_5 = (__local volatile
                                                           char *) mem_43977_backing_aligned_0;
    __local volatile char *restrict mem_43964_backing_0 = (__local volatile
                                                           char *) mem_43964_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45197;
    int32_t local_tid_45198;
    int64_t group_sizze_45201;
    int32_t wave_sizze_45200;
    int32_t group_tid_45199;
    
    global_tid_45197 = get_global_id(0);
    local_tid_45198 = get_local_id(0);
    group_sizze_45201 = get_local_size(0);
    wave_sizze_45200 = LOCKSTEP_WIDTH;
    group_tid_45199 = get_group_id(0);
    
    int32_t gid_flat_42814;
    
    gid_flat_42814 = group_tid_45199;
    
    int32_t ltid_pre_45202;
    
    ltid_pre_45202 = local_tid_45198;
    
    int64_t gid_42813;
    
    gid_42813 = sext_i32_i64(group_tid_45199);
    
    float mem_43954[1];
    int64_t ltid_42823 = sext_i32_i64(ltid_pre_45202);
    int32_t ltid_flat_42824 = local_tid_45198;
    
    mem_43954[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42909 = segmap_group_sizze_34091 * gid_42813;
    __local char *mem_43964;
    
    mem_43964 = (__local char *) mem_43964_backing_0;
    
    float accs_mem_43974[1];
    float mem_param_43959[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43959[i_1] = mem_43954[i_1];
    for (int64_t tile_id_42830 = 0; tile_id_42830 < num_whole_tiles_42822;
         tile_id_42830++) {
        int64_t binop_x_42891 = segmap_group_sizze_34091 * tile_id_42830;
        int64_t ltid_42831 = sext_i32_i64(ltid_pre_45202);
        int32_t ltid_flat_42832 = local_tid_45198;
        int64_t j_42892 = ltid_42831 + binop_x_42891;
        bool cond_42904 = slt64(j_42892, i32_res_30070);
        int32_t pre_42905;
        
        if (cond_42904) {
            int32_t index_primexp_43229 = sext_i64_i32(j_42892);
            
            pre_42905 = index_primexp_43229;
        } else {
            pre_42905 = 0;
        }
        ((__local int32_t *) mem_43964)[ltid_42831] = pre_42905;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43967[1];
        int64_t ltid_42858 = sext_i32_i64(ltid_pre_45202);
        int32_t ltid_flat_42859 = local_tid_45198;
        int64_t gtid_42910 = ltid_42858 + binop_x_42909;
        int32_t defunc_0_f_res_42912;
        int32_t redout_43285 = 0;
        
        for (int32_t i_43365 = 0; i_43365 < n_30061; i_43365++) {
            int64_t i_43286 = sext_i32_i64(i_43365);
            float x_42916 = ((__global float *) mem_43947)[i_43286 * m_30057 +
                                                           gtid_42910];
            bool isnan_res_42917;
            
            isnan_res_42917 = futrts_isnan32(x_42916);
            
            bool cond_42918 = !isnan_res_42917;
            int32_t defunc_0_f_res_42919 = btoi_bool_i32(cond_42918);
            int32_t defunc_1_op_res_42915 = add32(defunc_0_f_res_42919,
                                                  redout_43285);
            int32_t redout_tmp_45205 = defunc_1_op_res_42915;
            
            redout_43285 = redout_tmp_45205;
        }
        defunc_0_f_res_42912 = redout_43285;
        
        float acc_42920 = mem_param_43959[0];
        bool cond_42921 = slt64(gtid_42910, m_30057);
        float acc_42922;
        
        if (cond_42921) {
            float x_42923;
            float redout_43287 = acc_42920;
            
            for (int64_t i_43288 = 0; i_43288 < segmap_group_sizze_34091;
                 i_43288++) {
                int32_t x_42927 = ((__local int32_t *) mem_43964)[i_43288];
                bool cond_42928 = slt32(x_42927, defunc_0_f_res_42912);
                float defunc_0_f_res_42929;
                
                if (cond_42928) {
                    int64_t i_42930 = sext_i32_i64(x_42927);
                    float defunc_0_f_res_t_res_42931 = ((__global
                                                         float *) mem_43950)[i_42930 *
                                                                             m_30057 +
                                                                             gtid_42910];
                    
                    defunc_0_f_res_42929 = defunc_0_f_res_t_res_42931;
                } else {
                    defunc_0_f_res_42929 = 0.0F;
                }
                
                float defunc_0_f_res_42932 = defunc_0_f_res_42929 *
                      defunc_0_f_res_42929;
                float defunc_1_op_res_42926 = defunc_0_f_res_42932 +
                      redout_43287;
                float redout_tmp_45206 = defunc_1_op_res_42926;
                
                redout_43287 = redout_tmp_45206;
            }
            x_42923 = redout_43287;
            acc_42922 = x_42923;
        } else {
            acc_42922 = acc_42920;
        }
        mem_43967[0] = acc_42922;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45203[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45203[i_2] = mem_43967[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43959[i_3] = mem_param_tmp_45203[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43974[i_4] = mem_param_43959[i_4];
    
    __local char *mem_43977;
    
    mem_43977 = (__local char *) mem_43977_backing_5;
    
    float mem_43980[1];
    float mem_44455[1];
    
    if (cond_42944) {
        mem_44455[0] = accs_mem_43974[0];
    } else {
        int64_t binop_x_42954 = segmap_group_sizze_34091 *
                num_whole_tiles_42822;
        int64_t ltid_42945 = sext_i32_i64(ltid_pre_45202);
        int32_t ltid_flat_42946 = local_tid_45198;
        int64_t j_42955 = ltid_42945 + binop_x_42954;
        bool cond_42967 = slt64(j_42955, i32_res_30070);
        int32_t pre_42968;
        
        if (cond_42967) {
            int32_t index_primexp_43230 = sext_i64_i32(j_42955);
            
            pre_42968 = index_primexp_43230;
        } else {
            pre_42968 = 0;
        }
        ((__local int32_t *) mem_43977)[ltid_42945] = pre_42968;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42973 = sext_i32_i64(ltid_pre_45202);
        int32_t ltid_flat_42974 = local_tid_45198;
        int64_t gtid_42981 = binop_x_42909 + ltid_42973;
        int32_t defunc_0_f_res_42983;
        int32_t redout_43289 = 0;
        
        for (int32_t i_43366 = 0; i_43366 < n_30061; i_43366++) {
            int64_t i_43290 = sext_i32_i64(i_43366);
            float x_42987 = ((__global float *) mem_43947)[i_43290 * m_30057 +
                                                           gtid_42981];
            bool isnan_res_42988;
            
            isnan_res_42988 = futrts_isnan32(x_42987);
            
            bool cond_42989 = !isnan_res_42988;
            int32_t defunc_0_f_res_42990 = btoi_bool_i32(cond_42989);
            int32_t defunc_1_op_res_42986 = add32(defunc_0_f_res_42990,
                                                  redout_43289);
            int32_t redout_tmp_45207 = defunc_1_op_res_42986;
            
            redout_43289 = redout_tmp_45207;
        }
        defunc_0_f_res_42983 = redout_43289;
        
        float acc_42991 = accs_mem_43974[0];
        bool cond_42992 = slt64(gtid_42981, m_30057);
        float acc_42993;
        
        if (cond_42992) {
            float x_42994;
            float redout_43291 = acc_42991;
            
            for (int64_t i_43292 = 0; i_43292 < residual_input_42943;
                 i_43292++) {
                int32_t x_42998 = ((__local int32_t *) mem_43977)[i_43292];
                bool cond_42999 = slt32(x_42998, defunc_0_f_res_42983);
                float defunc_0_f_res_43000;
                
                if (cond_42999) {
                    int64_t i_43001 = sext_i32_i64(x_42998);
                    float defunc_0_f_res_t_res_43002 = ((__global
                                                         float *) mem_43950)[i_43001 *
                                                                             m_30057 +
                                                                             gtid_42981];
                    
                    defunc_0_f_res_43000 = defunc_0_f_res_t_res_43002;
                } else {
                    defunc_0_f_res_43000 = 0.0F;
                }
                
                float defunc_0_f_res_43003 = defunc_0_f_res_43000 *
                      defunc_0_f_res_43000;
                float defunc_1_op_res_42997 = defunc_0_f_res_43003 +
                      redout_43291;
                float redout_tmp_45208 = defunc_1_op_res_42997;
                
                redout_43291 = redout_tmp_45208;
            }
            x_42994 = redout_43291;
            acc_42993 = x_42994;
        } else {
            acc_42993 = acc_42991;
        }
        mem_43980[0] = acc_42993;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44455[0] = mem_43980[0];
    }
    
    int32_t mem_43988[1];
    int32_t mem_43990[1];
    float mem_43992[1];
    int64_t ltid_43006 = sext_i32_i64(ltid_pre_45202);
    int32_t ltid_flat_43007 = local_tid_45198;
    int64_t gtid_43017 = binop_x_42909 + ltid_43006;
    bool cond_43019 = slt64(gtid_43017, m_30057);
    int32_t postlude_43020;
    int32_t postlude_43021;
    float postlude_43022;
    
    if (cond_43019) {
        float defunc_0_f_res_43018 = mem_44455[0];
        int32_t defunc_0_f_res_43024;
        int32_t redout_43293 = 0;
        
        for (int32_t i_43367 = 0; i_43367 < n_30061; i_43367++) {
            int64_t i_43294 = sext_i32_i64(i_43367);
            float x_43028 = ((__global float *) mem_43947)[i_43294 * m_30057 +
                                                           gtid_43017];
            bool isnan_res_43029;
            
            isnan_res_43029 = futrts_isnan32(x_43028);
            
            bool cond_43030 = !isnan_res_43029;
            int32_t defunc_0_f_res_43031 = btoi_bool_i32(cond_43030);
            int32_t defunc_1_op_res_43027 = add32(defunc_0_f_res_43031,
                                                  redout_43293);
            int32_t redout_tmp_45209 = defunc_1_op_res_43027;
            
            redout_43293 = redout_tmp_45209;
        }
        defunc_0_f_res_43024 = redout_43293;
        
        int32_t r32_arg_43032 = sub32(defunc_0_f_res_43024, k2p2_30072);
        float i32_res_43033 = sitofp_i32_f32(r32_arg_43032);
        float sqrt_arg_43034 = defunc_0_f_res_43018 / i32_res_43033;
        float sqrt_res_43035;
        
        sqrt_res_43035 = futrts_sqrt32(sqrt_arg_43034);
        
        float i32_res_43036 = sitofp_i32_f32(defunc_0_f_res_43024);
        float t32_arg_43037 = hfrac_30063 * i32_res_43036;
        int32_t f32_res_43038 = fptosi_f32_i32(t32_arg_43037);
        
        postlude_43020 = f32_res_43038;
        postlude_43021 = defunc_0_f_res_43024;
        postlude_43022 = sqrt_res_43035;
    } else {
        postlude_43020 = 0;
        postlude_43021 = 0;
        postlude_43022 = 0.0F;
    }
    mem_43988[0] = postlude_43020;
    mem_43990[0] = postlude_43021;
    mem_43992[0] = postlude_43022;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45198) + segmap_group_sizze_34091 *
              sext_i32_i64(group_tid_45199), m_30057)) {
        ((__global int32_t *) mem_43994)[sext_i32_i64(local_tid_45198) +
                                         segmap_group_sizze_34091 *
                                         sext_i32_i64(group_tid_45199)] =
            mem_43988[0];
    }
    if (slt64(sext_i32_i64(local_tid_45198) + segmap_group_sizze_34091 *
              sext_i32_i64(group_tid_45199), m_30057)) {
        ((__global int32_t *) mem_43996)[sext_i32_i64(local_tid_45198) +
                                         segmap_group_sizze_34091 *
                                         sext_i32_i64(group_tid_45199)] =
            mem_43990[0];
    }
    if (slt64(sext_i32_i64(local_tid_45198) + segmap_group_sizze_34091 *
              sext_i32_i64(group_tid_45199), m_30057)) {
        ((__global float *) mem_43998)[sext_i32_i64(local_tid_45198) +
                                       segmap_group_sizze_34091 *
                                       sext_i32_i64(group_tid_45199)] =
            mem_43992[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_34091
}
__kernel void mainDetailedzisegmap_intragroup_43046(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44059_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44046_backing_aligned_1,
                                                    int64_t N_30056,
                                                    int64_t m_30057,
                                                    int64_t i32_res_30418,
                                                    int64_t num_whole_tiles_43066,
                                                    int64_t residual_input_43165,
                                                    unsigned char cond_43166,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43943,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44022,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44023,
                                                    __global
                                                    unsigned char *mem_44069)
{
    #define segmap_group_sizze_34328 (mainDetailedzisegmap_group_sizze_34309)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44059_backing_5 = (__local volatile
                                                           char *) mem_44059_backing_aligned_0;
    __local volatile char *restrict mem_44046_backing_0 = (__local volatile
                                                           char *) mem_44046_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45383;
    int32_t local_tid_45384;
    int64_t group_sizze_45387;
    int32_t wave_sizze_45386;
    int32_t group_tid_45385;
    
    global_tid_45383 = get_global_id(0);
    local_tid_45384 = get_local_id(0);
    group_sizze_45387 = get_local_size(0);
    wave_sizze_45386 = LOCKSTEP_WIDTH;
    group_tid_45385 = get_group_id(0);
    
    int32_t gid_flat_43046;
    
    gid_flat_43046 = group_tid_45385;
    
    int32_t ltid_pre_45388;
    
    ltid_pre_45388 = local_tid_45384;
    
    int64_t gid_43045;
    
    gid_43045 = sext_i32_i64(group_tid_45385);
    
    int64_t binop_x_43055;
    
    binop_x_43055 = segmap_group_sizze_34328 * gid_43045;
    
    int32_t mem_44031[1];
    int32_t mem_44033[1];
    int64_t ltid_43047 = sext_i32_i64(ltid_pre_45388);
    int32_t ltid_flat_43048 = local_tid_45384;
    int64_t gtid_43056 = ltid_43047 + binop_x_43055;
    bool cond_43057 = slt64(gtid_43056, m_30057);
    int32_t pre_43058;
    int32_t pre_43059;
    
    if (cond_43057) {
        int32_t x_43060 = ((__global
                            int32_t *) defunc_3_map_res_mem_44023)[gtid_43056];
        int32_t x_43061 = ((__global
                            int32_t *) defunc_3_map_res_mem_44022)[gtid_43056];
        
        pre_43058 = x_43060;
        pre_43059 = x_43061;
    } else {
        pre_43058 = 0;
        pre_43059 = 0;
    }
    mem_44031[0] = pre_43058;
    mem_44033[0] = pre_43059;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_44036[1];
    int64_t ltid_43067 = sext_i32_i64(ltid_pre_45388);
    int32_t ltid_flat_43068 = local_tid_45384;
    
    mem_44036[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44046;
    
    mem_44046 = (__local char *) mem_44046_backing_0;
    
    float accs_mem_44056[1];
    float mem_param_44041[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44041[i_1] = mem_44036[i_1];
    for (int64_t tile_id_43074 = 0; tile_id_43074 < num_whole_tiles_43066;
         tile_id_43074++) {
        int64_t binop_x_43123 = segmap_group_sizze_34328 * tile_id_43074;
        int64_t ltid_43075 = sext_i32_i64(ltid_pre_45388);
        int32_t ltid_flat_43076 = local_tid_45384;
        int64_t j_43124 = ltid_43075 + binop_x_43123;
        bool cond_43129 = slt64(j_43124, i32_res_30418);
        int32_t pre_43130;
        
        if (cond_43129) {
            int32_t index_primexp_43231 = sext_i64_i32(j_43124);
            int32_t tile_elem_43131 = index_primexp_43231;
            
            pre_43130 = tile_elem_43131;
        } else {
            pre_43130 = 0;
        }
        ((__local int32_t *) mem_44046)[ltid_43075] = pre_43130;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44049[1];
        int64_t ltid_43095 = sext_i32_i64(ltid_pre_45388);
        int32_t ltid_flat_43096 = local_tid_45384;
        int64_t gtid_43135 = binop_x_43055 + ltid_43095;
        float acc_43138 = mem_param_44041[0];
        bool cond_43139 = slt64(gtid_43135, m_30057);
        float acc_43140;
        
        if (cond_43139) {
            int32_t x_43136 = mem_44031[0];
            int32_t x_43137 = mem_44033[0];
            float x_43141;
            float redout_43295 = acc_43138;
            
            for (int64_t i_43296 = 0; i_43296 < segmap_group_sizze_34328;
                 i_43296++) {
                int32_t x_43145 = ((__local int32_t *) mem_44046)[i_43296];
                bool cond_43146 = slt32(x_43145, x_43137);
                float defunc_0_f_res_43147;
                
                if (cond_43146) {
                    int32_t x_43148 = add32(x_43136, x_43145);
                    int32_t x_43149 = sub32(x_43148, x_43137);
                    int32_t i_43150 = add32(1, x_43149);
                    int64_t i_43151 = sext_i32_i64(i_43150);
                    float defunc_0_f_res_t_res_43152 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_43135 *
                                                                                              N_30056 +
                                                                                              i_43151];
                    
                    defunc_0_f_res_43147 = defunc_0_f_res_t_res_43152;
                } else {
                    defunc_0_f_res_43147 = 0.0F;
                }
                
                float defunc_1_op_res_43144 = defunc_0_f_res_43147 +
                      redout_43295;
                float redout_tmp_45391 = defunc_1_op_res_43144;
                
                redout_43295 = redout_tmp_45391;
            }
            x_43141 = redout_43295;
            acc_43140 = x_43141;
        } else {
            acc_43140 = acc_43138;
        }
        mem_44049[0] = acc_43140;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45389[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45389[i_2] = mem_44049[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44041[i_3] = mem_param_tmp_45389[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44056[i_4] = mem_param_44041[i_4];
    
    __local char *mem_44059;
    
    mem_44059 = (__local char *) mem_44059_backing_5;
    
    float mem_44062[1];
    float mem_44464[1];
    
    if (cond_43166) {
        mem_44464[0] = accs_mem_44056[0];
    } else {
        int64_t binop_x_43176 = segmap_group_sizze_34328 *
                num_whole_tiles_43066;
        int64_t ltid_43167 = sext_i32_i64(ltid_pre_45388);
        int32_t ltid_flat_43168 = local_tid_45384;
        int64_t j_43177 = ltid_43167 + binop_x_43176;
        bool cond_43182 = slt64(j_43177, i32_res_30418);
        int32_t pre_43183;
        
        if (cond_43182) {
            int32_t index_primexp_43232 = sext_i64_i32(j_43177);
            int32_t tile_elem_43184 = index_primexp_43232;
            
            pre_43183 = tile_elem_43184;
        } else {
            pre_43183 = 0;
        }
        ((__local int32_t *) mem_44059)[ltid_43167] = pre_43183;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43188 = sext_i32_i64(ltid_pre_45388);
        int32_t ltid_flat_43189 = local_tid_45384;
        int64_t gtid_43196 = binop_x_43055 + ltid_43188;
        float acc_43199 = accs_mem_44056[0];
        bool cond_43200 = slt64(gtid_43196, m_30057);
        float acc_43201;
        
        if (cond_43200) {
            int32_t x_43197 = mem_44031[0];
            int32_t x_43198 = mem_44033[0];
            float x_43202;
            float redout_43297 = acc_43199;
            
            for (int64_t i_43298 = 0; i_43298 < residual_input_43165;
                 i_43298++) {
                int32_t x_43206 = ((__local int32_t *) mem_44059)[i_43298];
                bool cond_43207 = slt32(x_43206, x_43198);
                float defunc_0_f_res_43208;
                
                if (cond_43207) {
                    int32_t x_43209 = add32(x_43197, x_43206);
                    int32_t x_43210 = sub32(x_43209, x_43198);
                    int32_t i_43211 = add32(1, x_43210);
                    int64_t i_43212 = sext_i32_i64(i_43211);
                    float defunc_0_f_res_t_res_43213 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_43196 *
                                                                                              N_30056 +
                                                                                              i_43212];
                    
                    defunc_0_f_res_43208 = defunc_0_f_res_t_res_43213;
                } else {
                    defunc_0_f_res_43208 = 0.0F;
                }
                
                float defunc_1_op_res_43205 = defunc_0_f_res_43208 +
                      redout_43297;
                float redout_tmp_45392 = defunc_1_op_res_43205;
                
                redout_43297 = redout_tmp_45392;
            }
            x_43202 = redout_43297;
            acc_43201 = x_43202;
        } else {
            acc_43201 = acc_43199;
        }
        mem_44062[0] = acc_43201;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44464[0] = mem_44062[0];
    }
    if (slt64(sext_i32_i64(local_tid_45384) + segmap_group_sizze_34328 *
              sext_i32_i64(group_tid_45385), m_30057)) {
        ((__global float *) mem_44069)[sext_i32_i64(local_tid_45384) +
                                       segmap_group_sizze_34328 *
                                       sext_i32_i64(group_tid_45385)] =
            mem_44464[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_34328
}
__kernel void mainDetailedzisegred_large_32177(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44737_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44735_backing_aligned_1,
                                               int64_t N_30056, int64_t N_30058,
                                               int64_t i32_res_30070,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_32316,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43526,
                                               __global
                                               unsigned char *mem_43531,
                                               int64_t groups_per_segment_44721,
                                               int64_t elements_per_thread_44722,
                                               int64_t virt_num_groups_44723,
                                               int64_t threads_per_segment_44725,
                                               __global
                                               unsigned char *group_res_arr_mem_44726,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44728)
{
    #define segred_group_sizze_32315 (mainDetailedzisegred_group_sizze_32171)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44737_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44737_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44735_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44735_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44730;
    int32_t local_tid_44731;
    int64_t group_sizze_44734;
    int32_t wave_sizze_44733;
    int32_t group_tid_44732;
    
    global_tid_44730 = get_global_id(0);
    local_tid_44731 = get_local_id(0);
    group_sizze_44734 = get_local_size(0);
    wave_sizze_44733 = LOCKSTEP_WIDTH;
    group_tid_44732 = get_group_id(0);
    
    int32_t phys_tid_32177;
    
    phys_tid_32177 = global_tid_44730;
    
    __local char *red_arr_mem_44735;
    
    red_arr_mem_44735 = (__local char *) red_arr_mem_44735_backing_0;
    
    __local char *sync_arr_mem_44737;
    
    sync_arr_mem_44737 = (__local char *) sync_arr_mem_44737_backing_1;
    
    int32_t phys_group_id_44739;
    
    phys_group_id_44739 = get_group_id(0);
    for (int32_t i_44740 = 0; i_44740 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44723) - phys_group_id_44739,
                   sext_i64_i32(num_groups_32316)); i_44740++) {
        int32_t virt_group_id_44741 = phys_group_id_44739 + i_44740 *
                sext_i64_i32(num_groups_32316);
        int32_t flat_segment_id_44742 = squot32(virt_group_id_44741,
                                                sext_i64_i32(groups_per_segment_44721));
        int64_t global_tid_44743 = srem64(sext_i32_i64(virt_group_id_44741) *
                                          segred_group_sizze_32315 +
                                          sext_i32_i64(local_tid_44731),
                                          segred_group_sizze_32315 *
                                          groups_per_segment_44721);
        int64_t gtid_32164 = squot64(sext_i32_i64(flat_segment_id_44742),
                                     i32_res_30076 * i32_res_30076);
        int64_t gtid_32165 = squot64(sext_i32_i64(flat_segment_id_44742) -
                                     squot64(sext_i32_i64(flat_segment_id_44742),
                                             i32_res_30076 * i32_res_30076) *
                                     (i32_res_30076 * i32_res_30076),
                                     i32_res_30076);
        int64_t gtid_32166 = sext_i32_i64(flat_segment_id_44742) -
                squot64(sext_i32_i64(flat_segment_id_44742), i32_res_30076 *
                        i32_res_30076) * (i32_res_30076 * i32_res_30076) -
                squot64(sext_i32_i64(flat_segment_id_44742) -
                        squot64(sext_i32_i64(flat_segment_id_44742),
                                i32_res_30076 * i32_res_30076) *
                        (i32_res_30076 * i32_res_30076), i32_res_30076) *
                i32_res_30076;
        int64_t gtid_32176;
        float x_acc_44744;
        int64_t chunk_sizze_44745;
        
        chunk_sizze_44745 = smin64(elements_per_thread_44722,
                                   sdiv_up64(i32_res_30070 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44743)),
                                             threads_per_segment_44725));
        
        float x_32319;
        float x_32320;
        
        // neutral-initialise the accumulators
        {
            x_acc_44744 = 0.0F;
        }
        for (int64_t i_44749 = 0; i_44749 < chunk_sizze_44745; i_44749++) {
            gtid_32176 = sext_i32_i64(sext_i64_i32(global_tid_44743)) +
                threads_per_segment_44725 * i_44749;
            // apply map function
            {
                float x_32325 = ((__global
                                  float *) images_mem_43378)[gtid_32164 *
                                                             N_30058 +
                                                             gtid_32176];
                float x_32326 = ((__global
                                  float *) binop_p_mem_43387)[gtid_32165 *
                                                              N_30056 +
                                                              gtid_32176];
                float x_32327 = ((__global float *) mem_43526)[gtid_32166 *
                                                               N_30056 +
                                                               gtid_32176];
                float x_32328 = x_32326 * x_32327;
                bool isnan_res_32329;
                
                isnan_res_32329 = futrts_isnan32(x_32325);
                
                float y_32330;
                
                if (isnan_res_32329) {
                    y_32330 = 0.0F;
                } else {
                    y_32330 = 1.0F;
                }
                
                float defunc_2_f_res_32331 = x_32328 * y_32330;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32319 = x_acc_44744;
                }
                // load new values
                {
                    x_32320 = defunc_2_f_res_32331;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32321 = x_32319 + x_32320;
                    
                    // store in accumulator
                    {
                        x_acc_44744 = defunc_1_op_res_32321;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32319 = x_acc_44744;
            ((__local
              float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731)] =
                x_32319;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44750;
        int32_t skip_waves_44751;
        
        skip_waves_44751 = 1;
        
        float x_44746;
        float x_44747;
        
        offset_44750 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44731,
                      sext_i64_i32(segred_group_sizze_32315))) {
                x_44746 = ((__local
                            float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731 +
                                                        offset_44750)];
            }
        }
        offset_44750 = 1;
        while (slt32(offset_44750, wave_sizze_44733)) {
            if (slt32(local_tid_44731 + offset_44750,
                      sext_i64_i32(segred_group_sizze_32315)) &&
                ((local_tid_44731 - squot32(local_tid_44731, wave_sizze_44733) *
                  wave_sizze_44733) & (2 * offset_44750 - 1)) == 0) {
                // read array element
                {
                    x_44747 = ((volatile __local
                                float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731 +
                                                            offset_44750)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44748 = x_44746 + x_44747;
                    
                    x_44746 = defunc_1_op_res_44748;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731)] =
                        x_44746;
                }
            }
            offset_44750 *= 2;
        }
        while (slt32(skip_waves_44751,
                     squot32(sext_i64_i32(segred_group_sizze_32315) +
                             wave_sizze_44733 - 1, wave_sizze_44733))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44750 = skip_waves_44751 * wave_sizze_44733;
            if (slt32(local_tid_44731 + offset_44750,
                      sext_i64_i32(segred_group_sizze_32315)) &&
                ((local_tid_44731 - squot32(local_tid_44731, wave_sizze_44733) *
                  wave_sizze_44733) == 0 && (squot32(local_tid_44731,
                                                     wave_sizze_44733) & (2 *
                                                                          skip_waves_44751 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44747 = ((__local
                                float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731 +
                                                            offset_44750)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44748 = x_44746 + x_44747;
                    
                    x_44746 = defunc_1_op_res_44748;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731)] =
                        x_44746;
                }
            }
            skip_waves_44751 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44731) == 0) {
                x_acc_44744 = x_44746;
            }
        }
        if (groups_per_segment_44721 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44731 == 0) {
                    ((__global float *) mem_43531)[gtid_32164 * (i32_res_30076 *
                                                                 i32_res_30076) +
                                                   gtid_32165 * i32_res_30076 +
                                                   gtid_32166] = x_acc_44744;
                }
            }
        } else {
            int32_t old_counter_44752;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44731 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44726)[sext_i32_i64(virt_group_id_44741) *
                                                        segred_group_sizze_32315] =
                        x_acc_44744;
                    mem_fence_global();
                    old_counter_44752 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44728)[sext_i32_i64(srem32(flat_segment_id_44742,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44737)[0] =
                        old_counter_44752 == groups_per_segment_44721 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44753;
            
            is_last_group_44753 = ((__local bool *) sync_arr_mem_44737)[0];
            if (is_last_group_44753) {
                if (local_tid_44731 == 0) {
                    old_counter_44752 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44728)[sext_i32_i64(srem32(flat_segment_id_44742,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44721));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44754 =
                            sdiv_up64(groups_per_segment_44721,
                                      segred_group_sizze_32315);
                    
                    x_32319 = 0.0F;
                    for (int64_t i_44755 = 0; i_44755 < read_per_thread_44754;
                         i_44755++) {
                        int64_t group_res_id_44756 =
                                sext_i32_i64(local_tid_44731) *
                                read_per_thread_44754 + i_44755;
                        int64_t index_of_group_res_44757 =
                                sext_i32_i64(flat_segment_id_44742) *
                                groups_per_segment_44721 + group_res_id_44756;
                        
                        if (slt64(group_res_id_44756,
                                  groups_per_segment_44721)) {
                            x_32320 = ((__global
                                        float *) group_res_arr_mem_44726)[index_of_group_res_44757 *
                                                                          segred_group_sizze_32315];
                            
                            float defunc_1_op_res_32321;
                            
                            defunc_1_op_res_32321 = x_32319 + x_32320;
                            x_32319 = defunc_1_op_res_32321;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731)] =
                    x_32319;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44758;
                    int32_t skip_waves_44759;
                    
                    skip_waves_44759 = 1;
                    
                    float x_44746;
                    float x_44747;
                    
                    offset_44758 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44731,
                                  sext_i64_i32(segred_group_sizze_32315))) {
                            x_44746 = ((__local
                                        float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731 +
                                                                    offset_44758)];
                        }
                    }
                    offset_44758 = 1;
                    while (slt32(offset_44758, wave_sizze_44733)) {
                        if (slt32(local_tid_44731 + offset_44758,
                                  sext_i64_i32(segred_group_sizze_32315)) &&
                            ((local_tid_44731 - squot32(local_tid_44731,
                                                        wave_sizze_44733) *
                              wave_sizze_44733) & (2 * offset_44758 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44747 = ((volatile __local
                                            float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731 +
                                                                        offset_44758)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44748 = x_44746 + x_44747;
                                
                                x_44746 = defunc_1_op_res_44748;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731)] =
                                    x_44746;
                            }
                        }
                        offset_44758 *= 2;
                    }
                    while (slt32(skip_waves_44759,
                                 squot32(sext_i64_i32(segred_group_sizze_32315) +
                                         wave_sizze_44733 - 1,
                                         wave_sizze_44733))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44758 = skip_waves_44759 * wave_sizze_44733;
                        if (slt32(local_tid_44731 + offset_44758,
                                  sext_i64_i32(segred_group_sizze_32315)) &&
                            ((local_tid_44731 - squot32(local_tid_44731,
                                                        wave_sizze_44733) *
                              wave_sizze_44733) == 0 &&
                             (squot32(local_tid_44731, wave_sizze_44733) & (2 *
                                                                            skip_waves_44759 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44747 = ((__local
                                            float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731 +
                                                                        offset_44758)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44748 = x_44746 + x_44747;
                                
                                x_44746 = defunc_1_op_res_44748;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44735)[sext_i32_i64(local_tid_44731)] =
                                    x_44746;
                            }
                        }
                        skip_waves_44759 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44731 == 0) {
                            ((__global float *) mem_43531)[gtid_32164 *
                                                           (i32_res_30076 *
                                                            i32_res_30076) +
                                                           gtid_32165 *
                                                           i32_res_30076 +
                                                           gtid_32166] =
                                x_44746;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32315
}
__kernel void mainDetailedzisegred_large_33350(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44891_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44889_backing_aligned_1,
                                               int64_t N_30056, int64_t N_30058,
                                               int64_t i32_res_30070,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_33403,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43712,
                                               int64_t groups_per_segment_44875,
                                               int64_t elements_per_thread_44876,
                                               int64_t virt_num_groups_44877,
                                               int64_t threads_per_segment_44879,
                                               __global
                                               unsigned char *group_res_arr_mem_44880,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44882)
{
    #define segred_group_sizze_33402 (mainDetailedzisegred_group_sizze_33344)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44891_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44891_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44889_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44889_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44884;
    int32_t local_tid_44885;
    int64_t group_sizze_44888;
    int32_t wave_sizze_44887;
    int32_t group_tid_44886;
    
    global_tid_44884 = get_global_id(0);
    local_tid_44885 = get_local_id(0);
    group_sizze_44888 = get_local_size(0);
    wave_sizze_44887 = LOCKSTEP_WIDTH;
    group_tid_44886 = get_group_id(0);
    
    int32_t phys_tid_33350;
    
    phys_tid_33350 = global_tid_44884;
    
    __local char *red_arr_mem_44889;
    
    red_arr_mem_44889 = (__local char *) red_arr_mem_44889_backing_0;
    
    __local char *sync_arr_mem_44891;
    
    sync_arr_mem_44891 = (__local char *) sync_arr_mem_44891_backing_1;
    
    int32_t phys_group_id_44893;
    
    phys_group_id_44893 = get_group_id(0);
    for (int32_t i_44894 = 0; i_44894 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44877) - phys_group_id_44893,
                   sext_i64_i32(num_groups_33403)); i_44894++) {
        int32_t virt_group_id_44895 = phys_group_id_44893 + i_44894 *
                sext_i64_i32(num_groups_33403);
        int32_t flat_segment_id_44896 = squot32(virt_group_id_44895,
                                                sext_i64_i32(groups_per_segment_44875));
        int64_t global_tid_44897 = srem64(sext_i32_i64(virt_group_id_44895) *
                                          segred_group_sizze_33402 +
                                          sext_i32_i64(local_tid_44885),
                                          segred_group_sizze_33402 *
                                          groups_per_segment_44875);
        int64_t gtid_33339 = squot64(sext_i32_i64(flat_segment_id_44896),
                                     i32_res_30076);
        int64_t gtid_33340 = sext_i32_i64(flat_segment_id_44896) -
                squot64(sext_i32_i64(flat_segment_id_44896), i32_res_30076) *
                i32_res_30076;
        int64_t gtid_33349;
        float x_acc_44898;
        int64_t chunk_sizze_44899;
        
        chunk_sizze_44899 = smin64(elements_per_thread_44876,
                                   sdiv_up64(i32_res_30070 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44897)),
                                             threads_per_segment_44879));
        
        float x_33406;
        float x_33407;
        
        // neutral-initialise the accumulators
        {
            x_acc_44898 = 0.0F;
        }
        for (int64_t i_44903 = 0; i_44903 < chunk_sizze_44899; i_44903++) {
            gtid_33349 = sext_i32_i64(sext_i64_i32(global_tid_44897)) +
                threads_per_segment_44879 * i_44903;
            // apply map function
            {
                float x_33412 = ((__global
                                  float *) images_mem_43378)[gtid_33339 *
                                                             N_30058 +
                                                             gtid_33349];
                bool isnan_res_33413;
                
                isnan_res_33413 = futrts_isnan32(x_33412);
                
                float defunc_1_f_res_33414;
                
                if (isnan_res_33413) {
                    defunc_1_f_res_33414 = 0.0F;
                } else {
                    float x_33411 = ((__global
                                      float *) binop_p_mem_43387)[gtid_33340 *
                                                                  N_30056 +
                                                                  gtid_33349];
                    float defunc_1_f_res_f_res_33415 = x_33411 * x_33412;
                    
                    defunc_1_f_res_33414 = defunc_1_f_res_f_res_33415;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_33406 = x_acc_44898;
                }
                // load new values
                {
                    x_33407 = defunc_1_f_res_33414;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33408 = x_33406 + x_33407;
                    
                    // store in accumulator
                    {
                        x_acc_44898 = defunc_1_op_res_33408;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33406 = x_acc_44898;
            ((__local
              float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885)] =
                x_33406;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44904;
        int32_t skip_waves_44905;
        
        skip_waves_44905 = 1;
        
        float x_44900;
        float x_44901;
        
        offset_44904 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44885,
                      sext_i64_i32(segred_group_sizze_33402))) {
                x_44900 = ((__local
                            float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885 +
                                                        offset_44904)];
            }
        }
        offset_44904 = 1;
        while (slt32(offset_44904, wave_sizze_44887)) {
            if (slt32(local_tid_44885 + offset_44904,
                      sext_i64_i32(segred_group_sizze_33402)) &&
                ((local_tid_44885 - squot32(local_tid_44885, wave_sizze_44887) *
                  wave_sizze_44887) & (2 * offset_44904 - 1)) == 0) {
                // read array element
                {
                    x_44901 = ((volatile __local
                                float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885 +
                                                            offset_44904)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44902 = x_44900 + x_44901;
                    
                    x_44900 = defunc_1_op_res_44902;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885)] =
                        x_44900;
                }
            }
            offset_44904 *= 2;
        }
        while (slt32(skip_waves_44905,
                     squot32(sext_i64_i32(segred_group_sizze_33402) +
                             wave_sizze_44887 - 1, wave_sizze_44887))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44904 = skip_waves_44905 * wave_sizze_44887;
            if (slt32(local_tid_44885 + offset_44904,
                      sext_i64_i32(segred_group_sizze_33402)) &&
                ((local_tid_44885 - squot32(local_tid_44885, wave_sizze_44887) *
                  wave_sizze_44887) == 0 && (squot32(local_tid_44885,
                                                     wave_sizze_44887) & (2 *
                                                                          skip_waves_44905 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44901 = ((__local
                                float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885 +
                                                            offset_44904)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44902 = x_44900 + x_44901;
                    
                    x_44900 = defunc_1_op_res_44902;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885)] =
                        x_44900;
                }
            }
            skip_waves_44905 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44885) == 0) {
                x_acc_44898 = x_44900;
            }
        }
        if (groups_per_segment_44875 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44885 == 0) {
                    ((__global float *) mem_43712)[gtid_33339 * i32_res_30076 +
                                                   gtid_33340] = x_acc_44898;
                }
            }
        } else {
            int32_t old_counter_44906;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44885 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44880)[sext_i32_i64(virt_group_id_44895) *
                                                        segred_group_sizze_33402] =
                        x_acc_44898;
                    mem_fence_global();
                    old_counter_44906 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44882)[sext_i32_i64(srem32(flat_segment_id_44896,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44891)[0] =
                        old_counter_44906 == groups_per_segment_44875 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44907;
            
            is_last_group_44907 = ((__local bool *) sync_arr_mem_44891)[0];
            if (is_last_group_44907) {
                if (local_tid_44885 == 0) {
                    old_counter_44906 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44882)[sext_i32_i64(srem32(flat_segment_id_44896,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44875));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44908 =
                            sdiv_up64(groups_per_segment_44875,
                                      segred_group_sizze_33402);
                    
                    x_33406 = 0.0F;
                    for (int64_t i_44909 = 0; i_44909 < read_per_thread_44908;
                         i_44909++) {
                        int64_t group_res_id_44910 =
                                sext_i32_i64(local_tid_44885) *
                                read_per_thread_44908 + i_44909;
                        int64_t index_of_group_res_44911 =
                                sext_i32_i64(flat_segment_id_44896) *
                                groups_per_segment_44875 + group_res_id_44910;
                        
                        if (slt64(group_res_id_44910,
                                  groups_per_segment_44875)) {
                            x_33407 = ((__global
                                        float *) group_res_arr_mem_44880)[index_of_group_res_44911 *
                                                                          segred_group_sizze_33402];
                            
                            float defunc_1_op_res_33408;
                            
                            defunc_1_op_res_33408 = x_33406 + x_33407;
                            x_33406 = defunc_1_op_res_33408;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885)] =
                    x_33406;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44912;
                    int32_t skip_waves_44913;
                    
                    skip_waves_44913 = 1;
                    
                    float x_44900;
                    float x_44901;
                    
                    offset_44912 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44885,
                                  sext_i64_i32(segred_group_sizze_33402))) {
                            x_44900 = ((__local
                                        float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885 +
                                                                    offset_44912)];
                        }
                    }
                    offset_44912 = 1;
                    while (slt32(offset_44912, wave_sizze_44887)) {
                        if (slt32(local_tid_44885 + offset_44912,
                                  sext_i64_i32(segred_group_sizze_33402)) &&
                            ((local_tid_44885 - squot32(local_tid_44885,
                                                        wave_sizze_44887) *
                              wave_sizze_44887) & (2 * offset_44912 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44901 = ((volatile __local
                                            float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885 +
                                                                        offset_44912)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44902 = x_44900 + x_44901;
                                
                                x_44900 = defunc_1_op_res_44902;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885)] =
                                    x_44900;
                            }
                        }
                        offset_44912 *= 2;
                    }
                    while (slt32(skip_waves_44913,
                                 squot32(sext_i64_i32(segred_group_sizze_33402) +
                                         wave_sizze_44887 - 1,
                                         wave_sizze_44887))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44912 = skip_waves_44913 * wave_sizze_44887;
                        if (slt32(local_tid_44885 + offset_44912,
                                  sext_i64_i32(segred_group_sizze_33402)) &&
                            ((local_tid_44885 - squot32(local_tid_44885,
                                                        wave_sizze_44887) *
                              wave_sizze_44887) == 0 &&
                             (squot32(local_tid_44885, wave_sizze_44887) & (2 *
                                                                            skip_waves_44913 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44901 = ((__local
                                            float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885 +
                                                                        offset_44912)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44902 = x_44900 + x_44901;
                                
                                x_44900 = defunc_1_op_res_44902;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44889)[sext_i32_i64(local_tid_44885)] =
                                    x_44900;
                            }
                        }
                        skip_waves_44913 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44885 == 0) {
                            ((__global float *) mem_43712)[gtid_33339 *
                                                           i32_res_30076 +
                                                           gtid_33340] =
                                x_44900;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33402
}
__kernel void mainDetailedzisegred_large_33487(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44979_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44977_backing_aligned_1,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_33536,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43627,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43718,
                                               __global
                                               unsigned char *mem_43805,
                                               int64_t groups_per_segment_44963,
                                               int64_t elements_per_thread_44964,
                                               int64_t virt_num_groups_44965,
                                               int64_t threads_per_segment_44967,
                                               __global
                                               unsigned char *group_res_arr_mem_44968,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44970)
{
    #define segred_group_sizze_33535 (mainDetailedzisegred_group_sizze_33481)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44979_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44979_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44977_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44977_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44972;
    int32_t local_tid_44973;
    int64_t group_sizze_44976;
    int32_t wave_sizze_44975;
    int32_t group_tid_44974;
    
    global_tid_44972 = get_global_id(0);
    local_tid_44973 = get_local_id(0);
    group_sizze_44976 = get_local_size(0);
    wave_sizze_44975 = LOCKSTEP_WIDTH;
    group_tid_44974 = get_group_id(0);
    
    int32_t phys_tid_33487;
    
    phys_tid_33487 = global_tid_44972;
    
    __local char *red_arr_mem_44977;
    
    red_arr_mem_44977 = (__local char *) red_arr_mem_44977_backing_0;
    
    __local char *sync_arr_mem_44979;
    
    sync_arr_mem_44979 = (__local char *) sync_arr_mem_44979_backing_1;
    
    int32_t phys_group_id_44981;
    
    phys_group_id_44981 = get_group_id(0);
    for (int32_t i_44982 = 0; i_44982 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44965) - phys_group_id_44981,
                   sext_i64_i32(num_groups_33536)); i_44982++) {
        int32_t virt_group_id_44983 = phys_group_id_44981 + i_44982 *
                sext_i64_i32(num_groups_33536);
        int32_t flat_segment_id_44984 = squot32(virt_group_id_44983,
                                                sext_i64_i32(groups_per_segment_44963));
        int64_t global_tid_44985 = srem64(sext_i32_i64(virt_group_id_44983) *
                                          segred_group_sizze_33535 +
                                          sext_i32_i64(local_tid_44973),
                                          segred_group_sizze_33535 *
                                          groups_per_segment_44963);
        int64_t gtid_33476 = squot64(sext_i32_i64(flat_segment_id_44984),
                                     i32_res_30076);
        int64_t gtid_33477 = sext_i32_i64(flat_segment_id_44984) -
                squot64(sext_i32_i64(flat_segment_id_44984), i32_res_30076) *
                i32_res_30076;
        int64_t gtid_33486;
        float x_acc_44986;
        int64_t chunk_sizze_44987;
        
        chunk_sizze_44987 = smin64(elements_per_thread_44964,
                                   sdiv_up64(i32_res_30076 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44985)),
                                             threads_per_segment_44967));
        
        float x_33539;
        float x_33540;
        
        // neutral-initialise the accumulators
        {
            x_acc_44986 = 0.0F;
        }
        for (int64_t i_44991 = 0; i_44991 < chunk_sizze_44987; i_44991++) {
            gtid_33486 = sext_i32_i64(sext_i64_i32(global_tid_44985)) +
                threads_per_segment_44967 * i_44991;
            // apply map function
            {
                float x_33545 = ((__global
                                  float *) defunc_3_map_res_mem_43718)[gtid_33476 *
                                                                       i32_res_30076 +
                                                                       gtid_33486];
                float x_33546 = ((__global
                                  float *) defunc_3_map_res_mem_43627)[gtid_33476 *
                                                                       (i32_res_30076 *
                                                                        i32_res_30076) +
                                                                       gtid_33477 *
                                                                       i32_res_30076 +
                                                                       gtid_33486];
                float defunc_1_f_res_33547 = x_33545 * x_33546;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_33539 = x_acc_44986;
                }
                // load new values
                {
                    x_33540 = defunc_1_f_res_33547;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33541 = x_33539 + x_33540;
                    
                    // store in accumulator
                    {
                        x_acc_44986 = defunc_1_op_res_33541;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33539 = x_acc_44986;
            ((__local
              float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973)] =
                x_33539;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44992;
        int32_t skip_waves_44993;
        
        skip_waves_44993 = 1;
        
        float x_44988;
        float x_44989;
        
        offset_44992 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44973,
                      sext_i64_i32(segred_group_sizze_33535))) {
                x_44988 = ((__local
                            float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973 +
                                                        offset_44992)];
            }
        }
        offset_44992 = 1;
        while (slt32(offset_44992, wave_sizze_44975)) {
            if (slt32(local_tid_44973 + offset_44992,
                      sext_i64_i32(segred_group_sizze_33535)) &&
                ((local_tid_44973 - squot32(local_tid_44973, wave_sizze_44975) *
                  wave_sizze_44975) & (2 * offset_44992 - 1)) == 0) {
                // read array element
                {
                    x_44989 = ((volatile __local
                                float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973 +
                                                            offset_44992)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44990 = x_44988 + x_44989;
                    
                    x_44988 = defunc_1_op_res_44990;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973)] =
                        x_44988;
                }
            }
            offset_44992 *= 2;
        }
        while (slt32(skip_waves_44993,
                     squot32(sext_i64_i32(segred_group_sizze_33535) +
                             wave_sizze_44975 - 1, wave_sizze_44975))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44992 = skip_waves_44993 * wave_sizze_44975;
            if (slt32(local_tid_44973 + offset_44992,
                      sext_i64_i32(segred_group_sizze_33535)) &&
                ((local_tid_44973 - squot32(local_tid_44973, wave_sizze_44975) *
                  wave_sizze_44975) == 0 && (squot32(local_tid_44973,
                                                     wave_sizze_44975) & (2 *
                                                                          skip_waves_44993 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44989 = ((__local
                                float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973 +
                                                            offset_44992)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44990 = x_44988 + x_44989;
                    
                    x_44988 = defunc_1_op_res_44990;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973)] =
                        x_44988;
                }
            }
            skip_waves_44993 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44973) == 0) {
                x_acc_44986 = x_44988;
            }
        }
        if (groups_per_segment_44963 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44973 == 0) {
                    ((__global float *) mem_43805)[gtid_33476 * i32_res_30076 +
                                                   gtid_33477] = x_acc_44986;
                }
            }
        } else {
            int32_t old_counter_44994;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44973 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44968)[sext_i32_i64(virt_group_id_44983) *
                                                        segred_group_sizze_33535] =
                        x_acc_44986;
                    mem_fence_global();
                    old_counter_44994 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44970)[sext_i32_i64(srem32(flat_segment_id_44984,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44979)[0] =
                        old_counter_44994 == groups_per_segment_44963 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44995;
            
            is_last_group_44995 = ((__local bool *) sync_arr_mem_44979)[0];
            if (is_last_group_44995) {
                if (local_tid_44973 == 0) {
                    old_counter_44994 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44970)[sext_i32_i64(srem32(flat_segment_id_44984,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44963));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44996 =
                            sdiv_up64(groups_per_segment_44963,
                                      segred_group_sizze_33535);
                    
                    x_33539 = 0.0F;
                    for (int64_t i_44997 = 0; i_44997 < read_per_thread_44996;
                         i_44997++) {
                        int64_t group_res_id_44998 =
                                sext_i32_i64(local_tid_44973) *
                                read_per_thread_44996 + i_44997;
                        int64_t index_of_group_res_44999 =
                                sext_i32_i64(flat_segment_id_44984) *
                                groups_per_segment_44963 + group_res_id_44998;
                        
                        if (slt64(group_res_id_44998,
                                  groups_per_segment_44963)) {
                            x_33540 = ((__global
                                        float *) group_res_arr_mem_44968)[index_of_group_res_44999 *
                                                                          segred_group_sizze_33535];
                            
                            float defunc_1_op_res_33541;
                            
                            defunc_1_op_res_33541 = x_33539 + x_33540;
                            x_33539 = defunc_1_op_res_33541;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973)] =
                    x_33539;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45000;
                    int32_t skip_waves_45001;
                    
                    skip_waves_45001 = 1;
                    
                    float x_44988;
                    float x_44989;
                    
                    offset_45000 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44973,
                                  sext_i64_i32(segred_group_sizze_33535))) {
                            x_44988 = ((__local
                                        float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973 +
                                                                    offset_45000)];
                        }
                    }
                    offset_45000 = 1;
                    while (slt32(offset_45000, wave_sizze_44975)) {
                        if (slt32(local_tid_44973 + offset_45000,
                                  sext_i64_i32(segred_group_sizze_33535)) &&
                            ((local_tid_44973 - squot32(local_tid_44973,
                                                        wave_sizze_44975) *
                              wave_sizze_44975) & (2 * offset_45000 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44989 = ((volatile __local
                                            float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973 +
                                                                        offset_45000)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44990 = x_44988 + x_44989;
                                
                                x_44988 = defunc_1_op_res_44990;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973)] =
                                    x_44988;
                            }
                        }
                        offset_45000 *= 2;
                    }
                    while (slt32(skip_waves_45001,
                                 squot32(sext_i64_i32(segred_group_sizze_33535) +
                                         wave_sizze_44975 - 1,
                                         wave_sizze_44975))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45000 = skip_waves_45001 * wave_sizze_44975;
                        if (slt32(local_tid_44973 + offset_45000,
                                  sext_i64_i32(segred_group_sizze_33535)) &&
                            ((local_tid_44973 - squot32(local_tid_44973,
                                                        wave_sizze_44975) *
                              wave_sizze_44975) == 0 &&
                             (squot32(local_tid_44973, wave_sizze_44975) & (2 *
                                                                            skip_waves_45001 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44989 = ((__local
                                            float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973 +
                                                                        offset_45000)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44990 = x_44988 + x_44989;
                                
                                x_44988 = defunc_1_op_res_44990;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44977)[sext_i32_i64(local_tid_44973)] =
                                    x_44988;
                            }
                        }
                        skip_waves_45001 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44973 == 0) {
                            ((__global float *) mem_43805)[gtid_33476 *
                                                           i32_res_30076 +
                                                           gtid_33477] =
                                x_44988;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33535
}
__kernel void mainDetailedzisegred_large_33617(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45067_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45065_backing_aligned_1,
                                               int64_t N_30056,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_33664,
                                               __global
                                               unsigned char *mem_43394,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43811,
                                               __global
                                               unsigned char *mem_43899,
                                               int64_t groups_per_segment_45051,
                                               int64_t elements_per_thread_45052,
                                               int64_t virt_num_groups_45053,
                                               int64_t threads_per_segment_45055,
                                               __global
                                               unsigned char *group_res_arr_mem_45056,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45058)
{
    #define segred_group_sizze_33663 (mainDetailedzisegred_group_sizze_33611)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45067_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45067_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45065_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45065_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45060;
    int32_t local_tid_45061;
    int64_t group_sizze_45064;
    int32_t wave_sizze_45063;
    int32_t group_tid_45062;
    
    global_tid_45060 = get_global_id(0);
    local_tid_45061 = get_local_id(0);
    group_sizze_45064 = get_local_size(0);
    wave_sizze_45063 = LOCKSTEP_WIDTH;
    group_tid_45062 = get_group_id(0);
    
    int32_t phys_tid_33617;
    
    phys_tid_33617 = global_tid_45060;
    
    __local char *red_arr_mem_45065;
    
    red_arr_mem_45065 = (__local char *) red_arr_mem_45065_backing_0;
    
    __local char *sync_arr_mem_45067;
    
    sync_arr_mem_45067 = (__local char *) sync_arr_mem_45067_backing_1;
    
    int32_t phys_group_id_45069;
    
    phys_group_id_45069 = get_group_id(0);
    for (int32_t i_45070 = 0; i_45070 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45053) - phys_group_id_45069,
                   sext_i64_i32(num_groups_33664)); i_45070++) {
        int32_t virt_group_id_45071 = phys_group_id_45069 + i_45070 *
                sext_i64_i32(num_groups_33664);
        int32_t flat_segment_id_45072 = squot32(virt_group_id_45071,
                                                sext_i64_i32(groups_per_segment_45051));
        int64_t global_tid_45073 = srem64(sext_i32_i64(virt_group_id_45071) *
                                          segred_group_sizze_33663 +
                                          sext_i32_i64(local_tid_45061),
                                          segred_group_sizze_33663 *
                                          groups_per_segment_45051);
        int64_t gtid_33606 = squot64(sext_i32_i64(flat_segment_id_45072),
                                     N_30056);
        int64_t gtid_33607 = sext_i32_i64(flat_segment_id_45072) -
                squot64(sext_i32_i64(flat_segment_id_45072), N_30056) * N_30056;
        int64_t gtid_33616;
        float x_acc_45074;
        int64_t chunk_sizze_45075;
        
        chunk_sizze_45075 = smin64(elements_per_thread_45052,
                                   sdiv_up64(i32_res_30076 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45073)),
                                             threads_per_segment_45055));
        
        float x_33667;
        float x_33668;
        
        // neutral-initialise the accumulators
        {
            x_acc_45074 = 0.0F;
        }
        for (int64_t i_45079 = 0; i_45079 < chunk_sizze_45075; i_45079++) {
            gtid_33616 = sext_i32_i64(sext_i64_i32(global_tid_45073)) +
                threads_per_segment_45055 * i_45079;
            // apply map function
            {
                float x_33672 = ((__global
                                  float *) defunc_4_map_res_mem_43811)[gtid_33606 *
                                                                       i32_res_30076 +
                                                                       gtid_33616];
                float x_33673 = ((__global float *) mem_43394)[gtid_33607 *
                                                               i32_res_30076 +
                                                               gtid_33616];
                float defunc_1_f_res_33674 = x_33672 * x_33673;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_33667 = x_acc_45074;
                }
                // load new values
                {
                    x_33668 = defunc_1_f_res_33674;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33669 = x_33667 + x_33668;
                    
                    // store in accumulator
                    {
                        x_acc_45074 = defunc_1_op_res_33669;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33667 = x_acc_45074;
            ((__local
              float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061)] =
                x_33667;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45080;
        int32_t skip_waves_45081;
        
        skip_waves_45081 = 1;
        
        float x_45076;
        float x_45077;
        
        offset_45080 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45061,
                      sext_i64_i32(segred_group_sizze_33663))) {
                x_45076 = ((__local
                            float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061 +
                                                        offset_45080)];
            }
        }
        offset_45080 = 1;
        while (slt32(offset_45080, wave_sizze_45063)) {
            if (slt32(local_tid_45061 + offset_45080,
                      sext_i64_i32(segred_group_sizze_33663)) &&
                ((local_tid_45061 - squot32(local_tid_45061, wave_sizze_45063) *
                  wave_sizze_45063) & (2 * offset_45080 - 1)) == 0) {
                // read array element
                {
                    x_45077 = ((volatile __local
                                float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061 +
                                                            offset_45080)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45078 = x_45076 + x_45077;
                    
                    x_45076 = defunc_1_op_res_45078;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061)] =
                        x_45076;
                }
            }
            offset_45080 *= 2;
        }
        while (slt32(skip_waves_45081,
                     squot32(sext_i64_i32(segred_group_sizze_33663) +
                             wave_sizze_45063 - 1, wave_sizze_45063))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45080 = skip_waves_45081 * wave_sizze_45063;
            if (slt32(local_tid_45061 + offset_45080,
                      sext_i64_i32(segred_group_sizze_33663)) &&
                ((local_tid_45061 - squot32(local_tid_45061, wave_sizze_45063) *
                  wave_sizze_45063) == 0 && (squot32(local_tid_45061,
                                                     wave_sizze_45063) & (2 *
                                                                          skip_waves_45081 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45077 = ((__local
                                float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061 +
                                                            offset_45080)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45078 = x_45076 + x_45077;
                    
                    x_45076 = defunc_1_op_res_45078;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061)] =
                        x_45076;
                }
            }
            skip_waves_45081 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45061) == 0) {
                x_acc_45074 = x_45076;
            }
        }
        if (groups_per_segment_45051 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45061 == 0) {
                    ((__global float *) mem_43899)[gtid_33606 * N_30056 +
                                                   gtid_33607] = x_acc_45074;
                }
            }
        } else {
            int32_t old_counter_45082;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45061 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45056)[sext_i32_i64(virt_group_id_45071) *
                                                        segred_group_sizze_33663] =
                        x_acc_45074;
                    mem_fence_global();
                    old_counter_45082 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45058)[sext_i32_i64(srem32(flat_segment_id_45072,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45067)[0] =
                        old_counter_45082 == groups_per_segment_45051 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45083;
            
            is_last_group_45083 = ((__local bool *) sync_arr_mem_45067)[0];
            if (is_last_group_45083) {
                if (local_tid_45061 == 0) {
                    old_counter_45082 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45058)[sext_i32_i64(srem32(flat_segment_id_45072,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45051));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45084 =
                            sdiv_up64(groups_per_segment_45051,
                                      segred_group_sizze_33663);
                    
                    x_33667 = 0.0F;
                    for (int64_t i_45085 = 0; i_45085 < read_per_thread_45084;
                         i_45085++) {
                        int64_t group_res_id_45086 =
                                sext_i32_i64(local_tid_45061) *
                                read_per_thread_45084 + i_45085;
                        int64_t index_of_group_res_45087 =
                                sext_i32_i64(flat_segment_id_45072) *
                                groups_per_segment_45051 + group_res_id_45086;
                        
                        if (slt64(group_res_id_45086,
                                  groups_per_segment_45051)) {
                            x_33668 = ((__global
                                        float *) group_res_arr_mem_45056)[index_of_group_res_45087 *
                                                                          segred_group_sizze_33663];
                            
                            float defunc_1_op_res_33669;
                            
                            defunc_1_op_res_33669 = x_33667 + x_33668;
                            x_33667 = defunc_1_op_res_33669;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061)] =
                    x_33667;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45088;
                    int32_t skip_waves_45089;
                    
                    skip_waves_45089 = 1;
                    
                    float x_45076;
                    float x_45077;
                    
                    offset_45088 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45061,
                                  sext_i64_i32(segred_group_sizze_33663))) {
                            x_45076 = ((__local
                                        float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061 +
                                                                    offset_45088)];
                        }
                    }
                    offset_45088 = 1;
                    while (slt32(offset_45088, wave_sizze_45063)) {
                        if (slt32(local_tid_45061 + offset_45088,
                                  sext_i64_i32(segred_group_sizze_33663)) &&
                            ((local_tid_45061 - squot32(local_tid_45061,
                                                        wave_sizze_45063) *
                              wave_sizze_45063) & (2 * offset_45088 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45077 = ((volatile __local
                                            float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061 +
                                                                        offset_45088)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45078 = x_45076 + x_45077;
                                
                                x_45076 = defunc_1_op_res_45078;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061)] =
                                    x_45076;
                            }
                        }
                        offset_45088 *= 2;
                    }
                    while (slt32(skip_waves_45089,
                                 squot32(sext_i64_i32(segred_group_sizze_33663) +
                                         wave_sizze_45063 - 1,
                                         wave_sizze_45063))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45088 = skip_waves_45089 * wave_sizze_45063;
                        if (slt32(local_tid_45061 + offset_45088,
                                  sext_i64_i32(segred_group_sizze_33663)) &&
                            ((local_tid_45061 - squot32(local_tid_45061,
                                                        wave_sizze_45063) *
                              wave_sizze_45063) == 0 &&
                             (squot32(local_tid_45061, wave_sizze_45063) & (2 *
                                                                            skip_waves_45089 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45077 = ((__local
                                            float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061 +
                                                                        offset_45088)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45078 = x_45076 + x_45077;
                                
                                x_45076 = defunc_1_op_res_45078;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45065)[sext_i32_i64(local_tid_45061)] =
                                    x_45076;
                            }
                        }
                        skip_waves_45089 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45061 == 0) {
                            ((__global float *) mem_43899)[gtid_33606 *
                                                           N_30056 +
                                                           gtid_33607] =
                                x_45076;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33663
}
__kernel void mainDetailedzisegred_large_34183(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45321_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45319_backing_aligned_1,
                                               int64_t N_30056,
                                               int64_t i32_res_30070,
                                               int64_t num_groups_34230,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43943,
                                               __global
                                               unsigned char *mem_44010,
                                               __global
                                               unsigned char *mem_44013,
                                               int64_t groups_per_segment_45305,
                                               int64_t elements_per_thread_45306,
                                               int64_t virt_num_groups_45307,
                                               int64_t threads_per_segment_45309,
                                               __global
                                               unsigned char *group_res_arr_mem_45310,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45312)
{
    #define segred_group_sizze_34229 (mainDetailedzisegred_group_sizze_34177)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45321_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45321_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45319_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45319_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45314;
    int32_t local_tid_45315;
    int64_t group_sizze_45318;
    int32_t wave_sizze_45317;
    int32_t group_tid_45316;
    
    global_tid_45314 = get_global_id(0);
    local_tid_45315 = get_local_id(0);
    group_sizze_45318 = get_local_size(0);
    wave_sizze_45317 = LOCKSTEP_WIDTH;
    group_tid_45316 = get_group_id(0);
    
    int32_t phys_tid_34183;
    
    phys_tid_34183 = global_tid_45314;
    
    __local char *red_arr_mem_45319;
    
    red_arr_mem_45319 = (__local char *) red_arr_mem_45319_backing_0;
    
    __local char *sync_arr_mem_45321;
    
    sync_arr_mem_45321 = (__local char *) sync_arr_mem_45321_backing_1;
    
    int32_t phys_group_id_45323;
    
    phys_group_id_45323 = get_group_id(0);
    for (int32_t i_45324 = 0; i_45324 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45307) - phys_group_id_45323,
                   sext_i64_i32(num_groups_34230)); i_45324++) {
        int32_t virt_group_id_45325 = phys_group_id_45323 + i_45324 *
                sext_i64_i32(num_groups_34230);
        int32_t flat_segment_id_45326 = squot32(virt_group_id_45325,
                                                sext_i64_i32(groups_per_segment_45305));
        int64_t global_tid_45327 = srem64(sext_i32_i64(virt_group_id_45325) *
                                          segred_group_sizze_34229 +
                                          sext_i32_i64(local_tid_45315),
                                          segred_group_sizze_34229 *
                                          groups_per_segment_45305);
        int64_t gtid_34174 = sext_i32_i64(flat_segment_id_45326);
        int64_t gtid_34182;
        float x_acc_45328;
        int64_t chunk_sizze_45329;
        
        chunk_sizze_45329 = smin64(elements_per_thread_45306,
                                   sdiv_up64(i32_res_30070 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45327)),
                                             threads_per_segment_45309));
        
        float x_34233;
        float x_34234;
        
        // neutral-initialise the accumulators
        {
            x_acc_45328 = 0.0F;
        }
        for (int64_t i_45333 = 0; i_45333 < chunk_sizze_45329; i_45333++) {
            gtid_34182 = sext_i32_i64(sext_i64_i32(global_tid_45327)) +
                threads_per_segment_45309 * i_45333;
            // apply map function
            {
                int32_t defunc_0_f_res_34237 = ((__global
                                                 int32_t *) mem_44010)[gtid_34174];
                int32_t index_primexp_41456 = sext_i64_i32(gtid_34182);
                bool cond_34239 = slt32(index_primexp_41456,
                                        defunc_0_f_res_34237);
                float defunc_0_f_res_34240;
                
                if (cond_34239) {
                    int64_t i_34241 = sext_i32_i64(index_primexp_41456);
                    float defunc_0_f_res_t_res_34242 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_34174 *
                                                                                              N_30056 +
                                                                                              i_34241];
                    
                    defunc_0_f_res_34240 = defunc_0_f_res_t_res_34242;
                } else {
                    defunc_0_f_res_34240 = 0.0F;
                }
                
                float defunc_0_f_res_34243 = defunc_0_f_res_34240 *
                      defunc_0_f_res_34240;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34233 = x_acc_45328;
                }
                // load new values
                {
                    x_34234 = defunc_0_f_res_34243;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34235 = x_34233 + x_34234;
                    
                    // store in accumulator
                    {
                        x_acc_45328 = defunc_1_op_res_34235;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34233 = x_acc_45328;
            ((__local
              float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315)] =
                x_34233;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45334;
        int32_t skip_waves_45335;
        
        skip_waves_45335 = 1;
        
        float x_45330;
        float x_45331;
        
        offset_45334 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45315,
                      sext_i64_i32(segred_group_sizze_34229))) {
                x_45330 = ((__local
                            float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315 +
                                                        offset_45334)];
            }
        }
        offset_45334 = 1;
        while (slt32(offset_45334, wave_sizze_45317)) {
            if (slt32(local_tid_45315 + offset_45334,
                      sext_i64_i32(segred_group_sizze_34229)) &&
                ((local_tid_45315 - squot32(local_tid_45315, wave_sizze_45317) *
                  wave_sizze_45317) & (2 * offset_45334 - 1)) == 0) {
                // read array element
                {
                    x_45331 = ((volatile __local
                                float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315 +
                                                            offset_45334)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45332 = x_45330 + x_45331;
                    
                    x_45330 = defunc_1_op_res_45332;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315)] =
                        x_45330;
                }
            }
            offset_45334 *= 2;
        }
        while (slt32(skip_waves_45335,
                     squot32(sext_i64_i32(segred_group_sizze_34229) +
                             wave_sizze_45317 - 1, wave_sizze_45317))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45334 = skip_waves_45335 * wave_sizze_45317;
            if (slt32(local_tid_45315 + offset_45334,
                      sext_i64_i32(segred_group_sizze_34229)) &&
                ((local_tid_45315 - squot32(local_tid_45315, wave_sizze_45317) *
                  wave_sizze_45317) == 0 && (squot32(local_tid_45315,
                                                     wave_sizze_45317) & (2 *
                                                                          skip_waves_45335 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45331 = ((__local
                                float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315 +
                                                            offset_45334)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45332 = x_45330 + x_45331;
                    
                    x_45330 = defunc_1_op_res_45332;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315)] =
                        x_45330;
                }
            }
            skip_waves_45335 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45315) == 0) {
                x_acc_45328 = x_45330;
            }
        }
        if (groups_per_segment_45305 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45315 == 0) {
                    ((__global float *) mem_44013)[gtid_34174] = x_acc_45328;
                }
            }
        } else {
            int32_t old_counter_45336;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45315 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45310)[sext_i32_i64(virt_group_id_45325) *
                                                        segred_group_sizze_34229] =
                        x_acc_45328;
                    mem_fence_global();
                    old_counter_45336 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45312)[sext_i32_i64(srem32(flat_segment_id_45326,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45321)[0] =
                        old_counter_45336 == groups_per_segment_45305 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45337;
            
            is_last_group_45337 = ((__local bool *) sync_arr_mem_45321)[0];
            if (is_last_group_45337) {
                if (local_tid_45315 == 0) {
                    old_counter_45336 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45312)[sext_i32_i64(srem32(flat_segment_id_45326,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45305));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45338 =
                            sdiv_up64(groups_per_segment_45305,
                                      segred_group_sizze_34229);
                    
                    x_34233 = 0.0F;
                    for (int64_t i_45339 = 0; i_45339 < read_per_thread_45338;
                         i_45339++) {
                        int64_t group_res_id_45340 =
                                sext_i32_i64(local_tid_45315) *
                                read_per_thread_45338 + i_45339;
                        int64_t index_of_group_res_45341 =
                                sext_i32_i64(flat_segment_id_45326) *
                                groups_per_segment_45305 + group_res_id_45340;
                        
                        if (slt64(group_res_id_45340,
                                  groups_per_segment_45305)) {
                            x_34234 = ((__global
                                        float *) group_res_arr_mem_45310)[index_of_group_res_45341 *
                                                                          segred_group_sizze_34229];
                            
                            float defunc_1_op_res_34235;
                            
                            defunc_1_op_res_34235 = x_34233 + x_34234;
                            x_34233 = defunc_1_op_res_34235;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315)] =
                    x_34233;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45342;
                    int32_t skip_waves_45343;
                    
                    skip_waves_45343 = 1;
                    
                    float x_45330;
                    float x_45331;
                    
                    offset_45342 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45315,
                                  sext_i64_i32(segred_group_sizze_34229))) {
                            x_45330 = ((__local
                                        float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315 +
                                                                    offset_45342)];
                        }
                    }
                    offset_45342 = 1;
                    while (slt32(offset_45342, wave_sizze_45317)) {
                        if (slt32(local_tid_45315 + offset_45342,
                                  sext_i64_i32(segred_group_sizze_34229)) &&
                            ((local_tid_45315 - squot32(local_tid_45315,
                                                        wave_sizze_45317) *
                              wave_sizze_45317) & (2 * offset_45342 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45331 = ((volatile __local
                                            float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315 +
                                                                        offset_45342)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45332 = x_45330 + x_45331;
                                
                                x_45330 = defunc_1_op_res_45332;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315)] =
                                    x_45330;
                            }
                        }
                        offset_45342 *= 2;
                    }
                    while (slt32(skip_waves_45343,
                                 squot32(sext_i64_i32(segred_group_sizze_34229) +
                                         wave_sizze_45317 - 1,
                                         wave_sizze_45317))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45342 = skip_waves_45343 * wave_sizze_45317;
                        if (slt32(local_tid_45315 + offset_45342,
                                  sext_i64_i32(segred_group_sizze_34229)) &&
                            ((local_tid_45315 - squot32(local_tid_45315,
                                                        wave_sizze_45317) *
                              wave_sizze_45317) == 0 &&
                             (squot32(local_tid_45315, wave_sizze_45317) & (2 *
                                                                            skip_waves_45343 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45331 = ((__local
                                            float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315 +
                                                                        offset_45342)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45332 = x_45330 + x_45331;
                                
                                x_45330 = defunc_1_op_res_45332;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45319)[sext_i32_i64(local_tid_45315)] =
                                    x_45330;
                            }
                        }
                        skip_waves_45343 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45315 == 0) {
                            ((__global float *) mem_44013)[gtid_34174] =
                                x_45330;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34229
}
__kernel void mainDetailedzisegred_large_34204(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45261_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45259_backing_aligned_1,
                                               int64_t N_30058,
                                               int64_t i32_res_30070,
                                               int64_t num_groups_34216,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *mem_44010,
                                               int64_t groups_per_segment_45245,
                                               int64_t elements_per_thread_45246,
                                               int64_t virt_num_groups_45247,
                                               int64_t threads_per_segment_45249,
                                               __global
                                               unsigned char *group_res_arr_mem_45250,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45252)
{
    #define segred_group_sizze_34215 (mainDetailedzisegred_group_sizze_34198)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45261_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45261_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45259_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45259_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45254;
    int32_t local_tid_45255;
    int64_t group_sizze_45258;
    int32_t wave_sizze_45257;
    int32_t group_tid_45256;
    
    global_tid_45254 = get_global_id(0);
    local_tid_45255 = get_local_id(0);
    group_sizze_45258 = get_local_size(0);
    wave_sizze_45257 = LOCKSTEP_WIDTH;
    group_tid_45256 = get_group_id(0);
    
    int32_t phys_tid_34204;
    
    phys_tid_34204 = global_tid_45254;
    
    __local char *red_arr_mem_45259;
    
    red_arr_mem_45259 = (__local char *) red_arr_mem_45259_backing_0;
    
    __local char *sync_arr_mem_45261;
    
    sync_arr_mem_45261 = (__local char *) sync_arr_mem_45261_backing_1;
    
    int32_t phys_group_id_45263;
    
    phys_group_id_45263 = get_group_id(0);
    for (int32_t i_45264 = 0; i_45264 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45247) - phys_group_id_45263,
                   sext_i64_i32(num_groups_34216)); i_45264++) {
        int32_t virt_group_id_45265 = phys_group_id_45263 + i_45264 *
                sext_i64_i32(num_groups_34216);
        int32_t flat_segment_id_45266 = squot32(virt_group_id_45265,
                                                sext_i64_i32(groups_per_segment_45245));
        int64_t global_tid_45267 = srem64(sext_i32_i64(virt_group_id_45265) *
                                          segred_group_sizze_34215 +
                                          sext_i32_i64(local_tid_45255),
                                          segred_group_sizze_34215 *
                                          groups_per_segment_45245);
        int64_t gtid_34195 = sext_i32_i64(flat_segment_id_45266);
        int64_t gtid_34203;
        int32_t x_acc_45268;
        int64_t chunk_sizze_45269;
        
        chunk_sizze_45269 = smin64(elements_per_thread_45246,
                                   sdiv_up64(i32_res_30070 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45267)),
                                             threads_per_segment_45249));
        
        int32_t x_34219;
        int32_t x_34220;
        
        // neutral-initialise the accumulators
        {
            x_acc_45268 = 0;
        }
        for (int64_t i_45273 = 0; i_45273 < chunk_sizze_45269; i_45273++) {
            gtid_34203 = sext_i32_i64(sext_i64_i32(global_tid_45267)) +
                threads_per_segment_45249 * i_45273;
            // apply map function
            {
                float x_34223 = ((__global
                                  float *) images_mem_43378)[gtid_34195 *
                                                             N_30058 +
                                                             gtid_34203];
                bool isnan_res_34224;
                
                isnan_res_34224 = futrts_isnan32(x_34223);
                
                bool cond_34225 = !isnan_res_34224;
                int32_t defunc_0_f_res_34226 = btoi_bool_i32(cond_34225);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34219 = x_acc_45268;
                }
                // load new values
                {
                    x_34220 = defunc_0_f_res_34226;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_34221 = add32(x_34219, x_34220);
                    
                    // store in accumulator
                    {
                        x_acc_45268 = defunc_1_op_res_34221;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34219 = x_acc_45268;
            ((__local
              int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255)] =
                x_34219;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45274;
        int32_t skip_waves_45275;
        
        skip_waves_45275 = 1;
        
        int32_t x_45270;
        int32_t x_45271;
        
        offset_45274 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45255,
                      sext_i64_i32(segred_group_sizze_34215))) {
                x_45270 = ((__local
                            int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255 +
                                                          offset_45274)];
            }
        }
        offset_45274 = 1;
        while (slt32(offset_45274, wave_sizze_45257)) {
            if (slt32(local_tid_45255 + offset_45274,
                      sext_i64_i32(segred_group_sizze_34215)) &&
                ((local_tid_45255 - squot32(local_tid_45255, wave_sizze_45257) *
                  wave_sizze_45257) & (2 * offset_45274 - 1)) == 0) {
                // read array element
                {
                    x_45271 = ((volatile __local
                                int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255 +
                                                              offset_45274)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45272 = add32(x_45270, x_45271);
                    
                    x_45270 = defunc_1_op_res_45272;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255)] =
                        x_45270;
                }
            }
            offset_45274 *= 2;
        }
        while (slt32(skip_waves_45275,
                     squot32(sext_i64_i32(segred_group_sizze_34215) +
                             wave_sizze_45257 - 1, wave_sizze_45257))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45274 = skip_waves_45275 * wave_sizze_45257;
            if (slt32(local_tid_45255 + offset_45274,
                      sext_i64_i32(segred_group_sizze_34215)) &&
                ((local_tid_45255 - squot32(local_tid_45255, wave_sizze_45257) *
                  wave_sizze_45257) == 0 && (squot32(local_tid_45255,
                                                     wave_sizze_45257) & (2 *
                                                                          skip_waves_45275 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45271 = ((__local
                                int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255 +
                                                              offset_45274)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45272 = add32(x_45270, x_45271);
                    
                    x_45270 = defunc_1_op_res_45272;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255)] =
                        x_45270;
                }
            }
            skip_waves_45275 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45255) == 0) {
                x_acc_45268 = x_45270;
            }
        }
        if (groups_per_segment_45245 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45255 == 0) {
                    ((__global int32_t *) mem_44010)[gtid_34195] = x_acc_45268;
                }
            }
        } else {
            int32_t old_counter_45276;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45255 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45250)[sext_i32_i64(virt_group_id_45265) *
                                                          segred_group_sizze_34215] =
                        x_acc_45268;
                    mem_fence_global();
                    old_counter_45276 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45252)[sext_i32_i64(srem32(flat_segment_id_45266,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45261)[0] =
                        old_counter_45276 == groups_per_segment_45245 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45277;
            
            is_last_group_45277 = ((__local bool *) sync_arr_mem_45261)[0];
            if (is_last_group_45277) {
                if (local_tid_45255 == 0) {
                    old_counter_45276 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45252)[sext_i32_i64(srem32(flat_segment_id_45266,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45245));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45278 =
                            sdiv_up64(groups_per_segment_45245,
                                      segred_group_sizze_34215);
                    
                    x_34219 = 0;
                    for (int64_t i_45279 = 0; i_45279 < read_per_thread_45278;
                         i_45279++) {
                        int64_t group_res_id_45280 =
                                sext_i32_i64(local_tid_45255) *
                                read_per_thread_45278 + i_45279;
                        int64_t index_of_group_res_45281 =
                                sext_i32_i64(flat_segment_id_45266) *
                                groups_per_segment_45245 + group_res_id_45280;
                        
                        if (slt64(group_res_id_45280,
                                  groups_per_segment_45245)) {
                            x_34220 = ((__global
                                        int32_t *) group_res_arr_mem_45250)[index_of_group_res_45281 *
                                                                            segred_group_sizze_34215];
                            
                            int32_t defunc_1_op_res_34221;
                            
                            defunc_1_op_res_34221 = add32(x_34219, x_34220);
                            x_34219 = defunc_1_op_res_34221;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255)] =
                    x_34219;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45282;
                    int32_t skip_waves_45283;
                    
                    skip_waves_45283 = 1;
                    
                    int32_t x_45270;
                    int32_t x_45271;
                    
                    offset_45282 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45255,
                                  sext_i64_i32(segred_group_sizze_34215))) {
                            x_45270 = ((__local
                                        int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255 +
                                                                      offset_45282)];
                        }
                    }
                    offset_45282 = 1;
                    while (slt32(offset_45282, wave_sizze_45257)) {
                        if (slt32(local_tid_45255 + offset_45282,
                                  sext_i64_i32(segred_group_sizze_34215)) &&
                            ((local_tid_45255 - squot32(local_tid_45255,
                                                        wave_sizze_45257) *
                              wave_sizze_45257) & (2 * offset_45282 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45271 = ((volatile __local
                                            int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255 +
                                                                          offset_45282)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45272 = add32(x_45270,
                                                                      x_45271);
                                
                                x_45270 = defunc_1_op_res_45272;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255)] =
                                    x_45270;
                            }
                        }
                        offset_45282 *= 2;
                    }
                    while (slt32(skip_waves_45283,
                                 squot32(sext_i64_i32(segred_group_sizze_34215) +
                                         wave_sizze_45257 - 1,
                                         wave_sizze_45257))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45282 = skip_waves_45283 * wave_sizze_45257;
                        if (slt32(local_tid_45255 + offset_45282,
                                  sext_i64_i32(segred_group_sizze_34215)) &&
                            ((local_tid_45255 - squot32(local_tid_45255,
                                                        wave_sizze_45257) *
                              wave_sizze_45257) == 0 &&
                             (squot32(local_tid_45255, wave_sizze_45257) & (2 *
                                                                            skip_waves_45283 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45271 = ((__local
                                            int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255 +
                                                                          offset_45282)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45272 = add32(x_45270,
                                                                      x_45271);
                                
                                x_45270 = defunc_1_op_res_45272;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45259)[sext_i32_i64(local_tid_45255)] =
                                    x_45270;
                            }
                        }
                        skip_waves_45283 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45255 == 0) {
                            ((__global int32_t *) mem_44010)[gtid_34195] =
                                x_45270;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34215
}
__kernel void mainDetailedzisegred_large_34355(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45430_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45428_backing_aligned_1,
                                               int64_t N_30056,
                                               int64_t i32_res_30418,
                                               int64_t num_groups_34373,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43943,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44022,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44023,
                                               __global
                                               unsigned char *mem_44072,
                                               int64_t groups_per_segment_45414,
                                               int64_t elements_per_thread_45415,
                                               int64_t virt_num_groups_45416,
                                               int64_t threads_per_segment_45418,
                                               __global
                                               unsigned char *group_res_arr_mem_45419,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45421)
{
    #define segred_group_sizze_34372 (mainDetailedzisegred_group_sizze_34349)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45430_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45430_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45428_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45428_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45423;
    int32_t local_tid_45424;
    int64_t group_sizze_45427;
    int32_t wave_sizze_45426;
    int32_t group_tid_45425;
    
    global_tid_45423 = get_global_id(0);
    local_tid_45424 = get_local_id(0);
    group_sizze_45427 = get_local_size(0);
    wave_sizze_45426 = LOCKSTEP_WIDTH;
    group_tid_45425 = get_group_id(0);
    
    int32_t phys_tid_34355;
    
    phys_tid_34355 = global_tid_45423;
    
    __local char *red_arr_mem_45428;
    
    red_arr_mem_45428 = (__local char *) red_arr_mem_45428_backing_0;
    
    __local char *sync_arr_mem_45430;
    
    sync_arr_mem_45430 = (__local char *) sync_arr_mem_45430_backing_1;
    
    int32_t phys_group_id_45432;
    
    phys_group_id_45432 = get_group_id(0);
    for (int32_t i_45433 = 0; i_45433 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45416) - phys_group_id_45432,
                   sext_i64_i32(num_groups_34373)); i_45433++) {
        int32_t virt_group_id_45434 = phys_group_id_45432 + i_45433 *
                sext_i64_i32(num_groups_34373);
        int32_t flat_segment_id_45435 = squot32(virt_group_id_45434,
                                                sext_i64_i32(groups_per_segment_45414));
        int64_t global_tid_45436 = srem64(sext_i32_i64(virt_group_id_45434) *
                                          segred_group_sizze_34372 +
                                          sext_i32_i64(local_tid_45424),
                                          segred_group_sizze_34372 *
                                          groups_per_segment_45414);
        int64_t gtid_34346 = sext_i32_i64(flat_segment_id_45435);
        int64_t gtid_34354;
        float x_acc_45437;
        int64_t chunk_sizze_45438;
        
        chunk_sizze_45438 = smin64(elements_per_thread_45415,
                                   sdiv_up64(i32_res_30418 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45436)),
                                             threads_per_segment_45418));
        
        float x_34376;
        float x_34377;
        
        // neutral-initialise the accumulators
        {
            x_acc_45437 = 0.0F;
        }
        for (int64_t i_45442 = 0; i_45442 < chunk_sizze_45438; i_45442++) {
            gtid_34354 = sext_i32_i64(sext_i64_i32(global_tid_45436)) +
                threads_per_segment_45418 * i_45442;
            // apply map function
            {
                int32_t x_34381 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44022)[gtid_34346];
                int32_t index_primexp_41461 = sext_i64_i32(gtid_34354);
                bool cond_34383 = slt32(index_primexp_41461, x_34381);
                float defunc_0_f_res_34384;
                
                if (cond_34383) {
                    int32_t x_34380 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44023)[gtid_34346];
                    int32_t x_34385 = add32(x_34380, index_primexp_41461);
                    int32_t x_34386 = sub32(x_34385, x_34381);
                    int32_t i_34387 = add32(1, x_34386);
                    int64_t i_34388 = sext_i32_i64(i_34387);
                    float defunc_0_f_res_t_res_34389 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_34346 *
                                                                                              N_30056 +
                                                                                              i_34388];
                    
                    defunc_0_f_res_34384 = defunc_0_f_res_t_res_34389;
                } else {
                    defunc_0_f_res_34384 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_34376 = x_acc_45437;
                }
                // load new values
                {
                    x_34377 = defunc_0_f_res_34384;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34378 = x_34376 + x_34377;
                    
                    // store in accumulator
                    {
                        x_acc_45437 = defunc_1_op_res_34378;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34376 = x_acc_45437;
            ((__local
              float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424)] =
                x_34376;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45443;
        int32_t skip_waves_45444;
        
        skip_waves_45444 = 1;
        
        float x_45439;
        float x_45440;
        
        offset_45443 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45424,
                      sext_i64_i32(segred_group_sizze_34372))) {
                x_45439 = ((__local
                            float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424 +
                                                        offset_45443)];
            }
        }
        offset_45443 = 1;
        while (slt32(offset_45443, wave_sizze_45426)) {
            if (slt32(local_tid_45424 + offset_45443,
                      sext_i64_i32(segred_group_sizze_34372)) &&
                ((local_tid_45424 - squot32(local_tid_45424, wave_sizze_45426) *
                  wave_sizze_45426) & (2 * offset_45443 - 1)) == 0) {
                // read array element
                {
                    x_45440 = ((volatile __local
                                float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424 +
                                                            offset_45443)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45441 = x_45439 + x_45440;
                    
                    x_45439 = defunc_1_op_res_45441;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424)] =
                        x_45439;
                }
            }
            offset_45443 *= 2;
        }
        while (slt32(skip_waves_45444,
                     squot32(sext_i64_i32(segred_group_sizze_34372) +
                             wave_sizze_45426 - 1, wave_sizze_45426))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45443 = skip_waves_45444 * wave_sizze_45426;
            if (slt32(local_tid_45424 + offset_45443,
                      sext_i64_i32(segred_group_sizze_34372)) &&
                ((local_tid_45424 - squot32(local_tid_45424, wave_sizze_45426) *
                  wave_sizze_45426) == 0 && (squot32(local_tid_45424,
                                                     wave_sizze_45426) & (2 *
                                                                          skip_waves_45444 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45440 = ((__local
                                float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424 +
                                                            offset_45443)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45441 = x_45439 + x_45440;
                    
                    x_45439 = defunc_1_op_res_45441;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424)] =
                        x_45439;
                }
            }
            skip_waves_45444 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45424) == 0) {
                x_acc_45437 = x_45439;
            }
        }
        if (groups_per_segment_45414 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45424 == 0) {
                    ((__global float *) mem_44072)[gtid_34346] = x_acc_45437;
                }
            }
        } else {
            int32_t old_counter_45445;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45424 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45419)[sext_i32_i64(virt_group_id_45434) *
                                                        segred_group_sizze_34372] =
                        x_acc_45437;
                    mem_fence_global();
                    old_counter_45445 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45421)[sext_i32_i64(srem32(flat_segment_id_45435,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45430)[0] =
                        old_counter_45445 == groups_per_segment_45414 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45446;
            
            is_last_group_45446 = ((__local bool *) sync_arr_mem_45430)[0];
            if (is_last_group_45446) {
                if (local_tid_45424 == 0) {
                    old_counter_45445 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45421)[sext_i32_i64(srem32(flat_segment_id_45435,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45414));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45447 =
                            sdiv_up64(groups_per_segment_45414,
                                      segred_group_sizze_34372);
                    
                    x_34376 = 0.0F;
                    for (int64_t i_45448 = 0; i_45448 < read_per_thread_45447;
                         i_45448++) {
                        int64_t group_res_id_45449 =
                                sext_i32_i64(local_tid_45424) *
                                read_per_thread_45447 + i_45448;
                        int64_t index_of_group_res_45450 =
                                sext_i32_i64(flat_segment_id_45435) *
                                groups_per_segment_45414 + group_res_id_45449;
                        
                        if (slt64(group_res_id_45449,
                                  groups_per_segment_45414)) {
                            x_34377 = ((__global
                                        float *) group_res_arr_mem_45419)[index_of_group_res_45450 *
                                                                          segred_group_sizze_34372];
                            
                            float defunc_1_op_res_34378;
                            
                            defunc_1_op_res_34378 = x_34376 + x_34377;
                            x_34376 = defunc_1_op_res_34378;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424)] =
                    x_34376;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45451;
                    int32_t skip_waves_45452;
                    
                    skip_waves_45452 = 1;
                    
                    float x_45439;
                    float x_45440;
                    
                    offset_45451 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45424,
                                  sext_i64_i32(segred_group_sizze_34372))) {
                            x_45439 = ((__local
                                        float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424 +
                                                                    offset_45451)];
                        }
                    }
                    offset_45451 = 1;
                    while (slt32(offset_45451, wave_sizze_45426)) {
                        if (slt32(local_tid_45424 + offset_45451,
                                  sext_i64_i32(segred_group_sizze_34372)) &&
                            ((local_tid_45424 - squot32(local_tid_45424,
                                                        wave_sizze_45426) *
                              wave_sizze_45426) & (2 * offset_45451 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45440 = ((volatile __local
                                            float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424 +
                                                                        offset_45451)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45441 = x_45439 + x_45440;
                                
                                x_45439 = defunc_1_op_res_45441;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424)] =
                                    x_45439;
                            }
                        }
                        offset_45451 *= 2;
                    }
                    while (slt32(skip_waves_45452,
                                 squot32(sext_i64_i32(segred_group_sizze_34372) +
                                         wave_sizze_45426 - 1,
                                         wave_sizze_45426))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45451 = skip_waves_45452 * wave_sizze_45426;
                        if (slt32(local_tid_45424 + offset_45451,
                                  sext_i64_i32(segred_group_sizze_34372)) &&
                            ((local_tid_45424 - squot32(local_tid_45424,
                                                        wave_sizze_45426) *
                              wave_sizze_45426) == 0 &&
                             (squot32(local_tid_45424, wave_sizze_45426) & (2 *
                                                                            skip_waves_45452 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45440 = ((__local
                                            float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424 +
                                                                        offset_45451)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45441 = x_45439 + x_45440;
                                
                                x_45439 = defunc_1_op_res_45441;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45428)[sext_i32_i64(local_tid_45424)] =
                                    x_45439;
                            }
                        }
                        skip_waves_45452 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45424 == 0) {
                            ((__global float *) mem_44072)[gtid_34346] =
                                x_45439;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34372
}
__kernel void mainDetailedzisegred_large_36013(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45671_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45669_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45667_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_45665_backing_aligned_3,
                                               int64_t iota32_arg_30443,
                                               int64_t num_groups_36184,
                                               __global
                                               unsigned char *mem_44078,
                                               __global
                                               unsigned char *mem_44286,
                                               __global
                                               unsigned char *mem_44288,
                                               __global
                                               unsigned char *mem_44292,
                                               __global
                                               unsigned char *mem_44295,
                                               __global
                                               unsigned char *mem_44297,
                                               __global
                                               unsigned char *mem_44299,
                                               __global
                                               unsigned char *mem_44302,
                                               int64_t groups_per_segment_45647,
                                               int64_t elements_per_thread_45648,
                                               int64_t virt_num_groups_45649,
                                               __global
                                               unsigned char *group_res_arr_mem_45652,
                                               __global
                                               unsigned char *group_res_arr_mem_45654,
                                               __global
                                               unsigned char *group_res_arr_mem_45656,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45658)
{
    #define segred_group_sizze_36183 (mainDetailedzisegred_group_sizze_36007)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45671_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45671_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45669_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45669_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45667_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45667_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45665_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45665_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45660;
    int32_t local_tid_45661;
    int64_t group_sizze_45664;
    int32_t wave_sizze_45663;
    int32_t group_tid_45662;
    
    global_tid_45660 = get_global_id(0);
    local_tid_45661 = get_local_id(0);
    group_sizze_45664 = get_local_size(0);
    wave_sizze_45663 = LOCKSTEP_WIDTH;
    group_tid_45662 = get_group_id(0);
    
    int32_t phys_tid_36013;
    
    phys_tid_36013 = global_tid_45660;
    
    __local char *red_arr_mem_45665;
    
    red_arr_mem_45665 = (__local char *) red_arr_mem_45665_backing_0;
    
    __local char *red_arr_mem_45667;
    
    red_arr_mem_45667 = (__local char *) red_arr_mem_45667_backing_1;
    
    __local char *red_arr_mem_45669;
    
    red_arr_mem_45669 = (__local char *) red_arr_mem_45669_backing_2;
    
    __local char *sync_arr_mem_45671;
    
    sync_arr_mem_45671 = (__local char *) sync_arr_mem_45671_backing_3;
    
    int32_t phys_group_id_45673;
    
    phys_group_id_45673 = get_group_id(0);
    for (int32_t i_45674 = 0; i_45674 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45649) - phys_group_id_45673,
                   sext_i64_i32(num_groups_36184)); i_45674++) {
        int32_t virt_group_id_45675 = phys_group_id_45673 + i_45674 *
                sext_i64_i32(num_groups_36184);
        int32_t flat_segment_id_45676 = squot32(virt_group_id_45675,
                                                sext_i64_i32(groups_per_segment_45647));
        int64_t global_tid_45677 = srem64(sext_i32_i64(virt_group_id_45675) *
                                          segred_group_sizze_36183 +
                                          sext_i32_i64(local_tid_45661),
                                          segred_group_sizze_36183 *
                                          groups_per_segment_45647);
        int64_t gtid_36004 = sext_i32_i64(flat_segment_id_45676);
        int64_t gtid_36012;
        bool x_acc_45678;
        int32_t x_acc_45679;
        float x_acc_45680;
        int64_t chunk_sizze_45681;
        int64_t starting_point_45682;
        
        starting_point_45682 = sext_i32_i64(sext_i64_i32(global_tid_45677)) *
            elements_per_thread_45648;
        
        int64_t remaining_elements_45683;
        
        remaining_elements_45683 = iota32_arg_30443 - starting_point_45682;
        if (sle64(remaining_elements_45683, 0) || sle64(iota32_arg_30443,
                                                        starting_point_45682)) {
            chunk_sizze_45681 = 0;
        } else {
            if (slt64(iota32_arg_30443,
                      (sext_i32_i64(sext_i64_i32(global_tid_45677)) + 1) *
                      elements_per_thread_45648)) {
                chunk_sizze_45681 = iota32_arg_30443 -
                    sext_i32_i64(sext_i64_i32(global_tid_45677)) *
                    elements_per_thread_45648;
            } else {
                chunk_sizze_45681 = elements_per_thread_45648;
            }
        }
        
        bool x_36190;
        int32_t x_36191;
        float x_36192;
        bool x_36193;
        int32_t x_36194;
        float x_36195;
        
        // neutral-initialise the accumulators
        {
            x_acc_45678 = 0;
            x_acc_45679 = -1;
            x_acc_45680 = 0.0F;
        }
        for (int64_t i_45698 = 0; i_45698 < elements_per_thread_45648;
             i_45698++) {
            gtid_36012 = sext_i32_i64(local_tid_45661) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45677),
                                      sext_i64_i32(segred_group_sizze_36183))) *
                 elements_per_thread_45648 + i_45698) *
                segred_group_sizze_36183;
            if (slt64(gtid_36012, iota32_arg_30443)) {
                // apply map function
                {
                    int32_t y_36204 = ((__global
                                        int32_t *) mem_44288)[gtid_36004];
                    float y_36205 = ((__global float *) mem_44286)[gtid_36004];
                    float x_36209 = ((__global float *) mem_44292)[gtid_36004 *
                                                                   iota32_arg_30443 +
                                                                   gtid_36012];
                    float x_36210 = ((__global float *) mem_44078)[gtid_36012];
                    int32_t index_primexp_41481 = sext_i64_i32(gtid_36012);
                    float defunc_0_f_res_36213 = x_36209 / y_36205;
                    bool cond_36214 = slt32(index_primexp_41481, y_36204);
                    bool isnan_res_36215;
                    
                    isnan_res_36215 = futrts_isnan32(defunc_0_f_res_36213);
                    
                    bool cond_t_res_36216 = !isnan_res_36215;
                    bool x_36217 = cond_36214 && cond_t_res_36216;
                    float abs_res_36218 = (float) fabs(defunc_0_f_res_36213);
                    bool defunc_2_f_res_t_res_36219 = x_36210 < abs_res_36218;
                    bool x_36220 = x_36217 && defunc_2_f_res_t_res_36219;
                    float defunc_1_f_res_36221;
                    
                    if (cond_36214) {
                        defunc_1_f_res_36221 = defunc_0_f_res_36213;
                    } else {
                        defunc_1_f_res_36221 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_44302)[gtid_36004 *
                                                       iota32_arg_30443 +
                                                       gtid_36012] =
                            defunc_0_f_res_36213;
                    }
                    // load accumulator
                    {
                        x_36190 = x_acc_45678;
                        x_36191 = x_acc_45679;
                        x_36192 = x_acc_45680;
                    }
                    // load new values
                    {
                        x_36193 = x_36220;
                        x_36194 = index_primexp_41481;
                        x_36195 = defunc_1_f_res_36221;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_36196;
                        int32_t defunc_1_op_res_36197;
                        
                        if (x_36190) {
                            defunc_1_op_res_36196 = x_36190;
                            defunc_1_op_res_36197 = x_36191;
                        } else {
                            bool x_36198 = x_36193 && x_36193;
                            bool x_36199 = !x_36193;
                            bool y_36200 = x_36190 && x_36199;
                            bool defunc_1_op_res_f_res_36201 = x_36198 ||
                                 y_36200;
                            int32_t defunc_1_op_res_f_res_36202;
                            
                            if (x_36193) {
                                defunc_1_op_res_f_res_36202 = x_36194;
                            } else {
                                defunc_1_op_res_f_res_36202 = x_36191;
                            }
                            defunc_1_op_res_36196 = defunc_1_op_res_f_res_36201;
                            defunc_1_op_res_36197 = defunc_1_op_res_f_res_36202;
                        }
                        
                        float defunc_1_op_res_36203 = x_36192 + x_36195;
                        
                        // store in accumulator
                        {
                            x_acc_45678 = defunc_1_op_res_36196;
                            x_acc_45679 = defunc_1_op_res_36197;
                            x_acc_45680 = defunc_1_op_res_36203;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_36190 = x_acc_45678;
                x_36191 = x_acc_45679;
                x_36192 = x_acc_45680;
                ((__local
                  bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661)] =
                    x_36190;
                ((__local
                  int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661)] =
                    x_36191;
                ((__local
                  float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661)] =
                    x_36192;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45699;
            int32_t skip_waves_45700;
            
            skip_waves_45700 = 1;
            
            bool x_45684;
            int32_t x_45685;
            float x_45686;
            bool x_45687;
            int32_t x_45688;
            float x_45689;
            
            offset_45699 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45661,
                          sext_i64_i32(segred_group_sizze_36183))) {
                    x_45684 = ((__local
                                bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661 +
                                                           offset_45699)];
                    x_45685 = ((__local
                                int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661 +
                                                              offset_45699)];
                    x_45686 = ((__local
                                float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661 +
                                                            offset_45699)];
                }
            }
            offset_45699 = 1;
            while (slt32(offset_45699, wave_sizze_45663)) {
                if (slt32(local_tid_45661 + offset_45699,
                          sext_i64_i32(segred_group_sizze_36183)) &&
                    ((local_tid_45661 - squot32(local_tid_45661,
                                                wave_sizze_45663) *
                      wave_sizze_45663) & (2 * offset_45699 - 1)) == 0) {
                    // read array element
                    {
                        x_45687 = ((volatile __local
                                    bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661 +
                                                               offset_45699)];
                        x_45688 = ((volatile __local
                                    int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661 +
                                                                  offset_45699)];
                        x_45689 = ((volatile __local
                                    float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661 +
                                                                offset_45699)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45690;
                        int32_t defunc_1_op_res_45691;
                        
                        if (x_45684) {
                            defunc_1_op_res_45690 = x_45684;
                            defunc_1_op_res_45691 = x_45685;
                        } else {
                            bool x_45692 = x_45687 && x_45687;
                            bool x_45693 = !x_45687;
                            bool y_45694 = x_45684 && x_45693;
                            bool defunc_1_op_res_f_res_45695 = x_45692 ||
                                 y_45694;
                            int32_t defunc_1_op_res_f_res_45696;
                            
                            if (x_45687) {
                                defunc_1_op_res_f_res_45696 = x_45688;
                            } else {
                                defunc_1_op_res_f_res_45696 = x_45685;
                            }
                            defunc_1_op_res_45690 = defunc_1_op_res_f_res_45695;
                            defunc_1_op_res_45691 = defunc_1_op_res_f_res_45696;
                        }
                        
                        float defunc_1_op_res_45697 = x_45686 + x_45689;
                        
                        x_45684 = defunc_1_op_res_45690;
                        x_45685 = defunc_1_op_res_45691;
                        x_45686 = defunc_1_op_res_45697;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661)] =
                            x_45684;
                        ((volatile __local
                          int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661)] =
                            x_45685;
                        ((volatile __local
                          float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661)] =
                            x_45686;
                    }
                }
                offset_45699 *= 2;
            }
            while (slt32(skip_waves_45700,
                         squot32(sext_i64_i32(segred_group_sizze_36183) +
                                 wave_sizze_45663 - 1, wave_sizze_45663))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45699 = skip_waves_45700 * wave_sizze_45663;
                if (slt32(local_tid_45661 + offset_45699,
                          sext_i64_i32(segred_group_sizze_36183)) &&
                    ((local_tid_45661 - squot32(local_tid_45661,
                                                wave_sizze_45663) *
                      wave_sizze_45663) == 0 && (squot32(local_tid_45661,
                                                         wave_sizze_45663) &
                                                 (2 * skip_waves_45700 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45687 = ((__local
                                    bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661 +
                                                               offset_45699)];
                        x_45688 = ((__local
                                    int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661 +
                                                                  offset_45699)];
                        x_45689 = ((__local
                                    float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661 +
                                                                offset_45699)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45690;
                        int32_t defunc_1_op_res_45691;
                        
                        if (x_45684) {
                            defunc_1_op_res_45690 = x_45684;
                            defunc_1_op_res_45691 = x_45685;
                        } else {
                            bool x_45692 = x_45687 && x_45687;
                            bool x_45693 = !x_45687;
                            bool y_45694 = x_45684 && x_45693;
                            bool defunc_1_op_res_f_res_45695 = x_45692 ||
                                 y_45694;
                            int32_t defunc_1_op_res_f_res_45696;
                            
                            if (x_45687) {
                                defunc_1_op_res_f_res_45696 = x_45688;
                            } else {
                                defunc_1_op_res_f_res_45696 = x_45685;
                            }
                            defunc_1_op_res_45690 = defunc_1_op_res_f_res_45695;
                            defunc_1_op_res_45691 = defunc_1_op_res_f_res_45696;
                        }
                        
                        float defunc_1_op_res_45697 = x_45686 + x_45689;
                        
                        x_45684 = defunc_1_op_res_45690;
                        x_45685 = defunc_1_op_res_45691;
                        x_45686 = defunc_1_op_res_45697;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661)] =
                            x_45684;
                        ((__local
                          int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661)] =
                            x_45685;
                        ((__local
                          float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661)] =
                            x_45686;
                    }
                }
                skip_waves_45700 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45661) == 0) {
                    x_acc_45678 = x_45684;
                    x_acc_45679 = x_45685;
                    x_acc_45680 = x_45686;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45661) == 0)) {
                    x_acc_45678 = 0;
                    x_acc_45679 = -1;
                    x_acc_45680 = 0.0F;
                }
            }
        }
        x_36190 = x_acc_45678;
        x_36191 = x_acc_45679;
        x_36192 = x_acc_45680;
        if (groups_per_segment_45647 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45661 == 0) {
                    ((__global bool *) mem_44295)[gtid_36004] = x_acc_45678;
                    ((__global int32_t *) mem_44297)[gtid_36004] = x_acc_45679;
                    ((__global float *) mem_44299)[gtid_36004] = x_acc_45680;
                }
            }
        } else {
            int32_t old_counter_45701;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45661 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45652)[sext_i32_i64(virt_group_id_45675) *
                                                       segred_group_sizze_36183] =
                        x_acc_45678;
                    ((__global
                      int32_t *) group_res_arr_mem_45654)[sext_i32_i64(virt_group_id_45675) *
                                                          segred_group_sizze_36183] =
                        x_acc_45679;
                    ((__global
                      float *) group_res_arr_mem_45656)[sext_i32_i64(virt_group_id_45675) *
                                                        segred_group_sizze_36183] =
                        x_acc_45680;
                    mem_fence_global();
                    old_counter_45701 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45658)[sext_i32_i64(srem32(flat_segment_id_45676,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45671)[0] =
                        old_counter_45701 == groups_per_segment_45647 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45702;
            
            is_last_group_45702 = ((__local bool *) sync_arr_mem_45671)[0];
            if (is_last_group_45702) {
                if (local_tid_45661 == 0) {
                    old_counter_45701 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45658)[sext_i32_i64(srem32(flat_segment_id_45676,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45647));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45703 =
                            sdiv_up64(groups_per_segment_45647,
                                      segred_group_sizze_36183);
                    
                    x_36190 = 0;
                    x_36191 = -1;
                    x_36192 = 0.0F;
                    for (int64_t i_45704 = 0; i_45704 < read_per_thread_45703;
                         i_45704++) {
                        int64_t group_res_id_45705 =
                                sext_i32_i64(local_tid_45661) *
                                read_per_thread_45703 + i_45704;
                        int64_t index_of_group_res_45706 =
                                sext_i32_i64(flat_segment_id_45676) *
                                groups_per_segment_45647 + group_res_id_45705;
                        
                        if (slt64(group_res_id_45705,
                                  groups_per_segment_45647)) {
                            x_36193 = ((__global
                                        bool *) group_res_arr_mem_45652)[index_of_group_res_45706 *
                                                                         segred_group_sizze_36183];
                            x_36194 = ((__global
                                        int32_t *) group_res_arr_mem_45654)[index_of_group_res_45706 *
                                                                            segred_group_sizze_36183];
                            x_36195 = ((__global
                                        float *) group_res_arr_mem_45656)[index_of_group_res_45706 *
                                                                          segred_group_sizze_36183];
                            
                            bool defunc_1_op_res_36196;
                            int32_t defunc_1_op_res_36197;
                            
                            if (x_36190) {
                                defunc_1_op_res_36196 = x_36190;
                                defunc_1_op_res_36197 = x_36191;
                            } else {
                                bool x_36198 = x_36193 && x_36193;
                                bool x_36199 = !x_36193;
                                bool y_36200 = x_36190 && x_36199;
                                bool defunc_1_op_res_f_res_36201 = x_36198 ||
                                     y_36200;
                                int32_t defunc_1_op_res_f_res_36202;
                                
                                if (x_36193) {
                                    defunc_1_op_res_f_res_36202 = x_36194;
                                } else {
                                    defunc_1_op_res_f_res_36202 = x_36191;
                                }
                                defunc_1_op_res_36196 =
                                    defunc_1_op_res_f_res_36201;
                                defunc_1_op_res_36197 =
                                    defunc_1_op_res_f_res_36202;
                            }
                            
                            float defunc_1_op_res_36203 = x_36192 + x_36195;
                            
                            x_36190 = defunc_1_op_res_36196;
                            x_36191 = defunc_1_op_res_36197;
                            x_36192 = defunc_1_op_res_36203;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661)] =
                    x_36190;
                ((__local
                  int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661)] =
                    x_36191;
                ((__local
                  float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661)] =
                    x_36192;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45707;
                    int32_t skip_waves_45708;
                    
                    skip_waves_45708 = 1;
                    
                    bool x_45684;
                    int32_t x_45685;
                    float x_45686;
                    bool x_45687;
                    int32_t x_45688;
                    float x_45689;
                    
                    offset_45707 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45661,
                                  sext_i64_i32(segred_group_sizze_36183))) {
                            x_45684 = ((__local
                                        bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661 +
                                                                   offset_45707)];
                            x_45685 = ((__local
                                        int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661 +
                                                                      offset_45707)];
                            x_45686 = ((__local
                                        float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661 +
                                                                    offset_45707)];
                        }
                    }
                    offset_45707 = 1;
                    while (slt32(offset_45707, wave_sizze_45663)) {
                        if (slt32(local_tid_45661 + offset_45707,
                                  sext_i64_i32(segred_group_sizze_36183)) &&
                            ((local_tid_45661 - squot32(local_tid_45661,
                                                        wave_sizze_45663) *
                              wave_sizze_45663) & (2 * offset_45707 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45687 = ((volatile __local
                                            bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661 +
                                                                       offset_45707)];
                                x_45688 = ((volatile __local
                                            int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661 +
                                                                          offset_45707)];
                                x_45689 = ((volatile __local
                                            float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661 +
                                                                        offset_45707)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45690;
                                int32_t defunc_1_op_res_45691;
                                
                                if (x_45684) {
                                    defunc_1_op_res_45690 = x_45684;
                                    defunc_1_op_res_45691 = x_45685;
                                } else {
                                    bool x_45692 = x_45687 && x_45687;
                                    bool x_45693 = !x_45687;
                                    bool y_45694 = x_45684 && x_45693;
                                    bool defunc_1_op_res_f_res_45695 =
                                         x_45692 || y_45694;
                                    int32_t defunc_1_op_res_f_res_45696;
                                    
                                    if (x_45687) {
                                        defunc_1_op_res_f_res_45696 = x_45688;
                                    } else {
                                        defunc_1_op_res_f_res_45696 = x_45685;
                                    }
                                    defunc_1_op_res_45690 =
                                        defunc_1_op_res_f_res_45695;
                                    defunc_1_op_res_45691 =
                                        defunc_1_op_res_f_res_45696;
                                }
                                
                                float defunc_1_op_res_45697 = x_45686 + x_45689;
                                
                                x_45684 = defunc_1_op_res_45690;
                                x_45685 = defunc_1_op_res_45691;
                                x_45686 = defunc_1_op_res_45697;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661)] =
                                    x_45684;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661)] =
                                    x_45685;
                                ((volatile __local
                                  float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661)] =
                                    x_45686;
                            }
                        }
                        offset_45707 *= 2;
                    }
                    while (slt32(skip_waves_45708,
                                 squot32(sext_i64_i32(segred_group_sizze_36183) +
                                         wave_sizze_45663 - 1,
                                         wave_sizze_45663))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45707 = skip_waves_45708 * wave_sizze_45663;
                        if (slt32(local_tid_45661 + offset_45707,
                                  sext_i64_i32(segred_group_sizze_36183)) &&
                            ((local_tid_45661 - squot32(local_tid_45661,
                                                        wave_sizze_45663) *
                              wave_sizze_45663) == 0 &&
                             (squot32(local_tid_45661, wave_sizze_45663) & (2 *
                                                                            skip_waves_45708 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45687 = ((__local
                                            bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661 +
                                                                       offset_45707)];
                                x_45688 = ((__local
                                            int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661 +
                                                                          offset_45707)];
                                x_45689 = ((__local
                                            float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661 +
                                                                        offset_45707)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45690;
                                int32_t defunc_1_op_res_45691;
                                
                                if (x_45684) {
                                    defunc_1_op_res_45690 = x_45684;
                                    defunc_1_op_res_45691 = x_45685;
                                } else {
                                    bool x_45692 = x_45687 && x_45687;
                                    bool x_45693 = !x_45687;
                                    bool y_45694 = x_45684 && x_45693;
                                    bool defunc_1_op_res_f_res_45695 =
                                         x_45692 || y_45694;
                                    int32_t defunc_1_op_res_f_res_45696;
                                    
                                    if (x_45687) {
                                        defunc_1_op_res_f_res_45696 = x_45688;
                                    } else {
                                        defunc_1_op_res_f_res_45696 = x_45685;
                                    }
                                    defunc_1_op_res_45690 =
                                        defunc_1_op_res_f_res_45695;
                                    defunc_1_op_res_45691 =
                                        defunc_1_op_res_f_res_45696;
                                }
                                
                                float defunc_1_op_res_45697 = x_45686 + x_45689;
                                
                                x_45684 = defunc_1_op_res_45690;
                                x_45685 = defunc_1_op_res_45691;
                                x_45686 = defunc_1_op_res_45697;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45665)[sext_i32_i64(local_tid_45661)] =
                                    x_45684;
                                ((__local
                                  int32_t *) red_arr_mem_45667)[sext_i32_i64(local_tid_45661)] =
                                    x_45685;
                                ((__local
                                  float *) red_arr_mem_45669)[sext_i32_i64(local_tid_45661)] =
                                    x_45686;
                            }
                        }
                        skip_waves_45708 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45661 == 0) {
                            ((__global bool *) mem_44295)[gtid_36004] = x_45684;
                            ((__global int32_t *) mem_44297)[gtid_36004] =
                                x_45685;
                            ((__global float *) mem_44299)[gtid_36004] =
                                x_45686;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36183
}
__kernel void mainDetailedzisegred_nonseg_34273(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45364_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_45362_backing_aligned_1,
                                                int64_t m_30057,
                                                int64_t num_groups_34268,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44022,
                                                __global
                                                unsigned char *mem_44027,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_45352,
                                                __global
                                                unsigned char *group_res_arr_mem_45354,
                                                int64_t num_threads_45356)
{
    #define segred_group_sizze_34266 (mainDetailedzisegred_group_sizze_34265)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45364_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45364_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45362_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45362_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45357;
    int32_t local_tid_45358;
    int64_t group_sizze_45361;
    int32_t wave_sizze_45360;
    int32_t group_tid_45359;
    
    global_tid_45357 = get_global_id(0);
    local_tid_45358 = get_local_id(0);
    group_sizze_45361 = get_local_size(0);
    wave_sizze_45360 = LOCKSTEP_WIDTH;
    group_tid_45359 = get_group_id(0);
    
    int32_t phys_tid_34273;
    
    phys_tid_34273 = global_tid_45357;
    
    __local char *sync_arr_mem_45362;
    
    sync_arr_mem_45362 = (__local char *) sync_arr_mem_45362_backing_0;
    
    __local char *red_arr_mem_45364;
    
    red_arr_mem_45364 = (__local char *) red_arr_mem_45364_backing_1;
    
    int64_t dummy_34271;
    
    dummy_34271 = 0;
    
    int64_t gtid_34272;
    
    gtid_34272 = 0;
    
    int32_t x_acc_45366;
    int64_t chunk_sizze_45367;
    
    chunk_sizze_45367 = smin64(sdiv_up64(m_30057,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_34266 *
                                         num_groups_34268))),
                               sdiv_up64(m_30057 - sext_i32_i64(phys_tid_34273),
                                         num_threads_45356));
    
    int32_t x_30414;
    int32_t x_30415;
    
    // neutral-initialise the accumulators
    {
        x_acc_45366 = 0;
    }
    for (int64_t i_45371 = 0; i_45371 < chunk_sizze_45367; i_45371++) {
        gtid_34272 = sext_i32_i64(phys_tid_34273) + num_threads_45356 * i_45371;
        // apply map function
        {
            int32_t x_30417 = ((__global
                                int32_t *) defunc_3_map_res_mem_44022)[gtid_34272];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_30414 = x_acc_45366;
            }
            // load new values
            {
                x_30415 = x_30417;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_30416 = smax32(x_30414, x_30415);
                
                // store in accumulator
                {
                    x_acc_45366 = defunc_1_op_res_30416;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_30414 = x_acc_45366;
        ((__local int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358)] =
            x_30414;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45372;
    int32_t skip_waves_45373;
    
    skip_waves_45373 = 1;
    
    int32_t x_45368;
    int32_t x_45369;
    
    offset_45372 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45358, sext_i64_i32(segred_group_sizze_34266))) {
            x_45368 = ((__local
                        int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358 +
                                                      offset_45372)];
        }
    }
    offset_45372 = 1;
    while (slt32(offset_45372, wave_sizze_45360)) {
        if (slt32(local_tid_45358 + offset_45372,
                  sext_i64_i32(segred_group_sizze_34266)) && ((local_tid_45358 -
                                                               squot32(local_tid_45358,
                                                                       wave_sizze_45360) *
                                                               wave_sizze_45360) &
                                                              (2 *
                                                               offset_45372 -
                                                               1)) == 0) {
            // read array element
            {
                x_45369 = ((volatile __local
                            int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358 +
                                                          offset_45372)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45370 = smax32(x_45368, x_45369);
                
                x_45368 = defunc_1_op_res_45370;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358)] =
                    x_45368;
            }
        }
        offset_45372 *= 2;
    }
    while (slt32(skip_waves_45373,
                 squot32(sext_i64_i32(segred_group_sizze_34266) +
                         wave_sizze_45360 - 1, wave_sizze_45360))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45372 = skip_waves_45373 * wave_sizze_45360;
        if (slt32(local_tid_45358 + offset_45372,
                  sext_i64_i32(segred_group_sizze_34266)) && ((local_tid_45358 -
                                                               squot32(local_tid_45358,
                                                                       wave_sizze_45360) *
                                                               wave_sizze_45360) ==
                                                              0 &&
                                                              (squot32(local_tid_45358,
                                                                       wave_sizze_45360) &
                                                               (2 *
                                                                skip_waves_45373 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45369 = ((__local
                            int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358 +
                                                          offset_45372)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45370 = smax32(x_45368, x_45369);
                
                x_45368 = defunc_1_op_res_45370;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358)] =
                    x_45368;
            }
        }
        skip_waves_45373 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45358) == 0) {
            x_acc_45366 = x_45368;
        }
    }
    
    int32_t old_counter_45374;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45358 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45354)[sext_i32_i64(group_tid_45359) *
                                                  segred_group_sizze_34266] =
                x_acc_45366;
            mem_fence_global();
            old_counter_45374 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45352)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45362)[0] = old_counter_45374 ==
                num_groups_34268 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45375;
    
    is_last_group_45375 = ((__local bool *) sync_arr_mem_45362)[0];
    if (is_last_group_45375) {
        if (local_tid_45358 == 0) {
            old_counter_45374 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45352)[0],
                                                      (int) (0 -
                                                             num_groups_34268));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45376 = sdiv_up64(num_groups_34268,
                                                      segred_group_sizze_34266);
            
            x_30414 = 0;
            for (int64_t i_45377 = 0; i_45377 < read_per_thread_45376;
                 i_45377++) {
                int64_t group_res_id_45378 = sext_i32_i64(local_tid_45358) *
                        read_per_thread_45376 + i_45377;
                int64_t index_of_group_res_45379 = group_res_id_45378;
                
                if (slt64(group_res_id_45378, num_groups_34268)) {
                    x_30415 = ((__global
                                int32_t *) group_res_arr_mem_45354)[index_of_group_res_45379 *
                                                                    segred_group_sizze_34266];
                    
                    int32_t defunc_1_op_res_30416;
                    
                    defunc_1_op_res_30416 = smax32(x_30414, x_30415);
                    x_30414 = defunc_1_op_res_30416;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358)] =
            x_30414;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45380;
            int32_t skip_waves_45381;
            
            skip_waves_45381 = 1;
            
            int32_t x_45368;
            int32_t x_45369;
            
            offset_45380 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45358,
                          sext_i64_i32(segred_group_sizze_34266))) {
                    x_45368 = ((__local
                                int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358 +
                                                              offset_45380)];
                }
            }
            offset_45380 = 1;
            while (slt32(offset_45380, wave_sizze_45360)) {
                if (slt32(local_tid_45358 + offset_45380,
                          sext_i64_i32(segred_group_sizze_34266)) &&
                    ((local_tid_45358 - squot32(local_tid_45358,
                                                wave_sizze_45360) *
                      wave_sizze_45360) & (2 * offset_45380 - 1)) == 0) {
                    // read array element
                    {
                        x_45369 = ((volatile __local
                                    int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358 +
                                                                  offset_45380)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45370 = smax32(x_45368,
                                                               x_45369);
                        
                        x_45368 = defunc_1_op_res_45370;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358)] =
                            x_45368;
                    }
                }
                offset_45380 *= 2;
            }
            while (slt32(skip_waves_45381,
                         squot32(sext_i64_i32(segred_group_sizze_34266) +
                                 wave_sizze_45360 - 1, wave_sizze_45360))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45380 = skip_waves_45381 * wave_sizze_45360;
                if (slt32(local_tid_45358 + offset_45380,
                          sext_i64_i32(segred_group_sizze_34266)) &&
                    ((local_tid_45358 - squot32(local_tid_45358,
                                                wave_sizze_45360) *
                      wave_sizze_45360) == 0 && (squot32(local_tid_45358,
                                                         wave_sizze_45360) &
                                                 (2 * skip_waves_45381 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45369 = ((__local
                                    int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358 +
                                                                  offset_45380)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45370 = smax32(x_45368,
                                                               x_45369);
                        
                        x_45368 = defunc_1_op_res_45370;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45364)[sext_i32_i64(local_tid_45358)] =
                            x_45368;
                    }
                }
                skip_waves_45381 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45358 == 0) {
                    ((__global int32_t *) mem_44027)[0] = x_45368;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34266
}
__kernel void mainDetailedzisegred_small_32177(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44707_backing_aligned_0,
                                               int64_t N_30056, int64_t m_30057,
                                               int64_t N_30058,
                                               int64_t i32_res_30070,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_32316,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43526,
                                               __global
                                               unsigned char *mem_43531,
                                               int64_t segment_sizze_nonzzero_44700)
{
    #define segred_group_sizze_32315 (mainDetailedzisegred_group_sizze_32171)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44707_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44707_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44702;
    int32_t local_tid_44703;
    int64_t group_sizze_44706;
    int32_t wave_sizze_44705;
    int32_t group_tid_44704;
    
    global_tid_44702 = get_global_id(0);
    local_tid_44703 = get_local_id(0);
    group_sizze_44706 = get_local_size(0);
    wave_sizze_44705 = LOCKSTEP_WIDTH;
    group_tid_44704 = get_group_id(0);
    
    int32_t phys_tid_32177;
    
    phys_tid_32177 = global_tid_44702;
    
    __local char *red_arr_mem_44707;
    
    red_arr_mem_44707 = (__local char *) red_arr_mem_44707_backing_0;
    
    int32_t phys_group_id_44709;
    
    phys_group_id_44709 = get_group_id(0);
    for (int32_t i_44710 = 0; i_44710 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057 * i32_res_30076 *
                                          i32_res_30076,
                                          squot64(segred_group_sizze_32315,
                                                  segment_sizze_nonzzero_44700))) -
                   phys_group_id_44709, sext_i64_i32(num_groups_32316));
         i_44710++) {
        int32_t virt_group_id_44711 = phys_group_id_44709 + i_44710 *
                sext_i64_i32(num_groups_32316);
        int64_t gtid_32164 = squot64(squot64(sext_i32_i64(local_tid_44703),
                                             segment_sizze_nonzzero_44700) +
                                     sext_i32_i64(virt_group_id_44711) *
                                     squot64(segred_group_sizze_32315,
                                             segment_sizze_nonzzero_44700),
                                     i32_res_30076 * i32_res_30076);
        int64_t gtid_32165 = squot64(squot64(sext_i32_i64(local_tid_44703),
                                             segment_sizze_nonzzero_44700) +
                                     sext_i32_i64(virt_group_id_44711) *
                                     squot64(segred_group_sizze_32315,
                                             segment_sizze_nonzzero_44700) -
                                     squot64(squot64(sext_i32_i64(local_tid_44703),
                                                     segment_sizze_nonzzero_44700) +
                                             sext_i32_i64(virt_group_id_44711) *
                                             squot64(segred_group_sizze_32315,
                                                     segment_sizze_nonzzero_44700),
                                             i32_res_30076 * i32_res_30076) *
                                     (i32_res_30076 * i32_res_30076),
                                     i32_res_30076);
        int64_t gtid_32166 = squot64(sext_i32_i64(local_tid_44703),
                                     segment_sizze_nonzzero_44700) +
                sext_i32_i64(virt_group_id_44711) *
                squot64(segred_group_sizze_32315,
                        segment_sizze_nonzzero_44700) -
                squot64(squot64(sext_i32_i64(local_tid_44703),
                                segment_sizze_nonzzero_44700) +
                        sext_i32_i64(virt_group_id_44711) *
                        squot64(segred_group_sizze_32315,
                                segment_sizze_nonzzero_44700), i32_res_30076 *
                        i32_res_30076) * (i32_res_30076 * i32_res_30076) -
                squot64(squot64(sext_i32_i64(local_tid_44703),
                                segment_sizze_nonzzero_44700) +
                        sext_i32_i64(virt_group_id_44711) *
                        squot64(segred_group_sizze_32315,
                                segment_sizze_nonzzero_44700) -
                        squot64(squot64(sext_i32_i64(local_tid_44703),
                                        segment_sizze_nonzzero_44700) +
                                sext_i32_i64(virt_group_id_44711) *
                                squot64(segred_group_sizze_32315,
                                        segment_sizze_nonzzero_44700),
                                i32_res_30076 * i32_res_30076) *
                        (i32_res_30076 * i32_res_30076), i32_res_30076) *
                i32_res_30076;
        int64_t gtid_32176 = srem64(sext_i32_i64(local_tid_44703),
                                    i32_res_30070);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30070) && (((slt64(gtid_32164, m_30057) &&
                                              slt64(gtid_32165,
                                                    i32_res_30076)) &&
                                             slt64(gtid_32166,
                                                   i32_res_30076)) &&
                                            slt64(sext_i32_i64(local_tid_44703),
                                                  i32_res_30070 *
                                                  squot64(segred_group_sizze_32315,
                                                          segment_sizze_nonzzero_44700)))) {
                float x_32325 = ((__global
                                  float *) images_mem_43378)[gtid_32164 *
                                                             N_30058 +
                                                             gtid_32176];
                float x_32326 = ((__global
                                  float *) binop_p_mem_43387)[gtid_32165 *
                                                              N_30056 +
                                                              gtid_32176];
                float x_32327 = ((__global float *) mem_43526)[gtid_32166 *
                                                               N_30056 +
                                                               gtid_32176];
                float x_32328 = x_32326 * x_32327;
                bool isnan_res_32329;
                
                isnan_res_32329 = futrts_isnan32(x_32325);
                
                float y_32330;
                
                if (isnan_res_32329) {
                    y_32330 = 0.0F;
                } else {
                    y_32330 = 1.0F;
                }
                
                float defunc_2_f_res_32331 = x_32328 * y_32330;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)] =
                        defunc_2_f_res_32331;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30070)) {
            // perform segmented scan to imitate reduction
            {
                float x_32319;
                float x_32320;
                float x_44712;
                float x_44713;
                bool ltid_in_bounds_44715;
                
                ltid_in_bounds_44715 = slt64(sext_i32_i64(local_tid_44703),
                                             i32_res_30070 *
                                             squot64(segred_group_sizze_32315,
                                                     segment_sizze_nonzzero_44700));
                
                int32_t skip_threads_44716;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44715) {
                        x_32320 = ((volatile __local
                                    float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)];
                        if ((local_tid_44703 - squot32(local_tid_44703, 32) *
                             32) == 0) {
                            x_32319 = x_32320;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44716 = 1;
                    while (slt32(skip_threads_44716, 32)) {
                        if (sle32(skip_threads_44716, local_tid_44703 -
                                  squot32(local_tid_44703, 32) * 32) &&
                            ltid_in_bounds_44715) {
                            // read operands
                            {
                                x_32319 = ((volatile __local
                                            float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703) -
                                                                        sext_i32_i64(skip_threads_44716)];
                            }
                            // perform operation
                            {
                                bool inactive_44717 =
                                     slt64(srem64(sext_i32_i64(local_tid_44703),
                                                  i32_res_30070),
                                           sext_i32_i64(local_tid_44703) -
                                           sext_i32_i64(local_tid_44703 -
                                           skip_threads_44716));
                                
                                if (inactive_44717) {
                                    x_32319 = x_32320;
                                }
                                if (!inactive_44717) {
                                    float defunc_1_op_res_32321 = x_32319 +
                                          x_32320;
                                    
                                    x_32319 = defunc_1_op_res_32321;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44705, skip_threads_44716)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44716, local_tid_44703 -
                                  squot32(local_tid_44703, 32) * 32) &&
                            ltid_in_bounds_44715) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)] =
                                    x_32319;
                                x_32320 = x_32319;
                            }
                        }
                        if (sle32(wave_sizze_44705, skip_threads_44716)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44716 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44703 - squot32(local_tid_44703, 32) * 32) ==
                        31 && ltid_in_bounds_44715) {
                        ((volatile __local
                          float *) red_arr_mem_44707)[sext_i32_i64(squot32(local_tid_44703,
                                                                           32))] =
                            x_32319;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44718;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44703, 32) == 0 &&
                            ltid_in_bounds_44715) {
                            x_44713 = ((volatile __local
                                        float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)];
                            if ((local_tid_44703 - squot32(local_tid_44703,
                                                           32) * 32) == 0) {
                                x_44712 = x_44713;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44718 = 1;
                        while (slt32(skip_threads_44718, 32)) {
                            if (sle32(skip_threads_44718, local_tid_44703 -
                                      squot32(local_tid_44703, 32) * 32) &&
                                (squot32(local_tid_44703, 32) == 0 &&
                                 ltid_in_bounds_44715)) {
                                // read operands
                                {
                                    x_44712 = ((volatile __local
                                                float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703) -
                                                                            sext_i32_i64(skip_threads_44718)];
                                }
                                // perform operation
                                {
                                    bool inactive_44719 =
                                         slt64(srem64(sext_i32_i64(local_tid_44703 *
                                                      32 + 32 - 1),
                                                      i32_res_30070),
                                               sext_i32_i64(local_tid_44703 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44703 -
                                                             skip_threads_44718) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44719) {
                                        x_44712 = x_44713;
                                    }
                                    if (!inactive_44719) {
                                        float defunc_1_op_res_44714 = x_44712 +
                                              x_44713;
                                        
                                        x_44712 = defunc_1_op_res_44714;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44705, skip_threads_44718)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44718, local_tid_44703 -
                                      squot32(local_tid_44703, 32) * 32) &&
                                (squot32(local_tid_44703, 32) == 0 &&
                                 ltid_in_bounds_44715)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)] =
                                        x_44712;
                                    x_44713 = x_44712;
                                }
                            }
                            if (sle32(wave_sizze_44705, skip_threads_44718)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44718 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44703, 32) == 0 ||
                          !ltid_in_bounds_44715)) {
                        // read operands
                        {
                            x_32320 = x_32319;
                            x_32319 = ((__local
                                        float *) red_arr_mem_44707)[sext_i32_i64(squot32(local_tid_44703,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44720 =
                                 slt64(srem64(sext_i32_i64(local_tid_44703),
                                              i32_res_30070),
                                       sext_i32_i64(local_tid_44703) -
                                       sext_i32_i64(squot32(local_tid_44703,
                                                            32) * 32 - 1));
                            
                            if (inactive_44720) {
                                x_32319 = x_32320;
                            }
                            if (!inactive_44720) {
                                float defunc_1_op_res_32321 = x_32319 + x_32320;
                                
                                x_32319 = defunc_1_op_res_32321;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)] =
                                x_32319;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44703, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44707)[sext_i32_i64(local_tid_44703)] =
                            x_32320;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44711) *
                      squot64(segred_group_sizze_32315,
                              segment_sizze_nonzzero_44700) +
                      sext_i32_i64(local_tid_44703), m_30057 * i32_res_30076 *
                      i32_res_30076) && slt64(sext_i32_i64(local_tid_44703),
                                              squot64(segred_group_sizze_32315,
                                                      segment_sizze_nonzzero_44700))) {
                ((__global
                  float *) mem_43531)[squot64(sext_i32_i64(virt_group_id_44711) *
                                              squot64(segred_group_sizze_32315,
                                                      segment_sizze_nonzzero_44700) +
                                              sext_i32_i64(local_tid_44703),
                                              i32_res_30076 * i32_res_30076) *
                                      (i32_res_30076 * i32_res_30076) +
                                      squot64(sext_i32_i64(virt_group_id_44711) *
                                              squot64(segred_group_sizze_32315,
                                                      segment_sizze_nonzzero_44700) +
                                              sext_i32_i64(local_tid_44703) -
                                              squot64(sext_i32_i64(virt_group_id_44711) *
                                                      squot64(segred_group_sizze_32315,
                                                              segment_sizze_nonzzero_44700) +
                                                      sext_i32_i64(local_tid_44703),
                                                      i32_res_30076 *
                                                      i32_res_30076) *
                                              (i32_res_30076 * i32_res_30076),
                                              i32_res_30076) * i32_res_30076 +
                                      (sext_i32_i64(virt_group_id_44711) *
                                       squot64(segred_group_sizze_32315,
                                               segment_sizze_nonzzero_44700) +
                                       sext_i32_i64(local_tid_44703) -
                                       squot64(sext_i32_i64(virt_group_id_44711) *
                                               squot64(segred_group_sizze_32315,
                                                       segment_sizze_nonzzero_44700) +
                                               sext_i32_i64(local_tid_44703),
                                               i32_res_30076 * i32_res_30076) *
                                       (i32_res_30076 * i32_res_30076) -
                                       squot64(sext_i32_i64(virt_group_id_44711) *
                                               squot64(segred_group_sizze_32315,
                                                       segment_sizze_nonzzero_44700) +
                                               sext_i32_i64(local_tid_44703) -
                                               squot64(sext_i32_i64(virt_group_id_44711) *
                                                       squot64(segred_group_sizze_32315,
                                                               segment_sizze_nonzzero_44700) +
                                                       sext_i32_i64(local_tid_44703),
                                                       i32_res_30076 *
                                                       i32_res_30076) *
                                               (i32_res_30076 * i32_res_30076),
                                               i32_res_30076) *
                                       i32_res_30076)] = ((__local
                                                           float *) red_arr_mem_44707)[(sext_i32_i64(local_tid_44703) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44700 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32315
}
__kernel void mainDetailedzisegred_small_33350(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44861_backing_aligned_0,
                                               int64_t N_30056, int64_t m_30057,
                                               int64_t N_30058,
                                               int64_t i32_res_30070,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_33403,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43712,
                                               int64_t segment_sizze_nonzzero_44854)
{
    #define segred_group_sizze_33402 (mainDetailedzisegred_group_sizze_33344)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44861_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44861_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44856;
    int32_t local_tid_44857;
    int64_t group_sizze_44860;
    int32_t wave_sizze_44859;
    int32_t group_tid_44858;
    
    global_tid_44856 = get_global_id(0);
    local_tid_44857 = get_local_id(0);
    group_sizze_44860 = get_local_size(0);
    wave_sizze_44859 = LOCKSTEP_WIDTH;
    group_tid_44858 = get_group_id(0);
    
    int32_t phys_tid_33350;
    
    phys_tid_33350 = global_tid_44856;
    
    __local char *red_arr_mem_44861;
    
    red_arr_mem_44861 = (__local char *) red_arr_mem_44861_backing_0;
    
    int32_t phys_group_id_44863;
    
    phys_group_id_44863 = get_group_id(0);
    for (int32_t i_44864 = 0; i_44864 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057 * i32_res_30076,
                                          squot64(segred_group_sizze_33402,
                                                  segment_sizze_nonzzero_44854))) -
                   phys_group_id_44863, sext_i64_i32(num_groups_33403));
         i_44864++) {
        int32_t virt_group_id_44865 = phys_group_id_44863 + i_44864 *
                sext_i64_i32(num_groups_33403);
        int64_t gtid_33339 = squot64(squot64(sext_i32_i64(local_tid_44857),
                                             segment_sizze_nonzzero_44854) +
                                     sext_i32_i64(virt_group_id_44865) *
                                     squot64(segred_group_sizze_33402,
                                             segment_sizze_nonzzero_44854),
                                     i32_res_30076);
        int64_t gtid_33340 = squot64(sext_i32_i64(local_tid_44857),
                                     segment_sizze_nonzzero_44854) +
                sext_i32_i64(virt_group_id_44865) *
                squot64(segred_group_sizze_33402,
                        segment_sizze_nonzzero_44854) -
                squot64(squot64(sext_i32_i64(local_tid_44857),
                                segment_sizze_nonzzero_44854) +
                        sext_i32_i64(virt_group_id_44865) *
                        squot64(segred_group_sizze_33402,
                                segment_sizze_nonzzero_44854), i32_res_30076) *
                i32_res_30076;
        int64_t gtid_33349 = srem64(sext_i32_i64(local_tid_44857),
                                    i32_res_30070);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30070) && ((slt64(gtid_33339, m_30057) &&
                                             slt64(gtid_33340,
                                                   i32_res_30076)) &&
                                            slt64(sext_i32_i64(local_tid_44857),
                                                  i32_res_30070 *
                                                  squot64(segred_group_sizze_33402,
                                                          segment_sizze_nonzzero_44854)))) {
                float x_33412 = ((__global
                                  float *) images_mem_43378)[gtid_33339 *
                                                             N_30058 +
                                                             gtid_33349];
                bool isnan_res_33413;
                
                isnan_res_33413 = futrts_isnan32(x_33412);
                
                float defunc_1_f_res_33414;
                
                if (isnan_res_33413) {
                    defunc_1_f_res_33414 = 0.0F;
                } else {
                    float x_33411 = ((__global
                                      float *) binop_p_mem_43387)[gtid_33340 *
                                                                  N_30056 +
                                                                  gtid_33349];
                    float defunc_1_f_res_f_res_33415 = x_33411 * x_33412;
                    
                    defunc_1_f_res_33414 = defunc_1_f_res_f_res_33415;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)] =
                        defunc_1_f_res_33414;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30070)) {
            // perform segmented scan to imitate reduction
            {
                float x_33406;
                float x_33407;
                float x_44866;
                float x_44867;
                bool ltid_in_bounds_44869;
                
                ltid_in_bounds_44869 = slt64(sext_i32_i64(local_tid_44857),
                                             i32_res_30070 *
                                             squot64(segred_group_sizze_33402,
                                                     segment_sizze_nonzzero_44854));
                
                int32_t skip_threads_44870;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44869) {
                        x_33407 = ((volatile __local
                                    float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)];
                        if ((local_tid_44857 - squot32(local_tid_44857, 32) *
                             32) == 0) {
                            x_33406 = x_33407;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44870 = 1;
                    while (slt32(skip_threads_44870, 32)) {
                        if (sle32(skip_threads_44870, local_tid_44857 -
                                  squot32(local_tid_44857, 32) * 32) &&
                            ltid_in_bounds_44869) {
                            // read operands
                            {
                                x_33406 = ((volatile __local
                                            float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857) -
                                                                        sext_i32_i64(skip_threads_44870)];
                            }
                            // perform operation
                            {
                                bool inactive_44871 =
                                     slt64(srem64(sext_i32_i64(local_tid_44857),
                                                  i32_res_30070),
                                           sext_i32_i64(local_tid_44857) -
                                           sext_i32_i64(local_tid_44857 -
                                           skip_threads_44870));
                                
                                if (inactive_44871) {
                                    x_33406 = x_33407;
                                }
                                if (!inactive_44871) {
                                    float defunc_1_op_res_33408 = x_33406 +
                                          x_33407;
                                    
                                    x_33406 = defunc_1_op_res_33408;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44859, skip_threads_44870)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44870, local_tid_44857 -
                                  squot32(local_tid_44857, 32) * 32) &&
                            ltid_in_bounds_44869) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)] =
                                    x_33406;
                                x_33407 = x_33406;
                            }
                        }
                        if (sle32(wave_sizze_44859, skip_threads_44870)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44870 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44857 - squot32(local_tid_44857, 32) * 32) ==
                        31 && ltid_in_bounds_44869) {
                        ((volatile __local
                          float *) red_arr_mem_44861)[sext_i32_i64(squot32(local_tid_44857,
                                                                           32))] =
                            x_33406;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44872;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44857, 32) == 0 &&
                            ltid_in_bounds_44869) {
                            x_44867 = ((volatile __local
                                        float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)];
                            if ((local_tid_44857 - squot32(local_tid_44857,
                                                           32) * 32) == 0) {
                                x_44866 = x_44867;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44872 = 1;
                        while (slt32(skip_threads_44872, 32)) {
                            if (sle32(skip_threads_44872, local_tid_44857 -
                                      squot32(local_tid_44857, 32) * 32) &&
                                (squot32(local_tid_44857, 32) == 0 &&
                                 ltid_in_bounds_44869)) {
                                // read operands
                                {
                                    x_44866 = ((volatile __local
                                                float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857) -
                                                                            sext_i32_i64(skip_threads_44872)];
                                }
                                // perform operation
                                {
                                    bool inactive_44873 =
                                         slt64(srem64(sext_i32_i64(local_tid_44857 *
                                                      32 + 32 - 1),
                                                      i32_res_30070),
                                               sext_i32_i64(local_tid_44857 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44857 -
                                                             skip_threads_44872) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44873) {
                                        x_44866 = x_44867;
                                    }
                                    if (!inactive_44873) {
                                        float defunc_1_op_res_44868 = x_44866 +
                                              x_44867;
                                        
                                        x_44866 = defunc_1_op_res_44868;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44859, skip_threads_44872)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44872, local_tid_44857 -
                                      squot32(local_tid_44857, 32) * 32) &&
                                (squot32(local_tid_44857, 32) == 0 &&
                                 ltid_in_bounds_44869)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)] =
                                        x_44866;
                                    x_44867 = x_44866;
                                }
                            }
                            if (sle32(wave_sizze_44859, skip_threads_44872)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44872 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44857, 32) == 0 ||
                          !ltid_in_bounds_44869)) {
                        // read operands
                        {
                            x_33407 = x_33406;
                            x_33406 = ((__local
                                        float *) red_arr_mem_44861)[sext_i32_i64(squot32(local_tid_44857,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44874 =
                                 slt64(srem64(sext_i32_i64(local_tid_44857),
                                              i32_res_30070),
                                       sext_i32_i64(local_tid_44857) -
                                       sext_i32_i64(squot32(local_tid_44857,
                                                            32) * 32 - 1));
                            
                            if (inactive_44874) {
                                x_33406 = x_33407;
                            }
                            if (!inactive_44874) {
                                float defunc_1_op_res_33408 = x_33406 + x_33407;
                                
                                x_33406 = defunc_1_op_res_33408;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)] =
                                x_33406;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44857, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44861)[sext_i32_i64(local_tid_44857)] =
                            x_33407;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44865) *
                      squot64(segred_group_sizze_33402,
                              segment_sizze_nonzzero_44854) +
                      sext_i32_i64(local_tid_44857), m_30057 * i32_res_30076) &&
                slt64(sext_i32_i64(local_tid_44857),
                      squot64(segred_group_sizze_33402,
                              segment_sizze_nonzzero_44854))) {
                ((__global
                  float *) mem_43712)[squot64(sext_i32_i64(virt_group_id_44865) *
                                              squot64(segred_group_sizze_33402,
                                                      segment_sizze_nonzzero_44854) +
                                              sext_i32_i64(local_tid_44857),
                                              i32_res_30076) * i32_res_30076 +
                                      (sext_i32_i64(virt_group_id_44865) *
                                       squot64(segred_group_sizze_33402,
                                               segment_sizze_nonzzero_44854) +
                                       sext_i32_i64(local_tid_44857) -
                                       squot64(sext_i32_i64(virt_group_id_44865) *
                                               squot64(segred_group_sizze_33402,
                                                       segment_sizze_nonzzero_44854) +
                                               sext_i32_i64(local_tid_44857),
                                               i32_res_30076) *
                                       i32_res_30076)] = ((__local
                                                           float *) red_arr_mem_44861)[(sext_i32_i64(local_tid_44857) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44854 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33402
}
__kernel void mainDetailedzisegred_small_33487(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44949_backing_aligned_0,
                                               int64_t m_30057,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_33536,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43627,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43718,
                                               __global
                                               unsigned char *mem_43805,
                                               int64_t segment_sizze_nonzzero_44942)
{
    #define segred_group_sizze_33535 (mainDetailedzisegred_group_sizze_33481)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44949_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44949_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44944;
    int32_t local_tid_44945;
    int64_t group_sizze_44948;
    int32_t wave_sizze_44947;
    int32_t group_tid_44946;
    
    global_tid_44944 = get_global_id(0);
    local_tid_44945 = get_local_id(0);
    group_sizze_44948 = get_local_size(0);
    wave_sizze_44947 = LOCKSTEP_WIDTH;
    group_tid_44946 = get_group_id(0);
    
    int32_t phys_tid_33487;
    
    phys_tid_33487 = global_tid_44944;
    
    __local char *red_arr_mem_44949;
    
    red_arr_mem_44949 = (__local char *) red_arr_mem_44949_backing_0;
    
    int32_t phys_group_id_44951;
    
    phys_group_id_44951 = get_group_id(0);
    for (int32_t i_44952 = 0; i_44952 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057 * i32_res_30076,
                                          squot64(segred_group_sizze_33535,
                                                  segment_sizze_nonzzero_44942))) -
                   phys_group_id_44951, sext_i64_i32(num_groups_33536));
         i_44952++) {
        int32_t virt_group_id_44953 = phys_group_id_44951 + i_44952 *
                sext_i64_i32(num_groups_33536);
        int64_t gtid_33476 = squot64(squot64(sext_i32_i64(local_tid_44945),
                                             segment_sizze_nonzzero_44942) +
                                     sext_i32_i64(virt_group_id_44953) *
                                     squot64(segred_group_sizze_33535,
                                             segment_sizze_nonzzero_44942),
                                     i32_res_30076);
        int64_t gtid_33477 = squot64(sext_i32_i64(local_tid_44945),
                                     segment_sizze_nonzzero_44942) +
                sext_i32_i64(virt_group_id_44953) *
                squot64(segred_group_sizze_33535,
                        segment_sizze_nonzzero_44942) -
                squot64(squot64(sext_i32_i64(local_tid_44945),
                                segment_sizze_nonzzero_44942) +
                        sext_i32_i64(virt_group_id_44953) *
                        squot64(segred_group_sizze_33535,
                                segment_sizze_nonzzero_44942), i32_res_30076) *
                i32_res_30076;
        int64_t gtid_33486 = srem64(sext_i32_i64(local_tid_44945),
                                    i32_res_30076);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30076) && ((slt64(gtid_33476, m_30057) &&
                                             slt64(gtid_33477,
                                                   i32_res_30076)) &&
                                            slt64(sext_i32_i64(local_tid_44945),
                                                  i32_res_30076 *
                                                  squot64(segred_group_sizze_33535,
                                                          segment_sizze_nonzzero_44942)))) {
                float x_33545 = ((__global
                                  float *) defunc_3_map_res_mem_43718)[gtid_33476 *
                                                                       i32_res_30076 +
                                                                       gtid_33486];
                float x_33546 = ((__global
                                  float *) defunc_3_map_res_mem_43627)[gtid_33476 *
                                                                       (i32_res_30076 *
                                                                        i32_res_30076) +
                                                                       gtid_33477 *
                                                                       i32_res_30076 +
                                                                       gtid_33486];
                float defunc_1_f_res_33547 = x_33545 * x_33546;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                        defunc_1_f_res_33547;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30076)) {
            // perform segmented scan to imitate reduction
            {
                float x_33539;
                float x_33540;
                float x_44954;
                float x_44955;
                bool ltid_in_bounds_44957;
                
                ltid_in_bounds_44957 = slt64(sext_i32_i64(local_tid_44945),
                                             i32_res_30076 *
                                             squot64(segred_group_sizze_33535,
                                                     segment_sizze_nonzzero_44942));
                
                int32_t skip_threads_44958;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44957) {
                        x_33540 = ((volatile __local
                                    float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)];
                        if ((local_tid_44945 - squot32(local_tid_44945, 32) *
                             32) == 0) {
                            x_33539 = x_33540;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44958 = 1;
                    while (slt32(skip_threads_44958, 32)) {
                        if (sle32(skip_threads_44958, local_tid_44945 -
                                  squot32(local_tid_44945, 32) * 32) &&
                            ltid_in_bounds_44957) {
                            // read operands
                            {
                                x_33539 = ((volatile __local
                                            float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945) -
                                                                        sext_i32_i64(skip_threads_44958)];
                            }
                            // perform operation
                            {
                                bool inactive_44959 =
                                     slt64(srem64(sext_i32_i64(local_tid_44945),
                                                  i32_res_30076),
                                           sext_i32_i64(local_tid_44945) -
                                           sext_i32_i64(local_tid_44945 -
                                           skip_threads_44958));
                                
                                if (inactive_44959) {
                                    x_33539 = x_33540;
                                }
                                if (!inactive_44959) {
                                    float defunc_1_op_res_33541 = x_33539 +
                                          x_33540;
                                    
                                    x_33539 = defunc_1_op_res_33541;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44947, skip_threads_44958)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44958, local_tid_44945 -
                                  squot32(local_tid_44945, 32) * 32) &&
                            ltid_in_bounds_44957) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                                    x_33539;
                                x_33540 = x_33539;
                            }
                        }
                        if (sle32(wave_sizze_44947, skip_threads_44958)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44958 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44945 - squot32(local_tid_44945, 32) * 32) ==
                        31 && ltid_in_bounds_44957) {
                        ((volatile __local
                          float *) red_arr_mem_44949)[sext_i32_i64(squot32(local_tid_44945,
                                                                           32))] =
                            x_33539;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44960;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44945, 32) == 0 &&
                            ltid_in_bounds_44957) {
                            x_44955 = ((volatile __local
                                        float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)];
                            if ((local_tid_44945 - squot32(local_tid_44945,
                                                           32) * 32) == 0) {
                                x_44954 = x_44955;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44960 = 1;
                        while (slt32(skip_threads_44960, 32)) {
                            if (sle32(skip_threads_44960, local_tid_44945 -
                                      squot32(local_tid_44945, 32) * 32) &&
                                (squot32(local_tid_44945, 32) == 0 &&
                                 ltid_in_bounds_44957)) {
                                // read operands
                                {
                                    x_44954 = ((volatile __local
                                                float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945) -
                                                                            sext_i32_i64(skip_threads_44960)];
                                }
                                // perform operation
                                {
                                    bool inactive_44961 =
                                         slt64(srem64(sext_i32_i64(local_tid_44945 *
                                                      32 + 32 - 1),
                                                      i32_res_30076),
                                               sext_i32_i64(local_tid_44945 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44945 -
                                                             skip_threads_44960) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44961) {
                                        x_44954 = x_44955;
                                    }
                                    if (!inactive_44961) {
                                        float defunc_1_op_res_44956 = x_44954 +
                                              x_44955;
                                        
                                        x_44954 = defunc_1_op_res_44956;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44947, skip_threads_44960)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44960, local_tid_44945 -
                                      squot32(local_tid_44945, 32) * 32) &&
                                (squot32(local_tid_44945, 32) == 0 &&
                                 ltid_in_bounds_44957)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                                        x_44954;
                                    x_44955 = x_44954;
                                }
                            }
                            if (sle32(wave_sizze_44947, skip_threads_44960)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44960 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44945, 32) == 0 ||
                          !ltid_in_bounds_44957)) {
                        // read operands
                        {
                            x_33540 = x_33539;
                            x_33539 = ((__local
                                        float *) red_arr_mem_44949)[sext_i32_i64(squot32(local_tid_44945,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44962 =
                                 slt64(srem64(sext_i32_i64(local_tid_44945),
                                              i32_res_30076),
                                       sext_i32_i64(local_tid_44945) -
                                       sext_i32_i64(squot32(local_tid_44945,
                                                            32) * 32 - 1));
                            
                            if (inactive_44962) {
                                x_33539 = x_33540;
                            }
                            if (!inactive_44962) {
                                float defunc_1_op_res_33541 = x_33539 + x_33540;
                                
                                x_33539 = defunc_1_op_res_33541;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                                x_33539;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44945, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                            x_33540;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44953) *
                      squot64(segred_group_sizze_33535,
                              segment_sizze_nonzzero_44942) +
                      sext_i32_i64(local_tid_44945), m_30057 * i32_res_30076) &&
                slt64(sext_i32_i64(local_tid_44945),
                      squot64(segred_group_sizze_33535,
                              segment_sizze_nonzzero_44942))) {
                ((__global
                  float *) mem_43805)[squot64(sext_i32_i64(virt_group_id_44953) *
                                              squot64(segred_group_sizze_33535,
                                                      segment_sizze_nonzzero_44942) +
                                              sext_i32_i64(local_tid_44945),
                                              i32_res_30076) * i32_res_30076 +
                                      (sext_i32_i64(virt_group_id_44953) *
                                       squot64(segred_group_sizze_33535,
                                               segment_sizze_nonzzero_44942) +
                                       sext_i32_i64(local_tid_44945) -
                                       squot64(sext_i32_i64(virt_group_id_44953) *
                                               squot64(segred_group_sizze_33535,
                                                       segment_sizze_nonzzero_44942) +
                                               sext_i32_i64(local_tid_44945),
                                               i32_res_30076) *
                                       i32_res_30076)] = ((__local
                                                           float *) red_arr_mem_44949)[(sext_i32_i64(local_tid_44945) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44942 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33535
}
__kernel void mainDetailedzisegred_small_33617(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45037_backing_aligned_0,
                                               int64_t N_30056, int64_t m_30057,
                                               int64_t i32_res_30076,
                                               int64_t num_groups_33664,
                                               __global
                                               unsigned char *mem_43394,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43811,
                                               __global
                                               unsigned char *mem_43899,
                                               int64_t segment_sizze_nonzzero_45030)
{
    #define segred_group_sizze_33663 (mainDetailedzisegred_group_sizze_33611)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45037_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45037_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45032;
    int32_t local_tid_45033;
    int64_t group_sizze_45036;
    int32_t wave_sizze_45035;
    int32_t group_tid_45034;
    
    global_tid_45032 = get_global_id(0);
    local_tid_45033 = get_local_id(0);
    group_sizze_45036 = get_local_size(0);
    wave_sizze_45035 = LOCKSTEP_WIDTH;
    group_tid_45034 = get_group_id(0);
    
    int32_t phys_tid_33617;
    
    phys_tid_33617 = global_tid_45032;
    
    __local char *red_arr_mem_45037;
    
    red_arr_mem_45037 = (__local char *) red_arr_mem_45037_backing_0;
    
    int32_t phys_group_id_45039;
    
    phys_group_id_45039 = get_group_id(0);
    for (int32_t i_45040 = 0; i_45040 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057 * N_30056,
                                          squot64(segred_group_sizze_33663,
                                                  segment_sizze_nonzzero_45030))) -
                   phys_group_id_45039, sext_i64_i32(num_groups_33664));
         i_45040++) {
        int32_t virt_group_id_45041 = phys_group_id_45039 + i_45040 *
                sext_i64_i32(num_groups_33664);
        int64_t gtid_33606 = squot64(squot64(sext_i32_i64(local_tid_45033),
                                             segment_sizze_nonzzero_45030) +
                                     sext_i32_i64(virt_group_id_45041) *
                                     squot64(segred_group_sizze_33663,
                                             segment_sizze_nonzzero_45030),
                                     N_30056);
        int64_t gtid_33607 = squot64(sext_i32_i64(local_tid_45033),
                                     segment_sizze_nonzzero_45030) +
                sext_i32_i64(virt_group_id_45041) *
                squot64(segred_group_sizze_33663,
                        segment_sizze_nonzzero_45030) -
                squot64(squot64(sext_i32_i64(local_tid_45033),
                                segment_sizze_nonzzero_45030) +
                        sext_i32_i64(virt_group_id_45041) *
                        squot64(segred_group_sizze_33663,
                                segment_sizze_nonzzero_45030), N_30056) *
                N_30056;
        int64_t gtid_33616 = srem64(sext_i32_i64(local_tid_45033),
                                    i32_res_30076);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30076) && ((slt64(gtid_33606, m_30057) &&
                                             slt64(gtid_33607, N_30056)) &&
                                            slt64(sext_i32_i64(local_tid_45033),
                                                  i32_res_30076 *
                                                  squot64(segred_group_sizze_33663,
                                                          segment_sizze_nonzzero_45030)))) {
                float x_33672 = ((__global
                                  float *) defunc_4_map_res_mem_43811)[gtid_33606 *
                                                                       i32_res_30076 +
                                                                       gtid_33616];
                float x_33673 = ((__global float *) mem_43394)[gtid_33607 *
                                                               i32_res_30076 +
                                                               gtid_33616];
                float defunc_1_f_res_33674 = x_33672 * x_33673;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)] =
                        defunc_1_f_res_33674;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30076)) {
            // perform segmented scan to imitate reduction
            {
                float x_33667;
                float x_33668;
                float x_45042;
                float x_45043;
                bool ltid_in_bounds_45045;
                
                ltid_in_bounds_45045 = slt64(sext_i32_i64(local_tid_45033),
                                             i32_res_30076 *
                                             squot64(segred_group_sizze_33663,
                                                     segment_sizze_nonzzero_45030));
                
                int32_t skip_threads_45046;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45045) {
                        x_33668 = ((volatile __local
                                    float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)];
                        if ((local_tid_45033 - squot32(local_tid_45033, 32) *
                             32) == 0) {
                            x_33667 = x_33668;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45046 = 1;
                    while (slt32(skip_threads_45046, 32)) {
                        if (sle32(skip_threads_45046, local_tid_45033 -
                                  squot32(local_tid_45033, 32) * 32) &&
                            ltid_in_bounds_45045) {
                            // read operands
                            {
                                x_33667 = ((volatile __local
                                            float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033) -
                                                                        sext_i32_i64(skip_threads_45046)];
                            }
                            // perform operation
                            {
                                bool inactive_45047 =
                                     slt64(srem64(sext_i32_i64(local_tid_45033),
                                                  i32_res_30076),
                                           sext_i32_i64(local_tid_45033) -
                                           sext_i32_i64(local_tid_45033 -
                                           skip_threads_45046));
                                
                                if (inactive_45047) {
                                    x_33667 = x_33668;
                                }
                                if (!inactive_45047) {
                                    float defunc_1_op_res_33669 = x_33667 +
                                          x_33668;
                                    
                                    x_33667 = defunc_1_op_res_33669;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45035, skip_threads_45046)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45046, local_tid_45033 -
                                  squot32(local_tid_45033, 32) * 32) &&
                            ltid_in_bounds_45045) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)] =
                                    x_33667;
                                x_33668 = x_33667;
                            }
                        }
                        if (sle32(wave_sizze_45035, skip_threads_45046)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45046 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45033 - squot32(local_tid_45033, 32) * 32) ==
                        31 && ltid_in_bounds_45045) {
                        ((volatile __local
                          float *) red_arr_mem_45037)[sext_i32_i64(squot32(local_tid_45033,
                                                                           32))] =
                            x_33667;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45048;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45033, 32) == 0 &&
                            ltid_in_bounds_45045) {
                            x_45043 = ((volatile __local
                                        float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)];
                            if ((local_tid_45033 - squot32(local_tid_45033,
                                                           32) * 32) == 0) {
                                x_45042 = x_45043;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45048 = 1;
                        while (slt32(skip_threads_45048, 32)) {
                            if (sle32(skip_threads_45048, local_tid_45033 -
                                      squot32(local_tid_45033, 32) * 32) &&
                                (squot32(local_tid_45033, 32) == 0 &&
                                 ltid_in_bounds_45045)) {
                                // read operands
                                {
                                    x_45042 = ((volatile __local
                                                float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033) -
                                                                            sext_i32_i64(skip_threads_45048)];
                                }
                                // perform operation
                                {
                                    bool inactive_45049 =
                                         slt64(srem64(sext_i32_i64(local_tid_45033 *
                                                      32 + 32 - 1),
                                                      i32_res_30076),
                                               sext_i32_i64(local_tid_45033 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45033 -
                                                             skip_threads_45048) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45049) {
                                        x_45042 = x_45043;
                                    }
                                    if (!inactive_45049) {
                                        float defunc_1_op_res_45044 = x_45042 +
                                              x_45043;
                                        
                                        x_45042 = defunc_1_op_res_45044;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45035, skip_threads_45048)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45048, local_tid_45033 -
                                      squot32(local_tid_45033, 32) * 32) &&
                                (squot32(local_tid_45033, 32) == 0 &&
                                 ltid_in_bounds_45045)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)] =
                                        x_45042;
                                    x_45043 = x_45042;
                                }
                            }
                            if (sle32(wave_sizze_45035, skip_threads_45048)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45048 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45033, 32) == 0 ||
                          !ltid_in_bounds_45045)) {
                        // read operands
                        {
                            x_33668 = x_33667;
                            x_33667 = ((__local
                                        float *) red_arr_mem_45037)[sext_i32_i64(squot32(local_tid_45033,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45050 =
                                 slt64(srem64(sext_i32_i64(local_tid_45033),
                                              i32_res_30076),
                                       sext_i32_i64(local_tid_45033) -
                                       sext_i32_i64(squot32(local_tid_45033,
                                                            32) * 32 - 1));
                            
                            if (inactive_45050) {
                                x_33667 = x_33668;
                            }
                            if (!inactive_45050) {
                                float defunc_1_op_res_33669 = x_33667 + x_33668;
                                
                                x_33667 = defunc_1_op_res_33669;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)] =
                                x_33667;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45033, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45037)[sext_i32_i64(local_tid_45033)] =
                            x_33668;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45041) *
                      squot64(segred_group_sizze_33663,
                              segment_sizze_nonzzero_45030) +
                      sext_i32_i64(local_tid_45033), m_30057 * N_30056) &&
                slt64(sext_i32_i64(local_tid_45033),
                      squot64(segred_group_sizze_33663,
                              segment_sizze_nonzzero_45030))) {
                ((__global
                  float *) mem_43899)[squot64(sext_i32_i64(virt_group_id_45041) *
                                              squot64(segred_group_sizze_33663,
                                                      segment_sizze_nonzzero_45030) +
                                              sext_i32_i64(local_tid_45033),
                                              N_30056) * N_30056 +
                                      (sext_i32_i64(virt_group_id_45041) *
                                       squot64(segred_group_sizze_33663,
                                               segment_sizze_nonzzero_45030) +
                                       sext_i32_i64(local_tid_45033) -
                                       squot64(sext_i32_i64(virt_group_id_45041) *
                                               squot64(segred_group_sizze_33663,
                                                       segment_sizze_nonzzero_45030) +
                                               sext_i32_i64(local_tid_45033),
                                               N_30056) * N_30056)] = ((__local
                                                                        float *) red_arr_mem_45037)[(sext_i32_i64(local_tid_45033) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_45030 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33663
}
__kernel void mainDetailedzisegred_small_34183(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45291_backing_aligned_0,
                                               int64_t N_30056, int64_t m_30057,
                                               int64_t i32_res_30070,
                                               int64_t num_groups_34230,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43943,
                                               __global
                                               unsigned char *mem_44010,
                                               __global
                                               unsigned char *mem_44013,
                                               int64_t segment_sizze_nonzzero_45284)
{
    #define segred_group_sizze_34229 (mainDetailedzisegred_group_sizze_34177)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45291_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45291_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45286;
    int32_t local_tid_45287;
    int64_t group_sizze_45290;
    int32_t wave_sizze_45289;
    int32_t group_tid_45288;
    
    global_tid_45286 = get_global_id(0);
    local_tid_45287 = get_local_id(0);
    group_sizze_45290 = get_local_size(0);
    wave_sizze_45289 = LOCKSTEP_WIDTH;
    group_tid_45288 = get_group_id(0);
    
    int32_t phys_tid_34183;
    
    phys_tid_34183 = global_tid_45286;
    
    __local char *red_arr_mem_45291;
    
    red_arr_mem_45291 = (__local char *) red_arr_mem_45291_backing_0;
    
    int32_t phys_group_id_45293;
    
    phys_group_id_45293 = get_group_id(0);
    for (int32_t i_45294 = 0; i_45294 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057,
                                          squot64(segred_group_sizze_34229,
                                                  segment_sizze_nonzzero_45284))) -
                   phys_group_id_45293, sext_i64_i32(num_groups_34230));
         i_45294++) {
        int32_t virt_group_id_45295 = phys_group_id_45293 + i_45294 *
                sext_i64_i32(num_groups_34230);
        int64_t gtid_34174 = squot64(sext_i32_i64(local_tid_45287),
                                     segment_sizze_nonzzero_45284) +
                sext_i32_i64(virt_group_id_45295) *
                squot64(segred_group_sizze_34229, segment_sizze_nonzzero_45284);
        int64_t gtid_34182 = srem64(sext_i32_i64(local_tid_45287),
                                    i32_res_30070);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30070) && (slt64(gtid_34174, m_30057) &&
                                            slt64(sext_i32_i64(local_tid_45287),
                                                  i32_res_30070 *
                                                  squot64(segred_group_sizze_34229,
                                                          segment_sizze_nonzzero_45284)))) {
                int32_t defunc_0_f_res_34237 = ((__global
                                                 int32_t *) mem_44010)[gtid_34174];
                int32_t index_primexp_41456 = sext_i64_i32(gtid_34182);
                bool cond_34239 = slt32(index_primexp_41456,
                                        defunc_0_f_res_34237);
                float defunc_0_f_res_34240;
                
                if (cond_34239) {
                    int64_t i_34241 = sext_i32_i64(index_primexp_41456);
                    float defunc_0_f_res_t_res_34242 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_34174 *
                                                                                              N_30056 +
                                                                                              i_34241];
                    
                    defunc_0_f_res_34240 = defunc_0_f_res_t_res_34242;
                } else {
                    defunc_0_f_res_34240 = 0.0F;
                }
                
                float defunc_0_f_res_34243 = defunc_0_f_res_34240 *
                      defunc_0_f_res_34240;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)] =
                        defunc_0_f_res_34243;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30070)) {
            // perform segmented scan to imitate reduction
            {
                float x_34233;
                float x_34234;
                float x_45296;
                float x_45297;
                bool ltid_in_bounds_45299;
                
                ltid_in_bounds_45299 = slt64(sext_i32_i64(local_tid_45287),
                                             i32_res_30070 *
                                             squot64(segred_group_sizze_34229,
                                                     segment_sizze_nonzzero_45284));
                
                int32_t skip_threads_45300;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45299) {
                        x_34234 = ((volatile __local
                                    float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)];
                        if ((local_tid_45287 - squot32(local_tid_45287, 32) *
                             32) == 0) {
                            x_34233 = x_34234;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45300 = 1;
                    while (slt32(skip_threads_45300, 32)) {
                        if (sle32(skip_threads_45300, local_tid_45287 -
                                  squot32(local_tid_45287, 32) * 32) &&
                            ltid_in_bounds_45299) {
                            // read operands
                            {
                                x_34233 = ((volatile __local
                                            float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287) -
                                                                        sext_i32_i64(skip_threads_45300)];
                            }
                            // perform operation
                            {
                                bool inactive_45301 =
                                     slt64(srem64(sext_i32_i64(local_tid_45287),
                                                  i32_res_30070),
                                           sext_i32_i64(local_tid_45287) -
                                           sext_i32_i64(local_tid_45287 -
                                           skip_threads_45300));
                                
                                if (inactive_45301) {
                                    x_34233 = x_34234;
                                }
                                if (!inactive_45301) {
                                    float defunc_1_op_res_34235 = x_34233 +
                                          x_34234;
                                    
                                    x_34233 = defunc_1_op_res_34235;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45289, skip_threads_45300)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45300, local_tid_45287 -
                                  squot32(local_tid_45287, 32) * 32) &&
                            ltid_in_bounds_45299) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)] =
                                    x_34233;
                                x_34234 = x_34233;
                            }
                        }
                        if (sle32(wave_sizze_45289, skip_threads_45300)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45300 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45287 - squot32(local_tid_45287, 32) * 32) ==
                        31 && ltid_in_bounds_45299) {
                        ((volatile __local
                          float *) red_arr_mem_45291)[sext_i32_i64(squot32(local_tid_45287,
                                                                           32))] =
                            x_34233;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45302;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45287, 32) == 0 &&
                            ltid_in_bounds_45299) {
                            x_45297 = ((volatile __local
                                        float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)];
                            if ((local_tid_45287 - squot32(local_tid_45287,
                                                           32) * 32) == 0) {
                                x_45296 = x_45297;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45302 = 1;
                        while (slt32(skip_threads_45302, 32)) {
                            if (sle32(skip_threads_45302, local_tid_45287 -
                                      squot32(local_tid_45287, 32) * 32) &&
                                (squot32(local_tid_45287, 32) == 0 &&
                                 ltid_in_bounds_45299)) {
                                // read operands
                                {
                                    x_45296 = ((volatile __local
                                                float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287) -
                                                                            sext_i32_i64(skip_threads_45302)];
                                }
                                // perform operation
                                {
                                    bool inactive_45303 =
                                         slt64(srem64(sext_i32_i64(local_tid_45287 *
                                                      32 + 32 - 1),
                                                      i32_res_30070),
                                               sext_i32_i64(local_tid_45287 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45287 -
                                                             skip_threads_45302) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45303) {
                                        x_45296 = x_45297;
                                    }
                                    if (!inactive_45303) {
                                        float defunc_1_op_res_45298 = x_45296 +
                                              x_45297;
                                        
                                        x_45296 = defunc_1_op_res_45298;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45289, skip_threads_45302)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45302, local_tid_45287 -
                                      squot32(local_tid_45287, 32) * 32) &&
                                (squot32(local_tid_45287, 32) == 0 &&
                                 ltid_in_bounds_45299)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)] =
                                        x_45296;
                                    x_45297 = x_45296;
                                }
                            }
                            if (sle32(wave_sizze_45289, skip_threads_45302)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45302 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45287, 32) == 0 ||
                          !ltid_in_bounds_45299)) {
                        // read operands
                        {
                            x_34234 = x_34233;
                            x_34233 = ((__local
                                        float *) red_arr_mem_45291)[sext_i32_i64(squot32(local_tid_45287,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45304 =
                                 slt64(srem64(sext_i32_i64(local_tid_45287),
                                              i32_res_30070),
                                       sext_i32_i64(local_tid_45287) -
                                       sext_i32_i64(squot32(local_tid_45287,
                                                            32) * 32 - 1));
                            
                            if (inactive_45304) {
                                x_34233 = x_34234;
                            }
                            if (!inactive_45304) {
                                float defunc_1_op_res_34235 = x_34233 + x_34234;
                                
                                x_34233 = defunc_1_op_res_34235;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)] =
                                x_34233;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45287, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45291)[sext_i32_i64(local_tid_45287)] =
                            x_34234;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45295) *
                      squot64(segred_group_sizze_34229,
                              segment_sizze_nonzzero_45284) +
                      sext_i32_i64(local_tid_45287), m_30057) &&
                slt64(sext_i32_i64(local_tid_45287),
                      squot64(segred_group_sizze_34229,
                              segment_sizze_nonzzero_45284))) {
                ((__global
                  float *) mem_44013)[sext_i32_i64(virt_group_id_45295) *
                                      squot64(segred_group_sizze_34229,
                                              segment_sizze_nonzzero_45284) +
                                      sext_i32_i64(local_tid_45287)] = ((__local
                                                                         float *) red_arr_mem_45291)[(sext_i32_i64(local_tid_45287) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45284 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34229
}
__kernel void mainDetailedzisegred_small_34204(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45231_backing_aligned_0,
                                               int64_t m_30057, int64_t N_30058,
                                               int64_t i32_res_30070,
                                               int64_t num_groups_34216,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *mem_44010,
                                               int64_t segment_sizze_nonzzero_45224)
{
    #define segred_group_sizze_34215 (mainDetailedzisegred_group_sizze_34198)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45231_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45231_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45226;
    int32_t local_tid_45227;
    int64_t group_sizze_45230;
    int32_t wave_sizze_45229;
    int32_t group_tid_45228;
    
    global_tid_45226 = get_global_id(0);
    local_tid_45227 = get_local_id(0);
    group_sizze_45230 = get_local_size(0);
    wave_sizze_45229 = LOCKSTEP_WIDTH;
    group_tid_45228 = get_group_id(0);
    
    int32_t phys_tid_34204;
    
    phys_tid_34204 = global_tid_45226;
    
    __local char *red_arr_mem_45231;
    
    red_arr_mem_45231 = (__local char *) red_arr_mem_45231_backing_0;
    
    int32_t phys_group_id_45233;
    
    phys_group_id_45233 = get_group_id(0);
    for (int32_t i_45234 = 0; i_45234 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057,
                                          squot64(segred_group_sizze_34215,
                                                  segment_sizze_nonzzero_45224))) -
                   phys_group_id_45233, sext_i64_i32(num_groups_34216));
         i_45234++) {
        int32_t virt_group_id_45235 = phys_group_id_45233 + i_45234 *
                sext_i64_i32(num_groups_34216);
        int64_t gtid_34195 = squot64(sext_i32_i64(local_tid_45227),
                                     segment_sizze_nonzzero_45224) +
                sext_i32_i64(virt_group_id_45235) *
                squot64(segred_group_sizze_34215, segment_sizze_nonzzero_45224);
        int64_t gtid_34203 = srem64(sext_i32_i64(local_tid_45227),
                                    i32_res_30070);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30070) && (slt64(gtid_34195, m_30057) &&
                                            slt64(sext_i32_i64(local_tid_45227),
                                                  i32_res_30070 *
                                                  squot64(segred_group_sizze_34215,
                                                          segment_sizze_nonzzero_45224)))) {
                float x_34223 = ((__global
                                  float *) images_mem_43378)[gtid_34195 *
                                                             N_30058 +
                                                             gtid_34203];
                bool isnan_res_34224;
                
                isnan_res_34224 = futrts_isnan32(x_34223);
                
                bool cond_34225 = !isnan_res_34224;
                int32_t defunc_0_f_res_34226 = btoi_bool_i32(cond_34225);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                        defunc_0_f_res_34226;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30070)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_34219;
                int32_t x_34220;
                int32_t x_45236;
                int32_t x_45237;
                bool ltid_in_bounds_45239;
                
                ltid_in_bounds_45239 = slt64(sext_i32_i64(local_tid_45227),
                                             i32_res_30070 *
                                             squot64(segred_group_sizze_34215,
                                                     segment_sizze_nonzzero_45224));
                
                int32_t skip_threads_45240;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45239) {
                        x_34220 = ((volatile __local
                                    int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)];
                        if ((local_tid_45227 - squot32(local_tid_45227, 32) *
                             32) == 0) {
                            x_34219 = x_34220;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45240 = 1;
                    while (slt32(skip_threads_45240, 32)) {
                        if (sle32(skip_threads_45240, local_tid_45227 -
                                  squot32(local_tid_45227, 32) * 32) &&
                            ltid_in_bounds_45239) {
                            // read operands
                            {
                                x_34219 = ((volatile __local
                                            int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227) -
                                                                          sext_i32_i64(skip_threads_45240)];
                            }
                            // perform operation
                            {
                                bool inactive_45241 =
                                     slt64(srem64(sext_i32_i64(local_tid_45227),
                                                  i32_res_30070),
                                           sext_i32_i64(local_tid_45227) -
                                           sext_i32_i64(local_tid_45227 -
                                           skip_threads_45240));
                                
                                if (inactive_45241) {
                                    x_34219 = x_34220;
                                }
                                if (!inactive_45241) {
                                    int32_t defunc_1_op_res_34221 =
                                            add32(x_34219, x_34220);
                                    
                                    x_34219 = defunc_1_op_res_34221;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45229, skip_threads_45240)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45240, local_tid_45227 -
                                  squot32(local_tid_45227, 32) * 32) &&
                            ltid_in_bounds_45239) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                                    x_34219;
                                x_34220 = x_34219;
                            }
                        }
                        if (sle32(wave_sizze_45229, skip_threads_45240)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45240 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45227 - squot32(local_tid_45227, 32) * 32) ==
                        31 && ltid_in_bounds_45239) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45231)[sext_i32_i64(squot32(local_tid_45227,
                                                                             32))] =
                            x_34219;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45242;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45227, 32) == 0 &&
                            ltid_in_bounds_45239) {
                            x_45237 = ((volatile __local
                                        int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)];
                            if ((local_tid_45227 - squot32(local_tid_45227,
                                                           32) * 32) == 0) {
                                x_45236 = x_45237;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45242 = 1;
                        while (slt32(skip_threads_45242, 32)) {
                            if (sle32(skip_threads_45242, local_tid_45227 -
                                      squot32(local_tid_45227, 32) * 32) &&
                                (squot32(local_tid_45227, 32) == 0 &&
                                 ltid_in_bounds_45239)) {
                                // read operands
                                {
                                    x_45236 = ((volatile __local
                                                int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227) -
                                                                              sext_i32_i64(skip_threads_45242)];
                                }
                                // perform operation
                                {
                                    bool inactive_45243 =
                                         slt64(srem64(sext_i32_i64(local_tid_45227 *
                                                      32 + 32 - 1),
                                                      i32_res_30070),
                                               sext_i32_i64(local_tid_45227 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45227 -
                                                             skip_threads_45242) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45243) {
                                        x_45236 = x_45237;
                                    }
                                    if (!inactive_45243) {
                                        int32_t defunc_1_op_res_45238 =
                                                add32(x_45236, x_45237);
                                        
                                        x_45236 = defunc_1_op_res_45238;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45229, skip_threads_45242)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45242, local_tid_45227 -
                                      squot32(local_tid_45227, 32) * 32) &&
                                (squot32(local_tid_45227, 32) == 0 &&
                                 ltid_in_bounds_45239)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                                        x_45236;
                                    x_45237 = x_45236;
                                }
                            }
                            if (sle32(wave_sizze_45229, skip_threads_45242)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45242 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45227, 32) == 0 ||
                          !ltid_in_bounds_45239)) {
                        // read operands
                        {
                            x_34220 = x_34219;
                            x_34219 = ((__local
                                        int32_t *) red_arr_mem_45231)[sext_i32_i64(squot32(local_tid_45227,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45244 =
                                 slt64(srem64(sext_i32_i64(local_tid_45227),
                                              i32_res_30070),
                                       sext_i32_i64(local_tid_45227) -
                                       sext_i32_i64(squot32(local_tid_45227,
                                                            32) * 32 - 1));
                            
                            if (inactive_45244) {
                                x_34219 = x_34220;
                            }
                            if (!inactive_45244) {
                                int32_t defunc_1_op_res_34221 = add32(x_34219,
                                                                      x_34220);
                                
                                x_34219 = defunc_1_op_res_34221;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                                x_34219;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45227, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                            x_34220;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45235) *
                      squot64(segred_group_sizze_34215,
                              segment_sizze_nonzzero_45224) +
                      sext_i32_i64(local_tid_45227), m_30057) &&
                slt64(sext_i32_i64(local_tid_45227),
                      squot64(segred_group_sizze_34215,
                              segment_sizze_nonzzero_45224))) {
                ((__global
                  int32_t *) mem_44010)[sext_i32_i64(virt_group_id_45235) *
                                        squot64(segred_group_sizze_34215,
                                                segment_sizze_nonzzero_45224) +
                                        sext_i32_i64(local_tid_45227)] =
                    ((__local
                      int32_t *) red_arr_mem_45231)[(sext_i32_i64(local_tid_45227) +
                                                     1) *
                                                    segment_sizze_nonzzero_45224 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34215
}
__kernel void mainDetailedzisegred_small_34355(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45400_backing_aligned_0,
                                               int64_t N_30056, int64_t m_30057,
                                               int64_t i32_res_30418,
                                               int64_t num_groups_34373,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43943,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44022,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44023,
                                               __global
                                               unsigned char *mem_44072,
                                               int64_t segment_sizze_nonzzero_45393)
{
    #define segred_group_sizze_34372 (mainDetailedzisegred_group_sizze_34349)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45400_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45400_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45395;
    int32_t local_tid_45396;
    int64_t group_sizze_45399;
    int32_t wave_sizze_45398;
    int32_t group_tid_45397;
    
    global_tid_45395 = get_global_id(0);
    local_tid_45396 = get_local_id(0);
    group_sizze_45399 = get_local_size(0);
    wave_sizze_45398 = LOCKSTEP_WIDTH;
    group_tid_45397 = get_group_id(0);
    
    int32_t phys_tid_34355;
    
    phys_tid_34355 = global_tid_45395;
    
    __local char *red_arr_mem_45400;
    
    red_arr_mem_45400 = (__local char *) red_arr_mem_45400_backing_0;
    
    int32_t phys_group_id_45402;
    
    phys_group_id_45402 = get_group_id(0);
    for (int32_t i_45403 = 0; i_45403 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057,
                                          squot64(segred_group_sizze_34372,
                                                  segment_sizze_nonzzero_45393))) -
                   phys_group_id_45402, sext_i64_i32(num_groups_34373));
         i_45403++) {
        int32_t virt_group_id_45404 = phys_group_id_45402 + i_45403 *
                sext_i64_i32(num_groups_34373);
        int64_t gtid_34346 = squot64(sext_i32_i64(local_tid_45396),
                                     segment_sizze_nonzzero_45393) +
                sext_i32_i64(virt_group_id_45404) *
                squot64(segred_group_sizze_34372, segment_sizze_nonzzero_45393);
        int64_t gtid_34354 = srem64(sext_i32_i64(local_tid_45396),
                                    i32_res_30418);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30418) && (slt64(gtid_34346, m_30057) &&
                                            slt64(sext_i32_i64(local_tid_45396),
                                                  i32_res_30418 *
                                                  squot64(segred_group_sizze_34372,
                                                          segment_sizze_nonzzero_45393)))) {
                int32_t x_34381 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44022)[gtid_34346];
                int32_t index_primexp_41461 = sext_i64_i32(gtid_34354);
                bool cond_34383 = slt32(index_primexp_41461, x_34381);
                float defunc_0_f_res_34384;
                
                if (cond_34383) {
                    int32_t x_34380 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44023)[gtid_34346];
                    int32_t x_34385 = add32(x_34380, index_primexp_41461);
                    int32_t x_34386 = sub32(x_34385, x_34381);
                    int32_t i_34387 = add32(1, x_34386);
                    int64_t i_34388 = sext_i32_i64(i_34387);
                    float defunc_0_f_res_t_res_34389 = ((__global
                                                         float *) defunc_4_map_res_mem_43943)[gtid_34346 *
                                                                                              N_30056 +
                                                                                              i_34388];
                    
                    defunc_0_f_res_34384 = defunc_0_f_res_t_res_34389;
                } else {
                    defunc_0_f_res_34384 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)] =
                        defunc_0_f_res_34384;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30418)) {
            // perform segmented scan to imitate reduction
            {
                float x_34376;
                float x_34377;
                float x_45405;
                float x_45406;
                bool ltid_in_bounds_45408;
                
                ltid_in_bounds_45408 = slt64(sext_i32_i64(local_tid_45396),
                                             i32_res_30418 *
                                             squot64(segred_group_sizze_34372,
                                                     segment_sizze_nonzzero_45393));
                
                int32_t skip_threads_45409;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45408) {
                        x_34377 = ((volatile __local
                                    float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)];
                        if ((local_tid_45396 - squot32(local_tid_45396, 32) *
                             32) == 0) {
                            x_34376 = x_34377;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45409 = 1;
                    while (slt32(skip_threads_45409, 32)) {
                        if (sle32(skip_threads_45409, local_tid_45396 -
                                  squot32(local_tid_45396, 32) * 32) &&
                            ltid_in_bounds_45408) {
                            // read operands
                            {
                                x_34376 = ((volatile __local
                                            float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396) -
                                                                        sext_i32_i64(skip_threads_45409)];
                            }
                            // perform operation
                            {
                                bool inactive_45410 =
                                     slt64(srem64(sext_i32_i64(local_tid_45396),
                                                  i32_res_30418),
                                           sext_i32_i64(local_tid_45396) -
                                           sext_i32_i64(local_tid_45396 -
                                           skip_threads_45409));
                                
                                if (inactive_45410) {
                                    x_34376 = x_34377;
                                }
                                if (!inactive_45410) {
                                    float defunc_1_op_res_34378 = x_34376 +
                                          x_34377;
                                    
                                    x_34376 = defunc_1_op_res_34378;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45398, skip_threads_45409)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45409, local_tid_45396 -
                                  squot32(local_tid_45396, 32) * 32) &&
                            ltid_in_bounds_45408) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)] =
                                    x_34376;
                                x_34377 = x_34376;
                            }
                        }
                        if (sle32(wave_sizze_45398, skip_threads_45409)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45409 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45396 - squot32(local_tid_45396, 32) * 32) ==
                        31 && ltid_in_bounds_45408) {
                        ((volatile __local
                          float *) red_arr_mem_45400)[sext_i32_i64(squot32(local_tid_45396,
                                                                           32))] =
                            x_34376;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45411;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45396, 32) == 0 &&
                            ltid_in_bounds_45408) {
                            x_45406 = ((volatile __local
                                        float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)];
                            if ((local_tid_45396 - squot32(local_tid_45396,
                                                           32) * 32) == 0) {
                                x_45405 = x_45406;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45411 = 1;
                        while (slt32(skip_threads_45411, 32)) {
                            if (sle32(skip_threads_45411, local_tid_45396 -
                                      squot32(local_tid_45396, 32) * 32) &&
                                (squot32(local_tid_45396, 32) == 0 &&
                                 ltid_in_bounds_45408)) {
                                // read operands
                                {
                                    x_45405 = ((volatile __local
                                                float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396) -
                                                                            sext_i32_i64(skip_threads_45411)];
                                }
                                // perform operation
                                {
                                    bool inactive_45412 =
                                         slt64(srem64(sext_i32_i64(local_tid_45396 *
                                                      32 + 32 - 1),
                                                      i32_res_30418),
                                               sext_i32_i64(local_tid_45396 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45396 -
                                                             skip_threads_45411) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45412) {
                                        x_45405 = x_45406;
                                    }
                                    if (!inactive_45412) {
                                        float defunc_1_op_res_45407 = x_45405 +
                                              x_45406;
                                        
                                        x_45405 = defunc_1_op_res_45407;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45398, skip_threads_45411)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45411, local_tid_45396 -
                                      squot32(local_tid_45396, 32) * 32) &&
                                (squot32(local_tid_45396, 32) == 0 &&
                                 ltid_in_bounds_45408)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)] =
                                        x_45405;
                                    x_45406 = x_45405;
                                }
                            }
                            if (sle32(wave_sizze_45398, skip_threads_45411)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45411 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45396, 32) == 0 ||
                          !ltid_in_bounds_45408)) {
                        // read operands
                        {
                            x_34377 = x_34376;
                            x_34376 = ((__local
                                        float *) red_arr_mem_45400)[sext_i32_i64(squot32(local_tid_45396,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45413 =
                                 slt64(srem64(sext_i32_i64(local_tid_45396),
                                              i32_res_30418),
                                       sext_i32_i64(local_tid_45396) -
                                       sext_i32_i64(squot32(local_tid_45396,
                                                            32) * 32 - 1));
                            
                            if (inactive_45413) {
                                x_34376 = x_34377;
                            }
                            if (!inactive_45413) {
                                float defunc_1_op_res_34378 = x_34376 + x_34377;
                                
                                x_34376 = defunc_1_op_res_34378;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)] =
                                x_34376;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45396, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45400)[sext_i32_i64(local_tid_45396)] =
                            x_34377;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45404) *
                      squot64(segred_group_sizze_34372,
                              segment_sizze_nonzzero_45393) +
                      sext_i32_i64(local_tid_45396), m_30057) &&
                slt64(sext_i32_i64(local_tid_45396),
                      squot64(segred_group_sizze_34372,
                              segment_sizze_nonzzero_45393))) {
                ((__global
                  float *) mem_44072)[sext_i32_i64(virt_group_id_45404) *
                                      squot64(segred_group_sizze_34372,
                                              segment_sizze_nonzzero_45393) +
                                      sext_i32_i64(local_tid_45396)] = ((__local
                                                                         float *) red_arr_mem_45400)[(sext_i32_i64(local_tid_45396) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45393 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34372
}
__kernel void mainDetailedzisegred_small_36013(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45622_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45620_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45618_backing_aligned_2,
                                               int64_t m_30057,
                                               int64_t iota32_arg_30443,
                                               int64_t num_groups_36184,
                                               __global
                                               unsigned char *mem_44078,
                                               __global
                                               unsigned char *mem_44286,
                                               __global
                                               unsigned char *mem_44288,
                                               __global
                                               unsigned char *mem_44292,
                                               __global
                                               unsigned char *mem_44295,
                                               __global
                                               unsigned char *mem_44297,
                                               __global
                                               unsigned char *mem_44299,
                                               __global
                                               unsigned char *mem_44302,
                                               int64_t segment_sizze_nonzzero_45611)
{
    #define segred_group_sizze_36183 (mainDetailedzisegred_group_sizze_36007)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45622_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45622_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45620_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45620_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45618_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45618_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45613;
    int32_t local_tid_45614;
    int64_t group_sizze_45617;
    int32_t wave_sizze_45616;
    int32_t group_tid_45615;
    
    global_tid_45613 = get_global_id(0);
    local_tid_45614 = get_local_id(0);
    group_sizze_45617 = get_local_size(0);
    wave_sizze_45616 = LOCKSTEP_WIDTH;
    group_tid_45615 = get_group_id(0);
    
    int32_t phys_tid_36013;
    
    phys_tid_36013 = global_tid_45613;
    
    __local char *red_arr_mem_45618;
    
    red_arr_mem_45618 = (__local char *) red_arr_mem_45618_backing_0;
    
    __local char *red_arr_mem_45620;
    
    red_arr_mem_45620 = (__local char *) red_arr_mem_45620_backing_1;
    
    __local char *red_arr_mem_45622;
    
    red_arr_mem_45622 = (__local char *) red_arr_mem_45622_backing_2;
    
    int32_t phys_group_id_45624;
    
    phys_group_id_45624 = get_group_id(0);
    for (int32_t i_45625 = 0; i_45625 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30057,
                                          squot64(segred_group_sizze_36183,
                                                  segment_sizze_nonzzero_45611))) -
                   phys_group_id_45624, sext_i64_i32(num_groups_36184));
         i_45625++) {
        int32_t virt_group_id_45626 = phys_group_id_45624 + i_45625 *
                sext_i64_i32(num_groups_36184);
        int64_t gtid_36004 = squot64(sext_i32_i64(local_tid_45614),
                                     segment_sizze_nonzzero_45611) +
                sext_i32_i64(virt_group_id_45626) *
                squot64(segred_group_sizze_36183, segment_sizze_nonzzero_45611);
        int64_t gtid_36012 = srem64(sext_i32_i64(local_tid_45614),
                                    iota32_arg_30443);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_30443) && (slt64(gtid_36004, m_30057) &&
                                               slt64(sext_i32_i64(local_tid_45614),
                                                     iota32_arg_30443 *
                                                     squot64(segred_group_sizze_36183,
                                                             segment_sizze_nonzzero_45611)))) {
                int32_t y_36204 = ((__global int32_t *) mem_44288)[gtid_36004];
                float y_36205 = ((__global float *) mem_44286)[gtid_36004];
                float x_36209 = ((__global float *) mem_44292)[gtid_36004 *
                                                               iota32_arg_30443 +
                                                               gtid_36012];
                float x_36210 = ((__global float *) mem_44078)[gtid_36012];
                int32_t index_primexp_41481 = sext_i64_i32(gtid_36012);
                float defunc_0_f_res_36213 = x_36209 / y_36205;
                bool cond_36214 = slt32(index_primexp_41481, y_36204);
                bool isnan_res_36215;
                
                isnan_res_36215 = futrts_isnan32(defunc_0_f_res_36213);
                
                bool cond_t_res_36216 = !isnan_res_36215;
                bool x_36217 = cond_36214 && cond_t_res_36216;
                float abs_res_36218 = (float) fabs(defunc_0_f_res_36213);
                bool defunc_2_f_res_t_res_36219 = x_36210 < abs_res_36218;
                bool x_36220 = x_36217 && defunc_2_f_res_t_res_36219;
                float defunc_1_f_res_36221;
                
                if (cond_36214) {
                    defunc_1_f_res_36221 = defunc_0_f_res_36213;
                } else {
                    defunc_1_f_res_36221 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_44302)[gtid_36004 *
                                                   iota32_arg_30443 +
                                                   gtid_36012] =
                        defunc_0_f_res_36213;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)] =
                        x_36220;
                    ((__local
                      int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)] =
                        index_primexp_41481;
                    ((__local
                      float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)] =
                        defunc_1_f_res_36221;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_30443)) {
            // perform segmented scan to imitate reduction
            {
                bool x_36190;
                int32_t x_36191;
                float x_36192;
                bool x_36193;
                int32_t x_36194;
                float x_36195;
                bool x_45627;
                int32_t x_45628;
                float x_45629;
                bool x_45630;
                int32_t x_45631;
                float x_45632;
                bool ltid_in_bounds_45641;
                
                ltid_in_bounds_45641 = slt64(sext_i32_i64(local_tid_45614),
                                             iota32_arg_30443 *
                                             squot64(segred_group_sizze_36183,
                                                     segment_sizze_nonzzero_45611));
                
                int32_t skip_threads_45642;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45641) {
                        x_36193 = ((volatile __local
                                    bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)];
                        x_36194 = ((volatile __local
                                    int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)];
                        x_36195 = ((volatile __local
                                    float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)];
                        if ((local_tid_45614 - squot32(local_tid_45614, 32) *
                             32) == 0) {
                            x_36190 = x_36193;
                            x_36191 = x_36194;
                            x_36192 = x_36195;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45642 = 1;
                    while (slt32(skip_threads_45642, 32)) {
                        if (sle32(skip_threads_45642, local_tid_45614 -
                                  squot32(local_tid_45614, 32) * 32) &&
                            ltid_in_bounds_45641) {
                            // read operands
                            {
                                x_36190 = ((volatile __local
                                            bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614) -
                                                                       sext_i32_i64(skip_threads_45642)];
                                x_36191 = ((volatile __local
                                            int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614) -
                                                                          sext_i32_i64(skip_threads_45642)];
                                x_36192 = ((volatile __local
                                            float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614) -
                                                                        sext_i32_i64(skip_threads_45642)];
                            }
                            // perform operation
                            {
                                bool inactive_45643 =
                                     slt64(srem64(sext_i32_i64(local_tid_45614),
                                                  iota32_arg_30443),
                                           sext_i32_i64(local_tid_45614) -
                                           sext_i32_i64(local_tid_45614 -
                                           skip_threads_45642));
                                
                                if (inactive_45643) {
                                    x_36190 = x_36193;
                                    x_36191 = x_36194;
                                    x_36192 = x_36195;
                                }
                                if (!inactive_45643) {
                                    bool defunc_1_op_res_36196;
                                    int32_t defunc_1_op_res_36197;
                                    
                                    if (x_36190) {
                                        defunc_1_op_res_36196 = x_36190;
                                        defunc_1_op_res_36197 = x_36191;
                                    } else {
                                        bool x_36198 = x_36193 && x_36193;
                                        bool x_36199 = !x_36193;
                                        bool y_36200 = x_36190 && x_36199;
                                        bool defunc_1_op_res_f_res_36201 =
                                             x_36198 || y_36200;
                                        int32_t defunc_1_op_res_f_res_36202;
                                        
                                        if (x_36193) {
                                            defunc_1_op_res_f_res_36202 =
                                                x_36194;
                                        } else {
                                            defunc_1_op_res_f_res_36202 =
                                                x_36191;
                                        }
                                        defunc_1_op_res_36196 =
                                            defunc_1_op_res_f_res_36201;
                                        defunc_1_op_res_36197 =
                                            defunc_1_op_res_f_res_36202;
                                    }
                                    
                                    float defunc_1_op_res_36203 = x_36192 +
                                          x_36195;
                                    
                                    x_36190 = defunc_1_op_res_36196;
                                    x_36191 = defunc_1_op_res_36197;
                                    x_36192 = defunc_1_op_res_36203;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45616, skip_threads_45642)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45642, local_tid_45614 -
                                  squot32(local_tid_45614, 32) * 32) &&
                            ltid_in_bounds_45641) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)] =
                                    x_36190;
                                x_36193 = x_36190;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)] =
                                    x_36191;
                                x_36194 = x_36191;
                                ((volatile __local
                                  float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)] =
                                    x_36192;
                                x_36195 = x_36192;
                            }
                        }
                        if (sle32(wave_sizze_45616, skip_threads_45642)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45642 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45614 - squot32(local_tid_45614, 32) * 32) ==
                        31 && ltid_in_bounds_45641) {
                        ((volatile __local
                          bool *) red_arr_mem_45618)[sext_i32_i64(squot32(local_tid_45614,
                                                                          32))] =
                            x_36190;
                        ((volatile __local
                          int32_t *) red_arr_mem_45620)[sext_i32_i64(squot32(local_tid_45614,
                                                                             32))] =
                            x_36191;
                        ((volatile __local
                          float *) red_arr_mem_45622)[sext_i32_i64(squot32(local_tid_45614,
                                                                           32))] =
                            x_36192;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45644;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45614, 32) == 0 &&
                            ltid_in_bounds_45641) {
                            x_45630 = ((volatile __local
                                        bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)];
                            x_45631 = ((volatile __local
                                        int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)];
                            x_45632 = ((volatile __local
                                        float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)];
                            if ((local_tid_45614 - squot32(local_tid_45614,
                                                           32) * 32) == 0) {
                                x_45627 = x_45630;
                                x_45628 = x_45631;
                                x_45629 = x_45632;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45644 = 1;
                        while (slt32(skip_threads_45644, 32)) {
                            if (sle32(skip_threads_45644, local_tid_45614 -
                                      squot32(local_tid_45614, 32) * 32) &&
                                (squot32(local_tid_45614, 32) == 0 &&
                                 ltid_in_bounds_45641)) {
                                // read operands
                                {
                                    x_45627 = ((volatile __local
                                                bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614) -
                                                                           sext_i32_i64(skip_threads_45644)];
                                    x_45628 = ((volatile __local
                                                int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614) -
                                                                              sext_i32_i64(skip_threads_45644)];
                                    x_45629 = ((volatile __local
                                                float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614) -
                                                                            sext_i32_i64(skip_threads_45644)];
                                }
                                // perform operation
                                {
                                    bool inactive_45645 =
                                         slt64(srem64(sext_i32_i64(local_tid_45614 *
                                                      32 + 32 - 1),
                                                      iota32_arg_30443),
                                               sext_i32_i64(local_tid_45614 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45614 -
                                                             skip_threads_45644) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45645) {
                                        x_45627 = x_45630;
                                        x_45628 = x_45631;
                                        x_45629 = x_45632;
                                    }
                                    if (!inactive_45645) {
                                        bool defunc_1_op_res_45633;
                                        int32_t defunc_1_op_res_45634;
                                        
                                        if (x_45627) {
                                            defunc_1_op_res_45633 = x_45627;
                                            defunc_1_op_res_45634 = x_45628;
                                        } else {
                                            bool x_45635 = x_45630 && x_45630;
                                            bool x_45636 = !x_45630;
                                            bool y_45637 = x_45627 && x_45636;
                                            bool defunc_1_op_res_f_res_45638 =
                                                 x_45635 || y_45637;
                                            int32_t defunc_1_op_res_f_res_45639;
                                            
                                            if (x_45630) {
                                                defunc_1_op_res_f_res_45639 =
                                                    x_45631;
                                            } else {
                                                defunc_1_op_res_f_res_45639 =
                                                    x_45628;
                                            }
                                            defunc_1_op_res_45633 =
                                                defunc_1_op_res_f_res_45638;
                                            defunc_1_op_res_45634 =
                                                defunc_1_op_res_f_res_45639;
                                        }
                                        
                                        float defunc_1_op_res_45640 = x_45629 +
                                              x_45632;
                                        
                                        x_45627 = defunc_1_op_res_45633;
                                        x_45628 = defunc_1_op_res_45634;
                                        x_45629 = defunc_1_op_res_45640;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45616, skip_threads_45644)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45644, local_tid_45614 -
                                      squot32(local_tid_45614, 32) * 32) &&
                                (squot32(local_tid_45614, 32) == 0 &&
                                 ltid_in_bounds_45641)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)] =
                                        x_45627;
                                    x_45630 = x_45627;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)] =
                                        x_45628;
                                    x_45631 = x_45628;
                                    ((volatile __local
                                      float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)] =
                                        x_45629;
                                    x_45632 = x_45629;
                                }
                            }
                            if (sle32(wave_sizze_45616, skip_threads_45644)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45644 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45614, 32) == 0 ||
                          !ltid_in_bounds_45641)) {
                        // read operands
                        {
                            x_36193 = x_36190;
                            x_36194 = x_36191;
                            x_36195 = x_36192;
                            x_36190 = ((__local
                                        bool *) red_arr_mem_45618)[sext_i32_i64(squot32(local_tid_45614,
                                                                                        32)) -
                                                                   1];
                            x_36191 = ((__local
                                        int32_t *) red_arr_mem_45620)[sext_i32_i64(squot32(local_tid_45614,
                                                                                           32)) -
                                                                      1];
                            x_36192 = ((__local
                                        float *) red_arr_mem_45622)[sext_i32_i64(squot32(local_tid_45614,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45646 =
                                 slt64(srem64(sext_i32_i64(local_tid_45614),
                                              iota32_arg_30443),
                                       sext_i32_i64(local_tid_45614) -
                                       sext_i32_i64(squot32(local_tid_45614,
                                                            32) * 32 - 1));
                            
                            if (inactive_45646) {
                                x_36190 = x_36193;
                                x_36191 = x_36194;
                                x_36192 = x_36195;
                            }
                            if (!inactive_45646) {
                                bool defunc_1_op_res_36196;
                                int32_t defunc_1_op_res_36197;
                                
                                if (x_36190) {
                                    defunc_1_op_res_36196 = x_36190;
                                    defunc_1_op_res_36197 = x_36191;
                                } else {
                                    bool x_36198 = x_36193 && x_36193;
                                    bool x_36199 = !x_36193;
                                    bool y_36200 = x_36190 && x_36199;
                                    bool defunc_1_op_res_f_res_36201 =
                                         x_36198 || y_36200;
                                    int32_t defunc_1_op_res_f_res_36202;
                                    
                                    if (x_36193) {
                                        defunc_1_op_res_f_res_36202 = x_36194;
                                    } else {
                                        defunc_1_op_res_f_res_36202 = x_36191;
                                    }
                                    defunc_1_op_res_36196 =
                                        defunc_1_op_res_f_res_36201;
                                    defunc_1_op_res_36197 =
                                        defunc_1_op_res_f_res_36202;
                                }
                                
                                float defunc_1_op_res_36203 = x_36192 + x_36195;
                                
                                x_36190 = defunc_1_op_res_36196;
                                x_36191 = defunc_1_op_res_36197;
                                x_36192 = defunc_1_op_res_36203;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)] =
                                x_36190;
                            ((__local
                              int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)] =
                                x_36191;
                            ((__local
                              float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)] =
                                x_36192;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45614, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45618)[sext_i32_i64(local_tid_45614)] =
                            x_36193;
                        ((__local
                          int32_t *) red_arr_mem_45620)[sext_i32_i64(local_tid_45614)] =
                            x_36194;
                        ((__local
                          float *) red_arr_mem_45622)[sext_i32_i64(local_tid_45614)] =
                            x_36195;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45626) *
                      squot64(segred_group_sizze_36183,
                              segment_sizze_nonzzero_45611) +
                      sext_i32_i64(local_tid_45614), m_30057) &&
                slt64(sext_i32_i64(local_tid_45614),
                      squot64(segred_group_sizze_36183,
                              segment_sizze_nonzzero_45611))) {
                ((__global
                  bool *) mem_44295)[sext_i32_i64(virt_group_id_45626) *
                                     squot64(segred_group_sizze_36183,
                                             segment_sizze_nonzzero_45611) +
                                     sext_i32_i64(local_tid_45614)] = ((__local
                                                                        bool *) red_arr_mem_45618)[(sext_i32_i64(local_tid_45614) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45611 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44297)[sext_i32_i64(virt_group_id_45626) *
                                        squot64(segred_group_sizze_36183,
                                                segment_sizze_nonzzero_45611) +
                                        sext_i32_i64(local_tid_45614)] =
                    ((__local
                      int32_t *) red_arr_mem_45620)[(sext_i32_i64(local_tid_45614) +
                                                     1) *
                                                    segment_sizze_nonzzero_45611 -
                                                    1];
                ((__global
                  float *) mem_44299)[sext_i32_i64(virt_group_id_45626) *
                                      squot64(segred_group_sizze_36183,
                                              segment_sizze_nonzzero_45611) +
                                      sext_i32_i64(local_tid_45614)] = ((__local
                                                                         float *) red_arr_mem_45622)[(sext_i32_i64(local_tid_45614) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45611 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36183
}
__kernel void remove_nanszisegmap_31564(__global int *global_failure,
                                        int64_t m_30042, int64_t n_30043,
                                        int64_t p_30044,
                                        int16_t nan_value_30045, __global
                                        unsigned char *images_mem_43377,
                                        __global unsigned char *mem_43382)
{
    #define segmap_group_sizze_31625 (remove_nanszisegmap_group_sizze_31568)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44620;
    int32_t local_tid_44621;
    int64_t group_sizze_44624;
    int32_t wave_sizze_44623;
    int32_t group_tid_44622;
    
    global_tid_44620 = get_global_id(0);
    local_tid_44621 = get_local_id(0);
    group_sizze_44624 = get_local_size(0);
    wave_sizze_44623 = LOCKSTEP_WIDTH;
    group_tid_44622 = get_group_id(0);
    
    int32_t phys_tid_31564;
    
    phys_tid_31564 = global_tid_44620;
    
    int64_t gtid_31561;
    
    gtid_31561 = squot64(sext_i32_i64(group_tid_44622) *
                         segmap_group_sizze_31625 +
                         sext_i32_i64(local_tid_44621), n_30043 * p_30044);
    
    int64_t gtid_31562;
    
    gtid_31562 = squot64(sext_i32_i64(group_tid_44622) *
                         segmap_group_sizze_31625 +
                         sext_i32_i64(local_tid_44621) -
                         squot64(sext_i32_i64(group_tid_44622) *
                                 segmap_group_sizze_31625 +
                                 sext_i32_i64(local_tid_44621), n_30043 *
                                 p_30044) * (n_30043 * p_30044), p_30044);
    
    int64_t gtid_31563;
    
    gtid_31563 = sext_i32_i64(group_tid_44622) * segmap_group_sizze_31625 +
        sext_i32_i64(local_tid_44621) - squot64(sext_i32_i64(group_tid_44622) *
                                                segmap_group_sizze_31625 +
                                                sext_i32_i64(local_tid_44621),
                                                n_30043 * p_30044) * (n_30043 *
                                                                      p_30044) -
        squot64(sext_i32_i64(group_tid_44622) * segmap_group_sizze_31625 +
                sext_i32_i64(local_tid_44621) -
                squot64(sext_i32_i64(group_tid_44622) *
                        segmap_group_sizze_31625 +
                        sext_i32_i64(local_tid_44621), n_30043 * p_30044) *
                (n_30043 * p_30044), p_30044) * p_30044;
    if ((slt64(gtid_31561, m_30042) && slt64(gtid_31562, n_30043)) &&
        slt64(gtid_31563, p_30044)) {
        int16_t x_31628 = ((__global int16_t *) images_mem_43377)[gtid_31561 *
                                                                  (p_30044 *
                                                                   n_30043) +
                                                                  gtid_31562 *
                                                                  p_30044 +
                                                                  gtid_31563];
        bool cond_31629 = x_31628 == nan_value_30045;
        float defunc_0_f_res_31630;
        
        if (cond_31629) {
            defunc_0_f_res_31630 = NAN;
        } else {
            float i16_res_31631 = sitofp_i16_f32(x_31628);
            
            defunc_0_f_res_31630 = i16_res_31631;
        }
        ((__global float *) mem_43382)[gtid_31561 * (p_30044 * n_30043) +
                                       gtid_31562 * p_30044 + gtid_31563] =
            defunc_0_f_res_31630;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31625
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
class bfastfinal:
  entry_points = {"main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]f32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "remove_nans": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "threshold", lambda device: np.int32(32768)), ("",
                                                                             cl.device_type.CPU,
                                                                             "lockstep_width",
                                                                             lambda device: np.int32(1)),
     ("", cl.device_type.CPU, "num_groups",
      lambda device: device.get_info(getattr(cl.device_info, "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "threshold",
      lambda device: device.get_info(getattr(cl.device_info, "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_45078": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_45087": {"class": "group_size",
                                                                                   "value": None},
                                        "main.group_size_44775": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36682": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36860": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36988": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37020": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37067": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37602": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37820": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37874": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37941": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38033": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38238": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38379": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38511": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38792": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38867": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39016": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39118": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39265": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39389": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39462": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40182": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40512": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40762": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40823": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40949": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_37022": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_37069": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38240": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38381": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38513": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40951": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_37127": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38300": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38437": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38567": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39133": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39154": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39221": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39305": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40854": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_37129": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38302": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38439": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38569": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39135": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39156": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39223": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39307": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40856": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_38876": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40562": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40908": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_38878": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40564": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40910": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_10": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_14": {"class": "threshold (!main.suff_intra_par_10)",
                                                                   "value": 32},
                                        "main.suff_intra_par_25": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_30": {"class": "threshold (!main.suff_outer_par_29)",
                                                                   "value": 32},
                                        "main.suff_intra_par_35": {"class": "threshold (!main.suff_outer_par_34)",
                                                                   "value": 32},
                                        "main.suff_intra_par_37": {"class": "threshold (!main.suff_outer_par_34 !main.suff_intra_par_35)",
                                                                   "value": 32},
                                        "main.suff_outer_par_17": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold (!main.suff_outer_par_17)",
                                                                   "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold (!main.suff_outer_par_19)",
                                                                   "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_22": {"class": "threshold (!main.suff_outer_par_21)",
                                                                   "value": None},
                                        "main.suff_outer_par_29": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_32": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_34": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_41559": {"class": "tile_size", "value": None},
                                        "main.tile_size_41905": {"class": "tile_size", "value": None},
                                        "main.tile_size_42227": {"class": "tile_size", "value": None},
                                        "main.tile_size_42503": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_44797": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31726": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31904": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32032": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32064": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32111": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32646": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32864": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32918": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32985": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33077": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33282": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33423": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33555": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33836": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33911": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34060": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34162": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34309": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34433": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34508": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35274": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35326": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35656": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35906": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35964": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35981": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_36102": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_32066": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_32113": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33284": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33425": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33557": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_34510": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_36104": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_32171": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33344": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33481": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33611": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34177": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34198": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34265": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34349": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_36007": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_32173": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33346": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33483": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33613": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34179": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34200": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34267": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34351": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_36009": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_33920": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_35706": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_36061": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_33922": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_35708": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_36063": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_10": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_14": {"class": "threshold (!mainDetailed.suff_intra_par_10)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_25": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_30": {"class": "threshold (!mainDetailed.suff_outer_par_29)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_35": {"class": "threshold (!mainDetailed.suff_outer_par_34)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_38": {"class": "threshold (!mainDetailed.suff_outer_par_34 !mainDetailed.suff_intra_par_35)",
                                                                           "value": 32},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold (!mainDetailed.suff_outer_par_17)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold (!mainDetailed.suff_outer_par_19)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_22": {"class": "threshold (!mainDetailed.suff_outer_par_21)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_29": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_32": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_34": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_41559": {"class": "tile_size", "value": None},
                                        "mainDetailed.tile_size_41905": {"class": "tile_size", "value": None},
                                        "mainDetailed.tile_size_42227": {"class": "tile_size", "value": None},
                                        "mainDetailed.tile_size_42503": {"class": "tile_size", "value": None},
                                        "remove_nans.segmap_group_size_31568": {"class": "group_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_45075_var = program.builtinzhreplicate_f32zireplicate_45075
    self.builtinzhreplicate_i32zireplicate_45084_var = program.builtinzhreplicate_i32zireplicate_45084
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_44772_var = program.mainzicopy_44772
    self.mainziscan_stage1_38882_var = program.mainziscan_stage1_38882
    self.mainziscan_stage1_40568_var = program.mainziscan_stage1_40568
    self.mainziscan_stage1_40914_var = program.mainziscan_stage1_40914
    self.mainziscan_stage2_38882_var = program.mainziscan_stage2_38882
    self.mainziscan_stage2_40568_var = program.mainziscan_stage2_40568
    self.mainziscan_stage2_40914_var = program.mainziscan_stage2_40914
    self.mainziscan_stage3_38882_var = program.mainziscan_stage3_38882
    self.mainziscan_stage3_40568_var = program.mainziscan_stage3_40568
    self.mainziscan_stage3_40914_var = program.mainziscan_stage3_40914
    self.mainzisegmap_36679_var = program.mainzisegmap_36679
    self.mainzisegmap_36857_var = program.mainzisegmap_36857
    self.mainzisegmap_36985_var = program.mainzisegmap_36985
    self.mainzisegmap_37018_var = program.mainzisegmap_37018
    self.mainzisegmap_37064_var = program.mainzisegmap_37064
    self.mainzisegmap_37598_var = program.mainzisegmap_37598
    self.mainzisegmap_37817_var = program.mainzisegmap_37817
    self.mainzisegmap_37871_var = program.mainzisegmap_37871
    self.mainzisegmap_37939_var = program.mainzisegmap_37939
    self.mainzisegmap_38030_var = program.mainzisegmap_38030
    self.mainzisegmap_38236_var = program.mainzisegmap_38236
    self.mainzisegmap_38377_var = program.mainzisegmap_38377
    self.mainzisegmap_38509_var = program.mainzisegmap_38509
    self.mainzisegmap_38789_var = program.mainzisegmap_38789
    self.mainzisegmap_38865_var = program.mainzisegmap_38865
    self.mainzisegmap_39116_var = program.mainzisegmap_39116
    self.mainzisegmap_39387_var = program.mainzisegmap_39387
    self.mainzisegmap_39460_var = program.mainzisegmap_39460
    self.mainzisegmap_40180_var = program.mainzisegmap_40180
    self.mainzisegmap_40509_var = program.mainzisegmap_40509
    self.mainzisegmap_40759_var = program.mainzisegmap_40759
    self.mainzisegmap_40821_var = program.mainzisegmap_40821
    self.mainzisegmap_40947_var = program.mainzisegmap_40947
    self.mainzisegmap_intragroup_37354_var = program.mainzisegmap_intragroup_37354
    self.mainzisegmap_intragroup_37698_var = program.mainzisegmap_intragroup_37698
    self.mainzisegmap_intragroup_38672_var = program.mainzisegmap_intragroup_38672
    self.mainzisegmap_intragroup_39012_var = program.mainzisegmap_intragroup_39012
    self.mainzisegmap_intragroup_39458_var = program.mainzisegmap_intragroup_39458
    self.mainzisegmap_intragroup_40244_var = program.mainzisegmap_intragroup_40244
    self.mainzisegmap_intragroup_41566_var = program.mainzisegmap_intragroup_41566
    self.mainzisegmap_intragroup_41911_var = program.mainzisegmap_intragroup_41911
    self.mainzisegmap_intragroup_42233_var = program.mainzisegmap_intragroup_42233
    self.mainzisegmap_intragroup_42509_var = program.mainzisegmap_intragroup_42509
    self.mainzisegmap_intragroup_42814_var = program.mainzisegmap_intragroup_42814
    self.mainzisegmap_intragroup_43046_var = program.mainzisegmap_intragroup_43046
    self.mainzisegred_large_37133_var = program.mainzisegred_large_37133
    self.mainzisegred_large_38306_var = program.mainzisegred_large_38306
    self.mainzisegred_large_38443_var = program.mainzisegred_large_38443
    self.mainzisegred_large_38573_var = program.mainzisegred_large_38573
    self.mainzisegred_large_39139_var = program.mainzisegred_large_39139
    self.mainzisegred_large_39160_var = program.mainzisegred_large_39160
    self.mainzisegred_large_39311_var = program.mainzisegred_large_39311
    self.mainzisegred_large_40860_var = program.mainzisegred_large_40860
    self.mainzisegred_nonseg_39229_var = program.mainzisegred_nonseg_39229
    self.mainzisegred_small_37133_var = program.mainzisegred_small_37133
    self.mainzisegred_small_38306_var = program.mainzisegred_small_38306
    self.mainzisegred_small_38443_var = program.mainzisegred_small_38443
    self.mainzisegred_small_38573_var = program.mainzisegred_small_38573
    self.mainzisegred_small_39139_var = program.mainzisegred_small_39139
    self.mainzisegred_small_39160_var = program.mainzisegred_small_39160
    self.mainzisegred_small_39311_var = program.mainzisegred_small_39311
    self.mainzisegred_small_40860_var = program.mainzisegred_small_40860
    self.mainDetailedzicopy_44794_var = program.mainDetailedzicopy_44794
    self.mainDetailedziscan_stage1_33926_var = program.mainDetailedziscan_stage1_33926
    self.mainDetailedziscan_stage1_35712_var = program.mainDetailedziscan_stage1_35712
    self.mainDetailedziscan_stage1_36067_var = program.mainDetailedziscan_stage1_36067
    self.mainDetailedziscan_stage2_33926_var = program.mainDetailedziscan_stage2_33926
    self.mainDetailedziscan_stage2_35712_var = program.mainDetailedziscan_stage2_35712
    self.mainDetailedziscan_stage2_36067_var = program.mainDetailedziscan_stage2_36067
    self.mainDetailedziscan_stage3_33926_var = program.mainDetailedziscan_stage3_33926
    self.mainDetailedziscan_stage3_35712_var = program.mainDetailedziscan_stage3_35712
    self.mainDetailedziscan_stage3_36067_var = program.mainDetailedziscan_stage3_36067
    self.mainDetailedzisegmap_31723_var = program.mainDetailedzisegmap_31723
    self.mainDetailedzisegmap_31901_var = program.mainDetailedzisegmap_31901
    self.mainDetailedzisegmap_32029_var = program.mainDetailedzisegmap_32029
    self.mainDetailedzisegmap_32062_var = program.mainDetailedzisegmap_32062
    self.mainDetailedzisegmap_32108_var = program.mainDetailedzisegmap_32108
    self.mainDetailedzisegmap_32642_var = program.mainDetailedzisegmap_32642
    self.mainDetailedzisegmap_32861_var = program.mainDetailedzisegmap_32861
    self.mainDetailedzisegmap_32915_var = program.mainDetailedzisegmap_32915
    self.mainDetailedzisegmap_32983_var = program.mainDetailedzisegmap_32983
    self.mainDetailedzisegmap_33074_var = program.mainDetailedzisegmap_33074
    self.mainDetailedzisegmap_33280_var = program.mainDetailedzisegmap_33280
    self.mainDetailedzisegmap_33421_var = program.mainDetailedzisegmap_33421
    self.mainDetailedzisegmap_33553_var = program.mainDetailedzisegmap_33553
    self.mainDetailedzisegmap_33833_var = program.mainDetailedzisegmap_33833
    self.mainDetailedzisegmap_33909_var = program.mainDetailedzisegmap_33909
    self.mainDetailedzisegmap_34160_var = program.mainDetailedzisegmap_34160
    self.mainDetailedzisegmap_34431_var = program.mainDetailedzisegmap_34431
    self.mainDetailedzisegmap_34506_var = program.mainDetailedzisegmap_34506
    self.mainDetailedzisegmap_35271_var = program.mainDetailedzisegmap_35271
    self.mainDetailedzisegmap_35324_var = program.mainDetailedzisegmap_35324
    self.mainDetailedzisegmap_35653_var = program.mainDetailedzisegmap_35653
    self.mainDetailedzisegmap_35903_var = program.mainDetailedzisegmap_35903
    self.mainDetailedzisegmap_35962_var = program.mainDetailedzisegmap_35962
    self.mainDetailedzisegmap_35979_var = program.mainDetailedzisegmap_35979
    self.mainDetailedzisegmap_36100_var = program.mainDetailedzisegmap_36100
    self.mainDetailedzisegmap_intragroup_32398_var = program.mainDetailedzisegmap_intragroup_32398
    self.mainDetailedzisegmap_intragroup_32742_var = program.mainDetailedzisegmap_intragroup_32742
    self.mainDetailedzisegmap_intragroup_33716_var = program.mainDetailedzisegmap_intragroup_33716
    self.mainDetailedzisegmap_intragroup_34056_var = program.mainDetailedzisegmap_intragroup_34056
    self.mainDetailedzisegmap_intragroup_34504_var = program.mainDetailedzisegmap_intragroup_34504
    self.mainDetailedzisegmap_intragroup_35388_var = program.mainDetailedzisegmap_intragroup_35388
    self.mainDetailedzisegmap_intragroup_41566_var = program.mainDetailedzisegmap_intragroup_41566
    self.mainDetailedzisegmap_intragroup_41911_var = program.mainDetailedzisegmap_intragroup_41911
    self.mainDetailedzisegmap_intragroup_42233_var = program.mainDetailedzisegmap_intragroup_42233
    self.mainDetailedzisegmap_intragroup_42509_var = program.mainDetailedzisegmap_intragroup_42509
    self.mainDetailedzisegmap_intragroup_42814_var = program.mainDetailedzisegmap_intragroup_42814
    self.mainDetailedzisegmap_intragroup_43046_var = program.mainDetailedzisegmap_intragroup_43046
    self.mainDetailedzisegred_large_32177_var = program.mainDetailedzisegred_large_32177
    self.mainDetailedzisegred_large_33350_var = program.mainDetailedzisegred_large_33350
    self.mainDetailedzisegred_large_33487_var = program.mainDetailedzisegred_large_33487
    self.mainDetailedzisegred_large_33617_var = program.mainDetailedzisegred_large_33617
    self.mainDetailedzisegred_large_34183_var = program.mainDetailedzisegred_large_34183
    self.mainDetailedzisegred_large_34204_var = program.mainDetailedzisegred_large_34204
    self.mainDetailedzisegred_large_34355_var = program.mainDetailedzisegred_large_34355
    self.mainDetailedzisegred_large_36013_var = program.mainDetailedzisegred_large_36013
    self.mainDetailedzisegred_nonseg_34273_var = program.mainDetailedzisegred_nonseg_34273
    self.mainDetailedzisegred_small_32177_var = program.mainDetailedzisegred_small_32177
    self.mainDetailedzisegred_small_33350_var = program.mainDetailedzisegred_small_33350
    self.mainDetailedzisegred_small_33487_var = program.mainDetailedzisegred_small_33487
    self.mainDetailedzisegred_small_33617_var = program.mainDetailedzisegred_small_33617
    self.mainDetailedzisegred_small_34183_var = program.mainDetailedzisegred_small_34183
    self.mainDetailedzisegred_small_34204_var = program.mainDetailedzisegred_small_34204
    self.mainDetailedzisegred_small_34355_var = program.mainDetailedzisegred_small_34355
    self.mainDetailedzisegred_small_36013_var = program.mainDetailedzisegred_small_36013
    self.remove_nanszisegmap_31564_var = program.remove_nanszisegmap_31564
    self.constants = {}
    mainzicounter_mem_44706 = np.zeros(10240, dtype=np.int32)
    static_mem_45868 = opencl_alloc(self, 40960, "static_mem_45868")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45868,
                      normaliseArray(mainzicounter_mem_44706),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44706 = static_mem_45868
    mainzicounter_mem_44860 = np.zeros(10240, dtype=np.int32)
    static_mem_45871 = opencl_alloc(self, 40960, "static_mem_45871")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45871,
                      normaliseArray(mainzicounter_mem_44860),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44860 = static_mem_45871
    mainzicounter_mem_44948 = np.zeros(10240, dtype=np.int32)
    static_mem_45872 = opencl_alloc(self, 40960, "static_mem_45872")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45872,
                      normaliseArray(mainzicounter_mem_44948),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44948 = static_mem_45872
    mainzicounter_mem_45036 = np.zeros(10240, dtype=np.int32)
    static_mem_45873 = opencl_alloc(self, 40960, "static_mem_45873")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45873,
                      normaliseArray(mainzicounter_mem_45036),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45036 = static_mem_45873
    mainzicounter_mem_45230 = np.zeros(10240, dtype=np.int32)
    static_mem_45874 = opencl_alloc(self, 40960, "static_mem_45874")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45874,
                      normaliseArray(mainzicounter_mem_45230),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45230 = static_mem_45874
    mainzicounter_mem_45290 = np.zeros(10240, dtype=np.int32)
    static_mem_45875 = opencl_alloc(self, 40960, "static_mem_45875")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45875,
                      normaliseArray(mainzicounter_mem_45290),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45290 = static_mem_45875
    mainzicounter_mem_45330 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_45876 = opencl_alloc(self, 40, "static_mem_45876")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45876,
                      normaliseArray(mainzicounter_mem_45330),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45330 = static_mem_45876
    mainzicounter_mem_45399 = np.zeros(10240, dtype=np.int32)
    static_mem_45878 = opencl_alloc(self, 40960, "static_mem_45878")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45878,
                      normaliseArray(mainzicounter_mem_45399),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45399 = static_mem_45878
    mainzicounter_mem_45626 = np.zeros(10240, dtype=np.int32)
    static_mem_45880 = opencl_alloc(self, 40960, "static_mem_45880")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45880,
                      normaliseArray(mainzicounter_mem_45626),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45626 = static_mem_45880
    mainDetailedzicounter_mem_44728 = np.zeros(10240, dtype=np.int32)
    static_mem_45883 = opencl_alloc(self, 40960, "static_mem_45883")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45883,
                      normaliseArray(mainDetailedzicounter_mem_44728),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44728 = static_mem_45883
    mainDetailedzicounter_mem_44882 = np.zeros(10240, dtype=np.int32)
    static_mem_45886 = opencl_alloc(self, 40960, "static_mem_45886")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45886,
                      normaliseArray(mainDetailedzicounter_mem_44882),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44882 = static_mem_45886
    mainDetailedzicounter_mem_44970 = np.zeros(10240, dtype=np.int32)
    static_mem_45887 = opencl_alloc(self, 40960, "static_mem_45887")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45887,
                      normaliseArray(mainDetailedzicounter_mem_44970),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44970 = static_mem_45887
    mainDetailedzicounter_mem_45058 = np.zeros(10240, dtype=np.int32)
    static_mem_45888 = opencl_alloc(self, 40960, "static_mem_45888")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45888,
                      normaliseArray(mainDetailedzicounter_mem_45058),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45058 = static_mem_45888
    mainDetailedzicounter_mem_45252 = np.zeros(10240, dtype=np.int32)
    static_mem_45889 = opencl_alloc(self, 40960, "static_mem_45889")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45889,
                      normaliseArray(mainDetailedzicounter_mem_45252),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45252 = static_mem_45889
    mainDetailedzicounter_mem_45312 = np.zeros(10240, dtype=np.int32)
    static_mem_45890 = opencl_alloc(self, 40960, "static_mem_45890")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45890,
                      normaliseArray(mainDetailedzicounter_mem_45312),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45312 = static_mem_45890
    mainDetailedzicounter_mem_45352 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_45891 = opencl_alloc(self, 40, "static_mem_45891")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45891,
                      normaliseArray(mainDetailedzicounter_mem_45352),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45352 = static_mem_45891
    mainDetailedzicounter_mem_45421 = np.zeros(10240, dtype=np.int32)
    static_mem_45893 = opencl_alloc(self, 40960, "static_mem_45893")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45893,
                      normaliseArray(mainDetailedzicounter_mem_45421),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45421 = static_mem_45893
    mainDetailedzicounter_mem_45658 = np.zeros(10240, dtype=np.int32)
    static_mem_45895 = opencl_alloc(self, 40960, "static_mem_45895")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45895,
                      normaliseArray(mainDetailedzicounter_mem_45658),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45658 = static_mem_45895
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_45071, num_elems_45072,
                                     val_45073):
    group_sizze_45078 = self.sizes["builtin#replicate_f32.group_size_45078"]
    num_groups_45079 = sdiv_up64(num_elems_45072, group_sizze_45078)
    if ((1 * (np.long(num_groups_45079) * np.long(group_sizze_45078))) != 0):
      self.builtinzhreplicate_f32zireplicate_45075_var.set_args(mem_45071,
                                                                np.int32(num_elems_45072),
                                                                np.float32(val_45073))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_45075_var,
                                 ((np.long(num_groups_45079) * np.long(group_sizze_45078)),),
                                 (np.long(group_sizze_45078),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_45080, num_elems_45081,
                                     val_45082):
    group_sizze_45087 = self.sizes["builtin#replicate_i32.group_size_45087"]
    num_groups_45088 = sdiv_up64(num_elems_45081, group_sizze_45087)
    if ((1 * (np.long(num_groups_45088) * np.long(group_sizze_45087))) != 0):
      self.builtinzhreplicate_i32zireplicate_45084_var.set_args(mem_45080,
                                                                np.int32(num_elems_45081),
                                                                np.int32(val_45082))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_45084_var,
                                 ((np.long(num_groups_45088) * np.long(group_sizze_45087)),),
                                 (np.long(group_sizze_45087),))
      if synchronous:
        sync(self)
    return ()
  def futhark_main(self, mappingindices_mem_43377, images_mem_43378, N_30803,
                   m_30804, N_30805, trend_30806, k_30807, n_30808, freq_30809,
                   hfrac_30810, lam_30811):
    dim_match_30814 = (N_30803 == N_30805)
    empty_or_match_cert_30815 = True
    assert dim_match_30814, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:179:1-185:32\n" % ("function arguments of wrong shape",))
    i32_res_30817 = sext_i32_i64(n_30808)
    x_30818 = (np.int32(2) * k_30807)
    k2p2_30819 = (np.int32(2) + x_30818)
    cond_30820 = slt32(np.int32(0), trend_30806)
    if cond_30820:
      k2p2zq_30821 = k2p2_30819
    else:
      k2p2zq_f_res_30822 = (k2p2_30819 - np.int32(1))
      k2p2zq_30821 = k2p2zq_f_res_30822
    i32_res_30823 = sext_i32_i64(k2p2zq_30821)
    binop_x_43381 = (N_30803 * i32_res_30823)
    bytes_43380 = (np.int64(4) * binop_x_43381)
    if cond_30820:
      bounds_invalid_upwards_30825 = slt64(i32_res_30823, np.int64(0))
      valid_30826 = not(bounds_invalid_upwards_30825)
      range_valid_c_30827 = True
      assert valid_30826, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:34:17-66\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30823,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_36752 = self.sizes["main.segmap_group_size_36682"]
      segmap_usable_groups_36753 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_36752)
      mem_43382 = opencl_alloc(self, bytes_43380, "mem_43382")
      if ((1 * (np.long(segmap_usable_groups_36753) * np.long(segmap_group_sizze_36752))) != 0):
        self.mainzisegmap_36679_var.set_args(self.global_failure,
                                             np.int64(N_30803),
                                             np.float32(freq_30809),
                                             np.int64(i32_res_30823),
                                             mappingindices_mem_43377,
                                             mem_43382)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36679_var,
                                   ((np.long(segmap_usable_groups_36753) * np.long(segmap_group_sizze_36752)),),
                                   (np.long(segmap_group_sizze_36752),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43382
    else:
      bounds_invalid_upwards_30851 = slt64(i32_res_30823, np.int64(0))
      valid_30852 = not(bounds_invalid_upwards_30851)
      range_valid_c_30853 = True
      assert valid_30852, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:35:17-64\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30823,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_36926 = self.sizes["main.segmap_group_size_36860"]
      segmap_usable_groups_36927 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_36926)
      mem_43386 = opencl_alloc(self, bytes_43380, "mem_43386")
      if ((1 * (np.long(segmap_usable_groups_36927) * np.long(segmap_group_sizze_36926))) != 0):
        self.mainzisegmap_36857_var.set_args(self.global_failure,
                                             np.int64(N_30803),
                                             np.float32(freq_30809),
                                             np.int64(i32_res_30823),
                                             mappingindices_mem_43377,
                                             mem_43386)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36857_var,
                                   ((np.long(segmap_usable_groups_36927) * np.long(segmap_group_sizze_36926)),),
                                   (np.long(segmap_group_sizze_36926),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43386
    x_30876 = (N_30803 * N_30803)
    y_30877 = (np.int64(2) * N_30803)
    x_30878 = (x_30876 + y_30877)
    x_30879 = (np.int64(1) + x_30878)
    y_30880 = (np.int64(1) + N_30803)
    zzero_30881 = (y_30880 == np.int64(0))
    nonzzero_30882 = not(zzero_30881)
    nonzzero_cert_30883 = True
    assert nonzzero_30882, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:32-60\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    x_30884 = sdiv64(x_30879, y_30880)
    x_30885 = (x_30884 - N_30803)
    binop_p_30886 = (x_30885 - np.int64(1))
    defunc_0_f_res_30887 = sext_i64_i32(binop_p_30886)
    i32_res_30888 = sitofp_i32_f32(defunc_0_f_res_30887)
    segmap_group_sizze_37009 = self.sizes["main.segmap_group_size_36988"]
    segmap_usable_groups_37010 = sdiv_up64(binop_x_43381,
                                           segmap_group_sizze_37009)
    mem_43390 = opencl_alloc(self, bytes_43380, "mem_43390")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43390, np.int64(0),
                                                binop_p_mem_43387, np.int64(0),
                                                np.int64(1), N_30803,
                                                i32_res_30823)
    mem_43394 = opencl_alloc(self, bytes_43380, "mem_43394")
    if ((1 * (np.long(segmap_usable_groups_37010) * np.long(segmap_group_sizze_37009))) != 0):
      self.mainzisegmap_36985_var.set_args(self.global_failure,
                                           np.int64(N_30803),
                                           np.int64(i32_res_30823),
                                           np.float32(i32_res_30888), mem_43390,
                                           mem_43394)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36985_var,
                                 ((np.long(segmap_usable_groups_37010) * np.long(segmap_group_sizze_37009)),),
                                 (np.long(segmap_group_sizze_37009),))
      if synchronous:
        sync(self)
    eq_x_y_30896 = (np.int64(0) == i32_res_30823)
    p_and_eq_x_y_30897 = (cond_30820 and eq_x_y_30896)
    not_p_30898 = not(cond_30820)
    p_and_eq_x_y_30899 = (eq_x_y_30896 and not_p_30898)
    empty_slice_30900 = (p_and_eq_x_y_30897 or p_and_eq_x_y_30899)
    m_30901 = (i32_res_30823 - np.int64(1))
    zzero_leq_i_p_m_t_s_30902 = sle64(np.int64(0), m_30901)
    i_p_m_t_s_leq_w_30903 = slt64(m_30901, i32_res_30823)
    i_lte_j_30904 = sle64(np.int64(0), i32_res_30823)
    y_30905 = (zzero_leq_i_p_m_t_s_30902 and i_p_m_t_s_leq_w_30903)
    y_30906 = (i_lte_j_30904 and y_30905)
    ok_or_empty_30907 = (empty_slice_30900 or y_30906)
    empty_slice_30908 = (i32_res_30817 == np.int64(0))
    m_30909 = (i32_res_30817 - np.int64(1))
    zzero_leq_i_p_m_t_s_30910 = sle64(np.int64(0), m_30909)
    i_p_m_t_s_leq_w_30911 = slt64(m_30909, N_30803)
    i_lte_j_30912 = sle64(np.int64(0), i32_res_30817)
    y_30913 = (zzero_leq_i_p_m_t_s_30910 and i_p_m_t_s_leq_w_30911)
    y_30914 = (i_lte_j_30912 and y_30913)
    ok_or_empty_30915 = (empty_slice_30908 or y_30914)
    index_ok_30916 = (ok_or_empty_30907 and ok_or_empty_30915)
    index_certs_30917 = True
    assert index_ok_30916, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:44:15-23\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30817,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_30823,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30803,
                                                                                                                                                                               "]."))
    empty_slice_30919 = (i32_res_30823 == np.int64(0))
    ok_or_empty_30920 = (y_30906 or empty_slice_30919)
    index_ok_30921 = (ok_or_empty_30915 and ok_or_empty_30920)
    index_certs_30922 = True
    assert index_ok_30921, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:45:15-24\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [:",
                                                                                                                                                                               i32_res_30817,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_30803,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_30823,
                                                                                                                                                                               "]."))
    empty_slice_30924 = (m_30804 == np.int64(0))
    m_30925 = (m_30804 - np.int64(1))
    zzero_leq_i_p_m_t_s_30926 = sle64(np.int64(0), m_30925)
    i_p_m_t_s_leq_w_30927 = slt64(m_30925, m_30804)
    i_lte_j_30928 = sle64(np.int64(0), m_30804)
    y_30929 = (zzero_leq_i_p_m_t_s_30926 and i_p_m_t_s_leq_w_30927)
    y_30930 = (i_lte_j_30928 and y_30929)
    ok_or_empty_30931 = (empty_slice_30924 or y_30930)
    index_ok_30932 = (ok_or_empty_30915 and ok_or_empty_30931)
    index_certs_30933 = True
    assert index_ok_30932, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:46:15-28\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30817,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_30804,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30803,
                                                                                                                                                                               "]."))
    suff_outer_par_37016 = (self.sizes["main.suff_outer_par_6"] <= m_30804)
    segmap_group_sizze_37042 = self.sizes["main.segmap_group_size_37020"]
    max_num_groups_44637 = self.sizes["main.segmap_num_groups_37022"]
    num_groups_37043 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30804,
                                                            segmap_group_sizze_37042),
                                                  sext_i32_i64(max_num_groups_44637))))
    nest_sizze_37218 = (m_30804 * i32_res_30823)
    segmap_group_sizze_37219 = self.sizes["main.segmap_group_size_37067"]
    max_num_groups_44638 = self.sizes["main.segmap_num_groups_37069"]
    num_groups_37220 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37218,
                                                            segmap_group_sizze_37219),
                                                  sext_i32_i64(max_num_groups_44638))))
    suff_outer_par_37224 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_37218)
    y_37248 = (i32_res_30823 * i32_res_30823)
    comparatee_37249 = (m_30804 * y_37248)
    suff_outer_par_37250 = (self.sizes["main.suff_outer_par_8"] <= comparatee_37249)
    nest_sizze_37270 = (i32_res_30817 * comparatee_37249)
    segred_group_sizze_37271 = self.sizes["main.segred_group_size_37127"]
    max_num_groups_44639 = self.sizes["main.segred_num_groups_37129"]
    num_groups_37272 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37270,
                                                            segred_group_sizze_37271),
                                                  sext_i32_i64(max_num_groups_44639))))
    tile_sizze_41560 = self.sizes["main.tile_size_41559"]
    group_sizze_41561 = (tile_sizze_41560 * tile_sizze_41560)
    binop_x_43396 = (m_30804 * N_30805)
    bytes_43395 = (np.int64(4) * binop_x_43396)
    bytes_43440 = (np.int64(4) * comparatee_37249)
    bytes_43399 = (np.int64(4) * y_37248)
    binop_x_43541 = (i32_res_30823 * nest_sizze_37218)
    bytes_43539 = (np.int64(4) * binop_x_43541)
    bytes_43445 = (np.int64(4) * i32_res_30823)
    bytes_43465 = (np.int64(4) * group_sizze_41561)
    binop_x_44408 = (np.int64(4) * tile_sizze_41560)
    sizze_44409 = (tile_sizze_41560 * binop_x_44408)
    num_threads_44559 = (segmap_group_sizze_37042 * num_groups_37043)
    total_sizze_44560 = (bytes_43399 * num_threads_44559)
    num_threads_44561 = (segmap_group_sizze_37219 * num_groups_37220)
    total_sizze_44562 = (bytes_43445 * num_threads_44561)
    local_memory_capacity_44740 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44740)) and suff_outer_par_37016):
      mem_43397 = opencl_alloc(self, bytes_43395, "mem_43397")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43397, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_30805, m_30804)
      mem_43443 = opencl_alloc(self, bytes_43440, "mem_43443")
      mem_43401 = opencl_alloc(self, total_sizze_44560, "mem_43401")
      if ((1 * (np.long(num_groups_37043) * np.long(segmap_group_sizze_37042))) != 0):
        self.mainzisegmap_37018_var.set_args(self.global_failure,
                                             np.int64(N_30803),
                                             np.int64(m_30804),
                                             np.int32(n_30808),
                                             np.int32(k2p2zq_30821),
                                             np.int64(i32_res_30823),
                                             np.int64(num_groups_37043),
                                             binop_p_mem_43387, mem_43394,
                                             mem_43397, mem_43401, mem_43443)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37018_var,
                                   ((np.long(num_groups_37043) * np.long(segmap_group_sizze_37042)),),
                                   (np.long(segmap_group_sizze_37042),))
        if synchronous:
          sync(self)
      mem_43397 = None
      mem_43401 = None
      mem_43542 = opencl_alloc(self, bytes_43539, "mem_43542")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43542, np.int64(0),
                                                  mem_43443, np.int64(0),
                                                  np.int64(1), m_30804,
                                                  (i32_res_30823 * i32_res_30823))
      mem_43443 = None
      defunc_3_map_res_mem_43544 = mem_43542
    else:
      local_memory_capacity_44739 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44739)) and suff_outer_par_37224):
        mem_43462 = opencl_alloc(self, bytes_43539, "mem_43462")
        mem_43446 = opencl_alloc(self, total_sizze_44562, "mem_43446")
        if ((1 * (np.long(num_groups_37220) * np.long(segmap_group_sizze_37219))) != 0):
          self.mainzisegmap_37064_var.set_args(self.global_failure,
                                               np.int64(m_30804),
                                               np.int64(N_30805),
                                               np.int32(n_30808),
                                               np.int32(k2p2zq_30821),
                                               np.int64(i32_res_30823),
                                               np.int64(num_groups_37220),
                                               images_mem_43378, mem_43390,
                                               mem_43394, mem_43446, mem_43462)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37064_var,
                                     ((np.long(num_groups_37220) * np.long(segmap_group_sizze_37219)),),
                                     (np.long(segmap_group_sizze_37219),))
          if synchronous:
            sync(self)
        mem_43446 = None
        mem_43536 = opencl_alloc(self, bytes_43539, "mem_43536")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43536, np.int64(0),
                                                    mem_43462, np.int64(0),
                                                    np.int64(1),
                                                    (m_30804 * i32_res_30823),
                                                    i32_res_30823)
        mem_43462 = None
        defunc_3_map_res_mem_43538 = mem_43536
      else:
        local_memory_capacity_44738 = self.max_local_memory
        if (sle64((((bytes_43465 + bytes_43465) + bytes_43465) + bytes_43465),
                  sext_i32_i64(local_memory_capacity_44738)) and suff_outer_par_37250):
          num_groups_x_41562 = sdiv_up64(i32_res_30823, tile_sizze_41560)
          y_41564 = (m_30804 * num_groups_x_41562)
          num_groups_top_41565 = (num_groups_x_41562 * y_41564)
          num_whole_tiles_41582 = squot64(i32_res_30817, tile_sizze_41560)
          residual_input_41744 = srem64(i32_res_30817, tile_sizze_41560)
          cond_41745 = (residual_input_41744 == np.int64(0))
          mem_43523 = opencl_alloc(self, bytes_43539, "mem_43523")
          if ((1 * (np.long(num_groups_top_41565) * np.long(group_sizze_41561))) != 0):
            self.mainzisegmap_intragroup_41566_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_43465)),
                                                            cl.LocalMemory(np.long(bytes_43465)),
                                                            cl.LocalMemory(np.long(bytes_43465)),
                                                            cl.LocalMemory(np.long(bytes_43465)),
                                                            np.int64(m_30804),
                                                            np.int64(N_30805),
                                                            np.int64(i32_res_30817),
                                                            np.int64(i32_res_30823),
                                                            np.int64(num_groups_x_41562),
                                                            np.int64(num_whole_tiles_41582),
                                                            np.int64(residual_input_41744),
                                                            np.byte(cond_41745),
                                                            images_mem_43378,
                                                            mem_43390,
                                                            mem_43394,
                                                            mem_43523)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_41566_var,
                                       ((np.long(num_groups_top_41565) * np.long(group_sizze_41561)),),
                                       (np.long(group_sizze_41561),))
            if synchronous:
              sync(self)
          defunc_3_map_res_mem_43532 = mem_43523
        else:
          mem_43526 = opencl_alloc(self, bytes_43380, "mem_43526")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43526, np.int64(0),
                                                      mem_43394, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_30823, N_30803)
          mem_43531 = opencl_alloc(self, bytes_43539, "mem_43531")
          if slt64((i32_res_30817 * np.int64(2)), segred_group_sizze_37271):
            segment_sizze_nonzzero_44678 = smax64(np.int64(1), i32_res_30817)
            num_threads_44679 = (num_groups_37272 * segred_group_sizze_37271)
            if ((1 * (np.long(num_groups_37272) * np.long(segred_group_sizze_37271))) != 0):
              self.mainzisegred_small_37133_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37271))),
                                                         np.int64(N_30803),
                                                         np.int64(m_30804),
                                                         np.int64(N_30805),
                                                         np.int64(i32_res_30817),
                                                         np.int64(i32_res_30823),
                                                         np.int64(num_groups_37272),
                                                         images_mem_43378,
                                                         binop_p_mem_43387,
                                                         mem_43526, mem_43531,
                                                         np.int64(segment_sizze_nonzzero_44678))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_37133_var,
                                         ((np.long(num_groups_37272) * np.long(segred_group_sizze_37271)),),
                                         (np.long(segred_group_sizze_37271),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44699 = sdiv_up64(num_groups_37272,
                                                 smax64(np.int64(1),
                                                        ((m_30804 * i32_res_30823) * i32_res_30823)))
            elements_per_thread_44700 = sdiv_up64(i32_res_30817,
                                                  (segred_group_sizze_37271 * groups_per_segment_44699))
            virt_num_groups_44701 = (groups_per_segment_44699 * ((m_30804 * i32_res_30823) * i32_res_30823))
            num_threads_44702 = (num_groups_37272 * segred_group_sizze_37271)
            threads_per_segment_44703 = (groups_per_segment_44699 * segred_group_sizze_37271)
            group_res_arr_mem_44704 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_37271 * virt_num_groups_44701)),
                                                   "group_res_arr_mem_44704")
            mainzicounter_mem_44706 = self.mainzicounter_mem_44706
            if ((1 * (np.long(num_groups_37272) * np.long(segred_group_sizze_37271))) != 0):
              self.mainzisegred_large_37133_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37271))),
                                                         np.int64(N_30803),
                                                         np.int64(N_30805),
                                                         np.int64(i32_res_30817),
                                                         np.int64(i32_res_30823),
                                                         np.int64(num_groups_37272),
                                                         images_mem_43378,
                                                         binop_p_mem_43387,
                                                         mem_43526, mem_43531,
                                                         np.int64(groups_per_segment_44699),
                                                         np.int64(elements_per_thread_44700),
                                                         np.int64(virt_num_groups_44701),
                                                         np.int64(threads_per_segment_44703),
                                                         group_res_arr_mem_44704,
                                                         mainzicounter_mem_44706)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_37133_var,
                                         ((np.long(num_groups_37272) * np.long(segred_group_sizze_37271)),),
                                         (np.long(segred_group_sizze_37271),))
              if synchronous:
                sync(self)
          mem_43526 = None
          defunc_3_map_res_mem_43532 = mem_43531
        defunc_3_map_res_mem_43538 = defunc_3_map_res_mem_43532
      defunc_3_map_res_mem_43544 = defunc_3_map_res_mem_43538
    m_30954 = (np.int64(2) * i32_res_30823)
    nm_30955 = (i32_res_30823 * m_30954)
    bounds_invalid_upwards_30956 = slt64(nm_30955, np.int64(0))
    valid_30957 = not(bounds_invalid_upwards_30956)
    range_valid_c_30958 = True
    assert valid_30957, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:77:21-27\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        nm_30955,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_30960 = (m_30954 == np.int64(0))
    nonzzero_30961 = not(zzero_30960)
    nonzzero_cert_30962 = True
    assert nonzzero_30961, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:72:41-47\n   #1  helpers.fut:72:14-77:28\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    i64_res_30963 = sext_i64_i32(m_30954)
    loop_nonempty_30964 = slt32(np.int32(0), k2p2zq_30821)
    zzero_30965 = (i64_res_30963 == np.int32(0))
    nonzzero_30966 = not(zzero_30965)
    loop_not_taken_30967 = not(loop_nonempty_30964)
    protect_assert_disj_30968 = (nonzzero_30966 or loop_not_taken_30967)
    nonzzero_cert_30969 = True
    assert protect_assert_disj_30968, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:32\n   #2  helpers.fut:78:15-53\n   #3  bfastfinal.fut:56:35-50\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    y_37351 = smin64(i32_res_30823, nm_30955)
    intra_avail_par_37352 = smin64(y_37248, y_37351)
    y_37353 = smax64(i32_res_30823, nm_30955)
    computed_group_sizze_37295 = smax64(y_37248, y_37353)
    max_group_sizze_37486 = self.max_group_size
    fits_37487 = sle64(computed_group_sizze_37295, max_group_sizze_37486)
    suff_intra_par_37485 = (self.sizes["main.suff_intra_par_10"] <= intra_avail_par_37352)
    intra_suff_and_fits_37488 = (suff_intra_par_37485 and fits_37487)
    nest_sizze_38069 = (m_30804 * nm_30955)
    segmap_group_sizze_38070 = self.sizes["main.segmap_group_size_38033"]
    fits_38097 = sle64(nm_30955, max_group_sizze_37486)
    suff_intra_par_38099 = (self.sizes["main.suff_intra_par_14"] <= nm_30955)
    intra_suff_and_fits_38100 = (fits_38097 and suff_intra_par_38099)
    segmap_group_sizze_38136 = self.sizes["main.segmap_group_size_37941"]
    segmap_group_sizze_38152 = self.sizes["main.segmap_group_size_37874"]
    segmap_group_sizze_38186 = self.sizes["main.segmap_group_size_37820"]
    segmap_group_sizze_38221 = self.sizes["main.segmap_group_size_37602"]
    segmap_usable_groups_38137 = sdiv_up_safe64(m_30804,
                                                segmap_group_sizze_38136)
    segmap_usable_groups_38153 = sdiv_up_safe64(nest_sizze_38069,
                                                segmap_group_sizze_38152)
    segmap_usable_groups_38187 = sdiv_up_safe64(nest_sizze_38069,
                                                segmap_group_sizze_38186)
    bytes_43547 = (np.int64(4) * nm_30955)
    bytes_43574 = (np.int64(4) * nest_sizze_38069)
    local_memory_capacity_44805 = self.max_local_memory
    if (sle64(((bytes_43547 + bytes_43547) + bytes_43399),
              sext_i32_i64(local_memory_capacity_44805)) and intra_suff_and_fits_37488):
      mem_43572 = opencl_alloc(self, bytes_43539, "mem_43572")
      if ((1 * (np.long(m_30804) * np.long(computed_group_sizze_37295))) != 0):
        self.mainzisegmap_intragroup_37354_var.set_args(self.global_failure,
                                                        self.failure_is_an_option,
                                                        self.global_failure_args,
                                                        cl.LocalMemory(np.long(bytes_43399)),
                                                        cl.LocalMemory(np.long(bytes_43547)),
                                                        cl.LocalMemory(np.long(bytes_43547)),
                                                        np.int32(k2p2zq_30821),
                                                        np.int64(i32_res_30823),
                                                        np.int64(m_30954),
                                                        np.int64(nm_30955),
                                                        np.int32(i64_res_30963),
                                                        np.int64(computed_group_sizze_37295),
                                                        defunc_3_map_res_mem_43544,
                                                        mem_43572)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_37354_var,
                                   ((np.long(m_30804) * np.long(computed_group_sizze_37295)),),
                                   (np.long(computed_group_sizze_37295),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_3_map_res_mem_43627 = mem_43572
    else:
      segmap_usable_groups_38071 = sdiv_up64(nest_sizze_38069,
                                             segmap_group_sizze_38070)
      mem_43576 = opencl_alloc(self, bytes_43574, "mem_43576")
      if ((1 * (np.long(segmap_usable_groups_38071) * np.long(segmap_group_sizze_38070))) != 0):
        self.mainzisegmap_38030_var.set_args(self.global_failure,
                                             np.int64(m_30804),
                                             np.int64(i32_res_30823),
                                             np.int64(m_30954),
                                             np.int64(nm_30955),
                                             defunc_3_map_res_mem_43544,
                                             mem_43576)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38030_var,
                                   ((np.long(segmap_usable_groups_38071) * np.long(segmap_group_sizze_38070)),),
                                   (np.long(segmap_group_sizze_38070),))
        if synchronous:
          sync(self)
      ctx_param_ext_43577 = m_30804
      ctx_param_ext_43578 = nm_30955
      ctx_param_ext_43579 = np.int64(0)
      ctx_param_ext_43580 = nm_30955
      ctx_param_ext_43581 = m_30804
      ctx_param_ext_43582 = np.int64(1)
      ctx_param_ext_43583 = nm_30955
      mem_param_43584 = mem_43576
      i_38085 = np.int32(0)
      one_45870 = np.int32(1)
      for counter_45869 in range(k2p2zq_30821):
        i_38087 = sext_i32_i64(i_38085)
        x_38088 = sle64(np.int64(0), i_38087)
        y_38089 = slt64(i_38087, nm_30955)
        bounds_check_38090 = (x_38088 and y_38089)
        index_certs_38091 = True
        assert bounds_check_38090, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                                         i_38087,
                                                                                                                                                                                                                                         "] out of bounds for array of shape [",
                                                                                                                                                                                                                                         nm_30955,
                                                                                                                                                                                                                                         "]."))
        local_memory_capacity_44765 = self.max_local_memory
        if intra_suff_and_fits_38100:
          gauss_jordan_res_ixfn_43606 = m_30804
        else:
          gauss_jordan_res_ixfn_43606 = ctx_param_ext_43581
        local_memory_capacity_44766 = self.max_local_memory
        if intra_suff_and_fits_38100:
          gauss_jordan_res_ixfn_43607 = nm_30955
        else:
          gauss_jordan_res_ixfn_43607 = ctx_param_ext_43583
        local_memory_capacity_44767 = self.max_local_memory
        if intra_suff_and_fits_38100:
          gauss_jordan_res_ixfn_43608 = m_30804
        else:
          gauss_jordan_res_ixfn_43608 = ctx_param_ext_43577
        local_memory_capacity_44768 = self.max_local_memory
        if intra_suff_and_fits_38100:
          gauss_jordan_res_ixfn_43609 = nm_30955
        else:
          gauss_jordan_res_ixfn_43609 = ctx_param_ext_43578
        local_memory_capacity_44769 = self.max_local_memory
        if intra_suff_and_fits_38100:
          gauss_jordan_res_ixfn_43610 = nm_30955
        else:
          gauss_jordan_res_ixfn_43610 = ctx_param_ext_43580
        local_memory_capacity_44770 = self.max_local_memory
        if intra_suff_and_fits_38100:
          gauss_jordan_res_ixfn_43611 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43611 = ctx_param_ext_43582
        local_memory_capacity_44771 = self.max_local_memory
        if intra_suff_and_fits_38100:
          gauss_jordan_res_ixfn_43612 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43612 = ctx_param_ext_43579
        local_memory_capacity_44799 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44799)) and sle64(bytes_43547,
                                                                        sext_i32_i64(local_memory_capacity_44799))) and intra_suff_and_fits_38100):
          mem_43589 = opencl_alloc(self, bytes_43574, "mem_43589")
          group_sizze_44775 = self.sizes["main.group_size_44775"]
          num_groups_44776 = sdiv_up64((m_30804 * nm_30955), group_sizze_44775)
          if ((1 * (np.long(num_groups_44776) * np.long(group_sizze_44775))) != 0):
            self.mainzicopy_44772_var.set_args(np.int64(m_30804),
                                               np.int64(nm_30955),
                                               np.int64(ctx_param_ext_43579),
                                               np.int64(ctx_param_ext_43580),
                                               np.int64(ctx_param_ext_43582),
                                               mem_param_43584, mem_43589)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_44772_var,
                                       ((np.long(num_groups_44776) * np.long(group_sizze_44775)),),
                                       (np.long(group_sizze_44775),))
            if synchronous:
              sync(self)
          mem_43597 = opencl_alloc(self, bytes_43574, "mem_43597")
          if ((1 * (np.long(m_30804) * np.long(nm_30955))) != 0):
            self.mainzisegmap_intragroup_37698_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_43547)),
                                                            np.int64(m_30804),
                                                            np.int32(k2p2zq_30821),
                                                            np.int64(nm_30955),
                                                            np.int32(i64_res_30963),
                                                            np.int32(i_38085),
                                                            np.int64(i_38087),
                                                            np.int64(ctx_param_ext_43579),
                                                            np.int64(ctx_param_ext_43580),
                                                            np.int64(ctx_param_ext_43582),
                                                            mem_param_43584,
                                                            mem_43589,
                                                            mem_43597)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_37698_var,
                                       ((np.long(m_30804) * np.long(nm_30955)),),
                                       (np.long(nm_30955),))
            if synchronous:
              sync(self)
          mem_43589 = None
          gauss_jordan_res_mem_43613 = mem_43597
        else:
          mem_43600 = opencl_alloc(self, m_30804, "mem_43600")
          if ((1 * (np.long(segmap_usable_groups_38137) * np.long(segmap_group_sizze_38136))) != 0):
            self.mainzisegmap_37939_var.set_args(self.global_failure,
                                                 np.int64(m_30804),
                                                 np.int64(i_38087),
                                                 np.int64(ctx_param_ext_43579),
                                                 np.int64(ctx_param_ext_43580),
                                                 np.int64(ctx_param_ext_43582),
                                                 mem_param_43584, mem_43600)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37939_var,
                                       ((np.long(segmap_usable_groups_38137) * np.long(segmap_group_sizze_38136)),),
                                       (np.long(segmap_group_sizze_38136),))
            if synchronous:
              sync(self)
          mem_43604 = opencl_alloc(self, bytes_43574, "mem_43604")
          if ((1 * (np.long(segmap_usable_groups_38153) * np.long(segmap_group_sizze_38152))) != 0):
            self.mainzisegmap_37871_var.set_args(self.global_failure,
                                                 np.int64(m_30804),
                                                 np.int32(k2p2zq_30821),
                                                 np.int64(nm_30955),
                                                 np.int32(i64_res_30963),
                                                 np.int32(i_38085),
                                                 np.int64(i_38087),
                                                 np.int64(ctx_param_ext_43579),
                                                 np.int64(ctx_param_ext_43580),
                                                 np.int64(ctx_param_ext_43582),
                                                 mem_param_43584, mem_43600,
                                                 mem_43604)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37871_var,
                                       ((np.long(segmap_usable_groups_38153) * np.long(segmap_group_sizze_38152)),),
                                       (np.long(segmap_group_sizze_38152),))
            if synchronous:
              sync(self)
          mem_43600 = None
          if ((1 * (np.long(segmap_usable_groups_38187) * np.long(segmap_group_sizze_38186))) != 0):
            self.mainzisegmap_37817_var.set_args(self.global_failure,
                                                 np.int64(m_30804),
                                                 np.int64(nm_30955),
                                                 np.int64(ctx_param_ext_43579),
                                                 np.int64(ctx_param_ext_43580),
                                                 np.int64(ctx_param_ext_43582),
                                                 mem_param_43584, mem_43604)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37817_var,
                                       ((np.long(segmap_usable_groups_38187) * np.long(segmap_group_sizze_38186)),),
                                       (np.long(segmap_group_sizze_38186),))
            if synchronous:
              sync(self)
          mem_43604 = None
          gauss_jordan_res_mem_43613 = mem_param_43584
        ctx_param_ext_tmp_44756 = gauss_jordan_res_ixfn_43608
        ctx_param_ext_tmp_44757 = gauss_jordan_res_ixfn_43609
        ctx_param_ext_tmp_44758 = gauss_jordan_res_ixfn_43612
        ctx_param_ext_tmp_44759 = gauss_jordan_res_ixfn_43610
        ctx_param_ext_tmp_44760 = gauss_jordan_res_ixfn_43606
        ctx_param_ext_tmp_44761 = gauss_jordan_res_ixfn_43611
        ctx_param_ext_tmp_44762 = gauss_jordan_res_ixfn_43607
        mem_param_tmp_44763 = gauss_jordan_res_mem_43613
        ctx_param_ext_43577 = ctx_param_ext_tmp_44756
        ctx_param_ext_43578 = ctx_param_ext_tmp_44757
        ctx_param_ext_43579 = ctx_param_ext_tmp_44758
        ctx_param_ext_43580 = ctx_param_ext_tmp_44759
        ctx_param_ext_43581 = ctx_param_ext_tmp_44760
        ctx_param_ext_43582 = ctx_param_ext_tmp_44761
        ctx_param_ext_43583 = ctx_param_ext_tmp_44762
        mem_param_43584 = mem_param_tmp_44763
        i_38085 += one_45870
      gauss_jordan_res_r_ixfn_43614 = ctx_param_ext_43577
      gauss_jordan_res_r_ixfn_43615 = ctx_param_ext_43578
      gauss_jordan_res_r_ixfn_43616 = ctx_param_ext_43579
      gauss_jordan_res_r_ixfn_43617 = ctx_param_ext_43580
      gauss_jordan_res_r_ixfn_43618 = ctx_param_ext_43581
      gauss_jordan_res_r_ixfn_43619 = ctx_param_ext_43582
      gauss_jordan_res_r_ixfn_43620 = ctx_param_ext_43583
      gauss_jordan_res_r_mem_43621 = mem_param_43584
      mem_43576 = None
      segmap_usable_groups_38222 = sdiv_up64(comparatee_37249,
                                             segmap_group_sizze_38221)
      mem_43626 = opencl_alloc(self, bytes_43539, "mem_43626")
      if ((1 * (np.long(segmap_usable_groups_38222) * np.long(segmap_group_sizze_38221))) != 0):
        self.mainzisegmap_37598_var.set_args(self.global_failure,
                                             np.int64(m_30804),
                                             np.int64(i32_res_30823),
                                             np.int64(m_30954),
                                             np.int64(gauss_jordan_res_r_ixfn_43616),
                                             np.int64(gauss_jordan_res_r_ixfn_43617),
                                             np.int64(gauss_jordan_res_r_ixfn_43619),
                                             gauss_jordan_res_r_mem_43621,
                                             mem_43626)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37598_var,
                                   ((np.long(segmap_usable_groups_38222) * np.long(segmap_group_sizze_38221)),),
                                   (np.long(segmap_group_sizze_38221),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43621 = None
      defunc_3_map_res_mem_43627 = mem_43626
    defunc_3_map_res_mem_43544 = None
    suff_outer_par_38234 = (self.sizes["main.suff_outer_par_17"] <= m_30804)
    segmap_group_sizze_38256 = self.sizes["main.segmap_group_size_38238"]
    max_num_groups_44806 = self.sizes["main.segmap_num_groups_38240"]
    num_groups_38257 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30804,
                                                            segmap_group_sizze_38256),
                                                  sext_i32_i64(max_num_groups_44806))))
    suff_outer_par_38341 = (self.sizes["main.suff_outer_par_18"] <= nest_sizze_37218)
    nest_sizze_38357 = (i32_res_30817 * nest_sizze_37218)
    segred_group_sizze_38358 = self.sizes["main.segred_group_size_38300"]
    max_num_groups_44807 = self.sizes["main.segred_num_groups_38302"]
    num_groups_38359 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38357,
                                                            segred_group_sizze_38358),
                                                  sext_i32_i64(max_num_groups_44807))))
    tile_sizze_41906 = self.sizes["main.tile_size_41905"]
    group_sizze_41907 = (tile_sizze_41906 * tile_sizze_41906)
    bytes_43646 = (np.int64(4) * nest_sizze_37218)
    bytes_43651 = (np.int64(4) * group_sizze_41907)
    binop_x_44422 = (np.int64(4) * tile_sizze_41906)
    sizze_44423 = (tile_sizze_41906 * binop_x_44422)
    num_threads_44572 = (segmap_group_sizze_38256 * num_groups_38257)
    total_sizze_44573 = (bytes_43445 * num_threads_44572)
    local_memory_capacity_44893 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44893)) and suff_outer_par_38234):
      mem_43630 = opencl_alloc(self, bytes_43395, "mem_43630")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43630, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_30805, m_30804)
      mem_43648 = opencl_alloc(self, bytes_43646, "mem_43648")
      mem_43633 = opencl_alloc(self, total_sizze_44573, "mem_43633")
      if ((1 * (np.long(num_groups_38257) * np.long(segmap_group_sizze_38256))) != 0):
        self.mainzisegmap_38236_var.set_args(self.global_failure,
                                             np.int64(N_30803),
                                             np.int64(m_30804),
                                             np.int32(n_30808),
                                             np.int32(k2p2zq_30821),
                                             np.int64(i32_res_30823),
                                             np.int64(num_groups_38257),
                                             binop_p_mem_43387, mem_43630,
                                             mem_43633, mem_43648)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38236_var,
                                   ((np.long(num_groups_38257) * np.long(segmap_group_sizze_38256)),),
                                   (np.long(segmap_group_sizze_38256),))
        if synchronous:
          sync(self)
      mem_43630 = None
      mem_43633 = None
      mem_43716 = opencl_alloc(self, bytes_43646, "mem_43716")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43716, np.int64(0),
                                                  mem_43648, np.int64(0),
                                                  np.int64(1), m_30804,
                                                  i32_res_30823)
      mem_43648 = None
      defunc_3_map_res_mem_43718 = mem_43716
    else:
      local_memory_capacity_44892 = self.max_local_memory
      if (sle64((((bytes_43651 + bytes_43651) + bytes_43651) + bytes_43651),
                sext_i32_i64(local_memory_capacity_44892)) and suff_outer_par_38341):
        num_groups_x_41908 = sdiv_up64(m_30804, tile_sizze_41906)
        num_groups_y_41909 = sdiv_up64(i32_res_30823, tile_sizze_41906)
        num_groups_top_41910 = (num_groups_x_41908 * num_groups_y_41909)
        num_whole_tiles_41927 = squot64(i32_res_30817, tile_sizze_41906)
        residual_input_42077 = srem64(i32_res_30817, tile_sizze_41906)
        cond_42078 = (residual_input_42077 == np.int64(0))
        mem_43708 = opencl_alloc(self, bytes_43646, "mem_43708")
        if ((1 * (np.long(num_groups_top_41910) * np.long(group_sizze_41907))) != 0):
          self.mainzisegmap_intragroup_41911_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43651)),
                                                          cl.LocalMemory(np.long(bytes_43651)),
                                                          cl.LocalMemory(np.long(bytes_43651)),
                                                          cl.LocalMemory(np.long(bytes_43651)),
                                                          np.int64(m_30804),
                                                          np.int64(N_30805),
                                                          np.int64(i32_res_30817),
                                                          np.int64(i32_res_30823),
                                                          np.int64(num_groups_y_41909),
                                                          np.int64(num_whole_tiles_41927),
                                                          np.int64(residual_input_42077),
                                                          np.byte(cond_42078),
                                                          images_mem_43378,
                                                          mem_43390, mem_43708)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41911_var,
                                     ((np.long(num_groups_top_41910) * np.long(group_sizze_41907)),),
                                     (np.long(group_sizze_41907),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43713 = mem_43708
      else:
        mem_43712 = opencl_alloc(self, bytes_43646, "mem_43712")
        if slt64((i32_res_30817 * np.int64(2)), segred_group_sizze_38358):
          segment_sizze_nonzzero_44832 = smax64(np.int64(1), i32_res_30817)
          num_threads_44833 = (num_groups_38359 * segred_group_sizze_38358)
          if ((1 * (np.long(num_groups_38359) * np.long(segred_group_sizze_38358))) != 0):
            self.mainzisegred_small_38306_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38358))),
                                                       np.int64(N_30803),
                                                       np.int64(m_30804),
                                                       np.int64(N_30805),
                                                       np.int64(i32_res_30817),
                                                       np.int64(i32_res_30823),
                                                       np.int64(num_groups_38359),
                                                       images_mem_43378,
                                                       binop_p_mem_43387,
                                                       mem_43712,
                                                       np.int64(segment_sizze_nonzzero_44832))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38306_var,
                                       ((np.long(num_groups_38359) * np.long(segred_group_sizze_38358)),),
                                       (np.long(segred_group_sizze_38358),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44853 = sdiv_up64(num_groups_38359,
                                               smax64(np.int64(1),
                                                      (m_30804 * i32_res_30823)))
          elements_per_thread_44854 = sdiv_up64(i32_res_30817,
                                                (segred_group_sizze_38358 * groups_per_segment_44853))
          virt_num_groups_44855 = (groups_per_segment_44853 * (m_30804 * i32_res_30823))
          num_threads_44856 = (num_groups_38359 * segred_group_sizze_38358)
          threads_per_segment_44857 = (groups_per_segment_44853 * segred_group_sizze_38358)
          group_res_arr_mem_44858 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38358 * virt_num_groups_44855)),
                                                 "group_res_arr_mem_44858")
          mainzicounter_mem_44860 = self.mainzicounter_mem_44860
          if ((1 * (np.long(num_groups_38359) * np.long(segred_group_sizze_38358))) != 0):
            self.mainzisegred_large_38306_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38358))),
                                                       np.int64(N_30803),
                                                       np.int64(N_30805),
                                                       np.int64(i32_res_30817),
                                                       np.int64(i32_res_30823),
                                                       np.int64(num_groups_38359),
                                                       images_mem_43378,
                                                       binop_p_mem_43387,
                                                       mem_43712,
                                                       np.int64(groups_per_segment_44853),
                                                       np.int64(elements_per_thread_44854),
                                                       np.int64(virt_num_groups_44855),
                                                       np.int64(threads_per_segment_44857),
                                                       group_res_arr_mem_44858,
                                                       mainzicounter_mem_44860)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38306_var,
                                       ((np.long(num_groups_38359) * np.long(segred_group_sizze_38358)),),
                                       (np.long(segred_group_sizze_38358),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43713 = mem_43712
      defunc_3_map_res_mem_43718 = defunc_3_map_res_mem_43713
    binop_p_mem_43387 = None
    mem_43390 = None
    suff_outer_par_38375 = (self.sizes["main.suff_outer_par_19"] <= m_30804)
    segmap_group_sizze_38396 = self.sizes["main.segmap_group_size_38379"]
    max_num_groups_44894 = self.sizes["main.segmap_num_groups_38381"]
    num_groups_38397 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30804,
                                                            segmap_group_sizze_38396),
                                                  sext_i32_i64(max_num_groups_44894))))
    suff_outer_par_38476 = (self.sizes["main.suff_outer_par_20"] <= nest_sizze_37218)
    segred_group_sizze_38491 = self.sizes["main.segred_group_size_38437"]
    max_num_groups_44895 = self.sizes["main.segred_num_groups_38439"]
    num_groups_38492 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43541,
                                                            segred_group_sizze_38491),
                                                  sext_i32_i64(max_num_groups_44895))))
    tile_sizze_42228 = self.sizes["main.tile_size_42227"]
    group_sizze_42229 = (tile_sizze_42228 * tile_sizze_42228)
    bytes_43750 = (np.int64(4) * group_sizze_42229)
    binop_x_44432 = (np.int64(4) * tile_sizze_42228)
    sizze_44433 = (tile_sizze_42228 * binop_x_44432)
    num_threads_44576 = (segmap_group_sizze_38396 * num_groups_38397)
    total_sizze_44577 = (bytes_43445 * num_threads_44576)
    local_memory_capacity_44981 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44981)) and suff_outer_par_38375):
      mem_43722 = opencl_alloc(self, bytes_43440, "mem_43722")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43722, np.int64(0),
                                                  defunc_3_map_res_mem_43627,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_30823 * i32_res_30823),
                                                  m_30804)
      mem_43725 = opencl_alloc(self, bytes_43646, "mem_43725")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43725, np.int64(0),
                                                  defunc_3_map_res_mem_43718,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30823, m_30804)
      mem_43743 = opencl_alloc(self, bytes_43646, "mem_43743")
      mem_43728 = opencl_alloc(self, total_sizze_44577, "mem_43728")
      if ((1 * (np.long(num_groups_38397) * np.long(segmap_group_sizze_38396))) != 0):
        self.mainzisegmap_38377_var.set_args(self.global_failure,
                                             np.int64(m_30804),
                                             np.int32(k2p2zq_30821),
                                             np.int64(i32_res_30823),
                                             np.int64(num_groups_38397),
                                             mem_43722, mem_43725, mem_43728,
                                             mem_43743)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38377_var,
                                   ((np.long(num_groups_38397) * np.long(segmap_group_sizze_38396)),),
                                   (np.long(segmap_group_sizze_38396),))
        if synchronous:
          sync(self)
      mem_43722 = None
      mem_43725 = None
      mem_43728 = None
      mem_43809 = opencl_alloc(self, bytes_43646, "mem_43809")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43809, np.int64(0),
                                                  mem_43743, np.int64(0),
                                                  np.int64(1), m_30804,
                                                  i32_res_30823)
      mem_43743 = None
      defunc_4_map_res_mem_43811 = mem_43809
    else:
      local_memory_capacity_44980 = self.max_local_memory
      if (sle64((bytes_43750 + bytes_43750),
                sext_i32_i64(local_memory_capacity_44980)) and suff_outer_par_38476):
        mem_43747 = opencl_alloc(self, bytes_43539, "mem_43747")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43747, np.int64(0),
                                                    defunc_3_map_res_mem_43627,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_30823,
                                                    (m_30804 * i32_res_30823))
        num_groups_x_42230 = sdiv_up64(m_30804, tile_sizze_42228)
        num_groups_y_42231 = sdiv_up64(i32_res_30823, tile_sizze_42228)
        num_groups_top_42232 = (num_groups_x_42230 * num_groups_y_42231)
        num_whole_tiles_42249 = squot64(i32_res_30823, tile_sizze_42228)
        residual_input_42376 = srem64(i32_res_30823, tile_sizze_42228)
        cond_42377 = (residual_input_42376 == np.int64(0))
        mem_43801 = opencl_alloc(self, bytes_43646, "mem_43801")
        if ((1 * (np.long(num_groups_top_42232) * np.long(group_sizze_42229))) != 0):
          self.mainzisegmap_intragroup_42233_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43750)),
                                                          cl.LocalMemory(np.long(bytes_43750)),
                                                          np.int64(m_30804),
                                                          np.int64(i32_res_30823),
                                                          np.int64(num_groups_y_42231),
                                                          np.int64(num_whole_tiles_42249),
                                                          np.int64(residual_input_42376),
                                                          np.byte(cond_42377),
                                                          defunc_3_map_res_mem_43718,
                                                          mem_43747, mem_43801)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42233_var,
                                     ((np.long(num_groups_top_42232) * np.long(group_sizze_42229)),),
                                     (np.long(group_sizze_42229),))
          if synchronous:
            sync(self)
        mem_43747 = None
        defunc_4_map_res_mem_43806 = mem_43801
      else:
        mem_43805 = opencl_alloc(self, bytes_43646, "mem_43805")
        if slt64((i32_res_30823 * np.int64(2)), segred_group_sizze_38491):
          segment_sizze_nonzzero_44920 = smax64(np.int64(1), i32_res_30823)
          num_threads_44921 = (num_groups_38492 * segred_group_sizze_38491)
          if ((1 * (np.long(num_groups_38492) * np.long(segred_group_sizze_38491))) != 0):
            self.mainzisegred_small_38443_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38491))),
                                                       np.int64(m_30804),
                                                       np.int64(i32_res_30823),
                                                       np.int64(num_groups_38492),
                                                       defunc_3_map_res_mem_43627,
                                                       defunc_3_map_res_mem_43718,
                                                       mem_43805,
                                                       np.int64(segment_sizze_nonzzero_44920))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38443_var,
                                       ((np.long(num_groups_38492) * np.long(segred_group_sizze_38491)),),
                                       (np.long(segred_group_sizze_38491),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44941 = sdiv_up64(num_groups_38492,
                                               smax64(np.int64(1),
                                                      (m_30804 * i32_res_30823)))
          elements_per_thread_44942 = sdiv_up64(i32_res_30823,
                                                (segred_group_sizze_38491 * groups_per_segment_44941))
          virt_num_groups_44943 = (groups_per_segment_44941 * (m_30804 * i32_res_30823))
          num_threads_44944 = (num_groups_38492 * segred_group_sizze_38491)
          threads_per_segment_44945 = (groups_per_segment_44941 * segred_group_sizze_38491)
          group_res_arr_mem_44946 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38491 * virt_num_groups_44943)),
                                                 "group_res_arr_mem_44946")
          mainzicounter_mem_44948 = self.mainzicounter_mem_44948
          if ((1 * (np.long(num_groups_38492) * np.long(segred_group_sizze_38491))) != 0):
            self.mainzisegred_large_38443_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38491))),
                                                       np.int64(i32_res_30823),
                                                       np.int64(num_groups_38492),
                                                       defunc_3_map_res_mem_43627,
                                                       defunc_3_map_res_mem_43718,
                                                       mem_43805,
                                                       np.int64(groups_per_segment_44941),
                                                       np.int64(elements_per_thread_44942),
                                                       np.int64(virt_num_groups_44943),
                                                       np.int64(threads_per_segment_44945),
                                                       group_res_arr_mem_44946,
                                                       mainzicounter_mem_44948)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38443_var,
                                       ((np.long(num_groups_38492) * np.long(segred_group_sizze_38491)),),
                                       (np.long(segred_group_sizze_38491),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43806 = mem_43805
      defunc_4_map_res_mem_43811 = defunc_4_map_res_mem_43806
    defunc_3_map_res_mem_43627 = None
    defunc_3_map_res_mem_43718 = None
    suff_outer_par_38507 = (self.sizes["main.suff_outer_par_21"] <= m_30804)
    segmap_group_sizze_38527 = self.sizes["main.segmap_group_size_38511"]
    max_num_groups_44982 = self.sizes["main.segmap_num_groups_38513"]
    num_groups_38528 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30804,
                                                            segmap_group_sizze_38527),
                                                  sext_i32_i64(max_num_groups_44982))))
    comparatee_38603 = (N_30803 * m_30804)
    suff_outer_par_38604 = (self.sizes["main.suff_outer_par_22"] <= comparatee_38603)
    nest_sizze_38618 = (i32_res_30823 * comparatee_38603)
    segred_group_sizze_38619 = self.sizes["main.segred_group_size_38567"]
    max_num_groups_44983 = self.sizes["main.segred_num_groups_38569"]
    num_groups_38620 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38618,
                                                            segred_group_sizze_38619),
                                                  sext_i32_i64(max_num_groups_44983))))
    tile_sizze_42504 = self.sizes["main.tile_size_42503"]
    group_sizze_42505 = (tile_sizze_42504 * tile_sizze_42504)
    bytes_43830 = (np.int64(4) * comparatee_38603)
    bytes_43816 = (np.int64(4) * N_30803)
    bytes_43838 = (np.int64(4) * group_sizze_42505)
    binop_x_44444 = (np.int64(4) * tile_sizze_42504)
    sizze_44445 = (tile_sizze_42504 * binop_x_44444)
    num_threads_44580 = (segmap_group_sizze_38527 * num_groups_38528)
    total_sizze_44581 = (bytes_43816 * num_threads_44580)
    local_memory_capacity_45069 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45069)) and suff_outer_par_38507):
      mem_43814 = opencl_alloc(self, bytes_43646, "mem_43814")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43814, np.int64(0),
                                                  defunc_4_map_res_mem_43811,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30823, m_30804)
      mem_43832 = opencl_alloc(self, bytes_43830, "mem_43832")
      mem_43817 = opencl_alloc(self, total_sizze_44581, "mem_43817")
      if ((1 * (np.long(num_groups_38528) * np.long(segmap_group_sizze_38527))) != 0):
        self.mainzisegmap_38509_var.set_args(self.global_failure,
                                             np.int64(N_30803),
                                             np.int64(m_30804),
                                             np.int32(k2p2zq_30821),
                                             np.int64(i32_res_30823),
                                             np.int64(num_groups_38528),
                                             mem_43394, mem_43814, mem_43817,
                                             mem_43832)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38509_var,
                                   ((np.long(num_groups_38528) * np.long(segmap_group_sizze_38527)),),
                                   (np.long(segmap_group_sizze_38527),))
        if synchronous:
          sync(self)
      mem_43814 = None
      mem_43817 = None
      mem_43903 = opencl_alloc(self, bytes_43830, "mem_43903")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43903, np.int64(0),
                                                  mem_43832, np.int64(0),
                                                  np.int64(1), m_30804, N_30803)
      mem_43832 = None
      defunc_3_map_res_mem_43905 = mem_43903
    else:
      local_memory_capacity_45068 = self.max_local_memory
      if (sle64((((bytes_43838 + bytes_43838) + bytes_43838) + bytes_43838),
                sext_i32_i64(local_memory_capacity_45068)) and suff_outer_par_38604):
        mem_43835 = opencl_alloc(self, bytes_43380, "mem_43835")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43835, np.int64(0),
                                                    mem_43394, np.int64(0),
                                                    np.int64(1), i32_res_30823,
                                                    N_30803)
        num_groups_x_42506 = sdiv_up64(m_30804, tile_sizze_42504)
        num_groups_y_42507 = sdiv_up64(N_30803, tile_sizze_42504)
        num_groups_top_42508 = (num_groups_x_42506 * num_groups_y_42507)
        num_whole_tiles_42525 = squot64(i32_res_30823, tile_sizze_42504)
        residual_input_42669 = srem64(i32_res_30823, tile_sizze_42504)
        cond_42670 = (residual_input_42669 == np.int64(0))
        mem_43895 = opencl_alloc(self, bytes_43830, "mem_43895")
        if ((1 * (np.long(num_groups_top_42508) * np.long(group_sizze_42505))) != 0):
          self.mainzisegmap_intragroup_42509_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43838)),
                                                          cl.LocalMemory(np.long(bytes_43838)),
                                                          cl.LocalMemory(np.long(bytes_43838)),
                                                          cl.LocalMemory(np.long(bytes_43838)),
                                                          np.int64(N_30803),
                                                          np.int64(m_30804),
                                                          np.int64(i32_res_30823),
                                                          np.int64(num_groups_y_42507),
                                                          np.int64(num_whole_tiles_42525),
                                                          np.int64(residual_input_42669),
                                                          np.byte(cond_42670),
                                                          defunc_4_map_res_mem_43811,
                                                          mem_43835, mem_43895)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42509_var,
                                     ((np.long(num_groups_top_42508) * np.long(group_sizze_42505)),),
                                     (np.long(group_sizze_42505),))
          if synchronous:
            sync(self)
        mem_43835 = None
        defunc_3_map_res_mem_43900 = mem_43895
      else:
        mem_43899 = opencl_alloc(self, bytes_43830, "mem_43899")
        if slt64((i32_res_30823 * np.int64(2)), segred_group_sizze_38619):
          segment_sizze_nonzzero_45008 = smax64(np.int64(1), i32_res_30823)
          num_threads_45009 = (num_groups_38620 * segred_group_sizze_38619)
          if ((1 * (np.long(num_groups_38620) * np.long(segred_group_sizze_38619))) != 0):
            self.mainzisegred_small_38573_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38619))),
                                                       np.int64(N_30803),
                                                       np.int64(m_30804),
                                                       np.int64(i32_res_30823),
                                                       np.int64(num_groups_38620),
                                                       mem_43394,
                                                       defunc_4_map_res_mem_43811,
                                                       mem_43899,
                                                       np.int64(segment_sizze_nonzzero_45008))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38573_var,
                                       ((np.long(num_groups_38620) * np.long(segred_group_sizze_38619)),),
                                       (np.long(segred_group_sizze_38619),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45029 = sdiv_up64(num_groups_38620,
                                               smax64(np.int64(1),
                                                      (m_30804 * N_30803)))
          elements_per_thread_45030 = sdiv_up64(i32_res_30823,
                                                (segred_group_sizze_38619 * groups_per_segment_45029))
          virt_num_groups_45031 = (groups_per_segment_45029 * (m_30804 * N_30803))
          num_threads_45032 = (num_groups_38620 * segred_group_sizze_38619)
          threads_per_segment_45033 = (groups_per_segment_45029 * segred_group_sizze_38619)
          group_res_arr_mem_45034 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38619 * virt_num_groups_45031)),
                                                 "group_res_arr_mem_45034")
          mainzicounter_mem_45036 = self.mainzicounter_mem_45036
          if ((1 * (np.long(num_groups_38620) * np.long(segred_group_sizze_38619))) != 0):
            self.mainzisegred_large_38573_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38619))),
                                                       np.int64(N_30803),
                                                       np.int64(i32_res_30823),
                                                       np.int64(num_groups_38620),
                                                       mem_43394,
                                                       defunc_4_map_res_mem_43811,
                                                       mem_43899,
                                                       np.int64(groups_per_segment_45029),
                                                       np.int64(elements_per_thread_45030),
                                                       np.int64(virt_num_groups_45031),
                                                       np.int64(threads_per_segment_45033),
                                                       group_res_arr_mem_45034,
                                                       mainzicounter_mem_45036)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38573_var,
                                       ((np.long(num_groups_38620) * np.long(segred_group_sizze_38619)),),
                                       (np.long(segred_group_sizze_38619),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43900 = mem_43899
      defunc_3_map_res_mem_43905 = defunc_3_map_res_mem_43900
    mem_43394 = None
    defunc_4_map_res_mem_43811 = None
    i_31070 = (N_30803 - np.int64(1))
    x_31071 = sle64(np.int64(0), i_31070)
    y_31072 = slt64(i_31070, N_30803)
    bounds_check_31073 = (x_31071 and y_31072)
    index_certs_31074 = True
    assert bounds_check_31073, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:83:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:77:5-86:25\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_31070,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_30803,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_38749 = sle64(N_30803, max_group_sizze_37486)
    suff_intra_par_38747 = (self.sizes["main.suff_intra_par_25"] <= N_30803)
    intra_suff_and_fits_38750 = (suff_intra_par_38747 and fits_38749)
    segscan_group_sizze_38899 = self.sizes["main.segscan_group_size_38876"]
    max_num_groups_45070 = self.sizes["main.segscan_num_groups_38878"]
    num_groups_38900 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_38603,
                                                            segscan_group_sizze_38899),
                                                  sext_i32_i64(max_num_groups_45070))))
    segmap_group_sizze_38919 = self.sizes["main.segmap_group_size_38867"]
    mem_43908 = opencl_alloc(self, bytes_43830, "mem_43908")
    self.futhark_builtinzhreplicate_f32(mem_43908, (m_30804 * N_30803), np.nan)
    mem_43911 = opencl_alloc(self, bytes_43830, "mem_43911")
    self.futhark_builtinzhreplicate_i32(mem_43911, (m_30804 * N_30803),
                                        np.int32(0))
    segmap_group_sizze_38955 = self.sizes["main.segmap_group_size_38792"]
    bytes_43923 = (np.int64(4) * m_30804)
    bytes_43914 = (np.int64(8) * N_30803)
    bytes_43932 = (np.int64(8) * comparatee_38603)
    local_memory_capacity_45172 = self.max_local_memory
    if (sle64((((bytes_43914 + bytes_43816) + bytes_43816) + bytes_43816),
              sext_i32_i64(local_memory_capacity_45172)) and intra_suff_and_fits_38750):
      mem_43924 = opencl_alloc(self, bytes_43923, "mem_43924")
      mem_43927 = opencl_alloc(self, bytes_43830, "mem_43927")
      mem_43930 = opencl_alloc(self, bytes_43830, "mem_43930")
      if ((1 * (np.long(m_30804) * np.long(N_30803))) != 0):
        self.mainzisegmap_intragroup_38672_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43816)),
                                                        cl.LocalMemory(np.long(bytes_43816)),
                                                        cl.LocalMemory(np.long(bytes_43816)),
                                                        cl.LocalMemory(np.long(bytes_43914)),
                                                        np.int64(N_30803),
                                                        np.int64(N_30805),
                                                        np.int64(i_31070),
                                                        images_mem_43378,
                                                        defunc_3_map_res_mem_43905,
                                                        mem_43924, mem_43927,
                                                        mem_43930)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_38672_var,
                                   ((np.long(m_30804) * np.long(N_30803)),),
                                   (np.long(N_30803),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43942 = mem_43924
      defunc_4_map_res_mem_43943 = mem_43927
      defunc_4_map_res_mem_43944 = mem_43930
    else:
      mem_43934 = opencl_alloc(self, bytes_43932, "mem_43934")
      mem_43937 = opencl_alloc(self, bytes_43830, "mem_43937")
      if slt64(np.int64(0), (m_30804 * N_30803)):
        stage1_max_num_groups_45106 = self.max_group_size
        stage1_num_groups_45107 = smin64(stage1_max_num_groups_45106,
                                         num_groups_38900)
        num_threads_45108 = sext_i64_i32((stage1_num_groups_45107 * segscan_group_sizze_38899))
        if ((1 * (np.long(stage1_num_groups_45107) * np.long(segscan_group_sizze_38899))) != 0):
          self.mainziscan_stage1_38882_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_38899)))),
                                                    np.int64(N_30803),
                                                    np.int64(m_30804),
                                                    np.int64(N_30805),
                                                    images_mem_43378,
                                                    defunc_3_map_res_mem_43905,
                                                    mem_43934, mem_43937,
                                                    np.int32(num_threads_45108))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_38882_var,
                                     ((np.long(stage1_num_groups_45107) * np.long(segscan_group_sizze_38899)),),
                                     (np.long(segscan_group_sizze_38899),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45107))) != 0):
          self.mainziscan_stage2_38882_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_45107)))),
                                                    np.int64(N_30803),
                                                    np.int64(m_30804),
                                                    mem_43934,
                                                    np.int64(stage1_num_groups_45107),
                                                    np.int32(num_threads_45108))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_38882_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45107)),),
                                     (np.long(stage1_num_groups_45107),))
          if synchronous:
            sync(self)
        required_groups_45150 = sext_i64_i32(sdiv_up64((m_30804 * N_30803),
                                                       segscan_group_sizze_38899))
        if ((1 * (np.long(num_groups_38900) * np.long(segscan_group_sizze_38899))) != 0):
          self.mainziscan_stage3_38882_var.set_args(self.global_failure,
                                                    np.int64(N_30803),
                                                    np.int64(m_30804),
                                                    np.int64(num_groups_38900),
                                                    mem_43934,
                                                    np.int32(num_threads_45108),
                                                    np.int32(required_groups_45150))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_38882_var,
                                     ((np.long(num_groups_38900) * np.long(segscan_group_sizze_38899)),),
                                     (np.long(segscan_group_sizze_38899),))
          if synchronous:
            sync(self)
      segmap_usable_groups_38920 = sdiv_up64(m_30804, segmap_group_sizze_38919)
      mem_43940 = opencl_alloc(self, bytes_43923, "mem_43940")
      if ((1 * (np.long(segmap_usable_groups_38920) * np.long(segmap_group_sizze_38919))) != 0):
        self.mainzisegmap_38865_var.set_args(self.global_failure,
                                             np.int64(N_30803),
                                             np.int64(m_30804),
                                             np.int64(i_31070), mem_43934,
                                             mem_43940)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38865_var,
                                   ((np.long(segmap_usable_groups_38920) * np.long(segmap_group_sizze_38919)),),
                                   (np.long(segmap_group_sizze_38919),))
        if synchronous:
          sync(self)
      segmap_usable_groups_38956 = sdiv_up64(comparatee_38603,
                                             segmap_group_sizze_38955)
      if ((1 * (np.long(segmap_usable_groups_38956) * np.long(segmap_group_sizze_38955))) != 0):
        self.mainzisegmap_38789_var.set_args(self.global_failure,
                                             np.int64(N_30803),
                                             np.int64(m_30804), mem_43908,
                                             mem_43911, mem_43934, mem_43937)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38789_var,
                                   ((np.long(segmap_usable_groups_38956) * np.long(segmap_group_sizze_38955)),),
                                   (np.long(segmap_group_sizze_38955),))
        if synchronous:
          sync(self)
      mem_43934 = None
      mem_43937 = None
      defunc_4_map_res_mem_43942 = mem_43940
      defunc_4_map_res_mem_43943 = mem_43908
      defunc_4_map_res_mem_43944 = mem_43911
    defunc_3_map_res_mem_43905 = None
    mem_43908 = None
    mem_43911 = None
    suff_outer_par_39004 = (self.sizes["main.suff_outer_par_29"] <= m_30804)
    fits_39082 = sle64(i32_res_30817, max_group_sizze_37486)
    suff_intra_par_39080 = (self.sizes["main.suff_intra_par_30"] <= i32_res_30817)
    intra_suff_and_fits_39083 = (suff_intra_par_39080 and fits_39082)
    segmap_group_sizze_39047 = self.sizes["main.segmap_group_size_39016"]
    nest_sizze_39170 = (m_30804 * i32_res_30817)
    segred_group_sizze_39171 = self.sizes["main.segred_group_size_39154"]
    max_num_groups_45173 = self.sizes["main.segred_num_groups_39156"]
    num_groups_39172 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39170,
                                                            segred_group_sizze_39171),
                                                  sext_i32_i64(max_num_groups_45173))))
    segred_group_sizze_39185 = self.sizes["main.segred_group_size_39133"]
    max_num_groups_45174 = self.sizes["main.segred_num_groups_39135"]
    num_groups_39186 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39170,
                                                            segred_group_sizze_39185),
                                                  sext_i32_i64(max_num_groups_45174))))
    segmap_group_sizze_39201 = self.sizes["main.segmap_group_size_39118"]
    bytes_43953 = (np.int64(4) * segmap_group_sizze_39047)
    local_memory_capacity_45328 = self.max_local_memory
    if (sle64((bytes_43953 + bytes_43953),
              sext_i32_i64(local_memory_capacity_45328)) and suff_outer_par_39004):
      segmap_usable_groups_39048 = sdiv_up64(m_30804, segmap_group_sizze_39047)
      mem_43947 = opencl_alloc(self, bytes_43395, "mem_43947")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43947, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_30805, m_30804)
      mem_43950 = opencl_alloc(self, bytes_43830, "mem_43950")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43950, np.int64(0),
                                                  defunc_4_map_res_mem_43943,
                                                  np.int64(0), np.int64(1),
                                                  N_30803, m_30804)
      num_whole_tiles_42822 = squot64(i32_res_30817, segmap_group_sizze_39047)
      residual_input_42943 = srem64(i32_res_30817, segmap_group_sizze_39047)
      cond_42944 = (residual_input_42943 == np.int64(0))
      mem_43994 = opencl_alloc(self, bytes_43923, "mem_43994")
      mem_43996 = opencl_alloc(self, bytes_43923, "mem_43996")
      mem_43998 = opencl_alloc(self, bytes_43923, "mem_43998")
      if ((1 * (np.long(segmap_usable_groups_39048) * np.long(segmap_group_sizze_39047))) != 0):
        self.mainzisegmap_intragroup_42814_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43953)),
                                                        cl.LocalMemory(np.long(bytes_43953)),
                                                        np.int64(m_30804),
                                                        np.int32(n_30808),
                                                        np.float32(hfrac_30810),
                                                        np.int64(i32_res_30817),
                                                        np.int32(k2p2_30819),
                                                        np.int64(num_whole_tiles_42822),
                                                        np.int64(residual_input_42943),
                                                        np.byte(cond_42944),
                                                        mem_43947, mem_43950,
                                                        mem_43994, mem_43996,
                                                        mem_43998)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42814_var,
                                   ((np.long(segmap_usable_groups_39048) * np.long(segmap_group_sizze_39047)),),
                                   (np.long(segmap_group_sizze_39047),))
        if synchronous:
          sync(self)
      mem_43947 = None
      mem_43950 = None
      defunc_3_map_res_mem_44022 = mem_43994
      defunc_3_map_res_mem_44023 = mem_43996
      defunc_3_map_res_mem_44024 = mem_43998
    else:
      local_memory_capacity_45327 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_30817) + (np.int32(4) * i32_res_30817)),
                sext_i32_i64(local_memory_capacity_45327)) and intra_suff_and_fits_39083):
        mem_44003 = opencl_alloc(self, bytes_43923, "mem_44003")
        mem_44005 = opencl_alloc(self, bytes_43923, "mem_44005")
        mem_44007 = opencl_alloc(self, bytes_43923, "mem_44007")
        if ((1 * (np.long(m_30804) * np.long(i32_res_30817))) != 0):
          self.mainzisegmap_intragroup_39012_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_30817))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_30817))),
                                                          np.int64(N_30803),
                                                          np.int64(N_30805),
                                                          np.float32(hfrac_30810),
                                                          np.int64(i32_res_30817),
                                                          np.int32(k2p2_30819),
                                                          images_mem_43378,
                                                          defunc_4_map_res_mem_43943,
                                                          mem_44003, mem_44005,
                                                          mem_44007)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_39012_var,
                                     ((np.long(m_30804) * np.long(i32_res_30817)),),
                                     (np.long(i32_res_30817),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44019 = mem_44003
        defunc_3_map_res_mem_44020 = mem_44005
        defunc_3_map_res_mem_44021 = mem_44007
      else:
        mem_44010 = opencl_alloc(self, bytes_43923, "mem_44010")
        if slt64((i32_res_30817 * np.int64(2)), segred_group_sizze_39171):
          segment_sizze_nonzzero_45202 = smax64(np.int64(1), i32_res_30817)
          num_threads_45203 = (num_groups_39172 * segred_group_sizze_39171)
          if ((1 * (np.long(num_groups_39172) * np.long(segred_group_sizze_39171))) != 0):
            self.mainzisegred_small_39160_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39171))),
                                                       np.int64(m_30804),
                                                       np.int64(N_30805),
                                                       np.int64(i32_res_30817),
                                                       np.int64(num_groups_39172),
                                                       images_mem_43378,
                                                       mem_44010,
                                                       np.int64(segment_sizze_nonzzero_45202))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39160_var,
                                       ((np.long(num_groups_39172) * np.long(segred_group_sizze_39171)),),
                                       (np.long(segred_group_sizze_39171),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45223 = sdiv_up64(num_groups_39172,
                                               smax64(np.int64(1), m_30804))
          elements_per_thread_45224 = sdiv_up64(i32_res_30817,
                                                (segred_group_sizze_39171 * groups_per_segment_45223))
          virt_num_groups_45225 = (groups_per_segment_45223 * m_30804)
          num_threads_45226 = (num_groups_39172 * segred_group_sizze_39171)
          threads_per_segment_45227 = (groups_per_segment_45223 * segred_group_sizze_39171)
          group_res_arr_mem_45228 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39171 * virt_num_groups_45225)),
                                                 "group_res_arr_mem_45228")
          mainzicounter_mem_45230 = self.mainzicounter_mem_45230
          if ((1 * (np.long(num_groups_39172) * np.long(segred_group_sizze_39171))) != 0):
            self.mainzisegred_large_39160_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39171))),
                                                       np.int64(N_30805),
                                                       np.int64(i32_res_30817),
                                                       np.int64(num_groups_39172),
                                                       images_mem_43378,
                                                       mem_44010,
                                                       np.int64(groups_per_segment_45223),
                                                       np.int64(elements_per_thread_45224),
                                                       np.int64(virt_num_groups_45225),
                                                       np.int64(threads_per_segment_45227),
                                                       group_res_arr_mem_45228,
                                                       mainzicounter_mem_45230)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39160_var,
                                       ((np.long(num_groups_39172) * np.long(segred_group_sizze_39171)),),
                                       (np.long(segred_group_sizze_39171),))
            if synchronous:
              sync(self)
        mem_44013 = opencl_alloc(self, bytes_43923, "mem_44013")
        if slt64((i32_res_30817 * np.int64(2)), segred_group_sizze_39185):
          segment_sizze_nonzzero_45262 = smax64(np.int64(1), i32_res_30817)
          num_threads_45263 = (num_groups_39186 * segred_group_sizze_39185)
          if ((1 * (np.long(num_groups_39186) * np.long(segred_group_sizze_39185))) != 0):
            self.mainzisegred_small_39139_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39185))),
                                                       np.int64(N_30803),
                                                       np.int64(m_30804),
                                                       np.int64(i32_res_30817),
                                                       np.int64(num_groups_39186),
                                                       defunc_4_map_res_mem_43943,
                                                       mem_44010, mem_44013,
                                                       np.int64(segment_sizze_nonzzero_45262))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39139_var,
                                       ((np.long(num_groups_39186) * np.long(segred_group_sizze_39185)),),
                                       (np.long(segred_group_sizze_39185),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45283 = sdiv_up64(num_groups_39186,
                                               smax64(np.int64(1), m_30804))
          elements_per_thread_45284 = sdiv_up64(i32_res_30817,
                                                (segred_group_sizze_39185 * groups_per_segment_45283))
          virt_num_groups_45285 = (groups_per_segment_45283 * m_30804)
          num_threads_45286 = (num_groups_39186 * segred_group_sizze_39185)
          threads_per_segment_45287 = (groups_per_segment_45283 * segred_group_sizze_39185)
          group_res_arr_mem_45288 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39185 * virt_num_groups_45285)),
                                                 "group_res_arr_mem_45288")
          mainzicounter_mem_45290 = self.mainzicounter_mem_45290
          if ((1 * (np.long(num_groups_39186) * np.long(segred_group_sizze_39185))) != 0):
            self.mainzisegred_large_39139_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39185))),
                                                       np.int64(N_30803),
                                                       np.int64(i32_res_30817),
                                                       np.int64(num_groups_39186),
                                                       defunc_4_map_res_mem_43943,
                                                       mem_44010, mem_44013,
                                                       np.int64(groups_per_segment_45283),
                                                       np.int64(elements_per_thread_45284),
                                                       np.int64(virt_num_groups_45285),
                                                       np.int64(threads_per_segment_45287),
                                                       group_res_arr_mem_45288,
                                                       mainzicounter_mem_45290)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39139_var,
                                       ((np.long(num_groups_39186) * np.long(segred_group_sizze_39185)),),
                                       (np.long(segred_group_sizze_39185),))
            if synchronous:
              sync(self)
        segmap_usable_groups_39202 = sdiv_up64(m_30804,
                                               segmap_group_sizze_39201)
        mem_44016 = opencl_alloc(self, bytes_43923, "mem_44016")
        mem_44018 = opencl_alloc(self, bytes_43923, "mem_44018")
        if ((1 * (np.long(segmap_usable_groups_39202) * np.long(segmap_group_sizze_39201))) != 0):
          self.mainzisegmap_39116_var.set_args(self.global_failure,
                                               np.int64(m_30804),
                                               np.float32(hfrac_30810),
                                               np.int32(k2p2_30819), mem_44010,
                                               mem_44013, mem_44016, mem_44018)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39116_var,
                                     ((np.long(segmap_usable_groups_39202) * np.long(segmap_group_sizze_39201)),),
                                     (np.long(segmap_group_sizze_39201),))
          if synchronous:
            sync(self)
        mem_44013 = None
        defunc_3_map_res_mem_44019 = mem_44016
        defunc_3_map_res_mem_44020 = mem_44010
        defunc_3_map_res_mem_44021 = mem_44018
      defunc_3_map_res_mem_44022 = defunc_3_map_res_mem_44019
      defunc_3_map_res_mem_44023 = defunc_3_map_res_mem_44020
      defunc_3_map_res_mem_44024 = defunc_3_map_res_mem_44021
    segred_group_sizze_39222 = self.sizes["main.segred_group_size_39221"]
    max_num_groups_45329 = self.sizes["main.segred_num_groups_39223"]
    num_groups_39224 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30804,
                                                            segred_group_sizze_39222),
                                                  sext_i32_i64(max_num_groups_45329))))
    mem_44027 = opencl_alloc(self, np.int64(4), "mem_44027")
    mainzicounter_mem_45330 = self.mainzicounter_mem_45330
    group_res_arr_mem_45332 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_39222 * num_groups_39224)),
                                           "group_res_arr_mem_45332")
    num_threads_45334 = (num_groups_39224 * segred_group_sizze_39222)
    if ((1 * (np.long(num_groups_39224) * np.long(segred_group_sizze_39222))) != 0):
      self.mainzisegred_nonseg_39229_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39222))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_30804),
                                                  np.int64(num_groups_39224),
                                                  defunc_3_map_res_mem_44022,
                                                  mem_44027,
                                                  mainzicounter_mem_45330,
                                                  group_res_arr_mem_45332,
                                                  np.int64(num_threads_45334))
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_39229_var,
                                 ((np.long(num_groups_39224) * np.long(segred_group_sizze_39222)),),
                                 (np.long(segred_group_sizze_39222),))
      if synchronous:
        sync(self)
    read_res_45877 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45877, mem_44027,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_31160 = read_res_45877[0]
    mem_44027 = None
    i32_res_31165 = sext_i32_i64(defunc_2_reduce_comm_res_31160)
    bounds_invalid_upwards_31166 = slt64(i32_res_31165, np.int64(0))
    valid_31167 = not(bounds_invalid_upwards_31166)
    range_valid_c_31168 = True
    assert valid_31167, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:111:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:106:17-113:24\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_31165,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_39261 = (self.sizes["main.suff_outer_par_32"] <= m_30804)
    segmap_group_sizze_39284 = self.sizes["main.segmap_group_size_39265"]
    nest_sizze_39327 = (m_30804 * i32_res_31165)
    segred_group_sizze_39328 = self.sizes["main.segred_group_size_39305"]
    max_num_groups_45360 = self.sizes["main.segred_num_groups_39307"]
    num_groups_39329 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39327,
                                                            segred_group_sizze_39328),
                                                  sext_i32_i64(max_num_groups_45360))))
    bytes_44030 = (np.int64(4) * segmap_group_sizze_39284)
    local_memory_capacity_45431 = self.max_local_memory
    if (sle64((bytes_44030 + bytes_44030),
              sext_i32_i64(local_memory_capacity_45431)) and suff_outer_par_39261):
      segmap_usable_groups_39285 = sdiv_up64(m_30804, segmap_group_sizze_39284)
      num_whole_tiles_43066 = squot64(i32_res_31165, segmap_group_sizze_39284)
      residual_input_43165 = srem64(i32_res_31165, segmap_group_sizze_39284)
      cond_43166 = (residual_input_43165 == np.int64(0))
      mem_44069 = opencl_alloc(self, bytes_43923, "mem_44069")
      if ((1 * (np.long(segmap_usable_groups_39285) * np.long(segmap_group_sizze_39284))) != 0):
        self.mainzisegmap_intragroup_43046_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_44030)),
                                                        cl.LocalMemory(np.long(bytes_44030)),
                                                        np.int64(N_30803),
                                                        np.int64(m_30804),
                                                        np.int64(i32_res_31165),
                                                        np.int64(num_whole_tiles_43066),
                                                        np.int64(residual_input_43165),
                                                        np.byte(cond_43166),
                                                        defunc_4_map_res_mem_43943,
                                                        defunc_3_map_res_mem_44022,
                                                        defunc_3_map_res_mem_44023,
                                                        mem_44069)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_43046_var,
                                   ((np.long(segmap_usable_groups_39285) * np.long(segmap_group_sizze_39284)),),
                                   (np.long(segmap_group_sizze_39284),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44073 = mem_44069
    else:
      mem_44072 = opencl_alloc(self, bytes_43923, "mem_44072")
      if slt64((i32_res_31165 * np.int64(2)), segred_group_sizze_39328):
        segment_sizze_nonzzero_45371 = smax64(np.int64(1), i32_res_31165)
        num_threads_45372 = (num_groups_39329 * segred_group_sizze_39328)
        if ((1 * (np.long(num_groups_39329) * np.long(segred_group_sizze_39328))) != 0):
          self.mainzisegred_small_39311_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39328))),
                                                     np.int64(N_30803),
                                                     np.int64(m_30804),
                                                     np.int64(i32_res_31165),
                                                     np.int64(num_groups_39329),
                                                     defunc_4_map_res_mem_43943,
                                                     defunc_3_map_res_mem_44022,
                                                     defunc_3_map_res_mem_44023,
                                                     mem_44072,
                                                     np.int64(segment_sizze_nonzzero_45371))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_39311_var,
                                     ((np.long(num_groups_39329) * np.long(segred_group_sizze_39328)),),
                                     (np.long(segred_group_sizze_39328),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45392 = sdiv_up64(num_groups_39329,
                                             smax64(np.int64(1), m_30804))
        elements_per_thread_45393 = sdiv_up64(i32_res_31165,
                                              (segred_group_sizze_39328 * groups_per_segment_45392))
        virt_num_groups_45394 = (groups_per_segment_45392 * m_30804)
        num_threads_45395 = (num_groups_39329 * segred_group_sizze_39328)
        threads_per_segment_45396 = (groups_per_segment_45392 * segred_group_sizze_39328)
        group_res_arr_mem_45397 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_39328 * virt_num_groups_45394)),
                                               "group_res_arr_mem_45397")
        mainzicounter_mem_45399 = self.mainzicounter_mem_45399
        if ((1 * (np.long(num_groups_39329) * np.long(segred_group_sizze_39328))) != 0):
          self.mainzisegred_large_39311_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39328))),
                                                     np.int64(N_30803),
                                                     np.int64(i32_res_31165),
                                                     np.int64(num_groups_39329),
                                                     defunc_4_map_res_mem_43943,
                                                     defunc_3_map_res_mem_44022,
                                                     defunc_3_map_res_mem_44023,
                                                     mem_44072,
                                                     np.int64(groups_per_segment_45392),
                                                     np.int64(elements_per_thread_45393),
                                                     np.int64(virt_num_groups_45394),
                                                     np.int64(threads_per_segment_45396),
                                                     group_res_arr_mem_45397,
                                                     mainzicounter_mem_45399)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_39311_var,
                                     ((np.long(num_groups_39329) * np.long(segred_group_sizze_39328)),),
                                     (np.long(segred_group_sizze_39328),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44073 = mem_44072
    iota32_arg_31190 = (N_30803 - i32_res_30817)
    bounds_invalid_upwards_31191 = slt64(iota32_arg_31190, np.int64(0))
    valid_31192 = not(bounds_invalid_upwards_31191)
    range_valid_c_31193 = True
    assert valid_31192, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:119:22-35\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_31190,
                                                                                                                                                                                                                                      " is invalid."))
    x_31195 = (np.int32(1) + n_30808)
    i_31196 = (n_30808 - np.int32(1))
    i_31197 = sext_i32_i64(i_31196)
    x_31198 = sle64(np.int64(0), i_31197)
    y_31199 = slt64(i_31197, N_30803)
    bounds_check_31200 = (x_31198 and y_31199)
    index_certs_31201 = True
    assert bounds_check_31200, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:117:64-84\n   #1  bfastfinal.fut:115:15-119:36\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                 i_31197,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_30803,
                                                                                                                                                                                                                 "]."))
    read_res_45879 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45879, mappingindices_mem_43377,
                    device_offset=(np.long(i_31197) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_31202 = read_res_45879[0]
    i32_res_31203 = sitofp_i32_f32(r32_arg_31202)
    range_valid_c_31204 = True
    assert valid_31192, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:131:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_31190,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_39406 = self.sizes["main.segmap_group_size_39389"]
    segmap_usable_groups_39407 = sdiv_up64(iota32_arg_31190,
                                           segmap_group_sizze_39406)
    bytes_44075 = (np.int64(4) * iota32_arg_31190)
    mem_44076 = opencl_alloc(self, bytes_44075, "mem_44076")
    mem_44078 = opencl_alloc(self, bytes_44075, "mem_44078")
    if ((1 * (np.long(segmap_usable_groups_39407) * np.long(segmap_group_sizze_39406))) != 0):
      self.mainzisegmap_39387_var.set_args(self.global_failure,
                                           np.float32(lam_30811),
                                           np.int64(iota32_arg_31190),
                                           np.int32(x_31195),
                                           np.float32(i32_res_31203),
                                           mappingindices_mem_43377, mem_44076,
                                           mem_44078)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39387_var,
                                 ((np.long(segmap_usable_groups_39407) * np.long(segmap_group_sizze_39406)),),
                                 (np.long(segmap_group_sizze_39406),))
      if synchronous:
        sync(self)
    mem_44076 = None
    cond_31220 = (iota32_arg_31190 == np.int64(0))
    if cond_31220:
      iters_31221 = np.int32(0)
    else:
      iters_31221 = np.int32(16)
    loop_nonempty_31222 = slt32(np.int32(0), iters_31221)
    i_31223 = (iota32_arg_31190 - np.int64(1))
    x_31224 = sle64(np.int64(0), i_31223)
    y_31225 = slt64(i_31223, iota32_arg_31190)
    bounds_check_31226 = (x_31224 and y_31225)
    loop_not_taken_31227 = not(loop_nonempty_31222)
    protect_assert_disj_31228 = (bounds_check_31226 or loop_not_taken_31227)
    index_certs_31229 = True
    assert protect_assert_disj_31228, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  lib/github.com/diku-dk/sorts/radix_sort.fut:25:24-35\n   #2  lib/github.com/diku-dk/sorts/radix_sort.fut:53:31-62\n   #3  lib/github.com/diku-dk/sorts/radix_sort.fut:104:6-36\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:146:29-151:72\n   #6  /prelude/functional.fut:9:42-44\n   #7  bfastfinal.fut:124:50-167:9\n   #8  bfastfinal.fut:184:5-58\n   #9  bfastfinal.fut:179:1-185:32\n" % ("Index [",
i_31223,
out of bounds for array of shape [",
iota32_arg_31190,

    suff_outer_par_39424 = (self.sizes["main.suff_outer_par_34"] <= m_30804)
    fits_39938 = sle64(iota32_arg_31190, max_group_sizze_37486)
    suff_intra_par_39936 = (self.sizes["main.suff_intra_par_35"] <= iota32_arg_31190)
    intra_suff_and_fits_39939 = (suff_intra_par_39936 and fits_39938)
    segmap_group_sizze_39698 = self.sizes["main.segmap_group_size_39462"]
    segmap_group_sizze_40969 = self.sizes["main.segmap_group_size_40949"]
    max_num_groups_45437 = self.sizes["main.segmap_num_groups_40951"]
    num_groups_40970 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30804,
                                                            segmap_group_sizze_40969),
                                                  sext_i32_i64(max_num_groups_45437))))
    nest_sizze_40991 = (m_30804 * iota32_arg_31190)
    segscan_group_sizze_40992 = self.sizes["main.segscan_group_size_40908"]
    max_num_groups_45438 = self.sizes["main.segscan_num_groups_40910"]
    num_groups_40993 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40991,
                                                            segscan_group_sizze_40992),
                                                  sext_i32_i64(max_num_groups_45438))))
    segred_group_sizze_41030 = self.sizes["main.segred_group_size_40854"]
    max_num_groups_45439 = self.sizes["main.segred_num_groups_40856"]
    num_groups_41031 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40991,
                                                            segred_group_sizze_41030),
                                                  sext_i32_i64(max_num_groups_45439))))
    segmap_group_sizze_41069 = self.sizes["main.segmap_group_size_40823"]
    segmap_group_sizze_41104 = self.sizes["main.segmap_group_size_40762"]
    suff_intra_par_41145 = (self.sizes["main.suff_intra_par_37"] <= iota32_arg_31190)
    intra_suff_and_fits_41146 = (fits_39938 and suff_intra_par_41145)
    segscan_group_sizze_41229 = self.sizes["main.segscan_group_size_40562"]
    max_num_groups_45440 = self.sizes["main.segscan_num_groups_40564"]
    num_groups_41230 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40991,
                                                            segscan_group_sizze_41229),
                                                  sext_i32_i64(max_num_groups_45440))))
    segmap_group_sizze_41298 = self.sizes["main.segmap_group_size_40512"]
    segmap_group_sizze_41335 = self.sizes["main.segmap_group_size_40182"]
    segmap_usable_groups_41299 = sdiv_up_safe64(nest_sizze_40991,
                                                segmap_group_sizze_41298)
    bytes_44099 = (np.int64(8) * iota32_arg_31190)
    bytes_44242 = (np.int64(4) * nest_sizze_40991)
    bytes_44295 = (np.int64(8) * nest_sizze_40991)
    double_buffer_sizze_44481 = (np.int64(4) * iota32_arg_31190)
    double_buffer_sizze_44485 = (np.int64(4) * iota32_arg_31190)
    local_memory_capacity_45825 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45825)) and suff_outer_par_39424):
      segmap_usable_groups_39699 = sdiv_up64(m_30804, segmap_group_sizze_39698)
      mem_44189 = opencl_alloc(self, bytes_43923, "mem_44189")
      mem_44191 = opencl_alloc(self, bytes_43923, "mem_44191")
      mem_44193 = opencl_alloc(self, bytes_43923, "mem_44193")
      num_threads_44597 = (segmap_group_sizze_39698 * segmap_usable_groups_39699)
      total_sizze_44598 = (bytes_44075 * num_threads_44597)
      mem_44081 = opencl_alloc(self, total_sizze_44598, "mem_44081")
      total_sizze_44599 = (bytes_44099 * num_threads_44597)
      mem_44100 = opencl_alloc(self, total_sizze_44599, "mem_44100")
      total_sizze_44600 = (bytes_44099 * num_threads_44597)
      mem_44102 = opencl_alloc(self, total_sizze_44600, "mem_44102")
      total_sizze_44601 = (bytes_44099 * num_threads_44597)
      mem_44104 = opencl_alloc(self, total_sizze_44601, "mem_44104")
      total_sizze_44602 = (bytes_44099 * num_threads_44597)
      mem_44106 = opencl_alloc(self, total_sizze_44602, "mem_44106")
      total_sizze_44603 = (bytes_44075 * num_threads_44597)
      mem_44108 = opencl_alloc(self, total_sizze_44603, "mem_44108")
      total_sizze_44604 = (bytes_44075 * num_threads_44597)
      mem_44170 = opencl_alloc(self, total_sizze_44604, "mem_44170")
      total_sizze_44605 = (double_buffer_sizze_44481 * num_threads_44597)
      double_buffer_mem_44479 = opencl_alloc(self, total_sizze_44605,
                                             "double_buffer_mem_44479")
      if ((1 * (np.long(segmap_usable_groups_39699) * np.long(segmap_group_sizze_39698))) != 0):
        self.mainzisegmap_39460_var.set_args(self.global_failure,
                                             self.failure_is_an_option,
                                             self.global_failure_args,
                                             np.int64(N_30803),
                                             np.int64(m_30804),
                                             np.int32(n_30808),
                                             np.int64(iota32_arg_31190),
                                             np.int32(iters_31221),
                                             np.int64(i_31223),
                                             np.int64(segmap_usable_groups_39699),
                                             defunc_4_map_res_mem_43942,
                                             defunc_4_map_res_mem_43943,
                                             defunc_4_map_res_mem_43944,
                                             defunc_3_map_res_mem_44022,
                                             defunc_3_map_res_mem_44023,
                                             defunc_3_map_res_mem_44024,
                                             defunc_0_f_res_mem_44073,
                                             mem_44078, mem_44081, mem_44100,
                                             mem_44102, mem_44104, mem_44106,
                                             mem_44108, mem_44170, mem_44189,
                                             mem_44191, mem_44193,
                                             double_buffer_mem_44479)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39460_var,
                                   ((np.long(segmap_usable_groups_39699) * np.long(segmap_group_sizze_39698)),),
                                   (np.long(segmap_group_sizze_39698),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_44081 = None
      mem_44100 = None
      mem_44102 = None
      mem_44104 = None
      mem_44106 = None
      mem_44108 = None
      mem_44170 = None
      double_buffer_mem_44479 = None
      defunc_0_f_res_mem_44333 = mem_44189
      defunc_0_f_res_mem_44334 = mem_44191
      defunc_0_f_res_mem_44335 = mem_44193
    else:
      local_memory_capacity_45824 = self.max_local_memory
      if (sle64((((((((((((bytes_44075 + (np.int32(1) * iota32_arg_31190)) + (np.int32(4) * iota32_arg_31190)) + (np.int32(4) * iota32_arg_31190)) + bytes_44075) + bytes_44099) + bytes_44099) + bytes_44099) + bytes_44099) + bytes_44075) + double_buffer_sizze_44485) + bytes_44075),
                sext_i32_i64(local_memory_capacity_45824)) and intra_suff_and_fits_39939):
        mem_44231 = opencl_alloc(self, bytes_43923, "mem_44231")
        mem_44233 = opencl_alloc(self, bytes_43923, "mem_44233")
        mem_44235 = opencl_alloc(self, bytes_43923, "mem_44235")
        if ((1 * (np.long(m_30804) * np.long(iota32_arg_31190))) != 0):
          self.mainzisegmap_intragroup_39458_var.set_args(self.global_failure,
                                                          self.failure_is_an_option,
                                                          self.global_failure_args,
                                                          cl.LocalMemory(np.long(bytes_44075)),
                                                          cl.LocalMemory(np.long(double_buffer_sizze_44485)),
                                                          cl.LocalMemory(np.long(bytes_44075)),
                                                          cl.LocalMemory(np.long(bytes_44099)),
                                                          cl.LocalMemory(np.long(bytes_44099)),
                                                          cl.LocalMemory(np.long(bytes_44099)),
                                                          cl.LocalMemory(np.long(bytes_44099)),
                                                          cl.LocalMemory(np.long(bytes_44075)),
                                                          cl.LocalMemory(np.long((np.int32(4) * iota32_arg_31190))),
                                                          cl.LocalMemory(np.long((np.int32(4) * iota32_arg_31190))),
                                                          cl.LocalMemory(np.long((np.int32(1) * iota32_arg_31190))),
                                                          cl.LocalMemory(np.long(bytes_44075)),
                                                          np.int64(N_30803),
                                                          np.int32(n_30808),
                                                          np.int64(iota32_arg_31190),
                                                          np.int32(iters_31221),
                                                          np.int64(i_31223),
                                                          defunc_4_map_res_mem_43942,
                                                          defunc_4_map_res_mem_43943,
                                                          defunc_4_map_res_mem_43944,
                                                          defunc_3_map_res_mem_44022,
                                                          defunc_3_map_res_mem_44023,
                                                          defunc_3_map_res_mem_44024,
                                                          defunc_0_f_res_mem_44073,
                                                          mem_44078, mem_44231,
                                                          mem_44233, mem_44235)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_39458_var,
                                     ((np.long(m_30804) * np.long(iota32_arg_31190)),),
                                     (np.long(iota32_arg_31190),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_0_f_res_mem_44330 = mem_44231
        defunc_0_f_res_mem_44331 = mem_44233
        defunc_0_f_res_mem_44332 = mem_44235
      else:
        mem_44238 = opencl_alloc(self, bytes_43923, "mem_44238")
        mem_44240 = opencl_alloc(self, bytes_43923, "mem_44240")
        if ((1 * (np.long(num_groups_40970) * np.long(segmap_group_sizze_40969))) != 0):
          self.mainzisegmap_40947_var.set_args(self.global_failure,
                                               np.int64(m_30804),
                                               np.int64(num_groups_40970),
                                               defunc_4_map_res_mem_43942,
                                               defunc_3_map_res_mem_44023,
                                               defunc_3_map_res_mem_44024,
                                               mem_44238, mem_44240)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40947_var,
                                     ((np.long(num_groups_40970) * np.long(segmap_group_sizze_40969)),),
                                     (np.long(segmap_group_sizze_40969),))
          if synchronous:
            sync(self)
        mem_44244 = opencl_alloc(self, bytes_44242, "mem_44244")
        if slt64(np.int64(0), (m_30804 * iota32_arg_31190)):
          stage1_max_num_groups_45523 = self.max_group_size
          stage1_num_groups_45524 = smin64(stage1_max_num_groups_45523,
                                           num_groups_40993)
          num_threads_45525 = sext_i64_i32((stage1_num_groups_45524 * segscan_group_sizze_40992))
          if ((1 * (np.long(stage1_num_groups_45524) * np.long(segscan_group_sizze_40992))) != 0):
            self.mainziscan_stage1_40914_var.set_args(self.global_failure,
                                                      cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                    (np.int32(4) * segscan_group_sizze_40992)))),
                                                      np.int64(N_30803),
                                                      np.int64(m_30804),
                                                      np.int64(iota32_arg_31190),
                                                      defunc_4_map_res_mem_43943,
                                                      defunc_3_map_res_mem_44022,
                                                      defunc_3_map_res_mem_44023,
                                                      defunc_0_f_res_mem_44073,
                                                      mem_44240, mem_44244,
                                                      np.int32(num_threads_45525))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainziscan_stage1_40914_var,
                                       ((np.long(stage1_num_groups_45524) * np.long(segscan_group_sizze_40992)),),
                                       (np.long(segscan_group_sizze_40992),))
            if synchronous:
              sync(self)
          if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45524))) != 0):
            self.mainziscan_stage2_40914_var.set_args(self.global_failure,
                                                      cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                    (np.int32(4) * stage1_num_groups_45524)))),
                                                      np.int64(m_30804),
                                                      np.int64(iota32_arg_31190),
                                                      mem_44244,
                                                      np.int64(stage1_num_groups_45524),
                                                      np.int32(num_threads_45525))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainziscan_stage2_40914_var,
                                       ((np.long(np.int64(1)) * np.long(stage1_num_groups_45524)),),
                                       (np.long(stage1_num_groups_45524),))
            if synchronous:
              sync(self)
          required_groups_45567 = sext_i64_i32(sdiv_up64((m_30804 * iota32_arg_31190),
                                                         segscan_group_sizze_40992))
          if ((1 * (np.long(num_groups_40993) * np.long(segscan_group_sizze_40992))) != 0):
            self.mainziscan_stage3_40914_var.set_args(self.global_failure,
                                                      np.int64(m_30804),
                                                      np.int64(iota32_arg_31190),
                                                      np.int64(num_groups_40993),
                                                      mem_44244,
                                                      np.int32(num_threads_45525),
                                                      np.int32(required_groups_45567))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainziscan_stage3_40914_var,
                                       ((np.long(num_groups_40993) * np.long(segscan_group_sizze_40992)),),
                                       (np.long(segscan_group_sizze_40992),))
            if synchronous:
              sync(self)
        mem_44247 = opencl_alloc(self, m_30804, "mem_44247")
        mem_44249 = opencl_alloc(self, bytes_43923, "mem_44249")
        mem_44251 = opencl_alloc(self, bytes_43923, "mem_44251")
        if slt64((iota32_arg_31190 * np.int64(2)), segred_group_sizze_41030):
          segment_sizze_nonzzero_45579 = smax64(np.int64(1), iota32_arg_31190)
          num_threads_45580 = (num_groups_41031 * segred_group_sizze_41030)
          if ((1 * (np.long(num_groups_41031) * np.long(segred_group_sizze_41030))) != 0):
            self.mainzisegred_small_40860_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41030))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41030))),
                                                       cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41030))),
                                                       np.int64(m_30804),
                                                       np.int64(iota32_arg_31190),
                                                       np.int64(num_groups_41031),
                                                       mem_44078, mem_44238,
                                                       mem_44240, mem_44244,
                                                       mem_44247, mem_44249,
                                                       mem_44251,
                                                       np.int64(segment_sizze_nonzzero_45579))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40860_var,
                                       ((np.long(num_groups_41031) * np.long(segred_group_sizze_41030)),),
                                       (np.long(segred_group_sizze_41030),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45615 = sdiv_up64(num_groups_41031,
                                               smax64(np.int64(1), m_30804))
          elements_per_thread_45616 = sdiv_up64(iota32_arg_31190,
                                                (segred_group_sizze_41030 * groups_per_segment_45615))
          virt_num_groups_45617 = (groups_per_segment_45615 * m_30804)
          num_threads_45618 = (num_groups_41031 * segred_group_sizze_41030)
          threads_per_segment_45619 = (groups_per_segment_45615 * segred_group_sizze_41030)
          group_res_arr_mem_45620 = opencl_alloc(self,
                                                 (np.int32(1) * (segred_group_sizze_41030 * virt_num_groups_45617)),
                                                 "group_res_arr_mem_45620")
          group_res_arr_mem_45622 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_41030 * virt_num_groups_45617)),
                                                 "group_res_arr_mem_45622")
          group_res_arr_mem_45624 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_41030 * virt_num_groups_45617)),
                                                 "group_res_arr_mem_45624")
          mainzicounter_mem_45626 = self.mainzicounter_mem_45626
          if ((1 * (np.long(num_groups_41031) * np.long(segred_group_sizze_41030))) != 0):
            self.mainzisegred_large_40860_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41030))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41030))),
                                                       cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41030))),
                                                       np.int64(iota32_arg_31190),
                                                       np.int64(num_groups_41031),
                                                       mem_44078, mem_44238,
                                                       mem_44240, mem_44244,
                                                       mem_44247, mem_44249,
                                                       mem_44251,
                                                       np.int64(groups_per_segment_45615),
                                                       np.int64(elements_per_thread_45616),
                                                       np.int64(virt_num_groups_45617),
                                                       group_res_arr_mem_45620,
                                                       group_res_arr_mem_45622,
                                                       group_res_arr_mem_45624,
                                                       mainzicounter_mem_45626)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40860_var,
                                       ((np.long(num_groups_41031) * np.long(segred_group_sizze_41030)),),
                                       (np.long(segred_group_sizze_41030),))
            if synchronous:
              sync(self)
        mem_44238 = None
        mem_44244 = None
        segmap_usable_groups_41070 = sdiv_up64(m_30804,
                                               segmap_group_sizze_41069)
        mem_44254 = opencl_alloc(self, m_30804, "mem_44254")
        mem_44256 = opencl_alloc(self, bytes_43923, "mem_44256")
        mem_44258 = opencl_alloc(self, bytes_43923, "mem_44258")
        if ((1 * (np.long(segmap_usable_groups_41070) * np.long(segmap_group_sizze_41069))) != 0):
          self.mainzisegmap_40821_var.set_args(self.global_failure,
                                               np.int64(m_30804), mem_44240,
                                               mem_44247, mem_44249, mem_44251,
                                               mem_44254, mem_44256, mem_44258)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40821_var,
                                     ((np.long(segmap_usable_groups_41070) * np.long(segmap_group_sizze_41069)),),
                                     (np.long(segmap_group_sizze_41069),))
          if synchronous:
            sync(self)
        mem_44247 = None
        mem_44249 = None
        mem_44251 = None
        segmap_usable_groups_41105 = sdiv_up64(nest_sizze_40991,
                                               segmap_group_sizze_41104)
        mem_44262 = opencl_alloc(self, bytes_44242, "mem_44262")
        if ((1 * (np.long(segmap_usable_groups_41105) * np.long(segmap_group_sizze_41104))) != 0):
          self.mainzisegmap_40759_var.set_args(self.global_failure,
                                               self.failure_is_an_option,
                                               self.global_failure_args,
                                               np.int64(N_30803),
                                               np.int64(m_30804),
                                               np.int64(iota32_arg_31190),
                                               defunc_4_map_res_mem_43943,
                                               defunc_3_map_res_mem_44023,
                                               mem_44240, mem_44262)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40759_var,
                                     ((np.long(segmap_usable_groups_41105) * np.long(segmap_group_sizze_41104)),),
                                     (np.long(segmap_group_sizze_41104),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_param_44270 = mem_44262
        i_41132 = np.int32(0)
        one_45882 = np.int32(1)
        for counter_45881 in range(iters_31221):
          defunc_2_radix_sort_step_arg_41134 = (np.int32(2) * i_41132)
          defunc_0_get_bit_arg_41135 = (np.int32(1) + defunc_2_radix_sort_step_arg_41134)
          cond_f_res_41136 = (defunc_0_get_bit_arg_41135 == np.int32(31))
          cond_f_res_41137 = (defunc_2_radix_sort_step_arg_41134 == np.int32(31))
          local_memory_capacity_45818 = self.max_local_memory
          if (sle64((((((bytes_44099 + bytes_44099) + bytes_44099) + bytes_44099) + bytes_44075) + bytes_44075),
                    sext_i32_i64(local_memory_capacity_45818)) and intra_suff_and_fits_41146):
            mem_44275 = opencl_alloc(self, bytes_44242, "mem_44275")
            self.futhark_builtinzhgpu_map_transpose_f32(mem_44275, np.int64(0),
                                                        mem_param_44270,
                                                        np.int64(0),
                                                        np.int64(1),
                                                        iota32_arg_31190,
                                                        m_30804)
            mem_44293 = opencl_alloc(self, bytes_44242, "mem_44293")
            if ((1 * (np.long(m_30804) * np.long(iota32_arg_31190))) != 0):
              self.mainzisegmap_intragroup_40244_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(bytes_44075)),
                                                              cl.LocalMemory(np.long(bytes_44075)),
                                                              cl.LocalMemory(np.long(bytes_44099)),
                                                              cl.LocalMemory(np.long(bytes_44099)),
                                                              cl.LocalMemory(np.long(bytes_44099)),
                                                              cl.LocalMemory(np.long(bytes_44099)),
                                                              np.int64(m_30804),
                                                              np.int64(iota32_arg_31190),
                                                              np.int64(i_31223),
                                                              np.int32(defunc_2_radix_sort_step_arg_41134),
                                                              np.int32(defunc_0_get_bit_arg_41135),
                                                              np.byte(cond_f_res_41136),
                                                              np.byte(cond_f_res_41137),
                                                              mem_param_44270,
                                                              mem_44275,
                                                              mem_44293)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegmap_intragroup_40244_var,
                                         ((np.long(m_30804) * np.long(iota32_arg_31190)),),
                                         (np.long(iota32_arg_31190),))
              if synchronous:
                sync(self)
            mem_44275 = None
            defunc_2_radix_sort_res_mem_44314 = mem_44293
          else:
            mem_44297 = opencl_alloc(self, bytes_44295, "mem_44297")
            mem_44300 = opencl_alloc(self, bytes_44295, "mem_44300")
            mem_44303 = opencl_alloc(self, bytes_44295, "mem_44303")
            mem_44306 = opencl_alloc(self, bytes_44295, "mem_44306")
            mem_44309 = opencl_alloc(self, bytes_44242, "mem_44309")
            if slt64(np.int64(0), (m_30804 * iota32_arg_31190)):
              stage1_max_num_groups_45718 = self.max_group_size
              stage1_num_groups_45719 = smin64(stage1_max_num_groups_45718,
                                               num_groups_41230)
              num_threads_45720 = sext_i64_i32((stage1_num_groups_45719 * segscan_group_sizze_41229))
              if ((1 * (np.long(stage1_num_groups_45719) * np.long(segscan_group_sizze_41229))) != 0):
                self.mainziscan_stage1_40568_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41229)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41229)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41229)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41229)))),
                                                          np.int64(m_30804),
                                                          np.int64(iota32_arg_31190),
                                                          np.int32(defunc_2_radix_sort_step_arg_41134),
                                                          np.int32(defunc_0_get_bit_arg_41135),
                                                          np.byte(cond_f_res_41136),
                                                          np.byte(cond_f_res_41137),
                                                          mem_param_44270,
                                                          mem_44297, mem_44300,
                                                          mem_44303, mem_44306,
                                                          mem_44309,
                                                          np.int32(num_threads_45720))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainziscan_stage1_40568_var,
                                           ((np.long(stage1_num_groups_45719) * np.long(segscan_group_sizze_41229)),),
                                           (np.long(segscan_group_sizze_41229),))
                if synchronous:
                  sync(self)
              if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45719))) != 0):
                self.mainziscan_stage2_40568_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_45719)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_45719)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_45719)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_45719)))),
                                                          np.int64(m_30804),
                                                          np.int64(iota32_arg_31190),
                                                          mem_44297, mem_44300,
                                                          mem_44303, mem_44306,
                                                          np.int64(stage1_num_groups_45719),
                                                          np.int32(num_threads_45720))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainziscan_stage2_40568_var,
                                           ((np.long(np.int64(1)) * np.long(stage1_num_groups_45719)),),
                                           (np.long(stage1_num_groups_45719),))
                if synchronous:
                  sync(self)
              required_groups_45801 = sext_i64_i32(sdiv_up64((m_30804 * iota32_arg_31190),
                                                             segscan_group_sizze_41229))
              if ((1 * (np.long(num_groups_41230) * np.long(segscan_group_sizze_41229))) != 0):
                self.mainziscan_stage3_40568_var.set_args(self.global_failure,
                                                          np.int64(m_30804),
                                                          np.int64(iota32_arg_31190),
                                                          np.int64(num_groups_41230),
                                                          mem_44297, mem_44300,
                                                          mem_44303, mem_44306,
                                                          np.int32(num_threads_45720),
                                                          np.int32(required_groups_45801))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainziscan_stage3_40568_var,
                                           ((np.long(num_groups_41230) * np.long(segscan_group_sizze_41229)),),
                                           (np.long(segscan_group_sizze_41229),))
                if synchronous:
                  sync(self)
            mem_44312 = opencl_alloc(self, bytes_44242, "mem_44312")
            if (((m_30804 * iota32_arg_31190) * np.int32(4)) != 0):
              cl.enqueue_copy(self.queue, mem_44312, mem_param_44270,
                              dest_offset=np.long(np.int64(0)),
                              src_offset=np.long(np.int64(0)),
                              byte_count=np.long(((m_30804 * iota32_arg_31190) * np.int32(4))))
            if synchronous:
              sync(self)
            if ((1 * (np.long(segmap_usable_groups_41299) * np.long(segmap_group_sizze_41298))) != 0):
              self.mainzisegmap_40509_var.set_args(self.global_failure,
                                                   np.int64(m_30804),
                                                   np.int64(iota32_arg_31190),
                                                   np.int64(i_31223),
                                                   mem_param_44270, mem_44297,
                                                   mem_44300, mem_44303,
                                                   mem_44306, mem_44309,
                                                   mem_44312)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegmap_40509_var,
                                         ((np.long(segmap_usable_groups_41299) * np.long(segmap_group_sizze_41298)),),
                                         (np.long(segmap_group_sizze_41298),))
              if synchronous:
                sync(self)
            mem_44297 = None
            mem_44300 = None
            mem_44303 = None
            mem_44306 = None
            mem_44309 = None
            defunc_2_radix_sort_res_mem_44314 = mem_44312
          mem_param_tmp_45687 = defunc_2_radix_sort_res_mem_44314
          mem_param_44270 = mem_param_tmp_45687
          i_41132 += one_45882
        defunc_2_radix_sort_res_r_mem_44324 = mem_param_44270
        mem_44262 = None
        segmap_usable_groups_41336 = sdiv_up64(m_30804,
                                               segmap_group_sizze_41335)
        mem_44327 = opencl_alloc(self, bytes_43923, "mem_44327")
        mem_44329 = opencl_alloc(self, bytes_43923, "mem_44329")
        if ((1 * (np.long(segmap_usable_groups_41336) * np.long(segmap_group_sizze_41335))) != 0):
          self.mainzisegmap_40180_var.set_args(self.global_failure,
                                               self.failure_is_an_option,
                                               self.global_failure_args,
                                               np.int64(N_30803),
                                               np.int64(m_30804),
                                               np.int32(n_30808),
                                               np.int64(iota32_arg_31190),
                                               defunc_4_map_res_mem_43942,
                                               defunc_4_map_res_mem_43944,
                                               defunc_3_map_res_mem_44023,
                                               mem_44240, mem_44254, mem_44256,
                                               defunc_2_radix_sort_res_r_mem_44324,
                                               mem_44327, mem_44329)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40180_var,
                                     ((np.long(segmap_usable_groups_41336) * np.long(segmap_group_sizze_41335)),),
                                     (np.long(segmap_group_sizze_41335),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_44240 = None
        mem_44254 = None
        mem_44256 = None
        defunc_2_radix_sort_res_r_mem_44324 = None
        defunc_0_f_res_mem_44330 = mem_44327
        defunc_0_f_res_mem_44331 = mem_44258
        defunc_0_f_res_mem_44332 = mem_44329
      defunc_0_f_res_mem_44333 = defunc_0_f_res_mem_44330
      defunc_0_f_res_mem_44334 = defunc_0_f_res_mem_44331
      defunc_0_f_res_mem_44335 = defunc_0_f_res_mem_44332
    defunc_4_map_res_mem_43942 = None
    defunc_4_map_res_mem_43943 = None
    defunc_4_map_res_mem_43944 = None
    defunc_3_map_res_mem_44022 = None
    defunc_3_map_res_mem_44023 = None
    defunc_3_map_res_mem_44024 = None
    defunc_0_f_res_mem_44073 = None
    mem_44078 = None
    out_arrsizze_44617 = m_30804
    out_arrsizze_44619 = m_30804
    out_arrsizze_44621 = m_30804
    out_mem_44616 = defunc_0_f_res_mem_44333
    out_mem_44618 = defunc_0_f_res_mem_44334
    out_mem_44620 = defunc_0_f_res_mem_44335
    return (out_mem_44616, out_arrsizze_44617, out_mem_44618,
            out_arrsizze_44619, out_mem_44620, out_arrsizze_44621)
  def futhark_mainDetailed(self, mappingindices_mem_43377, images_mem_43378,
                           N_30056, m_30057, N_30058, trend_30059, k_30060,
                           n_30061, freq_30062, hfrac_30063, lam_30064):
    dim_match_30067 = (N_30056 == N_30058)
    empty_or_match_cert_30068 = True
    assert dim_match_30067, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:173:1-177:56\n" % ("function arguments of wrong shape",))
    i32_res_30070 = sext_i32_i64(n_30061)
    x_30071 = (np.int32(2) * k_30060)
    k2p2_30072 = (np.int32(2) + x_30071)
    cond_30073 = slt32(np.int32(0), trend_30059)
    if cond_30073:
      k2p2zq_30074 = k2p2_30072
    else:
      k2p2zq_f_res_30075 = (k2p2_30072 - np.int32(1))
      k2p2zq_30074 = k2p2zq_f_res_30075
    i32_res_30076 = sext_i32_i64(k2p2zq_30074)
    binop_x_43381 = (N_30056 * i32_res_30076)
    bytes_43380 = (np.int64(4) * binop_x_43381)
    if cond_30073:
      bounds_invalid_upwards_30078 = slt64(i32_res_30076, np.int64(0))
      valid_30079 = not(bounds_invalid_upwards_30078)
      range_valid_c_30080 = True
      assert valid_30079, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:34:17-66\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30076,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_31796 = self.sizes["mainDetailed.segmap_group_size_31726"]
      segmap_usable_groups_31797 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_31796)
      mem_43382 = opencl_alloc(self, bytes_43380, "mem_43382")
      if ((1 * (np.long(segmap_usable_groups_31797) * np.long(segmap_group_sizze_31796))) != 0):
        self.mainDetailedzisegmap_31723_var.set_args(self.global_failure,
                                                     np.int64(N_30056),
                                                     np.float32(freq_30062),
                                                     np.int64(i32_res_30076),
                                                     mappingindices_mem_43377,
                                                     mem_43382)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31723_var,
                                   ((np.long(segmap_usable_groups_31797) * np.long(segmap_group_sizze_31796)),),
                                   (np.long(segmap_group_sizze_31796),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43382
    else:
      bounds_invalid_upwards_30104 = slt64(i32_res_30076, np.int64(0))
      valid_30105 = not(bounds_invalid_upwards_30104)
      range_valid_c_30106 = True
      assert valid_30105, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:35:17-64\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30076,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_31970 = self.sizes["mainDetailed.segmap_group_size_31904"]
      segmap_usable_groups_31971 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_31970)
      mem_43386 = opencl_alloc(self, bytes_43380, "mem_43386")
      if ((1 * (np.long(segmap_usable_groups_31971) * np.long(segmap_group_sizze_31970))) != 0):
        self.mainDetailedzisegmap_31901_var.set_args(self.global_failure,
                                                     np.int64(N_30056),
                                                     np.float32(freq_30062),
                                                     np.int64(i32_res_30076),
                                                     mappingindices_mem_43377,
                                                     mem_43386)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31901_var,
                                   ((np.long(segmap_usable_groups_31971) * np.long(segmap_group_sizze_31970)),),
                                   (np.long(segmap_group_sizze_31970),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43386
    x_30129 = (N_30056 * N_30056)
    y_30130 = (np.int64(2) * N_30056)
    x_30131 = (x_30129 + y_30130)
    x_30132 = (np.int64(1) + x_30131)
    y_30133 = (np.int64(1) + N_30056)
    zzero_30134 = (y_30133 == np.int64(0))
    nonzzero_30135 = not(zzero_30134)
    nonzzero_cert_30136 = True
    assert nonzzero_30135, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:32-60\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    x_30137 = sdiv64(x_30132, y_30133)
    x_30138 = (x_30137 - N_30056)
    binop_p_30139 = (x_30138 - np.int64(1))
    defunc_0_f_res_30140 = sext_i64_i32(binop_p_30139)
    i32_res_30141 = sitofp_i32_f32(defunc_0_f_res_30140)
    segmap_group_sizze_32053 = self.sizes["mainDetailed.segmap_group_size_32032"]
    segmap_usable_groups_32054 = sdiv_up64(binop_x_43381,
                                           segmap_group_sizze_32053)
    mem_43390 = opencl_alloc(self, bytes_43380, "mem_43390")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43390, np.int64(0),
                                                binop_p_mem_43387, np.int64(0),
                                                np.int64(1), N_30056,
                                                i32_res_30076)
    mem_43394 = opencl_alloc(self, bytes_43380, "mem_43394")
    if ((1 * (np.long(segmap_usable_groups_32054) * np.long(segmap_group_sizze_32053))) != 0):
      self.mainDetailedzisegmap_32029_var.set_args(self.global_failure,
                                                   np.int64(N_30056),
                                                   np.int64(i32_res_30076),
                                                   np.float32(i32_res_30141),
                                                   mem_43390, mem_43394)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32029_var,
                                 ((np.long(segmap_usable_groups_32054) * np.long(segmap_group_sizze_32053)),),
                                 (np.long(segmap_group_sizze_32053),))
      if synchronous:
        sync(self)
    eq_x_y_30149 = (np.int64(0) == i32_res_30076)
    p_and_eq_x_y_30150 = (cond_30073 and eq_x_y_30149)
    not_p_30151 = not(cond_30073)
    p_and_eq_x_y_30152 = (eq_x_y_30149 and not_p_30151)
    empty_slice_30153 = (p_and_eq_x_y_30150 or p_and_eq_x_y_30152)
    m_30154 = (i32_res_30076 - np.int64(1))
    zzero_leq_i_p_m_t_s_30155 = sle64(np.int64(0), m_30154)
    i_p_m_t_s_leq_w_30156 = slt64(m_30154, i32_res_30076)
    i_lte_j_30157 = sle64(np.int64(0), i32_res_30076)
    y_30158 = (zzero_leq_i_p_m_t_s_30155 and i_p_m_t_s_leq_w_30156)
    y_30159 = (i_lte_j_30157 and y_30158)
    ok_or_empty_30160 = (empty_slice_30153 or y_30159)
    empty_slice_30161 = (i32_res_30070 == np.int64(0))
    m_30162 = (i32_res_30070 - np.int64(1))
    zzero_leq_i_p_m_t_s_30163 = sle64(np.int64(0), m_30162)
    i_p_m_t_s_leq_w_30164 = slt64(m_30162, N_30056)
    i_lte_j_30165 = sle64(np.int64(0), i32_res_30070)
    y_30166 = (zzero_leq_i_p_m_t_s_30163 and i_p_m_t_s_leq_w_30164)
    y_30167 = (i_lte_j_30165 and y_30166)
    ok_or_empty_30168 = (empty_slice_30161 or y_30167)
    index_ok_30169 = (ok_or_empty_30160 and ok_or_empty_30168)
    index_certs_30170 = True
    assert index_ok_30169, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:44:15-23\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30070,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_30076,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30056,
                                                                                                                                                                               "]."))
    empty_slice_30172 = (i32_res_30076 == np.int64(0))
    ok_or_empty_30173 = (y_30159 or empty_slice_30172)
    index_ok_30174 = (ok_or_empty_30168 and ok_or_empty_30173)
    index_certs_30175 = True
    assert index_ok_30174, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:45:15-24\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_30070,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_30056,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_30076,
                                                                                                                                                                               "]."))
    empty_slice_30177 = (m_30057 == np.int64(0))
    m_30178 = (m_30057 - np.int64(1))
    zzero_leq_i_p_m_t_s_30179 = sle64(np.int64(0), m_30178)
    i_p_m_t_s_leq_w_30180 = slt64(m_30178, m_30057)
    i_lte_j_30181 = sle64(np.int64(0), m_30057)
    y_30182 = (zzero_leq_i_p_m_t_s_30179 and i_p_m_t_s_leq_w_30180)
    y_30183 = (i_lte_j_30181 and y_30182)
    ok_or_empty_30184 = (empty_slice_30177 or y_30183)
    index_ok_30185 = (ok_or_empty_30168 and ok_or_empty_30184)
    index_certs_30186 = True
    assert index_ok_30185, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:46:15-28\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30070,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_30057,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30056,
                                                                                                                                                                               "]."))
    suff_outer_par_32060 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_30057)
    segmap_group_sizze_32086 = self.sizes["mainDetailed.segmap_group_size_32064"]
    max_num_groups_44659 = self.sizes["mainDetailed.segmap_num_groups_32066"]
    num_groups_32087 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30057,
                                                            segmap_group_sizze_32086),
                                                  sext_i32_i64(max_num_groups_44659))))
    nest_sizze_32262 = (m_30057 * i32_res_30076)
    segmap_group_sizze_32263 = self.sizes["mainDetailed.segmap_group_size_32111"]
    max_num_groups_44660 = self.sizes["mainDetailed.segmap_num_groups_32113"]
    num_groups_32264 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32262,
                                                            segmap_group_sizze_32263),
                                                  sext_i32_i64(max_num_groups_44660))))
    suff_outer_par_32268 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_32262)
    y_32292 = (i32_res_30076 * i32_res_30076)
    comparatee_32293 = (m_30057 * y_32292)
    suff_outer_par_32294 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_32293)
    nest_sizze_32314 = (i32_res_30070 * comparatee_32293)
    segred_group_sizze_32315 = self.sizes["mainDetailed.segred_group_size_32171"]
    max_num_groups_44661 = self.sizes["mainDetailed.segred_num_groups_32173"]
    num_groups_32316 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32314,
                                                            segred_group_sizze_32315),
                                                  sext_i32_i64(max_num_groups_44661))))
    tile_sizze_41560 = self.sizes["mainDetailed.tile_size_41559"]
    group_sizze_41561 = (tile_sizze_41560 * tile_sizze_41560)
    binop_x_43396 = (m_30057 * N_30058)
    bytes_43395 = (np.int64(4) * binop_x_43396)
    bytes_43440 = (np.int64(4) * comparatee_32293)
    bytes_43399 = (np.int64(4) * y_32292)
    binop_x_43541 = (i32_res_30076 * nest_sizze_32262)
    bytes_43539 = (np.int64(4) * binop_x_43541)
    bytes_43445 = (np.int64(4) * i32_res_30076)
    bytes_43465 = (np.int64(4) * group_sizze_41561)
    binop_x_44408 = (np.int64(4) * tile_sizze_41560)
    sizze_44409 = (tile_sizze_41560 * binop_x_44408)
    num_threads_44495 = (segmap_group_sizze_32086 * num_groups_32087)
    total_sizze_44496 = (bytes_43399 * num_threads_44495)
    num_threads_44497 = (segmap_group_sizze_32263 * num_groups_32264)
    total_sizze_44498 = (bytes_43445 * num_threads_44497)
    local_memory_capacity_44762 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44762)) and suff_outer_par_32060):
      mem_43397 = opencl_alloc(self, bytes_43395, "mem_43397")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43397, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_30058, m_30057)
      mem_43443 = opencl_alloc(self, bytes_43440, "mem_43443")
      mem_43401 = opencl_alloc(self, total_sizze_44496, "mem_43401")
      if ((1 * (np.long(num_groups_32087) * np.long(segmap_group_sizze_32086))) != 0):
        self.mainDetailedzisegmap_32062_var.set_args(self.global_failure,
                                                     np.int64(N_30056),
                                                     np.int64(m_30057),
                                                     np.int32(n_30061),
                                                     np.int32(k2p2zq_30074),
                                                     np.int64(i32_res_30076),
                                                     np.int64(num_groups_32087),
                                                     binop_p_mem_43387,
                                                     mem_43394, mem_43397,
                                                     mem_43401, mem_43443)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32062_var,
                                   ((np.long(num_groups_32087) * np.long(segmap_group_sizze_32086)),),
                                   (np.long(segmap_group_sizze_32086),))
        if synchronous:
          sync(self)
      mem_43397 = None
      mem_43401 = None
      mem_43542 = opencl_alloc(self, bytes_43539, "mem_43542")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43542, np.int64(0),
                                                  mem_43443, np.int64(0),
                                                  np.int64(1), m_30057,
                                                  (i32_res_30076 * i32_res_30076))
      mem_43443 = None
      defunc_3_map_res_mem_43544 = mem_43542
    else:
      local_memory_capacity_44761 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44761)) and suff_outer_par_32268):
        mem_43462 = opencl_alloc(self, bytes_43539, "mem_43462")
        mem_43446 = opencl_alloc(self, total_sizze_44498, "mem_43446")
        if ((1 * (np.long(num_groups_32264) * np.long(segmap_group_sizze_32263))) != 0):
          self.mainDetailedzisegmap_32108_var.set_args(self.global_failure,
                                                       np.int64(m_30057),
                                                       np.int64(N_30058),
                                                       np.int32(n_30061),
                                                       np.int32(k2p2zq_30074),
                                                       np.int64(i32_res_30076),
                                                       np.int64(num_groups_32264),
                                                       images_mem_43378,
                                                       mem_43390, mem_43394,
                                                       mem_43446, mem_43462)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32108_var,
                                     ((np.long(num_groups_32264) * np.long(segmap_group_sizze_32263)),),
                                     (np.long(segmap_group_sizze_32263),))
          if synchronous:
            sync(self)
        mem_43446 = None
        mem_43536 = opencl_alloc(self, bytes_43539, "mem_43536")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43536, np.int64(0),
                                                    mem_43462, np.int64(0),
                                                    np.int64(1),
                                                    (m_30057 * i32_res_30076),
                                                    i32_res_30076)
        mem_43462 = None
        defunc_3_map_res_mem_43538 = mem_43536
      else:
        local_memory_capacity_44760 = self.max_local_memory
        if (sle64((((bytes_43465 + bytes_43465) + bytes_43465) + bytes_43465),
                  sext_i32_i64(local_memory_capacity_44760)) and suff_outer_par_32294):
          num_groups_x_41562 = sdiv_up64(i32_res_30076, tile_sizze_41560)
          y_41564 = (m_30057 * num_groups_x_41562)
          num_groups_top_41565 = (num_groups_x_41562 * y_41564)
          num_whole_tiles_41582 = squot64(i32_res_30070, tile_sizze_41560)
          residual_input_41744 = srem64(i32_res_30070, tile_sizze_41560)
          cond_41745 = (residual_input_41744 == np.int64(0))
          mem_43523 = opencl_alloc(self, bytes_43539, "mem_43523")
          if ((1 * (np.long(num_groups_top_41565) * np.long(group_sizze_41561))) != 0):
            self.mainDetailedzisegmap_intragroup_41566_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_43465)),
                                                                    cl.LocalMemory(np.long(bytes_43465)),
                                                                    cl.LocalMemory(np.long(bytes_43465)),
                                                                    cl.LocalMemory(np.long(bytes_43465)),
                                                                    np.int64(m_30057),
                                                                    np.int64(N_30058),
                                                                    np.int64(i32_res_30070),
                                                                    np.int64(i32_res_30076),
                                                                    np.int64(num_groups_x_41562),
                                                                    np.int64(num_whole_tiles_41582),
                                                                    np.int64(residual_input_41744),
                                                                    np.byte(cond_41745),
                                                                    images_mem_43378,
                                                                    mem_43390,
                                                                    mem_43394,
                                                                    mem_43523)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_41566_var,
                                       ((np.long(num_groups_top_41565) * np.long(group_sizze_41561)),),
                                       (np.long(group_sizze_41561),))
            if synchronous:
              sync(self)
          defunc_3_map_res_mem_43532 = mem_43523
        else:
          mem_43526 = opencl_alloc(self, bytes_43380, "mem_43526")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43526, np.int64(0),
                                                      mem_43394, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_30076, N_30056)
          mem_43531 = opencl_alloc(self, bytes_43539, "mem_43531")
          if slt64((i32_res_30070 * np.int64(2)), segred_group_sizze_32315):
            segment_sizze_nonzzero_44700 = smax64(np.int64(1), i32_res_30070)
            num_threads_44701 = (num_groups_32316 * segred_group_sizze_32315)
            if ((1 * (np.long(num_groups_32316) * np.long(segred_group_sizze_32315))) != 0):
              self.mainDetailedzisegred_small_32177_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32315))),
                                                                 np.int64(N_30056),
                                                                 np.int64(m_30057),
                                                                 np.int64(N_30058),
                                                                 np.int64(i32_res_30070),
                                                                 np.int64(i32_res_30076),
                                                                 np.int64(num_groups_32316),
                                                                 images_mem_43378,
                                                                 binop_p_mem_43387,
                                                                 mem_43526,
                                                                 mem_43531,
                                                                 np.int64(segment_sizze_nonzzero_44700))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_32177_var,
                                         ((np.long(num_groups_32316) * np.long(segred_group_sizze_32315)),),
                                         (np.long(segred_group_sizze_32315),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44721 = sdiv_up64(num_groups_32316,
                                                 smax64(np.int64(1),
                                                        ((m_30057 * i32_res_30076) * i32_res_30076)))
            elements_per_thread_44722 = sdiv_up64(i32_res_30070,
                                                  (segred_group_sizze_32315 * groups_per_segment_44721))
            virt_num_groups_44723 = (groups_per_segment_44721 * ((m_30057 * i32_res_30076) * i32_res_30076))
            num_threads_44724 = (num_groups_32316 * segred_group_sizze_32315)
            threads_per_segment_44725 = (groups_per_segment_44721 * segred_group_sizze_32315)
            group_res_arr_mem_44726 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_32315 * virt_num_groups_44723)),
                                                   "group_res_arr_mem_44726")
            mainDetailedzicounter_mem_44728 = self.mainDetailedzicounter_mem_44728
            if ((1 * (np.long(num_groups_32316) * np.long(segred_group_sizze_32315))) != 0):
              self.mainDetailedzisegred_large_32177_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32315))),
                                                                 np.int64(N_30056),
                                                                 np.int64(N_30058),
                                                                 np.int64(i32_res_30070),
                                                                 np.int64(i32_res_30076),
                                                                 np.int64(num_groups_32316),
                                                                 images_mem_43378,
                                                                 binop_p_mem_43387,
                                                                 mem_43526,
                                                                 mem_43531,
                                                                 np.int64(groups_per_segment_44721),
                                                                 np.int64(elements_per_thread_44722),
                                                                 np.int64(virt_num_groups_44723),
                                                                 np.int64(threads_per_segment_44725),
                                                                 group_res_arr_mem_44726,
                                                                 mainDetailedzicounter_mem_44728)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_32177_var,
                                         ((np.long(num_groups_32316) * np.long(segred_group_sizze_32315)),),
                                         (np.long(segred_group_sizze_32315),))
              if synchronous:
                sync(self)
          mem_43526 = None
          defunc_3_map_res_mem_43532 = mem_43531
        defunc_3_map_res_mem_43538 = defunc_3_map_res_mem_43532
      defunc_3_map_res_mem_43544 = defunc_3_map_res_mem_43538
    m_30207 = (np.int64(2) * i32_res_30076)
    nm_30208 = (i32_res_30076 * m_30207)
    bounds_invalid_upwards_30209 = slt64(nm_30208, np.int64(0))
    valid_30210 = not(bounds_invalid_upwards_30209)
    range_valid_c_30211 = True
    assert valid_30210, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:77:21-27\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        nm_30208,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_30213 = (m_30207 == np.int64(0))
    nonzzero_30214 = not(zzero_30213)
    nonzzero_cert_30215 = True
    assert nonzzero_30214, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:72:41-47\n   #1  helpers.fut:72:14-77:28\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    i64_res_30216 = sext_i64_i32(m_30207)
    loop_nonempty_30217 = slt32(np.int32(0), k2p2zq_30074)
    zzero_30218 = (i64_res_30216 == np.int32(0))
    nonzzero_30219 = not(zzero_30218)
    loop_not_taken_30220 = not(loop_nonempty_30217)
    protect_assert_disj_30221 = (nonzzero_30219 or loop_not_taken_30220)
    nonzzero_cert_30222 = True
    assert protect_assert_disj_30221, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:32\n   #2  helpers.fut:78:15-53\n   #3  bfastfinal.fut:56:35-50\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    y_32395 = smin64(i32_res_30076, nm_30208)
    intra_avail_par_32396 = smin64(y_32292, y_32395)
    y_32397 = smax64(i32_res_30076, nm_30208)
    computed_group_sizze_32339 = smax64(y_32292, y_32397)
    max_group_sizze_32530 = self.max_group_size
    fits_32531 = sle64(computed_group_sizze_32339, max_group_sizze_32530)
    suff_intra_par_32529 = (self.sizes["mainDetailed.suff_intra_par_10"] <= intra_avail_par_32396)
    intra_suff_and_fits_32532 = (suff_intra_par_32529 and fits_32531)
    nest_sizze_33113 = (m_30057 * nm_30208)
    segmap_group_sizze_33114 = self.sizes["mainDetailed.segmap_group_size_33077"]
    fits_33141 = sle64(nm_30208, max_group_sizze_32530)
    suff_intra_par_33143 = (self.sizes["mainDetailed.suff_intra_par_14"] <= nm_30208)
    intra_suff_and_fits_33144 = (fits_33141 and suff_intra_par_33143)
    segmap_group_sizze_33180 = self.sizes["mainDetailed.segmap_group_size_32985"]
    segmap_group_sizze_33196 = self.sizes["mainDetailed.segmap_group_size_32918"]
    segmap_group_sizze_33230 = self.sizes["mainDetailed.segmap_group_size_32864"]
    segmap_group_sizze_33265 = self.sizes["mainDetailed.segmap_group_size_32646"]
    segmap_usable_groups_33181 = sdiv_up_safe64(m_30057,
                                                segmap_group_sizze_33180)
    segmap_usable_groups_33197 = sdiv_up_safe64(nest_sizze_33113,
                                                segmap_group_sizze_33196)
    segmap_usable_groups_33231 = sdiv_up_safe64(nest_sizze_33113,
                                                segmap_group_sizze_33230)
    bytes_43547 = (np.int64(4) * nm_30208)
    bytes_43574 = (np.int64(4) * nest_sizze_33113)
    local_memory_capacity_44827 = self.max_local_memory
    if (sle64(((bytes_43547 + bytes_43547) + bytes_43399),
              sext_i32_i64(local_memory_capacity_44827)) and intra_suff_and_fits_32532):
      mem_43572 = opencl_alloc(self, bytes_43539, "mem_43572")
      if ((1 * (np.long(m_30057) * np.long(computed_group_sizze_32339))) != 0):
        self.mainDetailedzisegmap_intragroup_32398_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(bytes_43399)),
                                                                cl.LocalMemory(np.long(bytes_43547)),
                                                                cl.LocalMemory(np.long(bytes_43547)),
                                                                np.int32(k2p2zq_30074),
                                                                np.int64(i32_res_30076),
                                                                np.int64(m_30207),
                                                                np.int64(nm_30208),
                                                                np.int32(i64_res_30216),
                                                                np.int64(computed_group_sizze_32339),
                                                                defunc_3_map_res_mem_43544,
                                                                mem_43572)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_32398_var,
                                   ((np.long(m_30057) * np.long(computed_group_sizze_32339)),),
                                   (np.long(computed_group_sizze_32339),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_3_map_res_mem_43627 = mem_43572
    else:
      segmap_usable_groups_33115 = sdiv_up64(nest_sizze_33113,
                                             segmap_group_sizze_33114)
      mem_43576 = opencl_alloc(self, bytes_43574, "mem_43576")
      if ((1 * (np.long(segmap_usable_groups_33115) * np.long(segmap_group_sizze_33114))) != 0):
        self.mainDetailedzisegmap_33074_var.set_args(self.global_failure,
                                                     np.int64(m_30057),
                                                     np.int64(i32_res_30076),
                                                     np.int64(m_30207),
                                                     np.int64(nm_30208),
                                                     defunc_3_map_res_mem_43544,
                                                     mem_43576)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33074_var,
                                   ((np.long(segmap_usable_groups_33115) * np.long(segmap_group_sizze_33114)),),
                                   (np.long(segmap_group_sizze_33114),))
        if synchronous:
          sync(self)
      ctx_param_ext_43577 = m_30057
      ctx_param_ext_43578 = nm_30208
      ctx_param_ext_43579 = np.int64(0)
      ctx_param_ext_43580 = nm_30208
      ctx_param_ext_43581 = m_30057
      ctx_param_ext_43582 = np.int64(1)
      ctx_param_ext_43583 = nm_30208
      mem_param_43584 = mem_43576
      i_33129 = np.int32(0)
      one_45885 = np.int32(1)
      for counter_45884 in range(k2p2zq_30074):
        i_33131 = sext_i32_i64(i_33129)
        x_33132 = sle64(np.int64(0), i_33131)
        y_33133 = slt64(i_33131, nm_30208)
        bounds_check_33134 = (x_33132 and y_33133)
        index_certs_33135 = True
        assert bounds_check_33134, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                                         i_33131,
                                                                                                                                                                                                                                         "] out of bounds for array of shape [",
                                                                                                                                                                                                                                         nm_30208,
                                                                                                                                                                                                                                         "]."))
        local_memory_capacity_44787 = self.max_local_memory
        if intra_suff_and_fits_33144:
          gauss_jordan_res_ixfn_43606 = m_30057
        else:
          gauss_jordan_res_ixfn_43606 = ctx_param_ext_43581
        local_memory_capacity_44788 = self.max_local_memory
        if intra_suff_and_fits_33144:
          gauss_jordan_res_ixfn_43607 = nm_30208
        else:
          gauss_jordan_res_ixfn_43607 = ctx_param_ext_43583
        local_memory_capacity_44789 = self.max_local_memory
        if intra_suff_and_fits_33144:
          gauss_jordan_res_ixfn_43608 = m_30057
        else:
          gauss_jordan_res_ixfn_43608 = ctx_param_ext_43577
        local_memory_capacity_44790 = self.max_local_memory
        if intra_suff_and_fits_33144:
          gauss_jordan_res_ixfn_43609 = nm_30208
        else:
          gauss_jordan_res_ixfn_43609 = ctx_param_ext_43578
        local_memory_capacity_44791 = self.max_local_memory
        if intra_suff_and_fits_33144:
          gauss_jordan_res_ixfn_43610 = nm_30208
        else:
          gauss_jordan_res_ixfn_43610 = ctx_param_ext_43580
        local_memory_capacity_44792 = self.max_local_memory
        if intra_suff_and_fits_33144:
          gauss_jordan_res_ixfn_43611 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43611 = ctx_param_ext_43582
        local_memory_capacity_44793 = self.max_local_memory
        if intra_suff_and_fits_33144:
          gauss_jordan_res_ixfn_43612 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43612 = ctx_param_ext_43579
        local_memory_capacity_44821 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44821)) and sle64(bytes_43547,
                                                                        sext_i32_i64(local_memory_capacity_44821))) and intra_suff_and_fits_33144):
          mem_43589 = opencl_alloc(self, bytes_43574, "mem_43589")
          group_sizze_44797 = self.sizes["mainDetailed.group_size_44797"]
          num_groups_44798 = sdiv_up64((m_30057 * nm_30208), group_sizze_44797)
          if ((1 * (np.long(num_groups_44798) * np.long(group_sizze_44797))) != 0):
            self.mainDetailedzicopy_44794_var.set_args(np.int64(m_30057),
                                                       np.int64(nm_30208),
                                                       np.int64(ctx_param_ext_43579),
                                                       np.int64(ctx_param_ext_43580),
                                                       np.int64(ctx_param_ext_43582),
                                                       mem_param_43584,
                                                       mem_43589)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_44794_var,
                                       ((np.long(num_groups_44798) * np.long(group_sizze_44797)),),
                                       (np.long(group_sizze_44797),))
            if synchronous:
              sync(self)
          mem_43597 = opencl_alloc(self, bytes_43574, "mem_43597")
          if ((1 * (np.long(m_30057) * np.long(nm_30208))) != 0):
            self.mainDetailedzisegmap_intragroup_32742_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_43547)),
                                                                    np.int64(m_30057),
                                                                    np.int32(k2p2zq_30074),
                                                                    np.int64(nm_30208),
                                                                    np.int32(i64_res_30216),
                                                                    np.int32(i_33129),
                                                                    np.int64(i_33131),
                                                                    np.int64(ctx_param_ext_43579),
                                                                    np.int64(ctx_param_ext_43580),
                                                                    np.int64(ctx_param_ext_43582),
                                                                    mem_param_43584,
                                                                    mem_43589,
                                                                    mem_43597)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_32742_var,
                                       ((np.long(m_30057) * np.long(nm_30208)),),
                                       (np.long(nm_30208),))
            if synchronous:
              sync(self)
          mem_43589 = None
          gauss_jordan_res_mem_43613 = mem_43597
        else:
          mem_43600 = opencl_alloc(self, m_30057, "mem_43600")
          if ((1 * (np.long(segmap_usable_groups_33181) * np.long(segmap_group_sizze_33180))) != 0):
            self.mainDetailedzisegmap_32983_var.set_args(self.global_failure,
                                                         np.int64(m_30057),
                                                         np.int64(i_33131),
                                                         np.int64(ctx_param_ext_43579),
                                                         np.int64(ctx_param_ext_43580),
                                                         np.int64(ctx_param_ext_43582),
                                                         mem_param_43584,
                                                         mem_43600)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_32983_var,
                                       ((np.long(segmap_usable_groups_33181) * np.long(segmap_group_sizze_33180)),),
                                       (np.long(segmap_group_sizze_33180),))
            if synchronous:
              sync(self)
          mem_43604 = opencl_alloc(self, bytes_43574, "mem_43604")
          if ((1 * (np.long(segmap_usable_groups_33197) * np.long(segmap_group_sizze_33196))) != 0):
            self.mainDetailedzisegmap_32915_var.set_args(self.global_failure,
                                                         np.int64(m_30057),
                                                         np.int32(k2p2zq_30074),
                                                         np.int64(nm_30208),
                                                         np.int32(i64_res_30216),
                                                         np.int32(i_33129),
                                                         np.int64(i_33131),
                                                         np.int64(ctx_param_ext_43579),
                                                         np.int64(ctx_param_ext_43580),
                                                         np.int64(ctx_param_ext_43582),
                                                         mem_param_43584,
                                                         mem_43600, mem_43604)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_32915_var,
                                       ((np.long(segmap_usable_groups_33197) * np.long(segmap_group_sizze_33196)),),
                                       (np.long(segmap_group_sizze_33196),))
            if synchronous:
              sync(self)
          mem_43600 = None
          if ((1 * (np.long(segmap_usable_groups_33231) * np.long(segmap_group_sizze_33230))) != 0):
            self.mainDetailedzisegmap_32861_var.set_args(self.global_failure,
                                                         np.int64(m_30057),
                                                         np.int64(nm_30208),
                                                         np.int64(ctx_param_ext_43579),
                                                         np.int64(ctx_param_ext_43580),
                                                         np.int64(ctx_param_ext_43582),
                                                         mem_param_43584,
                                                         mem_43604)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_32861_var,
                                       ((np.long(segmap_usable_groups_33231) * np.long(segmap_group_sizze_33230)),),
                                       (np.long(segmap_group_sizze_33230),))
            if synchronous:
              sync(self)
          mem_43604 = None
          gauss_jordan_res_mem_43613 = mem_param_43584
        ctx_param_ext_tmp_44778 = gauss_jordan_res_ixfn_43608
        ctx_param_ext_tmp_44779 = gauss_jordan_res_ixfn_43609
        ctx_param_ext_tmp_44780 = gauss_jordan_res_ixfn_43612
        ctx_param_ext_tmp_44781 = gauss_jordan_res_ixfn_43610
        ctx_param_ext_tmp_44782 = gauss_jordan_res_ixfn_43606
        ctx_param_ext_tmp_44783 = gauss_jordan_res_ixfn_43611
        ctx_param_ext_tmp_44784 = gauss_jordan_res_ixfn_43607
        mem_param_tmp_44785 = gauss_jordan_res_mem_43613
        ctx_param_ext_43577 = ctx_param_ext_tmp_44778
        ctx_param_ext_43578 = ctx_param_ext_tmp_44779
        ctx_param_ext_43579 = ctx_param_ext_tmp_44780
        ctx_param_ext_43580 = ctx_param_ext_tmp_44781
        ctx_param_ext_43581 = ctx_param_ext_tmp_44782
        ctx_param_ext_43582 = ctx_param_ext_tmp_44783
        ctx_param_ext_43583 = ctx_param_ext_tmp_44784
        mem_param_43584 = mem_param_tmp_44785
        i_33129 += one_45885
      gauss_jordan_res_r_ixfn_43614 = ctx_param_ext_43577
      gauss_jordan_res_r_ixfn_43615 = ctx_param_ext_43578
      gauss_jordan_res_r_ixfn_43616 = ctx_param_ext_43579
      gauss_jordan_res_r_ixfn_43617 = ctx_param_ext_43580
      gauss_jordan_res_r_ixfn_43618 = ctx_param_ext_43581
      gauss_jordan_res_r_ixfn_43619 = ctx_param_ext_43582
      gauss_jordan_res_r_ixfn_43620 = ctx_param_ext_43583
      gauss_jordan_res_r_mem_43621 = mem_param_43584
      mem_43576 = None
      segmap_usable_groups_33266 = sdiv_up64(comparatee_32293,
                                             segmap_group_sizze_33265)
      mem_43626 = opencl_alloc(self, bytes_43539, "mem_43626")
      if ((1 * (np.long(segmap_usable_groups_33266) * np.long(segmap_group_sizze_33265))) != 0):
        self.mainDetailedzisegmap_32642_var.set_args(self.global_failure,
                                                     np.int64(m_30057),
                                                     np.int64(i32_res_30076),
                                                     np.int64(m_30207),
                                                     np.int64(gauss_jordan_res_r_ixfn_43616),
                                                     np.int64(gauss_jordan_res_r_ixfn_43617),
                                                     np.int64(gauss_jordan_res_r_ixfn_43619),
                                                     gauss_jordan_res_r_mem_43621,
                                                     mem_43626)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32642_var,
                                   ((np.long(segmap_usable_groups_33266) * np.long(segmap_group_sizze_33265)),),
                                   (np.long(segmap_group_sizze_33265),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43621 = None
      defunc_3_map_res_mem_43627 = mem_43626
    defunc_3_map_res_mem_43544 = None
    suff_outer_par_33278 = (self.sizes["mainDetailed.suff_outer_par_17"] <= m_30057)
    segmap_group_sizze_33300 = self.sizes["mainDetailed.segmap_group_size_33282"]
    max_num_groups_44828 = self.sizes["mainDetailed.segmap_num_groups_33284"]
    num_groups_33301 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30057,
                                                            segmap_group_sizze_33300),
                                                  sext_i32_i64(max_num_groups_44828))))
    suff_outer_par_33385 = (self.sizes["mainDetailed.suff_outer_par_18"] <= nest_sizze_32262)
    nest_sizze_33401 = (i32_res_30070 * nest_sizze_32262)
    segred_group_sizze_33402 = self.sizes["mainDetailed.segred_group_size_33344"]
    max_num_groups_44829 = self.sizes["mainDetailed.segred_num_groups_33346"]
    num_groups_33403 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33401,
                                                            segred_group_sizze_33402),
                                                  sext_i32_i64(max_num_groups_44829))))
    tile_sizze_41906 = self.sizes["mainDetailed.tile_size_41905"]
    group_sizze_41907 = (tile_sizze_41906 * tile_sizze_41906)
    bytes_43646 = (np.int64(4) * nest_sizze_32262)
    bytes_43651 = (np.int64(4) * group_sizze_41907)
    binop_x_44422 = (np.int64(4) * tile_sizze_41906)
    sizze_44423 = (tile_sizze_41906 * binop_x_44422)
    num_threads_44508 = (segmap_group_sizze_33300 * num_groups_33301)
    total_sizze_44509 = (bytes_43445 * num_threads_44508)
    local_memory_capacity_44915 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44915)) and suff_outer_par_33278):
      mem_43630 = opencl_alloc(self, bytes_43395, "mem_43630")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43630, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_30058, m_30057)
      mem_43648 = opencl_alloc(self, bytes_43646, "mem_43648")
      mem_43633 = opencl_alloc(self, total_sizze_44509, "mem_43633")
      if ((1 * (np.long(num_groups_33301) * np.long(segmap_group_sizze_33300))) != 0):
        self.mainDetailedzisegmap_33280_var.set_args(self.global_failure,
                                                     np.int64(N_30056),
                                                     np.int64(m_30057),
                                                     np.int32(n_30061),
                                                     np.int32(k2p2zq_30074),
                                                     np.int64(i32_res_30076),
                                                     np.int64(num_groups_33301),
                                                     binop_p_mem_43387,
                                                     mem_43630, mem_43633,
                                                     mem_43648)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33280_var,
                                   ((np.long(num_groups_33301) * np.long(segmap_group_sizze_33300)),),
                                   (np.long(segmap_group_sizze_33300),))
        if synchronous:
          sync(self)
      mem_43630 = None
      mem_43633 = None
      mem_43716 = opencl_alloc(self, bytes_43646, "mem_43716")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43716, np.int64(0),
                                                  mem_43648, np.int64(0),
                                                  np.int64(1), m_30057,
                                                  i32_res_30076)
      mem_43648 = None
      defunc_3_map_res_mem_43718 = mem_43716
    else:
      local_memory_capacity_44914 = self.max_local_memory
      if (sle64((((bytes_43651 + bytes_43651) + bytes_43651) + bytes_43651),
                sext_i32_i64(local_memory_capacity_44914)) and suff_outer_par_33385):
        num_groups_x_41908 = sdiv_up64(m_30057, tile_sizze_41906)
        num_groups_y_41909 = sdiv_up64(i32_res_30076, tile_sizze_41906)
        num_groups_top_41910 = (num_groups_x_41908 * num_groups_y_41909)
        num_whole_tiles_41927 = squot64(i32_res_30070, tile_sizze_41906)
        residual_input_42077 = srem64(i32_res_30070, tile_sizze_41906)
        cond_42078 = (residual_input_42077 == np.int64(0))
        mem_43708 = opencl_alloc(self, bytes_43646, "mem_43708")
        if ((1 * (np.long(num_groups_top_41910) * np.long(group_sizze_41907))) != 0):
          self.mainDetailedzisegmap_intragroup_41911_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43651)),
                                                                  cl.LocalMemory(np.long(bytes_43651)),
                                                                  cl.LocalMemory(np.long(bytes_43651)),
                                                                  cl.LocalMemory(np.long(bytes_43651)),
                                                                  np.int64(m_30057),
                                                                  np.int64(N_30058),
                                                                  np.int64(i32_res_30070),
                                                                  np.int64(i32_res_30076),
                                                                  np.int64(num_groups_y_41909),
                                                                  np.int64(num_whole_tiles_41927),
                                                                  np.int64(residual_input_42077),
                                                                  np.byte(cond_42078),
                                                                  images_mem_43378,
                                                                  mem_43390,
                                                                  mem_43708)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41911_var,
                                     ((np.long(num_groups_top_41910) * np.long(group_sizze_41907)),),
                                     (np.long(group_sizze_41907),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43713 = mem_43708
      else:
        mem_43712 = opencl_alloc(self, bytes_43646, "mem_43712")
        if slt64((i32_res_30070 * np.int64(2)), segred_group_sizze_33402):
          segment_sizze_nonzzero_44854 = smax64(np.int64(1), i32_res_30070)
          num_threads_44855 = (num_groups_33403 * segred_group_sizze_33402)
          if ((1 * (np.long(num_groups_33403) * np.long(segred_group_sizze_33402))) != 0):
            self.mainDetailedzisegred_small_33350_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33402))),
                                                               np.int64(N_30056),
                                                               np.int64(m_30057),
                                                               np.int64(N_30058),
                                                               np.int64(i32_res_30070),
                                                               np.int64(i32_res_30076),
                                                               np.int64(num_groups_33403),
                                                               images_mem_43378,
                                                               binop_p_mem_43387,
                                                               mem_43712,
                                                               np.int64(segment_sizze_nonzzero_44854))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33350_var,
                                       ((np.long(num_groups_33403) * np.long(segred_group_sizze_33402)),),
                                       (np.long(segred_group_sizze_33402),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44875 = sdiv_up64(num_groups_33403,
                                               smax64(np.int64(1),
                                                      (m_30057 * i32_res_30076)))
          elements_per_thread_44876 = sdiv_up64(i32_res_30070,
                                                (segred_group_sizze_33402 * groups_per_segment_44875))
          virt_num_groups_44877 = (groups_per_segment_44875 * (m_30057 * i32_res_30076))
          num_threads_44878 = (num_groups_33403 * segred_group_sizze_33402)
          threads_per_segment_44879 = (groups_per_segment_44875 * segred_group_sizze_33402)
          group_res_arr_mem_44880 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33402 * virt_num_groups_44877)),
                                                 "group_res_arr_mem_44880")
          mainDetailedzicounter_mem_44882 = self.mainDetailedzicounter_mem_44882
          if ((1 * (np.long(num_groups_33403) * np.long(segred_group_sizze_33402))) != 0):
            self.mainDetailedzisegred_large_33350_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33402))),
                                                               np.int64(N_30056),
                                                               np.int64(N_30058),
                                                               np.int64(i32_res_30070),
                                                               np.int64(i32_res_30076),
                                                               np.int64(num_groups_33403),
                                                               images_mem_43378,
                                                               binop_p_mem_43387,
                                                               mem_43712,
                                                               np.int64(groups_per_segment_44875),
                                                               np.int64(elements_per_thread_44876),
                                                               np.int64(virt_num_groups_44877),
                                                               np.int64(threads_per_segment_44879),
                                                               group_res_arr_mem_44880,
                                                               mainDetailedzicounter_mem_44882)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33350_var,
                                       ((np.long(num_groups_33403) * np.long(segred_group_sizze_33402)),),
                                       (np.long(segred_group_sizze_33402),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43713 = mem_43712
      defunc_3_map_res_mem_43718 = defunc_3_map_res_mem_43713
    binop_p_mem_43387 = None
    mem_43390 = None
    suff_outer_par_33419 = (self.sizes["mainDetailed.suff_outer_par_19"] <= m_30057)
    segmap_group_sizze_33440 = self.sizes["mainDetailed.segmap_group_size_33423"]
    max_num_groups_44916 = self.sizes["mainDetailed.segmap_num_groups_33425"]
    num_groups_33441 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30057,
                                                            segmap_group_sizze_33440),
                                                  sext_i32_i64(max_num_groups_44916))))
    suff_outer_par_33520 = (self.sizes["mainDetailed.suff_outer_par_20"] <= nest_sizze_32262)
    segred_group_sizze_33535 = self.sizes["mainDetailed.segred_group_size_33481"]
    max_num_groups_44917 = self.sizes["mainDetailed.segred_num_groups_33483"]
    num_groups_33536 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43541,
                                                            segred_group_sizze_33535),
                                                  sext_i32_i64(max_num_groups_44917))))
    tile_sizze_42228 = self.sizes["mainDetailed.tile_size_42227"]
    group_sizze_42229 = (tile_sizze_42228 * tile_sizze_42228)
    bytes_43750 = (np.int64(4) * group_sizze_42229)
    binop_x_44432 = (np.int64(4) * tile_sizze_42228)
    sizze_44433 = (tile_sizze_42228 * binop_x_44432)
    num_threads_44512 = (segmap_group_sizze_33440 * num_groups_33441)
    total_sizze_44513 = (bytes_43445 * num_threads_44512)
    local_memory_capacity_45003 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45003)) and suff_outer_par_33419):
      mem_43722 = opencl_alloc(self, bytes_43440, "mem_43722")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43722, np.int64(0),
                                                  defunc_3_map_res_mem_43627,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_30076 * i32_res_30076),
                                                  m_30057)
      mem_43725 = opencl_alloc(self, bytes_43646, "mem_43725")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43725, np.int64(0),
                                                  defunc_3_map_res_mem_43718,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30076, m_30057)
      mem_43743 = opencl_alloc(self, bytes_43646, "mem_43743")
      mem_43728 = opencl_alloc(self, total_sizze_44513, "mem_43728")
      if ((1 * (np.long(num_groups_33441) * np.long(segmap_group_sizze_33440))) != 0):
        self.mainDetailedzisegmap_33421_var.set_args(self.global_failure,
                                                     np.int64(m_30057),
                                                     np.int32(k2p2zq_30074),
                                                     np.int64(i32_res_30076),
                                                     np.int64(num_groups_33441),
                                                     mem_43722, mem_43725,
                                                     mem_43728, mem_43743)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33421_var,
                                   ((np.long(num_groups_33441) * np.long(segmap_group_sizze_33440)),),
                                   (np.long(segmap_group_sizze_33440),))
        if synchronous:
          sync(self)
      mem_43722 = None
      mem_43725 = None
      mem_43728 = None
      mem_43809 = opencl_alloc(self, bytes_43646, "mem_43809")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43809, np.int64(0),
                                                  mem_43743, np.int64(0),
                                                  np.int64(1), m_30057,
                                                  i32_res_30076)
      mem_43743 = None
      defunc_4_map_res_mem_43811 = mem_43809
    else:
      local_memory_capacity_45002 = self.max_local_memory
      if (sle64((bytes_43750 + bytes_43750),
                sext_i32_i64(local_memory_capacity_45002)) and suff_outer_par_33520):
        mem_43747 = opencl_alloc(self, bytes_43539, "mem_43747")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43747, np.int64(0),
                                                    defunc_3_map_res_mem_43627,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_30076,
                                                    (m_30057 * i32_res_30076))
        num_groups_x_42230 = sdiv_up64(m_30057, tile_sizze_42228)
        num_groups_y_42231 = sdiv_up64(i32_res_30076, tile_sizze_42228)
        num_groups_top_42232 = (num_groups_x_42230 * num_groups_y_42231)
        num_whole_tiles_42249 = squot64(i32_res_30076, tile_sizze_42228)
        residual_input_42376 = srem64(i32_res_30076, tile_sizze_42228)
        cond_42377 = (residual_input_42376 == np.int64(0))
        mem_43801 = opencl_alloc(self, bytes_43646, "mem_43801")
        if ((1 * (np.long(num_groups_top_42232) * np.long(group_sizze_42229))) != 0):
          self.mainDetailedzisegmap_intragroup_42233_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43750)),
                                                                  cl.LocalMemory(np.long(bytes_43750)),
                                                                  np.int64(m_30057),
                                                                  np.int64(i32_res_30076),
                                                                  np.int64(num_groups_y_42231),
                                                                  np.int64(num_whole_tiles_42249),
                                                                  np.int64(residual_input_42376),
                                                                  np.byte(cond_42377),
                                                                  defunc_3_map_res_mem_43718,
                                                                  mem_43747,
                                                                  mem_43801)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42233_var,
                                     ((np.long(num_groups_top_42232) * np.long(group_sizze_42229)),),
                                     (np.long(group_sizze_42229),))
          if synchronous:
            sync(self)
        mem_43747 = None
        defunc_4_map_res_mem_43806 = mem_43801
      else:
        mem_43805 = opencl_alloc(self, bytes_43646, "mem_43805")
        if slt64((i32_res_30076 * np.int64(2)), segred_group_sizze_33535):
          segment_sizze_nonzzero_44942 = smax64(np.int64(1), i32_res_30076)
          num_threads_44943 = (num_groups_33536 * segred_group_sizze_33535)
          if ((1 * (np.long(num_groups_33536) * np.long(segred_group_sizze_33535))) != 0):
            self.mainDetailedzisegred_small_33487_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33535))),
                                                               np.int64(m_30057),
                                                               np.int64(i32_res_30076),
                                                               np.int64(num_groups_33536),
                                                               defunc_3_map_res_mem_43627,
                                                               defunc_3_map_res_mem_43718,
                                                               mem_43805,
                                                               np.int64(segment_sizze_nonzzero_44942))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33487_var,
                                       ((np.long(num_groups_33536) * np.long(segred_group_sizze_33535)),),
                                       (np.long(segred_group_sizze_33535),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44963 = sdiv_up64(num_groups_33536,
                                               smax64(np.int64(1),
                                                      (m_30057 * i32_res_30076)))
          elements_per_thread_44964 = sdiv_up64(i32_res_30076,
                                                (segred_group_sizze_33535 * groups_per_segment_44963))
          virt_num_groups_44965 = (groups_per_segment_44963 * (m_30057 * i32_res_30076))
          num_threads_44966 = (num_groups_33536 * segred_group_sizze_33535)
          threads_per_segment_44967 = (groups_per_segment_44963 * segred_group_sizze_33535)
          group_res_arr_mem_44968 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33535 * virt_num_groups_44965)),
                                                 "group_res_arr_mem_44968")
          mainDetailedzicounter_mem_44970 = self.mainDetailedzicounter_mem_44970
          if ((1 * (np.long(num_groups_33536) * np.long(segred_group_sizze_33535))) != 0):
            self.mainDetailedzisegred_large_33487_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33535))),
                                                               np.int64(i32_res_30076),
                                                               np.int64(num_groups_33536),
                                                               defunc_3_map_res_mem_43627,
                                                               defunc_3_map_res_mem_43718,
                                                               mem_43805,
                                                               np.int64(groups_per_segment_44963),
                                                               np.int64(elements_per_thread_44964),
                                                               np.int64(virt_num_groups_44965),
                                                               np.int64(threads_per_segment_44967),
                                                               group_res_arr_mem_44968,
                                                               mainDetailedzicounter_mem_44970)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33487_var,
                                       ((np.long(num_groups_33536) * np.long(segred_group_sizze_33535)),),
                                       (np.long(segred_group_sizze_33535),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43806 = mem_43805
      defunc_4_map_res_mem_43811 = defunc_4_map_res_mem_43806
    defunc_3_map_res_mem_43627 = None
    defunc_3_map_res_mem_43718 = None
    suff_outer_par_33551 = (self.sizes["mainDetailed.suff_outer_par_21"] <= m_30057)
    segmap_group_sizze_33571 = self.sizes["mainDetailed.segmap_group_size_33555"]
    max_num_groups_45004 = self.sizes["mainDetailed.segmap_num_groups_33557"]
    num_groups_33572 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30057,
                                                            segmap_group_sizze_33571),
                                                  sext_i32_i64(max_num_groups_45004))))
    comparatee_33647 = (N_30056 * m_30057)
    suff_outer_par_33648 = (self.sizes["mainDetailed.suff_outer_par_22"] <= comparatee_33647)
    nest_sizze_33662 = (i32_res_30076 * comparatee_33647)
    segred_group_sizze_33663 = self.sizes["mainDetailed.segred_group_size_33611"]
    max_num_groups_45005 = self.sizes["mainDetailed.segred_num_groups_33613"]
    num_groups_33664 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33662,
                                                            segred_group_sizze_33663),
                                                  sext_i32_i64(max_num_groups_45005))))
    tile_sizze_42504 = self.sizes["mainDetailed.tile_size_42503"]
    group_sizze_42505 = (tile_sizze_42504 * tile_sizze_42504)
    bytes_43830 = (np.int64(4) * comparatee_33647)
    bytes_43816 = (np.int64(4) * N_30056)
    bytes_43838 = (np.int64(4) * group_sizze_42505)
    binop_x_44444 = (np.int64(4) * tile_sizze_42504)
    sizze_44445 = (tile_sizze_42504 * binop_x_44444)
    num_threads_44516 = (segmap_group_sizze_33571 * num_groups_33572)
    total_sizze_44517 = (bytes_43816 * num_threads_44516)
    local_memory_capacity_45091 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45091)) and suff_outer_par_33551):
      mem_43814 = opencl_alloc(self, bytes_43646, "mem_43814")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43814, np.int64(0),
                                                  defunc_4_map_res_mem_43811,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30076, m_30057)
      mem_43832 = opencl_alloc(self, bytes_43830, "mem_43832")
      mem_43817 = opencl_alloc(self, total_sizze_44517, "mem_43817")
      if ((1 * (np.long(num_groups_33572) * np.long(segmap_group_sizze_33571))) != 0):
        self.mainDetailedzisegmap_33553_var.set_args(self.global_failure,
                                                     np.int64(N_30056),
                                                     np.int64(m_30057),
                                                     np.int32(k2p2zq_30074),
                                                     np.int64(i32_res_30076),
                                                     np.int64(num_groups_33572),
                                                     mem_43394, mem_43814,
                                                     mem_43817, mem_43832)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33553_var,
                                   ((np.long(num_groups_33572) * np.long(segmap_group_sizze_33571)),),
                                   (np.long(segmap_group_sizze_33571),))
        if synchronous:
          sync(self)
      mem_43814 = None
      mem_43817 = None
      mem_43903 = opencl_alloc(self, bytes_43830, "mem_43903")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43903, np.int64(0),
                                                  mem_43832, np.int64(0),
                                                  np.int64(1), m_30057, N_30056)
      mem_43832 = None
      defunc_3_map_res_mem_43905 = mem_43903
    else:
      local_memory_capacity_45090 = self.max_local_memory
      if (sle64((((bytes_43838 + bytes_43838) + bytes_43838) + bytes_43838),
                sext_i32_i64(local_memory_capacity_45090)) and suff_outer_par_33648):
        mem_43835 = opencl_alloc(self, bytes_43380, "mem_43835")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43835, np.int64(0),
                                                    mem_43394, np.int64(0),
                                                    np.int64(1), i32_res_30076,
                                                    N_30056)
        num_groups_x_42506 = sdiv_up64(m_30057, tile_sizze_42504)
        num_groups_y_42507 = sdiv_up64(N_30056, tile_sizze_42504)
        num_groups_top_42508 = (num_groups_x_42506 * num_groups_y_42507)
        num_whole_tiles_42525 = squot64(i32_res_30076, tile_sizze_42504)
        residual_input_42669 = srem64(i32_res_30076, tile_sizze_42504)
        cond_42670 = (residual_input_42669 == np.int64(0))
        mem_43895 = opencl_alloc(self, bytes_43830, "mem_43895")
        if ((1 * (np.long(num_groups_top_42508) * np.long(group_sizze_42505))) != 0):
          self.mainDetailedzisegmap_intragroup_42509_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43838)),
                                                                  cl.LocalMemory(np.long(bytes_43838)),
                                                                  cl.LocalMemory(np.long(bytes_43838)),
                                                                  cl.LocalMemory(np.long(bytes_43838)),
                                                                  np.int64(N_30056),
                                                                  np.int64(m_30057),
                                                                  np.int64(i32_res_30076),
                                                                  np.int64(num_groups_y_42507),
                                                                  np.int64(num_whole_tiles_42525),
                                                                  np.int64(residual_input_42669),
                                                                  np.byte(cond_42670),
                                                                  defunc_4_map_res_mem_43811,
                                                                  mem_43835,
                                                                  mem_43895)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42509_var,
                                     ((np.long(num_groups_top_42508) * np.long(group_sizze_42505)),),
                                     (np.long(group_sizze_42505),))
          if synchronous:
            sync(self)
        mem_43835 = None
        defunc_3_map_res_mem_43900 = mem_43895
      else:
        mem_43899 = opencl_alloc(self, bytes_43830, "mem_43899")
        if slt64((i32_res_30076 * np.int64(2)), segred_group_sizze_33663):
          segment_sizze_nonzzero_45030 = smax64(np.int64(1), i32_res_30076)
          num_threads_45031 = (num_groups_33664 * segred_group_sizze_33663)
          if ((1 * (np.long(num_groups_33664) * np.long(segred_group_sizze_33663))) != 0):
            self.mainDetailedzisegred_small_33617_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33663))),
                                                               np.int64(N_30056),
                                                               np.int64(m_30057),
                                                               np.int64(i32_res_30076),
                                                               np.int64(num_groups_33664),
                                                               mem_43394,
                                                               defunc_4_map_res_mem_43811,
                                                               mem_43899,
                                                               np.int64(segment_sizze_nonzzero_45030))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33617_var,
                                       ((np.long(num_groups_33664) * np.long(segred_group_sizze_33663)),),
                                       (np.long(segred_group_sizze_33663),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45051 = sdiv_up64(num_groups_33664,
                                               smax64(np.int64(1),
                                                      (m_30057 * N_30056)))
          elements_per_thread_45052 = sdiv_up64(i32_res_30076,
                                                (segred_group_sizze_33663 * groups_per_segment_45051))
          virt_num_groups_45053 = (groups_per_segment_45051 * (m_30057 * N_30056))
          num_threads_45054 = (num_groups_33664 * segred_group_sizze_33663)
          threads_per_segment_45055 = (groups_per_segment_45051 * segred_group_sizze_33663)
          group_res_arr_mem_45056 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33663 * virt_num_groups_45053)),
                                                 "group_res_arr_mem_45056")
          mainDetailedzicounter_mem_45058 = self.mainDetailedzicounter_mem_45058
          if ((1 * (np.long(num_groups_33664) * np.long(segred_group_sizze_33663))) != 0):
            self.mainDetailedzisegred_large_33617_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33663))),
                                                               np.int64(N_30056),
                                                               np.int64(i32_res_30076),
                                                               np.int64(num_groups_33664),
                                                               mem_43394,
                                                               defunc_4_map_res_mem_43811,
                                                               mem_43899,
                                                               np.int64(groups_per_segment_45051),
                                                               np.int64(elements_per_thread_45052),
                                                               np.int64(virt_num_groups_45053),
                                                               np.int64(threads_per_segment_45055),
                                                               group_res_arr_mem_45056,
                                                               mainDetailedzicounter_mem_45058)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33617_var,
                                       ((np.long(num_groups_33664) * np.long(segred_group_sizze_33663)),),
                                       (np.long(segred_group_sizze_33663),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43900 = mem_43899
      defunc_3_map_res_mem_43905 = defunc_3_map_res_mem_43900
    mem_43394 = None
    defunc_4_map_res_mem_43811 = None
    i_30323 = (N_30056 - np.int64(1))
    x_30324 = sle64(np.int64(0), i_30323)
    y_30325 = slt64(i_30323, N_30056)
    bounds_check_30326 = (x_30324 and y_30325)
    index_certs_30327 = True
    assert bounds_check_30326, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:83:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:77:5-86:25\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_30323,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_30056,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_33793 = sle64(N_30056, max_group_sizze_32530)
    suff_intra_par_33791 = (self.sizes["mainDetailed.suff_intra_par_25"] <= N_30056)
    intra_suff_and_fits_33794 = (suff_intra_par_33791 and fits_33793)
    segscan_group_sizze_33943 = self.sizes["mainDetailed.segscan_group_size_33920"]
    max_num_groups_45092 = self.sizes["mainDetailed.segscan_num_groups_33922"]
    num_groups_33944 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_33647,
                                                            segscan_group_sizze_33943),
                                                  sext_i32_i64(max_num_groups_45092))))
    segmap_group_sizze_33963 = self.sizes["mainDetailed.segmap_group_size_33911"]
    mem_43908 = opencl_alloc(self, bytes_43830, "mem_43908")
    self.futhark_builtinzhreplicate_f32(mem_43908, (m_30057 * N_30056), np.nan)
    mem_43911 = opencl_alloc(self, bytes_43830, "mem_43911")
    self.futhark_builtinzhreplicate_i32(mem_43911, (m_30057 * N_30056),
                                        np.int32(0))
    segmap_group_sizze_33999 = self.sizes["mainDetailed.segmap_group_size_33836"]
    bytes_43923 = (np.int64(4) * m_30057)
    bytes_43914 = (np.int64(8) * N_30056)
    bytes_43932 = (np.int64(8) * comparatee_33647)
    local_memory_capacity_45194 = self.max_local_memory
    if (sle64((((bytes_43914 + bytes_43816) + bytes_43816) + bytes_43816),
              sext_i32_i64(local_memory_capacity_45194)) and intra_suff_and_fits_33794):
      mem_43924 = opencl_alloc(self, bytes_43923, "mem_43924")
      mem_43927 = opencl_alloc(self, bytes_43830, "mem_43927")
      mem_43930 = opencl_alloc(self, bytes_43830, "mem_43930")
      if ((1 * (np.long(m_30057) * np.long(N_30056))) != 0):
        self.mainDetailedzisegmap_intragroup_33716_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43816)),
                                                                cl.LocalMemory(np.long(bytes_43816)),
                                                                cl.LocalMemory(np.long(bytes_43816)),
                                                                cl.LocalMemory(np.long(bytes_43914)),
                                                                np.int64(N_30056),
                                                                np.int64(N_30058),
                                                                np.int64(i_30323),
                                                                images_mem_43378,
                                                                defunc_3_map_res_mem_43905,
                                                                mem_43924,
                                                                mem_43927,
                                                                mem_43930)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_33716_var,
                                   ((np.long(m_30057) * np.long(N_30056)),),
                                   (np.long(N_30056),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43942 = mem_43924
      defunc_4_map_res_mem_43943 = mem_43927
      defunc_4_map_res_mem_43944 = mem_43930
    else:
      mem_43934 = opencl_alloc(self, bytes_43932, "mem_43934")
      mem_43937 = opencl_alloc(self, bytes_43830, "mem_43937")
      if slt64(np.int64(0), (m_30057 * N_30056)):
        stage1_max_num_groups_45128 = self.max_group_size
        stage1_num_groups_45129 = smin64(stage1_max_num_groups_45128,
                                         num_groups_33944)
        num_threads_45130 = sext_i64_i32((stage1_num_groups_45129 * segscan_group_sizze_33943))
        if ((1 * (np.long(stage1_num_groups_45129) * np.long(segscan_group_sizze_33943))) != 0):
          self.mainDetailedziscan_stage1_33926_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_33943)))),
                                                            np.int64(N_30056),
                                                            np.int64(m_30057),
                                                            np.int64(N_30058),
                                                            images_mem_43378,
                                                            defunc_3_map_res_mem_43905,
                                                            mem_43934,
                                                            mem_43937,
                                                            np.int32(num_threads_45130))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_33926_var,
                                     ((np.long(stage1_num_groups_45129) * np.long(segscan_group_sizze_33943)),),
                                     (np.long(segscan_group_sizze_33943),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45129))) != 0):
          self.mainDetailedziscan_stage2_33926_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_45129)))),
                                                            np.int64(N_30056),
                                                            np.int64(m_30057),
                                                            mem_43934,
                                                            np.int64(stage1_num_groups_45129),
                                                            np.int32(num_threads_45130))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_33926_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45129)),),
                                     (np.long(stage1_num_groups_45129),))
          if synchronous:
            sync(self)
        required_groups_45172 = sext_i64_i32(sdiv_up64((m_30057 * N_30056),
                                                       segscan_group_sizze_33943))
        if ((1 * (np.long(num_groups_33944) * np.long(segscan_group_sizze_33943))) != 0):
          self.mainDetailedziscan_stage3_33926_var.set_args(self.global_failure,
                                                            np.int64(N_30056),
                                                            np.int64(m_30057),
                                                            np.int64(num_groups_33944),
                                                            mem_43934,
                                                            np.int32(num_threads_45130),
                                                            np.int32(required_groups_45172))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_33926_var,
                                     ((np.long(num_groups_33944) * np.long(segscan_group_sizze_33943)),),
                                     (np.long(segscan_group_sizze_33943),))
          if synchronous:
            sync(self)
      segmap_usable_groups_33964 = sdiv_up64(m_30057, segmap_group_sizze_33963)
      mem_43940 = opencl_alloc(self, bytes_43923, "mem_43940")
      if ((1 * (np.long(segmap_usable_groups_33964) * np.long(segmap_group_sizze_33963))) != 0):
        self.mainDetailedzisegmap_33909_var.set_args(self.global_failure,
                                                     np.int64(N_30056),
                                                     np.int64(m_30057),
                                                     np.int64(i_30323),
                                                     mem_43934, mem_43940)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33909_var,
                                   ((np.long(segmap_usable_groups_33964) * np.long(segmap_group_sizze_33963)),),
                                   (np.long(segmap_group_sizze_33963),))
        if synchronous:
          sync(self)
      segmap_usable_groups_34000 = sdiv_up64(comparatee_33647,
                                             segmap_group_sizze_33999)
      if ((1 * (np.long(segmap_usable_groups_34000) * np.long(segmap_group_sizze_33999))) != 0):
        self.mainDetailedzisegmap_33833_var.set_args(self.global_failure,
                                                     np.int64(N_30056),
                                                     np.int64(m_30057),
                                                     mem_43908, mem_43911,
                                                     mem_43934, mem_43937)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33833_var,
                                   ((np.long(segmap_usable_groups_34000) * np.long(segmap_group_sizze_33999)),),
                                   (np.long(segmap_group_sizze_33999),))
        if synchronous:
          sync(self)
      mem_43934 = None
      mem_43937 = None
      defunc_4_map_res_mem_43942 = mem_43940
      defunc_4_map_res_mem_43943 = mem_43908
      defunc_4_map_res_mem_43944 = mem_43911
    mem_43908 = None
    mem_43911 = None
    suff_outer_par_34048 = (self.sizes["mainDetailed.suff_outer_par_29"] <= m_30057)
    fits_34126 = sle64(i32_res_30070, max_group_sizze_32530)
    suff_intra_par_34124 = (self.sizes["mainDetailed.suff_intra_par_30"] <= i32_res_30070)
    intra_suff_and_fits_34127 = (suff_intra_par_34124 and fits_34126)
    segmap_group_sizze_34091 = self.sizes["mainDetailed.segmap_group_size_34060"]
    nest_sizze_34214 = (m_30057 * i32_res_30070)
    segred_group_sizze_34215 = self.sizes["mainDetailed.segred_group_size_34198"]
    max_num_groups_45195 = self.sizes["mainDetailed.segred_num_groups_34200"]
    num_groups_34216 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34214,
                                                            segred_group_sizze_34215),
                                                  sext_i32_i64(max_num_groups_45195))))
    segred_group_sizze_34229 = self.sizes["mainDetailed.segred_group_size_34177"]
    max_num_groups_45196 = self.sizes["mainDetailed.segred_num_groups_34179"]
    num_groups_34230 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34214,
                                                            segred_group_sizze_34229),
                                                  sext_i32_i64(max_num_groups_45196))))
    segmap_group_sizze_34245 = self.sizes["mainDetailed.segmap_group_size_34162"]
    bytes_43953 = (np.int64(4) * segmap_group_sizze_34091)
    local_memory_capacity_45350 = self.max_local_memory
    if (sle64((bytes_43953 + bytes_43953),
              sext_i32_i64(local_memory_capacity_45350)) and suff_outer_par_34048):
      segmap_usable_groups_34092 = sdiv_up64(m_30057, segmap_group_sizze_34091)
      mem_43947 = opencl_alloc(self, bytes_43395, "mem_43947")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43947, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_30058, m_30057)
      mem_43950 = opencl_alloc(self, bytes_43830, "mem_43950")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43950, np.int64(0),
                                                  defunc_4_map_res_mem_43943,
                                                  np.int64(0), np.int64(1),
                                                  N_30056, m_30057)
      num_whole_tiles_42822 = squot64(i32_res_30070, segmap_group_sizze_34091)
      residual_input_42943 = srem64(i32_res_30070, segmap_group_sizze_34091)
      cond_42944 = (residual_input_42943 == np.int64(0))
      mem_43994 = opencl_alloc(self, bytes_43923, "mem_43994")
      mem_43996 = opencl_alloc(self, bytes_43923, "mem_43996")
      mem_43998 = opencl_alloc(self, bytes_43923, "mem_43998")
      if ((1 * (np.long(segmap_usable_groups_34092) * np.long(segmap_group_sizze_34091))) != 0):
        self.mainDetailedzisegmap_intragroup_42814_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43953)),
                                                                cl.LocalMemory(np.long(bytes_43953)),
                                                                np.int64(m_30057),
                                                                np.int32(n_30061),
                                                                np.float32(hfrac_30063),
                                                                np.int64(i32_res_30070),
                                                                np.int32(k2p2_30072),
                                                                np.int64(num_whole_tiles_42822),
                                                                np.int64(residual_input_42943),
                                                                np.byte(cond_42944),
                                                                mem_43947,
                                                                mem_43950,
                                                                mem_43994,
                                                                mem_43996,
                                                                mem_43998)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42814_var,
                                   ((np.long(segmap_usable_groups_34092) * np.long(segmap_group_sizze_34091)),),
                                   (np.long(segmap_group_sizze_34091),))
        if synchronous:
          sync(self)
      mem_43947 = None
      mem_43950 = None
      defunc_3_map_res_mem_44022 = mem_43994
      defunc_3_map_res_mem_44023 = mem_43996
      defunc_3_map_res_mem_44024 = mem_43998
    else:
      local_memory_capacity_45349 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_30070) + (np.int32(4) * i32_res_30070)),
                sext_i32_i64(local_memory_capacity_45349)) and intra_suff_and_fits_34127):
        mem_44003 = opencl_alloc(self, bytes_43923, "mem_44003")
        mem_44005 = opencl_alloc(self, bytes_43923, "mem_44005")
        mem_44007 = opencl_alloc(self, bytes_43923, "mem_44007")
        if ((1 * (np.long(m_30057) * np.long(i32_res_30070))) != 0):
          self.mainDetailedzisegmap_intragroup_34056_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_30070))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_30070))),
                                                                  np.int64(N_30056),
                                                                  np.int64(N_30058),
                                                                  np.float32(hfrac_30063),
                                                                  np.int64(i32_res_30070),
                                                                  np.int32(k2p2_30072),
                                                                  images_mem_43378,
                                                                  defunc_4_map_res_mem_43943,
                                                                  mem_44003,
                                                                  mem_44005,
                                                                  mem_44007)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_34056_var,
                                     ((np.long(m_30057) * np.long(i32_res_30070)),),
                                     (np.long(i32_res_30070),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44019 = mem_44003
        defunc_3_map_res_mem_44020 = mem_44005
        defunc_3_map_res_mem_44021 = mem_44007
      else:
        mem_44010 = opencl_alloc(self, bytes_43923, "mem_44010")
        if slt64((i32_res_30070 * np.int64(2)), segred_group_sizze_34215):
          segment_sizze_nonzzero_45224 = smax64(np.int64(1), i32_res_30070)
          num_threads_45225 = (num_groups_34216 * segred_group_sizze_34215)
          if ((1 * (np.long(num_groups_34216) * np.long(segred_group_sizze_34215))) != 0):
            self.mainDetailedzisegred_small_34204_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34215))),
                                                               np.int64(m_30057),
                                                               np.int64(N_30058),
                                                               np.int64(i32_res_30070),
                                                               np.int64(num_groups_34216),
                                                               images_mem_43378,
                                                               mem_44010,
                                                               np.int64(segment_sizze_nonzzero_45224))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_34204_var,
                                       ((np.long(num_groups_34216) * np.long(segred_group_sizze_34215)),),
                                       (np.long(segred_group_sizze_34215),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45245 = sdiv_up64(num_groups_34216,
                                               smax64(np.int64(1), m_30057))
          elements_per_thread_45246 = sdiv_up64(i32_res_30070,
                                                (segred_group_sizze_34215 * groups_per_segment_45245))
          virt_num_groups_45247 = (groups_per_segment_45245 * m_30057)
          num_threads_45248 = (num_groups_34216 * segred_group_sizze_34215)
          threads_per_segment_45249 = (groups_per_segment_45245 * segred_group_sizze_34215)
          group_res_arr_mem_45250 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34215 * virt_num_groups_45247)),
                                                 "group_res_arr_mem_45250")
          mainDetailedzicounter_mem_45252 = self.mainDetailedzicounter_mem_45252
          if ((1 * (np.long(num_groups_34216) * np.long(segred_group_sizze_34215))) != 0):
            self.mainDetailedzisegred_large_34204_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34215))),
                                                               np.int64(N_30058),
                                                               np.int64(i32_res_30070),
                                                               np.int64(num_groups_34216),
                                                               images_mem_43378,
                                                               mem_44010,
                                                               np.int64(groups_per_segment_45245),
                                                               np.int64(elements_per_thread_45246),
                                                               np.int64(virt_num_groups_45247),
                                                               np.int64(threads_per_segment_45249),
                                                               group_res_arr_mem_45250,
                                                               mainDetailedzicounter_mem_45252)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_34204_var,
                                       ((np.long(num_groups_34216) * np.long(segred_group_sizze_34215)),),
                                       (np.long(segred_group_sizze_34215),))
            if synchronous:
              sync(self)
        mem_44013 = opencl_alloc(self, bytes_43923, "mem_44013")
        if slt64((i32_res_30070 * np.int64(2)), segred_group_sizze_34229):
          segment_sizze_nonzzero_45284 = smax64(np.int64(1), i32_res_30070)
          num_threads_45285 = (num_groups_34230 * segred_group_sizze_34229)
          if ((1 * (np.long(num_groups_34230) * np.long(segred_group_sizze_34229))) != 0):
            self.mainDetailedzisegred_small_34183_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34229))),
                                                               np.int64(N_30056),
                                                               np.int64(m_30057),
                                                               np.int64(i32_res_30070),
                                                               np.int64(num_groups_34230),
                                                               defunc_4_map_res_mem_43943,
                                                               mem_44010,
                                                               mem_44013,
                                                               np.int64(segment_sizze_nonzzero_45284))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_34183_var,
                                       ((np.long(num_groups_34230) * np.long(segred_group_sizze_34229)),),
                                       (np.long(segred_group_sizze_34229),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45305 = sdiv_up64(num_groups_34230,
                                               smax64(np.int64(1), m_30057))
          elements_per_thread_45306 = sdiv_up64(i32_res_30070,
                                                (segred_group_sizze_34229 * groups_per_segment_45305))
          virt_num_groups_45307 = (groups_per_segment_45305 * m_30057)
          num_threads_45308 = (num_groups_34230 * segred_group_sizze_34229)
          threads_per_segment_45309 = (groups_per_segment_45305 * segred_group_sizze_34229)
          group_res_arr_mem_45310 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34229 * virt_num_groups_45307)),
                                                 "group_res_arr_mem_45310")
          mainDetailedzicounter_mem_45312 = self.mainDetailedzicounter_mem_45312
          if ((1 * (np.long(num_groups_34230) * np.long(segred_group_sizze_34229))) != 0):
            self.mainDetailedzisegred_large_34183_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34229))),
                                                               np.int64(N_30056),
                                                               np.int64(i32_res_30070),
                                                               np.int64(num_groups_34230),
                                                               defunc_4_map_res_mem_43943,
                                                               mem_44010,
                                                               mem_44013,
                                                               np.int64(groups_per_segment_45305),
                                                               np.int64(elements_per_thread_45306),
                                                               np.int64(virt_num_groups_45307),
                                                               np.int64(threads_per_segment_45309),
                                                               group_res_arr_mem_45310,
                                                               mainDetailedzicounter_mem_45312)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_34183_var,
                                       ((np.long(num_groups_34230) * np.long(segred_group_sizze_34229)),),
                                       (np.long(segred_group_sizze_34229),))
            if synchronous:
              sync(self)
        segmap_usable_groups_34246 = sdiv_up64(m_30057,
                                               segmap_group_sizze_34245)
        mem_44016 = opencl_alloc(self, bytes_43923, "mem_44016")
        mem_44018 = opencl_alloc(self, bytes_43923, "mem_44018")
        if ((1 * (np.long(segmap_usable_groups_34246) * np.long(segmap_group_sizze_34245))) != 0):
          self.mainDetailedzisegmap_34160_var.set_args(self.global_failure,
                                                       np.int64(m_30057),
                                                       np.float32(hfrac_30063),
                                                       np.int32(k2p2_30072),
                                                       mem_44010, mem_44013,
                                                       mem_44016, mem_44018)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_34160_var,
                                     ((np.long(segmap_usable_groups_34246) * np.long(segmap_group_sizze_34245)),),
                                     (np.long(segmap_group_sizze_34245),))
          if synchronous:
            sync(self)
        mem_44013 = None
        defunc_3_map_res_mem_44019 = mem_44016
        defunc_3_map_res_mem_44020 = mem_44010
        defunc_3_map_res_mem_44021 = mem_44018
      defunc_3_map_res_mem_44022 = defunc_3_map_res_mem_44019
      defunc_3_map_res_mem_44023 = defunc_3_map_res_mem_44020
      defunc_3_map_res_mem_44024 = defunc_3_map_res_mem_44021
    segred_group_sizze_34266 = self.sizes["mainDetailed.segred_group_size_34265"]
    max_num_groups_45351 = self.sizes["mainDetailed.segred_num_groups_34267"]
    num_groups_34268 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30057,
                                                            segred_group_sizze_34266),
                                                  sext_i32_i64(max_num_groups_45351))))
    mem_44027 = opencl_alloc(self, np.int64(4), "mem_44027")
    mainDetailedzicounter_mem_45352 = self.mainDetailedzicounter_mem_45352
    group_res_arr_mem_45354 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_34266 * num_groups_34268)),
                                           "group_res_arr_mem_45354")
    num_threads_45356 = (num_groups_34268 * segred_group_sizze_34266)
    if ((1 * (np.long(num_groups_34268) * np.long(segred_group_sizze_34266))) != 0):
      self.mainDetailedzisegred_nonseg_34273_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34266))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_30057),
                                                          np.int64(num_groups_34268),
                                                          defunc_3_map_res_mem_44022,
                                                          mem_44027,
                                                          mainDetailedzicounter_mem_45352,
                                                          group_res_arr_mem_45354,
                                                          np.int64(num_threads_45356))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_34273_var,
                                 ((np.long(num_groups_34268) * np.long(segred_group_sizze_34266)),),
                                 (np.long(segred_group_sizze_34266),))
      if synchronous:
        sync(self)
    read_res_45892 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45892, mem_44027,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_30413 = read_res_45892[0]
    mem_44027 = None
    i32_res_30418 = sext_i32_i64(defunc_2_reduce_comm_res_30413)
    bounds_invalid_upwards_30419 = slt64(i32_res_30418, np.int64(0))
    valid_30420 = not(bounds_invalid_upwards_30419)
    range_valid_c_30421 = True
    assert valid_30420, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:111:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:106:17-113:24\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_30418,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_34305 = (self.sizes["mainDetailed.suff_outer_par_32"] <= m_30057)
    segmap_group_sizze_34328 = self.sizes["mainDetailed.segmap_group_size_34309"]
    nest_sizze_34371 = (m_30057 * i32_res_30418)
    segred_group_sizze_34372 = self.sizes["mainDetailed.segred_group_size_34349"]
    max_num_groups_45382 = self.sizes["mainDetailed.segred_num_groups_34351"]
    num_groups_34373 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34371,
                                                            segred_group_sizze_34372),
                                                  sext_i32_i64(max_num_groups_45382))))
    bytes_44030 = (np.int64(4) * segmap_group_sizze_34328)
    local_memory_capacity_45453 = self.max_local_memory
    if (sle64((bytes_44030 + bytes_44030),
              sext_i32_i64(local_memory_capacity_45453)) and suff_outer_par_34305):
      segmap_usable_groups_34329 = sdiv_up64(m_30057, segmap_group_sizze_34328)
      num_whole_tiles_43066 = squot64(i32_res_30418, segmap_group_sizze_34328)
      residual_input_43165 = srem64(i32_res_30418, segmap_group_sizze_34328)
      cond_43166 = (residual_input_43165 == np.int64(0))
      mem_44069 = opencl_alloc(self, bytes_43923, "mem_44069")
      if ((1 * (np.long(segmap_usable_groups_34329) * np.long(segmap_group_sizze_34328))) != 0):
        self.mainDetailedzisegmap_intragroup_43046_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44030)),
                                                                cl.LocalMemory(np.long(bytes_44030)),
                                                                np.int64(N_30056),
                                                                np.int64(m_30057),
                                                                np.int64(i32_res_30418),
                                                                np.int64(num_whole_tiles_43066),
                                                                np.int64(residual_input_43165),
                                                                np.byte(cond_43166),
                                                                defunc_4_map_res_mem_43943,
                                                                defunc_3_map_res_mem_44022,
                                                                defunc_3_map_res_mem_44023,
                                                                mem_44069)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_43046_var,
                                   ((np.long(segmap_usable_groups_34329) * np.long(segmap_group_sizze_34328)),),
                                   (np.long(segmap_group_sizze_34328),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44073 = mem_44069
    else:
      mem_44072 = opencl_alloc(self, bytes_43923, "mem_44072")
      if slt64((i32_res_30418 * np.int64(2)), segred_group_sizze_34372):
        segment_sizze_nonzzero_45393 = smax64(np.int64(1), i32_res_30418)
        num_threads_45394 = (num_groups_34373 * segred_group_sizze_34372)
        if ((1 * (np.long(num_groups_34373) * np.long(segred_group_sizze_34372))) != 0):
          self.mainDetailedzisegred_small_34355_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34372))),
                                                             np.int64(N_30056),
                                                             np.int64(m_30057),
                                                             np.int64(i32_res_30418),
                                                             np.int64(num_groups_34373),
                                                             defunc_4_map_res_mem_43943,
                                                             defunc_3_map_res_mem_44022,
                                                             defunc_3_map_res_mem_44023,
                                                             mem_44072,
                                                             np.int64(segment_sizze_nonzzero_45393))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_34355_var,
                                     ((np.long(num_groups_34373) * np.long(segred_group_sizze_34372)),),
                                     (np.long(segred_group_sizze_34372),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45414 = sdiv_up64(num_groups_34373,
                                             smax64(np.int64(1), m_30057))
        elements_per_thread_45415 = sdiv_up64(i32_res_30418,
                                              (segred_group_sizze_34372 * groups_per_segment_45414))
        virt_num_groups_45416 = (groups_per_segment_45414 * m_30057)
        num_threads_45417 = (num_groups_34373 * segred_group_sizze_34372)
        threads_per_segment_45418 = (groups_per_segment_45414 * segred_group_sizze_34372)
        group_res_arr_mem_45419 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_34372 * virt_num_groups_45416)),
                                               "group_res_arr_mem_45419")
        mainDetailedzicounter_mem_45421 = self.mainDetailedzicounter_mem_45421
        if ((1 * (np.long(num_groups_34373) * np.long(segred_group_sizze_34372))) != 0):
          self.mainDetailedzisegred_large_34355_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34372))),
                                                             np.int64(N_30056),
                                                             np.int64(i32_res_30418),
                                                             np.int64(num_groups_34373),
                                                             defunc_4_map_res_mem_43943,
                                                             defunc_3_map_res_mem_44022,
                                                             defunc_3_map_res_mem_44023,
                                                             mem_44072,
                                                             np.int64(groups_per_segment_45414),
                                                             np.int64(elements_per_thread_45415),
                                                             np.int64(virt_num_groups_45416),
                                                             np.int64(threads_per_segment_45418),
                                                             group_res_arr_mem_45419,
                                                             mainDetailedzicounter_mem_45421)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_34355_var,
                                     ((np.long(num_groups_34373) * np.long(segred_group_sizze_34372)),),
                                     (np.long(segred_group_sizze_34372),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44073 = mem_44072
    iota32_arg_30443 = (N_30056 - i32_res_30070)
    bounds_invalid_upwards_30444 = slt64(iota32_arg_30443, np.int64(0))
    valid_30445 = not(bounds_invalid_upwards_30444)
    range_valid_c_30446 = True
    assert valid_30445, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:119:22-35\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_30443,
                                                                                                                                                                                                                                      " is invalid."))
    x_30448 = (np.int32(1) + n_30061)
    i_30449 = (n_30061 - np.int32(1))
    i_30450 = sext_i32_i64(i_30449)
    x_30451 = sle64(np.int64(0), i_30450)
    y_30452 = slt64(i_30450, N_30056)
    bounds_check_30453 = (x_30451 and y_30452)
    index_certs_30454 = True
    assert bounds_check_30453, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:117:64-84\n   #1  bfastfinal.fut:115:15-119:36\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                 i_30450,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_30056,
                                                                                                                                                                                                                 "]."))
    read_res_45894 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45894, mappingindices_mem_43377,
                    device_offset=(np.long(i_30450) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_30455 = read_res_45894[0]
    i32_res_30456 = sitofp_i32_f32(r32_arg_30455)
    range_valid_c_30457 = True
    assert valid_30445, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:131:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_30443,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_34450 = self.sizes["mainDetailed.segmap_group_size_34433"]
    segmap_usable_groups_34451 = sdiv_up64(iota32_arg_30443,
                                           segmap_group_sizze_34450)
    bytes_44075 = (np.int64(4) * iota32_arg_30443)
    mem_44076 = opencl_alloc(self, bytes_44075, "mem_44076")
    mem_44078 = opencl_alloc(self, bytes_44075, "mem_44078")
    if ((1 * (np.long(segmap_usable_groups_34451) * np.long(segmap_group_sizze_34450))) != 0):
      self.mainDetailedzisegmap_34431_var.set_args(self.global_failure,
                                                   np.float32(lam_30064),
                                                   np.int64(iota32_arg_30443),
                                                   np.int32(x_30448),
                                                   np.float32(i32_res_30456),
                                                   mappingindices_mem_43377,
                                                   mem_44076, mem_44078)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_34431_var,
                                 ((np.long(segmap_usable_groups_34451) * np.long(segmap_group_sizze_34450)),),
                                 (np.long(segmap_group_sizze_34450),))
      if synchronous:
        sync(self)
    mem_44076 = None
    cond_30473 = (iota32_arg_30443 == np.int64(0))
    if cond_30473:
      iters_30474 = np.int32(0)
    else:
      iters_30474 = np.int32(16)
    loop_nonempty_30475 = slt32(np.int32(0), iters_30474)
    i_30476 = (iota32_arg_30443 - np.int64(1))
    x_30477 = sle64(np.int64(0), i_30476)
    y_30478 = slt64(i_30476, iota32_arg_30443)
    bounds_check_30479 = (x_30477 and y_30478)
    loop_not_taken_30480 = not(loop_nonempty_30475)
    protect_assert_disj_30481 = (bounds_check_30479 or loop_not_taken_30480)
    index_certs_30482 = True
    assert protect_assert_disj_30481, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  lib/github.com/diku-dk/sorts/radix_sort.fut:25:24-35\n   #2  lib/github.com/diku-dk/sorts/radix_sort.fut:53:31-62\n   #3  lib/github.com/diku-dk/sorts/radix_sort.fut:104:6-36\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:146:29-151:72\n   #6  /prelude/functional.fut:9:42-44\n   #7  bfastfinal.fut:124:50-167:9\n   #8  bfastfinal.fut:177:3-56\n   #9  bfastfinal.fut:173:1-177:56\n" % ("Index [",
i_30476,
out of bounds for array of shape [",
iota32_arg_30443,

    suff_outer_par_34468 = (self.sizes["mainDetailed.suff_outer_par_34"] <= m_30057)
    fits_35015 = sle64(iota32_arg_30443, max_group_sizze_32530)
    suff_intra_par_35013 = (self.sizes["mainDetailed.suff_intra_par_35"] <= iota32_arg_30443)
    intra_suff_and_fits_35016 = (suff_intra_par_35013 and fits_35015)
    segmap_group_sizze_34759 = self.sizes["mainDetailed.segmap_group_size_34508"]
    max_num_groups_45459 = self.sizes["mainDetailed.segmap_num_groups_34510"]
    num_groups_34760 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30057,
                                                            segmap_group_sizze_34759),
                                                  sext_i32_i64(max_num_groups_45459))))
    segmap_group_sizze_36122 = self.sizes["mainDetailed.segmap_group_size_36102"]
    max_num_groups_45460 = self.sizes["mainDetailed.segmap_num_groups_36104"]
    num_groups_36123 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30057,
                                                            segmap_group_sizze_36122),
                                                  sext_i32_i64(max_num_groups_45460))))
    nest_sizze_36144 = (m_30057 * iota32_arg_30443)
    segscan_group_sizze_36145 = self.sizes["mainDetailed.segscan_group_size_36061"]
    max_num_groups_45461 = self.sizes["mainDetailed.segscan_num_groups_36063"]
    num_groups_36146 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36144,
                                                            segscan_group_sizze_36145),
                                                  sext_i32_i64(max_num_groups_45461))))
    segred_group_sizze_36183 = self.sizes["mainDetailed.segred_group_size_36007"]
    max_num_groups_45462 = self.sizes["mainDetailed.segred_num_groups_36009"]
    num_groups_36184 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36144,
                                                            segred_group_sizze_36183),
                                                  sext_i32_i64(max_num_groups_45462))))
    segmap_group_sizze_36223 = self.sizes["mainDetailed.segmap_group_size_35981"]
    segmap_group_sizze_36246 = self.sizes["mainDetailed.segmap_group_size_35964"]
    segmap_group_sizze_36264 = self.sizes["mainDetailed.segmap_group_size_35906"]
    suff_intra_par_36305 = (self.sizes["mainDetailed.suff_intra_par_38"] <= iota32_arg_30443)
    intra_suff_and_fits_36306 = (fits_35015 and suff_intra_par_36305)
    segscan_group_sizze_36389 = self.sizes["mainDetailed.segscan_group_size_35706"]
    max_num_groups_45463 = self.sizes["mainDetailed.segscan_num_groups_35708"]
    num_groups_36390 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36144,
                                                            segscan_group_sizze_36389),
                                                  sext_i32_i64(max_num_groups_45463))))
    segmap_group_sizze_36458 = self.sizes["mainDetailed.segmap_group_size_35656"]
    segmap_group_sizze_36495 = self.sizes["mainDetailed.segmap_group_size_35326"]
    bytes_44079 = (np.int64(4) * nest_sizze_36144)
    mem_44081 = opencl_alloc(self, bytes_44079, "mem_44081")
    self.futhark_builtinzhreplicate_f32(mem_44081, (m_30057 * iota32_arg_30443),
                                        np.nan)
    segmap_group_sizze_36563 = self.sizes["mainDetailed.segmap_group_size_35274"]
    segmap_usable_groups_36459 = sdiv_up_safe64(nest_sizze_36144,
                                                segmap_group_sizze_36458)
    bytes_44116 = (np.int64(8) * iota32_arg_30443)
    bytes_44347 = (np.int64(8) * nest_sizze_36144)
    double_buffer_sizze_44481 = (np.int64(4) * iota32_arg_30443)
    double_buffer_sizze_44485 = (np.int64(4) * iota32_arg_30443)
    num_threads_44533 = (segmap_group_sizze_34759 * num_groups_34760)
    total_sizze_44534 = (bytes_44075 * num_threads_44533)
    total_sizze_44535 = (bytes_44075 * num_threads_44533)
    total_sizze_44536 = (bytes_44116 * num_threads_44533)
    total_sizze_44537 = (bytes_44116 * num_threads_44533)
    total_sizze_44538 = (bytes_44116 * num_threads_44533)
    total_sizze_44539 = (bytes_44116 * num_threads_44533)
    total_sizze_44540 = (bytes_44075 * num_threads_44533)
    total_sizze_44541 = (bytes_44075 * num_threads_44533)
    total_sizze_44542 = (bytes_44075 * num_threads_44533)
    total_sizze_44543 = (double_buffer_sizze_44481 * num_threads_44533)
    local_memory_capacity_45867 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45867)) and suff_outer_par_34468):
      mem_44221 = opencl_alloc(self, bytes_44079, "mem_44221")
      mem_44224 = opencl_alloc(self, bytes_44079, "mem_44224")
      mem_44226 = opencl_alloc(self, bytes_43923, "mem_44226")
      mem_44228 = opencl_alloc(self, bytes_43923, "mem_44228")
      mem_44230 = opencl_alloc(self, bytes_43923, "mem_44230")
      mem_44084 = opencl_alloc(self, total_sizze_44534, "mem_44084")
      mem_44098 = opencl_alloc(self, total_sizze_44535, "mem_44098")
      mem_44117 = opencl_alloc(self, total_sizze_44536, "mem_44117")
      mem_44119 = opencl_alloc(self, total_sizze_44537, "mem_44119")
      mem_44121 = opencl_alloc(self, total_sizze_44538, "mem_44121")
      mem_44123 = opencl_alloc(self, total_sizze_44539, "mem_44123")
      mem_44125 = opencl_alloc(self, total_sizze_44540, "mem_44125")
      mem_44187 = opencl_alloc(self, total_sizze_44541, "mem_44187")
      mem_44206 = opencl_alloc(self, total_sizze_44542, "mem_44206")
      double_buffer_mem_44479 = opencl_alloc(self, total_sizze_44543,
                                             "double_buffer_mem_44479")
      if ((1 * (np.long(num_groups_34760) * np.long(segmap_group_sizze_34759))) != 0):
        self.mainDetailedzisegmap_34506_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(N_30056),
                                                     np.int64(m_30057),
                                                     np.int32(n_30061),
                                                     np.int64(iota32_arg_30443),
                                                     np.int32(iters_30474),
                                                     np.int64(i_30476),
                                                     np.int64(num_groups_34760),
                                                     defunc_4_map_res_mem_43942,
                                                     defunc_4_map_res_mem_43943,
                                                     defunc_4_map_res_mem_43944,
                                                     defunc_3_map_res_mem_44022,
                                                     defunc_3_map_res_mem_44023,
                                                     defunc_3_map_res_mem_44024,
                                                     defunc_0_f_res_mem_44073,
                                                     mem_44078, mem_44084,
                                                     mem_44098, mem_44117,
                                                     mem_44119, mem_44121,
                                                     mem_44123, mem_44125,
                                                     mem_44187, mem_44206,
                                                     mem_44221, mem_44224,
                                                     mem_44226, mem_44228,
                                                     mem_44230,
                                                     double_buffer_mem_44479)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_34506_var,
                                   ((np.long(num_groups_34760) * np.long(segmap_group_sizze_34759)),),
                                   (np.long(segmap_group_sizze_34759),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_44084 = None
      mem_44098 = None
      mem_44117 = None
      mem_44119 = None
      mem_44121 = None
      mem_44123 = None
      mem_44125 = None
      mem_44187 = None
      mem_44206 = None
      double_buffer_mem_44479 = None
      mem_44390 = opencl_alloc(self, bytes_44079, "mem_44390")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44390, np.int64(0),
                                                  mem_44221, np.int64(0),
                                                  np.int64(1), m_30057,
                                                  iota32_arg_30443)
      mem_44221 = None
      mem_44394 = opencl_alloc(self, bytes_44079, "mem_44394")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44394, np.int64(0),
                                                  mem_44224, np.int64(0),
                                                  np.int64(1), m_30057,
                                                  iota32_arg_30443)
      mem_44224 = None
      defunc_0_f_res_mem_44396 = mem_44390
      defunc_0_f_res_mem_44397 = mem_44394
      defunc_0_f_res_mem_44398 = mem_44226
      defunc_0_f_res_mem_44399 = mem_44228
      defunc_0_f_res_mem_44400 = mem_44230
    else:
      local_memory_capacity_45866 = self.max_local_memory
      if (sle64((((((((((((((bytes_44075 + bytes_44075) + (np.int32(1) * iota32_arg_30443)) + (np.int32(4) * iota32_arg_30443)) + (np.int32(4) * iota32_arg_30443)) + bytes_44075) + bytes_44116) + bytes_44116) + bytes_44116) + bytes_44116) + bytes_44075) + double_buffer_sizze_44485) + bytes_44075) + bytes_44075),
                sext_i32_i64(local_memory_capacity_45866)) and intra_suff_and_fits_35016):
        mem_44274 = opencl_alloc(self, bytes_44079, "mem_44274")
        mem_44277 = opencl_alloc(self, bytes_44079, "mem_44277")
        mem_44279 = opencl_alloc(self, bytes_43923, "mem_44279")
        mem_44281 = opencl_alloc(self, bytes_43923, "mem_44281")
        mem_44283 = opencl_alloc(self, bytes_43923, "mem_44283")
        if ((1 * (np.long(m_30057) * np.long(iota32_arg_30443))) != 0):
          self.mainDetailedzisegmap_intragroup_34504_var.set_args(self.global_failure,
                                                                  self.failure_is_an_option,
                                                                  self.global_failure_args,
                                                                  cl.LocalMemory(np.long(bytes_44075)),
                                                                  cl.LocalMemory(np.long(bytes_44075)),
                                                                  cl.LocalMemory(np.long(double_buffer_sizze_44485)),
                                                                  cl.LocalMemory(np.long(bytes_44075)),
                                                                  cl.LocalMemory(np.long(bytes_44116)),
                                                                  cl.LocalMemory(np.long(bytes_44116)),
                                                                  cl.LocalMemory(np.long(bytes_44116)),
                                                                  cl.LocalMemory(np.long(bytes_44116)),
                                                                  cl.LocalMemory(np.long(bytes_44075)),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_30443))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_30443))),
                                                                  cl.LocalMemory(np.long((np.int32(1) * iota32_arg_30443))),
                                                                  cl.LocalMemory(np.long(bytes_44075)),
                                                                  cl.LocalMemory(np.long(bytes_44075)),
                                                                  np.int64(N_30056),
                                                                  np.int32(n_30061),
                                                                  np.int64(iota32_arg_30443),
                                                                  np.int32(iters_30474),
                                                                  np.int64(i_30476),
                                                                  defunc_4_map_res_mem_43942,
                                                                  defunc_4_map_res_mem_43943,
                                                                  defunc_4_map_res_mem_43944,
                                                                  defunc_3_map_res_mem_44022,
                                                                  defunc_3_map_res_mem_44023,
                                                                  defunc_3_map_res_mem_44024,
                                                                  defunc_0_f_res_mem_44073,
                                                                  mem_44078,
                                                                  mem_44274,
                                                                  mem_44277,
                                                                  mem_44279,
                                                                  mem_44281,
                                                                  mem_44283)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_34504_var,
                                     ((np.long(m_30057) * np.long(iota32_arg_30443)),),
                                     (np.long(iota32_arg_30443),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_0_f_res_mem_44383 = mem_44274
        defunc_0_f_res_mem_44384 = mem_44277
        defunc_0_f_res_mem_44385 = mem_44279
        defunc_0_f_res_mem_44386 = mem_44281
        defunc_0_f_res_mem_44387 = mem_44283
      else:
        mem_44286 = opencl_alloc(self, bytes_43923, "mem_44286")
        mem_44288 = opencl_alloc(self, bytes_43923, "mem_44288")
        if ((1 * (np.long(num_groups_36123) * np.long(segmap_group_sizze_36122))) != 0):
          self.mainDetailedzisegmap_36100_var.set_args(self.global_failure,
                                                       np.int64(m_30057),
                                                       np.int64(num_groups_36123),
                                                       defunc_4_map_res_mem_43942,
                                                       defunc_3_map_res_mem_44023,
                                                       defunc_3_map_res_mem_44024,
                                                       mem_44286, mem_44288)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_36100_var,
                                     ((np.long(num_groups_36123) * np.long(segmap_group_sizze_36122)),),
                                     (np.long(segmap_group_sizze_36122),))
          if synchronous:
            sync(self)
        mem_44292 = opencl_alloc(self, bytes_44079, "mem_44292")
        if slt64(np.int64(0), (m_30057 * iota32_arg_30443)):
          stage1_max_num_groups_45555 = self.max_group_size
          stage1_num_groups_45556 = smin64(stage1_max_num_groups_45555,
                                           num_groups_36146)
          num_threads_45557 = sext_i64_i32((stage1_num_groups_45556 * segscan_group_sizze_36145))
          if ((1 * (np.long(stage1_num_groups_45556) * np.long(segscan_group_sizze_36145))) != 0):
            self.mainDetailedziscan_stage1_36067_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * segscan_group_sizze_36145)))),
                                                              np.int64(N_30056),
                                                              np.int64(m_30057),
                                                              np.int64(iota32_arg_30443),
                                                              defunc_4_map_res_mem_43943,
                                                              defunc_3_map_res_mem_44022,
                                                              defunc_3_map_res_mem_44023,
                                                              defunc_0_f_res_mem_44073,
                                                              mem_44288,
                                                              mem_44292,
                                                              np.int32(num_threads_45557))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage1_36067_var,
                                       ((np.long(stage1_num_groups_45556) * np.long(segscan_group_sizze_36145)),),
                                       (np.long(segscan_group_sizze_36145),))
            if synchronous:
              sync(self)
          if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45556))) != 0):
            self.mainDetailedziscan_stage2_36067_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * stage1_num_groups_45556)))),
                                                              np.int64(m_30057),
                                                              np.int64(iota32_arg_30443),
                                                              mem_44292,
                                                              np.int64(stage1_num_groups_45556),
                                                              np.int32(num_threads_45557))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage2_36067_var,
                                       ((np.long(np.int64(1)) * np.long(stage1_num_groups_45556)),),
                                       (np.long(stage1_num_groups_45556),))
            if synchronous:
              sync(self)
          required_groups_45599 = sext_i64_i32(sdiv_up64((m_30057 * iota32_arg_30443),
                                                         segscan_group_sizze_36145))
          if ((1 * (np.long(num_groups_36146) * np.long(segscan_group_sizze_36145))) != 0):
            self.mainDetailedziscan_stage3_36067_var.set_args(self.global_failure,
                                                              np.int64(m_30057),
                                                              np.int64(iota32_arg_30443),
                                                              np.int64(num_groups_36146),
                                                              mem_44292,
                                                              np.int32(num_threads_45557),
                                                              np.int32(required_groups_45599))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage3_36067_var,
                                       ((np.long(num_groups_36146) * np.long(segscan_group_sizze_36145)),),
                                       (np.long(segscan_group_sizze_36145),))
            if synchronous:
              sync(self)
        mem_44295 = opencl_alloc(self, m_30057, "mem_44295")
        mem_44297 = opencl_alloc(self, bytes_43923, "mem_44297")
        mem_44299 = opencl_alloc(self, bytes_43923, "mem_44299")
        mem_44302 = opencl_alloc(self, bytes_44079, "mem_44302")
        if slt64((iota32_arg_30443 * np.int64(2)), segred_group_sizze_36183):
          segment_sizze_nonzzero_45611 = smax64(np.int64(1), iota32_arg_30443)
          num_threads_45612 = (num_groups_36184 * segred_group_sizze_36183)
          if ((1 * (np.long(num_groups_36184) * np.long(segred_group_sizze_36183))) != 0):
            self.mainDetailedzisegred_small_36013_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36183))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36183))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_36183))),
                                                               np.int64(m_30057),
                                                               np.int64(iota32_arg_30443),
                                                               np.int64(num_groups_36184),
                                                               mem_44078,
                                                               mem_44286,
                                                               mem_44288,
                                                               mem_44292,
                                                               mem_44295,
                                                               mem_44297,
                                                               mem_44299,
                                                               mem_44302,
                                                               np.int64(segment_sizze_nonzzero_45611))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_36013_var,
                                       ((np.long(num_groups_36184) * np.long(segred_group_sizze_36183)),),
                                       (np.long(segred_group_sizze_36183),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45647 = sdiv_up64(num_groups_36184,
                                               smax64(np.int64(1), m_30057))
          elements_per_thread_45648 = sdiv_up64(iota32_arg_30443,
                                                (segred_group_sizze_36183 * groups_per_segment_45647))
          virt_num_groups_45649 = (groups_per_segment_45647 * m_30057)
          num_threads_45650 = (num_groups_36184 * segred_group_sizze_36183)
          threads_per_segment_45651 = (groups_per_segment_45647 * segred_group_sizze_36183)
          group_res_arr_mem_45652 = opencl_alloc(self,
                                                 (np.int32(1) * (segred_group_sizze_36183 * virt_num_groups_45649)),
                                                 "group_res_arr_mem_45652")
          group_res_arr_mem_45654 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36183 * virt_num_groups_45649)),
                                                 "group_res_arr_mem_45654")
          group_res_arr_mem_45656 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36183 * virt_num_groups_45649)),
                                                 "group_res_arr_mem_45656")
          mainDetailedzicounter_mem_45658 = self.mainDetailedzicounter_mem_45658
          if ((1 * (np.long(num_groups_36184) * np.long(segred_group_sizze_36183))) != 0):
            self.mainDetailedzisegred_large_36013_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36183))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36183))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_36183))),
                                                               np.int64(iota32_arg_30443),
                                                               np.int64(num_groups_36184),
                                                               mem_44078,
                                                               mem_44286,
                                                               mem_44288,
                                                               mem_44292,
                                                               mem_44295,
                                                               mem_44297,
                                                               mem_44299,
                                                               mem_44302,
                                                               np.int64(groups_per_segment_45647),
                                                               np.int64(elements_per_thread_45648),
                                                               np.int64(virt_num_groups_45649),
                                                               group_res_arr_mem_45652,
                                                               group_res_arr_mem_45654,
                                                               group_res_arr_mem_45656,
                                                               mainDetailedzicounter_mem_45658)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_36013_var,
                                       ((np.long(num_groups_36184) * np.long(segred_group_sizze_36183)),),
                                       (np.long(segred_group_sizze_36183),))
            if synchronous:
              sync(self)
        mem_44286 = None
        mem_44292 = None
        segmap_usable_groups_36224 = sdiv_up64(m_30057,
                                               segmap_group_sizze_36223)
        mem_44305 = opencl_alloc(self, m_30057, "mem_44305")
        mem_44307 = opencl_alloc(self, bytes_43923, "mem_44307")
        if ((1 * (np.long(segmap_usable_groups_36224) * np.long(segmap_group_sizze_36223))) != 0):
          self.mainDetailedzisegmap_35979_var.set_args(self.global_failure,
                                                       np.int64(m_30057),
                                                       mem_44295, mem_44297,
                                                       mem_44305, mem_44307)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35979_var,
                                     ((np.long(segmap_usable_groups_36224) * np.long(segmap_group_sizze_36223)),),
                                     (np.long(segmap_group_sizze_36223),))
          if synchronous:
            sync(self)
        mem_44295 = None
        mem_44297 = None
        segmap_usable_groups_36247 = sdiv_up64(m_30057,
                                               segmap_group_sizze_36246)
        mem_44310 = opencl_alloc(self, bytes_43923, "mem_44310")
        if ((1 * (np.long(segmap_usable_groups_36247) * np.long(segmap_group_sizze_36246))) != 0):
          self.mainDetailedzisegmap_35962_var.set_args(self.global_failure,
                                                       np.int64(m_30057),
                                                       mem_44288, mem_44299,
                                                       mem_44310)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35962_var,
                                     ((np.long(segmap_usable_groups_36247) * np.long(segmap_group_sizze_36246)),),
                                     (np.long(segmap_group_sizze_36246),))
          if synchronous:
            sync(self)
        mem_44299 = None
        segmap_usable_groups_36265 = sdiv_up64(nest_sizze_36144,
                                               segmap_group_sizze_36264)
        mem_44314 = opencl_alloc(self, bytes_44079, "mem_44314")
        if ((1 * (np.long(segmap_usable_groups_36265) * np.long(segmap_group_sizze_36264))) != 0):
          self.mainDetailedzisegmap_35903_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       np.int64(N_30056),
                                                       np.int64(m_30057),
                                                       np.int64(iota32_arg_30443),
                                                       defunc_4_map_res_mem_43943,
                                                       defunc_3_map_res_mem_44023,
                                                       mem_44288, mem_44314)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35903_var,
                                     ((np.long(segmap_usable_groups_36265) * np.long(segmap_group_sizze_36264)),),
                                     (np.long(segmap_group_sizze_36264),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_param_44322 = mem_44314
        i_36292 = np.int32(0)
        one_45897 = np.int32(1)
        for counter_45896 in range(iters_30474):
          defunc_2_radix_sort_step_arg_36294 = (np.int32(2) * i_36292)
          defunc_0_get_bit_arg_36295 = (np.int32(1) + defunc_2_radix_sort_step_arg_36294)
          cond_f_res_36296 = (defunc_0_get_bit_arg_36295 == np.int32(31))
          cond_f_res_36297 = (defunc_2_radix_sort_step_arg_36294 == np.int32(31))
          local_memory_capacity_45855 = self.max_local_memory
          if (sle64((((((bytes_44116 + bytes_44116) + bytes_44116) + bytes_44116) + bytes_44075) + bytes_44075),
                    sext_i32_i64(local_memory_capacity_45855)) and intra_suff_and_fits_36306):
            mem_44327 = opencl_alloc(self, bytes_44079, "mem_44327")
            self.futhark_builtinzhgpu_map_transpose_f32(mem_44327, np.int64(0),
                                                        mem_param_44322,
                                                        np.int64(0),
                                                        np.int64(1),
                                                        iota32_arg_30443,
                                                        m_30057)
            mem_44345 = opencl_alloc(self, bytes_44079, "mem_44345")
            if ((1 * (np.long(m_30057) * np.long(iota32_arg_30443))) != 0):
              self.mainDetailedzisegmap_intragroup_35388_var.set_args(self.global_failure,
                                                                      cl.LocalMemory(np.long(bytes_44075)),
                                                                      cl.LocalMemory(np.long(bytes_44075)),
                                                                      cl.LocalMemory(np.long(bytes_44116)),
                                                                      cl.LocalMemory(np.long(bytes_44116)),
                                                                      cl.LocalMemory(np.long(bytes_44116)),
                                                                      cl.LocalMemory(np.long(bytes_44116)),
                                                                      np.int64(m_30057),
                                                                      np.int64(iota32_arg_30443),
                                                                      np.int64(i_30476),
                                                                      np.int32(defunc_2_radix_sort_step_arg_36294),
                                                                      np.int32(defunc_0_get_bit_arg_36295),
                                                                      np.byte(cond_f_res_36296),
                                                                      np.byte(cond_f_res_36297),
                                                                      mem_param_44322,
                                                                      mem_44327,
                                                                      mem_44345)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegmap_intragroup_35388_var,
                                         ((np.long(m_30057) * np.long(iota32_arg_30443)),),
                                         (np.long(iota32_arg_30443),))
              if synchronous:
                sync(self)
            mem_44327 = None
            defunc_2_radix_sort_res_mem_44366 = mem_44345
          else:
            mem_44349 = opencl_alloc(self, bytes_44347, "mem_44349")
            mem_44352 = opencl_alloc(self, bytes_44347, "mem_44352")
            mem_44355 = opencl_alloc(self, bytes_44347, "mem_44355")
            mem_44358 = opencl_alloc(self, bytes_44347, "mem_44358")
            mem_44361 = opencl_alloc(self, bytes_44079, "mem_44361")
            if slt64(np.int64(0), (m_30057 * iota32_arg_30443)):
              stage1_max_num_groups_45755 = self.max_group_size
              stage1_num_groups_45756 = smin64(stage1_max_num_groups_45755,
                                               num_groups_36390)
              num_threads_45757 = sext_i64_i32((stage1_num_groups_45756 * segscan_group_sizze_36389))
              if ((1 * (np.long(stage1_num_groups_45756) * np.long(segscan_group_sizze_36389))) != 0):
                self.mainDetailedziscan_stage1_35712_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36389)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36389)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36389)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36389)))),
                                                                  np.int64(m_30057),
                                                                  np.int64(iota32_arg_30443),
                                                                  np.int32(defunc_2_radix_sort_step_arg_36294),
                                                                  np.int32(defunc_0_get_bit_arg_36295),
                                                                  np.byte(cond_f_res_36296),
                                                                  np.byte(cond_f_res_36297),
                                                                  mem_param_44322,
                                                                  mem_44349,
                                                                  mem_44352,
                                                                  mem_44355,
                                                                  mem_44358,
                                                                  mem_44361,
                                                                  np.int32(num_threads_45757))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainDetailedziscan_stage1_35712_var,
                                           ((np.long(stage1_num_groups_45756) * np.long(segscan_group_sizze_36389)),),
                                           (np.long(segscan_group_sizze_36389),))
                if synchronous:
                  sync(self)
              if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45756))) != 0):
                self.mainDetailedziscan_stage2_35712_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_45756)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_45756)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_45756)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_45756)))),
                                                                  np.int64(m_30057),
                                                                  np.int64(iota32_arg_30443),
                                                                  mem_44349,
                                                                  mem_44352,
                                                                  mem_44355,
                                                                  mem_44358,
                                                                  np.int64(stage1_num_groups_45756),
                                                                  np.int32(num_threads_45757))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainDetailedziscan_stage2_35712_var,
                                           ((np.long(np.int64(1)) * np.long(stage1_num_groups_45756)),),
                                           (np.long(stage1_num_groups_45756),))
                if synchronous:
                  sync(self)
              required_groups_45838 = sext_i64_i32(sdiv_up64((m_30057 * iota32_arg_30443),
                                                             segscan_group_sizze_36389))
              if ((1 * (np.long(num_groups_36390) * np.long(segscan_group_sizze_36389))) != 0):
                self.mainDetailedziscan_stage3_35712_var.set_args(self.global_failure,
                                                                  np.int64(m_30057),
                                                                  np.int64(iota32_arg_30443),
                                                                  np.int64(num_groups_36390),
                                                                  mem_44349,
                                                                  mem_44352,
                                                                  mem_44355,
                                                                  mem_44358,
                                                                  np.int32(num_threads_45757),
                                                                  np.int32(required_groups_45838))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainDetailedziscan_stage3_35712_var,
                                           ((np.long(num_groups_36390) * np.long(segscan_group_sizze_36389)),),
                                           (np.long(segscan_group_sizze_36389),))
                if synchronous:
                  sync(self)
            mem_44364 = opencl_alloc(self, bytes_44079, "mem_44364")
            if (((m_30057 * iota32_arg_30443) * np.int32(4)) != 0):
              cl.enqueue_copy(self.queue, mem_44364, mem_param_44322,
                              dest_offset=np.long(np.int64(0)),
                              src_offset=np.long(np.int64(0)),
                              byte_count=np.long(((m_30057 * iota32_arg_30443) * np.int32(4))))
            if synchronous:
              sync(self)
            if ((1 * (np.long(segmap_usable_groups_36459) * np.long(segmap_group_sizze_36458))) != 0):
              self.mainDetailedzisegmap_35653_var.set_args(self.global_failure,
                                                           np.int64(m_30057),
                                                           np.int64(iota32_arg_30443),
                                                           np.int64(i_30476),
                                                           mem_param_44322,
                                                           mem_44349, mem_44352,
                                                           mem_44355, mem_44358,
                                                           mem_44361, mem_44364)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegmap_35653_var,
                                         ((np.long(segmap_usable_groups_36459) * np.long(segmap_group_sizze_36458)),),
                                         (np.long(segmap_group_sizze_36458),))
              if synchronous:
                sync(self)
            mem_44349 = None
            mem_44352 = None
            mem_44355 = None
            mem_44358 = None
            mem_44361 = None
            defunc_2_radix_sort_res_mem_44366 = mem_44364
          mem_param_tmp_45724 = defunc_2_radix_sort_res_mem_44366
          mem_param_44322 = mem_param_tmp_45724
          i_36292 += one_45897
        defunc_2_radix_sort_res_r_mem_44376 = mem_param_44322
        mem_44314 = None
        segmap_usable_groups_36496 = sdiv_up64(m_30057,
                                               segmap_group_sizze_36495)
        mem_44379 = opencl_alloc(self, bytes_43923, "mem_44379")
        mem_44381 = opencl_alloc(self, bytes_43923, "mem_44381")
        if ((1 * (np.long(segmap_usable_groups_36496) * np.long(segmap_group_sizze_36495))) != 0):
          self.mainDetailedzisegmap_35324_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       np.int64(N_30056),
                                                       np.int64(m_30057),
                                                       np.int32(n_30061),
                                                       np.int64(iota32_arg_30443),
                                                       defunc_4_map_res_mem_43942,
                                                       defunc_4_map_res_mem_43944,
                                                       defunc_3_map_res_mem_44023,
                                                       mem_44288, mem_44305,
                                                       mem_44307,
                                                       defunc_2_radix_sort_res_r_mem_44376,
                                                       mem_44379, mem_44381)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35324_var,
                                     ((np.long(segmap_usable_groups_36496) * np.long(segmap_group_sizze_36495)),),
                                     (np.long(segmap_group_sizze_36495),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_44305 = None
        mem_44307 = None
        defunc_2_radix_sort_res_r_mem_44376 = None
        segmap_usable_groups_36564 = sdiv_up64(nest_sizze_36144,
                                               segmap_group_sizze_36563)
        if ((1 * (np.long(segmap_usable_groups_36564) * np.long(segmap_group_sizze_36563))) != 0):
          self.mainDetailedzisegmap_35271_var.set_args(self.global_failure,
                                                       np.int64(N_30056),
                                                       np.int64(m_30057),
                                                       np.int32(n_30061),
                                                       np.int64(iota32_arg_30443),
                                                       defunc_4_map_res_mem_43944,
                                                       defunc_3_map_res_mem_44023,
                                                       mem_44081, mem_44288,
                                                       mem_44302)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35271_var,
                                     ((np.long(segmap_usable_groups_36564) * np.long(segmap_group_sizze_36563)),),
                                     (np.long(segmap_group_sizze_36563),))
          if synchronous:
            sync(self)
        mem_44288 = None
        defunc_0_f_res_mem_44383 = mem_44081
        defunc_0_f_res_mem_44384 = mem_44302
        defunc_0_f_res_mem_44385 = mem_44379
        defunc_0_f_res_mem_44386 = mem_44310
        defunc_0_f_res_mem_44387 = mem_44381
      defunc_0_f_res_mem_44396 = defunc_0_f_res_mem_44383
      defunc_0_f_res_mem_44397 = defunc_0_f_res_mem_44384
      defunc_0_f_res_mem_44398 = defunc_0_f_res_mem_44385
      defunc_0_f_res_mem_44399 = defunc_0_f_res_mem_44386
      defunc_0_f_res_mem_44400 = defunc_0_f_res_mem_44387
    defunc_4_map_res_mem_43944 = None
    defunc_3_map_res_mem_44022 = None
    mem_44081 = None
    out_arrsizze_44617 = m_30057
    out_arrsizze_44619 = m_30057
    out_arrsizze_44621 = m_30057
    out_arrsizze_44623 = m_30057
    out_arrsizze_44625 = m_30057
    out_arrsizze_44626 = iota32_arg_30443
    out_arrsizze_44628 = m_30057
    out_arrsizze_44629 = iota32_arg_30443
    out_arrsizze_44631 = iota32_arg_30443
    out_arrsizze_44633 = m_30057
    out_arrsizze_44635 = m_30057
    out_arrsizze_44637 = m_30057
    out_arrsizze_44639 = m_30057
    out_arrsizze_44640 = N_30056
    out_arrsizze_44642 = m_30057
    out_arrsizze_44643 = N_30056
    out_mem_44616 = defunc_0_f_res_mem_44073
    out_mem_44618 = defunc_4_map_res_mem_43942
    out_mem_44620 = defunc_3_map_res_mem_44023
    out_mem_44622 = defunc_3_map_res_mem_44024
    out_mem_44624 = defunc_0_f_res_mem_44396
    out_mem_44627 = defunc_0_f_res_mem_44397
    out_mem_44630 = mem_44078
    out_mem_44632 = defunc_0_f_res_mem_44398
    out_mem_44634 = defunc_0_f_res_mem_44399
    out_mem_44636 = defunc_0_f_res_mem_44400
    out_mem_44638 = defunc_4_map_res_mem_43943
    out_mem_44641 = defunc_3_map_res_mem_43905
    return (out_mem_44616, out_arrsizze_44617, out_mem_44618,
            out_arrsizze_44619, out_mem_44620, out_arrsizze_44621,
            out_mem_44622, out_arrsizze_44623, out_mem_44624,
            out_arrsizze_44625, out_arrsizze_44626, out_mem_44627,
            out_arrsizze_44628, out_arrsizze_44629, out_mem_44630,
            out_arrsizze_44631, out_mem_44632, out_arrsizze_44633,
            out_mem_44634, out_arrsizze_44635, out_mem_44636,
            out_arrsizze_44637, out_mem_44638, out_arrsizze_44639,
            out_arrsizze_44640, out_mem_44641, out_arrsizze_44642,
            out_arrsizze_44643)
  def futhark_remove_nans(self, images_mem_43377, m_30042, n_30043, p_30044,
                          nan_value_30045):
    y_31623 = (n_30043 * p_30044)
    nest_sizze_31624 = (m_30042 * y_31623)
    segmap_group_sizze_31625 = self.sizes["remove_nans.segmap_group_size_31568"]
    segmap_usable_groups_31626 = sdiv_up64(nest_sizze_31624,
                                           segmap_group_sizze_31625)
    binop_x_43380 = (m_30042 * n_30043)
    binop_x_43381 = (p_30044 * binop_x_43380)
    bytes_43379 = (np.int64(4) * binop_x_43381)
    mem_43382 = opencl_alloc(self, bytes_43379, "mem_43382")
    if ((1 * (np.long(segmap_usable_groups_31626) * np.long(segmap_group_sizze_31625))) != 0):
      self.remove_nanszisegmap_31564_var.set_args(self.global_failure,
                                                  np.int64(m_30042),
                                                  np.int64(n_30043),
                                                  np.int64(p_30044),
                                                  np.int16(nan_value_30045),
                                                  images_mem_43377, mem_43382)
      cl.enqueue_nd_range_kernel(self.queue, self.remove_nanszisegmap_31564_var,
                                 ((np.long(segmap_usable_groups_31626) * np.long(segmap_group_sizze_31625)),),
                                 (np.long(segmap_group_sizze_31625),))
      if synchronous:
        sync(self)
    out_arrsizze_44617 = m_30042
    out_arrsizze_44618 = n_30043
    out_arrsizze_44619 = p_30044
    out_mem_44616 = mem_43382
    return (out_mem_44616, out_arrsizze_44617, out_arrsizze_44618,
            out_arrsizze_44619)
  def futhark_reshapeTransp(self, images_mem_43377, m_30035, n_30036, p_30037):
    flatten_to_arg_30039 = (n_30036 * p_30037)
    binop_x_43379 = (m_30035 * flatten_to_arg_30039)
    bytes_43378 = (np.int64(4) * binop_x_43379)
    mem_43380 = opencl_alloc(self, bytes_43378, "mem_43380")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43380, np.int64(0),
                                                images_mem_43377, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_30039, m_30035)
    out_arrsizze_44617 = flatten_to_arg_30039
    out_arrsizze_44618 = m_30035
    out_mem_44616 = mem_43380
    return (out_mem_44616, out_arrsizze_44617, out_arrsizze_44618)
  def main(self, trend_30806_ext, k_30807_ext, n_30808_ext, freq_30809_ext,
           hfrac_30810_ext, lam_30811_ext, mappingindices_mem_43377_ext,
           images_mem_43378_ext):
    try:
      trend_30806 = np.int32(ct.c_int32(trend_30806_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_30806_ext),
                                                                                                                            trend_30806_ext))
    try:
      k_30807 = np.int32(ct.c_int32(k_30807_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_30807_ext),
                                                                                                                            k_30807_ext))
    try:
      n_30808 = np.int32(ct.c_int32(n_30808_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_30808_ext),
                                                                                                                            n_30808_ext))
    try:
      freq_30809 = np.float32(ct.c_float(freq_30809_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_30809_ext),
                                                                                                                            freq_30809_ext))
    try:
      hfrac_30810 = np.float32(ct.c_float(hfrac_30810_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_30810_ext),
                                                                                                                            hfrac_30810_ext))
    try:
      lam_30811 = np.float32(ct.c_float(lam_30811_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_30811_ext),
                                                                                                                            lam_30811_ext))
    try:
      assert ((type(mappingindices_mem_43377_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43377_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_30803 = np.int64(mappingindices_mem_43377_ext.shape[0])
      if (type(mappingindices_mem_43377_ext) == cl.array.Array):
        mappingindices_mem_43377 = mappingindices_mem_43377_ext.data
      else:
        mappingindices_mem_43377 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43377_ext.nbytes),
                                                "mappingindices_mem_43377")
        if (np.int64(mappingindices_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43377,
                          normaliseArray(mappingindices_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43377_ext),
                                                                                                                            mappingindices_mem_43377_ext))
    try:
      assert ((type(images_mem_43378_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43378_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_30804 = np.int64(images_mem_43378_ext.shape[0])
      N_30805 = np.int64(images_mem_43378_ext.shape[1])
      if (type(images_mem_43378_ext) == cl.array.Array):
        images_mem_43378 = images_mem_43378_ext.data
      else:
        images_mem_43378 = opencl_alloc(self,
                                        np.int64(images_mem_43378_ext.nbytes),
                                        "images_mem_43378")
        if (np.int64(images_mem_43378_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43378,
                          normaliseArray(images_mem_43378_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43378_ext),
                                                                                                                            images_mem_43378_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44616, out_arrsizze_44617, out_mem_44618, out_arrsizze_44619,
       out_mem_44620,
       out_arrsizze_44621) = self.futhark_main(mappingindices_mem_43377,
                                               images_mem_43378, N_30803,
                                               m_30804, N_30805, trend_30806,
                                               k_30807, n_30808, freq_30809,
                                               hfrac_30810, lam_30811)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44617,), ct.c_int32,
                           data=out_mem_44616), cl.array.Array(self.queue,
                                                               (out_arrsizze_44619,),
                                                               ct.c_float,
                                                               data=out_mem_44618),
            cl.array.Array(self.queue, (out_arrsizze_44621,), ct.c_float,
                           data=out_mem_44620))
  def mainDetailed(self, trend_30059_ext, k_30060_ext, n_30061_ext,
                   freq_30062_ext, hfrac_30063_ext, lam_30064_ext,
                   mappingindices_mem_43377_ext, images_mem_43378_ext):
    try:
      trend_30059 = np.int32(ct.c_int32(trend_30059_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_30059_ext),
                                                                                                                            trend_30059_ext))
    try:
      k_30060 = np.int32(ct.c_int32(k_30060_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_30060_ext),
                                                                                                                            k_30060_ext))
    try:
      n_30061 = np.int32(ct.c_int32(n_30061_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_30061_ext),
                                                                                                                            n_30061_ext))
    try:
      freq_30062 = np.float32(ct.c_float(freq_30062_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_30062_ext),
                                                                                                                            freq_30062_ext))
    try:
      hfrac_30063 = np.float32(ct.c_float(hfrac_30063_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_30063_ext),
                                                                                                                            hfrac_30063_ext))
    try:
      lam_30064 = np.float32(ct.c_float(lam_30064_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_30064_ext),
                                                                                                                            lam_30064_ext))
    try:
      assert ((type(mappingindices_mem_43377_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43377_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_30056 = np.int64(mappingindices_mem_43377_ext.shape[0])
      if (type(mappingindices_mem_43377_ext) == cl.array.Array):
        mappingindices_mem_43377 = mappingindices_mem_43377_ext.data
      else:
        mappingindices_mem_43377 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43377_ext.nbytes),
                                                "mappingindices_mem_43377")
        if (np.int64(mappingindices_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43377,
                          normaliseArray(mappingindices_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43377_ext),
                                                                                                                            mappingindices_mem_43377_ext))
    try:
      assert ((type(images_mem_43378_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43378_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_30057 = np.int64(images_mem_43378_ext.shape[0])
      N_30058 = np.int64(images_mem_43378_ext.shape[1])
      if (type(images_mem_43378_ext) == cl.array.Array):
        images_mem_43378 = images_mem_43378_ext.data
      else:
        images_mem_43378 = opencl_alloc(self,
                                        np.int64(images_mem_43378_ext.nbytes),
                                        "images_mem_43378")
        if (np.int64(images_mem_43378_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43378,
                          normaliseArray(images_mem_43378_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43378_ext),
                                                                                                                            images_mem_43378_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44616, out_arrsizze_44617, out_mem_44618, out_arrsizze_44619,
       out_mem_44620, out_arrsizze_44621, out_mem_44622, out_arrsizze_44623,
       out_mem_44624, out_arrsizze_44625, out_arrsizze_44626, out_mem_44627,
       out_arrsizze_44628, out_arrsizze_44629, out_mem_44630,
       out_arrsizze_44631, out_mem_44632, out_arrsizze_44633, out_mem_44634,
       out_arrsizze_44635, out_mem_44636, out_arrsizze_44637, out_mem_44638,
       out_arrsizze_44639, out_arrsizze_44640, out_mem_44641,
       out_arrsizze_44642,
       out_arrsizze_44643) = self.futhark_mainDetailed(mappingindices_mem_43377,
                                                       images_mem_43378,
                                                       N_30056, m_30057,
                                                       N_30058, trend_30059,
                                                       k_30060, n_30061,
                                                       freq_30062, hfrac_30063,
                                                       lam_30064)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44617,), ct.c_float,
                           data=out_mem_44616), cl.array.Array(self.queue,
                                                               (out_arrsizze_44619,),
                                                               ct.c_int32,
                                                               data=out_mem_44618),
            cl.array.Array(self.queue, (out_arrsizze_44621,), ct.c_int32,
                           data=out_mem_44620), cl.array.Array(self.queue,
                                                               (out_arrsizze_44623,),
                                                               ct.c_float,
                                                               data=out_mem_44622),
            cl.array.Array(self.queue, (out_arrsizze_44625, out_arrsizze_44626),
                           ct.c_float, data=out_mem_44624),
            cl.array.Array(self.queue, (out_arrsizze_44628, out_arrsizze_44629),
                           ct.c_float, data=out_mem_44627),
            cl.array.Array(self.queue, (out_arrsizze_44631,), ct.c_float,
                           data=out_mem_44630), cl.array.Array(self.queue,
                                                               (out_arrsizze_44633,),
                                                               ct.c_int32,
                                                               data=out_mem_44632),
            cl.array.Array(self.queue, (out_arrsizze_44635,), ct.c_float,
                           data=out_mem_44634), cl.array.Array(self.queue,
                                                               (out_arrsizze_44637,),
                                                               ct.c_float,
                                                               data=out_mem_44636),
            cl.array.Array(self.queue, (out_arrsizze_44639, out_arrsizze_44640),
                           ct.c_float, data=out_mem_44638),
            cl.array.Array(self.queue, (out_arrsizze_44642, out_arrsizze_44643),
                           ct.c_float, data=out_mem_44641))
  def remove_nans(self, nan_value_30045_ext, images_mem_43377_ext):
    try:
      nan_value_30045 = np.int16(ct.c_int16(nan_value_30045_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_30045_ext),
                                                                                                                            nan_value_30045_ext))
    try:
      assert ((type(images_mem_43377_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43377_ext.dtype == np.int16)), "Parameter has unexpected type"
      m_30042 = np.int64(images_mem_43377_ext.shape[0])
      n_30043 = np.int64(images_mem_43377_ext.shape[1])
      p_30044 = np.int64(images_mem_43377_ext.shape[2])
      if (type(images_mem_43377_ext) == cl.array.Array):
        images_mem_43377 = images_mem_43377_ext.data
      else:
        images_mem_43377 = opencl_alloc(self,
                                        np.int64(images_mem_43377_ext.nbytes),
                                        "images_mem_43377")
        if (np.int64(images_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43377,
                          normaliseArray(images_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_43377_ext),
                                                                                                                            images_mem_43377_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44616, out_arrsizze_44617, out_arrsizze_44618,
       out_arrsizze_44619) = self.futhark_remove_nans(images_mem_43377, m_30042,
                                                      n_30043, p_30044,
                                                      nan_value_30045)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44617, out_arrsizze_44618,
                                       out_arrsizze_44619), ct.c_float,
                          data=out_mem_44616)
  def reshapeTransp(self, images_mem_43377_ext):
    try:
      assert ((type(images_mem_43377_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43377_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_30035 = np.int64(images_mem_43377_ext.shape[0])
      n_30036 = np.int64(images_mem_43377_ext.shape[1])
      p_30037 = np.int64(images_mem_43377_ext.shape[2])
      if (type(images_mem_43377_ext) == cl.array.Array):
        images_mem_43377 = images_mem_43377_ext.data
      else:
        images_mem_43377 = opencl_alloc(self,
                                        np.int64(images_mem_43377_ext.nbytes),
                                        "images_mem_43377")
        if (np.int64(images_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43377,
                          normaliseArray(images_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_43377_ext),
                                                                                                                            images_mem_43377_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44616, out_arrsizze_44617,
       out_arrsizze_44618) = self.futhark_reshapeTransp(images_mem_43377,
                                                        m_30035, n_30036,
                                                        p_30037)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44617, out_arrsizze_44618),
                          ct.c_float, data=out_mem_44616)