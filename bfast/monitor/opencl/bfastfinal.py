import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'num_groups': default_num_groups,
                                           'reg_tile_size': default_reg_tile_size,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzl(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_45190(__global
                                                      unsigned char *mem_45186,
                                                      int32_t num_elems_45187,
                                                      float val_45188)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_45190;
    int32_t replicate_ltid_45191;
    int32_t replicate_gid_45192;
    
    replicate_gtid_45190 = get_global_id(0);
    replicate_ltid_45191 = get_local_id(0);
    replicate_gid_45192 = get_group_id(0);
    if (slt64(replicate_gtid_45190, num_elems_45187)) {
        ((__global float *) mem_45186)[sext_i32_i64(replicate_gtid_45190)] =
            val_45188;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_45199(__global
                                                      unsigned char *mem_45195,
                                                      int32_t num_elems_45196,
                                                      int32_t val_45197)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_45199;
    int32_t replicate_ltid_45200;
    int32_t replicate_gid_45201;
    
    replicate_gtid_45199 = get_global_id(0);
    replicate_ltid_45200 = get_local_id(0);
    replicate_gid_45201 = get_group_id(0);
    if (slt64(replicate_gtid_45199, num_elems_45196)) {
        ((__global int32_t *) mem_45195)[sext_i32_i64(replicate_gtid_45199)] =
            val_45197;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_44799(int64_t m_29259, int64_t i32_res_29411,
                               int64_t ctx_param_ext_43577,
                               int64_t ctx_param_ext_43578,
                               int64_t ctx_param_ext_43580, __global
                               unsigned char *mem_param_43582, __global
                               unsigned char *mem_43587)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44799;
    int32_t copy_ltid_44800;
    int32_t copy_gid_44801;
    
    copy_gtid_44799 = get_global_id(0);
    copy_ltid_44800 = get_local_id(0);
    copy_gid_44801 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44799), m_29259 * i32_res_29411)) {
        ((__global float *) mem_43587)[(sext_i32_i64(copy_gtid_44799) -
                                        squot64(sext_i32_i64(copy_gtid_44799),
                                                i32_res_29411) *
                                        i32_res_29411) * m_29259 +
                                       squot64(sext_i32_i64(copy_gtid_44799),
                                               i32_res_29411)] = ((__global
                                                                   float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44799),
                                                                                                      i32_res_29411) *
                                                                                              ctx_param_ext_43578 +
                                                                                              (sext_i32_i64(copy_gtid_44799) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44799),
                                                                                                       i32_res_29411) *
                                                                                               i32_res_29411) *
                                                                                              ctx_param_ext_43580)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_40182(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45229_backing_aligned_0,
                                      int64_t N_29258, int64_t m_29259,
                                      int64_t N_29260, __global
                                      unsigned char *images_mem_43378, __global
                                      unsigned char *defunc_3_map_res_mem_44136,
                                      __global unsigned char *mem_44165,
                                      __global unsigned char *mem_44168,
                                      int32_t num_threads_45223)
{
    #define segscan_group_sizze_40199 (mainzisegscan_group_sizze_40176)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45229_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45229_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45224;
    int32_t local_tid_45225;
    int64_t group_sizze_45228;
    int32_t wave_sizze_45227;
    int32_t group_tid_45226;
    
    global_tid_45224 = get_global_id(0);
    local_tid_45225 = get_local_id(0);
    group_sizze_45228 = get_local_size(0);
    wave_sizze_45227 = LOCKSTEP_WIDTH;
    group_tid_45226 = get_group_id(0);
    
    int32_t phys_tid_40182;
    
    phys_tid_40182 = global_tid_45224;
    
    __local char *scan_arr_mem_45229;
    
    scan_arr_mem_45229 = (__local char *) scan_arr_mem_45229_backing_0;
    
    int64_t x_40204;
    int64_t x_40205;
    
    x_40204 = 0;
    for (int64_t j_45231 = 0; j_45231 < sdiv_up64(m_29259 * N_29258,
                                                  sext_i32_i64(num_threads_45223));
         j_45231++) {
        int64_t chunk_offset_45232 = segscan_group_sizze_40199 * j_45231 +
                sext_i32_i64(group_tid_45226) * (segscan_group_sizze_40199 *
                                                 sdiv_up64(m_29259 * N_29258,
                                                           sext_i32_i64(num_threads_45223)));
        int64_t flat_idx_45233 = chunk_offset_45232 +
                sext_i32_i64(local_tid_45225);
        int64_t gtid_40173 = squot64(flat_idx_45233, N_29258);
        int64_t gtid_40181 = flat_idx_45233 - squot64(flat_idx_45233, N_29258) *
                N_29258;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40173, m_29259) && slt64(gtid_40181, N_29258)) {
                float x_40209 = ((__global
                                  float *) images_mem_43378)[gtid_40173 *
                                                             N_29260 +
                                                             gtid_40181];
                bool isnan_res_40211;
                
                isnan_res_40211 = futrts_isnan32(x_40209);
                
                bool cond_40212 = !isnan_res_40211;
                float defunc_0_f_res_40213;
                
                if (cond_40212) {
                    float x_40210 = ((__global
                                      float *) defunc_3_map_res_mem_44136)[gtid_40173 *
                                                                           N_29258 +
                                                                           gtid_40181];
                    float defunc_0_f_res_t_res_40214 = x_40209 - x_40210;
                    
                    defunc_0_f_res_40213 = defunc_0_f_res_t_res_40214;
                } else {
                    defunc_0_f_res_40213 = NAN;
                }
                
                bool isnan_res_40215;
                
                isnan_res_40215 = futrts_isnan32(defunc_0_f_res_40213);
                
                bool defunc_0_p_res_40216 = !isnan_res_40215;
                int64_t defunc_0_f_res_40217 =
                        btoi_bool_i64(defunc_0_p_res_40216);
                
                // write to-scan values to parameters
                {
                    x_40205 = defunc_0_f_res_40217;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_44168)[gtid_40173 * N_29258 +
                                                   gtid_40181] =
                        defunc_0_f_res_40213;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40173, m_29259) && slt64(gtid_40181,
                                                          N_29258))) {
                    x_40205 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_40206 = add64(x_40204, x_40205);
                
                ((__local
                  int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)] =
                    defunc_1_op_res_40206;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45234;
            int64_t x_45235;
            int64_t x_45237;
            int64_t x_45238;
            bool ltid_in_bounds_45240;
            
            ltid_in_bounds_45240 = slt64(sext_i32_i64(local_tid_45225),
                                         segscan_group_sizze_40199);
            
            int32_t skip_threads_45241;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45240) {
                    x_45235 = ((volatile __local
                                int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)];
                    if ((local_tid_45225 - squot32(local_tid_45225, 32) * 32) ==
                        0) {
                        x_45234 = x_45235;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45241 = 1;
                while (slt32(skip_threads_45241, 32)) {
                    if (sle32(skip_threads_45241, local_tid_45225 -
                              squot32(local_tid_45225, 32) * 32) &&
                        ltid_in_bounds_45240) {
                        // read operands
                        {
                            x_45234 = ((volatile __local
                                        int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225) -
                                                                       sext_i32_i64(skip_threads_45241)];
                        }
                        // perform operation
                        {
                            bool inactive_45242 =
                                 slt64(srem64(sext_i32_i64(local_tid_45225) +
                                              chunk_offset_45232, N_29258),
                                       sext_i32_i64(local_tid_45225) +
                                       chunk_offset_45232 -
                                       (sext_i32_i64(local_tid_45225 -
                                        skip_threads_45241) +
                                        chunk_offset_45232));
                            
                            if (inactive_45242) {
                                x_45234 = x_45235;
                            }
                            if (!inactive_45242) {
                                int64_t defunc_1_op_res_45236 = add64(x_45234,
                                                                      x_45235);
                                
                                x_45234 = defunc_1_op_res_45236;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45227, skip_threads_45241)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45241, local_tid_45225 -
                              squot32(local_tid_45225, 32) * 32) &&
                        ltid_in_bounds_45240) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)] =
                                x_45234;
                            x_45235 = x_45234;
                        }
                    }
                    if (sle32(wave_sizze_45227, skip_threads_45241)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45241 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45225 - squot32(local_tid_45225, 32) * 32) ==
                    31 && ltid_in_bounds_45240) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45229)[sext_i32_i64(squot32(local_tid_45225,
                                                                          32))] =
                        x_45234;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45243;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45225, 32) == 0 &&
                        ltid_in_bounds_45240) {
                        x_45238 = ((volatile __local
                                    int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)];
                        if ((local_tid_45225 - squot32(local_tid_45225, 32) *
                             32) == 0) {
                            x_45237 = x_45238;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45243 = 1;
                    while (slt32(skip_threads_45243, 32)) {
                        if (sle32(skip_threads_45243, local_tid_45225 -
                                  squot32(local_tid_45225, 32) * 32) &&
                            (squot32(local_tid_45225, 32) == 0 &&
                             ltid_in_bounds_45240)) {
                            // read operands
                            {
                                x_45237 = ((volatile __local
                                            int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225) -
                                                                           sext_i32_i64(skip_threads_45243)];
                            }
                            // perform operation
                            {
                                bool inactive_45244 =
                                     slt64(srem64(sext_i32_i64(local_tid_45225 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45232, N_29258),
                                           sext_i32_i64(local_tid_45225 * 32 +
                                           32 - 1) + chunk_offset_45232 -
                                           (sext_i32_i64((local_tid_45225 -
                                                          skip_threads_45243) *
                                            32 + 32 - 1) + chunk_offset_45232));
                                
                                if (inactive_45244) {
                                    x_45237 = x_45238;
                                }
                                if (!inactive_45244) {
                                    int64_t defunc_1_op_res_45239 =
                                            add64(x_45237, x_45238);
                                    
                                    x_45237 = defunc_1_op_res_45239;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45227, skip_threads_45243)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45243, local_tid_45225 -
                                  squot32(local_tid_45225, 32) * 32) &&
                            (squot32(local_tid_45225, 32) == 0 &&
                             ltid_in_bounds_45240)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)] =
                                    x_45237;
                                x_45238 = x_45237;
                            }
                        }
                        if (sle32(wave_sizze_45227, skip_threads_45243)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45243 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45225, 32) == 0 ||
                      !ltid_in_bounds_45240)) {
                    // read operands
                    {
                        x_45235 = x_45234;
                        x_45234 = ((__local
                                    int64_t *) scan_arr_mem_45229)[sext_i32_i64(squot32(local_tid_45225,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45245 =
                             slt64(srem64(sext_i32_i64(local_tid_45225) +
                                          chunk_offset_45232, N_29258),
                                   sext_i32_i64(local_tid_45225) +
                                   chunk_offset_45232 -
                                   (sext_i32_i64(squot32(local_tid_45225, 32) *
                                    32 - 1) + chunk_offset_45232));
                        
                        if (inactive_45245) {
                            x_45234 = x_45235;
                        }
                        if (!inactive_45245) {
                            int64_t defunc_1_op_res_45236 = add64(x_45234,
                                                                  x_45235);
                            
                            x_45234 = defunc_1_op_res_45236;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)] =
                            x_45234;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45225, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)] =
                        x_45235;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40173, m_29259) && slt64(gtid_40181, N_29258)) {
                    ((__global int64_t *) mem_44165)[gtid_40173 * N_29258 +
                                                     gtid_40181] = ((__local
                                                                     int64_t *) scan_arr_mem_45229)[sext_i32_i64(local_tid_45225)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45246 = slt64(srem64(chunk_offset_45232 +
                                                          segscan_group_sizze_40199,
                                                          N_29258),
                                                   chunk_offset_45232 +
                                                   segscan_group_sizze_40199 -
                                                   (chunk_offset_45232 +
                                                    segscan_group_sizze_40199 -
                                                    1));
                bool should_load_carry_45247 = local_tid_45225 == 0 &&
                     !crosses_segment_45246;
                
                if (should_load_carry_45247) {
                    x_40204 = ((__local
                                int64_t *) scan_arr_mem_45229)[segscan_group_sizze_40199 -
                                                               1];
                }
                if (!should_load_carry_45247) {
                    x_40204 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_40199
}
__kernel void mainziscan_stage1_41166(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45596_backing_aligned_0,
                                      int64_t N_29258, int64_t m_29259,
                                      int64_t iota32_arg_29658, __global
                                      unsigned char *defunc_4_map_res_mem_44174,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_44237,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_44238,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_44272,
                                      __global unsigned char *mem_44291,
                                      __global unsigned char *mem_44295,
                                      int32_t num_threads_45590)
{
    #define segscan_group_sizze_41244 (mainzisegscan_group_sizze_41160)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45596_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45596_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45591;
    int32_t local_tid_45592;
    int64_t group_sizze_45595;
    int32_t wave_sizze_45594;
    int32_t group_tid_45593;
    
    global_tid_45591 = get_global_id(0);
    local_tid_45592 = get_local_id(0);
    group_sizze_45595 = get_local_size(0);
    wave_sizze_45594 = LOCKSTEP_WIDTH;
    group_tid_45593 = get_group_id(0);
    
    int32_t phys_tid_41166;
    
    phys_tid_41166 = global_tid_45591;
    
    __local char *scan_arr_mem_45596;
    
    scan_arr_mem_45596 = (__local char *) scan_arr_mem_45596_backing_0;
    
    float x_41248;
    float x_41249;
    
    x_41248 = 0.0F;
    for (int64_t j_45598 = 0; j_45598 < sdiv_up64(m_29259 * iota32_arg_29658,
                                                  sext_i32_i64(num_threads_45590));
         j_45598++) {
        int64_t chunk_offset_45599 = segscan_group_sizze_41244 * j_45598 +
                sext_i32_i64(group_tid_45593) * (segscan_group_sizze_41244 *
                                                 sdiv_up64(m_29259 *
                                                           iota32_arg_29658,
                                                           sext_i32_i64(num_threads_45590)));
        int64_t flat_idx_45600 = chunk_offset_45599 +
                sext_i32_i64(local_tid_45592);
        int64_t gtid_41157 = squot64(flat_idx_45600, iota32_arg_29658);
        int64_t gtid_41165 = flat_idx_45600 - squot64(flat_idx_45600,
                                                      iota32_arg_29658) *
                iota32_arg_29658;
        
        // threads in bounds read input
        {
            if (slt64(gtid_41157, m_29259) && slt64(gtid_41165,
                                                    iota32_arg_29658)) {
                int32_t y_41255 = ((__global int32_t *) mem_44291)[gtid_41157];
                int32_t index_primexp_41433 = sext_i64_i32(gtid_41165);
                bool cond_41258 = sle32(y_41255, index_primexp_41433);
                float defunc_0_f_res_41259;
                
                if (cond_41258) {
                    defunc_0_f_res_41259 = 0.0F;
                } else {
                    int32_t x_41251 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_41157];
                    int32_t x_41252 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44237)[gtid_41157];
                    float x_41253 = ((__global
                                      float *) defunc_0_f_res_mem_44272)[gtid_41157];
                    bool cond_41260 = index_primexp_41433 == 0;
                    float defunc_0_f_res_f_res_41261;
                    
                    if (cond_41260) {
                        defunc_0_f_res_f_res_41261 = x_41253;
                    } else {
                        int32_t i_41262 = add32(x_41251, index_primexp_41433);
                        int64_t i_41263 = sext_i32_i64(i_41262);
                        float x_41264 = ((__global
                                          float *) defunc_4_map_res_mem_44174)[gtid_41157 *
                                                                               N_29258 +
                                                                               i_41263];
                        int32_t x_41265 = sub32(x_41251, x_41252);
                        int32_t i_41266 = add32(x_41265, index_primexp_41433);
                        int64_t i_41267 = sext_i32_i64(i_41266);
                        float y_41268 = ((__global
                                          float *) defunc_4_map_res_mem_44174)[gtid_41157 *
                                                                               N_29258 +
                                                                               i_41267];
                        float defunc_0_f_res_f_res_f_res_41269 = x_41264 -
                              y_41268;
                        
                        defunc_0_f_res_f_res_41261 =
                            defunc_0_f_res_f_res_f_res_41269;
                    }
                    defunc_0_f_res_41259 = defunc_0_f_res_f_res_41261;
                }
                // write to-scan values to parameters
                {
                    x_41249 = defunc_0_f_res_41259;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_41157, m_29259) && slt64(gtid_41165,
                                                          iota32_arg_29658))) {
                    x_41249 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_41250 = x_41248 + x_41249;
                
                ((__local
                  float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)] =
                    defunc_1_op_res_41250;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45601;
            float x_45602;
            float x_45604;
            float x_45605;
            bool ltid_in_bounds_45607;
            
            ltid_in_bounds_45607 = slt64(sext_i32_i64(local_tid_45592),
                                         segscan_group_sizze_41244);
            
            int32_t skip_threads_45608;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45607) {
                    x_45602 = ((volatile __local
                                float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)];
                    if ((local_tid_45592 - squot32(local_tid_45592, 32) * 32) ==
                        0) {
                        x_45601 = x_45602;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45608 = 1;
                while (slt32(skip_threads_45608, 32)) {
                    if (sle32(skip_threads_45608, local_tid_45592 -
                              squot32(local_tid_45592, 32) * 32) &&
                        ltid_in_bounds_45607) {
                        // read operands
                        {
                            x_45601 = ((volatile __local
                                        float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592) -
                                                                     sext_i32_i64(skip_threads_45608)];
                        }
                        // perform operation
                        {
                            bool inactive_45609 =
                                 slt64(srem64(sext_i32_i64(local_tid_45592) +
                                              chunk_offset_45599,
                                              iota32_arg_29658),
                                       sext_i32_i64(local_tid_45592) +
                                       chunk_offset_45599 -
                                       (sext_i32_i64(local_tid_45592 -
                                        skip_threads_45608) +
                                        chunk_offset_45599));
                            
                            if (inactive_45609) {
                                x_45601 = x_45602;
                            }
                            if (!inactive_45609) {
                                float defunc_1_op_res_45603 = x_45601 + x_45602;
                                
                                x_45601 = defunc_1_op_res_45603;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45594, skip_threads_45608)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45608, local_tid_45592 -
                              squot32(local_tid_45592, 32) * 32) &&
                        ltid_in_bounds_45607) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)] =
                                x_45601;
                            x_45602 = x_45601;
                        }
                    }
                    if (sle32(wave_sizze_45594, skip_threads_45608)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45608 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45592 - squot32(local_tid_45592, 32) * 32) ==
                    31 && ltid_in_bounds_45607) {
                    ((volatile __local
                      float *) scan_arr_mem_45596)[sext_i32_i64(squot32(local_tid_45592,
                                                                        32))] =
                        x_45601;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45610;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45592, 32) == 0 &&
                        ltid_in_bounds_45607) {
                        x_45605 = ((volatile __local
                                    float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)];
                        if ((local_tid_45592 - squot32(local_tid_45592, 32) *
                             32) == 0) {
                            x_45604 = x_45605;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45610 = 1;
                    while (slt32(skip_threads_45610, 32)) {
                        if (sle32(skip_threads_45610, local_tid_45592 -
                                  squot32(local_tid_45592, 32) * 32) &&
                            (squot32(local_tid_45592, 32) == 0 &&
                             ltid_in_bounds_45607)) {
                            // read operands
                            {
                                x_45604 = ((volatile __local
                                            float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592) -
                                                                         sext_i32_i64(skip_threads_45610)];
                            }
                            // perform operation
                            {
                                bool inactive_45611 =
                                     slt64(srem64(sext_i32_i64(local_tid_45592 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45599,
                                                  iota32_arg_29658),
                                           sext_i32_i64(local_tid_45592 * 32 +
                                           32 - 1) + chunk_offset_45599 -
                                           (sext_i32_i64((local_tid_45592 -
                                                          skip_threads_45610) *
                                            32 + 32 - 1) + chunk_offset_45599));
                                
                                if (inactive_45611) {
                                    x_45604 = x_45605;
                                }
                                if (!inactive_45611) {
                                    float defunc_1_op_res_45606 = x_45604 +
                                          x_45605;
                                    
                                    x_45604 = defunc_1_op_res_45606;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45594, skip_threads_45610)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45610, local_tid_45592 -
                                  squot32(local_tid_45592, 32) * 32) &&
                            (squot32(local_tid_45592, 32) == 0 &&
                             ltid_in_bounds_45607)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)] =
                                    x_45604;
                                x_45605 = x_45604;
                            }
                        }
                        if (sle32(wave_sizze_45594, skip_threads_45610)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45610 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45592, 32) == 0 ||
                      !ltid_in_bounds_45607)) {
                    // read operands
                    {
                        x_45602 = x_45601;
                        x_45601 = ((__local
                                    float *) scan_arr_mem_45596)[sext_i32_i64(squot32(local_tid_45592,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45612 =
                             slt64(srem64(sext_i32_i64(local_tid_45592) +
                                          chunk_offset_45599, iota32_arg_29658),
                                   sext_i32_i64(local_tid_45592) +
                                   chunk_offset_45599 -
                                   (sext_i32_i64(squot32(local_tid_45592, 32) *
                                    32 - 1) + chunk_offset_45599));
                        
                        if (inactive_45612) {
                            x_45601 = x_45602;
                        }
                        if (!inactive_45612) {
                            float defunc_1_op_res_45603 = x_45601 + x_45602;
                            
                            x_45601 = defunc_1_op_res_45603;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)] =
                            x_45601;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45592, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)] =
                        x_45602;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_41157, m_29259) && slt64(gtid_41165,
                                                        iota32_arg_29658)) {
                    ((__global float *) mem_44295)[gtid_41157 *
                                                   iota32_arg_29658 +
                                                   gtid_41165] = ((__local
                                                                   float *) scan_arr_mem_45596)[sext_i32_i64(local_tid_45592)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45613 = slt64(srem64(chunk_offset_45599 +
                                                          segscan_group_sizze_41244,
                                                          iota32_arg_29658),
                                                   chunk_offset_45599 +
                                                   segscan_group_sizze_41244 -
                                                   (chunk_offset_45599 +
                                                    segscan_group_sizze_41244 -
                                                    1));
                bool should_load_carry_45614 = local_tid_45592 == 0 &&
                     !crosses_segment_45613;
                
                if (should_load_carry_45614) {
                    x_41248 = ((__local
                                float *) scan_arr_mem_45596)[segscan_group_sizze_41244 -
                                                             1];
                }
                if (!should_load_carry_45614) {
                    x_41248 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_41244
}
__kernel void mainziscan_stage2_40182(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45253_backing_aligned_0,
                                      int64_t N_29258, int64_t m_29259, __global
                                      unsigned char *mem_44165,
                                      int64_t stage1_num_groups_45222,
                                      int32_t num_threads_45223)
{
    #define segscan_group_sizze_40199 (mainzisegscan_group_sizze_40176)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45253_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45253_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45248;
    int32_t local_tid_45249;
    int64_t group_sizze_45252;
    int32_t wave_sizze_45251;
    int32_t group_tid_45250;
    
    global_tid_45248 = get_global_id(0);
    local_tid_45249 = get_local_id(0);
    group_sizze_45252 = get_local_size(0);
    wave_sizze_45251 = LOCKSTEP_WIDTH;
    group_tid_45250 = get_group_id(0);
    
    int32_t phys_tid_40182;
    
    phys_tid_40182 = global_tid_45248;
    
    __local char *scan_arr_mem_45253;
    
    scan_arr_mem_45253 = (__local char *) scan_arr_mem_45253_backing_0;
    
    int64_t flat_idx_45255;
    
    flat_idx_45255 = (sext_i32_i64(local_tid_45249) + 1) *
        (segscan_group_sizze_40199 * sdiv_up64(m_29259 * N_29258,
                                               sext_i32_i64(num_threads_45223))) -
        1;
    
    int64_t gtid_40173;
    
    gtid_40173 = squot64(flat_idx_45255, N_29258);
    
    int64_t gtid_40181;
    
    gtid_40181 = flat_idx_45255 - squot64(flat_idx_45255, N_29258) * N_29258;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40173, m_29259) && slt64(gtid_40181, N_29258)) {
            ((__local
              int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                ((__global int64_t *) mem_44165)[gtid_40173 * N_29258 +
                                                 gtid_40181];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_40204;
    int64_t x_40205;
    int64_t x_45256;
    int64_t x_45257;
    bool ltid_in_bounds_45259;
    
    ltid_in_bounds_45259 = slt64(sext_i32_i64(local_tid_45249),
                                 stage1_num_groups_45222);
    
    int32_t skip_threads_45260;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45259) {
            x_40205 = ((volatile __local
                        int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)];
            if ((local_tid_45249 - squot32(local_tid_45249, 32) * 32) == 0) {
                x_40204 = x_40205;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45260 = 1;
        while (slt32(skip_threads_45260, 32)) {
            if (sle32(skip_threads_45260, local_tid_45249 -
                      squot32(local_tid_45249, 32) * 32) &&
                ltid_in_bounds_45259) {
                // read operands
                {
                    x_40204 = ((volatile __local
                                int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249) -
                                                               sext_i32_i64(skip_threads_45260)];
                }
                // perform operation
                {
                    bool inactive_45261 =
                         slt64(srem64((sext_i32_i64(local_tid_45249) + 1) *
                                      (segscan_group_sizze_40199 *
                                       sdiv_up64(m_29259 * N_29258,
                                                 sext_i32_i64(num_threads_45223))) -
                                      1, N_29258),
                               (sext_i32_i64(local_tid_45249) + 1) *
                               (segscan_group_sizze_40199 * sdiv_up64(m_29259 *
                                                                      N_29258,
                                                                      sext_i32_i64(num_threads_45223))) -
                               1 - ((sext_i32_i64(local_tid_45249 -
                                     skip_threads_45260) + 1) *
                                    (segscan_group_sizze_40199 *
                                     sdiv_up64(m_29259 * N_29258,
                                               sext_i32_i64(num_threads_45223))) -
                                    1));
                    
                    if (inactive_45261) {
                        x_40204 = x_40205;
                    }
                    if (!inactive_45261) {
                        int64_t defunc_1_op_res_40206 = add64(x_40204, x_40205);
                        
                        x_40204 = defunc_1_op_res_40206;
                    }
                }
            }
            if (sle32(wave_sizze_45251, skip_threads_45260)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45260, local_tid_45249 -
                      squot32(local_tid_45249, 32) * 32) &&
                ltid_in_bounds_45259) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                        x_40204;
                    x_40205 = x_40204;
                }
            }
            if (sle32(wave_sizze_45251, skip_threads_45260)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45260 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45249 - squot32(local_tid_45249, 32) * 32) == 31 &&
            ltid_in_bounds_45259) {
            ((volatile __local
              int64_t *) scan_arr_mem_45253)[sext_i32_i64(squot32(local_tid_45249,
                                                                  32))] =
                x_40204;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45262;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45249, 32) == 0 && ltid_in_bounds_45259) {
                x_45257 = ((volatile __local
                            int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)];
                if ((local_tid_45249 - squot32(local_tid_45249, 32) * 32) ==
                    0) {
                    x_45256 = x_45257;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45262 = 1;
            while (slt32(skip_threads_45262, 32)) {
                if (sle32(skip_threads_45262, local_tid_45249 -
                          squot32(local_tid_45249, 32) * 32) &&
                    (squot32(local_tid_45249, 32) == 0 &&
                     ltid_in_bounds_45259)) {
                    // read operands
                    {
                        x_45256 = ((volatile __local
                                    int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249) -
                                                                   sext_i32_i64(skip_threads_45262)];
                    }
                    // perform operation
                    {
                        bool inactive_45263 =
                             slt64(srem64((sext_i32_i64(local_tid_45249 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_40199 *
                                           sdiv_up64(m_29259 * N_29258,
                                                     sext_i32_i64(num_threads_45223))) -
                                          1, N_29258),
                                   (sext_i32_i64(local_tid_45249 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_40199 *
                                               sdiv_up64(m_29259 * N_29258,
                                                         sext_i32_i64(num_threads_45223))) -
                                   1 - ((sext_i32_i64((local_tid_45249 -
                                                       skip_threads_45262) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_40199 *
                                         sdiv_up64(m_29259 * N_29258,
                                                   sext_i32_i64(num_threads_45223))) -
                                        1));
                        
                        if (inactive_45263) {
                            x_45256 = x_45257;
                        }
                        if (!inactive_45263) {
                            int64_t defunc_1_op_res_45258 = add64(x_45256,
                                                                  x_45257);
                            
                            x_45256 = defunc_1_op_res_45258;
                        }
                    }
                }
                if (sle32(wave_sizze_45251, skip_threads_45262)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45262, local_tid_45249 -
                          squot32(local_tid_45249, 32) * 32) &&
                    (squot32(local_tid_45249, 32) == 0 &&
                     ltid_in_bounds_45259)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                            x_45256;
                        x_45257 = x_45256;
                    }
                }
                if (sle32(wave_sizze_45251, skip_threads_45262)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45262 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45249, 32) == 0 || !ltid_in_bounds_45259)) {
            // read operands
            {
                x_40205 = x_40204;
                x_40204 = ((__local
                            int64_t *) scan_arr_mem_45253)[sext_i32_i64(squot32(local_tid_45249,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45264 =
                     slt64(srem64((sext_i32_i64(local_tid_45249) + 1) *
                                  (segscan_group_sizze_40199 *
                                   sdiv_up64(m_29259 * N_29258,
                                             sext_i32_i64(num_threads_45223))) -
                                  1, N_29258), (sext_i32_i64(local_tid_45249) +
                                                1) *
                           (segscan_group_sizze_40199 * sdiv_up64(m_29259 *
                                                                  N_29258,
                                                                  sext_i32_i64(num_threads_45223))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45249, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_40199 *
                                                 sdiv_up64(m_29259 * N_29258,
                                                           sext_i32_i64(num_threads_45223))) -
                                1));
                
                if (inactive_45264) {
                    x_40204 = x_40205;
                }
                if (!inactive_45264) {
                    int64_t defunc_1_op_res_40206 = add64(x_40204, x_40205);
                    
                    x_40204 = defunc_1_op_res_40206;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                    x_40204;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45249, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                x_40205;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40173, m_29259) && slt64(gtid_40181, N_29258)) {
            ((__global int64_t *) mem_44165)[gtid_40173 * N_29258 +
                                             gtid_40181] = ((__local
                                                             int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40199
}
__kernel void mainziscan_stage2_41166(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45620_backing_aligned_0,
                                      int64_t m_29259, int64_t iota32_arg_29658,
                                      __global unsigned char *mem_44295,
                                      int64_t stage1_num_groups_45589,
                                      int32_t num_threads_45590)
{
    #define segscan_group_sizze_41244 (mainzisegscan_group_sizze_41160)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45620_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45620_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45615;
    int32_t local_tid_45616;
    int64_t group_sizze_45619;
    int32_t wave_sizze_45618;
    int32_t group_tid_45617;
    
    global_tid_45615 = get_global_id(0);
    local_tid_45616 = get_local_id(0);
    group_sizze_45619 = get_local_size(0);
    wave_sizze_45618 = LOCKSTEP_WIDTH;
    group_tid_45617 = get_group_id(0);
    
    int32_t phys_tid_41166;
    
    phys_tid_41166 = global_tid_45615;
    
    __local char *scan_arr_mem_45620;
    
    scan_arr_mem_45620 = (__local char *) scan_arr_mem_45620_backing_0;
    
    int64_t flat_idx_45622;
    
    flat_idx_45622 = (sext_i32_i64(local_tid_45616) + 1) *
        (segscan_group_sizze_41244 * sdiv_up64(m_29259 * iota32_arg_29658,
                                               sext_i32_i64(num_threads_45590))) -
        1;
    
    int64_t gtid_41157;
    
    gtid_41157 = squot64(flat_idx_45622, iota32_arg_29658);
    
    int64_t gtid_41165;
    
    gtid_41165 = flat_idx_45622 - squot64(flat_idx_45622, iota32_arg_29658) *
        iota32_arg_29658;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_41157, m_29259) && slt64(gtid_41165, iota32_arg_29658)) {
            ((__local
              float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)] =
                ((__global float *) mem_44295)[gtid_41157 * iota32_arg_29658 +
                                               gtid_41165];
        } else {
            ((__local
              float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_41248;
    float x_41249;
    float x_45623;
    float x_45624;
    bool ltid_in_bounds_45626;
    
    ltid_in_bounds_45626 = slt64(sext_i32_i64(local_tid_45616),
                                 stage1_num_groups_45589);
    
    int32_t skip_threads_45627;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45626) {
            x_41249 = ((volatile __local
                        float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)];
            if ((local_tid_45616 - squot32(local_tid_45616, 32) * 32) == 0) {
                x_41248 = x_41249;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45627 = 1;
        while (slt32(skip_threads_45627, 32)) {
            if (sle32(skip_threads_45627, local_tid_45616 -
                      squot32(local_tid_45616, 32) * 32) &&
                ltid_in_bounds_45626) {
                // read operands
                {
                    x_41248 = ((volatile __local
                                float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616) -
                                                             sext_i32_i64(skip_threads_45627)];
                }
                // perform operation
                {
                    bool inactive_45628 =
                         slt64(srem64((sext_i32_i64(local_tid_45616) + 1) *
                                      (segscan_group_sizze_41244 *
                                       sdiv_up64(m_29259 * iota32_arg_29658,
                                                 sext_i32_i64(num_threads_45590))) -
                                      1, iota32_arg_29658),
                               (sext_i32_i64(local_tid_45616) + 1) *
                               (segscan_group_sizze_41244 * sdiv_up64(m_29259 *
                                                                      iota32_arg_29658,
                                                                      sext_i32_i64(num_threads_45590))) -
                               1 - ((sext_i32_i64(local_tid_45616 -
                                     skip_threads_45627) + 1) *
                                    (segscan_group_sizze_41244 *
                                     sdiv_up64(m_29259 * iota32_arg_29658,
                                               sext_i32_i64(num_threads_45590))) -
                                    1));
                    
                    if (inactive_45628) {
                        x_41248 = x_41249;
                    }
                    if (!inactive_45628) {
                        float defunc_1_op_res_41250 = x_41248 + x_41249;
                        
                        x_41248 = defunc_1_op_res_41250;
                    }
                }
            }
            if (sle32(wave_sizze_45618, skip_threads_45627)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45627, local_tid_45616 -
                      squot32(local_tid_45616, 32) * 32) &&
                ltid_in_bounds_45626) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)] =
                        x_41248;
                    x_41249 = x_41248;
                }
            }
            if (sle32(wave_sizze_45618, skip_threads_45627)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45627 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45616 - squot32(local_tid_45616, 32) * 32) == 31 &&
            ltid_in_bounds_45626) {
            ((volatile __local
              float *) scan_arr_mem_45620)[sext_i32_i64(squot32(local_tid_45616,
                                                                32))] = x_41248;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45629;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45616, 32) == 0 && ltid_in_bounds_45626) {
                x_45624 = ((volatile __local
                            float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)];
                if ((local_tid_45616 - squot32(local_tid_45616, 32) * 32) ==
                    0) {
                    x_45623 = x_45624;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45629 = 1;
            while (slt32(skip_threads_45629, 32)) {
                if (sle32(skip_threads_45629, local_tid_45616 -
                          squot32(local_tid_45616, 32) * 32) &&
                    (squot32(local_tid_45616, 32) == 0 &&
                     ltid_in_bounds_45626)) {
                    // read operands
                    {
                        x_45623 = ((volatile __local
                                    float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616) -
                                                                 sext_i32_i64(skip_threads_45629)];
                    }
                    // perform operation
                    {
                        bool inactive_45630 =
                             slt64(srem64((sext_i32_i64(local_tid_45616 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_41244 *
                                           sdiv_up64(m_29259 * iota32_arg_29658,
                                                     sext_i32_i64(num_threads_45590))) -
                                          1, iota32_arg_29658),
                                   (sext_i32_i64(local_tid_45616 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_41244 *
                                               sdiv_up64(m_29259 *
                                                         iota32_arg_29658,
                                                         sext_i32_i64(num_threads_45590))) -
                                   1 - ((sext_i32_i64((local_tid_45616 -
                                                       skip_threads_45629) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_41244 *
                                         sdiv_up64(m_29259 * iota32_arg_29658,
                                                   sext_i32_i64(num_threads_45590))) -
                                        1));
                        
                        if (inactive_45630) {
                            x_45623 = x_45624;
                        }
                        if (!inactive_45630) {
                            float defunc_1_op_res_45625 = x_45623 + x_45624;
                            
                            x_45623 = defunc_1_op_res_45625;
                        }
                    }
                }
                if (sle32(wave_sizze_45618, skip_threads_45629)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45629, local_tid_45616 -
                          squot32(local_tid_45616, 32) * 32) &&
                    (squot32(local_tid_45616, 32) == 0 &&
                     ltid_in_bounds_45626)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)] =
                            x_45623;
                        x_45624 = x_45623;
                    }
                }
                if (sle32(wave_sizze_45618, skip_threads_45629)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45629 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45616, 32) == 0 || !ltid_in_bounds_45626)) {
            // read operands
            {
                x_41249 = x_41248;
                x_41248 = ((__local
                            float *) scan_arr_mem_45620)[sext_i32_i64(squot32(local_tid_45616,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45631 =
                     slt64(srem64((sext_i32_i64(local_tid_45616) + 1) *
                                  (segscan_group_sizze_41244 *
                                   sdiv_up64(m_29259 * iota32_arg_29658,
                                             sext_i32_i64(num_threads_45590))) -
                                  1, iota32_arg_29658),
                           (sext_i32_i64(local_tid_45616) + 1) *
                           (segscan_group_sizze_41244 * sdiv_up64(m_29259 *
                                                                  iota32_arg_29658,
                                                                  sext_i32_i64(num_threads_45590))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45616, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_41244 *
                                                 sdiv_up64(m_29259 *
                                                           iota32_arg_29658,
                                                           sext_i32_i64(num_threads_45590))) -
                                1));
                
                if (inactive_45631) {
                    x_41248 = x_41249;
                }
                if (!inactive_45631) {
                    float defunc_1_op_res_41250 = x_41248 + x_41249;
                    
                    x_41248 = defunc_1_op_res_41250;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)] =
                    x_41248;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45616, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)] =
                x_41249;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_41157, m_29259) && slt64(gtid_41165, iota32_arg_29658)) {
            ((__global float *) mem_44295)[gtid_41157 * iota32_arg_29658 +
                                           gtid_41165] = ((__local
                                                           float *) scan_arr_mem_45620)[sext_i32_i64(local_tid_45616)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41244
}
__kernel void mainziscan_stage3_40182(__global int *global_failure,
                                      int64_t N_29258, int64_t m_29259,
                                      int64_t num_groups_40200, __global
                                      unsigned char *mem_44165,
                                      int32_t num_threads_45223,
                                      int32_t required_groups_45265)
{
    #define segscan_group_sizze_40199 (mainzisegscan_group_sizze_40176)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45266;
    int32_t local_tid_45267;
    int64_t group_sizze_45270;
    int32_t wave_sizze_45269;
    int32_t group_tid_45268;
    
    global_tid_45266 = get_global_id(0);
    local_tid_45267 = get_local_id(0);
    group_sizze_45270 = get_local_size(0);
    wave_sizze_45269 = LOCKSTEP_WIDTH;
    group_tid_45268 = get_group_id(0);
    
    int32_t phys_tid_40182;
    
    phys_tid_40182 = global_tid_45266;
    
    int32_t phys_group_id_45271;
    
    phys_group_id_45271 = get_group_id(0);
    for (int32_t i_45272 = 0; i_45272 < sdiv_up32(required_groups_45265 -
                                                  phys_group_id_45271,
                                                  sext_i64_i32(num_groups_40200));
         i_45272++) {
        int32_t virt_group_id_45273 = phys_group_id_45271 + i_45272 *
                sext_i64_i32(num_groups_40200);
        int64_t flat_idx_45274 = sext_i32_i64(virt_group_id_45273) *
                segscan_group_sizze_40199 + sext_i32_i64(local_tid_45267);
        int64_t gtid_40173 = squot64(flat_idx_45274, N_29258);
        int64_t gtid_40181 = flat_idx_45274 - squot64(flat_idx_45274, N_29258) *
                N_29258;
        int64_t orig_group_45275 = squot64(flat_idx_45274,
                                           segscan_group_sizze_40199 *
                                           sdiv_up64(m_29259 * N_29258,
                                                     sext_i32_i64(num_threads_45223)));
        int64_t carry_in_flat_idx_45276 = orig_group_45275 *
                (segscan_group_sizze_40199 * sdiv_up64(m_29259 * N_29258,
                                                       sext_i32_i64(num_threads_45223))) -
                1;
        
        if (slt64(gtid_40173, m_29259) && slt64(gtid_40181, N_29258)) {
            if (!(orig_group_45275 == 0 || (flat_idx_45274 ==
                                            (orig_group_45275 + 1) *
                                            (segscan_group_sizze_40199 *
                                             sdiv_up64(m_29259 * N_29258,
                                                       sext_i32_i64(num_threads_45223))) -
                                            1 || slt64(srem64(flat_idx_45274,
                                                              N_29258),
                                                       flat_idx_45274 -
                                                       carry_in_flat_idx_45276)))) {
                int64_t x_40204;
                int64_t x_40205;
                
                x_40204 = ((__global
                            int64_t *) mem_44165)[squot64(carry_in_flat_idx_45276,
                                                          N_29258) * N_29258 +
                                                  (carry_in_flat_idx_45276 -
                                                   squot64(carry_in_flat_idx_45276,
                                                           N_29258) * N_29258)];
                x_40205 = ((__global int64_t *) mem_44165)[gtid_40173 *
                                                           N_29258 +
                                                           gtid_40181];
                
                int64_t defunc_1_op_res_40206;
                
                defunc_1_op_res_40206 = add64(x_40204, x_40205);
                x_40204 = defunc_1_op_res_40206;
                ((__global int64_t *) mem_44165)[gtid_40173 * N_29258 +
                                                 gtid_40181] = x_40204;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40199
}
__kernel void mainziscan_stage3_41166(__global int *global_failure,
                                      int64_t m_29259, int64_t iota32_arg_29658,
                                      int64_t num_groups_41245, __global
                                      unsigned char *mem_44295,
                                      int32_t num_threads_45590,
                                      int32_t required_groups_45632)
{
    #define segscan_group_sizze_41244 (mainzisegscan_group_sizze_41160)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45633;
    int32_t local_tid_45634;
    int64_t group_sizze_45637;
    int32_t wave_sizze_45636;
    int32_t group_tid_45635;
    
    global_tid_45633 = get_global_id(0);
    local_tid_45634 = get_local_id(0);
    group_sizze_45637 = get_local_size(0);
    wave_sizze_45636 = LOCKSTEP_WIDTH;
    group_tid_45635 = get_group_id(0);
    
    int32_t phys_tid_41166;
    
    phys_tid_41166 = global_tid_45633;
    
    int32_t phys_group_id_45638;
    
    phys_group_id_45638 = get_group_id(0);
    for (int32_t i_45639 = 0; i_45639 < sdiv_up32(required_groups_45632 -
                                                  phys_group_id_45638,
                                                  sext_i64_i32(num_groups_41245));
         i_45639++) {
        int32_t virt_group_id_45640 = phys_group_id_45638 + i_45639 *
                sext_i64_i32(num_groups_41245);
        int64_t flat_idx_45641 = sext_i32_i64(virt_group_id_45640) *
                segscan_group_sizze_41244 + sext_i32_i64(local_tid_45634);
        int64_t gtid_41157 = squot64(flat_idx_45641, iota32_arg_29658);
        int64_t gtid_41165 = flat_idx_45641 - squot64(flat_idx_45641,
                                                      iota32_arg_29658) *
                iota32_arg_29658;
        int64_t orig_group_45642 = squot64(flat_idx_45641,
                                           segscan_group_sizze_41244 *
                                           sdiv_up64(m_29259 * iota32_arg_29658,
                                                     sext_i32_i64(num_threads_45590)));
        int64_t carry_in_flat_idx_45643 = orig_group_45642 *
                (segscan_group_sizze_41244 * sdiv_up64(m_29259 *
                                                       iota32_arg_29658,
                                                       sext_i32_i64(num_threads_45590))) -
                1;
        
        if (slt64(gtid_41157, m_29259) && slt64(gtid_41165, iota32_arg_29658)) {
            if (!(orig_group_45642 == 0 || (flat_idx_45641 ==
                                            (orig_group_45642 + 1) *
                                            (segscan_group_sizze_41244 *
                                             sdiv_up64(m_29259 *
                                                       iota32_arg_29658,
                                                       sext_i32_i64(num_threads_45590))) -
                                            1 || slt64(srem64(flat_idx_45641,
                                                              iota32_arg_29658),
                                                       flat_idx_45641 -
                                                       carry_in_flat_idx_45643)))) {
                float x_41248;
                float x_41249;
                
                x_41248 = ((__global
                            float *) mem_44295)[squot64(carry_in_flat_idx_45643,
                                                        iota32_arg_29658) *
                                                iota32_arg_29658 +
                                                (carry_in_flat_idx_45643 -
                                                 squot64(carry_in_flat_idx_45643,
                                                         iota32_arg_29658) *
                                                 iota32_arg_29658)];
                x_41249 = ((__global float *) mem_44295)[gtid_41157 *
                                                         iota32_arg_29658 +
                                                         gtid_41165];
                
                float defunc_1_op_res_41250;
                
                defunc_1_op_res_41250 = x_41248 + x_41249;
                x_41248 = defunc_1_op_res_41250;
                ((__global float *) mem_44295)[gtid_41157 * iota32_arg_29658 +
                                               gtid_41165] = x_41248;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41244
}
__kernel void mainzisegmap_38105(__global int *global_failure, int64_t N_29258,
                                 float freq_29264, int64_t i32_res_29278,
                                 __global
                                 unsigned char *mappingindices_mem_43377,
                                 __global unsigned char *mem_43382)
{
    #define segmap_group_sizze_38178 (mainzisegmap_group_sizze_38108)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44630;
    int32_t local_tid_44631;
    int64_t group_sizze_44634;
    int32_t wave_sizze_44633;
    int32_t group_tid_44632;
    
    global_tid_44630 = get_global_id(0);
    local_tid_44631 = get_local_id(0);
    group_sizze_44634 = get_local_size(0);
    wave_sizze_44633 = LOCKSTEP_WIDTH;
    group_tid_44632 = get_group_id(0);
    
    int32_t phys_tid_38105;
    
    phys_tid_38105 = global_tid_44630;
    
    int64_t gtid_38103;
    
    gtid_38103 = squot64(sext_i32_i64(group_tid_44632) *
                         segmap_group_sizze_38178 +
                         sext_i32_i64(local_tid_44631), N_29258);
    
    int64_t gtid_38104;
    
    gtid_38104 = sext_i32_i64(group_tid_44632) * segmap_group_sizze_38178 +
        sext_i32_i64(local_tid_44631) - squot64(sext_i32_i64(group_tid_44632) *
                                                segmap_group_sizze_38178 +
                                                sext_i32_i64(local_tid_44631),
                                                N_29258) * N_29258;
    if (slt64(gtid_38103, i32_res_29278) && slt64(gtid_38104, N_29258)) {
        int32_t index_primexp_41372 = sext_i64_i32(gtid_38103);
        bool index_primexp_41369 = index_primexp_41372 == 0;
        float defunc_0_f_res_38184;
        
        if (index_primexp_41369) {
            defunc_0_f_res_38184 = 1.0F;
        } else {
            int32_t x_38183 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_38104];
            bool cond_38185 = index_primexp_41372 == 1;
            float defunc_0_f_res_f_res_38186;
            
            if (cond_38185) {
                float i32_res_38187 = sitofp_i32_f32(x_38183);
                
                defunc_0_f_res_f_res_38186 = i32_res_38187;
            } else {
                int32_t r32_arg_38188 = sdiv32(index_primexp_41372, 2);
                float i32_res_38189 = sitofp_i32_f32(r32_arg_38188);
                float i32_res_38190 = sitofp_i32_f32(x_38183);
                float x_38191 = 6.2831855F * i32_res_38189;
                float x_38192 = i32_res_38190 * x_38191;
                float angle_38193 = x_38192 / freq_29264;
                int32_t x_38194 = smod32(index_primexp_41372, 2);
                bool cond_38195 = x_38194 == 0;
                float defunc_0_f_res_f_res_f_res_38196;
                
                if (cond_38195) {
                    float sin_res_38197;
                    
                    sin_res_38197 = futrts_sin32(angle_38193);
                    defunc_0_f_res_f_res_f_res_38196 = sin_res_38197;
                } else {
                    float cos_res_38198;
                    
                    cos_res_38198 = futrts_cos32(angle_38193);
                    defunc_0_f_res_f_res_f_res_38196 = cos_res_38198;
                }
                defunc_0_f_res_f_res_38186 = defunc_0_f_res_f_res_f_res_38196;
            }
            defunc_0_f_res_38184 = defunc_0_f_res_f_res_38186;
        }
        ((__global float *) mem_43382)[gtid_38103 * N_29258 + gtid_38104] =
            defunc_0_f_res_38184;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38178
}
__kernel void mainzisegmap_38283(__global int *global_failure, int64_t N_29258,
                                 float freq_29264, int64_t i32_res_29278,
                                 __global
                                 unsigned char *mappingindices_mem_43377,
                                 __global unsigned char *mem_43386)
{
    #define segmap_group_sizze_38352 (mainzisegmap_group_sizze_38286)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44635;
    int32_t local_tid_44636;
    int64_t group_sizze_44639;
    int32_t wave_sizze_44638;
    int32_t group_tid_44637;
    
    global_tid_44635 = get_global_id(0);
    local_tid_44636 = get_local_id(0);
    group_sizze_44639 = get_local_size(0);
    wave_sizze_44638 = LOCKSTEP_WIDTH;
    group_tid_44637 = get_group_id(0);
    
    int32_t phys_tid_38283;
    
    phys_tid_38283 = global_tid_44635;
    
    int64_t gtid_38281;
    
    gtid_38281 = squot64(sext_i32_i64(group_tid_44637) *
                         segmap_group_sizze_38352 +
                         sext_i32_i64(local_tid_44636), N_29258);
    
    int64_t gtid_38282;
    
    gtid_38282 = sext_i32_i64(group_tid_44637) * segmap_group_sizze_38352 +
        sext_i32_i64(local_tid_44636) - squot64(sext_i32_i64(group_tid_44637) *
                                                segmap_group_sizze_38352 +
                                                sext_i32_i64(local_tid_44636),
                                                N_29258) * N_29258;
    if (slt64(gtid_38281, i32_res_29278) && slt64(gtid_38282, N_29258)) {
        int32_t index_primexp_41381 = sext_i64_i32(gtid_38281);
        bool index_primexp_41378 = index_primexp_41381 == 0;
        float defunc_0_f_res_38358;
        
        if (index_primexp_41378) {
            defunc_0_f_res_38358 = 1.0F;
        } else {
            int32_t x_38357 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_38282];
            int32_t i_38359 = add32(1, index_primexp_41381);
            int32_t r32_arg_38360 = sdiv32(i_38359, 2);
            float i32_res_38361 = sitofp_i32_f32(r32_arg_38360);
            float i32_res_38362 = sitofp_i32_f32(x_38357);
            float x_38363 = 6.2831855F * i32_res_38361;
            float x_38364 = i32_res_38362 * x_38363;
            float angle_38365 = x_38364 / freq_29264;
            int32_t x_38366 = smod32(i_38359, 2);
            bool cond_38367 = x_38366 == 0;
            float defunc_0_f_res_f_res_38368;
            
            if (cond_38367) {
                float sin_res_38369;
                
                sin_res_38369 = futrts_sin32(angle_38365);
                defunc_0_f_res_f_res_38368 = sin_res_38369;
            } else {
                float cos_res_38370;
                
                cos_res_38370 = futrts_cos32(angle_38365);
                defunc_0_f_res_f_res_38368 = cos_res_38370;
            }
            defunc_0_f_res_38358 = defunc_0_f_res_f_res_38368;
        }
        ((__global float *) mem_43386)[gtid_38281 * N_29258 + gtid_38282] =
            defunc_0_f_res_38358;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38352
}
__kernel void mainzisegmap_38411(__global int *global_failure, int64_t N_29258,
                                 int64_t i32_res_29278, float i32_res_29343,
                                 __global unsigned char *mem_43390, __global
                                 unsigned char *mem_43394)
{
    #define segmap_group_sizze_38435 (mainzisegmap_group_sizze_38414)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44640;
    int32_t local_tid_44641;
    int64_t group_sizze_44644;
    int32_t wave_sizze_44643;
    int32_t group_tid_44642;
    
    global_tid_44640 = get_global_id(0);
    local_tid_44641 = get_local_id(0);
    group_sizze_44644 = get_local_size(0);
    wave_sizze_44643 = LOCKSTEP_WIDTH;
    group_tid_44642 = get_group_id(0);
    
    int32_t phys_tid_38411;
    
    phys_tid_38411 = global_tid_44640;
    
    int64_t gtid_38409;
    
    gtid_38409 = squot64(sext_i32_i64(group_tid_44642) *
                         segmap_group_sizze_38435 +
                         sext_i32_i64(local_tid_44641), i32_res_29278);
    
    int64_t gtid_38410;
    
    gtid_38410 = sext_i32_i64(group_tid_44642) * segmap_group_sizze_38435 +
        sext_i32_i64(local_tid_44641) - squot64(sext_i32_i64(group_tid_44642) *
                                                segmap_group_sizze_38435 +
                                                sext_i32_i64(local_tid_44641),
                                                i32_res_29278) * i32_res_29278;
    if (slt64(gtid_38409, N_29258) && slt64(gtid_38410, i32_res_29278)) {
        float x_38438 = ((__global float *) mem_43390)[gtid_38409 *
                                                       i32_res_29278 +
                                                       gtid_38410];
        float defunc_0_f_res_38439 = i32_res_29343 + x_38438;
        
        ((__global float *) mem_43394)[gtid_38409 * i32_res_29278 +
                                       gtid_38410] = defunc_0_f_res_38439;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38435
}
__kernel void mainzisegmap_38444(__global int *global_failure, int64_t N_29258,
                                 int64_t m_29259, int32_t n_29263,
                                 int32_t k2p2zq_29276, int64_t i32_res_29278,
                                 int64_t num_groups_38469, __global
                                 unsigned char *binop_p_mem_43387, __global
                                 unsigned char *mem_43394, __global
                                 unsigned char *mem_43397, __global
                                 unsigned char *mem_43401, __global
                                 unsigned char *mem_43443)
{
    #define segmap_group_sizze_38468 (mainzisegmap_group_sizze_38446)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44648;
    int32_t local_tid_44649;
    int64_t group_sizze_44652;
    int32_t wave_sizze_44651;
    int32_t group_tid_44650;
    
    global_tid_44648 = get_global_id(0);
    local_tid_44649 = get_local_id(0);
    group_sizze_44652 = get_local_size(0);
    wave_sizze_44651 = LOCKSTEP_WIDTH;
    group_tid_44650 = get_group_id(0);
    
    int32_t phys_tid_38444;
    
    phys_tid_38444 = global_tid_44648;
    
    int32_t phys_group_id_44653;
    
    phys_group_id_44653 = get_group_id(0);
    for (int32_t i_44654 = 0; i_44654 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259, segmap_group_sizze_38468)) -
                   phys_group_id_44653, sext_i64_i32(num_groups_38469));
         i_44654++) {
        int32_t virt_group_id_44655 = phys_group_id_44653 + i_44654 *
                sext_i64_i32(num_groups_38469);
        int64_t gtid_38443 = sext_i32_i64(virt_group_id_44655) *
                segmap_group_sizze_38468 + sext_i32_i64(local_tid_44649);
        
        if (slt64(gtid_38443, m_29259)) {
            for (int32_t i_43359 = 0; i_43359 < k2p2zq_29276; i_43359++) {
                int64_t i_43307 = sext_i32_i64(i_43359);
                
                for (int32_t i_43358 = 0; i_43358 < k2p2zq_29276; i_43358++) {
                    int64_t i_43311 = sext_i32_i64(i_43358);
                    float defunc_2_reduce_res_38477;
                    float redout_43313 = 0.0F;
                    
                    for (int32_t i_43357 = 0; i_43357 < n_29263; i_43357++) {
                        int64_t i_43314 = sext_i32_i64(i_43357);
                        float x_38481 = ((__global float *) mem_43397)[i_43314 *
                                                                       m_29259 +
                                                                       gtid_38443];
                        float x_38482 = ((__global
                                          float *) binop_p_mem_43387)[i_43307 *
                                                                      N_29258 +
                                                                      i_43314];
                        float x_38483 = ((__global float *) mem_43394)[i_43314 *
                                                                       i32_res_29278 +
                                                                       i_43311];
                        float x_38484 = x_38482 * x_38483;
                        bool isnan_res_38485;
                        
                        isnan_res_38485 = futrts_isnan32(x_38481);
                        
                        float y_38486;
                        
                        if (isnan_res_38485) {
                            y_38486 = 0.0F;
                        } else {
                            y_38486 = 1.0F;
                        }
                        
                        float defunc_2_f_res_38487 = x_38484 * y_38486;
                        float defunc_1_op_res_38480 = defunc_2_f_res_38487 +
                              redout_43313;
                        float redout_tmp_44658 = defunc_1_op_res_38480;
                        
                        redout_43313 = redout_tmp_44658;
                    }
                    defunc_2_reduce_res_38477 = redout_43313;
                    ((__global float *) mem_43401)[phys_tid_38444 + (i_43307 *
                                                                     (num_groups_38469 *
                                                                      segmap_group_sizze_38468 *
                                                                      i32_res_29278) +
                                                                     i_43311 *
                                                                     (num_groups_38469 *
                                                                      segmap_group_sizze_38468))] =
                        defunc_2_reduce_res_38477;
                }
            }
            for (int64_t i_44659 = 0; i_44659 < i32_res_29278; i_44659++) {
                for (int64_t i_44660 = 0; i_44660 < i32_res_29278; i_44660++) {
                    ((__global float *) mem_43443)[i_44659 * (m_29259 *
                                                              i32_res_29278) +
                                                   i_44660 * m_29259 +
                                                   gtid_38443] = ((__global
                                                                   float *) mem_43401)[phys_tid_38444 +
                                                                                       (i_44659 *
                                                                                        (num_groups_38469 *
                                                                                         segmap_group_sizze_38468 *
                                                                                         i32_res_29278) +
                                                                                        i_44660 *
                                                                                        (num_groups_38469 *
                                                                                         segmap_group_sizze_38468))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38468
}
__kernel void mainzisegmap_38490(__global int *global_failure, int64_t m_29259,
                                 int64_t N_29260, int32_t n_29263,
                                 int32_t k2p2zq_29276, int64_t i32_res_29278,
                                 int64_t num_groups_38646, __global
                                 unsigned char *images_mem_43378, __global
                                 unsigned char *mem_43390, __global
                                 unsigned char *mem_43394, __global
                                 unsigned char *mem_43446, __global
                                 unsigned char *mem_43462)
{
    #define segmap_group_sizze_38645 (mainzisegmap_group_sizze_38493)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44661;
    int32_t local_tid_44662;
    int64_t group_sizze_44665;
    int32_t wave_sizze_44664;
    int32_t group_tid_44663;
    
    global_tid_44661 = get_global_id(0);
    local_tid_44662 = get_local_id(0);
    group_sizze_44665 = get_local_size(0);
    wave_sizze_44664 = LOCKSTEP_WIDTH;
    group_tid_44663 = get_group_id(0);
    
    int32_t phys_tid_38490;
    
    phys_tid_38490 = global_tid_44661;
    
    int32_t phys_group_id_44666;
    
    phys_group_id_44666 = get_group_id(0);
    for (int32_t i_44667 = 0; i_44667 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259 * i32_res_29278,
                                          segmap_group_sizze_38645)) -
                   phys_group_id_44666, sext_i64_i32(num_groups_38646));
         i_44667++) {
        int32_t virt_group_id_44668 = phys_group_id_44666 + i_44667 *
                sext_i64_i32(num_groups_38646);
        int64_t gtid_38488 = squot64(sext_i32_i64(virt_group_id_44668) *
                                     segmap_group_sizze_38645 +
                                     sext_i32_i64(local_tid_44662),
                                     i32_res_29278);
        int64_t gtid_38489 = sext_i32_i64(virt_group_id_44668) *
                segmap_group_sizze_38645 + sext_i32_i64(local_tid_44662) -
                squot64(sext_i32_i64(virt_group_id_44668) *
                        segmap_group_sizze_38645 +
                        sext_i32_i64(local_tid_44662), i32_res_29278) *
                i32_res_29278;
        
        if (slt64(gtid_38488, m_29259) && slt64(gtid_38489, i32_res_29278)) {
            for (int32_t i_43361 = 0; i_43361 < k2p2zq_29276; i_43361++) {
                int64_t i_43317 = sext_i32_i64(i_43361);
                float defunc_2_reduce_res_38657;
                float redout_43319 = 0.0F;
                
                for (int32_t i_43360 = 0; i_43360 < n_29263; i_43360++) {
                    int64_t i_43320 = sext_i32_i64(i_43360);
                    float x_38661 = ((__global
                                      float *) images_mem_43378)[gtid_38488 *
                                                                 N_29260 +
                                                                 i_43320];
                    float x_38662 = ((__global float *) mem_43390)[i_43320 *
                                                                   i32_res_29278 +
                                                                   gtid_38489];
                    float x_38663 = ((__global float *) mem_43394)[i_43320 *
                                                                   i32_res_29278 +
                                                                   i_43317];
                    float x_38664 = x_38662 * x_38663;
                    bool isnan_res_38665;
                    
                    isnan_res_38665 = futrts_isnan32(x_38661);
                    
                    float y_38666;
                    
                    if (isnan_res_38665) {
                        y_38666 = 0.0F;
                    } else {
                        y_38666 = 1.0F;
                    }
                    
                    float defunc_2_f_res_38667 = x_38664 * y_38666;
                    float defunc_1_op_res_38660 = defunc_2_f_res_38667 +
                          redout_43319;
                    float redout_tmp_44670 = defunc_1_op_res_38660;
                    
                    redout_43319 = redout_tmp_44670;
                }
                defunc_2_reduce_res_38657 = redout_43319;
                ((__global float *) mem_43446)[phys_tid_38490 + i_43317 *
                                               (num_groups_38646 *
                                                segmap_group_sizze_38645)] =
                    defunc_2_reduce_res_38657;
            }
            for (int64_t i_44671 = 0; i_44671 < i32_res_29278; i_44671++) {
                ((__global float *) mem_43462)[i_44671 * (i32_res_29278 *
                                                          m_29259) +
                                               gtid_38488 * i32_res_29278 +
                                               gtid_38489] = ((__global
                                                               float *) mem_43446)[phys_tid_38490 +
                                                                                   i_44671 *
                                                                                   (num_groups_38646 *
                                                                                    segmap_group_sizze_38645)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38645
}
__kernel void mainzisegmap_38974(__global int *global_failure, int64_t m_29259,
                                 int64_t i32_res_29278, int64_t i32_res_29411,
                                 int64_t i32_res_29426, int64_t x_29427,
                                 int64_t j_m_i_29430,
                                 int64_t gauss_jordan_res_r_ixfn_43614,
                                 int64_t gauss_jordan_res_r_ixfn_43615,
                                 int64_t gauss_jordan_res_r_ixfn_43617, __global
                                 unsigned char *gauss_jordan_res_r_mem_43619,
                                 __global unsigned char *mem_43624)
{
    #define segmap_group_sizze_39525 (mainzisegmap_group_sizze_38978)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44827;
    int32_t local_tid_44828;
    int64_t group_sizze_44831;
    int32_t wave_sizze_44830;
    int32_t group_tid_44829;
    
    global_tid_44827 = get_global_id(0);
    local_tid_44828 = get_local_id(0);
    group_sizze_44831 = get_local_size(0);
    wave_sizze_44830 = LOCKSTEP_WIDTH;
    group_tid_44829 = get_group_id(0);
    
    int32_t phys_tid_38974;
    
    phys_tid_38974 = global_tid_44827;
    
    int64_t gtid_38971;
    
    gtid_38971 = squot64(sext_i32_i64(group_tid_44829) *
                         segmap_group_sizze_39525 +
                         sext_i32_i64(local_tid_44828), i32_res_29278 *
                         j_m_i_29430);
    
    int64_t gtid_slice_38969;
    
    gtid_slice_38969 = squot64(sext_i32_i64(group_tid_44829) *
                               segmap_group_sizze_39525 +
                               sext_i32_i64(local_tid_44828) -
                               squot64(sext_i32_i64(group_tid_44829) *
                                       segmap_group_sizze_39525 +
                                       sext_i32_i64(local_tid_44828),
                                       i32_res_29278 * j_m_i_29430) *
                               (i32_res_29278 * j_m_i_29430), j_m_i_29430);
    
    int64_t gtid_slice_38970;
    
    gtid_slice_38970 = sext_i32_i64(group_tid_44829) *
        segmap_group_sizze_39525 + sext_i32_i64(local_tid_44828) -
        squot64(sext_i32_i64(group_tid_44829) * segmap_group_sizze_39525 +
                sext_i32_i64(local_tid_44828), i32_res_29278 * j_m_i_29430) *
        (i32_res_29278 * j_m_i_29430) - squot64(sext_i32_i64(group_tid_44829) *
                                                segmap_group_sizze_39525 +
                                                sext_i32_i64(local_tid_44828) -
                                                squot64(sext_i32_i64(group_tid_44829) *
                                                        segmap_group_sizze_39525 +
                                                        sext_i32_i64(local_tid_44828),
                                                        i32_res_29278 *
                                                        j_m_i_29430) *
                                                (i32_res_29278 * j_m_i_29430),
                                                j_m_i_29430) * j_m_i_29430;
    if ((slt64(gtid_38971, m_29259) && slt64(gtid_slice_38969,
                                             i32_res_29278)) &&
        slt64(gtid_slice_38970, j_m_i_29430)) {
        int64_t slice_39529 = i32_res_29278 + gtid_slice_38970;
        int64_t binop_x_41439 = x_29427 * gtid_38971;
        int64_t binop_y_41440 = i32_res_29426 * gtid_slice_38969;
        int64_t binop_x_41441 = binop_x_41439 + binop_y_41440;
        int64_t binop_x_41442 = slice_39529 + binop_x_41441;
        int64_t new_index_41443 = squot64(binop_x_41442, i32_res_29411);
        int64_t binop_y_41455 = i32_res_29411 * new_index_41443;
        int64_t new_index_41456 = binop_x_41442 - binop_y_41455;
        float v_39530 = ((__global
                          float *) gauss_jordan_res_r_mem_43619)[gauss_jordan_res_r_ixfn_43614 +
                                                                 (new_index_41443 *
                                                                  gauss_jordan_res_r_ixfn_43615 +
                                                                  new_index_41456 *
                                                                  gauss_jordan_res_r_ixfn_43617)];
        
        ((__global float *) mem_43624)[gtid_38971 * (j_m_i_29430 *
                                                     i32_res_29278) +
                                       gtid_slice_38969 * j_m_i_29430 +
                                       gtid_slice_38970] = v_39530;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39525
}
__kernel void mainzisegmap_39140(__global int *global_failure, int64_t m_29259,
                                 int64_t i32_res_29411,
                                 int64_t ctx_param_ext_43577,
                                 int64_t ctx_param_ext_43578,
                                 int64_t ctx_param_ext_43580, __global
                                 unsigned char *mem_param_43582, __global
                                 unsigned char *mem_43602)
{
    #define segmap_group_sizze_39513 (mainzisegmap_group_sizze_39143)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44821;
    int32_t local_tid_44822;
    int64_t group_sizze_44825;
    int32_t wave_sizze_44824;
    int32_t group_tid_44823;
    
    global_tid_44821 = get_global_id(0);
    local_tid_44822 = get_local_id(0);
    group_sizze_44825 = get_local_size(0);
    wave_sizze_44824 = LOCKSTEP_WIDTH;
    group_tid_44823 = get_group_id(0);
    
    int32_t phys_tid_39140;
    
    phys_tid_39140 = global_tid_44821;
    
    int64_t gtid_39138;
    
    gtid_39138 = squot64(sext_i32_i64(group_tid_44823) *
                         segmap_group_sizze_39513 +
                         sext_i32_i64(local_tid_44822), i32_res_29411);
    
    int64_t gtid_39139;
    
    gtid_39139 = sext_i32_i64(group_tid_44823) * segmap_group_sizze_39513 +
        sext_i32_i64(local_tid_44822) - squot64(sext_i32_i64(group_tid_44823) *
                                                segmap_group_sizze_39513 +
                                                sext_i32_i64(local_tid_44822),
                                                i32_res_29411) * i32_res_29411;
    if (slt64(gtid_39138, m_29259) && slt64(gtid_39139, i32_res_29411)) {
        float write_value_39519 = ((__global float *) mem_43602)[gtid_39138 *
                                                                 i32_res_29411 +
                                                                 gtid_39139];
        
        if ((sle64(0, gtid_39138) && slt64(gtid_39138, m_29259)) && (sle64(0,
                                                                           gtid_39139) &&
                                                                     slt64(gtid_39139,
                                                                           i32_res_29411))) {
            ((__global float *) mem_param_43582)[ctx_param_ext_43577 +
                                                 (gtid_39138 *
                                                  ctx_param_ext_43578 +
                                                  gtid_39139 *
                                                  ctx_param_ext_43580)] =
                write_value_39519;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39513
}
__kernel void mainzisegmap_39194(__global int *global_failure, int64_t m_29259,
                                 int32_t k2p2zq_29276, int32_t m_29409,
                                 int64_t i32_res_29411, int32_t i_39416,
                                 int64_t i32_res_39418,
                                 int64_t ctx_param_ext_43577,
                                 int64_t ctx_param_ext_43578,
                                 int64_t ctx_param_ext_43580, __global
                                 unsigned char *mem_param_43582, __global
                                 unsigned char *mem_43598, __global
                                 unsigned char *mem_43602)
{
    #define segmap_group_sizze_39479 (mainzisegmap_group_sizze_39197)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44816;
    int32_t local_tid_44817;
    int64_t group_sizze_44820;
    int32_t wave_sizze_44819;
    int32_t group_tid_44818;
    
    global_tid_44816 = get_global_id(0);
    local_tid_44817 = get_local_id(0);
    group_sizze_44820 = get_local_size(0);
    wave_sizze_44819 = LOCKSTEP_WIDTH;
    group_tid_44818 = get_group_id(0);
    
    int32_t phys_tid_39194;
    
    phys_tid_39194 = global_tid_44816;
    
    int64_t gtid_39192;
    
    gtid_39192 = squot64(sext_i32_i64(group_tid_44818) *
                         segmap_group_sizze_39479 +
                         sext_i32_i64(local_tid_44817), i32_res_29411);
    
    int64_t gtid_39193;
    
    gtid_39193 = sext_i32_i64(group_tid_44818) * segmap_group_sizze_39479 +
        sext_i32_i64(local_tid_44817) - squot64(sext_i32_i64(group_tid_44818) *
                                                segmap_group_sizze_39479 +
                                                sext_i32_i64(local_tid_44817),
                                                i32_res_29411) * i32_res_29411;
    if (slt64(gtid_39192, m_29259) && slt64(gtid_39193, i32_res_29411)) {
        bool cond_39484 = ((__global bool *) mem_43598)[gtid_39192];
        int32_t defunc_0_f_res_39486 = sext_i64_i32(gtid_39193);
        int32_t defunc_0_f_res_39487 = sdiv32(defunc_0_f_res_39486, m_29409);
        int32_t defunc_0_f_res_39488 = smod32(defunc_0_f_res_39486, m_29409);
        float defunc_0_f_res_39489;
        
        if (cond_39484) {
            int32_t x_39490 = mul32(m_29409, defunc_0_f_res_39487);
            int32_t i32_arg_39491 = add32(defunc_0_f_res_39488, x_39490);
            int64_t i32_res_39492 = sext_i32_i64(i32_arg_39491);
            float defunc_0_f_res_t_res_39493 = ((__global
                                                 float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                           (gtid_39192 *
                                                                            ctx_param_ext_43578 +
                                                                            i32_res_39492 *
                                                                            ctx_param_ext_43580)];
            
            defunc_0_f_res_39489 = defunc_0_f_res_t_res_39493;
        } else {
            float v1_39483 = ((__global
                               float *) mem_param_43582)[ctx_param_ext_43577 +
                                                         (gtid_39192 *
                                                          ctx_param_ext_43578 +
                                                          i32_res_39418 *
                                                          ctx_param_ext_43580)];
            int64_t i32_res_39494 = sext_i32_i64(defunc_0_f_res_39488);
            float x_39495 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_39192 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_39494 *
                                                         ctx_param_ext_43580)];
            float x_39496 = x_39495 / v1_39483;
            int32_t y_39497 = sub32(k2p2zq_29276, 1);
            bool cond_39498 = slt32(defunc_0_f_res_39487, y_39497);
            float defunc_0_f_res_f_res_39499;
            
            if (cond_39498) {
                int32_t x_39500 = add32(1, defunc_0_f_res_39487);
                int32_t x_39501 = mul32(m_29409, x_39500);
                int32_t i32_arg_39502 = add32(defunc_0_f_res_39488, x_39501);
                int64_t i32_res_39503 = sext_i32_i64(i32_arg_39502);
                float x_39504 = ((__global
                                  float *) mem_param_43582)[ctx_param_ext_43577 +
                                                            (gtid_39192 *
                                                             ctx_param_ext_43578 +
                                                             i32_res_39503 *
                                                             ctx_param_ext_43580)];
                int32_t i32_arg_39505 = add32(i_39416, x_39501);
                int64_t i32_res_39506 = sext_i32_i64(i32_arg_39505);
                float x_39507 = ((__global
                                  float *) mem_param_43582)[ctx_param_ext_43577 +
                                                            (gtid_39192 *
                                                             ctx_param_ext_43578 +
                                                             i32_res_39506 *
                                                             ctx_param_ext_43580)];
                float y_39508 = x_39496 * x_39507;
                float defunc_0_f_res_f_res_t_res_39509 = x_39504 - y_39508;
                
                defunc_0_f_res_f_res_39499 = defunc_0_f_res_f_res_t_res_39509;
            } else {
                defunc_0_f_res_f_res_39499 = x_39496;
            }
            defunc_0_f_res_39489 = defunc_0_f_res_f_res_39499;
        }
        ((__global float *) mem_43602)[gtid_39192 * i32_res_29411 +
                                       gtid_39193] = defunc_0_f_res_39489;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39479
}
__kernel void mainzisegmap_39262(__global int *global_failure, int64_t m_29259,
                                 int64_t i32_res_39418,
                                 int64_t ctx_param_ext_43577,
                                 int64_t ctx_param_ext_43578,
                                 int64_t ctx_param_ext_43580, __global
                                 unsigned char *mem_param_43582, __global
                                 unsigned char *mem_43598)
{
    #define segmap_group_sizze_39463 (mainzisegmap_group_sizze_39264)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44811;
    int32_t local_tid_44812;
    int64_t group_sizze_44815;
    int32_t wave_sizze_44814;
    int32_t group_tid_44813;
    
    global_tid_44811 = get_global_id(0);
    local_tid_44812 = get_local_id(0);
    group_sizze_44815 = get_local_size(0);
    wave_sizze_44814 = LOCKSTEP_WIDTH;
    group_tid_44813 = get_group_id(0);
    
    int32_t phys_tid_39262;
    
    phys_tid_39262 = global_tid_44811;
    
    int64_t gtid_39261;
    
    gtid_39261 = sext_i32_i64(group_tid_44813) * segmap_group_sizze_39463 +
        sext_i32_i64(local_tid_44812);
    if (slt64(gtid_39261, m_29259)) {
        float v1_39468 = ((__global
                           float *) mem_param_43582)[ctx_param_ext_43577 +
                                                     (gtid_39261 *
                                                      ctx_param_ext_43578 +
                                                      i32_res_39418 *
                                                      ctx_param_ext_43580)];
        bool cond_39469 = v1_39468 == 0.0F;
        
        ((__global bool *) mem_43598)[gtid_39261] = cond_39469;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39463
}
__kernel void mainzisegmap_39355(__global int *global_failure, int64_t m_29259,
                                 int32_t k2p2zq_29276, int64_t i32_res_29278,
                                 int32_t m_29409, int64_t i32_res_29411,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43546,
                                 __global unsigned char *mem_43574)
{
    #define segmap_group_sizze_39399 (mainzisegmap_group_sizze_39358)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44778;
    int32_t local_tid_44779;
    int64_t group_sizze_44782;
    int32_t wave_sizze_44781;
    int32_t group_tid_44780;
    
    global_tid_44778 = get_global_id(0);
    local_tid_44779 = get_local_id(0);
    group_sizze_44782 = get_local_size(0);
    wave_sizze_44781 = LOCKSTEP_WIDTH;
    group_tid_44780 = get_group_id(0);
    
    int32_t phys_tid_39355;
    
    phys_tid_39355 = global_tid_44778;
    
    int64_t gtid_39353;
    
    gtid_39353 = squot64(sext_i32_i64(group_tid_44780) *
                         segmap_group_sizze_39399 +
                         sext_i32_i64(local_tid_44779), i32_res_29411);
    
    int64_t gtid_39354;
    
    gtid_39354 = sext_i32_i64(group_tid_44780) * segmap_group_sizze_39399 +
        sext_i32_i64(local_tid_44779) - squot64(sext_i32_i64(group_tid_44780) *
                                                segmap_group_sizze_39399 +
                                                sext_i32_i64(local_tid_44779),
                                                i32_res_29411) * i32_res_29411;
    if (slt64(gtid_39353, m_29259) && slt64(gtid_39354, i32_res_29411)) {
        int32_t index_primexp_41393 = sext_i64_i32(gtid_39354);
        int32_t defunc_0_f_res_39404 = sdiv32(index_primexp_41393, m_29409);
        int32_t defunc_0_f_res_39405 = smod32(index_primexp_41393, m_29409);
        bool cond_39406 = slt32(defunc_0_f_res_39405, k2p2zq_29276);
        float defunc_0_f_res_39407;
        
        if (cond_39406) {
            int64_t i_39408 = sext_i32_i64(defunc_0_f_res_39404);
            int64_t j_39409 = sext_i32_i64(defunc_0_f_res_39405);
            float defunc_0_f_res_t_res_39410 = ((__global
                                                 float *) defunc_3_map_res_mem_43546)[gtid_39353 *
                                                                                      (i32_res_29278 *
                                                                                       i32_res_29278) +
                                                                                      i_39408 *
                                                                                      i32_res_29278 +
                                                                                      j_39409];
            
            defunc_0_f_res_39407 = defunc_0_f_res_t_res_39410;
        } else {
            int32_t y_39411 = add32(k2p2zq_29276, defunc_0_f_res_39404);
            bool cond_39412 = defunc_0_f_res_39405 == y_39411;
            float defunc_0_f_res_f_res_39413;
            
            if (cond_39412) {
                defunc_0_f_res_f_res_39413 = 1.0F;
            } else {
                defunc_0_f_res_f_res_39413 = 0.0F;
            }
            defunc_0_f_res_39407 = defunc_0_f_res_f_res_39413;
        }
        ((__global float *) mem_43574)[gtid_39353 * i32_res_29411 +
                                       gtid_39354] = defunc_0_f_res_39407;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39399
}
__kernel void mainzisegmap_39536(__global int *global_failure, int64_t N_29258,
                                 int64_t m_29259, int32_t n_29263,
                                 int32_t k2p2zq_29276, int64_t i32_res_29278,
                                 int64_t num_groups_39557, __global
                                 unsigned char *binop_p_mem_43387, __global
                                 unsigned char *mem_43628, __global
                                 unsigned char *mem_43631, __global
                                 unsigned char *mem_43646)
{
    #define segmap_group_sizze_39556 (mainzisegmap_group_sizze_39538)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44835;
    int32_t local_tid_44836;
    int64_t group_sizze_44839;
    int32_t wave_sizze_44838;
    int32_t group_tid_44837;
    
    global_tid_44835 = get_global_id(0);
    local_tid_44836 = get_local_id(0);
    group_sizze_44839 = get_local_size(0);
    wave_sizze_44838 = LOCKSTEP_WIDTH;
    group_tid_44837 = get_group_id(0);
    
    int32_t phys_tid_39536;
    
    phys_tid_39536 = global_tid_44835;
    
    int32_t phys_group_id_44840;
    
    phys_group_id_44840 = get_group_id(0);
    for (int32_t i_44841 = 0; i_44841 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259, segmap_group_sizze_39556)) -
                   phys_group_id_44840, sext_i64_i32(num_groups_39557));
         i_44841++) {
        int32_t virt_group_id_44842 = phys_group_id_44840 + i_44841 *
                sext_i64_i32(num_groups_39557);
        int64_t gtid_39535 = sext_i32_i64(virt_group_id_44842) *
                segmap_group_sizze_39556 + sext_i32_i64(local_tid_44836);
        
        if (slt64(gtid_39535, m_29259)) {
            for (int32_t i_43363 = 0; i_43363 < k2p2zq_29276; i_43363++) {
                int64_t i_43323 = sext_i32_i64(i_43363);
                float defunc_2_reduce_res_39563;
                float redout_43325 = 0.0F;
                
                for (int32_t i_43362 = 0; i_43362 < n_29263; i_43362++) {
                    int64_t i_43326 = sext_i32_i64(i_43362);
                    float x_39568 = ((__global float *) mem_43628)[i_43326 *
                                                                   m_29259 +
                                                                   gtid_39535];
                    bool isnan_res_39569;
                    
                    isnan_res_39569 = futrts_isnan32(x_39568);
                    
                    float defunc_1_f_res_39570;
                    
                    if (isnan_res_39569) {
                        defunc_1_f_res_39570 = 0.0F;
                    } else {
                        float x_39567 = ((__global
                                          float *) binop_p_mem_43387)[i_43323 *
                                                                      N_29258 +
                                                                      i_43326];
                        float defunc_1_f_res_f_res_39571 = x_39567 * x_39568;
                        
                        defunc_1_f_res_39570 = defunc_1_f_res_f_res_39571;
                    }
                    
                    float defunc_1_op_res_39566 = defunc_1_f_res_39570 +
                          redout_43325;
                    float redout_tmp_44844 = defunc_1_op_res_39566;
                    
                    redout_43325 = redout_tmp_44844;
                }
                defunc_2_reduce_res_39563 = redout_43325;
                ((__global float *) mem_43631)[phys_tid_39536 + i_43323 *
                                               (num_groups_39557 *
                                                segmap_group_sizze_39556)] =
                    defunc_2_reduce_res_39563;
            }
            for (int64_t i_44845 = 0; i_44845 < i32_res_29278; i_44845++) {
                ((__global float *) mem_43646)[i_44845 * m_29259 + gtid_39535] =
                    ((__global float *) mem_43631)[phys_tid_39536 + i_44845 *
                                                   (num_groups_39557 *
                                                    segmap_group_sizze_39556)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39556
}
__kernel void mainzisegmap_39677(__global int *global_failure, int64_t m_29259,
                                 int32_t k2p2zq_29276, int64_t i32_res_29278,
                                 int64_t num_groups_39697, __global
                                 unsigned char *mem_43850, __global
                                 unsigned char *mem_43853, __global
                                 unsigned char *mem_43856, __global
                                 unsigned char *mem_43871)
{
    #define segmap_group_sizze_39696 (mainzisegmap_group_sizze_39679)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44967;
    int32_t local_tid_44968;
    int64_t group_sizze_44971;
    int32_t wave_sizze_44970;
    int32_t group_tid_44969;
    
    global_tid_44967 = get_global_id(0);
    local_tid_44968 = get_local_id(0);
    group_sizze_44971 = get_local_size(0);
    wave_sizze_44970 = LOCKSTEP_WIDTH;
    group_tid_44969 = get_group_id(0);
    
    int32_t phys_tid_39677;
    
    phys_tid_39677 = global_tid_44967;
    
    int32_t phys_group_id_44972;
    
    phys_group_id_44972 = get_group_id(0);
    for (int32_t i_44973 = 0; i_44973 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259, segmap_group_sizze_39696)) -
                   phys_group_id_44972, sext_i64_i32(num_groups_39697));
         i_44973++) {
        int32_t virt_group_id_44974 = phys_group_id_44972 + i_44973 *
                sext_i64_i32(num_groups_39697);
        int64_t gtid_39676 = sext_i32_i64(virt_group_id_44974) *
                segmap_group_sizze_39696 + sext_i32_i64(local_tid_44968);
        
        if (slt64(gtid_39676, m_29259)) {
            for (int32_t i_43365 = 0; i_43365 < k2p2zq_29276; i_43365++) {
                int64_t i_43329 = sext_i32_i64(i_43365);
                float defunc_0_f_res_39704;
                float redout_43331 = 0.0F;
                
                for (int32_t i_43364 = 0; i_43364 < k2p2zq_29276; i_43364++) {
                    int64_t i_43332 = sext_i32_i64(i_43364);
                    float x_39708 = ((__global float *) mem_43853)[i_43332 *
                                                                   m_29259 +
                                                                   gtid_39676];
                    float x_39709 = ((__global float *) mem_43850)[i_43329 *
                                                                   (m_29259 *
                                                                    i32_res_29278) +
                                                                   i_43332 *
                                                                   m_29259 +
                                                                   gtid_39676];
                    float defunc_1_f_res_39710 = x_39708 * x_39709;
                    float defunc_1_op_res_39707 = defunc_1_f_res_39710 +
                          redout_43331;
                    float redout_tmp_44976 = defunc_1_op_res_39707;
                    
                    redout_43331 = redout_tmp_44976;
                }
                defunc_0_f_res_39704 = redout_43331;
                ((__global float *) mem_43856)[phys_tid_39677 + i_43329 *
                                               (num_groups_39697 *
                                                segmap_group_sizze_39696)] =
                    defunc_0_f_res_39704;
            }
            for (int64_t i_44977 = 0; i_44977 < i32_res_29278; i_44977++) {
                ((__global float *) mem_43871)[i_44977 * m_29259 + gtid_39676] =
                    ((__global float *) mem_43856)[phys_tid_39677 + i_44977 *
                                                   (num_groups_39697 *
                                                    segmap_group_sizze_39696)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39696
}
__kernel void mainzisegmap_39809(__global int *global_failure, int64_t N_29258,
                                 int64_t m_29259, int32_t k2p2zq_29276,
                                 int64_t i32_res_29278,
                                 int64_t num_groups_39828, __global
                                 unsigned char *mem_43394, __global
                                 unsigned char *mem_43915, __global
                                 unsigned char *mem_43918, __global
                                 unsigned char *mem_43933)
{
    #define segmap_group_sizze_39827 (mainzisegmap_group_sizze_39811)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45055;
    int32_t local_tid_45056;
    int64_t group_sizze_45059;
    int32_t wave_sizze_45058;
    int32_t group_tid_45057;
    
    global_tid_45055 = get_global_id(0);
    local_tid_45056 = get_local_id(0);
    group_sizze_45059 = get_local_size(0);
    wave_sizze_45058 = LOCKSTEP_WIDTH;
    group_tid_45057 = get_group_id(0);
    
    int32_t phys_tid_39809;
    
    phys_tid_39809 = global_tid_45055;
    
    int32_t phys_group_id_45060;
    
    phys_group_id_45060 = get_group_id(0);
    for (int32_t i_45061 = 0; i_45061 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259, segmap_group_sizze_39827)) -
                   phys_group_id_45060, sext_i64_i32(num_groups_39828));
         i_45061++) {
        int32_t virt_group_id_45062 = phys_group_id_45060 + i_45061 *
                sext_i64_i32(num_groups_39828);
        int64_t gtid_39808 = sext_i32_i64(virt_group_id_45062) *
                segmap_group_sizze_39827 + sext_i32_i64(local_tid_45056);
        
        if (slt64(gtid_39808, m_29259)) {
            for (int64_t i_43339 = 0; i_43339 < N_29258; i_43339++) {
                float defunc_0_f_res_39834;
                float redout_43341 = 0.0F;
                
                for (int32_t i_43368 = 0; i_43368 < k2p2zq_29276; i_43368++) {
                    int64_t i_43342 = sext_i32_i64(i_43368);
                    float x_39838 = ((__global float *) mem_43915)[i_43342 *
                                                                   m_29259 +
                                                                   gtid_39808];
                    float x_39839 = ((__global float *) mem_43394)[i_43339 *
                                                                   i32_res_29278 +
                                                                   i_43342];
                    float defunc_1_f_res_39840 = x_39838 * x_39839;
                    float defunc_1_op_res_39837 = defunc_1_f_res_39840 +
                          redout_43341;
                    float redout_tmp_45064 = defunc_1_op_res_39837;
                    
                    redout_43341 = redout_tmp_45064;
                }
                defunc_0_f_res_39834 = redout_43341;
                ((__global float *) mem_43918)[phys_tid_39809 + i_43339 *
                                               (num_groups_39828 *
                                                segmap_group_sizze_39827)] =
                    defunc_0_f_res_39834;
            }
            for (int64_t i_45065 = 0; i_45065 < N_29258; i_45065++) {
                ((__global float *) mem_43933)[i_45065 * m_29259 + gtid_39808] =
                    ((__global float *) mem_43918)[phys_tid_39809 + i_45065 *
                                                   (num_groups_39828 *
                                                    segmap_group_sizze_39827)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39827
}
__kernel void mainzisegmap_40089(__global int *global_failure, int64_t N_29258,
                                 int64_t m_29259, __global
                                 unsigned char *mem_44139, __global
                                 unsigned char *mem_44142, __global
                                 unsigned char *mem_44165, __global
                                 unsigned char *mem_44168)
{
    #define segmap_group_sizze_40255 (mainzisegmap_group_sizze_40092)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45282;
    int32_t local_tid_45283;
    int64_t group_sizze_45286;
    int32_t wave_sizze_45285;
    int32_t group_tid_45284;
    
    global_tid_45282 = get_global_id(0);
    local_tid_45283 = get_local_id(0);
    group_sizze_45286 = get_local_size(0);
    wave_sizze_45285 = LOCKSTEP_WIDTH;
    group_tid_45284 = get_group_id(0);
    
    int32_t phys_tid_40089;
    
    phys_tid_40089 = global_tid_45282;
    
    int64_t gtid_40087;
    
    gtid_40087 = squot64(sext_i32_i64(group_tid_45284) *
                         segmap_group_sizze_40255 +
                         sext_i32_i64(local_tid_45283), N_29258);
    
    int64_t gtid_40088;
    
    gtid_40088 = sext_i32_i64(group_tid_45284) * segmap_group_sizze_40255 +
        sext_i32_i64(local_tid_45283) - squot64(sext_i32_i64(group_tid_45284) *
                                                segmap_group_sizze_40255 +
                                                sext_i32_i64(local_tid_45283),
                                                N_29258) * N_29258;
    if (slt64(gtid_40087, m_29259) && slt64(gtid_40088, N_29258)) {
        float x_40263 = ((__global float *) mem_44168)[gtid_40087 * N_29258 +
                                                       gtid_40088];
        int32_t index_primexp_41409 = sext_i64_i32(gtid_40088);
        bool isnan_res_40266;
        
        isnan_res_40266 = futrts_isnan32(x_40263);
        
        bool defunc_0_p_res_40267 = !isnan_res_40266;
        int64_t defunc_1_f_res_40268;
        
        if (defunc_0_p_res_40267) {
            int64_t x_40264 = ((__global int64_t *) mem_44165)[gtid_40087 *
                                                               N_29258 +
                                                               gtid_40088];
            int64_t defunc_1_f_res_t_res_40269 = sub64(x_40264, 1);
            
            defunc_1_f_res_40268 = defunc_1_f_res_t_res_40269;
        } else {
            defunc_1_f_res_40268 = -1;
        }
        if ((sle64(0, gtid_40087) && slt64(gtid_40087, m_29259)) && (sle64(0,
                                                                           defunc_1_f_res_40268) &&
                                                                     slt64(defunc_1_f_res_40268,
                                                                           N_29258))) {
            ((__global int32_t *) mem_44142)[gtid_40087 * N_29258 +
                                             defunc_1_f_res_40268] =
                index_primexp_41409;
        }
        if ((sle64(0, gtid_40087) && slt64(gtid_40087, m_29259)) && (sle64(0,
                                                                           defunc_1_f_res_40268) &&
                                                                     slt64(defunc_1_f_res_40268,
                                                                           N_29258))) {
            ((__global float *) mem_44139)[gtid_40087 * N_29258 +
                                           defunc_1_f_res_40268] = x_40263;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40255
}
__kernel void mainzisegmap_40165(__global int *global_failure, int64_t N_29258,
                                 int64_t m_29259, int64_t i_29538, __global
                                 unsigned char *mem_44165, __global
                                 unsigned char *mem_44171)
{
    #define segmap_group_sizze_40219 (mainzisegmap_group_sizze_40167)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45277;
    int32_t local_tid_45278;
    int64_t group_sizze_45281;
    int32_t wave_sizze_45280;
    int32_t group_tid_45279;
    
    global_tid_45277 = get_global_id(0);
    local_tid_45278 = get_local_id(0);
    group_sizze_45281 = get_local_size(0);
    wave_sizze_45280 = LOCKSTEP_WIDTH;
    group_tid_45279 = get_group_id(0);
    
    int32_t phys_tid_40165;
    
    phys_tid_40165 = global_tid_45277;
    
    int64_t gtid_40164;
    
    gtid_40164 = sext_i32_i64(group_tid_45279) * segmap_group_sizze_40219 +
        sext_i32_i64(local_tid_45278);
    if (slt64(gtid_40164, m_29259)) {
        int64_t last_res_40223 = ((__global int64_t *) mem_44165)[gtid_40164 *
                                                                  N_29258 +
                                                                  i_29538];
        int32_t defunc_0_f_res_40224 = sext_i64_i32(last_res_40223);
        
        ((__global int32_t *) mem_44171)[gtid_40164] = defunc_0_f_res_40224;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40219
}
__kernel void mainzisegmap_40416(__global int *global_failure, int64_t m_29259,
                                 float hfrac_29265, int32_t k2p2_29274, __global
                                 unsigned char *mem_44225, __global
                                 unsigned char *mem_44228, __global
                                 unsigned char *mem_44231, __global
                                 unsigned char *mem_44233)
{
    #define segmap_group_sizze_40501 (mainzisegmap_group_sizze_40418)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45437;
    int32_t local_tid_45438;
    int64_t group_sizze_45441;
    int32_t wave_sizze_45440;
    int32_t group_tid_45439;
    
    global_tid_45437 = get_global_id(0);
    local_tid_45438 = get_local_id(0);
    group_sizze_45441 = get_local_size(0);
    wave_sizze_45440 = LOCKSTEP_WIDTH;
    group_tid_45439 = get_group_id(0);
    
    int32_t phys_tid_40416;
    
    phys_tid_40416 = global_tid_45437;
    
    int64_t gtid_40415;
    
    gtid_40415 = sext_i32_i64(group_tid_45439) * segmap_group_sizze_40501 +
        sext_i32_i64(local_tid_45438);
    if (slt64(gtid_40415, m_29259)) {
        int32_t defunc_0_f_res_40505 = ((__global
                                         int32_t *) mem_44225)[gtid_40415];
        float defunc_0_f_res_40506 = ((__global float *) mem_44228)[gtid_40415];
        int32_t r32_arg_40507 = sub32(defunc_0_f_res_40505, k2p2_29274);
        float i32_res_40508 = sitofp_i32_f32(r32_arg_40507);
        float sqrt_arg_40509 = defunc_0_f_res_40506 / i32_res_40508;
        float sqrt_res_40510;
        
        sqrt_res_40510 = futrts_sqrt32(sqrt_arg_40509);
        
        float i32_res_40511 = sitofp_i32_f32(defunc_0_f_res_40505);
        float t32_arg_40512 = hfrac_29265 * i32_res_40511;
        int32_t f32_res_40513 = fptosi_f32_i32(t32_arg_40512);
        
        ((__global int32_t *) mem_44231)[gtid_40415] = f32_res_40513;
        ((__global float *) mem_44233)[gtid_40415] = sqrt_res_40510;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40501
}
__kernel void mainzisegmap_40687(__global int *global_failure, float lam_29266,
                                 int64_t iota32_arg_29658, int32_t x_29663,
                                 float i32_res_29671, __global
                                 unsigned char *mappingindices_mem_43377,
                                 __global unsigned char *mem_44275, __global
                                 unsigned char *mem_44277)
{
    #define segmap_group_sizze_40706 (mainzisegmap_group_sizze_40689)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45547;
    int32_t local_tid_45548;
    int64_t group_sizze_45551;
    int32_t wave_sizze_45550;
    int32_t group_tid_45549;
    
    global_tid_45547 = get_global_id(0);
    local_tid_45548 = get_local_id(0);
    group_sizze_45551 = get_local_size(0);
    wave_sizze_45550 = LOCKSTEP_WIDTH;
    group_tid_45549 = get_group_id(0);
    
    int32_t phys_tid_40687;
    
    phys_tid_40687 = global_tid_45547;
    
    int64_t gtid_40686;
    
    gtid_40686 = sext_i32_i64(group_tid_45549) * segmap_group_sizze_40706 +
        sext_i32_i64(local_tid_45548);
    if (slt64(gtid_40686, iota32_arg_29658)) {
        int32_t defunc_0_f_res_40711 = sext_i64_i32(gtid_40686);
        int32_t t_40712 = add32(x_29663, defunc_0_f_res_40711);
        int32_t i_40713 = sub32(t_40712, 1);
        int64_t i_40714 = sext_i32_i64(i_40713);
        int32_t time_40715 = ((__global
                               int32_t *) mappingindices_mem_43377)[i_40714];
        float i32_res_40716 = sitofp_i32_f32(time_40715);
        float logplus_arg_40717 = i32_res_40716 / i32_res_29671;
        bool cond_40718 = 2.7182817F < logplus_arg_40717;
        float logplus_res_40719;
        
        if (cond_40718) {
            float log_res_40720;
            
            log_res_40720 = futrts_log32(logplus_arg_40717);
            logplus_res_40719 = log_res_40720;
        } else {
            logplus_res_40719 = 1.0F;
        }
        
        float sqrt_res_40721;
        
        sqrt_res_40721 = futrts_sqrt32(logplus_res_40719);
        
        float defunc_0_f_res_40722 = lam_29266 * sqrt_res_40721;
        
        ((__global int32_t *) mem_44275)[gtid_40686] = defunc_0_f_res_40711;
        ((__global float *) mem_44277)[gtid_40686] = defunc_0_f_res_40722;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40706
}
__kernel void mainzisegmap_41057(__global int *global_failure, int64_t N_29258,
                                 int64_t m_29259, int32_t n_29263, __global
                                 unsigned char *defunc_4_map_res_mem_44175,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44238,
                                 __global unsigned char *mem_44291, __global
                                 unsigned char *mem_44298, __global
                                 unsigned char *mem_44300, __global
                                 unsigned char *mem_44302, __global
                                 unsigned char *mem_44305, __global
                                 unsigned char *mem_44307)
{
    #define segmap_group_sizze_41321 (mainzisegmap_group_sizze_41059)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45742;
    int32_t local_tid_45743;
    int64_t group_sizze_45746;
    int32_t wave_sizze_45745;
    int32_t group_tid_45744;
    
    global_tid_45742 = get_global_id(0);
    local_tid_45743 = get_local_id(0);
    group_sizze_45746 = get_local_size(0);
    wave_sizze_45745 = LOCKSTEP_WIDTH;
    group_tid_45744 = get_group_id(0);
    
    int32_t phys_tid_41057;
    
    phys_tid_41057 = global_tid_45742;
    
    int64_t gtid_41056;
    
    gtid_41056 = sext_i32_i64(group_tid_45744) * segmap_group_sizze_41321 +
        sext_i32_i64(local_tid_45743);
    if (slt64(gtid_41056, m_29259)) {
        int32_t x_41325 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_41056];
        int32_t y_41327 = ((__global int32_t *) mem_44291)[gtid_41056];
        bool acc0_41329 = ((__global bool *) mem_44298)[gtid_41056];
        bool x_41334 = acc0_41329 && acc0_41329;
        int32_t defunc_1_op_res_f_res_41338;
        
        if (acc0_41329) {
            int32_t acc0_41330 = ((__global int32_t *) mem_44300)[gtid_41056];
            
            defunc_1_op_res_f_res_41338 = acc0_41330;
        } else {
            defunc_1_op_res_f_res_41338 = -1;
        }
        
        bool cond_41344 = y_41327 == 0;
        float defunc_0_f_res_41345;
        
        if (cond_41344) {
            defunc_0_f_res_41345 = 0.0F;
        } else {
            float acc0_41331 = ((__global float *) mem_44302)[gtid_41056];
            float i32_res_41346 = sitofp_i32_f32(y_41327);
            float defunc_0_f_res_f_res_41347 = acc0_41331 / i32_res_41346;
            
            defunc_0_f_res_41345 = defunc_0_f_res_f_res_41347;
        }
        
        bool cond_41348 = !x_41334;
        int32_t fst_breakzq_41349;
        
        if (cond_41348) {
            fst_breakzq_41349 = -1;
        } else {
            bool cond_41350 = slt32(defunc_1_op_res_f_res_41338, y_41327);
            int32_t adjustValInds_res_41351;
            
            if (cond_41350) {
                int32_t i_41352 = add32(x_41325, defunc_1_op_res_f_res_41338);
                int64_t i_41353 = sext_i32_i64(i_41352);
                int32_t x_41354 = ((__global
                                    int32_t *) defunc_4_map_res_mem_44175)[gtid_41056 *
                                                                           N_29258 +
                                                                           i_41353];
                int32_t adjustValInds_res_t_res_41355 = sub32(x_41354, n_29263);
                
                adjustValInds_res_41351 = adjustValInds_res_t_res_41355;
            } else {
                adjustValInds_res_41351 = -1;
            }
            fst_breakzq_41349 = adjustValInds_res_41351;
        }
        
        bool cond_41356 = sle32(x_41325, 5);
        bool cond_f_res_41357 = sle32(y_41327, 5);
        bool x_41358 = !cond_41356;
        bool y_41359 = cond_f_res_41357 && x_41358;
        bool cond_41360 = cond_41356 || y_41359;
        int32_t fst_breakzq_41361;
        
        if (cond_41360) {
            fst_breakzq_41361 = -2;
        } else {
            fst_breakzq_41361 = fst_breakzq_41349;
        }
        ((__global int32_t *) mem_44305)[gtid_41056] = fst_breakzq_41361;
        ((__global float *) mem_44307)[gtid_41056] = defunc_0_f_res_41345;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41321
}
__kernel void mainzisegmap_41199(__global int *global_failure, int64_t m_29259,
                                 int64_t num_groups_41222, __global
                                 unsigned char *defunc_4_map_res_mem_44173,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44238,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44239,
                                 __global unsigned char *mem_44289, __global
                                 unsigned char *mem_44291)
{
    #define segmap_group_sizze_41221 (mainzisegmap_group_sizze_41201)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45580;
    int32_t local_tid_45581;
    int64_t group_sizze_45584;
    int32_t wave_sizze_45583;
    int32_t group_tid_45582;
    
    global_tid_45580 = get_global_id(0);
    local_tid_45581 = get_local_id(0);
    group_sizze_45584 = get_local_size(0);
    wave_sizze_45583 = LOCKSTEP_WIDTH;
    group_tid_45582 = get_group_id(0);
    
    int32_t phys_tid_41199;
    
    phys_tid_41199 = global_tid_45580;
    
    int32_t phys_group_id_45585;
    
    phys_group_id_45585 = get_group_id(0);
    for (int32_t i_45586 = 0; i_45586 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259, segmap_group_sizze_41221)) -
                   phys_group_id_45585, sext_i64_i32(num_groups_41222));
         i_45586++) {
        int32_t virt_group_id_45587 = phys_group_id_45585 + i_45586 *
                sext_i64_i32(num_groups_41222);
        int64_t gtid_41198 = sext_i32_i64(virt_group_id_45587) *
                segmap_group_sizze_41221 + sext_i32_i64(local_tid_45581);
        
        if (slt64(gtid_41198, m_29259)) {
            int32_t x_41228 = ((__global
                                int32_t *) defunc_4_map_res_mem_44173)[gtid_41198];
            int32_t x_41229 = ((__global
                                int32_t *) defunc_3_map_res_mem_44238)[gtid_41198];
            float x_41230 = ((__global
                              float *) defunc_3_map_res_mem_44239)[gtid_41198];
            int32_t y_41231 = sub32(x_41228, x_41229);
            float i32_res_41232 = sitofp_i32_f32(x_41229);
            float sqrt_res_41233;
            
            sqrt_res_41233 = futrts_sqrt32(i32_res_41232);
            
            float y_41234 = x_41230 * sqrt_res_41233;
            
            ((__global float *) mem_44289)[gtid_41198] = y_41234;
            ((__global int32_t *) mem_44291)[gtid_41198] = y_41231;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41221
}
__kernel void mainzisegmap_intragroup_38794(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43560_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43550_backing_aligned_1,
                                            int32_t k2p2zq_29276,
                                            int64_t i32_res_29278,
                                            int32_t m_29409,
                                            int64_t i32_res_29411,
                                            int64_t i32_res_29426, __global
                                            unsigned char *defunc_3_map_res_mem_43546,
                                            __global unsigned char *mem_43570)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43560_backing_1 = (__local volatile
                                                           char *) mem_43560_backing_aligned_0;
    __local volatile char *restrict mem_43550_backing_0 = (__local volatile
                                                           char *) mem_43550_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44770;
    int32_t local_tid_44771;
    int64_t group_sizze_44774;
    int32_t wave_sizze_44773;
    int32_t group_tid_44772;
    
    global_tid_44770 = get_global_id(0);
    local_tid_44771 = get_local_id(0);
    group_sizze_44774 = get_local_size(0);
    wave_sizze_44773 = LOCKSTEP_WIDTH;
    group_tid_44772 = get_group_id(0);
    
    int32_t phys_tid_38794;
    
    phys_tid_38794 = group_tid_44772;
    
    int32_t ltid_pre_44775;
    
    ltid_pre_44775 = local_tid_44771;
    
    int64_t gtid_38749;
    
    gtid_38749 = sext_i32_i64(group_tid_44772);
    
    __local char *mem_43550;
    
    mem_43550 = (__local char *) mem_43550_backing_0;
    
    int64_t gtid_38752 = sext_i32_i64(ltid_pre_44775);
    int32_t phys_tid_38753 = local_tid_44771;
    int32_t index_primexp_41386 = sext_i64_i32(gtid_38752);
    int32_t defunc_0_f_res_38919 = sdiv32(index_primexp_41386, m_29409);
    int32_t defunc_0_f_res_38920 = smod32(index_primexp_41386, m_29409);
    bool cond_38921 = slt32(defunc_0_f_res_38920, k2p2zq_29276);
    float defunc_0_f_res_38922;
    
    if (cond_38921) {
        int64_t i_38923 = sext_i32_i64(defunc_0_f_res_38919);
        int64_t j_38924 = sext_i32_i64(defunc_0_f_res_38920);
        float defunc_0_f_res_t_res_38925 = ((__global
                                             float *) defunc_3_map_res_mem_43546)[gtid_38749 *
                                                                                  (i32_res_29278 *
                                                                                   i32_res_29278) +
                                                                                  i_38923 *
                                                                                  i32_res_29278 +
                                                                                  j_38924];
        
        defunc_0_f_res_38922 = defunc_0_f_res_t_res_38925;
    } else {
        int32_t y_38926 = add32(k2p2zq_29276, defunc_0_f_res_38919);
        bool cond_38927 = defunc_0_f_res_38920 == y_38926;
        float defunc_0_f_res_f_res_38928;
        
        if (cond_38927) {
            defunc_0_f_res_f_res_38928 = 1.0F;
        } else {
            defunc_0_f_res_f_res_38928 = 0.0F;
        }
        defunc_0_f_res_38922 = defunc_0_f_res_f_res_38928;
    }
    ((__local float *) mem_43550)[gtid_38752] = defunc_0_f_res_38922;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43560;
    
    mem_43560 = (__local char *) mem_43560_backing_1;
    for (int32_t i_38930 = 0; i_38930 < k2p2zq_29276; i_38930++) {
        int64_t i32_res_38932 = sext_i32_i64(i_38930);
        float v1_38933 = ((__local float *) mem_43550)[i32_res_38932];
        bool cond_38934 = v1_38933 == 0.0F;
        int64_t gtid_38765 = sext_i32_i64(ltid_pre_44775);
        int32_t phys_tid_38766 = local_tid_44771;
        int32_t defunc_0_f_res_38937 = sext_i64_i32(gtid_38765);
        int32_t defunc_0_f_res_38938 = sdiv32(defunc_0_f_res_38937, m_29409);
        int32_t defunc_0_f_res_38939 = smod32(defunc_0_f_res_38937, m_29409);
        float defunc_0_f_res_38940;
        
        if (cond_38934) {
            int32_t x_38941 = mul32(m_29409, defunc_0_f_res_38938);
            int32_t i32_arg_38942 = add32(defunc_0_f_res_38939, x_38941);
            int64_t i32_res_38943 = sext_i32_i64(i32_arg_38942);
            float defunc_0_f_res_t_res_38944 = ((__local
                                                 float *) mem_43550)[i32_res_38943];
            
            defunc_0_f_res_38940 = defunc_0_f_res_t_res_38944;
        } else {
            int64_t i32_res_38945 = sext_i32_i64(defunc_0_f_res_38939);
            float x_38946 = ((__local float *) mem_43550)[i32_res_38945];
            float x_38947 = x_38946 / v1_38933;
            int32_t y_38948 = sub32(k2p2zq_29276, 1);
            bool cond_38949 = slt32(defunc_0_f_res_38938, y_38948);
            float defunc_0_f_res_f_res_38950;
            
            if (cond_38949) {
                int32_t x_38951 = add32(1, defunc_0_f_res_38938);
                int32_t x_38952 = mul32(m_29409, x_38951);
                int32_t i32_arg_38953 = add32(defunc_0_f_res_38939, x_38952);
                int64_t i32_res_38954 = sext_i32_i64(i32_arg_38953);
                float x_38955 = ((__local float *) mem_43550)[i32_res_38954];
                int32_t i32_arg_38956 = add32(i_38930, x_38952);
                int64_t i32_res_38957 = sext_i32_i64(i32_arg_38956);
                float x_38958 = ((__local float *) mem_43550)[i32_res_38957];
                float y_38959 = x_38947 * x_38958;
                float defunc_0_f_res_f_res_t_res_38960 = x_38955 - y_38959;
                
                defunc_0_f_res_f_res_38950 = defunc_0_f_res_f_res_t_res_38960;
            } else {
                defunc_0_f_res_f_res_38950 = x_38947;
            }
            defunc_0_f_res_38940 = defunc_0_f_res_f_res_38950;
        }
        ((__local float *) mem_43560)[gtid_38765] = defunc_0_f_res_38940;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_38792 = sext_i32_i64(ltid_pre_44775);
        int32_t phys_tid_38793 = local_tid_44771;
        float write_value_38963 = ((__local float *) mem_43560)[write_i_38792];
        
        if (sle64(0, write_i_38792) && slt64(write_i_38792, i32_res_29411)) {
            ((__local float *) mem_43550)[write_i_38792] = write_value_38963;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44777 = 0; i_44777 < sdiv_up64(i32_res_29278 *
                                                  i32_res_29278 -
                                                  sext_i32_i64(local_tid_44771),
                                                  i32_res_29411); i_44777++) {
        ((__global float *) mem_43570)[gtid_38749 * (i32_res_29278 *
                                                     i32_res_29278) +
                                       squot64(i_44777 * i32_res_29411 +
                                               sext_i32_i64(local_tid_44771),
                                               i32_res_29278) * i32_res_29278 +
                                       (i_44777 * i32_res_29411 +
                                        sext_i32_i64(local_tid_44771) -
                                        squot64(i_44777 * i32_res_29411 +
                                                sext_i32_i64(local_tid_44771),
                                                i32_res_29278) *
                                        i32_res_29278)] = ((__local
                                                            float *) mem_43550)[i32_res_29278 +
                                                                                (squot64(i_44777 *
                                                                                         i32_res_29411 +
                                                                                         sext_i32_i64(local_tid_44771),
                                                                                         i32_res_29278) *
                                                                                 i32_res_29426 +
                                                                                 (i_44777 *
                                                                                  i32_res_29411 +
                                                                                  sext_i32_i64(local_tid_44771) -
                                                                                  squot64(i_44777 *
                                                                                          i32_res_29411 +
                                                                                          sext_i32_i64(local_tid_44771),
                                                                                          i32_res_29278) *
                                                                                  i32_res_29278))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_39021(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43591_backing_aligned_0,
                                            int64_t m_29259,
                                            int32_t k2p2zq_29276,
                                            int32_t m_29409,
                                            int64_t i32_res_29411,
                                            int32_t i_39416,
                                            int64_t i32_res_39418,
                                            int64_t ctx_param_ext_43577,
                                            int64_t ctx_param_ext_43578,
                                            int64_t ctx_param_ext_43580,
                                            __global
                                            unsigned char *mem_param_43582,
                                            __global unsigned char *mem_43587,
                                            __global unsigned char *mem_43595)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43591_backing_0 = (__local volatile
                                                           char *) mem_43591_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44804;
    int32_t local_tid_44805;
    int64_t group_sizze_44808;
    int32_t wave_sizze_44807;
    int32_t group_tid_44806;
    
    global_tid_44804 = get_global_id(0);
    local_tid_44805 = get_local_id(0);
    group_sizze_44808 = get_local_size(0);
    wave_sizze_44807 = LOCKSTEP_WIDTH;
    group_tid_44806 = get_group_id(0);
    
    int32_t phys_tid_39021;
    
    phys_tid_39021 = group_tid_44806;
    
    int32_t ltid_pre_44809;
    
    ltid_pre_44809 = local_tid_44805;
    
    int64_t gtid_38989;
    
    gtid_38989 = sext_i32_i64(group_tid_44806);
    
    float v1_39431 = ((__global float *) mem_param_43582)[ctx_param_ext_43577 +
                                                          (gtid_38989 *
                                                           ctx_param_ext_43578 +
                                                           i32_res_39418 *
                                                           ctx_param_ext_43580)];
    bool cond_39432 = v1_39431 == 0.0F;
    __local char *mem_43591;
    
    mem_43591 = (__local char *) mem_43591_backing_0;
    
    int64_t gtid_38992 = sext_i32_i64(ltid_pre_44809);
    int32_t phys_tid_38993 = local_tid_44805;
    int32_t defunc_0_f_res_39435 = sext_i64_i32(gtid_38992);
    int32_t defunc_0_f_res_39436 = sdiv32(defunc_0_f_res_39435, m_29409);
    int32_t defunc_0_f_res_39437 = smod32(defunc_0_f_res_39435, m_29409);
    float defunc_0_f_res_39438;
    
    if (cond_39432) {
        int32_t x_39439 = mul32(m_29409, defunc_0_f_res_39436);
        int32_t i32_arg_39440 = add32(defunc_0_f_res_39437, x_39439);
        int64_t i32_res_39441 = sext_i32_i64(i32_arg_39440);
        float defunc_0_f_res_t_res_39442 = ((__global
                                             float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                       (gtid_38989 *
                                                                        ctx_param_ext_43578 +
                                                                        i32_res_39441 *
                                                                        ctx_param_ext_43580)];
        
        defunc_0_f_res_39438 = defunc_0_f_res_t_res_39442;
    } else {
        int64_t i32_res_39443 = sext_i32_i64(defunc_0_f_res_39437);
        float x_39444 = ((__global
                          float *) mem_param_43582)[ctx_param_ext_43577 +
                                                    (gtid_38989 *
                                                     ctx_param_ext_43578 +
                                                     i32_res_39443 *
                                                     ctx_param_ext_43580)];
        float x_39445 = x_39444 / v1_39431;
        int32_t y_39446 = sub32(k2p2zq_29276, 1);
        bool cond_39447 = slt32(defunc_0_f_res_39436, y_39446);
        float defunc_0_f_res_f_res_39448;
        
        if (cond_39447) {
            int32_t x_39449 = add32(1, defunc_0_f_res_39436);
            int32_t x_39450 = mul32(m_29409, x_39449);
            int32_t i32_arg_39451 = add32(defunc_0_f_res_39437, x_39450);
            int64_t i32_res_39452 = sext_i32_i64(i32_arg_39451);
            float x_39453 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_38989 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_39452 *
                                                         ctx_param_ext_43580)];
            int32_t i32_arg_39454 = add32(i_39416, x_39450);
            int64_t i32_res_39455 = sext_i32_i64(i32_arg_39454);
            float x_39456 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_38989 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_39455 *
                                                         ctx_param_ext_43580)];
            float y_39457 = x_39445 * x_39456;
            float defunc_0_f_res_f_res_t_res_39458 = x_39453 - y_39457;
            
            defunc_0_f_res_f_res_39448 = defunc_0_f_res_f_res_t_res_39458;
        } else {
            defunc_0_f_res_f_res_39448 = x_39445;
        }
        defunc_0_f_res_39438 = defunc_0_f_res_f_res_39448;
    }
    ((__local float *) mem_43591)[gtid_38992] = defunc_0_f_res_39438;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_39019 = sext_i32_i64(ltid_pre_44809);
    int32_t phys_tid_39020 = local_tid_44805;
    float write_value_39461 = ((__local float *) mem_43591)[write_i_39019];
    
    if (sle64(0, write_i_39019) && slt64(write_i_39019, i32_res_29411)) {
        ((__global float *) mem_43587)[gtid_38989 + write_i_39019 * m_29259] =
            write_value_39461;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44805 == 0) {
        for (int64_t i_44810 = 0; i_44810 < i32_res_29411; i_44810++) {
            ((__global float *) mem_43595)[gtid_38989 * i32_res_29411 +
                                           i_44810] = ((__global
                                                        float *) mem_43587)[gtid_38989 +
                                                                            i_44810 *
                                                                            m_29259];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39972(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44152_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44150_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_44148_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44146_backing_aligned_3,
                                            int64_t N_29258, int64_t N_29260,
                                            int64_t i_29538, __global
                                            unsigned char *images_mem_43378,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44136,
                                            __global unsigned char *mem_44155,
                                            __global unsigned char *mem_44158,
                                            __global unsigned char *mem_44161)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44152_backing_3 = (__local volatile
                                                           char *) mem_44152_backing_aligned_0;
    __local volatile char *restrict mem_44150_backing_2 = (__local volatile
                                                           char *) mem_44150_backing_aligned_1;
    __local volatile char *restrict mem_44148_backing_1 = (__local volatile
                                                           char *) mem_44148_backing_aligned_2;
    __local volatile char *restrict mem_44146_backing_0 = (__local volatile
                                                           char *) mem_44146_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45204;
    int32_t local_tid_45205;
    int64_t group_sizze_45208;
    int32_t wave_sizze_45207;
    int32_t group_tid_45206;
    
    global_tid_45204 = get_global_id(0);
    local_tid_45205 = get_local_id(0);
    group_sizze_45208 = get_local_size(0);
    wave_sizze_45207 = LOCKSTEP_WIDTH;
    group_tid_45206 = get_group_id(0);
    
    int32_t phys_tid_39972;
    
    phys_tid_39972 = group_tid_45206;
    
    int32_t ltid_pre_45209;
    
    ltid_pre_45209 = local_tid_45205;
    
    int64_t gtid_39965;
    
    gtid_39965 = sext_i32_i64(group_tid_45206);
    
    __local char *mem_44146;
    
    mem_44146 = (__local char *) mem_44146_backing_0;
    
    __local char *mem_44148;
    
    mem_44148 = (__local char *) mem_44148_backing_1;
    
    int64_t gtid_39968 = sext_i32_i64(ltid_pre_45209);
    int32_t phys_tid_39969 = local_tid_45205;
    float x_40061 = ((__global float *) images_mem_43378)[gtid_39965 * N_29260 +
                                                          gtid_39968];
    bool isnan_res_40063;
    
    isnan_res_40063 = futrts_isnan32(x_40061);
    
    bool cond_40064 = !isnan_res_40063;
    float defunc_0_f_res_40065;
    
    if (cond_40064) {
        float x_40062 = ((__global
                          float *) defunc_3_map_res_mem_44136)[gtid_39965 *
                                                               N_29258 +
                                                               gtid_39968];
        float defunc_0_f_res_t_res_40066 = x_40061 - x_40062;
        
        defunc_0_f_res_40065 = defunc_0_f_res_t_res_40066;
    } else {
        defunc_0_f_res_40065 = NAN;
    }
    
    bool isnan_res_40067;
    
    isnan_res_40067 = futrts_isnan32(defunc_0_f_res_40065);
    
    bool defunc_0_p_res_40068 = !isnan_res_40067;
    int64_t defunc_0_f_res_40069 = btoi_bool_i64(defunc_0_p_res_40068);
    
    ((__local int64_t *) mem_44146)[gtid_39968] = defunc_0_f_res_40069;
    ((__local float *) mem_44148)[gtid_39968] = defunc_0_f_res_40065;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45210;
    
    dims_flat_45210 = N_29258;
    
    int64_t x_40058;
    int64_t x_40059;
    int64_t x_45212;
    int64_t x_45213;
    bool ltid_in_bounds_45215;
    
    ltid_in_bounds_45215 = slt64(sext_i32_i64(local_tid_45205), N_29258);
    
    int32_t skip_threads_45216;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45215) {
            x_40059 = ((volatile __local
                        int64_t *) mem_44146)[sext_i32_i64(local_tid_45205)];
            if ((local_tid_45205 - squot32(local_tid_45205, 32) * 32) == 0) {
                x_40058 = x_40059;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45216 = 1;
        while (slt32(skip_threads_45216, 32)) {
            if (sle32(skip_threads_45216, local_tid_45205 -
                      squot32(local_tid_45205, 32) * 32) &&
                ltid_in_bounds_45215) {
                // read operands
                {
                    x_40058 = ((volatile __local
                                int64_t *) mem_44146)[sext_i32_i64(local_tid_45205) -
                                                      sext_i32_i64(skip_threads_45216)];
                }
                // perform operation
                {
                    bool inactive_45217 =
                         slt64(srem64(sext_i32_i64(local_tid_45205), N_29258),
                               sext_i32_i64(local_tid_45205) -
                               sext_i32_i64(local_tid_45205 -
                               skip_threads_45216));
                    
                    if (inactive_45217) {
                        x_40058 = x_40059;
                    }
                    if (!inactive_45217) {
                        int64_t defunc_1_op_res_40060 = add64(x_40058, x_40059);
                        
                        x_40058 = defunc_1_op_res_40060;
                    }
                }
            }
            if (sle32(wave_sizze_45207, skip_threads_45216)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45216, local_tid_45205 -
                      squot32(local_tid_45205, 32) * 32) &&
                ltid_in_bounds_45215) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44146)[sext_i32_i64(local_tid_45205)] =
                        x_40058;
                    x_40059 = x_40058;
                }
            }
            if (sle32(wave_sizze_45207, skip_threads_45216)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45216 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45205 - squot32(local_tid_45205, 32) * 32) == 31 &&
            ltid_in_bounds_45215) {
            ((volatile __local
              int64_t *) mem_44146)[sext_i32_i64(squot32(local_tid_45205,
                                                         32))] = x_40058;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45218;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45205, 32) == 0 && ltid_in_bounds_45215) {
                x_45213 = ((volatile __local
                            int64_t *) mem_44146)[sext_i32_i64(local_tid_45205)];
                if ((local_tid_45205 - squot32(local_tid_45205, 32) * 32) ==
                    0) {
                    x_45212 = x_45213;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45218 = 1;
            while (slt32(skip_threads_45218, 32)) {
                if (sle32(skip_threads_45218, local_tid_45205 -
                          squot32(local_tid_45205, 32) * 32) &&
                    (squot32(local_tid_45205, 32) == 0 &&
                     ltid_in_bounds_45215)) {
                    // read operands
                    {
                        x_45212 = ((volatile __local
                                    int64_t *) mem_44146)[sext_i32_i64(local_tid_45205) -
                                                          sext_i32_i64(skip_threads_45218)];
                    }
                    // perform operation
                    {
                        bool inactive_45219 =
                             slt64(srem64(sext_i32_i64(local_tid_45205 * 32 +
                                          32 - 1), N_29258),
                                   sext_i32_i64(local_tid_45205 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45205 -
                                                 skip_threads_45218) * 32 + 32 -
                                   1));
                        
                        if (inactive_45219) {
                            x_45212 = x_45213;
                        }
                        if (!inactive_45219) {
                            int64_t defunc_1_op_res_45214 = add64(x_45212,
                                                                  x_45213);
                            
                            x_45212 = defunc_1_op_res_45214;
                        }
                    }
                }
                if (sle32(wave_sizze_45207, skip_threads_45218)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45218, local_tid_45205 -
                          squot32(local_tid_45205, 32) * 32) &&
                    (squot32(local_tid_45205, 32) == 0 &&
                     ltid_in_bounds_45215)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44146)[sext_i32_i64(local_tid_45205)] =
                            x_45212;
                        x_45213 = x_45212;
                    }
                }
                if (sle32(wave_sizze_45207, skip_threads_45218)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45218 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45205, 32) == 0 || !ltid_in_bounds_45215)) {
            // read operands
            {
                x_40059 = x_40058;
                x_40058 = ((__local
                            int64_t *) mem_44146)[sext_i32_i64(squot32(local_tid_45205,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45220 =
                     slt64(srem64(sext_i32_i64(local_tid_45205), N_29258),
                           sext_i32_i64(local_tid_45205) -
                           sext_i32_i64(squot32(local_tid_45205, 32) * 32 - 1));
                
                if (inactive_45220) {
                    x_40058 = x_40059;
                }
                if (!inactive_45220) {
                    int64_t defunc_1_op_res_40060 = add64(x_40058, x_40059);
                    
                    x_40058 = defunc_1_op_res_40060;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44146)[sext_i32_i64(local_tid_45205)] =
                    x_40058;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45205, 32) == 0) {
            ((__local int64_t *) mem_44146)[sext_i32_i64(local_tid_45205)] =
                x_40059;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_40070 = ((__local int64_t *) mem_44146)[i_29538];
    int32_t defunc_0_f_res_40071 = sext_i64_i32(last_res_40070);
    __local char *mem_44150;
    
    mem_44150 = (__local char *) mem_44150_backing_2;
    ((__local float *) mem_44150)[sext_i32_i64(local_tid_45205)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44152;
    
    mem_44152 = (__local char *) mem_44152_backing_3;
    ((__local int32_t *) mem_44152)[sext_i32_i64(local_tid_45205)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_39970 = sext_i32_i64(ltid_pre_45209);
    int32_t phys_tid_39971 = local_tid_45205;
    float x_40076 = ((__local float *) mem_44148)[write_i_39970];
    int32_t index_primexp_41406 = sext_i64_i32(write_i_39970);
    bool isnan_res_40079;
    
    isnan_res_40079 = futrts_isnan32(x_40076);
    
    bool defunc_0_p_res_40080 = !isnan_res_40079;
    int64_t defunc_1_f_res_40081;
    
    if (defunc_0_p_res_40080) {
        int64_t x_40077 = ((__local int64_t *) mem_44146)[write_i_39970];
        int64_t defunc_1_f_res_t_res_40082 = sub64(x_40077, 1);
        
        defunc_1_f_res_40081 = defunc_1_f_res_t_res_40082;
    } else {
        defunc_1_f_res_40081 = -1;
    }
    if (sle64(0, defunc_1_f_res_40081) && slt64(defunc_1_f_res_40081,
                                                N_29258)) {
        ((__local int32_t *) mem_44152)[defunc_1_f_res_40081] =
            index_primexp_41406;
    }
    if (sle64(0, defunc_1_f_res_40081) && slt64(defunc_1_f_res_40081,
                                                N_29258)) {
        ((__local float *) mem_44150)[defunc_1_f_res_40081] = x_40076;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45205 == 0) {
        ((__global int32_t *) mem_44155)[gtid_39965] = defunc_0_f_res_40071;
    }
    ((__global float *) mem_44158)[gtid_39965 * N_29258 +
                                   sext_i32_i64(local_tid_45205)] = ((__local
                                                                      float *) mem_44150)[sext_i32_i64(local_tid_45205)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_44161)[gtid_39965 * N_29258 +
                                     sext_i32_i64(local_tid_45205)] = ((__local
                                                                        int32_t *) mem_44152)[sext_i32_i64(local_tid_45205)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_40312(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_45313_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_45309_backing_aligned_1,
                                            int64_t N_29258, int64_t N_29260,
                                            float hfrac_29265,
                                            int64_t i32_res_29272,
                                            int32_t k2p2_29274, __global
                                            unsigned char *images_mem_43378,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_44174,
                                            __global unsigned char *mem_44218,
                                            __global unsigned char *mem_44220,
                                            __global unsigned char *mem_44222)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45313_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45313_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45309_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45309_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45303;
    int32_t local_tid_45304;
    int64_t group_sizze_45307;
    int32_t wave_sizze_45306;
    int32_t group_tid_45305;
    
    global_tid_45303 = get_global_id(0);
    local_tid_45304 = get_local_id(0);
    group_sizze_45307 = get_local_size(0);
    wave_sizze_45306 = LOCKSTEP_WIDTH;
    group_tid_45305 = get_group_id(0);
    
    int32_t phys_tid_40312;
    
    phys_tid_40312 = group_tid_45305;
    
    int32_t ltid_pre_45308;
    
    ltid_pre_45308 = local_tid_45304;
    
    int64_t gtid_40305;
    
    gtid_40305 = sext_i32_i64(group_tid_45305);
    
    int32_t defunc_0_f_res_40389;
    int64_t gtid_40308 = sext_i32_i64(ltid_pre_45308);
    int32_t phys_tid_40309 = local_tid_45304;
    __local char *red_arr_mem_45309;
    
    red_arr_mem_45309 = (__local char *) red_arr_mem_45309_backing_0;
    
    float x_40393;
    
    x_40393 = ((__global float *) images_mem_43378)[gtid_40305 * N_29260 +
                                                    gtid_40308];
    
    bool isnan_res_40394;
    
    isnan_res_40394 = futrts_isnan32(x_40393);
    
    bool cond_40395 = !isnan_res_40394;
    int32_t defunc_0_f_res_40396 = btoi_bool_i32(cond_40395);
    
    ((__local int32_t *) red_arr_mem_45309)[gtid_40308] = defunc_0_f_res_40396;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45311;
    int32_t skip_waves_45312;
    
    skip_waves_45312 = 1;
    
    int32_t x_40390;
    int32_t x_40391;
    
    offset_45311 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45304, sext_i64_i32(i32_res_29272))) {
            x_40390 = ((__local
                        int32_t *) red_arr_mem_45309)[sext_i32_i64(local_tid_45304 +
                                                      offset_45311)];
        }
    }
    offset_45311 = 1;
    while (slt32(offset_45311, wave_sizze_45306)) {
        if (slt32(local_tid_45304 + offset_45311,
                  sext_i64_i32(i32_res_29272)) && ((local_tid_45304 -
                                                    squot32(local_tid_45304,
                                                            wave_sizze_45306) *
                                                    wave_sizze_45306) & (2 *
                                                                         offset_45311 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_40391 = ((volatile __local
                            int32_t *) red_arr_mem_45309)[sext_i32_i64(local_tid_45304 +
                                                          offset_45311)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40392 = add32(x_40390, x_40391);
                
                x_40390 = defunc_1_op_res_40392;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45309)[sext_i32_i64(local_tid_45304)] =
                    x_40390;
            }
        }
        offset_45311 *= 2;
    }
    while (slt32(skip_waves_45312, squot32(sext_i64_i32(i32_res_29272) +
                                           wave_sizze_45306 - 1,
                                           wave_sizze_45306))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45311 = skip_waves_45312 * wave_sizze_45306;
        if (slt32(local_tid_45304 + offset_45311,
                  sext_i64_i32(i32_res_29272)) && ((local_tid_45304 -
                                                    squot32(local_tid_45304,
                                                            wave_sizze_45306) *
                                                    wave_sizze_45306) == 0 &&
                                                   (squot32(local_tid_45304,
                                                            wave_sizze_45306) &
                                                    (2 * skip_waves_45312 -
                                                     1)) == 0)) {
            // read array element
            {
                x_40391 = ((__local
                            int32_t *) red_arr_mem_45309)[sext_i32_i64(local_tid_45304 +
                                                          offset_45311)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40392 = add32(x_40390, x_40391);
                
                x_40390 = defunc_1_op_res_40392;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45309)[sext_i32_i64(local_tid_45304)] =
                    x_40390;
            }
        }
        skip_waves_45312 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_40389 = ((__local int32_t *) red_arr_mem_45309)[0];
    
    float defunc_0_f_res_40397;
    int64_t gtid_40310 = sext_i32_i64(ltid_pre_45308);
    int32_t phys_tid_40311 = local_tid_45304;
    __local char *red_arr_mem_45313;
    
    red_arr_mem_45313 = (__local char *) red_arr_mem_45313_backing_1;
    
    int32_t index_primexp_41414;
    
    index_primexp_41414 = sext_i64_i32(gtid_40310);
    
    bool cond_40402 = slt32(index_primexp_41414, defunc_0_f_res_40389);
    float defunc_0_f_res_40403;
    
    if (cond_40402) {
        int64_t i_40404 = sext_i32_i64(index_primexp_41414);
        float defunc_0_f_res_t_res_40405 = ((__global
                                             float *) defunc_4_map_res_mem_44174)[gtid_40305 *
                                                                                  N_29258 +
                                                                                  i_40404];
        
        defunc_0_f_res_40403 = defunc_0_f_res_t_res_40405;
    } else {
        defunc_0_f_res_40403 = 0.0F;
    }
    
    float defunc_0_f_res_40406 = defunc_0_f_res_40403 * defunc_0_f_res_40403;
    
    ((__local float *) red_arr_mem_45313)[gtid_40310] = defunc_0_f_res_40406;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45315;
    int32_t skip_waves_45316;
    
    skip_waves_45316 = 1;
    
    float x_40398;
    float x_40399;
    
    offset_45315 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45304, sext_i64_i32(i32_res_29272))) {
            x_40398 = ((__local
                        float *) red_arr_mem_45313)[sext_i32_i64(local_tid_45304 +
                                                    offset_45315)];
        }
    }
    offset_45315 = 1;
    while (slt32(offset_45315, wave_sizze_45306)) {
        if (slt32(local_tid_45304 + offset_45315,
                  sext_i64_i32(i32_res_29272)) && ((local_tid_45304 -
                                                    squot32(local_tid_45304,
                                                            wave_sizze_45306) *
                                                    wave_sizze_45306) & (2 *
                                                                         offset_45315 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_40399 = ((volatile __local
                            float *) red_arr_mem_45313)[sext_i32_i64(local_tid_45304 +
                                                        offset_45315)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_40400 = x_40398 + x_40399;
                
                x_40398 = defunc_1_op_res_40400;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45313)[sext_i32_i64(local_tid_45304)] =
                    x_40398;
            }
        }
        offset_45315 *= 2;
    }
    while (slt32(skip_waves_45316, squot32(sext_i64_i32(i32_res_29272) +
                                           wave_sizze_45306 - 1,
                                           wave_sizze_45306))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45315 = skip_waves_45316 * wave_sizze_45306;
        if (slt32(local_tid_45304 + offset_45315,
                  sext_i64_i32(i32_res_29272)) && ((local_tid_45304 -
                                                    squot32(local_tid_45304,
                                                            wave_sizze_45306) *
                                                    wave_sizze_45306) == 0 &&
                                                   (squot32(local_tid_45304,
                                                            wave_sizze_45306) &
                                                    (2 * skip_waves_45316 -
                                                     1)) == 0)) {
            // read array element
            {
                x_40399 = ((__local
                            float *) red_arr_mem_45313)[sext_i32_i64(local_tid_45304 +
                                                        offset_45315)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_40400 = x_40398 + x_40399;
                
                x_40398 = defunc_1_op_res_40400;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45313)[sext_i32_i64(local_tid_45304)] =
                    x_40398;
            }
        }
        skip_waves_45316 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_40397 = ((__local float *) red_arr_mem_45313)[0];
    
    int32_t r32_arg_40407 = sub32(defunc_0_f_res_40389, k2p2_29274);
    float i32_res_40408 = sitofp_i32_f32(r32_arg_40407);
    float sqrt_arg_40409 = defunc_0_f_res_40397 / i32_res_40408;
    float sqrt_res_40410;
    
    sqrt_res_40410 = futrts_sqrt32(sqrt_arg_40409);
    
    float i32_res_40411 = sitofp_i32_f32(defunc_0_f_res_40389);
    float t32_arg_40412 = hfrac_29265 * i32_res_40411;
    int32_t f32_res_40413 = fptosi_f32_i32(t32_arg_40412);
    
    if (local_tid_45304 == 0) {
        ((__global int32_t *) mem_44218)[gtid_40305] = f32_res_40413;
    }
    if (local_tid_45304 == 0) {
        ((__global int32_t *) mem_44220)[gtid_40305] = defunc_0_f_res_40389;
    }
    if (local_tid_45304 == 0) {
        ((__global float *) mem_44222)[gtid_40305] = sqrt_res_40410;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_40732(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_45576_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_45574_backing_aligned_1,
                                            __local volatile
                                            int64_t *red_arr_mem_45572_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44281_backing_aligned_3,
                                            int64_t N_29258, int32_t n_29263,
                                            int64_t iota32_arg_29658, __global
                                            unsigned char *defunc_4_map_res_mem_44173,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_44174,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_44175,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44237,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44238,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44239,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_44272,
                                            __global unsigned char *mem_44277,
                                            __global unsigned char *mem_44284,
                                            __global unsigned char *mem_44286)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45576_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45576_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45574_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45574_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45572_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45572_backing_aligned_2;
    __local volatile char *restrict mem_44281_backing_0 = (__local volatile
                                                           char *) mem_44281_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45555;
    int32_t local_tid_45556;
    int64_t group_sizze_45559;
    int32_t wave_sizze_45558;
    int32_t group_tid_45557;
    
    global_tid_45555 = get_global_id(0);
    local_tid_45556 = get_local_id(0);
    group_sizze_45559 = get_local_size(0);
    wave_sizze_45558 = LOCKSTEP_WIDTH;
    group_tid_45557 = get_group_id(0);
    
    int32_t phys_tid_40732;
    
    phys_tid_40732 = group_tid_45557;
    
    int32_t ltid_pre_45560;
    
    ltid_pre_45560 = local_tid_45556;
    
    int64_t gtid_40725;
    
    gtid_40725 = sext_i32_i64(group_tid_45557);
    
    int32_t x_40951;
    
    x_40951 = ((__global int32_t *) defunc_4_map_res_mem_44173)[gtid_40725];
    
    int32_t x_40952 = ((__global
                        int32_t *) defunc_3_map_res_mem_44238)[gtid_40725];
    float x_40953 = ((__global float *) defunc_3_map_res_mem_44239)[gtid_40725];
    int32_t x_40954 = ((__global
                        int32_t *) defunc_3_map_res_mem_44237)[gtid_40725];
    float x_40955 = ((__global float *) defunc_0_f_res_mem_44272)[gtid_40725];
    int32_t y_40958 = sub32(x_40951, x_40952);
    float i32_res_40959 = sitofp_i32_f32(x_40952);
    float sqrt_res_40960;
    
    sqrt_res_40960 = futrts_sqrt32(i32_res_40959);
    
    float y_40961 = x_40953 * sqrt_res_40960;
    __local char *mem_44281;
    
    mem_44281 = (__local char *) mem_44281_backing_0;
    
    int64_t gtid_40728 = sext_i32_i64(ltid_pre_45560);
    int32_t phys_tid_40729 = local_tid_45556;
    int32_t index_primexp_41427 = sext_i64_i32(gtid_40728);
    bool cond_40974 = sle32(y_40958, index_primexp_41427);
    float defunc_0_f_res_40975;
    
    if (cond_40974) {
        defunc_0_f_res_40975 = 0.0F;
    } else {
        bool cond_40976 = index_primexp_41427 == 0;
        float defunc_0_f_res_f_res_40977;
        
        if (cond_40976) {
            defunc_0_f_res_f_res_40977 = x_40955;
        } else {
            int32_t i_40978 = add32(x_40952, index_primexp_41427);
            int64_t i_40979 = sext_i32_i64(i_40978);
            float x_40980 = ((__global
                              float *) defunc_4_map_res_mem_44174)[gtid_40725 *
                                                                   N_29258 +
                                                                   i_40979];
            int32_t x_40981 = sub32(x_40952, x_40954);
            int32_t i_40982 = add32(x_40981, index_primexp_41427);
            int64_t i_40983 = sext_i32_i64(i_40982);
            float y_40984 = ((__global
                              float *) defunc_4_map_res_mem_44174)[gtid_40725 *
                                                                   N_29258 +
                                                                   i_40983];
            float defunc_0_f_res_f_res_f_res_40985 = x_40980 - y_40984;
            
            defunc_0_f_res_f_res_40977 = defunc_0_f_res_f_res_f_res_40985;
        }
        defunc_0_f_res_40975 = defunc_0_f_res_f_res_40977;
    }
    ((__local float *) mem_44281)[gtid_40728] = defunc_0_f_res_40975;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45561;
    
    dims_flat_45561 = iota32_arg_29658;
    
    float x_40970;
    float x_40971;
    float x_45563;
    float x_45564;
    bool ltid_in_bounds_45566;
    
    ltid_in_bounds_45566 = slt64(sext_i32_i64(local_tid_45556),
                                 iota32_arg_29658);
    
    int32_t skip_threads_45567;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45566) {
            x_40971 = ((volatile __local
                        float *) mem_44281)[sext_i32_i64(local_tid_45556)];
            if ((local_tid_45556 - squot32(local_tid_45556, 32) * 32) == 0) {
                x_40970 = x_40971;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45567 = 1;
        while (slt32(skip_threads_45567, 32)) {
            if (sle32(skip_threads_45567, local_tid_45556 -
                      squot32(local_tid_45556, 32) * 32) &&
                ltid_in_bounds_45566) {
                // read operands
                {
                    x_40970 = ((volatile __local
                                float *) mem_44281)[sext_i32_i64(local_tid_45556) -
                                                    sext_i32_i64(skip_threads_45567)];
                }
                // perform operation
                {
                    bool inactive_45568 =
                         slt64(srem64(sext_i32_i64(local_tid_45556),
                                      iota32_arg_29658),
                               sext_i32_i64(local_tid_45556) -
                               sext_i32_i64(local_tid_45556 -
                               skip_threads_45567));
                    
                    if (inactive_45568) {
                        x_40970 = x_40971;
                    }
                    if (!inactive_45568) {
                        float defunc_1_op_res_40972 = x_40970 + x_40971;
                        
                        x_40970 = defunc_1_op_res_40972;
                    }
                }
            }
            if (sle32(wave_sizze_45558, skip_threads_45567)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45567, local_tid_45556 -
                      squot32(local_tid_45556, 32) * 32) &&
                ltid_in_bounds_45566) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44281)[sext_i32_i64(local_tid_45556)] =
                        x_40970;
                    x_40971 = x_40970;
                }
            }
            if (sle32(wave_sizze_45558, skip_threads_45567)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45567 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45556 - squot32(local_tid_45556, 32) * 32) == 31 &&
            ltid_in_bounds_45566) {
            ((volatile __local
              float *) mem_44281)[sext_i32_i64(squot32(local_tid_45556, 32))] =
                x_40970;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45569;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45556, 32) == 0 && ltid_in_bounds_45566) {
                x_45564 = ((volatile __local
                            float *) mem_44281)[sext_i32_i64(local_tid_45556)];
                if ((local_tid_45556 - squot32(local_tid_45556, 32) * 32) ==
                    0) {
                    x_45563 = x_45564;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45569 = 1;
            while (slt32(skip_threads_45569, 32)) {
                if (sle32(skip_threads_45569, local_tid_45556 -
                          squot32(local_tid_45556, 32) * 32) &&
                    (squot32(local_tid_45556, 32) == 0 &&
                     ltid_in_bounds_45566)) {
                    // read operands
                    {
                        x_45563 = ((volatile __local
                                    float *) mem_44281)[sext_i32_i64(local_tid_45556) -
                                                        sext_i32_i64(skip_threads_45569)];
                    }
                    // perform operation
                    {
                        bool inactive_45570 =
                             slt64(srem64(sext_i32_i64(local_tid_45556 * 32 +
                                          32 - 1), iota32_arg_29658),
                                   sext_i32_i64(local_tid_45556 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45556 -
                                                 skip_threads_45569) * 32 + 32 -
                                   1));
                        
                        if (inactive_45570) {
                            x_45563 = x_45564;
                        }
                        if (!inactive_45570) {
                            float defunc_1_op_res_45565 = x_45563 + x_45564;
                            
                            x_45563 = defunc_1_op_res_45565;
                        }
                    }
                }
                if (sle32(wave_sizze_45558, skip_threads_45569)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45569, local_tid_45556 -
                          squot32(local_tid_45556, 32) * 32) &&
                    (squot32(local_tid_45556, 32) == 0 &&
                     ltid_in_bounds_45566)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44281)[sext_i32_i64(local_tid_45556)] =
                            x_45563;
                        x_45564 = x_45563;
                    }
                }
                if (sle32(wave_sizze_45558, skip_threads_45569)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45569 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45556, 32) == 0 || !ltid_in_bounds_45566)) {
            // read operands
            {
                x_40971 = x_40970;
                x_40970 = ((__local
                            float *) mem_44281)[sext_i32_i64(squot32(local_tid_45556,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45571 =
                     slt64(srem64(sext_i32_i64(local_tid_45556),
                                  iota32_arg_29658),
                           sext_i32_i64(local_tid_45556) -
                           sext_i32_i64(squot32(local_tid_45556, 32) * 32 - 1));
                
                if (inactive_45571) {
                    x_40970 = x_40971;
                }
                if (!inactive_45571) {
                    float defunc_1_op_res_40972 = x_40970 + x_40971;
                    
                    x_40970 = defunc_1_op_res_40972;
                }
            }
            // write final result
            {
                ((__local float *) mem_44281)[sext_i32_i64(local_tid_45556)] =
                    x_40970;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45556, 32) == 0) {
            ((__local float *) mem_44281)[sext_i32_i64(local_tid_45556)] =
                x_40971;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_40991;
    int32_t acc0_40992;
    float acc0_40993;
    int64_t gtid_40730 = sext_i32_i64(ltid_pre_45560);
    int32_t phys_tid_40731 = local_tid_45556;
    __local char *red_arr_mem_45572;
    
    red_arr_mem_45572 = (__local char *) red_arr_mem_45572_backing_1;
    
    __local char *red_arr_mem_45574;
    
    red_arr_mem_45574 = (__local char *) red_arr_mem_45574_backing_2;
    
    __local char *red_arr_mem_45576;
    
    red_arr_mem_45576 = (__local char *) red_arr_mem_45576_backing_3;
    
    float x_41008;
    
    x_41008 = ((__local float *) mem_44281)[gtid_40730];
    
    float x_41009 = ((__global float *) mem_44277)[gtid_40730];
    int32_t index_primexp_41430 = sext_i64_i32(gtid_40730);
    float defunc_0_f_res_41012 = x_41008 / y_40961;
    bool cond_41013 = slt32(index_primexp_41430, y_40958);
    bool isnan_res_41014;
    
    isnan_res_41014 = futrts_isnan32(defunc_0_f_res_41012);
    
    bool cond_t_res_41015 = !isnan_res_41014;
    bool x_41016 = cond_41013 && cond_t_res_41015;
    float abs_res_41017 = (float) fabs(defunc_0_f_res_41012);
    bool defunc_2_f_res_t_res_41018 = x_41009 < abs_res_41017;
    bool x_41019 = x_41016 && defunc_2_f_res_t_res_41018;
    float defunc_1_f_res_41020;
    
    if (cond_41013) {
        defunc_1_f_res_41020 = defunc_0_f_res_41012;
    } else {
        defunc_1_f_res_41020 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45572)[gtid_40730] = x_41019;
    ((__local int32_t *) red_arr_mem_45574)[gtid_40730] = index_primexp_41430;
    ((__local float *) red_arr_mem_45576)[gtid_40730] = defunc_1_f_res_41020;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45578;
    int32_t skip_waves_45579;
    
    skip_waves_45579 = 1;
    
    bool x_40994;
    int32_t x_40995;
    float x_40996;
    bool x_40997;
    int32_t x_40998;
    float x_40999;
    
    offset_45578 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45556, sext_i64_i32(iota32_arg_29658))) {
            x_40994 = ((__local
                        bool *) red_arr_mem_45572)[sext_i32_i64(local_tid_45556 +
                                                   offset_45578)];
            x_40995 = ((__local
                        int32_t *) red_arr_mem_45574)[sext_i32_i64(local_tid_45556 +
                                                      offset_45578)];
            x_40996 = ((__local
                        float *) red_arr_mem_45576)[sext_i32_i64(local_tid_45556 +
                                                    offset_45578)];
        }
    }
    offset_45578 = 1;
    while (slt32(offset_45578, wave_sizze_45558)) {
        if (slt32(local_tid_45556 + offset_45578,
                  sext_i64_i32(iota32_arg_29658)) && ((local_tid_45556 -
                                                       squot32(local_tid_45556,
                                                               wave_sizze_45558) *
                                                       wave_sizze_45558) & (2 *
                                                                            offset_45578 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_40997 = ((volatile __local
                            bool *) red_arr_mem_45572)[sext_i32_i64(local_tid_45556 +
                                                       offset_45578)];
                x_40998 = ((volatile __local
                            int32_t *) red_arr_mem_45574)[sext_i32_i64(local_tid_45556 +
                                                          offset_45578)];
                x_40999 = ((volatile __local
                            float *) red_arr_mem_45576)[sext_i32_i64(local_tid_45556 +
                                                        offset_45578)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_41000;
                int32_t defunc_1_op_res_41001;
                
                if (x_40994) {
                    defunc_1_op_res_41000 = x_40994;
                    defunc_1_op_res_41001 = x_40995;
                } else {
                    bool x_41002 = x_40997 && x_40997;
                    bool x_41003 = !x_40997;
                    bool y_41004 = x_40994 && x_41003;
                    bool defunc_1_op_res_f_res_41005 = x_41002 || y_41004;
                    int32_t defunc_1_op_res_f_res_41006;
                    
                    if (x_40997) {
                        defunc_1_op_res_f_res_41006 = x_40998;
                    } else {
                        defunc_1_op_res_f_res_41006 = x_40995;
                    }
                    defunc_1_op_res_41000 = defunc_1_op_res_f_res_41005;
                    defunc_1_op_res_41001 = defunc_1_op_res_f_res_41006;
                }
                
                float defunc_1_op_res_41007 = x_40996 + x_40999;
                
                x_40994 = defunc_1_op_res_41000;
                x_40995 = defunc_1_op_res_41001;
                x_40996 = defunc_1_op_res_41007;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45572)[sext_i32_i64(local_tid_45556)] =
                    x_40994;
                ((volatile __local
                  int32_t *) red_arr_mem_45574)[sext_i32_i64(local_tid_45556)] =
                    x_40995;
                ((volatile __local
                  float *) red_arr_mem_45576)[sext_i32_i64(local_tid_45556)] =
                    x_40996;
            }
        }
        offset_45578 *= 2;
    }
    while (slt32(skip_waves_45579, squot32(sext_i64_i32(iota32_arg_29658) +
                                           wave_sizze_45558 - 1,
                                           wave_sizze_45558))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45578 = skip_waves_45579 * wave_sizze_45558;
        if (slt32(local_tid_45556 + offset_45578,
                  sext_i64_i32(iota32_arg_29658)) && ((local_tid_45556 -
                                                       squot32(local_tid_45556,
                                                               wave_sizze_45558) *
                                                       wave_sizze_45558) == 0 &&
                                                      (squot32(local_tid_45556,
                                                               wave_sizze_45558) &
                                                       (2 * skip_waves_45579 -
                                                        1)) == 0)) {
            // read array element
            {
                x_40997 = ((__local
                            bool *) red_arr_mem_45572)[sext_i32_i64(local_tid_45556 +
                                                       offset_45578)];
                x_40998 = ((__local
                            int32_t *) red_arr_mem_45574)[sext_i32_i64(local_tid_45556 +
                                                          offset_45578)];
                x_40999 = ((__local
                            float *) red_arr_mem_45576)[sext_i32_i64(local_tid_45556 +
                                                        offset_45578)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_41000;
                int32_t defunc_1_op_res_41001;
                
                if (x_40994) {
                    defunc_1_op_res_41000 = x_40994;
                    defunc_1_op_res_41001 = x_40995;
                } else {
                    bool x_41002 = x_40997 && x_40997;
                    bool x_41003 = !x_40997;
                    bool y_41004 = x_40994 && x_41003;
                    bool defunc_1_op_res_f_res_41005 = x_41002 || y_41004;
                    int32_t defunc_1_op_res_f_res_41006;
                    
                    if (x_40997) {
                        defunc_1_op_res_f_res_41006 = x_40998;
                    } else {
                        defunc_1_op_res_f_res_41006 = x_40995;
                    }
                    defunc_1_op_res_41000 = defunc_1_op_res_f_res_41005;
                    defunc_1_op_res_41001 = defunc_1_op_res_f_res_41006;
                }
                
                float defunc_1_op_res_41007 = x_40996 + x_40999;
                
                x_40994 = defunc_1_op_res_41000;
                x_40995 = defunc_1_op_res_41001;
                x_40996 = defunc_1_op_res_41007;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45572)[sext_i32_i64(local_tid_45556)] =
                    x_40994;
                ((__local
                  int32_t *) red_arr_mem_45574)[sext_i32_i64(local_tid_45556)] =
                    x_40995;
                ((__local
                  float *) red_arr_mem_45576)[sext_i32_i64(local_tid_45556)] =
                    x_40996;
            }
        }
        skip_waves_45579 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_40991 = ((__local bool *) red_arr_mem_45572)[0];
    acc0_40992 = ((__local int32_t *) red_arr_mem_45574)[0];
    acc0_40993 = ((__local float *) red_arr_mem_45576)[0];
    
    bool x_41023 = acc0_40991 && acc0_40991;
    int32_t defunc_1_op_res_f_res_41027;
    
    if (acc0_40991) {
        defunc_1_op_res_f_res_41027 = acc0_40992;
    } else {
        defunc_1_op_res_f_res_41027 = -1;
    }
    
    bool cond_41033 = y_40958 == 0;
    float defunc_0_f_res_41034;
    
    if (cond_41033) {
        defunc_0_f_res_41034 = 0.0F;
    } else {
        float i32_res_41035 = sitofp_i32_f32(y_40958);
        float defunc_0_f_res_f_res_41036 = acc0_40993 / i32_res_41035;
        
        defunc_0_f_res_41034 = defunc_0_f_res_f_res_41036;
    }
    
    bool cond_41037 = !x_41023;
    int32_t fst_breakzq_41038;
    
    if (cond_41037) {
        fst_breakzq_41038 = -1;
    } else {
        bool cond_41039 = slt32(defunc_1_op_res_f_res_41027, y_40958);
        int32_t adjustValInds_res_41040;
        
        if (cond_41039) {
            int32_t i_41041 = add32(x_40952, defunc_1_op_res_f_res_41027);
            int64_t i_41042 = sext_i32_i64(i_41041);
            int32_t x_41043 = ((__global
                                int32_t *) defunc_4_map_res_mem_44175)[gtid_40725 *
                                                                       N_29258 +
                                                                       i_41042];
            int32_t adjustValInds_res_t_res_41044 = sub32(x_41043, n_29263);
            
            adjustValInds_res_41040 = adjustValInds_res_t_res_41044;
        } else {
            adjustValInds_res_41040 = -1;
        }
        fst_breakzq_41038 = adjustValInds_res_41040;
    }
    
    bool cond_41045 = sle32(x_40952, 5);
    bool cond_f_res_41046 = sle32(y_40958, 5);
    bool x_41047 = !cond_41045;
    bool y_41048 = cond_f_res_41046 && x_41047;
    bool cond_41049 = cond_41045 || y_41048;
    int32_t fst_breakzq_41050;
    
    if (cond_41049) {
        fst_breakzq_41050 = -2;
    } else {
        fst_breakzq_41050 = fst_breakzq_41038;
    }
    if (local_tid_45556 == 0) {
        ((__global int32_t *) mem_44284)[gtid_40725] = fst_breakzq_41050;
    }
    if (local_tid_45556 == 0) {
        ((__global float *) mem_44286)[gtid_40725] = defunc_0_f_res_41034;
    }
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_41549(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43477_backing_aligned_0,
                                            int64_t m_29259, int32_t n_29263,
                                            int64_t i32_res_29278,
                                            int64_t Ty_41537, int64_t Tx_41538,
                                            int64_t gridDim_x_41539,
                                            int64_t gridDim_y_41540,
                                            int64_t group_sizze_41544,
                                            int64_t count_shmem_41545, __global
                                            unsigned char *mem_43390, __global
                                            unsigned char *mem_43394, __global
                                            unsigned char *mem_43465, __global
                                            unsigned char *mem_43525)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43477_backing_0 = (__local volatile
                                                           char *) mem_43477_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44672;
    int32_t local_tid_44673;
    int64_t group_sizze_44676;
    int32_t wave_sizze_44675;
    int32_t group_tid_44674;
    
    global_tid_44672 = get_global_id(0);
    local_tid_44673 = get_local_id(0);
    group_sizze_44676 = get_local_size(0);
    wave_sizze_44675 = LOCKSTEP_WIDTH;
    group_tid_44674 = get_group_id(0);
    
    int32_t gid_flat_41549;
    
    gid_flat_41549 = group_tid_44674;
    
    int32_t ltid_pre_44677;
    
    ltid_pre_44677 = squot32(local_tid_44673, sext_i64_i32(Ty_41537) *
                             sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44678;
    
    ltid_pre_44678 = squot32(local_tid_44673 - squot32(local_tid_44673,
                                                       sext_i64_i32(Ty_41537) *
                                                       sext_i64_i32(Tx_41538)) *
                             (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)),
                             sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44679;
    
    ltid_pre_44679 = local_tid_44673 - squot32(local_tid_44673,
                                               sext_i64_i32(Ty_41537) *
                                               sext_i64_i32(Tx_41538)) *
        (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)) -
        squot32(local_tid_44673 - squot32(local_tid_44673,
                                          sext_i64_i32(Ty_41537) *
                                          sext_i64_i32(Tx_41538)) *
                (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)),
                sext_i64_i32(Tx_41538)) * sext_i64_i32(Tx_41538);
    
    int32_t ltid_pre_44680;
    
    ltid_pre_44680 = squot32(local_tid_44673, sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44681;
    
    ltid_pre_44681 = local_tid_44673 - squot32(local_tid_44673,
                                               sext_i64_i32(Tx_41538)) *
        sext_i64_i32(Tx_41538);
    
    int32_t ltid_pre_44682;
    
    ltid_pre_44682 = local_tid_44673;
    
    int64_t gid_zz_41548;
    
    gid_zz_41548 = squot64(sext_i32_i64(group_tid_44674), gridDim_y_41540 *
                           gridDim_x_41539);
    
    int64_t gid_y_41547;
    
    gid_y_41547 = squot64(sext_i32_i64(group_tid_44674) -
                          squot64(sext_i32_i64(group_tid_44674),
                                  gridDim_y_41540 * gridDim_x_41539) *
                          (gridDim_y_41540 * gridDim_x_41539), gridDim_x_41539);
    
    int64_t gid_x_41546;
    
    gid_x_41546 = sext_i32_i64(group_tid_44674) -
        squot64(sext_i32_i64(group_tid_44674), gridDim_y_41540 *
                gridDim_x_41539) * (gridDim_y_41540 * gridDim_x_41539) -
        squot64(sext_i32_i64(group_tid_44674) -
                squot64(sext_i32_i64(group_tid_44674), gridDim_y_41540 *
                        gridDim_x_41539) * (gridDim_y_41540 * gridDim_x_41539),
                gridDim_x_41539) * gridDim_x_41539;
    
    int64_t ii_41550;
    
    ii_41550 = 30 * gid_zz_41548;
    
    int64_t jj1_41551 = Ty_41537 * gid_y_41547;
    int64_t jj2_41552 = Tx_41538 * gid_x_41546;
    float mem_43475[30];
    int64_t ltid_y_41555 = sext_i32_i64(ltid_pre_44680);
    int64_t ltid_x_41553 = sext_i32_i64(ltid_pre_44681);
    int32_t ltid_flat_41554 = local_tid_44673;
    float mem_43469[30];
    
    for (int32_t i_43288 = 0; i_43288 < 30; i_43288++) {
        int64_t i_41563 = sext_i32_i64(i_43288);
        
        mem_43469[i_41563] = 0.0F;
    }
    for (int64_t i_44684 = 0; i_44684 < 30; i_44684++) {
        mem_43475[i_44684] = mem_43469[i_44684];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43477;
    
    mem_43477 = (__local char *) mem_43477_backing_0;
    
    float loop_mem_43507[30];
    float mem_param_43478[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43478[i_1] = mem_43475[i_1];
    for (int32_t i_43290 = 0; i_43290 < n_29263; i_43290++) {
        int64_t i_41568 = sext_i32_i64(i_43290);
        
        for (int64_t i_41571 = 0; i_41571 < count_shmem_41545; i_41571++) {
            int64_t offs_41584 = group_sizze_41544 * i_41571;
            int64_t ltid_41574 = sext_i32_i64(ltid_pre_44682);
            int32_t ltid_flat_41573 = local_tid_44673;
            int64_t loc_ind_41585 = ltid_41574 + offs_41584;
            int64_t gtid_41586 = ii_41550 + loc_ind_41585;
            bool cond_41587 = slt64(gtid_41586, m_29259);
            float y_elem_41588;
            
            if (cond_41587) {
                float Y_elem_41590 = ((__global float *) mem_43465)[i_41568 *
                                                                    m_29259 +
                                                                    gtid_41586];
                
                y_elem_41588 = Y_elem_41590;
            } else {
                y_elem_41588 = 0.0F;
            }
            
            bool cond_41592 = slt64(loc_ind_41585, 30);
            int64_t y_loc_ind_41593;
            
            if (cond_41592) {
                y_loc_ind_41593 = loc_ind_41585;
            } else {
                y_loc_ind_41593 = -1;
            }
            if (sle64(0, y_loc_ind_41593) && slt64(y_loc_ind_41593, 30)) {
                ((__local float *) mem_43477)[y_loc_ind_41593] = y_elem_41588;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43506[30];
        int64_t ltid_y_41599 = sext_i32_i64(ltid_pre_44680);
        int64_t ltid_x_41597 = sext_i32_i64(ltid_pre_44681);
        int32_t ltid_flat_41598 = local_tid_44673;
        int64_t gtid_41626 = jj1_41551 + ltid_y_41599;
        int64_t gtid_41627 = jj2_41552 + ltid_x_41597;
        bool binop_x_41629 = slt64(gtid_41626, i32_res_29278);
        bool binop_y_41630 = slt64(gtid_41627, i32_res_29278);
        bool cond_41631 = binop_x_41629 && binop_y_41630;
        float mem_44406[30];
        
        if (cond_41631) {
            float x_41634 = ((__global float *) mem_43390)[i_41568 *
                                                           i32_res_29278 +
                                                           gtid_41626];
            float x_41636 = ((__global float *) mem_43394)[i_41568 *
                                                           i32_res_29278 +
                                                           gtid_41627];
            
            for (int32_t i_43289 = 0; i_43289 < 30; i_43289++) {
                int64_t i_41638 = sext_i32_i64(i_43289);
                int64_t gtid_41640 = ii_41550 + i_41638;
                bool cond_41641 = slt64(gtid_41640, m_29259);
                
                if (cond_41641) {
                    float inp_reg_var2zz_41643 = ((__local
                                                   float *) mem_43477)[i_41638];
                    float res_reg_var2zz_41644 = mem_param_43478[i_41638];
                    float x_41648 = x_41634 * x_41636;
                    bool isnan_res_41649;
                    
                    isnan_res_41649 = futrts_isnan32(inp_reg_var2zz_41643);
                    
                    float y_41650;
                    
                    if (isnan_res_41649) {
                        y_41650 = 0.0F;
                    } else {
                        y_41650 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41651 = x_41648 * y_41650;
                    float defunc_1_op_res_41655 = res_reg_var2zz_41644 +
                          defunc_2_f_res_41651;
                    
                    mem_param_43478[i_41638] = defunc_1_op_res_41655;
                }
            }
            for (int64_t i_44690 = 0; i_44690 < 30; i_44690++) {
                mem_44406[i_44690] = mem_param_43478[i_44690];
            }
        } else {
            for (int64_t i_44691 = 0; i_44691 < 30; i_44691++) {
                mem_44406[i_44691] = mem_param_43478[i_44691];
            }
        }
        for (int64_t i_44692 = 0; i_44692 < 30; i_44692++) {
            mem_43506[i_44692] = mem_44406[i_44692];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44685[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44685[i_2] = mem_43506[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43478[i_3] = mem_param_tmp_44685[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43507[i_4] = mem_param_43478[i_4];
    
    float mem_43521[30 * 1 * 1];
    int64_t ltid_zz_41664 = sext_i32_i64(ltid_pre_44677);
    int64_t ltid_y_41663 = sext_i32_i64(ltid_pre_44678);
    int64_t ltid_x_41661 = sext_i32_i64(ltid_pre_44679);
    int32_t ltid_flat_41662 = local_tid_44673;
    float mem_43515[30 * 1 * 1];
    
    for (int32_t i_43292 = 0; i_43292 < 30; i_43292++) {
        int64_t i_41673 = sext_i32_i64(i_43292);
        
        for (int64_t i_44694 = 0; i_44694 < 1; i_44694++) {
            mem_43515[i_41673 + i_44694] = loop_mem_43507[i_41673 + i_44694];
        }
    }
    for (int64_t i_44695 = 0; i_44695 < 30; i_44695++) {
        for (int64_t i_44696 = 0; i_44696 < 1; i_44696++) {
            for (int64_t i_44697 = 0; i_44697 < 1; i_44697++) {
                mem_43521[i_44695 + i_44696 + i_44697] = mem_43515[i_44695 +
                                                                   i_44696 +
                                                                   i_44697];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44698 = squot64(sext_i32_i64(local_tid_44673), Ty_41537 *
                                       Tx_41538);
    int64_t reg_tile_i_44699 = squot64(sext_i32_i64(local_tid_44673) -
                                       squot64(sext_i32_i64(local_tid_44673),
                                               Ty_41537 * Tx_41538) *
                                       (Ty_41537 * Tx_41538), Tx_41538);
    int64_t reg_tile_i_44700 = sext_i32_i64(local_tid_44673) -
            squot64(sext_i32_i64(local_tid_44673), Ty_41537 * Tx_41538) *
            (Ty_41537 * Tx_41538) - squot64(sext_i32_i64(local_tid_44673) -
                                            squot64(sext_i32_i64(local_tid_44673),
                                                    Ty_41537 * Tx_41538) *
                                            (Ty_41537 * Tx_41538), Tx_41538) *
            Tx_41538;
    int64_t tile_dim_start_44701 = 30 * (gid_zz_41548 + reg_tile_i_44698);
    int64_t tile_dim_start_44702 = Ty_41537 * gid_y_41547 + reg_tile_i_44699;
    int64_t tile_dim_start_44703 = Tx_41538 * gid_x_41546 + reg_tile_i_44700;
    
    for (int64_t nest_i_44704 = 0; nest_i_44704 < 30; nest_i_44704++) {
        for (int64_t nest_i_44705 = 0; nest_i_44705 < 1; nest_i_44705++) {
            for (int64_t nest_i_44706 = 0; nest_i_44706 < 1; nest_i_44706++) {
                if ((slt64(tile_dim_start_44701 + nest_i_44704, m_29259) &&
                     slt64(tile_dim_start_44702 + nest_i_44705,
                           i32_res_29278)) && slt64(tile_dim_start_44703 +
                                                    nest_i_44706,
                                                    i32_res_29278)) {
                    ((__global float *) mem_43525)[(tile_dim_start_44701 +
                                                    nest_i_44704) *
                                                   (i32_res_29278 *
                                                    i32_res_29278) +
                                                   (tile_dim_start_44702 +
                                                    nest_i_44705) *
                                                   i32_res_29278 +
                                                   (tile_dim_start_44703 +
                                                    nest_i_44706)] =
                        mem_43521[nest_i_44704 + nest_i_44705 + nest_i_44706];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_41702(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43664_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43662_backing_aligned_1,
                                            int64_t m_29259, int64_t N_29260,
                                            int64_t i32_res_29272,
                                            int64_t i32_res_29278,
                                            int64_t gridDim_x_41696,
                                            int64_t full_tiles_41727,
                                            int64_t kk_41934, __global
                                            unsigned char *images_mem_43378,
                                            __global unsigned char *mem_43390,
                                            __global unsigned char *mem_43836)
{
    #define Ty_41683 (mainziTy_41680)
    #define Ry_41684 (mainziRy_41682)
    #define Tx_41685 (mainziTx_41679)
    #define Rx_41686 (mainziRx_41681)
    #define Tk_41687 (mainziTk_41678)
    #define tk_div_tx_41688 (sdiv_up64(mainziTk_41678, mainziTx_41679))
    #define tk_div_ty_41689 (sdiv_up64(mainziTk_41678, mainziTy_41680))
    #define TxRx_41690 (mainziTx_41679 * mainziRx_41681)
    #define TyRy_41691 (mainziTy_41680 * mainziRy_41682)
    #define a_loc_szz_41693 (mainziTk_41678 * (mainziTy_41680 * mainziRy_41682))
    #define b_loc_szz_41695 (mainziRx_41681 * (mainziTx_41679 * mainziTk_41678))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43664_backing_1 = (__local volatile
                                                           char *) mem_43664_backing_aligned_0;
    __local volatile char *restrict mem_43662_backing_0 = (__local volatile
                                                           char *) mem_43662_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44846;
    int32_t local_tid_44847;
    int64_t group_sizze_44850;
    int32_t wave_sizze_44849;
    int32_t group_tid_44848;
    
    global_tid_44846 = get_global_id(0);
    local_tid_44847 = get_local_id(0);
    group_sizze_44850 = get_local_size(0);
    wave_sizze_44849 = LOCKSTEP_WIDTH;
    group_tid_44848 = get_group_id(0);
    
    int32_t gid_flat_41702;
    
    gid_flat_41702 = group_tid_44848;
    
    int32_t ltid_pre_44851;
    
    ltid_pre_44851 = squot32(local_tid_44847, sext_i64_i32(Tx_41685));
    
    int32_t ltid_pre_44852;
    
    ltid_pre_44852 = local_tid_44847 - squot32(local_tid_44847,
                                               sext_i64_i32(Tx_41685)) *
        sext_i64_i32(Tx_41685);
    
    int64_t gid_y_41701;
    
    gid_y_41701 = squot64(sext_i32_i64(group_tid_44848), gridDim_x_41696);
    
    int64_t gid_x_41700;
    
    gid_x_41700 = sext_i32_i64(group_tid_44848) -
        squot64(sext_i32_i64(group_tid_44848), gridDim_x_41696) *
        gridDim_x_41696;
    
    int64_t iii_41703;
    
    iii_41703 = TyRy_41691 * gid_y_41701;
    
    int64_t jjj_41704 = TxRx_41690 * gid_x_41700;
    float mem_43660[Ry_41684 * Rx_41686];
    int64_t ltid_y_41707 = sext_i32_i64(ltid_pre_44851);
    int64_t ltid_x_41705 = sext_i32_i64(ltid_pre_44852);
    int32_t ltid_flat_41706 = local_tid_44847;
    float mem_43651[Ry_41684 * Rx_41686];
    
    for (int64_t i_41718 = 0; i_41718 < Ry_41684; i_41718++) {
        for (int64_t i_41721 = 0; i_41721 < Rx_41686; i_41721++) {
            mem_43651[i_41718 * Rx_41686 + i_41721] = 0.0F;
        }
    }
    for (int64_t i_44855 = 0; i_44855 < Ry_41684; i_44855++) {
        for (int64_t i_44856 = 0; i_44856 < Rx_41686; i_44856++) {
            mem_43660[i_44855 * Rx_41686 + i_44856] = mem_43651[i_44855 *
                                                                Rx_41686 +
                                                                i_44856];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43662;
    
    mem_43662 = (__local char *) mem_43662_backing_0;
    
    __local char *mem_43664;
    
    mem_43664 = (__local char *) mem_43664_backing_1;
    
    float mem_43735[Ry_41684];
    float mem_43739[Rx_41686];
    float loop_mem_43751[Ry_41684 * Rx_41686];
    float mem_param_43665[Ry_41684 * Rx_41686];
    
    for (int32_t i_2 = 0; i_2 < Ry_41684 * Rx_41686; i_2++)
        mem_param_43665[i_2] = mem_43660[i_2];
    for (int64_t i_41728 = 0; i_41728 < full_tiles_41727; i_41728++) {
        int64_t kk_41732 = Tk_41687 * i_41728;
        
        for (int64_t i_41733 = 0; i_41733 < Ry_41684; i_41733++) {
            int64_t binop_y_41756 = Ty_41683 * i_41733;
            
            for (int64_t i_41735 = 0; i_41735 < tk_div_tx_41688; i_41735++) {
                int64_t binop_y_41754 = Tx_41685 * i_41735;
                int64_t ltid_x_41737 = sext_i32_i64(ltid_pre_44851);
                int64_t ltid_y_41738 = sext_i32_i64(ltid_pre_44852);
                int32_t ltid_flat_41739 = local_tid_44847;
                int64_t k_41755 = ltid_y_41738 + binop_y_41754;
                int64_t i_41757 = ltid_x_41737 + binop_y_41756;
                int64_t gtid_41758 = iii_41703 + i_41757;
                int64_t A_col_idx_41759 = kk_41732 + k_41755;
                bool cond_41760 = slt64(gtid_41758, m_29259);
                float A_elem_41761;
                
                if (cond_41760) {
                    float A_elem_41763 = ((__global
                                           float *) images_mem_43378)[gtid_41758 *
                                                                      N_29260 +
                                                                      A_col_idx_41759];
                    
                    A_elem_41761 = A_elem_41763;
                } else {
                    A_elem_41761 = 0.0F;
                }
                
                bool cond_41765 = slt64(k_41755, Tk_41687);
                int64_t a_loc_ind_41766;
                
                if (cond_41765) {
                    int64_t binop_y_41767 = Tk_41687 * i_41757;
                    int64_t loc_fi_41768 = k_41755 + binop_y_41767;
                    
                    a_loc_ind_41766 = loc_fi_41768;
                } else {
                    a_loc_ind_41766 = -1;
                }
                if (sle64(0, a_loc_ind_41766) && slt64(a_loc_ind_41766,
                                                       a_loc_szz_41693)) {
                    ((__local float *) mem_43662)[a_loc_ind_41766] =
                        A_elem_41761;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41773 = 0; i_41773 < tk_div_ty_41689; i_41773++) {
            int64_t binop_y_41794 = Ty_41683 * i_41773;
            
            for (int64_t i_41775 = 0; i_41775 < Rx_41686; i_41775++) {
                int64_t binop_y_41796 = Tx_41685 * i_41775;
                int64_t ltid_x_41777 = sext_i32_i64(ltid_pre_44851);
                int64_t ltid_y_41778 = sext_i32_i64(ltid_pre_44852);
                int32_t ltid_flat_41779 = local_tid_44847;
                int64_t k_41795 = ltid_x_41777 + binop_y_41794;
                int64_t j_41797 = ltid_y_41778 + binop_y_41796;
                int64_t gtid_41798 = jjj_41704 + j_41797;
                int64_t B_row_idx_41799 = kk_41732 + k_41795;
                bool cond_41800 = slt64(gtid_41798, i32_res_29278);
                float B_elem_41801;
                
                if (cond_41800) {
                    float B_elem_41803 = ((__global
                                           float *) mem_43390)[B_row_idx_41799 *
                                                               i32_res_29278 +
                                                               gtid_41798];
                    
                    B_elem_41801 = B_elem_41803;
                } else {
                    B_elem_41801 = 0.0F;
                }
                
                bool cond_41805 = slt64(k_41795, Tk_41687);
                int64_t b_loc_ind_41806;
                
                if (cond_41805) {
                    int64_t binop_y_41807 = TxRx_41690 * k_41795;
                    int64_t loc_fi_41808 = j_41797 + binop_y_41807;
                    
                    b_loc_ind_41806 = loc_fi_41808;
                } else {
                    b_loc_ind_41806 = -1;
                }
                if (sle64(0, b_loc_ind_41806) && slt64(b_loc_ind_41806,
                                                       b_loc_szz_41695)) {
                    ((__local float *) mem_43664)[b_loc_ind_41806] =
                        B_elem_41801;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43750[Ry_41684 * Rx_41686];
        float mem_param_43722[Ry_41684 * Rx_41686];
        
        for (int32_t i_3 = 0; i_3 < Ry_41684 * Rx_41686; i_3++)
            mem_param_43722[i_3] = mem_param_43665[i_3];
        for (int64_t i_41813 = 0; i_41813 < Tk_41687; i_41813++) {
            int64_t binop_y_41852 = TxRx_41690 * i_41813;
            int64_t ltid_y_41817 = sext_i32_i64(ltid_pre_44851);
            int64_t ltid_x_41815 = sext_i32_i64(ltid_pre_44852);
            int32_t ltid_flat_41816 = local_tid_44847;
            float mem_43725[Ry_41684];
            float mem_43727[Rx_41686];
            int64_t binop_x_41843 = Ry_41684 * ltid_y_41817;
            
            for (int64_t i_41841 = 0; i_41841 < Ry_41684; i_41841++) {
                int64_t binop_x_41844 = i_41841 + binop_x_41843;
                int64_t binop_y_41845 = Tk_41687 * binop_x_41844;
                int64_t a_loc_ind_41846 = i_41813 + binop_y_41845;
                
                for (int64_t i_44868 = 0; i_44868 < 1; i_44868++) {
                    mem_43725[i_41841 + i_44868] = ((__local
                                                     float *) mem_43662)[a_loc_ind_41846 +
                                                                         i_44868];
                }
            }
            
            int64_t binop_y_41854 = Rx_41686 * ltid_x_41815;
            
            for (int64_t i_41850 = 0; i_41850 < Rx_41686; i_41850++) {
                int64_t binop_x_41853 = i_41850 + binop_y_41852;
                int64_t b_loc_ind_41855 = binop_x_41853 + binop_y_41854;
                
                for (int64_t i_44870 = 0; i_44870 < 1; i_44870++) {
                    mem_43727[i_41850 + i_44870] = ((__local
                                                     float *) mem_43664)[b_loc_ind_41855 +
                                                                         i_44870];
                }
            }
            for (int64_t i_44871 = 0; i_44871 < Ry_41684; i_44871++) {
                mem_43735[i_44871] = mem_43725[i_44871];
            }
            for (int64_t i_44872 = 0; i_44872 < Rx_41686; i_44872++) {
                mem_43739[i_44872] = mem_43727[i_44872];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43749[Ry_41684 * Rx_41686];
            int64_t ltid_y_41862 = sext_i32_i64(ltid_pre_44851);
            int64_t ltid_x_41860 = sext_i32_i64(ltid_pre_44852);
            int32_t ltid_flat_41861 = local_tid_44847;
            int64_t binop_y_41905 = Ry_41684 * ltid_y_41862;
            int64_t binop_y_41909 = Rx_41686 * ltid_x_41860;
            
            for (int64_t i_41899 = 0; i_41899 < Ry_41684; i_41899++) {
                int64_t binop_x_41904 = iii_41703 + i_41899;
                int64_t cmpop_x_41906 = binop_x_41904 + binop_y_41905;
                bool binop_x_41907 = slt64(cmpop_x_41906, m_29259);
                
                for (int64_t i_41902 = 0; i_41902 < Rx_41686; i_41902++) {
                    int64_t binop_x_41908 = jjj_41704 + i_41902;
                    int64_t cmpop_x_41910 = binop_x_41908 + binop_y_41909;
                    bool binop_y_41911 = slt64(cmpop_x_41910, i32_res_29278);
                    bool cond_41912 = binop_x_41907 && binop_y_41911;
                    
                    if (cond_41912) {
                        float a_41914 = mem_43735[i_41899];
                        float c_41916 = mem_param_43722[i_41899 * Rx_41686 +
                                                        i_41902];
                        bool isnan_res_41919;
                        
                        isnan_res_41919 = futrts_isnan32(a_41914);
                        
                        float defunc_1_f_res_41920;
                        
                        if (isnan_res_41919) {
                            defunc_1_f_res_41920 = 0.0F;
                        } else {
                            float b_41915 = mem_43739[i_41902];
                            float defunc_1_f_res_f_res_41921 = a_41914 *
                                  b_41915;
                            
                            defunc_1_f_res_41920 = defunc_1_f_res_f_res_41921;
                        }
                        
                        float defunc_1_op_res_41925 = c_41916 +
                              defunc_1_f_res_41920;
                        
                        mem_param_43722[i_41899 * Rx_41686 + i_41902] =
                            defunc_1_op_res_41925;
                    }
                }
            }
            for (int64_t i_44875 = 0; i_44875 < Ry_41684; i_44875++) {
                for (int64_t i_44876 = 0; i_44876 < Rx_41686; i_44876++) {
                    mem_43749[i_44875 * Rx_41686 + i_44876] =
                        mem_param_43722[i_44875 * Rx_41686 + i_44876];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44865[Ry_41684 * Rx_41686];
            
            for (int32_t i_4 = 0; i_4 < Ry_41684 * Rx_41686; i_4++)
                mem_param_tmp_44865[i_4] = mem_43749[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41684 * Rx_41686; i_5++)
                mem_param_43722[i_5] = mem_param_tmp_44865[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41684 * Rx_41686; i_6++)
            loop_mem_43750[i_6] = mem_param_43722[i_6];
        
        float mem_param_tmp_44857[Ry_41684 * Rx_41686];
        
        for (int32_t i_7 = 0; i_7 < Ry_41684 * Rx_41686; i_7++)
            mem_param_tmp_44857[i_7] = loop_mem_43750[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41684 * Rx_41686; i_8++)
            mem_param_43665[i_8] = mem_param_tmp_44857[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41684 * Rx_41686; i_9++)
        loop_mem_43751[i_9] = mem_param_43665[i_9];
    for (int64_t i_41935 = 0; i_41935 < Ry_41684; i_41935++) {
        int64_t binop_y_41960 = Ty_41683 * i_41935;
        
        for (int64_t i_41937 = 0; i_41937 < tk_div_tx_41688; i_41937++) {
            int64_t binop_y_41958 = Tx_41685 * i_41937;
            int64_t ltid_x_41939 = sext_i32_i64(ltid_pre_44851);
            int64_t ltid_y_41940 = sext_i32_i64(ltid_pre_44852);
            int32_t ltid_flat_41941 = local_tid_44847;
            int64_t k_41959 = ltid_y_41940 + binop_y_41958;
            int64_t i_41961 = ltid_x_41939 + binop_y_41960;
            int64_t gtid_41962 = iii_41703 + i_41961;
            int64_t A_col_idx_41963 = kk_41934 + k_41959;
            bool binop_x_41964 = slt64(gtid_41962, m_29259);
            bool binop_y_41965 = slt64(A_col_idx_41963, i32_res_29272);
            bool cond_41966 = binop_x_41964 && binop_y_41965;
            float A_elem_41967;
            
            if (cond_41966) {
                float A_elem_41969 = ((__global
                                       float *) images_mem_43378)[gtid_41962 *
                                                                  N_29260 +
                                                                  A_col_idx_41963];
                
                A_elem_41967 = A_elem_41969;
            } else {
                A_elem_41967 = 0.0F;
            }
            
            bool cond_41971 = slt64(k_41959, Tk_41687);
            int64_t a_loc_ind_41972;
            
            if (cond_41971) {
                int64_t binop_y_41973 = Tk_41687 * i_41961;
                int64_t loc_fi_41974 = k_41959 + binop_y_41973;
                
                a_loc_ind_41972 = loc_fi_41974;
            } else {
                a_loc_ind_41972 = -1;
            }
            if (sle64(0, a_loc_ind_41972) && slt64(a_loc_ind_41972,
                                                   a_loc_szz_41693)) {
                ((__local float *) mem_43662)[a_loc_ind_41972] = A_elem_41967;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41979 = 0; i_41979 < tk_div_ty_41689; i_41979++) {
        int64_t binop_y_42002 = Ty_41683 * i_41979;
        
        for (int64_t i_41981 = 0; i_41981 < Rx_41686; i_41981++) {
            int64_t binop_y_42004 = Tx_41685 * i_41981;
            int64_t ltid_x_41983 = sext_i32_i64(ltid_pre_44851);
            int64_t ltid_y_41984 = sext_i32_i64(ltid_pre_44852);
            int32_t ltid_flat_41985 = local_tid_44847;
            int64_t k_42003 = ltid_x_41983 + binop_y_42002;
            int64_t j_42005 = ltid_y_41984 + binop_y_42004;
            int64_t gtid_42006 = jjj_41704 + j_42005;
            int64_t B_row_idx_42007 = kk_41934 + k_42003;
            bool binop_x_42008 = slt64(gtid_42006, i32_res_29278);
            bool binop_y_42009 = slt64(B_row_idx_42007, i32_res_29272);
            bool cond_42010 = binop_x_42008 && binop_y_42009;
            float B_elem_42011;
            
            if (cond_42010) {
                float B_elem_42013 = ((__global
                                       float *) mem_43390)[B_row_idx_42007 *
                                                           i32_res_29278 +
                                                           gtid_42006];
                
                B_elem_42011 = B_elem_42013;
            } else {
                B_elem_42011 = 0.0F;
            }
            
            bool cond_42015 = slt64(k_42003, Tk_41687);
            int64_t b_loc_ind_42016;
            
            if (cond_42015) {
                int64_t binop_y_42017 = TxRx_41690 * k_42003;
                int64_t loc_fi_42018 = j_42005 + binop_y_42017;
                
                b_loc_ind_42016 = loc_fi_42018;
            } else {
                b_loc_ind_42016 = -1;
            }
            if (sle64(0, b_loc_ind_42016) && slt64(b_loc_ind_42016,
                                                   b_loc_szz_41695)) {
                ((__local float *) mem_43664)[b_loc_ind_42016] = B_elem_42011;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43817[Ry_41684];
    float mem_43821[Rx_41686];
    float mem_43831[Ry_41684 * Rx_41686];
    float loop_mem_43833[Ry_41684 * Rx_41686];
    float mem_param_43804[Ry_41684 * Rx_41686];
    
    for (int32_t i_10 = 0; i_10 < Ry_41684 * Rx_41686; i_10++)
        mem_param_43804[i_10] = loop_mem_43751[i_10];
    for (int64_t i_42023 = 0; i_42023 < Tk_41687; i_42023++) {
        int64_t cmpop_x_42025 = kk_41934 + i_42023;
        bool cond_42026 = slt64(cmpop_x_42025, i32_res_29272);
        float mem_44424[Ry_41684 * Rx_41686];
        
        if (cond_42026) {
            int64_t binop_y_42064 = TxRx_41690 * i_42023;
            int64_t bytes_43806 = 4 * Ry_41684;
            int64_t bytes_43808 = 4 * Rx_41686;
            int64_t ltid_y_42029 = sext_i32_i64(ltid_pre_44851);
            int64_t ltid_x_42027 = sext_i32_i64(ltid_pre_44852);
            int32_t ltid_flat_42028 = local_tid_44847;
            float mem_43807[Ry_41684];
            float mem_43809[Rx_41686];
            int64_t binop_x_42055 = Ry_41684 * ltid_y_42029;
            
            for (int64_t i_42053 = 0; i_42053 < Ry_41684; i_42053++) {
                int64_t binop_x_42056 = i_42053 + binop_x_42055;
                int64_t binop_y_42057 = Tk_41687 * binop_x_42056;
                int64_t a_loc_ind_42058 = i_42023 + binop_y_42057;
                
                for (int64_t i_44884 = 0; i_44884 < 1; i_44884++) {
                    mem_43807[i_42053 + i_44884] = ((__local
                                                     float *) mem_43662)[a_loc_ind_42058 +
                                                                         i_44884];
                }
            }
            
            int64_t binop_y_42066 = Rx_41686 * ltid_x_42027;
            
            for (int64_t i_42062 = 0; i_42062 < Rx_41686; i_42062++) {
                int64_t binop_x_42065 = i_42062 + binop_y_42064;
                int64_t b_loc_ind_42067 = binop_x_42065 + binop_y_42066;
                
                for (int64_t i_44886 = 0; i_44886 < 1; i_44886++) {
                    mem_43809[i_42062 + i_44886] = ((__local
                                                     float *) mem_43664)[b_loc_ind_42067 +
                                                                         i_44886];
                }
            }
            for (int64_t i_44887 = 0; i_44887 < Ry_41684; i_44887++) {
                mem_43817[i_44887] = mem_43807[i_44887];
            }
            for (int64_t i_44888 = 0; i_44888 < Rx_41686; i_44888++) {
                mem_43821[i_44888] = mem_43809[i_44888];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42074 = sext_i32_i64(ltid_pre_44851);
            int64_t ltid_x_42072 = sext_i32_i64(ltid_pre_44852);
            int32_t ltid_flat_42073 = local_tid_44847;
            int64_t binop_y_42117 = Ry_41684 * ltid_y_42074;
            int64_t binop_y_42121 = Rx_41686 * ltid_x_42072;
            
            for (int64_t i_42111 = 0; i_42111 < Ry_41684; i_42111++) {
                int64_t binop_x_42116 = iii_41703 + i_42111;
                int64_t cmpop_x_42118 = binop_x_42116 + binop_y_42117;
                bool binop_x_42119 = slt64(cmpop_x_42118, m_29259);
                
                for (int64_t i_42114 = 0; i_42114 < Rx_41686; i_42114++) {
                    int64_t binop_x_42120 = jjj_41704 + i_42114;
                    int64_t cmpop_x_42122 = binop_x_42120 + binop_y_42121;
                    bool binop_y_42123 = slt64(cmpop_x_42122, i32_res_29278);
                    bool cond_42124 = binop_x_42119 && binop_y_42123;
                    
                    if (cond_42124) {
                        float a_42126 = mem_43817[i_42111];
                        float c_42128 = mem_param_43804[i_42111 * Rx_41686 +
                                                        i_42114];
                        bool isnan_res_42131;
                        
                        isnan_res_42131 = futrts_isnan32(a_42126);
                        
                        float defunc_1_f_res_42132;
                        
                        if (isnan_res_42131) {
                            defunc_1_f_res_42132 = 0.0F;
                        } else {
                            float b_42127 = mem_43821[i_42114];
                            float defunc_1_f_res_f_res_42133 = a_42126 *
                                  b_42127;
                            
                            defunc_1_f_res_42132 = defunc_1_f_res_f_res_42133;
                        }
                        
                        float defunc_1_op_res_42137 = c_42128 +
                              defunc_1_f_res_42132;
                        
                        mem_param_43804[i_42111 * Rx_41686 + i_42114] =
                            defunc_1_op_res_42137;
                    }
                }
            }
            for (int64_t i_44891 = 0; i_44891 < Ry_41684; i_44891++) {
                for (int64_t i_44892 = 0; i_44892 < Rx_41686; i_44892++) {
                    mem_43831[i_44891 * Rx_41686 + i_44892] =
                        mem_param_43804[i_44891 * Rx_41686 + i_44892];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44893 = 0; i_44893 < Ry_41684; i_44893++) {
                for (int64_t i_44894 = 0; i_44894 < Rx_41686; i_44894++) {
                    mem_44424[i_44893 * Rx_41686 + i_44894] =
                        mem_43831[i_44893 * Rx_41686 + i_44894];
                }
            }
        } else {
            for (int64_t i_44895 = 0; i_44895 < Ry_41684; i_44895++) {
                for (int64_t i_44896 = 0; i_44896 < Rx_41686; i_44896++) {
                    mem_44424[i_44895 * Rx_41686 + i_44896] =
                        mem_param_43804[i_44895 * Rx_41686 + i_44896];
                }
            }
        }
        
        float mem_param_tmp_44881[Ry_41684 * Rx_41686];
        
        for (int32_t i_11 = 0; i_11 < Ry_41684 * Rx_41686; i_11++)
            mem_param_tmp_44881[i_11] = mem_44424[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41684 * Rx_41686; i_12++)
            mem_param_43804[i_12] = mem_param_tmp_44881[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41684 * Rx_41686; i_13++)
        loop_mem_43833[i_13] = mem_param_43804[i_13];
    
    int64_t reg_tile_i_44897 = squot64(sext_i32_i64(local_tid_44847), Tx_41685);
    int64_t reg_tile_i_44898 = sext_i32_i64(local_tid_44847) -
            squot64(sext_i32_i64(local_tid_44847), Tx_41685) * Tx_41685;
    int64_t tile_dim_start_44899 = Ry_41684 * (Ty_41683 * gid_y_41701 +
                                               reg_tile_i_44897);
    int64_t tile_dim_start_44900 = Rx_41686 * (Tx_41685 * gid_x_41700 +
                                               reg_tile_i_44898);
    
    for (int64_t nest_i_44901 = 0; nest_i_44901 < Ry_41684; nest_i_44901++) {
        for (int64_t nest_i_44902 = 0; nest_i_44902 < Rx_41686;
             nest_i_44902++) {
            if (slt64(tile_dim_start_44899 + nest_i_44901, m_29259) &&
                slt64(tile_dim_start_44900 + nest_i_44902, i32_res_29278)) {
                ((__global float *) mem_43836)[(tile_dim_start_44899 +
                                                nest_i_44901) * i32_res_29278 +
                                               (tile_dim_start_44900 +
                                                nest_i_44902)] =
                    loop_mem_43833[nest_i_44901 * Rx_41686 + nest_i_44902];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41683
    #undef Ry_41684
    #undef Tx_41685
    #undef Rx_41686
    #undef Tk_41687
    #undef tk_div_tx_41688
    #undef tk_div_ty_41689
    #undef TxRx_41690
    #undef TyRy_41691
    #undef a_loc_szz_41693
    #undef b_loc_szz_41695
}
__kernel void mainzisegmap_intragroup_42151(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43894_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43885_backing_aligned_1,
                                            int64_t m_29259,
                                            int64_t i32_res_29278,
                                            int64_t num_groups_y_42149,
                                            int64_t num_whole_tiles_42167,
                                            int64_t residual_input_42294,
                                            unsigned char cond_42295, __global
                                            unsigned char *defunc_3_map_res_mem_43846,
                                            __global unsigned char *mem_43875,
                                            __global unsigned char *mem_43902)
{
    #define tile_sizze_42146 (mainzitile_sizze_42145)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43894_backing_5 = (__local volatile
                                                           char *) mem_43894_backing_aligned_0;
    __local volatile char *restrict mem_43885_backing_0 = (__local volatile
                                                           char *) mem_43885_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44978;
    int32_t local_tid_44979;
    int64_t group_sizze_44982;
    int32_t wave_sizze_44981;
    int32_t group_tid_44980;
    
    global_tid_44978 = get_global_id(0);
    local_tid_44979 = get_local_id(0);
    group_sizze_44982 = get_local_size(0);
    wave_sizze_44981 = LOCKSTEP_WIDTH;
    group_tid_44980 = get_group_id(0);
    
    int32_t gid_flat_42151;
    
    gid_flat_42151 = group_tid_44980;
    
    int32_t ltid_pre_44983;
    
    ltid_pre_44983 = squot32(local_tid_44979, sext_i64_i32(tile_sizze_42146));
    
    int32_t ltid_pre_44984;
    
    ltid_pre_44984 = local_tid_44979 - squot32(local_tid_44979,
                                               sext_i64_i32(tile_sizze_42146)) *
        sext_i64_i32(tile_sizze_42146);
    
    int64_t gid_x_42143;
    
    gid_x_42143 = squot64(sext_i32_i64(group_tid_44980), num_groups_y_42149);
    
    int64_t gid_y_42144;
    
    gid_y_42144 = sext_i32_i64(group_tid_44980) -
        squot64(sext_i32_i64(group_tid_44980), num_groups_y_42149) *
        num_groups_y_42149;
    
    float mem_43880[1];
    int64_t ltid_x_42168 = sext_i32_i64(ltid_pre_44983);
    int64_t ltid_y_42169 = sext_i32_i64(ltid_pre_44984);
    int32_t ltid_flat_42170 = local_tid_44979;
    
    if (slt64(ltid_x_42168, tile_sizze_42146) && slt64(ltid_y_42169,
                                                       tile_sizze_42146)) {
        mem_43880[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42253 = gid_x_42143 * tile_sizze_42146;
    int64_t binop_x_42268 = gid_y_42144 * tile_sizze_42146;
    __local char *mem_43885;
    
    mem_43885 = (__local char *) mem_43885_backing_0;
    
    float accs_mem_43890[1];
    float mem_param_43881[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43881[i_1] = mem_43880[i_1];
    for (int64_t tile_id_42179 = 0; tile_id_42179 < num_whole_tiles_42167;
         tile_id_42179++) {
        int64_t binop_x_42251 = tile_sizze_42146 * tile_id_42179;
        int64_t ltid_x_42180 = sext_i32_i64(ltid_pre_44983);
        int64_t ltid_y_42181 = sext_i32_i64(ltid_pre_44984);
        int32_t ltid_flat_42182 = local_tid_44979;
        int64_t j_42252 = ltid_y_42181 + binop_x_42251;
        int64_t gtid_42254 = ltid_x_42180 + binop_x_42253;
        bool binop_x_42259 = slt64(j_42252, i32_res_29278);
        bool binop_y_42260 = slt64(gtid_42254, m_29259);
        bool cond_42261 = binop_x_42259 && binop_y_42260;
        float pre_42262;
        
        if (cond_42261) {
            float x_42263 = ((__global
                              float *) defunc_3_map_res_mem_43846)[gtid_42254 *
                                                                   i32_res_29278 +
                                                                   j_42252];
            
            pre_42262 = x_42263;
        } else {
            pre_42262 = 0.0F;
        }
        ((__local float *) mem_43885)[ltid_x_42180 * tile_sizze_42146 +
                                      ltid_y_42181] = pre_42262;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43889[1];
        int64_t ltid_x_42212 = sext_i32_i64(ltid_pre_44983);
        int64_t ltid_y_42213 = sext_i32_i64(ltid_pre_44984);
        int32_t ltid_flat_42214 = local_tid_44979;
        int64_t gtid_42267 = ltid_x_42212 + binop_x_42253;
        int64_t gtid_42269 = ltid_y_42213 + binop_x_42268;
        float acc_42272 = mem_param_43881[0];
        bool binop_x_42276 = slt64(gtid_42267, m_29259);
        bool binop_y_42277 = slt64(gtid_42269, i32_res_29278);
        bool cond_42278 = binop_x_42276 && binop_y_42277;
        float acc_42279;
        
        if (cond_42278) {
            float x_42280;
            float redout_43333 = acc_42272;
            
            for (int64_t i_43334 = 0; i_43334 < tile_sizze_42146; i_43334++) {
                float x_42284 = ((__local float *) mem_43885)[ltid_x_42212 *
                                                              tile_sizze_42146 +
                                                              i_43334];
                int64_t slice_43366 = binop_x_42251 + i_43334;
                float x_42285 = ((__global float *) mem_43875)[slice_43366 *
                                                               (i32_res_29278 *
                                                                m_29259) +
                                                               gtid_42267 *
                                                               i32_res_29278 +
                                                               gtid_42269];
                float defunc_1_f_res_42286 = x_42284 * x_42285;
                float defunc_1_op_res_42283 = defunc_1_f_res_42286 +
                      redout_43333;
                float redout_tmp_44987 = defunc_1_op_res_42283;
                
                redout_43333 = redout_tmp_44987;
            }
            x_42280 = redout_43333;
            acc_42279 = x_42280;
        } else {
            acc_42279 = acc_42272;
        }
        mem_43889[0] = acc_42279;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44985[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44985[i_2] = mem_43889[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43881[i_3] = mem_param_tmp_44985[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43890[i_4] = mem_param_43881[i_4];
    
    __local char *mem_43894;
    
    mem_43894 = (__local char *) mem_43894_backing_5;
    
    float mem_43898[1];
    float mem_44438[1];
    
    if (cond_42295) {
        mem_44438[0] = accs_mem_43890[0];
    } else {
        int64_t binop_x_42368 = tile_sizze_42146 * num_whole_tiles_42167;
        int64_t ltid_x_42296 = sext_i32_i64(ltid_pre_44983);
        int64_t ltid_y_42297 = sext_i32_i64(ltid_pre_44984);
        int32_t ltid_flat_42298 = local_tid_44979;
        int64_t j_42369 = ltid_y_42297 + binop_x_42368;
        int64_t gtid_42371 = binop_x_42253 + ltid_x_42296;
        bool binop_x_42376 = slt64(j_42369, i32_res_29278);
        bool binop_y_42377 = slt64(gtid_42371, m_29259);
        bool cond_42378 = binop_x_42376 && binop_y_42377;
        float pre_42379;
        
        if (cond_42378) {
            float x_42380 = ((__global
                              float *) defunc_3_map_res_mem_43846)[gtid_42371 *
                                                                   i32_res_29278 +
                                                                   j_42369];
            
            pre_42379 = x_42380;
        } else {
            pre_42379 = 0.0F;
        }
        ((__local float *) mem_43894)[ltid_x_42296 * tile_sizze_42146 +
                                      ltid_y_42297] = pre_42379;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42329 = sext_i32_i64(ltid_pre_44983);
        int64_t ltid_y_42330 = sext_i32_i64(ltid_pre_44984);
        int32_t ltid_flat_42331 = local_tid_44979;
        int64_t gtid_42385 = binop_x_42253 + ltid_x_42329;
        int64_t gtid_42387 = binop_x_42268 + ltid_y_42330;
        float acc_42390 = accs_mem_43890[0];
        bool binop_x_42394 = slt64(gtid_42385, m_29259);
        bool binop_y_42395 = slt64(gtid_42387, i32_res_29278);
        bool cond_42396 = binop_x_42394 && binop_y_42395;
        float acc_42397;
        
        if (cond_42396) {
            float x_42398;
            float redout_43335 = acc_42390;
            
            for (int64_t i_43336 = 0; i_43336 < residual_input_42294;
                 i_43336++) {
                float x_42402 = ((__local float *) mem_43894)[ltid_x_42329 *
                                                              tile_sizze_42146 +
                                                              i_43336];
                int64_t slice_43367 = binop_x_42368 + i_43336;
                float x_42403 = ((__global float *) mem_43875)[slice_43367 *
                                                               (i32_res_29278 *
                                                                m_29259) +
                                                               gtid_42385 *
                                                               i32_res_29278 +
                                                               gtid_42387];
                float defunc_1_f_res_42404 = x_42402 * x_42403;
                float defunc_1_op_res_42401 = defunc_1_f_res_42404 +
                      redout_43335;
                float redout_tmp_44988 = defunc_1_op_res_42401;
                
                redout_43335 = redout_tmp_44988;
            }
            x_42398 = redout_43335;
            acc_42397 = x_42398;
        } else {
            acc_42397 = acc_42390;
        }
        mem_43898[0] = acc_42397;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44438[0] = mem_43898[0];
    }
    
    int64_t thread_out_index_44989 = gid_x_42143 * tile_sizze_42146 +
            sext_i32_i64(ltid_pre_44983);
    int64_t thread_out_index_44990 = gid_y_42144 * tile_sizze_42146 +
            sext_i32_i64(ltid_pre_44984);
    
    if (slt64(thread_out_index_44989, m_29259) && slt64(thread_out_index_44990,
                                                        i32_res_29278)) {
        ((__global float *) mem_43902)[thread_out_index_44989 * i32_res_29278 +
                                       thread_out_index_44990] = mem_44438[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42146
}
__kernel void mainzisegmap_intragroup_42443(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43954_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43952_backing_aligned_1,
                                            int64_t N_29258, int64_t m_29259,
                                            int64_t i32_res_29278,
                                            int64_t gridDim_x_42437,
                                            int64_t full_tiles_42468,
                                            int64_t kk_42671, __global
                                            unsigned char *defunc_4_map_res_mem_43912,
                                            __global unsigned char *mem_43936,
                                            __global unsigned char *mem_44126)
{
    #define Ty_42424 (mainziTy_42421)
    #define Ry_42425 (mainziRy_42423)
    #define Tx_42426 (mainziTx_42420)
    #define Rx_42427 (mainziRx_42422)
    #define Tk_42428 (mainziTk_42419)
    #define tk_div_tx_42429 (sdiv_up64(mainziTk_42419, mainziTx_42420))
    #define tk_div_ty_42430 (sdiv_up64(mainziTk_42419, mainziTy_42421))
    #define TxRx_42431 (mainziTx_42420 * mainziRx_42422)
    #define TyRy_42432 (mainziTy_42421 * mainziRy_42423)
    #define a_loc_szz_42434 (mainziTk_42419 * (mainziTy_42421 * mainziRy_42423))
    #define b_loc_szz_42436 (mainziRx_42422 * (mainziTx_42420 * mainziTk_42419))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43954_backing_1 = (__local volatile
                                                           char *) mem_43954_backing_aligned_0;
    __local volatile char *restrict mem_43952_backing_0 = (__local volatile
                                                           char *) mem_43952_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45066;
    int32_t local_tid_45067;
    int64_t group_sizze_45070;
    int32_t wave_sizze_45069;
    int32_t group_tid_45068;
    
    global_tid_45066 = get_global_id(0);
    local_tid_45067 = get_local_id(0);
    group_sizze_45070 = get_local_size(0);
    wave_sizze_45069 = LOCKSTEP_WIDTH;
    group_tid_45068 = get_group_id(0);
    
    int32_t gid_flat_42443;
    
    gid_flat_42443 = group_tid_45068;
    
    int32_t ltid_pre_45071;
    
    ltid_pre_45071 = squot32(local_tid_45067, sext_i64_i32(Tx_42426));
    
    int32_t ltid_pre_45072;
    
    ltid_pre_45072 = local_tid_45067 - squot32(local_tid_45067,
                                               sext_i64_i32(Tx_42426)) *
        sext_i64_i32(Tx_42426);
    
    int64_t gid_y_42442;
    
    gid_y_42442 = squot64(sext_i32_i64(group_tid_45068), gridDim_x_42437);
    
    int64_t gid_x_42441;
    
    gid_x_42441 = sext_i32_i64(group_tid_45068) -
        squot64(sext_i32_i64(group_tid_45068), gridDim_x_42437) *
        gridDim_x_42437;
    
    int64_t iii_42444;
    
    iii_42444 = TyRy_42432 * gid_y_42442;
    
    int64_t jjj_42445 = TxRx_42431 * gid_x_42441;
    float mem_43950[Ry_42425 * Rx_42427];
    int64_t ltid_y_42448 = sext_i32_i64(ltid_pre_45071);
    int64_t ltid_x_42446 = sext_i32_i64(ltid_pre_45072);
    int32_t ltid_flat_42447 = local_tid_45067;
    float mem_43941[Ry_42425 * Rx_42427];
    
    for (int64_t i_42459 = 0; i_42459 < Ry_42425; i_42459++) {
        for (int64_t i_42462 = 0; i_42462 < Rx_42427; i_42462++) {
            mem_43941[i_42459 * Rx_42427 + i_42462] = 0.0F;
        }
    }
    for (int64_t i_45075 = 0; i_45075 < Ry_42425; i_45075++) {
        for (int64_t i_45076 = 0; i_45076 < Rx_42427; i_45076++) {
            mem_43950[i_45075 * Rx_42427 + i_45076] = mem_43941[i_45075 *
                                                                Rx_42427 +
                                                                i_45076];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43952;
    
    mem_43952 = (__local char *) mem_43952_backing_0;
    
    __local char *mem_43954;
    
    mem_43954 = (__local char *) mem_43954_backing_1;
    
    float mem_44025[Ry_42425];
    float mem_44029[Rx_42427];
    float loop_mem_44041[Ry_42425 * Rx_42427];
    float mem_param_43955[Ry_42425 * Rx_42427];
    
    for (int32_t i_2 = 0; i_2 < Ry_42425 * Rx_42427; i_2++)
        mem_param_43955[i_2] = mem_43950[i_2];
    for (int64_t i_42469 = 0; i_42469 < full_tiles_42468; i_42469++) {
        int64_t kk_42473 = Tk_42428 * i_42469;
        
        for (int64_t i_42474 = 0; i_42474 < Ry_42425; i_42474++) {
            int64_t binop_y_42497 = Ty_42424 * i_42474;
            
            for (int64_t i_42476 = 0; i_42476 < tk_div_tx_42429; i_42476++) {
                int64_t binop_y_42495 = Tx_42426 * i_42476;
                int64_t ltid_x_42478 = sext_i32_i64(ltid_pre_45071);
                int64_t ltid_y_42479 = sext_i32_i64(ltid_pre_45072);
                int32_t ltid_flat_42480 = local_tid_45067;
                int64_t k_42496 = ltid_y_42479 + binop_y_42495;
                int64_t i_42498 = ltid_x_42478 + binop_y_42497;
                int64_t gtid_42499 = iii_42444 + i_42498;
                int64_t A_col_idx_42500 = kk_42473 + k_42496;
                bool cond_42501 = slt64(gtid_42499, m_29259);
                float A_elem_42502;
                
                if (cond_42501) {
                    float A_elem_42504 = ((__global
                                           float *) defunc_4_map_res_mem_43912)[gtid_42499 *
                                                                                i32_res_29278 +
                                                                                A_col_idx_42500];
                    
                    A_elem_42502 = A_elem_42504;
                } else {
                    A_elem_42502 = 0.0F;
                }
                
                bool cond_42506 = slt64(k_42496, Tk_42428);
                int64_t a_loc_ind_42507;
                
                if (cond_42506) {
                    int64_t binop_y_42508 = Tk_42428 * i_42498;
                    int64_t loc_fi_42509 = k_42496 + binop_y_42508;
                    
                    a_loc_ind_42507 = loc_fi_42509;
                } else {
                    a_loc_ind_42507 = -1;
                }
                if (sle64(0, a_loc_ind_42507) && slt64(a_loc_ind_42507,
                                                       a_loc_szz_42434)) {
                    ((__local float *) mem_43952)[a_loc_ind_42507] =
                        A_elem_42502;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42514 = 0; i_42514 < tk_div_ty_42430; i_42514++) {
            int64_t binop_y_42535 = Ty_42424 * i_42514;
            
            for (int64_t i_42516 = 0; i_42516 < Rx_42427; i_42516++) {
                int64_t binop_y_42537 = Tx_42426 * i_42516;
                int64_t ltid_x_42518 = sext_i32_i64(ltid_pre_45071);
                int64_t ltid_y_42519 = sext_i32_i64(ltid_pre_45072);
                int32_t ltid_flat_42520 = local_tid_45067;
                int64_t k_42536 = ltid_x_42518 + binop_y_42535;
                int64_t j_42538 = ltid_y_42519 + binop_y_42537;
                int64_t gtid_42539 = jjj_42445 + j_42538;
                int64_t B_row_idx_42540 = kk_42473 + k_42536;
                bool cond_42541 = slt64(gtid_42539, N_29258);
                float B_elem_42542;
                
                if (cond_42541) {
                    float B_elem_42544 = ((__global
                                           float *) mem_43936)[B_row_idx_42540 *
                                                               N_29258 +
                                                               gtid_42539];
                    
                    B_elem_42542 = B_elem_42544;
                } else {
                    B_elem_42542 = 0.0F;
                }
                
                bool cond_42546 = slt64(k_42536, Tk_42428);
                int64_t b_loc_ind_42547;
                
                if (cond_42546) {
                    int64_t binop_y_42548 = TxRx_42431 * k_42536;
                    int64_t loc_fi_42549 = j_42538 + binop_y_42548;
                    
                    b_loc_ind_42547 = loc_fi_42549;
                } else {
                    b_loc_ind_42547 = -1;
                }
                if (sle64(0, b_loc_ind_42547) && slt64(b_loc_ind_42547,
                                                       b_loc_szz_42436)) {
                    ((__local float *) mem_43954)[b_loc_ind_42547] =
                        B_elem_42542;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44040[Ry_42425 * Rx_42427];
        float mem_param_44012[Ry_42425 * Rx_42427];
        
        for (int32_t i_3 = 0; i_3 < Ry_42425 * Rx_42427; i_3++)
            mem_param_44012[i_3] = mem_param_43955[i_3];
        for (int64_t i_42554 = 0; i_42554 < Tk_42428; i_42554++) {
            int64_t binop_y_42593 = TxRx_42431 * i_42554;
            int64_t ltid_y_42558 = sext_i32_i64(ltid_pre_45071);
            int64_t ltid_x_42556 = sext_i32_i64(ltid_pre_45072);
            int32_t ltid_flat_42557 = local_tid_45067;
            float mem_44015[Ry_42425];
            float mem_44017[Rx_42427];
            int64_t binop_x_42584 = Ry_42425 * ltid_y_42558;
            
            for (int64_t i_42582 = 0; i_42582 < Ry_42425; i_42582++) {
                int64_t binop_x_42585 = i_42582 + binop_x_42584;
                int64_t binop_y_42586 = Tk_42428 * binop_x_42585;
                int64_t a_loc_ind_42587 = i_42554 + binop_y_42586;
                
                for (int64_t i_45088 = 0; i_45088 < 1; i_45088++) {
                    mem_44015[i_42582 + i_45088] = ((__local
                                                     float *) mem_43952)[a_loc_ind_42587 +
                                                                         i_45088];
                }
            }
            
            int64_t binop_y_42595 = Rx_42427 * ltid_x_42556;
            
            for (int64_t i_42591 = 0; i_42591 < Rx_42427; i_42591++) {
                int64_t binop_x_42594 = i_42591 + binop_y_42593;
                int64_t b_loc_ind_42596 = binop_x_42594 + binop_y_42595;
                
                for (int64_t i_45090 = 0; i_45090 < 1; i_45090++) {
                    mem_44017[i_42591 + i_45090] = ((__local
                                                     float *) mem_43954)[b_loc_ind_42596 +
                                                                         i_45090];
                }
            }
            for (int64_t i_45091 = 0; i_45091 < Ry_42425; i_45091++) {
                mem_44025[i_45091] = mem_44015[i_45091];
            }
            for (int64_t i_45092 = 0; i_45092 < Rx_42427; i_45092++) {
                mem_44029[i_45092] = mem_44017[i_45092];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44039[Ry_42425 * Rx_42427];
            int64_t ltid_y_42603 = sext_i32_i64(ltid_pre_45071);
            int64_t ltid_x_42601 = sext_i32_i64(ltid_pre_45072);
            int32_t ltid_flat_42602 = local_tid_45067;
            int64_t binop_y_42644 = Ry_42425 * ltid_y_42603;
            int64_t binop_y_42648 = Rx_42427 * ltid_x_42601;
            
            for (int64_t i_42638 = 0; i_42638 < Ry_42425; i_42638++) {
                int64_t binop_x_42643 = iii_42444 + i_42638;
                int64_t cmpop_x_42645 = binop_x_42643 + binop_y_42644;
                bool binop_x_42646 = slt64(cmpop_x_42645, m_29259);
                
                for (int64_t i_42641 = 0; i_42641 < Rx_42427; i_42641++) {
                    int64_t binop_x_42647 = jjj_42445 + i_42641;
                    int64_t cmpop_x_42649 = binop_x_42647 + binop_y_42648;
                    bool binop_y_42650 = slt64(cmpop_x_42649, N_29258);
                    bool cond_42651 = binop_x_42646 && binop_y_42650;
                    
                    if (cond_42651) {
                        float a_42653 = mem_44025[i_42638];
                        float b_42654 = mem_44029[i_42641];
                        float c_42655 = mem_param_44012[i_42638 * Rx_42427 +
                                                        i_42641];
                        float defunc_1_f_res_42658 = a_42653 * b_42654;
                        float defunc_1_op_res_42662 = c_42655 +
                              defunc_1_f_res_42658;
                        
                        mem_param_44012[i_42638 * Rx_42427 + i_42641] =
                            defunc_1_op_res_42662;
                    }
                }
            }
            for (int64_t i_45095 = 0; i_45095 < Ry_42425; i_45095++) {
                for (int64_t i_45096 = 0; i_45096 < Rx_42427; i_45096++) {
                    mem_44039[i_45095 * Rx_42427 + i_45096] =
                        mem_param_44012[i_45095 * Rx_42427 + i_45096];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45085[Ry_42425 * Rx_42427];
            
            for (int32_t i_4 = 0; i_4 < Ry_42425 * Rx_42427; i_4++)
                mem_param_tmp_45085[i_4] = mem_44039[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42425 * Rx_42427; i_5++)
                mem_param_44012[i_5] = mem_param_tmp_45085[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42425 * Rx_42427; i_6++)
            loop_mem_44040[i_6] = mem_param_44012[i_6];
        
        float mem_param_tmp_45077[Ry_42425 * Rx_42427];
        
        for (int32_t i_7 = 0; i_7 < Ry_42425 * Rx_42427; i_7++)
            mem_param_tmp_45077[i_7] = loop_mem_44040[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42425 * Rx_42427; i_8++)
            mem_param_43955[i_8] = mem_param_tmp_45077[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42425 * Rx_42427; i_9++)
        loop_mem_44041[i_9] = mem_param_43955[i_9];
    for (int64_t i_42672 = 0; i_42672 < Ry_42425; i_42672++) {
        int64_t binop_y_42697 = Ty_42424 * i_42672;
        
        for (int64_t i_42674 = 0; i_42674 < tk_div_tx_42429; i_42674++) {
            int64_t binop_y_42695 = Tx_42426 * i_42674;
            int64_t ltid_x_42676 = sext_i32_i64(ltid_pre_45071);
            int64_t ltid_y_42677 = sext_i32_i64(ltid_pre_45072);
            int32_t ltid_flat_42678 = local_tid_45067;
            int64_t k_42696 = ltid_y_42677 + binop_y_42695;
            int64_t i_42698 = ltid_x_42676 + binop_y_42697;
            int64_t gtid_42699 = iii_42444 + i_42698;
            int64_t A_col_idx_42700 = kk_42671 + k_42696;
            bool binop_x_42701 = slt64(gtid_42699, m_29259);
            bool binop_y_42702 = slt64(A_col_idx_42700, i32_res_29278);
            bool cond_42703 = binop_x_42701 && binop_y_42702;
            float A_elem_42704;
            
            if (cond_42703) {
                float A_elem_42706 = ((__global
                                       float *) defunc_4_map_res_mem_43912)[gtid_42699 *
                                                                            i32_res_29278 +
                                                                            A_col_idx_42700];
                
                A_elem_42704 = A_elem_42706;
            } else {
                A_elem_42704 = 0.0F;
            }
            
            bool cond_42708 = slt64(k_42696, Tk_42428);
            int64_t a_loc_ind_42709;
            
            if (cond_42708) {
                int64_t binop_y_42710 = Tk_42428 * i_42698;
                int64_t loc_fi_42711 = k_42696 + binop_y_42710;
                
                a_loc_ind_42709 = loc_fi_42711;
            } else {
                a_loc_ind_42709 = -1;
            }
            if (sle64(0, a_loc_ind_42709) && slt64(a_loc_ind_42709,
                                                   a_loc_szz_42434)) {
                ((__local float *) mem_43952)[a_loc_ind_42709] = A_elem_42704;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42716 = 0; i_42716 < tk_div_ty_42430; i_42716++) {
        int64_t binop_y_42739 = Ty_42424 * i_42716;
        
        for (int64_t i_42718 = 0; i_42718 < Rx_42427; i_42718++) {
            int64_t binop_y_42741 = Tx_42426 * i_42718;
            int64_t ltid_x_42720 = sext_i32_i64(ltid_pre_45071);
            int64_t ltid_y_42721 = sext_i32_i64(ltid_pre_45072);
            int32_t ltid_flat_42722 = local_tid_45067;
            int64_t k_42740 = ltid_x_42720 + binop_y_42739;
            int64_t j_42742 = ltid_y_42721 + binop_y_42741;
            int64_t gtid_42743 = jjj_42445 + j_42742;
            int64_t B_row_idx_42744 = kk_42671 + k_42740;
            bool binop_x_42745 = slt64(gtid_42743, N_29258);
            bool binop_y_42746 = slt64(B_row_idx_42744, i32_res_29278);
            bool cond_42747 = binop_x_42745 && binop_y_42746;
            float B_elem_42748;
            
            if (cond_42747) {
                float B_elem_42750 = ((__global
                                       float *) mem_43936)[B_row_idx_42744 *
                                                           N_29258 +
                                                           gtid_42743];
                
                B_elem_42748 = B_elem_42750;
            } else {
                B_elem_42748 = 0.0F;
            }
            
            bool cond_42752 = slt64(k_42740, Tk_42428);
            int64_t b_loc_ind_42753;
            
            if (cond_42752) {
                int64_t binop_y_42754 = TxRx_42431 * k_42740;
                int64_t loc_fi_42755 = j_42742 + binop_y_42754;
                
                b_loc_ind_42753 = loc_fi_42755;
            } else {
                b_loc_ind_42753 = -1;
            }
            if (sle64(0, b_loc_ind_42753) && slt64(b_loc_ind_42753,
                                                   b_loc_szz_42436)) {
                ((__local float *) mem_43954)[b_loc_ind_42753] = B_elem_42748;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44107[Ry_42425];
    float mem_44111[Rx_42427];
    float mem_44121[Ry_42425 * Rx_42427];
    float loop_mem_44123[Ry_42425 * Rx_42427];
    float mem_param_44094[Ry_42425 * Rx_42427];
    
    for (int32_t i_10 = 0; i_10 < Ry_42425 * Rx_42427; i_10++)
        mem_param_44094[i_10] = loop_mem_44041[i_10];
    for (int64_t i_42760 = 0; i_42760 < Tk_42428; i_42760++) {
        int64_t cmpop_x_42762 = kk_42671 + i_42760;
        bool cond_42763 = slt64(cmpop_x_42762, i32_res_29278);
        float mem_44454[Ry_42425 * Rx_42427];
        
        if (cond_42763) {
            int64_t binop_y_42801 = TxRx_42431 * i_42760;
            int64_t bytes_44096 = 4 * Ry_42425;
            int64_t bytes_44098 = 4 * Rx_42427;
            int64_t ltid_y_42766 = sext_i32_i64(ltid_pre_45071);
            int64_t ltid_x_42764 = sext_i32_i64(ltid_pre_45072);
            int32_t ltid_flat_42765 = local_tid_45067;
            float mem_44097[Ry_42425];
            float mem_44099[Rx_42427];
            int64_t binop_x_42792 = Ry_42425 * ltid_y_42766;
            
            for (int64_t i_42790 = 0; i_42790 < Ry_42425; i_42790++) {
                int64_t binop_x_42793 = i_42790 + binop_x_42792;
                int64_t binop_y_42794 = Tk_42428 * binop_x_42793;
                int64_t a_loc_ind_42795 = i_42760 + binop_y_42794;
                
                for (int64_t i_45104 = 0; i_45104 < 1; i_45104++) {
                    mem_44097[i_42790 + i_45104] = ((__local
                                                     float *) mem_43952)[a_loc_ind_42795 +
                                                                         i_45104];
                }
            }
            
            int64_t binop_y_42803 = Rx_42427 * ltid_x_42764;
            
            for (int64_t i_42799 = 0; i_42799 < Rx_42427; i_42799++) {
                int64_t binop_x_42802 = i_42799 + binop_y_42801;
                int64_t b_loc_ind_42804 = binop_x_42802 + binop_y_42803;
                
                for (int64_t i_45106 = 0; i_45106 < 1; i_45106++) {
                    mem_44099[i_42799 + i_45106] = ((__local
                                                     float *) mem_43954)[b_loc_ind_42804 +
                                                                         i_45106];
                }
            }
            for (int64_t i_45107 = 0; i_45107 < Ry_42425; i_45107++) {
                mem_44107[i_45107] = mem_44097[i_45107];
            }
            for (int64_t i_45108 = 0; i_45108 < Rx_42427; i_45108++) {
                mem_44111[i_45108] = mem_44099[i_45108];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42811 = sext_i32_i64(ltid_pre_45071);
            int64_t ltid_x_42809 = sext_i32_i64(ltid_pre_45072);
            int32_t ltid_flat_42810 = local_tid_45067;
            int64_t binop_y_42852 = Ry_42425 * ltid_y_42811;
            int64_t binop_y_42856 = Rx_42427 * ltid_x_42809;
            
            for (int64_t i_42846 = 0; i_42846 < Ry_42425; i_42846++) {
                int64_t binop_x_42851 = iii_42444 + i_42846;
                int64_t cmpop_x_42853 = binop_x_42851 + binop_y_42852;
                bool binop_x_42854 = slt64(cmpop_x_42853, m_29259);
                
                for (int64_t i_42849 = 0; i_42849 < Rx_42427; i_42849++) {
                    int64_t binop_x_42855 = jjj_42445 + i_42849;
                    int64_t cmpop_x_42857 = binop_x_42855 + binop_y_42856;
                    bool binop_y_42858 = slt64(cmpop_x_42857, N_29258);
                    bool cond_42859 = binop_x_42854 && binop_y_42858;
                    
                    if (cond_42859) {
                        float a_42861 = mem_44107[i_42846];
                        float b_42862 = mem_44111[i_42849];
                        float c_42863 = mem_param_44094[i_42846 * Rx_42427 +
                                                        i_42849];
                        float defunc_1_f_res_42866 = a_42861 * b_42862;
                        float defunc_1_op_res_42870 = c_42863 +
                              defunc_1_f_res_42866;
                        
                        mem_param_44094[i_42846 * Rx_42427 + i_42849] =
                            defunc_1_op_res_42870;
                    }
                }
            }
            for (int64_t i_45111 = 0; i_45111 < Ry_42425; i_45111++) {
                for (int64_t i_45112 = 0; i_45112 < Rx_42427; i_45112++) {
                    mem_44121[i_45111 * Rx_42427 + i_45112] =
                        mem_param_44094[i_45111 * Rx_42427 + i_45112];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45113 = 0; i_45113 < Ry_42425; i_45113++) {
                for (int64_t i_45114 = 0; i_45114 < Rx_42427; i_45114++) {
                    mem_44454[i_45113 * Rx_42427 + i_45114] =
                        mem_44121[i_45113 * Rx_42427 + i_45114];
                }
            }
        } else {
            for (int64_t i_45115 = 0; i_45115 < Ry_42425; i_45115++) {
                for (int64_t i_45116 = 0; i_45116 < Rx_42427; i_45116++) {
                    mem_44454[i_45115 * Rx_42427 + i_45116] =
                        mem_param_44094[i_45115 * Rx_42427 + i_45116];
                }
            }
        }
        
        float mem_param_tmp_45101[Ry_42425 * Rx_42427];
        
        for (int32_t i_11 = 0; i_11 < Ry_42425 * Rx_42427; i_11++)
            mem_param_tmp_45101[i_11] = mem_44454[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42425 * Rx_42427; i_12++)
            mem_param_44094[i_12] = mem_param_tmp_45101[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42425 * Rx_42427; i_13++)
        loop_mem_44123[i_13] = mem_param_44094[i_13];
    
    int64_t reg_tile_i_45117 = squot64(sext_i32_i64(local_tid_45067), Tx_42426);
    int64_t reg_tile_i_45118 = sext_i32_i64(local_tid_45067) -
            squot64(sext_i32_i64(local_tid_45067), Tx_42426) * Tx_42426;
    int64_t tile_dim_start_45119 = Ry_42425 * (Ty_42424 * gid_y_42442 +
                                               reg_tile_i_45117);
    int64_t tile_dim_start_45120 = Rx_42427 * (Tx_42426 * gid_x_42441 +
                                               reg_tile_i_45118);
    
    for (int64_t nest_i_45121 = 0; nest_i_45121 < Ry_42425; nest_i_45121++) {
        for (int64_t nest_i_45122 = 0; nest_i_45122 < Rx_42427;
             nest_i_45122++) {
            if (slt64(tile_dim_start_45119 + nest_i_45121, m_29259) &&
                slt64(tile_dim_start_45120 + nest_i_45122, N_29258)) {
                ((__global float *) mem_44126)[(tile_dim_start_45119 +
                                                nest_i_45121) * N_29258 +
                                               (tile_dim_start_45120 +
                                                nest_i_45122)] =
                    loop_mem_44123[nest_i_45121 * Rx_42427 + nest_i_45122];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42424
    #undef Ry_42425
    #undef Tx_42426
    #undef Rx_42427
    #undef Tk_42428
    #undef tk_div_tx_42429
    #undef tk_div_ty_42430
    #undef TxRx_42431
    #undef TyRy_42432
    #undef a_loc_szz_42434
    #undef b_loc_szz_42436
}
__kernel void mainzisegmap_intragroup_42877(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44196_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44189_backing_aligned_1,
                                            int64_t m_29259, int32_t n_29263,
                                            float hfrac_29265,
                                            int64_t i32_res_29272,
                                            int32_t k2p2_29274,
                                            int64_t num_whole_tiles_42885,
                                            int64_t residual_input_43006,
                                            unsigned char cond_43007, __global
                                            unsigned char *mem_44178, __global
                                            unsigned char *mem_44181, __global
                                            unsigned char *mem_44209, __global
                                            unsigned char *mem_44211, __global
                                            unsigned char *mem_44213)
{
    #define segmap_group_sizze_40347 (mainzisegmap_group_sizze_40316)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44196_backing_5 = (__local volatile
                                                           char *) mem_44196_backing_aligned_0;
    __local volatile char *restrict mem_44189_backing_0 = (__local volatile
                                                           char *) mem_44189_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45290;
    int32_t local_tid_45291;
    int64_t group_sizze_45294;
    int32_t wave_sizze_45293;
    int32_t group_tid_45292;
    
    global_tid_45290 = get_global_id(0);
    local_tid_45291 = get_local_id(0);
    group_sizze_45294 = get_local_size(0);
    wave_sizze_45293 = LOCKSTEP_WIDTH;
    group_tid_45292 = get_group_id(0);
    
    int32_t gid_flat_42877;
    
    gid_flat_42877 = group_tid_45292;
    
    int32_t ltid_pre_45295;
    
    ltid_pre_45295 = local_tid_45291;
    
    int64_t gid_42876;
    
    gid_42876 = sext_i32_i64(group_tid_45292);
    
    float mem_44185[1];
    int64_t ltid_42886 = sext_i32_i64(ltid_pre_45295);
    int32_t ltid_flat_42887 = local_tid_45291;
    
    mem_44185[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42972 = segmap_group_sizze_40347 * gid_42876;
    __local char *mem_44189;
    
    mem_44189 = (__local char *) mem_44189_backing_0;
    
    float accs_mem_44193[1];
    float mem_param_44186[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44186[i_1] = mem_44185[i_1];
    for (int64_t tile_id_42893 = 0; tile_id_42893 < num_whole_tiles_42885;
         tile_id_42893++) {
        int64_t binop_x_42954 = segmap_group_sizze_40347 * tile_id_42893;
        int64_t ltid_42894 = sext_i32_i64(ltid_pre_45295);
        int32_t ltid_flat_42895 = local_tid_45291;
        int64_t j_42955 = ltid_42894 + binop_x_42954;
        bool cond_42967 = slt64(j_42955, i32_res_29272);
        int32_t pre_42968;
        
        if (cond_42967) {
            int32_t index_primexp_43301 = sext_i64_i32(j_42955);
            
            pre_42968 = index_primexp_43301;
        } else {
            pre_42968 = 0;
        }
        ((__local int32_t *) mem_44189)[ltid_42894] = pre_42968;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44192[1];
        int64_t ltid_42921 = sext_i32_i64(ltid_pre_45295);
        int32_t ltid_flat_42922 = local_tid_45291;
        int64_t gtid_42973 = ltid_42921 + binop_x_42972;
        int32_t defunc_0_f_res_42975;
        int32_t redout_43343 = 0;
        
        for (int32_t i_43369 = 0; i_43369 < n_29263; i_43369++) {
            int64_t i_43344 = sext_i32_i64(i_43369);
            float x_42979 = ((__global float *) mem_44178)[i_43344 * m_29259 +
                                                           gtid_42973];
            bool isnan_res_42980;
            
            isnan_res_42980 = futrts_isnan32(x_42979);
            
            bool cond_42981 = !isnan_res_42980;
            int32_t defunc_0_f_res_42982 = btoi_bool_i32(cond_42981);
            int32_t defunc_1_op_res_42978 = add32(defunc_0_f_res_42982,
                                                  redout_43343);
            int32_t redout_tmp_45298 = defunc_1_op_res_42978;
            
            redout_43343 = redout_tmp_45298;
        }
        defunc_0_f_res_42975 = redout_43343;
        
        float acc_42983 = mem_param_44186[0];
        bool cond_42984 = slt64(gtid_42973, m_29259);
        float acc_42985;
        
        if (cond_42984) {
            float x_42986;
            float redout_43345 = acc_42983;
            
            for (int64_t i_43346 = 0; i_43346 < segmap_group_sizze_40347;
                 i_43346++) {
                int32_t x_42990 = ((__local int32_t *) mem_44189)[i_43346];
                bool cond_42991 = slt32(x_42990, defunc_0_f_res_42975);
                float defunc_0_f_res_42992;
                
                if (cond_42991) {
                    int64_t i_42993 = sext_i32_i64(x_42990);
                    float defunc_0_f_res_t_res_42994 = ((__global
                                                         float *) mem_44181)[i_42993 *
                                                                             m_29259 +
                                                                             gtid_42973];
                    
                    defunc_0_f_res_42992 = defunc_0_f_res_t_res_42994;
                } else {
                    defunc_0_f_res_42992 = 0.0F;
                }
                
                float defunc_0_f_res_42995 = defunc_0_f_res_42992 *
                      defunc_0_f_res_42992;
                float defunc_1_op_res_42989 = defunc_0_f_res_42995 +
                      redout_43345;
                float redout_tmp_45299 = defunc_1_op_res_42989;
                
                redout_43345 = redout_tmp_45299;
            }
            x_42986 = redout_43345;
            acc_42985 = x_42986;
        } else {
            acc_42985 = acc_42983;
        }
        mem_44192[0] = acc_42985;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45296[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45296[i_2] = mem_44192[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44186[i_3] = mem_param_tmp_45296[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44193[i_4] = mem_param_44186[i_4];
    
    __local char *mem_44196;
    
    mem_44196 = (__local char *) mem_44196_backing_5;
    
    float mem_44199[1];
    float mem_44467[1];
    
    if (cond_43007) {
        mem_44467[0] = accs_mem_44193[0];
    } else {
        int64_t binop_x_43017 = segmap_group_sizze_40347 *
                num_whole_tiles_42885;
        int64_t ltid_43008 = sext_i32_i64(ltid_pre_45295);
        int32_t ltid_flat_43009 = local_tid_45291;
        int64_t j_43018 = ltid_43008 + binop_x_43017;
        bool cond_43030 = slt64(j_43018, i32_res_29272);
        int32_t pre_43031;
        
        if (cond_43030) {
            int32_t index_primexp_43302 = sext_i64_i32(j_43018);
            
            pre_43031 = index_primexp_43302;
        } else {
            pre_43031 = 0;
        }
        ((__local int32_t *) mem_44196)[ltid_43008] = pre_43031;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43036 = sext_i32_i64(ltid_pre_45295);
        int32_t ltid_flat_43037 = local_tid_45291;
        int64_t gtid_43044 = binop_x_42972 + ltid_43036;
        int32_t defunc_0_f_res_43046;
        int32_t redout_43347 = 0;
        
        for (int32_t i_43370 = 0; i_43370 < n_29263; i_43370++) {
            int64_t i_43348 = sext_i32_i64(i_43370);
            float x_43050 = ((__global float *) mem_44178)[i_43348 * m_29259 +
                                                           gtid_43044];
            bool isnan_res_43051;
            
            isnan_res_43051 = futrts_isnan32(x_43050);
            
            bool cond_43052 = !isnan_res_43051;
            int32_t defunc_0_f_res_43053 = btoi_bool_i32(cond_43052);
            int32_t defunc_1_op_res_43049 = add32(defunc_0_f_res_43053,
                                                  redout_43347);
            int32_t redout_tmp_45300 = defunc_1_op_res_43049;
            
            redout_43347 = redout_tmp_45300;
        }
        defunc_0_f_res_43046 = redout_43347;
        
        float acc_43054 = accs_mem_44193[0];
        bool cond_43055 = slt64(gtid_43044, m_29259);
        float acc_43056;
        
        if (cond_43055) {
            float x_43057;
            float redout_43349 = acc_43054;
            
            for (int64_t i_43350 = 0; i_43350 < residual_input_43006;
                 i_43350++) {
                int32_t x_43061 = ((__local int32_t *) mem_44196)[i_43350];
                bool cond_43062 = slt32(x_43061, defunc_0_f_res_43046);
                float defunc_0_f_res_43063;
                
                if (cond_43062) {
                    int64_t i_43064 = sext_i32_i64(x_43061);
                    float defunc_0_f_res_t_res_43065 = ((__global
                                                         float *) mem_44181)[i_43064 *
                                                                             m_29259 +
                                                                             gtid_43044];
                    
                    defunc_0_f_res_43063 = defunc_0_f_res_t_res_43065;
                } else {
                    defunc_0_f_res_43063 = 0.0F;
                }
                
                float defunc_0_f_res_43066 = defunc_0_f_res_43063 *
                      defunc_0_f_res_43063;
                float defunc_1_op_res_43060 = defunc_0_f_res_43066 +
                      redout_43349;
                float redout_tmp_45301 = defunc_1_op_res_43060;
                
                redout_43349 = redout_tmp_45301;
            }
            x_43057 = redout_43349;
            acc_43056 = x_43057;
        } else {
            acc_43056 = acc_43054;
        }
        mem_44199[0] = acc_43056;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44467[0] = mem_44199[0];
    }
    
    int32_t mem_44203[1];
    int32_t mem_44205[1];
    float mem_44207[1];
    int64_t ltid_43069 = sext_i32_i64(ltid_pre_45295);
    int32_t ltid_flat_43070 = local_tid_45291;
    int64_t gtid_43080 = binop_x_42972 + ltid_43069;
    bool cond_43082 = slt64(gtid_43080, m_29259);
    int32_t postlude_43083;
    int32_t postlude_43084;
    float postlude_43085;
    
    if (cond_43082) {
        float defunc_0_f_res_43081 = mem_44467[0];
        int32_t defunc_0_f_res_43087;
        int32_t redout_43351 = 0;
        
        for (int32_t i_43371 = 0; i_43371 < n_29263; i_43371++) {
            int64_t i_43352 = sext_i32_i64(i_43371);
            float x_43091 = ((__global float *) mem_44178)[i_43352 * m_29259 +
                                                           gtid_43080];
            bool isnan_res_43092;
            
            isnan_res_43092 = futrts_isnan32(x_43091);
            
            bool cond_43093 = !isnan_res_43092;
            int32_t defunc_0_f_res_43094 = btoi_bool_i32(cond_43093);
            int32_t defunc_1_op_res_43090 = add32(defunc_0_f_res_43094,
                                                  redout_43351);
            int32_t redout_tmp_45302 = defunc_1_op_res_43090;
            
            redout_43351 = redout_tmp_45302;
        }
        defunc_0_f_res_43087 = redout_43351;
        
        int32_t r32_arg_43095 = sub32(defunc_0_f_res_43087, k2p2_29274);
        float i32_res_43096 = sitofp_i32_f32(r32_arg_43095);
        float sqrt_arg_43097 = defunc_0_f_res_43081 / i32_res_43096;
        float sqrt_res_43098;
        
        sqrt_res_43098 = futrts_sqrt32(sqrt_arg_43097);
        
        float i32_res_43099 = sitofp_i32_f32(defunc_0_f_res_43087);
        float t32_arg_43100 = hfrac_29265 * i32_res_43099;
        int32_t f32_res_43101 = fptosi_f32_i32(t32_arg_43100);
        
        postlude_43083 = f32_res_43101;
        postlude_43084 = defunc_0_f_res_43087;
        postlude_43085 = sqrt_res_43098;
    } else {
        postlude_43083 = 0;
        postlude_43084 = 0;
        postlude_43085 = 0.0F;
    }
    mem_44203[0] = postlude_43083;
    mem_44205[0] = postlude_43084;
    mem_44207[0] = postlude_43085;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45291) + segmap_group_sizze_40347 *
              sext_i32_i64(group_tid_45292), m_29259)) {
        ((__global int32_t *) mem_44209)[sext_i32_i64(local_tid_45291) +
                                         segmap_group_sizze_40347 *
                                         sext_i32_i64(group_tid_45292)] =
            mem_44203[0];
    }
    if (slt64(sext_i32_i64(local_tid_45291) + segmap_group_sizze_40347 *
              sext_i32_i64(group_tid_45292), m_29259)) {
        ((__global int32_t *) mem_44211)[sext_i32_i64(local_tid_45291) +
                                         segmap_group_sizze_40347 *
                                         sext_i32_i64(group_tid_45292)] =
            mem_44205[0];
    }
    if (slt64(sext_i32_i64(local_tid_45291) + segmap_group_sizze_40347 *
              sext_i32_i64(group_tid_45292), m_29259)) {
        ((__global float *) mem_44213)[sext_i32_i64(local_tid_45291) +
                                       segmap_group_sizze_40347 *
                                       sext_i32_i64(group_tid_45292)] =
            mem_44207[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_40347
}
__kernel void mainzisegmap_intragroup_43109(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44262_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44255_backing_aligned_1,
                                            int64_t N_29258, int64_t m_29259,
                                            int64_t i32_res_29633,
                                            int64_t num_whole_tiles_43129,
                                            int64_t residual_input_43228,
                                            unsigned char cond_43229, __global
                                            unsigned char *defunc_4_map_res_mem_44174,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44237,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44238,
                                            __global unsigned char *mem_44268)
{
    #define segmap_group_sizze_40584 (mainzisegmap_group_sizze_40565)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44262_backing_5 = (__local volatile
                                                           char *) mem_44262_backing_aligned_0;
    __local volatile char *restrict mem_44255_backing_0 = (__local volatile
                                                           char *) mem_44255_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45476;
    int32_t local_tid_45477;
    int64_t group_sizze_45480;
    int32_t wave_sizze_45479;
    int32_t group_tid_45478;
    
    global_tid_45476 = get_global_id(0);
    local_tid_45477 = get_local_id(0);
    group_sizze_45480 = get_local_size(0);
    wave_sizze_45479 = LOCKSTEP_WIDTH;
    group_tid_45478 = get_group_id(0);
    
    int32_t gid_flat_43109;
    
    gid_flat_43109 = group_tid_45478;
    
    int32_t ltid_pre_45481;
    
    ltid_pre_45481 = local_tid_45477;
    
    int64_t gid_43108;
    
    gid_43108 = sext_i32_i64(group_tid_45478);
    
    int64_t binop_x_43118;
    
    binop_x_43118 = segmap_group_sizze_40584 * gid_43108;
    
    int32_t mem_44246[1];
    int32_t mem_44248[1];
    int64_t ltid_43110 = sext_i32_i64(ltid_pre_45481);
    int32_t ltid_flat_43111 = local_tid_45477;
    int64_t gtid_43119 = ltid_43110 + binop_x_43118;
    bool cond_43120 = slt64(gtid_43119, m_29259);
    int32_t pre_43121;
    int32_t pre_43122;
    
    if (cond_43120) {
        int32_t x_43123 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_43119];
        int32_t x_43124 = ((__global
                            int32_t *) defunc_3_map_res_mem_44237)[gtid_43119];
        
        pre_43121 = x_43123;
        pre_43122 = x_43124;
    } else {
        pre_43121 = 0;
        pre_43122 = 0;
    }
    mem_44246[0] = pre_43121;
    mem_44248[0] = pre_43122;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_44251[1];
    int64_t ltid_43130 = sext_i32_i64(ltid_pre_45481);
    int32_t ltid_flat_43131 = local_tid_45477;
    
    mem_44251[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44255;
    
    mem_44255 = (__local char *) mem_44255_backing_0;
    
    float accs_mem_44259[1];
    float mem_param_44252[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44252[i_1] = mem_44251[i_1];
    for (int64_t tile_id_43137 = 0; tile_id_43137 < num_whole_tiles_43129;
         tile_id_43137++) {
        int64_t binop_x_43186 = segmap_group_sizze_40584 * tile_id_43137;
        int64_t ltid_43138 = sext_i32_i64(ltid_pre_45481);
        int32_t ltid_flat_43139 = local_tid_45477;
        int64_t j_43187 = ltid_43138 + binop_x_43186;
        bool cond_43192 = slt64(j_43187, i32_res_29633);
        int32_t pre_43193;
        
        if (cond_43192) {
            int32_t index_primexp_43303 = sext_i64_i32(j_43187);
            int32_t tile_elem_43194 = index_primexp_43303;
            
            pre_43193 = tile_elem_43194;
        } else {
            pre_43193 = 0;
        }
        ((__local int32_t *) mem_44255)[ltid_43138] = pre_43193;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44258[1];
        int64_t ltid_43158 = sext_i32_i64(ltid_pre_45481);
        int32_t ltid_flat_43159 = local_tid_45477;
        int64_t gtid_43198 = binop_x_43118 + ltid_43158;
        float acc_43201 = mem_param_44252[0];
        bool cond_43202 = slt64(gtid_43198, m_29259);
        float acc_43203;
        
        if (cond_43202) {
            int32_t x_43199 = mem_44246[0];
            int32_t x_43200 = mem_44248[0];
            float x_43204;
            float redout_43353 = acc_43201;
            
            for (int64_t i_43354 = 0; i_43354 < segmap_group_sizze_40584;
                 i_43354++) {
                int32_t x_43208 = ((__local int32_t *) mem_44255)[i_43354];
                bool cond_43209 = slt32(x_43208, x_43200);
                float defunc_0_f_res_43210;
                
                if (cond_43209) {
                    int32_t x_43211 = add32(x_43199, x_43208);
                    int32_t x_43212 = sub32(x_43211, x_43200);
                    int32_t i_43213 = add32(1, x_43212);
                    int64_t i_43214 = sext_i32_i64(i_43213);
                    float defunc_0_f_res_t_res_43215 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_43198 *
                                                                                              N_29258 +
                                                                                              i_43214];
                    
                    defunc_0_f_res_43210 = defunc_0_f_res_t_res_43215;
                } else {
                    defunc_0_f_res_43210 = 0.0F;
                }
                
                float defunc_1_op_res_43207 = defunc_0_f_res_43210 +
                      redout_43353;
                float redout_tmp_45484 = defunc_1_op_res_43207;
                
                redout_43353 = redout_tmp_45484;
            }
            x_43204 = redout_43353;
            acc_43203 = x_43204;
        } else {
            acc_43203 = acc_43201;
        }
        mem_44258[0] = acc_43203;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45482[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45482[i_2] = mem_44258[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44252[i_3] = mem_param_tmp_45482[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44259[i_4] = mem_param_44252[i_4];
    
    __local char *mem_44262;
    
    mem_44262 = (__local char *) mem_44262_backing_5;
    
    float mem_44265[1];
    float mem_44476[1];
    
    if (cond_43229) {
        mem_44476[0] = accs_mem_44259[0];
    } else {
        int64_t binop_x_43239 = segmap_group_sizze_40584 *
                num_whole_tiles_43129;
        int64_t ltid_43230 = sext_i32_i64(ltid_pre_45481);
        int32_t ltid_flat_43231 = local_tid_45477;
        int64_t j_43240 = ltid_43230 + binop_x_43239;
        bool cond_43245 = slt64(j_43240, i32_res_29633);
        int32_t pre_43246;
        
        if (cond_43245) {
            int32_t index_primexp_43304 = sext_i64_i32(j_43240);
            int32_t tile_elem_43247 = index_primexp_43304;
            
            pre_43246 = tile_elem_43247;
        } else {
            pre_43246 = 0;
        }
        ((__local int32_t *) mem_44262)[ltid_43230] = pre_43246;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43251 = sext_i32_i64(ltid_pre_45481);
        int32_t ltid_flat_43252 = local_tid_45477;
        int64_t gtid_43259 = binop_x_43118 + ltid_43251;
        float acc_43262 = accs_mem_44259[0];
        bool cond_43263 = slt64(gtid_43259, m_29259);
        float acc_43264;
        
        if (cond_43263) {
            int32_t x_43260 = mem_44246[0];
            int32_t x_43261 = mem_44248[0];
            float x_43265;
            float redout_43355 = acc_43262;
            
            for (int64_t i_43356 = 0; i_43356 < residual_input_43228;
                 i_43356++) {
                int32_t x_43269 = ((__local int32_t *) mem_44262)[i_43356];
                bool cond_43270 = slt32(x_43269, x_43261);
                float defunc_0_f_res_43271;
                
                if (cond_43270) {
                    int32_t x_43272 = add32(x_43260, x_43269);
                    int32_t x_43273 = sub32(x_43272, x_43261);
                    int32_t i_43274 = add32(1, x_43273);
                    int64_t i_43275 = sext_i32_i64(i_43274);
                    float defunc_0_f_res_t_res_43276 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_43259 *
                                                                                              N_29258 +
                                                                                              i_43275];
                    
                    defunc_0_f_res_43271 = defunc_0_f_res_t_res_43276;
                } else {
                    defunc_0_f_res_43271 = 0.0F;
                }
                
                float defunc_1_op_res_43268 = defunc_0_f_res_43271 +
                      redout_43355;
                float redout_tmp_45485 = defunc_1_op_res_43268;
                
                redout_43355 = redout_tmp_45485;
            }
            x_43265 = redout_43355;
            acc_43264 = x_43265;
        } else {
            acc_43264 = acc_43262;
        }
        mem_44265[0] = acc_43264;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44476[0] = mem_44265[0];
    }
    if (slt64(sext_i32_i64(local_tid_45477) + segmap_group_sizze_40584 *
              sext_i32_i64(group_tid_45478), m_29259)) {
        ((__global float *) mem_44268)[sext_i32_i64(local_tid_45477) +
                                       segmap_group_sizze_40584 *
                                       sext_i32_i64(group_tid_45478)] =
            mem_44476[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_40584
}
__kernel void mainzisegred_large_38559(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44744_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44742_backing_aligned_1,
                                       int64_t N_29258, int64_t N_29260,
                                       int64_t i32_res_29272,
                                       int64_t i32_res_29278,
                                       int64_t num_groups_38698, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43528,
                                       __global unsigned char *mem_43533,
                                       int64_t groups_per_segment_44728,
                                       int64_t elements_per_thread_44729,
                                       int64_t virt_num_groups_44730,
                                       int64_t threads_per_segment_44732,
                                       __global
                                       unsigned char *group_res_arr_mem_44733,
                                       __global
                                       unsigned char *mainzicounter_mem_44735)
{
    #define segred_group_sizze_38697 (mainzisegred_group_sizze_38553)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44744_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44744_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44742_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44742_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44737;
    int32_t local_tid_44738;
    int64_t group_sizze_44741;
    int32_t wave_sizze_44740;
    int32_t group_tid_44739;
    
    global_tid_44737 = get_global_id(0);
    local_tid_44738 = get_local_id(0);
    group_sizze_44741 = get_local_size(0);
    wave_sizze_44740 = LOCKSTEP_WIDTH;
    group_tid_44739 = get_group_id(0);
    
    int32_t phys_tid_38559;
    
    phys_tid_38559 = global_tid_44737;
    
    __local char *red_arr_mem_44742;
    
    red_arr_mem_44742 = (__local char *) red_arr_mem_44742_backing_0;
    
    __local char *sync_arr_mem_44744;
    
    sync_arr_mem_44744 = (__local char *) sync_arr_mem_44744_backing_1;
    
    int32_t phys_group_id_44746;
    
    phys_group_id_44746 = get_group_id(0);
    for (int32_t i_44747 = 0; i_44747 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44730) - phys_group_id_44746,
                   sext_i64_i32(num_groups_38698)); i_44747++) {
        int32_t virt_group_id_44748 = phys_group_id_44746 + i_44747 *
                sext_i64_i32(num_groups_38698);
        int32_t flat_segment_id_44749 = squot32(virt_group_id_44748,
                                                sext_i64_i32(groups_per_segment_44728));
        int64_t global_tid_44750 = srem64(sext_i32_i64(virt_group_id_44748) *
                                          segred_group_sizze_38697 +
                                          sext_i32_i64(local_tid_44738),
                                          segred_group_sizze_38697 *
                                          groups_per_segment_44728);
        int64_t gtid_38546 = squot64(sext_i32_i64(flat_segment_id_44749),
                                     i32_res_29278 * i32_res_29278);
        int64_t gtid_38547 = squot64(sext_i32_i64(flat_segment_id_44749) -
                                     squot64(sext_i32_i64(flat_segment_id_44749),
                                             i32_res_29278 * i32_res_29278) *
                                     (i32_res_29278 * i32_res_29278),
                                     i32_res_29278);
        int64_t gtid_38548 = sext_i32_i64(flat_segment_id_44749) -
                squot64(sext_i32_i64(flat_segment_id_44749), i32_res_29278 *
                        i32_res_29278) * (i32_res_29278 * i32_res_29278) -
                squot64(sext_i32_i64(flat_segment_id_44749) -
                        squot64(sext_i32_i64(flat_segment_id_44749),
                                i32_res_29278 * i32_res_29278) *
                        (i32_res_29278 * i32_res_29278), i32_res_29278) *
                i32_res_29278;
        int64_t gtid_38558;
        float x_acc_44751;
        int64_t chunk_sizze_44752;
        
        chunk_sizze_44752 = smin64(elements_per_thread_44729,
                                   sdiv_up64(i32_res_29272 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44750)),
                                             threads_per_segment_44732));
        
        float x_38701;
        float x_38702;
        
        // neutral-initialise the accumulators
        {
            x_acc_44751 = 0.0F;
        }
        for (int64_t i_44756 = 0; i_44756 < chunk_sizze_44752; i_44756++) {
            gtid_38558 = sext_i32_i64(sext_i64_i32(global_tid_44750)) +
                threads_per_segment_44732 * i_44756;
            // apply map function
            {
                float x_38707 = ((__global
                                  float *) images_mem_43378)[gtid_38546 *
                                                             N_29260 +
                                                             gtid_38558];
                float x_38708 = ((__global
                                  float *) binop_p_mem_43387)[gtid_38547 *
                                                              N_29258 +
                                                              gtid_38558];
                float x_38709 = ((__global float *) mem_43528)[gtid_38548 *
                                                               N_29258 +
                                                               gtid_38558];
                float x_38710 = x_38708 * x_38709;
                bool isnan_res_38711;
                
                isnan_res_38711 = futrts_isnan32(x_38707);
                
                float y_38712;
                
                if (isnan_res_38711) {
                    y_38712 = 0.0F;
                } else {
                    y_38712 = 1.0F;
                }
                
                float defunc_2_f_res_38713 = x_38710 * y_38712;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38701 = x_acc_44751;
                }
                // load new values
                {
                    x_38702 = defunc_2_f_res_38713;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38703 = x_38701 + x_38702;
                    
                    // store in accumulator
                    {
                        x_acc_44751 = defunc_1_op_res_38703;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38701 = x_acc_44751;
            ((__local
              float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                x_38701;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44757;
        int32_t skip_waves_44758;
        
        skip_waves_44758 = 1;
        
        float x_44753;
        float x_44754;
        
        offset_44757 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44738,
                      sext_i64_i32(segred_group_sizze_38697))) {
                x_44753 = ((__local
                            float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738 +
                                                        offset_44757)];
            }
        }
        offset_44757 = 1;
        while (slt32(offset_44757, wave_sizze_44740)) {
            if (slt32(local_tid_44738 + offset_44757,
                      sext_i64_i32(segred_group_sizze_38697)) &&
                ((local_tid_44738 - squot32(local_tid_44738, wave_sizze_44740) *
                  wave_sizze_44740) & (2 * offset_44757 - 1)) == 0) {
                // read array element
                {
                    x_44754 = ((volatile __local
                                float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738 +
                                                            offset_44757)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44755 = x_44753 + x_44754;
                    
                    x_44753 = defunc_1_op_res_44755;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                        x_44753;
                }
            }
            offset_44757 *= 2;
        }
        while (slt32(skip_waves_44758,
                     squot32(sext_i64_i32(segred_group_sizze_38697) +
                             wave_sizze_44740 - 1, wave_sizze_44740))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44757 = skip_waves_44758 * wave_sizze_44740;
            if (slt32(local_tid_44738 + offset_44757,
                      sext_i64_i32(segred_group_sizze_38697)) &&
                ((local_tid_44738 - squot32(local_tid_44738, wave_sizze_44740) *
                  wave_sizze_44740) == 0 && (squot32(local_tid_44738,
                                                     wave_sizze_44740) & (2 *
                                                                          skip_waves_44758 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44754 = ((__local
                                float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738 +
                                                            offset_44757)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44755 = x_44753 + x_44754;
                    
                    x_44753 = defunc_1_op_res_44755;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                        x_44753;
                }
            }
            skip_waves_44758 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44738) == 0) {
                x_acc_44751 = x_44753;
            }
        }
        if (groups_per_segment_44728 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44738 == 0) {
                    ((__global float *) mem_43533)[gtid_38546 * (i32_res_29278 *
                                                                 i32_res_29278) +
                                                   gtid_38547 * i32_res_29278 +
                                                   gtid_38548] = x_acc_44751;
                }
            }
        } else {
            int32_t old_counter_44759;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44738 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44733)[sext_i32_i64(virt_group_id_44748) *
                                                        segred_group_sizze_38697] =
                        x_acc_44751;
                    mem_fence_global();
                    old_counter_44759 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44735)[sext_i32_i64(srem32(flat_segment_id_44749,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44744)[0] =
                        old_counter_44759 == groups_per_segment_44728 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44760;
            
            is_last_group_44760 = ((__local bool *) sync_arr_mem_44744)[0];
            if (is_last_group_44760) {
                if (local_tid_44738 == 0) {
                    old_counter_44759 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44735)[sext_i32_i64(srem32(flat_segment_id_44749,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44728));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44761 =
                            sdiv_up64(groups_per_segment_44728,
                                      segred_group_sizze_38697);
                    
                    x_38701 = 0.0F;
                    for (int64_t i_44762 = 0; i_44762 < read_per_thread_44761;
                         i_44762++) {
                        int64_t group_res_id_44763 =
                                sext_i32_i64(local_tid_44738) *
                                read_per_thread_44761 + i_44762;
                        int64_t index_of_group_res_44764 =
                                sext_i32_i64(flat_segment_id_44749) *
                                groups_per_segment_44728 + group_res_id_44763;
                        
                        if (slt64(group_res_id_44763,
                                  groups_per_segment_44728)) {
                            x_38702 = ((__global
                                        float *) group_res_arr_mem_44733)[index_of_group_res_44764 *
                                                                          segred_group_sizze_38697];
                            
                            float defunc_1_op_res_38703;
                            
                            defunc_1_op_res_38703 = x_38701 + x_38702;
                            x_38701 = defunc_1_op_res_38703;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                    x_38701;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44765;
                    int32_t skip_waves_44766;
                    
                    skip_waves_44766 = 1;
                    
                    float x_44753;
                    float x_44754;
                    
                    offset_44765 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44738,
                                  sext_i64_i32(segred_group_sizze_38697))) {
                            x_44753 = ((__local
                                        float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738 +
                                                                    offset_44765)];
                        }
                    }
                    offset_44765 = 1;
                    while (slt32(offset_44765, wave_sizze_44740)) {
                        if (slt32(local_tid_44738 + offset_44765,
                                  sext_i64_i32(segred_group_sizze_38697)) &&
                            ((local_tid_44738 - squot32(local_tid_44738,
                                                        wave_sizze_44740) *
                              wave_sizze_44740) & (2 * offset_44765 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44754 = ((volatile __local
                                            float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738 +
                                                                        offset_44765)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44755 = x_44753 + x_44754;
                                
                                x_44753 = defunc_1_op_res_44755;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                                    x_44753;
                            }
                        }
                        offset_44765 *= 2;
                    }
                    while (slt32(skip_waves_44766,
                                 squot32(sext_i64_i32(segred_group_sizze_38697) +
                                         wave_sizze_44740 - 1,
                                         wave_sizze_44740))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44765 = skip_waves_44766 * wave_sizze_44740;
                        if (slt32(local_tid_44738 + offset_44765,
                                  sext_i64_i32(segred_group_sizze_38697)) &&
                            ((local_tid_44738 - squot32(local_tid_44738,
                                                        wave_sizze_44740) *
                              wave_sizze_44740) == 0 &&
                             (squot32(local_tid_44738, wave_sizze_44740) & (2 *
                                                                            skip_waves_44766 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44754 = ((__local
                                            float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738 +
                                                                        offset_44765)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44755 = x_44753 + x_44754;
                                
                                x_44753 = defunc_1_op_res_44755;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                                    x_44753;
                            }
                        }
                        skip_waves_44766 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44738 == 0) {
                            ((__global float *) mem_43533)[gtid_38546 *
                                                           (i32_res_29278 *
                                                            i32_res_29278) +
                                                           gtid_38547 *
                                                           i32_res_29278 +
                                                           gtid_38548] =
                                x_44753;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38697
}
__kernel void mainzisegred_large_39606(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44940_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44938_backing_aligned_1,
                                       int64_t N_29258, int64_t N_29260,
                                       int64_t i32_res_29272,
                                       int64_t i32_res_29278,
                                       int64_t num_groups_39659, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43840,
                                       int64_t groups_per_segment_44924,
                                       int64_t elements_per_thread_44925,
                                       int64_t virt_num_groups_44926,
                                       int64_t threads_per_segment_44928,
                                       __global
                                       unsigned char *group_res_arr_mem_44929,
                                       __global
                                       unsigned char *mainzicounter_mem_44931)
{
    #define segred_group_sizze_39658 (mainzisegred_group_sizze_39600)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44940_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44940_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44938_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44938_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44933;
    int32_t local_tid_44934;
    int64_t group_sizze_44937;
    int32_t wave_sizze_44936;
    int32_t group_tid_44935;
    
    global_tid_44933 = get_global_id(0);
    local_tid_44934 = get_local_id(0);
    group_sizze_44937 = get_local_size(0);
    wave_sizze_44936 = LOCKSTEP_WIDTH;
    group_tid_44935 = get_group_id(0);
    
    int32_t phys_tid_39606;
    
    phys_tid_39606 = global_tid_44933;
    
    __local char *red_arr_mem_44938;
    
    red_arr_mem_44938 = (__local char *) red_arr_mem_44938_backing_0;
    
    __local char *sync_arr_mem_44940;
    
    sync_arr_mem_44940 = (__local char *) sync_arr_mem_44940_backing_1;
    
    int32_t phys_group_id_44942;
    
    phys_group_id_44942 = get_group_id(0);
    for (int32_t i_44943 = 0; i_44943 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44926) - phys_group_id_44942,
                   sext_i64_i32(num_groups_39659)); i_44943++) {
        int32_t virt_group_id_44944 = phys_group_id_44942 + i_44943 *
                sext_i64_i32(num_groups_39659);
        int32_t flat_segment_id_44945 = squot32(virt_group_id_44944,
                                                sext_i64_i32(groups_per_segment_44924));
        int64_t global_tid_44946 = srem64(sext_i32_i64(virt_group_id_44944) *
                                          segred_group_sizze_39658 +
                                          sext_i32_i64(local_tid_44934),
                                          segred_group_sizze_39658 *
                                          groups_per_segment_44924);
        int64_t gtid_39595 = squot64(sext_i32_i64(flat_segment_id_44945),
                                     i32_res_29278);
        int64_t gtid_39596 = sext_i32_i64(flat_segment_id_44945) -
                squot64(sext_i32_i64(flat_segment_id_44945), i32_res_29278) *
                i32_res_29278;
        int64_t gtid_39605;
        float x_acc_44947;
        int64_t chunk_sizze_44948;
        
        chunk_sizze_44948 = smin64(elements_per_thread_44925,
                                   sdiv_up64(i32_res_29272 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44946)),
                                             threads_per_segment_44928));
        
        float x_39662;
        float x_39663;
        
        // neutral-initialise the accumulators
        {
            x_acc_44947 = 0.0F;
        }
        for (int64_t i_44952 = 0; i_44952 < chunk_sizze_44948; i_44952++) {
            gtid_39605 = sext_i32_i64(sext_i64_i32(global_tid_44946)) +
                threads_per_segment_44928 * i_44952;
            // apply map function
            {
                float x_39668 = ((__global
                                  float *) images_mem_43378)[gtid_39595 *
                                                             N_29260 +
                                                             gtid_39605];
                bool isnan_res_39669;
                
                isnan_res_39669 = futrts_isnan32(x_39668);
                
                float defunc_1_f_res_39670;
                
                if (isnan_res_39669) {
                    defunc_1_f_res_39670 = 0.0F;
                } else {
                    float x_39667 = ((__global
                                      float *) binop_p_mem_43387)[gtid_39596 *
                                                                  N_29258 +
                                                                  gtid_39605];
                    float defunc_1_f_res_f_res_39671 = x_39667 * x_39668;
                    
                    defunc_1_f_res_39670 = defunc_1_f_res_f_res_39671;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_39662 = x_acc_44947;
                }
                // load new values
                {
                    x_39663 = defunc_1_f_res_39670;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39664 = x_39662 + x_39663;
                    
                    // store in accumulator
                    {
                        x_acc_44947 = defunc_1_op_res_39664;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39662 = x_acc_44947;
            ((__local
              float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934)] =
                x_39662;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44953;
        int32_t skip_waves_44954;
        
        skip_waves_44954 = 1;
        
        float x_44949;
        float x_44950;
        
        offset_44953 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44934,
                      sext_i64_i32(segred_group_sizze_39658))) {
                x_44949 = ((__local
                            float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934 +
                                                        offset_44953)];
            }
        }
        offset_44953 = 1;
        while (slt32(offset_44953, wave_sizze_44936)) {
            if (slt32(local_tid_44934 + offset_44953,
                      sext_i64_i32(segred_group_sizze_39658)) &&
                ((local_tid_44934 - squot32(local_tid_44934, wave_sizze_44936) *
                  wave_sizze_44936) & (2 * offset_44953 - 1)) == 0) {
                // read array element
                {
                    x_44950 = ((volatile __local
                                float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934 +
                                                            offset_44953)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44951 = x_44949 + x_44950;
                    
                    x_44949 = defunc_1_op_res_44951;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934)] =
                        x_44949;
                }
            }
            offset_44953 *= 2;
        }
        while (slt32(skip_waves_44954,
                     squot32(sext_i64_i32(segred_group_sizze_39658) +
                             wave_sizze_44936 - 1, wave_sizze_44936))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44953 = skip_waves_44954 * wave_sizze_44936;
            if (slt32(local_tid_44934 + offset_44953,
                      sext_i64_i32(segred_group_sizze_39658)) &&
                ((local_tid_44934 - squot32(local_tid_44934, wave_sizze_44936) *
                  wave_sizze_44936) == 0 && (squot32(local_tid_44934,
                                                     wave_sizze_44936) & (2 *
                                                                          skip_waves_44954 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44950 = ((__local
                                float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934 +
                                                            offset_44953)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44951 = x_44949 + x_44950;
                    
                    x_44949 = defunc_1_op_res_44951;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934)] =
                        x_44949;
                }
            }
            skip_waves_44954 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44934) == 0) {
                x_acc_44947 = x_44949;
            }
        }
        if (groups_per_segment_44924 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44934 == 0) {
                    ((__global float *) mem_43840)[gtid_39595 * i32_res_29278 +
                                                   gtid_39596] = x_acc_44947;
                }
            }
        } else {
            int32_t old_counter_44955;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44934 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44929)[sext_i32_i64(virt_group_id_44944) *
                                                        segred_group_sizze_39658] =
                        x_acc_44947;
                    mem_fence_global();
                    old_counter_44955 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44931)[sext_i32_i64(srem32(flat_segment_id_44945,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44940)[0] =
                        old_counter_44955 == groups_per_segment_44924 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44956;
            
            is_last_group_44956 = ((__local bool *) sync_arr_mem_44940)[0];
            if (is_last_group_44956) {
                if (local_tid_44934 == 0) {
                    old_counter_44955 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44931)[sext_i32_i64(srem32(flat_segment_id_44945,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44924));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44957 =
                            sdiv_up64(groups_per_segment_44924,
                                      segred_group_sizze_39658);
                    
                    x_39662 = 0.0F;
                    for (int64_t i_44958 = 0; i_44958 < read_per_thread_44957;
                         i_44958++) {
                        int64_t group_res_id_44959 =
                                sext_i32_i64(local_tid_44934) *
                                read_per_thread_44957 + i_44958;
                        int64_t index_of_group_res_44960 =
                                sext_i32_i64(flat_segment_id_44945) *
                                groups_per_segment_44924 + group_res_id_44959;
                        
                        if (slt64(group_res_id_44959,
                                  groups_per_segment_44924)) {
                            x_39663 = ((__global
                                        float *) group_res_arr_mem_44929)[index_of_group_res_44960 *
                                                                          segred_group_sizze_39658];
                            
                            float defunc_1_op_res_39664;
                            
                            defunc_1_op_res_39664 = x_39662 + x_39663;
                            x_39662 = defunc_1_op_res_39664;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934)] =
                    x_39662;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44961;
                    int32_t skip_waves_44962;
                    
                    skip_waves_44962 = 1;
                    
                    float x_44949;
                    float x_44950;
                    
                    offset_44961 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44934,
                                  sext_i64_i32(segred_group_sizze_39658))) {
                            x_44949 = ((__local
                                        float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934 +
                                                                    offset_44961)];
                        }
                    }
                    offset_44961 = 1;
                    while (slt32(offset_44961, wave_sizze_44936)) {
                        if (slt32(local_tid_44934 + offset_44961,
                                  sext_i64_i32(segred_group_sizze_39658)) &&
                            ((local_tid_44934 - squot32(local_tid_44934,
                                                        wave_sizze_44936) *
                              wave_sizze_44936) & (2 * offset_44961 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44950 = ((volatile __local
                                            float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934 +
                                                                        offset_44961)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44951 = x_44949 + x_44950;
                                
                                x_44949 = defunc_1_op_res_44951;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934)] =
                                    x_44949;
                            }
                        }
                        offset_44961 *= 2;
                    }
                    while (slt32(skip_waves_44962,
                                 squot32(sext_i64_i32(segred_group_sizze_39658) +
                                         wave_sizze_44936 - 1,
                                         wave_sizze_44936))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44961 = skip_waves_44962 * wave_sizze_44936;
                        if (slt32(local_tid_44934 + offset_44961,
                                  sext_i64_i32(segred_group_sizze_39658)) &&
                            ((local_tid_44934 - squot32(local_tid_44934,
                                                        wave_sizze_44936) *
                              wave_sizze_44936) == 0 &&
                             (squot32(local_tid_44934, wave_sizze_44936) & (2 *
                                                                            skip_waves_44962 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44950 = ((__local
                                            float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934 +
                                                                        offset_44961)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44951 = x_44949 + x_44950;
                                
                                x_44949 = defunc_1_op_res_44951;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44938)[sext_i32_i64(local_tid_44934)] =
                                    x_44949;
                            }
                        }
                        skip_waves_44962 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44934 == 0) {
                            ((__global float *) mem_43840)[gtid_39595 *
                                                           i32_res_29278 +
                                                           gtid_39596] =
                                x_44949;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39658
}
__kernel void mainzisegred_large_39743(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45028_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45026_backing_aligned_1,
                                       int64_t i32_res_29278,
                                       int64_t num_groups_39792, __global
                                       unsigned char *defunc_3_map_res_mem_43625,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43846,
                                       __global unsigned char *mem_43906,
                                       int64_t groups_per_segment_45012,
                                       int64_t elements_per_thread_45013,
                                       int64_t virt_num_groups_45014,
                                       int64_t threads_per_segment_45016,
                                       __global
                                       unsigned char *group_res_arr_mem_45017,
                                       __global
                                       unsigned char *mainzicounter_mem_45019)
{
    #define segred_group_sizze_39791 (mainzisegred_group_sizze_39737)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45028_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45028_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45026_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45026_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45021;
    int32_t local_tid_45022;
    int64_t group_sizze_45025;
    int32_t wave_sizze_45024;
    int32_t group_tid_45023;
    
    global_tid_45021 = get_global_id(0);
    local_tid_45022 = get_local_id(0);
    group_sizze_45025 = get_local_size(0);
    wave_sizze_45024 = LOCKSTEP_WIDTH;
    group_tid_45023 = get_group_id(0);
    
    int32_t phys_tid_39743;
    
    phys_tid_39743 = global_tid_45021;
    
    __local char *red_arr_mem_45026;
    
    red_arr_mem_45026 = (__local char *) red_arr_mem_45026_backing_0;
    
    __local char *sync_arr_mem_45028;
    
    sync_arr_mem_45028 = (__local char *) sync_arr_mem_45028_backing_1;
    
    int32_t phys_group_id_45030;
    
    phys_group_id_45030 = get_group_id(0);
    for (int32_t i_45031 = 0; i_45031 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45014) - phys_group_id_45030,
                   sext_i64_i32(num_groups_39792)); i_45031++) {
        int32_t virt_group_id_45032 = phys_group_id_45030 + i_45031 *
                sext_i64_i32(num_groups_39792);
        int32_t flat_segment_id_45033 = squot32(virt_group_id_45032,
                                                sext_i64_i32(groups_per_segment_45012));
        int64_t global_tid_45034 = srem64(sext_i32_i64(virt_group_id_45032) *
                                          segred_group_sizze_39791 +
                                          sext_i32_i64(local_tid_45022),
                                          segred_group_sizze_39791 *
                                          groups_per_segment_45012);
        int64_t gtid_39732 = squot64(sext_i32_i64(flat_segment_id_45033),
                                     i32_res_29278);
        int64_t gtid_39733 = sext_i32_i64(flat_segment_id_45033) -
                squot64(sext_i32_i64(flat_segment_id_45033), i32_res_29278) *
                i32_res_29278;
        int64_t gtid_39742;
        float x_acc_45035;
        int64_t chunk_sizze_45036;
        
        chunk_sizze_45036 = smin64(elements_per_thread_45013,
                                   sdiv_up64(i32_res_29278 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45034)),
                                             threads_per_segment_45016));
        
        float x_39795;
        float x_39796;
        
        // neutral-initialise the accumulators
        {
            x_acc_45035 = 0.0F;
        }
        for (int64_t i_45040 = 0; i_45040 < chunk_sizze_45036; i_45040++) {
            gtid_39742 = sext_i32_i64(sext_i64_i32(global_tid_45034)) +
                threads_per_segment_45016 * i_45040;
            // apply map function
            {
                float x_39801 = ((__global
                                  float *) defunc_3_map_res_mem_43846)[gtid_39732 *
                                                                       i32_res_29278 +
                                                                       gtid_39742];
                float x_39802 = ((__global
                                  float *) defunc_3_map_res_mem_43625)[gtid_39732 *
                                                                       (i32_res_29278 *
                                                                        i32_res_29278) +
                                                                       gtid_39733 *
                                                                       i32_res_29278 +
                                                                       gtid_39742];
                float defunc_1_f_res_39803 = x_39801 * x_39802;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39795 = x_acc_45035;
                }
                // load new values
                {
                    x_39796 = defunc_1_f_res_39803;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39797 = x_39795 + x_39796;
                    
                    // store in accumulator
                    {
                        x_acc_45035 = defunc_1_op_res_39797;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39795 = x_acc_45035;
            ((__local
              float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022)] =
                x_39795;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45041;
        int32_t skip_waves_45042;
        
        skip_waves_45042 = 1;
        
        float x_45037;
        float x_45038;
        
        offset_45041 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45022,
                      sext_i64_i32(segred_group_sizze_39791))) {
                x_45037 = ((__local
                            float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022 +
                                                        offset_45041)];
            }
        }
        offset_45041 = 1;
        while (slt32(offset_45041, wave_sizze_45024)) {
            if (slt32(local_tid_45022 + offset_45041,
                      sext_i64_i32(segred_group_sizze_39791)) &&
                ((local_tid_45022 - squot32(local_tid_45022, wave_sizze_45024) *
                  wave_sizze_45024) & (2 * offset_45041 - 1)) == 0) {
                // read array element
                {
                    x_45038 = ((volatile __local
                                float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022 +
                                                            offset_45041)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45039 = x_45037 + x_45038;
                    
                    x_45037 = defunc_1_op_res_45039;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022)] =
                        x_45037;
                }
            }
            offset_45041 *= 2;
        }
        while (slt32(skip_waves_45042,
                     squot32(sext_i64_i32(segred_group_sizze_39791) +
                             wave_sizze_45024 - 1, wave_sizze_45024))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45041 = skip_waves_45042 * wave_sizze_45024;
            if (slt32(local_tid_45022 + offset_45041,
                      sext_i64_i32(segred_group_sizze_39791)) &&
                ((local_tid_45022 - squot32(local_tid_45022, wave_sizze_45024) *
                  wave_sizze_45024) == 0 && (squot32(local_tid_45022,
                                                     wave_sizze_45024) & (2 *
                                                                          skip_waves_45042 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45038 = ((__local
                                float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022 +
                                                            offset_45041)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45039 = x_45037 + x_45038;
                    
                    x_45037 = defunc_1_op_res_45039;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022)] =
                        x_45037;
                }
            }
            skip_waves_45042 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45022) == 0) {
                x_acc_45035 = x_45037;
            }
        }
        if (groups_per_segment_45012 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45022 == 0) {
                    ((__global float *) mem_43906)[gtid_39732 * i32_res_29278 +
                                                   gtid_39733] = x_acc_45035;
                }
            }
        } else {
            int32_t old_counter_45043;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45022 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45017)[sext_i32_i64(virt_group_id_45032) *
                                                        segred_group_sizze_39791] =
                        x_acc_45035;
                    mem_fence_global();
                    old_counter_45043 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45019)[sext_i32_i64(srem32(flat_segment_id_45033,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45028)[0] =
                        old_counter_45043 == groups_per_segment_45012 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45044;
            
            is_last_group_45044 = ((__local bool *) sync_arr_mem_45028)[0];
            if (is_last_group_45044) {
                if (local_tid_45022 == 0) {
                    old_counter_45043 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45019)[sext_i32_i64(srem32(flat_segment_id_45033,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45012));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45045 =
                            sdiv_up64(groups_per_segment_45012,
                                      segred_group_sizze_39791);
                    
                    x_39795 = 0.0F;
                    for (int64_t i_45046 = 0; i_45046 < read_per_thread_45045;
                         i_45046++) {
                        int64_t group_res_id_45047 =
                                sext_i32_i64(local_tid_45022) *
                                read_per_thread_45045 + i_45046;
                        int64_t index_of_group_res_45048 =
                                sext_i32_i64(flat_segment_id_45033) *
                                groups_per_segment_45012 + group_res_id_45047;
                        
                        if (slt64(group_res_id_45047,
                                  groups_per_segment_45012)) {
                            x_39796 = ((__global
                                        float *) group_res_arr_mem_45017)[index_of_group_res_45048 *
                                                                          segred_group_sizze_39791];
                            
                            float defunc_1_op_res_39797;
                            
                            defunc_1_op_res_39797 = x_39795 + x_39796;
                            x_39795 = defunc_1_op_res_39797;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022)] =
                    x_39795;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45049;
                    int32_t skip_waves_45050;
                    
                    skip_waves_45050 = 1;
                    
                    float x_45037;
                    float x_45038;
                    
                    offset_45049 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45022,
                                  sext_i64_i32(segred_group_sizze_39791))) {
                            x_45037 = ((__local
                                        float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022 +
                                                                    offset_45049)];
                        }
                    }
                    offset_45049 = 1;
                    while (slt32(offset_45049, wave_sizze_45024)) {
                        if (slt32(local_tid_45022 + offset_45049,
                                  sext_i64_i32(segred_group_sizze_39791)) &&
                            ((local_tid_45022 - squot32(local_tid_45022,
                                                        wave_sizze_45024) *
                              wave_sizze_45024) & (2 * offset_45049 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45038 = ((volatile __local
                                            float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022 +
                                                                        offset_45049)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45039 = x_45037 + x_45038;
                                
                                x_45037 = defunc_1_op_res_45039;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022)] =
                                    x_45037;
                            }
                        }
                        offset_45049 *= 2;
                    }
                    while (slt32(skip_waves_45050,
                                 squot32(sext_i64_i32(segred_group_sizze_39791) +
                                         wave_sizze_45024 - 1,
                                         wave_sizze_45024))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45049 = skip_waves_45050 * wave_sizze_45024;
                        if (slt32(local_tid_45022 + offset_45049,
                                  sext_i64_i32(segred_group_sizze_39791)) &&
                            ((local_tid_45022 - squot32(local_tid_45022,
                                                        wave_sizze_45024) *
                              wave_sizze_45024) == 0 &&
                             (squot32(local_tid_45022, wave_sizze_45024) & (2 *
                                                                            skip_waves_45050 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45038 = ((__local
                                            float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022 +
                                                                        offset_45049)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45039 = x_45037 + x_45038;
                                
                                x_45037 = defunc_1_op_res_45039;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45026)[sext_i32_i64(local_tid_45022)] =
                                    x_45037;
                            }
                        }
                        skip_waves_45050 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45022 == 0) {
                            ((__global float *) mem_43906)[gtid_39732 *
                                                           i32_res_29278 +
                                                           gtid_39733] =
                                x_45037;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39791
}
__kernel void mainzisegred_large_39873(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45160_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45158_backing_aligned_1,
                                       int64_t N_29258, int64_t i32_res_29278,
                                       int64_t num_groups_39920, __global
                                       unsigned char *mem_43394, __global
                                       unsigned char *defunc_4_map_res_mem_43912,
                                       __global unsigned char *mem_44130,
                                       int64_t groups_per_segment_45144,
                                       int64_t elements_per_thread_45145,
                                       int64_t virt_num_groups_45146,
                                       int64_t threads_per_segment_45148,
                                       __global
                                       unsigned char *group_res_arr_mem_45149,
                                       __global
                                       unsigned char *mainzicounter_mem_45151)
{
    #define segred_group_sizze_39919 (mainzisegred_group_sizze_39867)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45160_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45160_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45158_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45158_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45153;
    int32_t local_tid_45154;
    int64_t group_sizze_45157;
    int32_t wave_sizze_45156;
    int32_t group_tid_45155;
    
    global_tid_45153 = get_global_id(0);
    local_tid_45154 = get_local_id(0);
    group_sizze_45157 = get_local_size(0);
    wave_sizze_45156 = LOCKSTEP_WIDTH;
    group_tid_45155 = get_group_id(0);
    
    int32_t phys_tid_39873;
    
    phys_tid_39873 = global_tid_45153;
    
    __local char *red_arr_mem_45158;
    
    red_arr_mem_45158 = (__local char *) red_arr_mem_45158_backing_0;
    
    __local char *sync_arr_mem_45160;
    
    sync_arr_mem_45160 = (__local char *) sync_arr_mem_45160_backing_1;
    
    int32_t phys_group_id_45162;
    
    phys_group_id_45162 = get_group_id(0);
    for (int32_t i_45163 = 0; i_45163 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45146) - phys_group_id_45162,
                   sext_i64_i32(num_groups_39920)); i_45163++) {
        int32_t virt_group_id_45164 = phys_group_id_45162 + i_45163 *
                sext_i64_i32(num_groups_39920);
        int32_t flat_segment_id_45165 = squot32(virt_group_id_45164,
                                                sext_i64_i32(groups_per_segment_45144));
        int64_t global_tid_45166 = srem64(sext_i32_i64(virt_group_id_45164) *
                                          segred_group_sizze_39919 +
                                          sext_i32_i64(local_tid_45154),
                                          segred_group_sizze_39919 *
                                          groups_per_segment_45144);
        int64_t gtid_39862 = squot64(sext_i32_i64(flat_segment_id_45165),
                                     N_29258);
        int64_t gtid_39863 = sext_i32_i64(flat_segment_id_45165) -
                squot64(sext_i32_i64(flat_segment_id_45165), N_29258) * N_29258;
        int64_t gtid_39872;
        float x_acc_45167;
        int64_t chunk_sizze_45168;
        
        chunk_sizze_45168 = smin64(elements_per_thread_45145,
                                   sdiv_up64(i32_res_29278 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45166)),
                                             threads_per_segment_45148));
        
        float x_39923;
        float x_39924;
        
        // neutral-initialise the accumulators
        {
            x_acc_45167 = 0.0F;
        }
        for (int64_t i_45172 = 0; i_45172 < chunk_sizze_45168; i_45172++) {
            gtid_39872 = sext_i32_i64(sext_i64_i32(global_tid_45166)) +
                threads_per_segment_45148 * i_45172;
            // apply map function
            {
                float x_39928 = ((__global
                                  float *) defunc_4_map_res_mem_43912)[gtid_39862 *
                                                                       i32_res_29278 +
                                                                       gtid_39872];
                float x_39929 = ((__global float *) mem_43394)[gtid_39863 *
                                                               i32_res_29278 +
                                                               gtid_39872];
                float defunc_1_f_res_39930 = x_39928 * x_39929;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39923 = x_acc_45167;
                }
                // load new values
                {
                    x_39924 = defunc_1_f_res_39930;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39925 = x_39923 + x_39924;
                    
                    // store in accumulator
                    {
                        x_acc_45167 = defunc_1_op_res_39925;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39923 = x_acc_45167;
            ((__local
              float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                x_39923;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45173;
        int32_t skip_waves_45174;
        
        skip_waves_45174 = 1;
        
        float x_45169;
        float x_45170;
        
        offset_45173 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45154,
                      sext_i64_i32(segred_group_sizze_39919))) {
                x_45169 = ((__local
                            float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                        offset_45173)];
            }
        }
        offset_45173 = 1;
        while (slt32(offset_45173, wave_sizze_45156)) {
            if (slt32(local_tid_45154 + offset_45173,
                      sext_i64_i32(segred_group_sizze_39919)) &&
                ((local_tid_45154 - squot32(local_tid_45154, wave_sizze_45156) *
                  wave_sizze_45156) & (2 * offset_45173 - 1)) == 0) {
                // read array element
                {
                    x_45170 = ((volatile __local
                                float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                            offset_45173)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45171 = x_45169 + x_45170;
                    
                    x_45169 = defunc_1_op_res_45171;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                        x_45169;
                }
            }
            offset_45173 *= 2;
        }
        while (slt32(skip_waves_45174,
                     squot32(sext_i64_i32(segred_group_sizze_39919) +
                             wave_sizze_45156 - 1, wave_sizze_45156))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45173 = skip_waves_45174 * wave_sizze_45156;
            if (slt32(local_tid_45154 + offset_45173,
                      sext_i64_i32(segred_group_sizze_39919)) &&
                ((local_tid_45154 - squot32(local_tid_45154, wave_sizze_45156) *
                  wave_sizze_45156) == 0 && (squot32(local_tid_45154,
                                                     wave_sizze_45156) & (2 *
                                                                          skip_waves_45174 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45170 = ((__local
                                float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                            offset_45173)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45171 = x_45169 + x_45170;
                    
                    x_45169 = defunc_1_op_res_45171;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                        x_45169;
                }
            }
            skip_waves_45174 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45154) == 0) {
                x_acc_45167 = x_45169;
            }
        }
        if (groups_per_segment_45144 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45154 == 0) {
                    ((__global float *) mem_44130)[gtid_39862 * N_29258 +
                                                   gtid_39863] = x_acc_45167;
                }
            }
        } else {
            int32_t old_counter_45175;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45154 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45149)[sext_i32_i64(virt_group_id_45164) *
                                                        segred_group_sizze_39919] =
                        x_acc_45167;
                    mem_fence_global();
                    old_counter_45175 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45151)[sext_i32_i64(srem32(flat_segment_id_45165,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45160)[0] =
                        old_counter_45175 == groups_per_segment_45144 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45176;
            
            is_last_group_45176 = ((__local bool *) sync_arr_mem_45160)[0];
            if (is_last_group_45176) {
                if (local_tid_45154 == 0) {
                    old_counter_45175 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45151)[sext_i32_i64(srem32(flat_segment_id_45165,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45144));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45177 =
                            sdiv_up64(groups_per_segment_45144,
                                      segred_group_sizze_39919);
                    
                    x_39923 = 0.0F;
                    for (int64_t i_45178 = 0; i_45178 < read_per_thread_45177;
                         i_45178++) {
                        int64_t group_res_id_45179 =
                                sext_i32_i64(local_tid_45154) *
                                read_per_thread_45177 + i_45178;
                        int64_t index_of_group_res_45180 =
                                sext_i32_i64(flat_segment_id_45165) *
                                groups_per_segment_45144 + group_res_id_45179;
                        
                        if (slt64(group_res_id_45179,
                                  groups_per_segment_45144)) {
                            x_39924 = ((__global
                                        float *) group_res_arr_mem_45149)[index_of_group_res_45180 *
                                                                          segred_group_sizze_39919];
                            
                            float defunc_1_op_res_39925;
                            
                            defunc_1_op_res_39925 = x_39923 + x_39924;
                            x_39923 = defunc_1_op_res_39925;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                    x_39923;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45181;
                    int32_t skip_waves_45182;
                    
                    skip_waves_45182 = 1;
                    
                    float x_45169;
                    float x_45170;
                    
                    offset_45181 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45154,
                                  sext_i64_i32(segred_group_sizze_39919))) {
                            x_45169 = ((__local
                                        float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                                    offset_45181)];
                        }
                    }
                    offset_45181 = 1;
                    while (slt32(offset_45181, wave_sizze_45156)) {
                        if (slt32(local_tid_45154 + offset_45181,
                                  sext_i64_i32(segred_group_sizze_39919)) &&
                            ((local_tid_45154 - squot32(local_tid_45154,
                                                        wave_sizze_45156) *
                              wave_sizze_45156) & (2 * offset_45181 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45170 = ((volatile __local
                                            float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                                        offset_45181)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45171 = x_45169 + x_45170;
                                
                                x_45169 = defunc_1_op_res_45171;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                                    x_45169;
                            }
                        }
                        offset_45181 *= 2;
                    }
                    while (slt32(skip_waves_45182,
                                 squot32(sext_i64_i32(segred_group_sizze_39919) +
                                         wave_sizze_45156 - 1,
                                         wave_sizze_45156))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45181 = skip_waves_45182 * wave_sizze_45156;
                        if (slt32(local_tid_45154 + offset_45181,
                                  sext_i64_i32(segred_group_sizze_39919)) &&
                            ((local_tid_45154 - squot32(local_tid_45154,
                                                        wave_sizze_45156) *
                              wave_sizze_45156) == 0 &&
                             (squot32(local_tid_45154, wave_sizze_45156) & (2 *
                                                                            skip_waves_45182 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45170 = ((__local
                                            float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                                        offset_45181)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45171 = x_45169 + x_45170;
                                
                                x_45169 = defunc_1_op_res_45171;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                                    x_45169;
                            }
                        }
                        skip_waves_45182 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45154 == 0) {
                            ((__global float *) mem_44130)[gtid_39862 *
                                                           N_29258 +
                                                           gtid_39863] =
                                x_45169;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39919
}
__kernel void mainzisegred_large_40439(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45414_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45412_backing_aligned_1,
                                       int64_t N_29258, int64_t i32_res_29272,
                                       int64_t num_groups_40486, __global
                                       unsigned char *defunc_4_map_res_mem_44174,
                                       __global unsigned char *mem_44225,
                                       __global unsigned char *mem_44228,
                                       int64_t groups_per_segment_45398,
                                       int64_t elements_per_thread_45399,
                                       int64_t virt_num_groups_45400,
                                       int64_t threads_per_segment_45402,
                                       __global
                                       unsigned char *group_res_arr_mem_45403,
                                       __global
                                       unsigned char *mainzicounter_mem_45405)
{
    #define segred_group_sizze_40485 (mainzisegred_group_sizze_40433)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45414_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45414_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45412_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45412_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45407;
    int32_t local_tid_45408;
    int64_t group_sizze_45411;
    int32_t wave_sizze_45410;
    int32_t group_tid_45409;
    
    global_tid_45407 = get_global_id(0);
    local_tid_45408 = get_local_id(0);
    group_sizze_45411 = get_local_size(0);
    wave_sizze_45410 = LOCKSTEP_WIDTH;
    group_tid_45409 = get_group_id(0);
    
    int32_t phys_tid_40439;
    
    phys_tid_40439 = global_tid_45407;
    
    __local char *red_arr_mem_45412;
    
    red_arr_mem_45412 = (__local char *) red_arr_mem_45412_backing_0;
    
    __local char *sync_arr_mem_45414;
    
    sync_arr_mem_45414 = (__local char *) sync_arr_mem_45414_backing_1;
    
    int32_t phys_group_id_45416;
    
    phys_group_id_45416 = get_group_id(0);
    for (int32_t i_45417 = 0; i_45417 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45400) - phys_group_id_45416,
                   sext_i64_i32(num_groups_40486)); i_45417++) {
        int32_t virt_group_id_45418 = phys_group_id_45416 + i_45417 *
                sext_i64_i32(num_groups_40486);
        int32_t flat_segment_id_45419 = squot32(virt_group_id_45418,
                                                sext_i64_i32(groups_per_segment_45398));
        int64_t global_tid_45420 = srem64(sext_i32_i64(virt_group_id_45418) *
                                          segred_group_sizze_40485 +
                                          sext_i32_i64(local_tid_45408),
                                          segred_group_sizze_40485 *
                                          groups_per_segment_45398);
        int64_t gtid_40430 = sext_i32_i64(flat_segment_id_45419);
        int64_t gtid_40438;
        float x_acc_45421;
        int64_t chunk_sizze_45422;
        
        chunk_sizze_45422 = smin64(elements_per_thread_45399,
                                   sdiv_up64(i32_res_29272 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45420)),
                                             threads_per_segment_45402));
        
        float x_40489;
        float x_40490;
        
        // neutral-initialise the accumulators
        {
            x_acc_45421 = 0.0F;
        }
        for (int64_t i_45426 = 0; i_45426 < chunk_sizze_45422; i_45426++) {
            gtid_40438 = sext_i32_i64(sext_i64_i32(global_tid_45420)) +
                threads_per_segment_45402 * i_45426;
            // apply map function
            {
                int32_t defunc_0_f_res_40493 = ((__global
                                                 int32_t *) mem_44225)[gtid_40430];
                int32_t index_primexp_41417 = sext_i64_i32(gtid_40438);
                bool cond_40495 = slt32(index_primexp_41417,
                                        defunc_0_f_res_40493);
                float defunc_0_f_res_40496;
                
                if (cond_40495) {
                    int64_t i_40497 = sext_i32_i64(index_primexp_41417);
                    float defunc_0_f_res_t_res_40498 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_40430 *
                                                                                              N_29258 +
                                                                                              i_40497];
                    
                    defunc_0_f_res_40496 = defunc_0_f_res_t_res_40498;
                } else {
                    defunc_0_f_res_40496 = 0.0F;
                }
                
                float defunc_0_f_res_40499 = defunc_0_f_res_40496 *
                      defunc_0_f_res_40496;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_40489 = x_acc_45421;
                }
                // load new values
                {
                    x_40490 = defunc_0_f_res_40499;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40491 = x_40489 + x_40490;
                    
                    // store in accumulator
                    {
                        x_acc_45421 = defunc_1_op_res_40491;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40489 = x_acc_45421;
            ((__local
              float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408)] =
                x_40489;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45427;
        int32_t skip_waves_45428;
        
        skip_waves_45428 = 1;
        
        float x_45423;
        float x_45424;
        
        offset_45427 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45408,
                      sext_i64_i32(segred_group_sizze_40485))) {
                x_45423 = ((__local
                            float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408 +
                                                        offset_45427)];
            }
        }
        offset_45427 = 1;
        while (slt32(offset_45427, wave_sizze_45410)) {
            if (slt32(local_tid_45408 + offset_45427,
                      sext_i64_i32(segred_group_sizze_40485)) &&
                ((local_tid_45408 - squot32(local_tid_45408, wave_sizze_45410) *
                  wave_sizze_45410) & (2 * offset_45427 - 1)) == 0) {
                // read array element
                {
                    x_45424 = ((volatile __local
                                float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408 +
                                                            offset_45427)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45425 = x_45423 + x_45424;
                    
                    x_45423 = defunc_1_op_res_45425;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408)] =
                        x_45423;
                }
            }
            offset_45427 *= 2;
        }
        while (slt32(skip_waves_45428,
                     squot32(sext_i64_i32(segred_group_sizze_40485) +
                             wave_sizze_45410 - 1, wave_sizze_45410))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45427 = skip_waves_45428 * wave_sizze_45410;
            if (slt32(local_tid_45408 + offset_45427,
                      sext_i64_i32(segred_group_sizze_40485)) &&
                ((local_tid_45408 - squot32(local_tid_45408, wave_sizze_45410) *
                  wave_sizze_45410) == 0 && (squot32(local_tid_45408,
                                                     wave_sizze_45410) & (2 *
                                                                          skip_waves_45428 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45424 = ((__local
                                float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408 +
                                                            offset_45427)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45425 = x_45423 + x_45424;
                    
                    x_45423 = defunc_1_op_res_45425;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408)] =
                        x_45423;
                }
            }
            skip_waves_45428 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45408) == 0) {
                x_acc_45421 = x_45423;
            }
        }
        if (groups_per_segment_45398 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45408 == 0) {
                    ((__global float *) mem_44228)[gtid_40430] = x_acc_45421;
                }
            }
        } else {
            int32_t old_counter_45429;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45408 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45403)[sext_i32_i64(virt_group_id_45418) *
                                                        segred_group_sizze_40485] =
                        x_acc_45421;
                    mem_fence_global();
                    old_counter_45429 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45405)[sext_i32_i64(srem32(flat_segment_id_45419,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45414)[0] =
                        old_counter_45429 == groups_per_segment_45398 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45430;
            
            is_last_group_45430 = ((__local bool *) sync_arr_mem_45414)[0];
            if (is_last_group_45430) {
                if (local_tid_45408 == 0) {
                    old_counter_45429 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45405)[sext_i32_i64(srem32(flat_segment_id_45419,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45398));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45431 =
                            sdiv_up64(groups_per_segment_45398,
                                      segred_group_sizze_40485);
                    
                    x_40489 = 0.0F;
                    for (int64_t i_45432 = 0; i_45432 < read_per_thread_45431;
                         i_45432++) {
                        int64_t group_res_id_45433 =
                                sext_i32_i64(local_tid_45408) *
                                read_per_thread_45431 + i_45432;
                        int64_t index_of_group_res_45434 =
                                sext_i32_i64(flat_segment_id_45419) *
                                groups_per_segment_45398 + group_res_id_45433;
                        
                        if (slt64(group_res_id_45433,
                                  groups_per_segment_45398)) {
                            x_40490 = ((__global
                                        float *) group_res_arr_mem_45403)[index_of_group_res_45434 *
                                                                          segred_group_sizze_40485];
                            
                            float defunc_1_op_res_40491;
                            
                            defunc_1_op_res_40491 = x_40489 + x_40490;
                            x_40489 = defunc_1_op_res_40491;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408)] =
                    x_40489;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45435;
                    int32_t skip_waves_45436;
                    
                    skip_waves_45436 = 1;
                    
                    float x_45423;
                    float x_45424;
                    
                    offset_45435 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45408,
                                  sext_i64_i32(segred_group_sizze_40485))) {
                            x_45423 = ((__local
                                        float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408 +
                                                                    offset_45435)];
                        }
                    }
                    offset_45435 = 1;
                    while (slt32(offset_45435, wave_sizze_45410)) {
                        if (slt32(local_tid_45408 + offset_45435,
                                  sext_i64_i32(segred_group_sizze_40485)) &&
                            ((local_tid_45408 - squot32(local_tid_45408,
                                                        wave_sizze_45410) *
                              wave_sizze_45410) & (2 * offset_45435 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45424 = ((volatile __local
                                            float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408 +
                                                                        offset_45435)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45425 = x_45423 + x_45424;
                                
                                x_45423 = defunc_1_op_res_45425;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408)] =
                                    x_45423;
                            }
                        }
                        offset_45435 *= 2;
                    }
                    while (slt32(skip_waves_45436,
                                 squot32(sext_i64_i32(segred_group_sizze_40485) +
                                         wave_sizze_45410 - 1,
                                         wave_sizze_45410))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45435 = skip_waves_45436 * wave_sizze_45410;
                        if (slt32(local_tid_45408 + offset_45435,
                                  sext_i64_i32(segred_group_sizze_40485)) &&
                            ((local_tid_45408 - squot32(local_tid_45408,
                                                        wave_sizze_45410) *
                              wave_sizze_45410) == 0 &&
                             (squot32(local_tid_45408, wave_sizze_45410) & (2 *
                                                                            skip_waves_45436 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45424 = ((__local
                                            float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408 +
                                                                        offset_45435)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45425 = x_45423 + x_45424;
                                
                                x_45423 = defunc_1_op_res_45425;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45412)[sext_i32_i64(local_tid_45408)] =
                                    x_45423;
                            }
                        }
                        skip_waves_45436 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45408 == 0) {
                            ((__global float *) mem_44228)[gtid_40430] =
                                x_45423;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40485
}
__kernel void mainzisegred_large_40460(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45354_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45352_backing_aligned_1,
                                       int64_t N_29260, int64_t i32_res_29272,
                                       int64_t num_groups_40472, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *mem_44225,
                                       int64_t groups_per_segment_45338,
                                       int64_t elements_per_thread_45339,
                                       int64_t virt_num_groups_45340,
                                       int64_t threads_per_segment_45342,
                                       __global
                                       unsigned char *group_res_arr_mem_45343,
                                       __global
                                       unsigned char *mainzicounter_mem_45345)
{
    #define segred_group_sizze_40471 (mainzisegred_group_sizze_40454)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45354_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45354_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45352_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45352_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45347;
    int32_t local_tid_45348;
    int64_t group_sizze_45351;
    int32_t wave_sizze_45350;
    int32_t group_tid_45349;
    
    global_tid_45347 = get_global_id(0);
    local_tid_45348 = get_local_id(0);
    group_sizze_45351 = get_local_size(0);
    wave_sizze_45350 = LOCKSTEP_WIDTH;
    group_tid_45349 = get_group_id(0);
    
    int32_t phys_tid_40460;
    
    phys_tid_40460 = global_tid_45347;
    
    __local char *red_arr_mem_45352;
    
    red_arr_mem_45352 = (__local char *) red_arr_mem_45352_backing_0;
    
    __local char *sync_arr_mem_45354;
    
    sync_arr_mem_45354 = (__local char *) sync_arr_mem_45354_backing_1;
    
    int32_t phys_group_id_45356;
    
    phys_group_id_45356 = get_group_id(0);
    for (int32_t i_45357 = 0; i_45357 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45340) - phys_group_id_45356,
                   sext_i64_i32(num_groups_40472)); i_45357++) {
        int32_t virt_group_id_45358 = phys_group_id_45356 + i_45357 *
                sext_i64_i32(num_groups_40472);
        int32_t flat_segment_id_45359 = squot32(virt_group_id_45358,
                                                sext_i64_i32(groups_per_segment_45338));
        int64_t global_tid_45360 = srem64(sext_i32_i64(virt_group_id_45358) *
                                          segred_group_sizze_40471 +
                                          sext_i32_i64(local_tid_45348),
                                          segred_group_sizze_40471 *
                                          groups_per_segment_45338);
        int64_t gtid_40451 = sext_i32_i64(flat_segment_id_45359);
        int64_t gtid_40459;
        int32_t x_acc_45361;
        int64_t chunk_sizze_45362;
        
        chunk_sizze_45362 = smin64(elements_per_thread_45339,
                                   sdiv_up64(i32_res_29272 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45360)),
                                             threads_per_segment_45342));
        
        int32_t x_40475;
        int32_t x_40476;
        
        // neutral-initialise the accumulators
        {
            x_acc_45361 = 0;
        }
        for (int64_t i_45366 = 0; i_45366 < chunk_sizze_45362; i_45366++) {
            gtid_40459 = sext_i32_i64(sext_i64_i32(global_tid_45360)) +
                threads_per_segment_45342 * i_45366;
            // apply map function
            {
                float x_40479 = ((__global
                                  float *) images_mem_43378)[gtid_40451 *
                                                             N_29260 +
                                                             gtid_40459];
                bool isnan_res_40480;
                
                isnan_res_40480 = futrts_isnan32(x_40479);
                
                bool cond_40481 = !isnan_res_40480;
                int32_t defunc_0_f_res_40482 = btoi_bool_i32(cond_40481);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_40475 = x_acc_45361;
                }
                // load new values
                {
                    x_40476 = defunc_0_f_res_40482;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_40477 = add32(x_40475, x_40476);
                    
                    // store in accumulator
                    {
                        x_acc_45361 = defunc_1_op_res_40477;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40475 = x_acc_45361;
            ((__local
              int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348)] =
                x_40475;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45367;
        int32_t skip_waves_45368;
        
        skip_waves_45368 = 1;
        
        int32_t x_45363;
        int32_t x_45364;
        
        offset_45367 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45348,
                      sext_i64_i32(segred_group_sizze_40471))) {
                x_45363 = ((__local
                            int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348 +
                                                          offset_45367)];
            }
        }
        offset_45367 = 1;
        while (slt32(offset_45367, wave_sizze_45350)) {
            if (slt32(local_tid_45348 + offset_45367,
                      sext_i64_i32(segred_group_sizze_40471)) &&
                ((local_tid_45348 - squot32(local_tid_45348, wave_sizze_45350) *
                  wave_sizze_45350) & (2 * offset_45367 - 1)) == 0) {
                // read array element
                {
                    x_45364 = ((volatile __local
                                int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348 +
                                                              offset_45367)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45365 = add32(x_45363, x_45364);
                    
                    x_45363 = defunc_1_op_res_45365;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348)] =
                        x_45363;
                }
            }
            offset_45367 *= 2;
        }
        while (slt32(skip_waves_45368,
                     squot32(sext_i64_i32(segred_group_sizze_40471) +
                             wave_sizze_45350 - 1, wave_sizze_45350))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45367 = skip_waves_45368 * wave_sizze_45350;
            if (slt32(local_tid_45348 + offset_45367,
                      sext_i64_i32(segred_group_sizze_40471)) &&
                ((local_tid_45348 - squot32(local_tid_45348, wave_sizze_45350) *
                  wave_sizze_45350) == 0 && (squot32(local_tid_45348,
                                                     wave_sizze_45350) & (2 *
                                                                          skip_waves_45368 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45364 = ((__local
                                int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348 +
                                                              offset_45367)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45365 = add32(x_45363, x_45364);
                    
                    x_45363 = defunc_1_op_res_45365;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348)] =
                        x_45363;
                }
            }
            skip_waves_45368 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45348) == 0) {
                x_acc_45361 = x_45363;
            }
        }
        if (groups_per_segment_45338 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45348 == 0) {
                    ((__global int32_t *) mem_44225)[gtid_40451] = x_acc_45361;
                }
            }
        } else {
            int32_t old_counter_45369;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45348 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45343)[sext_i32_i64(virt_group_id_45358) *
                                                          segred_group_sizze_40471] =
                        x_acc_45361;
                    mem_fence_global();
                    old_counter_45369 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45345)[sext_i32_i64(srem32(flat_segment_id_45359,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45354)[0] =
                        old_counter_45369 == groups_per_segment_45338 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45370;
            
            is_last_group_45370 = ((__local bool *) sync_arr_mem_45354)[0];
            if (is_last_group_45370) {
                if (local_tid_45348 == 0) {
                    old_counter_45369 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45345)[sext_i32_i64(srem32(flat_segment_id_45359,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45338));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45371 =
                            sdiv_up64(groups_per_segment_45338,
                                      segred_group_sizze_40471);
                    
                    x_40475 = 0;
                    for (int64_t i_45372 = 0; i_45372 < read_per_thread_45371;
                         i_45372++) {
                        int64_t group_res_id_45373 =
                                sext_i32_i64(local_tid_45348) *
                                read_per_thread_45371 + i_45372;
                        int64_t index_of_group_res_45374 =
                                sext_i32_i64(flat_segment_id_45359) *
                                groups_per_segment_45338 + group_res_id_45373;
                        
                        if (slt64(group_res_id_45373,
                                  groups_per_segment_45338)) {
                            x_40476 = ((__global
                                        int32_t *) group_res_arr_mem_45343)[index_of_group_res_45374 *
                                                                            segred_group_sizze_40471];
                            
                            int32_t defunc_1_op_res_40477;
                            
                            defunc_1_op_res_40477 = add32(x_40475, x_40476);
                            x_40475 = defunc_1_op_res_40477;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348)] =
                    x_40475;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45375;
                    int32_t skip_waves_45376;
                    
                    skip_waves_45376 = 1;
                    
                    int32_t x_45363;
                    int32_t x_45364;
                    
                    offset_45375 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45348,
                                  sext_i64_i32(segred_group_sizze_40471))) {
                            x_45363 = ((__local
                                        int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348 +
                                                                      offset_45375)];
                        }
                    }
                    offset_45375 = 1;
                    while (slt32(offset_45375, wave_sizze_45350)) {
                        if (slt32(local_tid_45348 + offset_45375,
                                  sext_i64_i32(segred_group_sizze_40471)) &&
                            ((local_tid_45348 - squot32(local_tid_45348,
                                                        wave_sizze_45350) *
                              wave_sizze_45350) & (2 * offset_45375 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45364 = ((volatile __local
                                            int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348 +
                                                                          offset_45375)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45365 = add32(x_45363,
                                                                      x_45364);
                                
                                x_45363 = defunc_1_op_res_45365;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348)] =
                                    x_45363;
                            }
                        }
                        offset_45375 *= 2;
                    }
                    while (slt32(skip_waves_45376,
                                 squot32(sext_i64_i32(segred_group_sizze_40471) +
                                         wave_sizze_45350 - 1,
                                         wave_sizze_45350))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45375 = skip_waves_45376 * wave_sizze_45350;
                        if (slt32(local_tid_45348 + offset_45375,
                                  sext_i64_i32(segred_group_sizze_40471)) &&
                            ((local_tid_45348 - squot32(local_tid_45348,
                                                        wave_sizze_45350) *
                              wave_sizze_45350) == 0 &&
                             (squot32(local_tid_45348, wave_sizze_45350) & (2 *
                                                                            skip_waves_45376 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45364 = ((__local
                                            int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348 +
                                                                          offset_45375)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45365 = add32(x_45363,
                                                                      x_45364);
                                
                                x_45363 = defunc_1_op_res_45365;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45352)[sext_i32_i64(local_tid_45348)] =
                                    x_45363;
                            }
                        }
                        skip_waves_45376 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45348 == 0) {
                            ((__global int32_t *) mem_44225)[gtid_40451] =
                                x_45363;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40471
}
__kernel void mainzisegred_large_40611(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45523_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45521_backing_aligned_1,
                                       int64_t N_29258, int64_t i32_res_29633,
                                       int64_t num_groups_40629, __global
                                       unsigned char *defunc_4_map_res_mem_44174,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44237,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44238,
                                       __global unsigned char *mem_44271,
                                       int64_t groups_per_segment_45507,
                                       int64_t elements_per_thread_45508,
                                       int64_t virt_num_groups_45509,
                                       int64_t threads_per_segment_45511,
                                       __global
                                       unsigned char *group_res_arr_mem_45512,
                                       __global
                                       unsigned char *mainzicounter_mem_45514)
{
    #define segred_group_sizze_40628 (mainzisegred_group_sizze_40605)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45523_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45523_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45521_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45521_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45516;
    int32_t local_tid_45517;
    int64_t group_sizze_45520;
    int32_t wave_sizze_45519;
    int32_t group_tid_45518;
    
    global_tid_45516 = get_global_id(0);
    local_tid_45517 = get_local_id(0);
    group_sizze_45520 = get_local_size(0);
    wave_sizze_45519 = LOCKSTEP_WIDTH;
    group_tid_45518 = get_group_id(0);
    
    int32_t phys_tid_40611;
    
    phys_tid_40611 = global_tid_45516;
    
    __local char *red_arr_mem_45521;
    
    red_arr_mem_45521 = (__local char *) red_arr_mem_45521_backing_0;
    
    __local char *sync_arr_mem_45523;
    
    sync_arr_mem_45523 = (__local char *) sync_arr_mem_45523_backing_1;
    
    int32_t phys_group_id_45525;
    
    phys_group_id_45525 = get_group_id(0);
    for (int32_t i_45526 = 0; i_45526 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45509) - phys_group_id_45525,
                   sext_i64_i32(num_groups_40629)); i_45526++) {
        int32_t virt_group_id_45527 = phys_group_id_45525 + i_45526 *
                sext_i64_i32(num_groups_40629);
        int32_t flat_segment_id_45528 = squot32(virt_group_id_45527,
                                                sext_i64_i32(groups_per_segment_45507));
        int64_t global_tid_45529 = srem64(sext_i32_i64(virt_group_id_45527) *
                                          segred_group_sizze_40628 +
                                          sext_i32_i64(local_tid_45517),
                                          segred_group_sizze_40628 *
                                          groups_per_segment_45507);
        int64_t gtid_40602 = sext_i32_i64(flat_segment_id_45528);
        int64_t gtid_40610;
        float x_acc_45530;
        int64_t chunk_sizze_45531;
        
        chunk_sizze_45531 = smin64(elements_per_thread_45508,
                                   sdiv_up64(i32_res_29633 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45529)),
                                             threads_per_segment_45511));
        
        float x_40632;
        float x_40633;
        
        // neutral-initialise the accumulators
        {
            x_acc_45530 = 0.0F;
        }
        for (int64_t i_45535 = 0; i_45535 < chunk_sizze_45531; i_45535++) {
            gtid_40610 = sext_i32_i64(sext_i64_i32(global_tid_45529)) +
                threads_per_segment_45511 * i_45535;
            // apply map function
            {
                int32_t x_40637 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44237)[gtid_40602];
                int32_t index_primexp_41422 = sext_i64_i32(gtid_40610);
                bool cond_40639 = slt32(index_primexp_41422, x_40637);
                float defunc_0_f_res_40640;
                
                if (cond_40639) {
                    int32_t x_40636 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_40602];
                    int32_t x_40641 = add32(x_40636, index_primexp_41422);
                    int32_t x_40642 = sub32(x_40641, x_40637);
                    int32_t i_40643 = add32(1, x_40642);
                    int64_t i_40644 = sext_i32_i64(i_40643);
                    float defunc_0_f_res_t_res_40645 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_40602 *
                                                                                              N_29258 +
                                                                                              i_40644];
                    
                    defunc_0_f_res_40640 = defunc_0_f_res_t_res_40645;
                } else {
                    defunc_0_f_res_40640 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_40632 = x_acc_45530;
                }
                // load new values
                {
                    x_40633 = defunc_0_f_res_40640;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40634 = x_40632 + x_40633;
                    
                    // store in accumulator
                    {
                        x_acc_45530 = defunc_1_op_res_40634;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40632 = x_acc_45530;
            ((__local
              float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517)] =
                x_40632;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45536;
        int32_t skip_waves_45537;
        
        skip_waves_45537 = 1;
        
        float x_45532;
        float x_45533;
        
        offset_45536 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45517,
                      sext_i64_i32(segred_group_sizze_40628))) {
                x_45532 = ((__local
                            float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517 +
                                                        offset_45536)];
            }
        }
        offset_45536 = 1;
        while (slt32(offset_45536, wave_sizze_45519)) {
            if (slt32(local_tid_45517 + offset_45536,
                      sext_i64_i32(segred_group_sizze_40628)) &&
                ((local_tid_45517 - squot32(local_tid_45517, wave_sizze_45519) *
                  wave_sizze_45519) & (2 * offset_45536 - 1)) == 0) {
                // read array element
                {
                    x_45533 = ((volatile __local
                                float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517 +
                                                            offset_45536)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45534 = x_45532 + x_45533;
                    
                    x_45532 = defunc_1_op_res_45534;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517)] =
                        x_45532;
                }
            }
            offset_45536 *= 2;
        }
        while (slt32(skip_waves_45537,
                     squot32(sext_i64_i32(segred_group_sizze_40628) +
                             wave_sizze_45519 - 1, wave_sizze_45519))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45536 = skip_waves_45537 * wave_sizze_45519;
            if (slt32(local_tid_45517 + offset_45536,
                      sext_i64_i32(segred_group_sizze_40628)) &&
                ((local_tid_45517 - squot32(local_tid_45517, wave_sizze_45519) *
                  wave_sizze_45519) == 0 && (squot32(local_tid_45517,
                                                     wave_sizze_45519) & (2 *
                                                                          skip_waves_45537 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45533 = ((__local
                                float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517 +
                                                            offset_45536)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45534 = x_45532 + x_45533;
                    
                    x_45532 = defunc_1_op_res_45534;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517)] =
                        x_45532;
                }
            }
            skip_waves_45537 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45517) == 0) {
                x_acc_45530 = x_45532;
            }
        }
        if (groups_per_segment_45507 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45517 == 0) {
                    ((__global float *) mem_44271)[gtid_40602] = x_acc_45530;
                }
            }
        } else {
            int32_t old_counter_45538;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45517 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45512)[sext_i32_i64(virt_group_id_45527) *
                                                        segred_group_sizze_40628] =
                        x_acc_45530;
                    mem_fence_global();
                    old_counter_45538 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45514)[sext_i32_i64(srem32(flat_segment_id_45528,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45523)[0] =
                        old_counter_45538 == groups_per_segment_45507 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45539;
            
            is_last_group_45539 = ((__local bool *) sync_arr_mem_45523)[0];
            if (is_last_group_45539) {
                if (local_tid_45517 == 0) {
                    old_counter_45538 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45514)[sext_i32_i64(srem32(flat_segment_id_45528,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45507));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45540 =
                            sdiv_up64(groups_per_segment_45507,
                                      segred_group_sizze_40628);
                    
                    x_40632 = 0.0F;
                    for (int64_t i_45541 = 0; i_45541 < read_per_thread_45540;
                         i_45541++) {
                        int64_t group_res_id_45542 =
                                sext_i32_i64(local_tid_45517) *
                                read_per_thread_45540 + i_45541;
                        int64_t index_of_group_res_45543 =
                                sext_i32_i64(flat_segment_id_45528) *
                                groups_per_segment_45507 + group_res_id_45542;
                        
                        if (slt64(group_res_id_45542,
                                  groups_per_segment_45507)) {
                            x_40633 = ((__global
                                        float *) group_res_arr_mem_45512)[index_of_group_res_45543 *
                                                                          segred_group_sizze_40628];
                            
                            float defunc_1_op_res_40634;
                            
                            defunc_1_op_res_40634 = x_40632 + x_40633;
                            x_40632 = defunc_1_op_res_40634;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517)] =
                    x_40632;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45544;
                    int32_t skip_waves_45545;
                    
                    skip_waves_45545 = 1;
                    
                    float x_45532;
                    float x_45533;
                    
                    offset_45544 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45517,
                                  sext_i64_i32(segred_group_sizze_40628))) {
                            x_45532 = ((__local
                                        float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517 +
                                                                    offset_45544)];
                        }
                    }
                    offset_45544 = 1;
                    while (slt32(offset_45544, wave_sizze_45519)) {
                        if (slt32(local_tid_45517 + offset_45544,
                                  sext_i64_i32(segred_group_sizze_40628)) &&
                            ((local_tid_45517 - squot32(local_tid_45517,
                                                        wave_sizze_45519) *
                              wave_sizze_45519) & (2 * offset_45544 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45533 = ((volatile __local
                                            float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517 +
                                                                        offset_45544)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45534 = x_45532 + x_45533;
                                
                                x_45532 = defunc_1_op_res_45534;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517)] =
                                    x_45532;
                            }
                        }
                        offset_45544 *= 2;
                    }
                    while (slt32(skip_waves_45545,
                                 squot32(sext_i64_i32(segred_group_sizze_40628) +
                                         wave_sizze_45519 - 1,
                                         wave_sizze_45519))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45544 = skip_waves_45545 * wave_sizze_45519;
                        if (slt32(local_tid_45517 + offset_45544,
                                  sext_i64_i32(segred_group_sizze_40628)) &&
                            ((local_tid_45517 - squot32(local_tid_45517,
                                                        wave_sizze_45519) *
                              wave_sizze_45519) == 0 &&
                             (squot32(local_tid_45517, wave_sizze_45519) & (2 *
                                                                            skip_waves_45545 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45533 = ((__local
                                            float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517 +
                                                                        offset_45544)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45534 = x_45532 + x_45533;
                                
                                x_45532 = defunc_1_op_res_45534;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45521)[sext_i32_i64(local_tid_45517)] =
                                    x_45532;
                            }
                        }
                        skip_waves_45545 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45517 == 0) {
                            ((__global float *) mem_44271)[gtid_40602] =
                                x_45532;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40628
}
__kernel void mainzisegred_large_41112(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45704_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45702_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45700_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_45698_backing_aligned_3,
                                       int64_t iota32_arg_29658,
                                       int64_t num_groups_41283, __global
                                       unsigned char *mem_44277, __global
                                       unsigned char *mem_44289, __global
                                       unsigned char *mem_44291, __global
                                       unsigned char *mem_44295, __global
                                       unsigned char *mem_44298, __global
                                       unsigned char *mem_44300, __global
                                       unsigned char *mem_44302,
                                       int64_t groups_per_segment_45680,
                                       int64_t elements_per_thread_45681,
                                       int64_t virt_num_groups_45682, __global
                                       unsigned char *group_res_arr_mem_45685,
                                       __global
                                       unsigned char *group_res_arr_mem_45687,
                                       __global
                                       unsigned char *group_res_arr_mem_45689,
                                       __global
                                       unsigned char *mainzicounter_mem_45691)
{
    #define segred_group_sizze_41282 (mainzisegred_group_sizze_41106)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45704_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45704_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45702_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45702_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45700_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45700_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45698_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45698_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45693;
    int32_t local_tid_45694;
    int64_t group_sizze_45697;
    int32_t wave_sizze_45696;
    int32_t group_tid_45695;
    
    global_tid_45693 = get_global_id(0);
    local_tid_45694 = get_local_id(0);
    group_sizze_45697 = get_local_size(0);
    wave_sizze_45696 = LOCKSTEP_WIDTH;
    group_tid_45695 = get_group_id(0);
    
    int32_t phys_tid_41112;
    
    phys_tid_41112 = global_tid_45693;
    
    __local char *red_arr_mem_45698;
    
    red_arr_mem_45698 = (__local char *) red_arr_mem_45698_backing_0;
    
    __local char *red_arr_mem_45700;
    
    red_arr_mem_45700 = (__local char *) red_arr_mem_45700_backing_1;
    
    __local char *red_arr_mem_45702;
    
    red_arr_mem_45702 = (__local char *) red_arr_mem_45702_backing_2;
    
    __local char *sync_arr_mem_45704;
    
    sync_arr_mem_45704 = (__local char *) sync_arr_mem_45704_backing_3;
    
    int32_t phys_group_id_45706;
    
    phys_group_id_45706 = get_group_id(0);
    for (int32_t i_45707 = 0; i_45707 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45682) - phys_group_id_45706,
                   sext_i64_i32(num_groups_41283)); i_45707++) {
        int32_t virt_group_id_45708 = phys_group_id_45706 + i_45707 *
                sext_i64_i32(num_groups_41283);
        int32_t flat_segment_id_45709 = squot32(virt_group_id_45708,
                                                sext_i64_i32(groups_per_segment_45680));
        int64_t global_tid_45710 = srem64(sext_i32_i64(virt_group_id_45708) *
                                          segred_group_sizze_41282 +
                                          sext_i32_i64(local_tid_45694),
                                          segred_group_sizze_41282 *
                                          groups_per_segment_45680);
        int64_t gtid_41103 = sext_i32_i64(flat_segment_id_45709);
        int64_t gtid_41111;
        bool x_acc_45711;
        int32_t x_acc_45712;
        float x_acc_45713;
        int64_t chunk_sizze_45714;
        int64_t starting_point_45715;
        
        starting_point_45715 = sext_i32_i64(sext_i64_i32(global_tid_45710)) *
            elements_per_thread_45681;
        
        int64_t remaining_elements_45716;
        
        remaining_elements_45716 = iota32_arg_29658 - starting_point_45715;
        if (sle64(remaining_elements_45716, 0) || sle64(iota32_arg_29658,
                                                        starting_point_45715)) {
            chunk_sizze_45714 = 0;
        } else {
            if (slt64(iota32_arg_29658,
                      (sext_i32_i64(sext_i64_i32(global_tid_45710)) + 1) *
                      elements_per_thread_45681)) {
                chunk_sizze_45714 = iota32_arg_29658 -
                    sext_i32_i64(sext_i64_i32(global_tid_45710)) *
                    elements_per_thread_45681;
            } else {
                chunk_sizze_45714 = elements_per_thread_45681;
            }
        }
        
        bool x_41288;
        int32_t x_41289;
        float x_41290;
        bool x_41291;
        int32_t x_41292;
        float x_41293;
        
        // neutral-initialise the accumulators
        {
            x_acc_45711 = 0;
            x_acc_45712 = -1;
            x_acc_45713 = 0.0F;
        }
        for (int64_t i_45731 = 0; i_45731 < elements_per_thread_45681;
             i_45731++) {
            gtid_41111 = sext_i32_i64(local_tid_45694) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45710),
                                      sext_i64_i32(segred_group_sizze_41282))) *
                 elements_per_thread_45681 + i_45731) *
                segred_group_sizze_41282;
            if (slt64(gtid_41111, iota32_arg_29658)) {
                // apply map function
                {
                    int32_t y_41302 = ((__global
                                        int32_t *) mem_44291)[gtid_41103];
                    float y_41303 = ((__global float *) mem_44289)[gtid_41103];
                    float x_41307 = ((__global float *) mem_44295)[gtid_41103 *
                                                                   iota32_arg_29658 +
                                                                   gtid_41111];
                    float x_41308 = ((__global float *) mem_44277)[gtid_41111];
                    int32_t index_primexp_41436 = sext_i64_i32(gtid_41111);
                    float defunc_0_f_res_41311 = x_41307 / y_41303;
                    bool cond_41312 = slt32(index_primexp_41436, y_41302);
                    bool isnan_res_41313;
                    
                    isnan_res_41313 = futrts_isnan32(defunc_0_f_res_41311);
                    
                    bool cond_t_res_41314 = !isnan_res_41313;
                    bool x_41315 = cond_41312 && cond_t_res_41314;
                    float abs_res_41316 = (float) fabs(defunc_0_f_res_41311);
                    bool defunc_2_f_res_t_res_41317 = x_41308 < abs_res_41316;
                    bool x_41318 = x_41315 && defunc_2_f_res_t_res_41317;
                    float defunc_1_f_res_41319;
                    
                    if (cond_41312) {
                        defunc_1_f_res_41319 = defunc_0_f_res_41311;
                    } else {
                        defunc_1_f_res_41319 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_41288 = x_acc_45711;
                        x_41289 = x_acc_45712;
                        x_41290 = x_acc_45713;
                    }
                    // load new values
                    {
                        x_41291 = x_41318;
                        x_41292 = index_primexp_41436;
                        x_41293 = defunc_1_f_res_41319;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_41294;
                        int32_t defunc_1_op_res_41295;
                        
                        if (x_41288) {
                            defunc_1_op_res_41294 = x_41288;
                            defunc_1_op_res_41295 = x_41289;
                        } else {
                            bool x_41296 = x_41291 && x_41291;
                            bool x_41297 = !x_41291;
                            bool y_41298 = x_41288 && x_41297;
                            bool defunc_1_op_res_f_res_41299 = x_41296 ||
                                 y_41298;
                            int32_t defunc_1_op_res_f_res_41300;
                            
                            if (x_41291) {
                                defunc_1_op_res_f_res_41300 = x_41292;
                            } else {
                                defunc_1_op_res_f_res_41300 = x_41289;
                            }
                            defunc_1_op_res_41294 = defunc_1_op_res_f_res_41299;
                            defunc_1_op_res_41295 = defunc_1_op_res_f_res_41300;
                        }
                        
                        float defunc_1_op_res_41301 = x_41290 + x_41293;
                        
                        // store in accumulator
                        {
                            x_acc_45711 = defunc_1_op_res_41294;
                            x_acc_45712 = defunc_1_op_res_41295;
                            x_acc_45713 = defunc_1_op_res_41301;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_41288 = x_acc_45711;
                x_41289 = x_acc_45712;
                x_41290 = x_acc_45713;
                ((__local
                  bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694)] =
                    x_41288;
                ((__local
                  int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694)] =
                    x_41289;
                ((__local
                  float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694)] =
                    x_41290;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45732;
            int32_t skip_waves_45733;
            
            skip_waves_45733 = 1;
            
            bool x_45717;
            int32_t x_45718;
            float x_45719;
            bool x_45720;
            int32_t x_45721;
            float x_45722;
            
            offset_45732 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45694,
                          sext_i64_i32(segred_group_sizze_41282))) {
                    x_45717 = ((__local
                                bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694 +
                                                           offset_45732)];
                    x_45718 = ((__local
                                int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694 +
                                                              offset_45732)];
                    x_45719 = ((__local
                                float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694 +
                                                            offset_45732)];
                }
            }
            offset_45732 = 1;
            while (slt32(offset_45732, wave_sizze_45696)) {
                if (slt32(local_tid_45694 + offset_45732,
                          sext_i64_i32(segred_group_sizze_41282)) &&
                    ((local_tid_45694 - squot32(local_tid_45694,
                                                wave_sizze_45696) *
                      wave_sizze_45696) & (2 * offset_45732 - 1)) == 0) {
                    // read array element
                    {
                        x_45720 = ((volatile __local
                                    bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694 +
                                                               offset_45732)];
                        x_45721 = ((volatile __local
                                    int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694 +
                                                                  offset_45732)];
                        x_45722 = ((volatile __local
                                    float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694 +
                                                                offset_45732)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45723;
                        int32_t defunc_1_op_res_45724;
                        
                        if (x_45717) {
                            defunc_1_op_res_45723 = x_45717;
                            defunc_1_op_res_45724 = x_45718;
                        } else {
                            bool x_45725 = x_45720 && x_45720;
                            bool x_45726 = !x_45720;
                            bool y_45727 = x_45717 && x_45726;
                            bool defunc_1_op_res_f_res_45728 = x_45725 ||
                                 y_45727;
                            int32_t defunc_1_op_res_f_res_45729;
                            
                            if (x_45720) {
                                defunc_1_op_res_f_res_45729 = x_45721;
                            } else {
                                defunc_1_op_res_f_res_45729 = x_45718;
                            }
                            defunc_1_op_res_45723 = defunc_1_op_res_f_res_45728;
                            defunc_1_op_res_45724 = defunc_1_op_res_f_res_45729;
                        }
                        
                        float defunc_1_op_res_45730 = x_45719 + x_45722;
                        
                        x_45717 = defunc_1_op_res_45723;
                        x_45718 = defunc_1_op_res_45724;
                        x_45719 = defunc_1_op_res_45730;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694)] =
                            x_45717;
                        ((volatile __local
                          int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694)] =
                            x_45718;
                        ((volatile __local
                          float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694)] =
                            x_45719;
                    }
                }
                offset_45732 *= 2;
            }
            while (slt32(skip_waves_45733,
                         squot32(sext_i64_i32(segred_group_sizze_41282) +
                                 wave_sizze_45696 - 1, wave_sizze_45696))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45732 = skip_waves_45733 * wave_sizze_45696;
                if (slt32(local_tid_45694 + offset_45732,
                          sext_i64_i32(segred_group_sizze_41282)) &&
                    ((local_tid_45694 - squot32(local_tid_45694,
                                                wave_sizze_45696) *
                      wave_sizze_45696) == 0 && (squot32(local_tid_45694,
                                                         wave_sizze_45696) &
                                                 (2 * skip_waves_45733 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45720 = ((__local
                                    bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694 +
                                                               offset_45732)];
                        x_45721 = ((__local
                                    int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694 +
                                                                  offset_45732)];
                        x_45722 = ((__local
                                    float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694 +
                                                                offset_45732)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45723;
                        int32_t defunc_1_op_res_45724;
                        
                        if (x_45717) {
                            defunc_1_op_res_45723 = x_45717;
                            defunc_1_op_res_45724 = x_45718;
                        } else {
                            bool x_45725 = x_45720 && x_45720;
                            bool x_45726 = !x_45720;
                            bool y_45727 = x_45717 && x_45726;
                            bool defunc_1_op_res_f_res_45728 = x_45725 ||
                                 y_45727;
                            int32_t defunc_1_op_res_f_res_45729;
                            
                            if (x_45720) {
                                defunc_1_op_res_f_res_45729 = x_45721;
                            } else {
                                defunc_1_op_res_f_res_45729 = x_45718;
                            }
                            defunc_1_op_res_45723 = defunc_1_op_res_f_res_45728;
                            defunc_1_op_res_45724 = defunc_1_op_res_f_res_45729;
                        }
                        
                        float defunc_1_op_res_45730 = x_45719 + x_45722;
                        
                        x_45717 = defunc_1_op_res_45723;
                        x_45718 = defunc_1_op_res_45724;
                        x_45719 = defunc_1_op_res_45730;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694)] =
                            x_45717;
                        ((__local
                          int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694)] =
                            x_45718;
                        ((__local
                          float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694)] =
                            x_45719;
                    }
                }
                skip_waves_45733 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45694) == 0) {
                    x_acc_45711 = x_45717;
                    x_acc_45712 = x_45718;
                    x_acc_45713 = x_45719;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45694) == 0)) {
                    x_acc_45711 = 0;
                    x_acc_45712 = -1;
                    x_acc_45713 = 0.0F;
                }
            }
        }
        x_41288 = x_acc_45711;
        x_41289 = x_acc_45712;
        x_41290 = x_acc_45713;
        if (groups_per_segment_45680 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45694 == 0) {
                    ((__global bool *) mem_44298)[gtid_41103] = x_acc_45711;
                    ((__global int32_t *) mem_44300)[gtid_41103] = x_acc_45712;
                    ((__global float *) mem_44302)[gtid_41103] = x_acc_45713;
                }
            }
        } else {
            int32_t old_counter_45734;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45694 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45685)[sext_i32_i64(virt_group_id_45708) *
                                                       segred_group_sizze_41282] =
                        x_acc_45711;
                    ((__global
                      int32_t *) group_res_arr_mem_45687)[sext_i32_i64(virt_group_id_45708) *
                                                          segred_group_sizze_41282] =
                        x_acc_45712;
                    ((__global
                      float *) group_res_arr_mem_45689)[sext_i32_i64(virt_group_id_45708) *
                                                        segred_group_sizze_41282] =
                        x_acc_45713;
                    mem_fence_global();
                    old_counter_45734 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45691)[sext_i32_i64(srem32(flat_segment_id_45709,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45704)[0] =
                        old_counter_45734 == groups_per_segment_45680 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45735;
            
            is_last_group_45735 = ((__local bool *) sync_arr_mem_45704)[0];
            if (is_last_group_45735) {
                if (local_tid_45694 == 0) {
                    old_counter_45734 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45691)[sext_i32_i64(srem32(flat_segment_id_45709,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45680));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45736 =
                            sdiv_up64(groups_per_segment_45680,
                                      segred_group_sizze_41282);
                    
                    x_41288 = 0;
                    x_41289 = -1;
                    x_41290 = 0.0F;
                    for (int64_t i_45737 = 0; i_45737 < read_per_thread_45736;
                         i_45737++) {
                        int64_t group_res_id_45738 =
                                sext_i32_i64(local_tid_45694) *
                                read_per_thread_45736 + i_45737;
                        int64_t index_of_group_res_45739 =
                                sext_i32_i64(flat_segment_id_45709) *
                                groups_per_segment_45680 + group_res_id_45738;
                        
                        if (slt64(group_res_id_45738,
                                  groups_per_segment_45680)) {
                            x_41291 = ((__global
                                        bool *) group_res_arr_mem_45685)[index_of_group_res_45739 *
                                                                         segred_group_sizze_41282];
                            x_41292 = ((__global
                                        int32_t *) group_res_arr_mem_45687)[index_of_group_res_45739 *
                                                                            segred_group_sizze_41282];
                            x_41293 = ((__global
                                        float *) group_res_arr_mem_45689)[index_of_group_res_45739 *
                                                                          segred_group_sizze_41282];
                            
                            bool defunc_1_op_res_41294;
                            int32_t defunc_1_op_res_41295;
                            
                            if (x_41288) {
                                defunc_1_op_res_41294 = x_41288;
                                defunc_1_op_res_41295 = x_41289;
                            } else {
                                bool x_41296 = x_41291 && x_41291;
                                bool x_41297 = !x_41291;
                                bool y_41298 = x_41288 && x_41297;
                                bool defunc_1_op_res_f_res_41299 = x_41296 ||
                                     y_41298;
                                int32_t defunc_1_op_res_f_res_41300;
                                
                                if (x_41291) {
                                    defunc_1_op_res_f_res_41300 = x_41292;
                                } else {
                                    defunc_1_op_res_f_res_41300 = x_41289;
                                }
                                defunc_1_op_res_41294 =
                                    defunc_1_op_res_f_res_41299;
                                defunc_1_op_res_41295 =
                                    defunc_1_op_res_f_res_41300;
                            }
                            
                            float defunc_1_op_res_41301 = x_41290 + x_41293;
                            
                            x_41288 = defunc_1_op_res_41294;
                            x_41289 = defunc_1_op_res_41295;
                            x_41290 = defunc_1_op_res_41301;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694)] =
                    x_41288;
                ((__local
                  int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694)] =
                    x_41289;
                ((__local
                  float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694)] =
                    x_41290;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45740;
                    int32_t skip_waves_45741;
                    
                    skip_waves_45741 = 1;
                    
                    bool x_45717;
                    int32_t x_45718;
                    float x_45719;
                    bool x_45720;
                    int32_t x_45721;
                    float x_45722;
                    
                    offset_45740 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45694,
                                  sext_i64_i32(segred_group_sizze_41282))) {
                            x_45717 = ((__local
                                        bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694 +
                                                                   offset_45740)];
                            x_45718 = ((__local
                                        int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694 +
                                                                      offset_45740)];
                            x_45719 = ((__local
                                        float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694 +
                                                                    offset_45740)];
                        }
                    }
                    offset_45740 = 1;
                    while (slt32(offset_45740, wave_sizze_45696)) {
                        if (slt32(local_tid_45694 + offset_45740,
                                  sext_i64_i32(segred_group_sizze_41282)) &&
                            ((local_tid_45694 - squot32(local_tid_45694,
                                                        wave_sizze_45696) *
                              wave_sizze_45696) & (2 * offset_45740 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45720 = ((volatile __local
                                            bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694 +
                                                                       offset_45740)];
                                x_45721 = ((volatile __local
                                            int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694 +
                                                                          offset_45740)];
                                x_45722 = ((volatile __local
                                            float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694 +
                                                                        offset_45740)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45723;
                                int32_t defunc_1_op_res_45724;
                                
                                if (x_45717) {
                                    defunc_1_op_res_45723 = x_45717;
                                    defunc_1_op_res_45724 = x_45718;
                                } else {
                                    bool x_45725 = x_45720 && x_45720;
                                    bool x_45726 = !x_45720;
                                    bool y_45727 = x_45717 && x_45726;
                                    bool defunc_1_op_res_f_res_45728 =
                                         x_45725 || y_45727;
                                    int32_t defunc_1_op_res_f_res_45729;
                                    
                                    if (x_45720) {
                                        defunc_1_op_res_f_res_45729 = x_45721;
                                    } else {
                                        defunc_1_op_res_f_res_45729 = x_45718;
                                    }
                                    defunc_1_op_res_45723 =
                                        defunc_1_op_res_f_res_45728;
                                    defunc_1_op_res_45724 =
                                        defunc_1_op_res_f_res_45729;
                                }
                                
                                float defunc_1_op_res_45730 = x_45719 + x_45722;
                                
                                x_45717 = defunc_1_op_res_45723;
                                x_45718 = defunc_1_op_res_45724;
                                x_45719 = defunc_1_op_res_45730;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694)] =
                                    x_45717;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694)] =
                                    x_45718;
                                ((volatile __local
                                  float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694)] =
                                    x_45719;
                            }
                        }
                        offset_45740 *= 2;
                    }
                    while (slt32(skip_waves_45741,
                                 squot32(sext_i64_i32(segred_group_sizze_41282) +
                                         wave_sizze_45696 - 1,
                                         wave_sizze_45696))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45740 = skip_waves_45741 * wave_sizze_45696;
                        if (slt32(local_tid_45694 + offset_45740,
                                  sext_i64_i32(segred_group_sizze_41282)) &&
                            ((local_tid_45694 - squot32(local_tid_45694,
                                                        wave_sizze_45696) *
                              wave_sizze_45696) == 0 &&
                             (squot32(local_tid_45694, wave_sizze_45696) & (2 *
                                                                            skip_waves_45741 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45720 = ((__local
                                            bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694 +
                                                                       offset_45740)];
                                x_45721 = ((__local
                                            int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694 +
                                                                          offset_45740)];
                                x_45722 = ((__local
                                            float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694 +
                                                                        offset_45740)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45723;
                                int32_t defunc_1_op_res_45724;
                                
                                if (x_45717) {
                                    defunc_1_op_res_45723 = x_45717;
                                    defunc_1_op_res_45724 = x_45718;
                                } else {
                                    bool x_45725 = x_45720 && x_45720;
                                    bool x_45726 = !x_45720;
                                    bool y_45727 = x_45717 && x_45726;
                                    bool defunc_1_op_res_f_res_45728 =
                                         x_45725 || y_45727;
                                    int32_t defunc_1_op_res_f_res_45729;
                                    
                                    if (x_45720) {
                                        defunc_1_op_res_f_res_45729 = x_45721;
                                    } else {
                                        defunc_1_op_res_f_res_45729 = x_45718;
                                    }
                                    defunc_1_op_res_45723 =
                                        defunc_1_op_res_f_res_45728;
                                    defunc_1_op_res_45724 =
                                        defunc_1_op_res_f_res_45729;
                                }
                                
                                float defunc_1_op_res_45730 = x_45719 + x_45722;
                                
                                x_45717 = defunc_1_op_res_45723;
                                x_45718 = defunc_1_op_res_45724;
                                x_45719 = defunc_1_op_res_45730;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45698)[sext_i32_i64(local_tid_45694)] =
                                    x_45717;
                                ((__local
                                  int32_t *) red_arr_mem_45700)[sext_i32_i64(local_tid_45694)] =
                                    x_45718;
                                ((__local
                                  float *) red_arr_mem_45702)[sext_i32_i64(local_tid_45694)] =
                                    x_45719;
                            }
                        }
                        skip_waves_45741 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45694 == 0) {
                            ((__global bool *) mem_44298)[gtid_41103] = x_45717;
                            ((__global int32_t *) mem_44300)[gtid_41103] =
                                x_45718;
                            ((__global float *) mem_44302)[gtid_41103] =
                                x_45719;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41282
}
__kernel void mainzisegred_nonseg_40529(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_45457_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_45455_backing_aligned_1,
                                        int64_t m_29259,
                                        int64_t num_groups_40524, __global
                                        unsigned char *defunc_3_map_res_mem_44237,
                                        __global unsigned char *mem_44242,
                                        __global
                                        unsigned char *mainzicounter_mem_45445,
                                        __global
                                        unsigned char *group_res_arr_mem_45447,
                                        int64_t num_threads_45449)
{
    #define segred_group_sizze_40522 (mainzisegred_group_sizze_40521)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45457_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45457_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45455_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45455_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45450;
    int32_t local_tid_45451;
    int64_t group_sizze_45454;
    int32_t wave_sizze_45453;
    int32_t group_tid_45452;
    
    global_tid_45450 = get_global_id(0);
    local_tid_45451 = get_local_id(0);
    group_sizze_45454 = get_local_size(0);
    wave_sizze_45453 = LOCKSTEP_WIDTH;
    group_tid_45452 = get_group_id(0);
    
    int32_t phys_tid_40529;
    
    phys_tid_40529 = global_tid_45450;
    
    __local char *sync_arr_mem_45455;
    
    sync_arr_mem_45455 = (__local char *) sync_arr_mem_45455_backing_0;
    
    __local char *red_arr_mem_45457;
    
    red_arr_mem_45457 = (__local char *) red_arr_mem_45457_backing_1;
    
    int64_t dummy_40527;
    
    dummy_40527 = 0;
    
    int64_t gtid_40528;
    
    gtid_40528 = 0;
    
    int32_t x_acc_45459;
    int64_t chunk_sizze_45460;
    
    chunk_sizze_45460 = smin64(sdiv_up64(m_29259,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_40522 *
                                         num_groups_40524))),
                               sdiv_up64(m_29259 - sext_i32_i64(phys_tid_40529),
                                         num_threads_45449));
    
    int32_t x_29629;
    int32_t x_29630;
    
    // neutral-initialise the accumulators
    {
        x_acc_45459 = 0;
    }
    for (int64_t i_45464 = 0; i_45464 < chunk_sizze_45460; i_45464++) {
        gtid_40528 = sext_i32_i64(phys_tid_40529) + num_threads_45449 * i_45464;
        // apply map function
        {
            int32_t x_29632 = ((__global
                                int32_t *) defunc_3_map_res_mem_44237)[gtid_40528];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_29629 = x_acc_45459;
            }
            // load new values
            {
                x_29630 = x_29632;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_29631 = smax32(x_29629, x_29630);
                
                // store in accumulator
                {
                    x_acc_45459 = defunc_1_op_res_29631;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_29629 = x_acc_45459;
        ((__local int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451)] =
            x_29629;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45465;
    int32_t skip_waves_45466;
    
    skip_waves_45466 = 1;
    
    int32_t x_45461;
    int32_t x_45462;
    
    offset_45465 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45451, sext_i64_i32(segred_group_sizze_40522))) {
            x_45461 = ((__local
                        int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451 +
                                                      offset_45465)];
        }
    }
    offset_45465 = 1;
    while (slt32(offset_45465, wave_sizze_45453)) {
        if (slt32(local_tid_45451 + offset_45465,
                  sext_i64_i32(segred_group_sizze_40522)) && ((local_tid_45451 -
                                                               squot32(local_tid_45451,
                                                                       wave_sizze_45453) *
                                                               wave_sizze_45453) &
                                                              (2 *
                                                               offset_45465 -
                                                               1)) == 0) {
            // read array element
            {
                x_45462 = ((volatile __local
                            int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451 +
                                                          offset_45465)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45463 = smax32(x_45461, x_45462);
                
                x_45461 = defunc_1_op_res_45463;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451)] =
                    x_45461;
            }
        }
        offset_45465 *= 2;
    }
    while (slt32(skip_waves_45466,
                 squot32(sext_i64_i32(segred_group_sizze_40522) +
                         wave_sizze_45453 - 1, wave_sizze_45453))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45465 = skip_waves_45466 * wave_sizze_45453;
        if (slt32(local_tid_45451 + offset_45465,
                  sext_i64_i32(segred_group_sizze_40522)) && ((local_tid_45451 -
                                                               squot32(local_tid_45451,
                                                                       wave_sizze_45453) *
                                                               wave_sizze_45453) ==
                                                              0 &&
                                                              (squot32(local_tid_45451,
                                                                       wave_sizze_45453) &
                                                               (2 *
                                                                skip_waves_45466 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45462 = ((__local
                            int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451 +
                                                          offset_45465)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45463 = smax32(x_45461, x_45462);
                
                x_45461 = defunc_1_op_res_45463;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451)] =
                    x_45461;
            }
        }
        skip_waves_45466 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45451) == 0) {
            x_acc_45459 = x_45461;
        }
    }
    
    int32_t old_counter_45467;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45451 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45447)[sext_i32_i64(group_tid_45452) *
                                                  segred_group_sizze_40522] =
                x_acc_45459;
            mem_fence_global();
            old_counter_45467 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45445)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45455)[0] = old_counter_45467 ==
                num_groups_40524 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45468;
    
    is_last_group_45468 = ((__local bool *) sync_arr_mem_45455)[0];
    if (is_last_group_45468) {
        if (local_tid_45451 == 0) {
            old_counter_45467 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45445)[0],
                                                      (int) (0 -
                                                             num_groups_40524));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45469 = sdiv_up64(num_groups_40524,
                                                      segred_group_sizze_40522);
            
            x_29629 = 0;
            for (int64_t i_45470 = 0; i_45470 < read_per_thread_45469;
                 i_45470++) {
                int64_t group_res_id_45471 = sext_i32_i64(local_tid_45451) *
                        read_per_thread_45469 + i_45470;
                int64_t index_of_group_res_45472 = group_res_id_45471;
                
                if (slt64(group_res_id_45471, num_groups_40524)) {
                    x_29630 = ((__global
                                int32_t *) group_res_arr_mem_45447)[index_of_group_res_45472 *
                                                                    segred_group_sizze_40522];
                    
                    int32_t defunc_1_op_res_29631;
                    
                    defunc_1_op_res_29631 = smax32(x_29629, x_29630);
                    x_29629 = defunc_1_op_res_29631;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451)] =
            x_29629;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45473;
            int32_t skip_waves_45474;
            
            skip_waves_45474 = 1;
            
            int32_t x_45461;
            int32_t x_45462;
            
            offset_45473 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45451,
                          sext_i64_i32(segred_group_sizze_40522))) {
                    x_45461 = ((__local
                                int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451 +
                                                              offset_45473)];
                }
            }
            offset_45473 = 1;
            while (slt32(offset_45473, wave_sizze_45453)) {
                if (slt32(local_tid_45451 + offset_45473,
                          sext_i64_i32(segred_group_sizze_40522)) &&
                    ((local_tid_45451 - squot32(local_tid_45451,
                                                wave_sizze_45453) *
                      wave_sizze_45453) & (2 * offset_45473 - 1)) == 0) {
                    // read array element
                    {
                        x_45462 = ((volatile __local
                                    int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451 +
                                                                  offset_45473)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45463 = smax32(x_45461,
                                                               x_45462);
                        
                        x_45461 = defunc_1_op_res_45463;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451)] =
                            x_45461;
                    }
                }
                offset_45473 *= 2;
            }
            while (slt32(skip_waves_45474,
                         squot32(sext_i64_i32(segred_group_sizze_40522) +
                                 wave_sizze_45453 - 1, wave_sizze_45453))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45473 = skip_waves_45474 * wave_sizze_45453;
                if (slt32(local_tid_45451 + offset_45473,
                          sext_i64_i32(segred_group_sizze_40522)) &&
                    ((local_tid_45451 - squot32(local_tid_45451,
                                                wave_sizze_45453) *
                      wave_sizze_45453) == 0 && (squot32(local_tid_45451,
                                                         wave_sizze_45453) &
                                                 (2 * skip_waves_45474 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45462 = ((__local
                                    int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451 +
                                                                  offset_45473)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45463 = smax32(x_45461,
                                                               x_45462);
                        
                        x_45461 = defunc_1_op_res_45463;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45457)[sext_i32_i64(local_tid_45451)] =
                            x_45461;
                    }
                }
                skip_waves_45474 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45451 == 0) {
                    ((__global int32_t *) mem_44242)[0] = x_45461;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40522
}
__kernel void mainzisegred_small_38559(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44714_backing_aligned_0,
                                       int64_t N_29258, int64_t m_29259,
                                       int64_t N_29260, int64_t i32_res_29272,
                                       int64_t i32_res_29278,
                                       int64_t num_groups_38698, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43528,
                                       __global unsigned char *mem_43533,
                                       int64_t segment_sizze_nonzzero_44707)
{
    #define segred_group_sizze_38697 (mainzisegred_group_sizze_38553)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44714_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44714_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44709;
    int32_t local_tid_44710;
    int64_t group_sizze_44713;
    int32_t wave_sizze_44712;
    int32_t group_tid_44711;
    
    global_tid_44709 = get_global_id(0);
    local_tid_44710 = get_local_id(0);
    group_sizze_44713 = get_local_size(0);
    wave_sizze_44712 = LOCKSTEP_WIDTH;
    group_tid_44711 = get_group_id(0);
    
    int32_t phys_tid_38559;
    
    phys_tid_38559 = global_tid_44709;
    
    __local char *red_arr_mem_44714;
    
    red_arr_mem_44714 = (__local char *) red_arr_mem_44714_backing_0;
    
    int32_t phys_group_id_44716;
    
    phys_group_id_44716 = get_group_id(0);
    for (int32_t i_44717 = 0; i_44717 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259 * i32_res_29278 *
                                          i32_res_29278,
                                          squot64(segred_group_sizze_38697,
                                                  segment_sizze_nonzzero_44707))) -
                   phys_group_id_44716, sext_i64_i32(num_groups_38698));
         i_44717++) {
        int32_t virt_group_id_44718 = phys_group_id_44716 + i_44717 *
                sext_i64_i32(num_groups_38698);
        int64_t gtid_38546 = squot64(squot64(sext_i32_i64(local_tid_44710),
                                             segment_sizze_nonzzero_44707) +
                                     sext_i32_i64(virt_group_id_44718) *
                                     squot64(segred_group_sizze_38697,
                                             segment_sizze_nonzzero_44707),
                                     i32_res_29278 * i32_res_29278);
        int64_t gtid_38547 = squot64(squot64(sext_i32_i64(local_tid_44710),
                                             segment_sizze_nonzzero_44707) +
                                     sext_i32_i64(virt_group_id_44718) *
                                     squot64(segred_group_sizze_38697,
                                             segment_sizze_nonzzero_44707) -
                                     squot64(squot64(sext_i32_i64(local_tid_44710),
                                                     segment_sizze_nonzzero_44707) +
                                             sext_i32_i64(virt_group_id_44718) *
                                             squot64(segred_group_sizze_38697,
                                                     segment_sizze_nonzzero_44707),
                                             i32_res_29278 * i32_res_29278) *
                                     (i32_res_29278 * i32_res_29278),
                                     i32_res_29278);
        int64_t gtid_38548 = squot64(sext_i32_i64(local_tid_44710),
                                     segment_sizze_nonzzero_44707) +
                sext_i32_i64(virt_group_id_44718) *
                squot64(segred_group_sizze_38697,
                        segment_sizze_nonzzero_44707) -
                squot64(squot64(sext_i32_i64(local_tid_44710),
                                segment_sizze_nonzzero_44707) +
                        sext_i32_i64(virt_group_id_44718) *
                        squot64(segred_group_sizze_38697,
                                segment_sizze_nonzzero_44707), i32_res_29278 *
                        i32_res_29278) * (i32_res_29278 * i32_res_29278) -
                squot64(squot64(sext_i32_i64(local_tid_44710),
                                segment_sizze_nonzzero_44707) +
                        sext_i32_i64(virt_group_id_44718) *
                        squot64(segred_group_sizze_38697,
                                segment_sizze_nonzzero_44707) -
                        squot64(squot64(sext_i32_i64(local_tid_44710),
                                        segment_sizze_nonzzero_44707) +
                                sext_i32_i64(virt_group_id_44718) *
                                squot64(segred_group_sizze_38697,
                                        segment_sizze_nonzzero_44707),
                                i32_res_29278 * i32_res_29278) *
                        (i32_res_29278 * i32_res_29278), i32_res_29278) *
                i32_res_29278;
        int64_t gtid_38558 = srem64(sext_i32_i64(local_tid_44710),
                                    i32_res_29272);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29272) && (((slt64(gtid_38546, m_29259) &&
                                              slt64(gtid_38547,
                                                    i32_res_29278)) &&
                                             slt64(gtid_38548,
                                                   i32_res_29278)) &&
                                            slt64(sext_i32_i64(local_tid_44710),
                                                  i32_res_29272 *
                                                  squot64(segred_group_sizze_38697,
                                                          segment_sizze_nonzzero_44707)))) {
                float x_38707 = ((__global
                                  float *) images_mem_43378)[gtid_38546 *
                                                             N_29260 +
                                                             gtid_38558];
                float x_38708 = ((__global
                                  float *) binop_p_mem_43387)[gtid_38547 *
                                                              N_29258 +
                                                              gtid_38558];
                float x_38709 = ((__global float *) mem_43528)[gtid_38548 *
                                                               N_29258 +
                                                               gtid_38558];
                float x_38710 = x_38708 * x_38709;
                bool isnan_res_38711;
                
                isnan_res_38711 = futrts_isnan32(x_38707);
                
                float y_38712;
                
                if (isnan_res_38711) {
                    y_38712 = 0.0F;
                } else {
                    y_38712 = 1.0F;
                }
                
                float defunc_2_f_res_38713 = x_38710 * y_38712;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)] =
                        defunc_2_f_res_38713;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29272)) {
            // perform segmented scan to imitate reduction
            {
                float x_38701;
                float x_38702;
                float x_44719;
                float x_44720;
                bool ltid_in_bounds_44722;
                
                ltid_in_bounds_44722 = slt64(sext_i32_i64(local_tid_44710),
                                             i32_res_29272 *
                                             squot64(segred_group_sizze_38697,
                                                     segment_sizze_nonzzero_44707));
                
                int32_t skip_threads_44723;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44722) {
                        x_38702 = ((volatile __local
                                    float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)];
                        if ((local_tid_44710 - squot32(local_tid_44710, 32) *
                             32) == 0) {
                            x_38701 = x_38702;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44723 = 1;
                    while (slt32(skip_threads_44723, 32)) {
                        if (sle32(skip_threads_44723, local_tid_44710 -
                                  squot32(local_tid_44710, 32) * 32) &&
                            ltid_in_bounds_44722) {
                            // read operands
                            {
                                x_38701 = ((volatile __local
                                            float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710) -
                                                                        sext_i32_i64(skip_threads_44723)];
                            }
                            // perform operation
                            {
                                bool inactive_44724 =
                                     slt64(srem64(sext_i32_i64(local_tid_44710),
                                                  i32_res_29272),
                                           sext_i32_i64(local_tid_44710) -
                                           sext_i32_i64(local_tid_44710 -
                                           skip_threads_44723));
                                
                                if (inactive_44724) {
                                    x_38701 = x_38702;
                                }
                                if (!inactive_44724) {
                                    float defunc_1_op_res_38703 = x_38701 +
                                          x_38702;
                                    
                                    x_38701 = defunc_1_op_res_38703;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44712, skip_threads_44723)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44723, local_tid_44710 -
                                  squot32(local_tid_44710, 32) * 32) &&
                            ltid_in_bounds_44722) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)] =
                                    x_38701;
                                x_38702 = x_38701;
                            }
                        }
                        if (sle32(wave_sizze_44712, skip_threads_44723)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44723 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44710 - squot32(local_tid_44710, 32) * 32) ==
                        31 && ltid_in_bounds_44722) {
                        ((volatile __local
                          float *) red_arr_mem_44714)[sext_i32_i64(squot32(local_tid_44710,
                                                                           32))] =
                            x_38701;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44725;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44710, 32) == 0 &&
                            ltid_in_bounds_44722) {
                            x_44720 = ((volatile __local
                                        float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)];
                            if ((local_tid_44710 - squot32(local_tid_44710,
                                                           32) * 32) == 0) {
                                x_44719 = x_44720;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44725 = 1;
                        while (slt32(skip_threads_44725, 32)) {
                            if (sle32(skip_threads_44725, local_tid_44710 -
                                      squot32(local_tid_44710, 32) * 32) &&
                                (squot32(local_tid_44710, 32) == 0 &&
                                 ltid_in_bounds_44722)) {
                                // read operands
                                {
                                    x_44719 = ((volatile __local
                                                float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710) -
                                                                            sext_i32_i64(skip_threads_44725)];
                                }
                                // perform operation
                                {
                                    bool inactive_44726 =
                                         slt64(srem64(sext_i32_i64(local_tid_44710 *
                                                      32 + 32 - 1),
                                                      i32_res_29272),
                                               sext_i32_i64(local_tid_44710 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44710 -
                                                             skip_threads_44725) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44726) {
                                        x_44719 = x_44720;
                                    }
                                    if (!inactive_44726) {
                                        float defunc_1_op_res_44721 = x_44719 +
                                              x_44720;
                                        
                                        x_44719 = defunc_1_op_res_44721;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44712, skip_threads_44725)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44725, local_tid_44710 -
                                      squot32(local_tid_44710, 32) * 32) &&
                                (squot32(local_tid_44710, 32) == 0 &&
                                 ltid_in_bounds_44722)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)] =
                                        x_44719;
                                    x_44720 = x_44719;
                                }
                            }
                            if (sle32(wave_sizze_44712, skip_threads_44725)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44725 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44710, 32) == 0 ||
                          !ltid_in_bounds_44722)) {
                        // read operands
                        {
                            x_38702 = x_38701;
                            x_38701 = ((__local
                                        float *) red_arr_mem_44714)[sext_i32_i64(squot32(local_tid_44710,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44727 =
                                 slt64(srem64(sext_i32_i64(local_tid_44710),
                                              i32_res_29272),
                                       sext_i32_i64(local_tid_44710) -
                                       sext_i32_i64(squot32(local_tid_44710,
                                                            32) * 32 - 1));
                            
                            if (inactive_44727) {
                                x_38701 = x_38702;
                            }
                            if (!inactive_44727) {
                                float defunc_1_op_res_38703 = x_38701 + x_38702;
                                
                                x_38701 = defunc_1_op_res_38703;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)] =
                                x_38701;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44710, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44714)[sext_i32_i64(local_tid_44710)] =
                            x_38702;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44718) *
                      squot64(segred_group_sizze_38697,
                              segment_sizze_nonzzero_44707) +
                      sext_i32_i64(local_tid_44710), m_29259 * i32_res_29278 *
                      i32_res_29278) && slt64(sext_i32_i64(local_tid_44710),
                                              squot64(segred_group_sizze_38697,
                                                      segment_sizze_nonzzero_44707))) {
                ((__global
                  float *) mem_43533)[squot64(sext_i32_i64(virt_group_id_44718) *
                                              squot64(segred_group_sizze_38697,
                                                      segment_sizze_nonzzero_44707) +
                                              sext_i32_i64(local_tid_44710),
                                              i32_res_29278 * i32_res_29278) *
                                      (i32_res_29278 * i32_res_29278) +
                                      squot64(sext_i32_i64(virt_group_id_44718) *
                                              squot64(segred_group_sizze_38697,
                                                      segment_sizze_nonzzero_44707) +
                                              sext_i32_i64(local_tid_44710) -
                                              squot64(sext_i32_i64(virt_group_id_44718) *
                                                      squot64(segred_group_sizze_38697,
                                                              segment_sizze_nonzzero_44707) +
                                                      sext_i32_i64(local_tid_44710),
                                                      i32_res_29278 *
                                                      i32_res_29278) *
                                              (i32_res_29278 * i32_res_29278),
                                              i32_res_29278) * i32_res_29278 +
                                      (sext_i32_i64(virt_group_id_44718) *
                                       squot64(segred_group_sizze_38697,
                                               segment_sizze_nonzzero_44707) +
                                       sext_i32_i64(local_tid_44710) -
                                       squot64(sext_i32_i64(virt_group_id_44718) *
                                               squot64(segred_group_sizze_38697,
                                                       segment_sizze_nonzzero_44707) +
                                               sext_i32_i64(local_tid_44710),
                                               i32_res_29278 * i32_res_29278) *
                                       (i32_res_29278 * i32_res_29278) -
                                       squot64(sext_i32_i64(virt_group_id_44718) *
                                               squot64(segred_group_sizze_38697,
                                                       segment_sizze_nonzzero_44707) +
                                               sext_i32_i64(local_tid_44710) -
                                               squot64(sext_i32_i64(virt_group_id_44718) *
                                                       squot64(segred_group_sizze_38697,
                                                               segment_sizze_nonzzero_44707) +
                                                       sext_i32_i64(local_tid_44710),
                                                       i32_res_29278 *
                                                       i32_res_29278) *
                                               (i32_res_29278 * i32_res_29278),
                                               i32_res_29278) *
                                       i32_res_29278)] = ((__local
                                                           float *) red_arr_mem_44714)[(sext_i32_i64(local_tid_44710) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44707 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38697
}
__kernel void mainzisegred_small_39606(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44910_backing_aligned_0,
                                       int64_t N_29258, int64_t m_29259,
                                       int64_t N_29260, int64_t i32_res_29272,
                                       int64_t i32_res_29278,
                                       int64_t num_groups_39659, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *binop_p_mem_43387,
                                       __global unsigned char *mem_43840,
                                       int64_t segment_sizze_nonzzero_44903)
{
    #define segred_group_sizze_39658 (mainzisegred_group_sizze_39600)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44910_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44910_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44905;
    int32_t local_tid_44906;
    int64_t group_sizze_44909;
    int32_t wave_sizze_44908;
    int32_t group_tid_44907;
    
    global_tid_44905 = get_global_id(0);
    local_tid_44906 = get_local_id(0);
    group_sizze_44909 = get_local_size(0);
    wave_sizze_44908 = LOCKSTEP_WIDTH;
    group_tid_44907 = get_group_id(0);
    
    int32_t phys_tid_39606;
    
    phys_tid_39606 = global_tid_44905;
    
    __local char *red_arr_mem_44910;
    
    red_arr_mem_44910 = (__local char *) red_arr_mem_44910_backing_0;
    
    int32_t phys_group_id_44912;
    
    phys_group_id_44912 = get_group_id(0);
    for (int32_t i_44913 = 0; i_44913 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259 * i32_res_29278,
                                          squot64(segred_group_sizze_39658,
                                                  segment_sizze_nonzzero_44903))) -
                   phys_group_id_44912, sext_i64_i32(num_groups_39659));
         i_44913++) {
        int32_t virt_group_id_44914 = phys_group_id_44912 + i_44913 *
                sext_i64_i32(num_groups_39659);
        int64_t gtid_39595 = squot64(squot64(sext_i32_i64(local_tid_44906),
                                             segment_sizze_nonzzero_44903) +
                                     sext_i32_i64(virt_group_id_44914) *
                                     squot64(segred_group_sizze_39658,
                                             segment_sizze_nonzzero_44903),
                                     i32_res_29278);
        int64_t gtid_39596 = squot64(sext_i32_i64(local_tid_44906),
                                     segment_sizze_nonzzero_44903) +
                sext_i32_i64(virt_group_id_44914) *
                squot64(segred_group_sizze_39658,
                        segment_sizze_nonzzero_44903) -
                squot64(squot64(sext_i32_i64(local_tid_44906),
                                segment_sizze_nonzzero_44903) +
                        sext_i32_i64(virt_group_id_44914) *
                        squot64(segred_group_sizze_39658,
                                segment_sizze_nonzzero_44903), i32_res_29278) *
                i32_res_29278;
        int64_t gtid_39605 = srem64(sext_i32_i64(local_tid_44906),
                                    i32_res_29272);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29272) && ((slt64(gtid_39595, m_29259) &&
                                             slt64(gtid_39596,
                                                   i32_res_29278)) &&
                                            slt64(sext_i32_i64(local_tid_44906),
                                                  i32_res_29272 *
                                                  squot64(segred_group_sizze_39658,
                                                          segment_sizze_nonzzero_44903)))) {
                float x_39668 = ((__global
                                  float *) images_mem_43378)[gtid_39595 *
                                                             N_29260 +
                                                             gtid_39605];
                bool isnan_res_39669;
                
                isnan_res_39669 = futrts_isnan32(x_39668);
                
                float defunc_1_f_res_39670;
                
                if (isnan_res_39669) {
                    defunc_1_f_res_39670 = 0.0F;
                } else {
                    float x_39667 = ((__global
                                      float *) binop_p_mem_43387)[gtid_39596 *
                                                                  N_29258 +
                                                                  gtid_39605];
                    float defunc_1_f_res_f_res_39671 = x_39667 * x_39668;
                    
                    defunc_1_f_res_39670 = defunc_1_f_res_f_res_39671;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)] =
                        defunc_1_f_res_39670;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29272)) {
            // perform segmented scan to imitate reduction
            {
                float x_39662;
                float x_39663;
                float x_44915;
                float x_44916;
                bool ltid_in_bounds_44918;
                
                ltid_in_bounds_44918 = slt64(sext_i32_i64(local_tid_44906),
                                             i32_res_29272 *
                                             squot64(segred_group_sizze_39658,
                                                     segment_sizze_nonzzero_44903));
                
                int32_t skip_threads_44919;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44918) {
                        x_39663 = ((volatile __local
                                    float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)];
                        if ((local_tid_44906 - squot32(local_tid_44906, 32) *
                             32) == 0) {
                            x_39662 = x_39663;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44919 = 1;
                    while (slt32(skip_threads_44919, 32)) {
                        if (sle32(skip_threads_44919, local_tid_44906 -
                                  squot32(local_tid_44906, 32) * 32) &&
                            ltid_in_bounds_44918) {
                            // read operands
                            {
                                x_39662 = ((volatile __local
                                            float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906) -
                                                                        sext_i32_i64(skip_threads_44919)];
                            }
                            // perform operation
                            {
                                bool inactive_44920 =
                                     slt64(srem64(sext_i32_i64(local_tid_44906),
                                                  i32_res_29272),
                                           sext_i32_i64(local_tid_44906) -
                                           sext_i32_i64(local_tid_44906 -
                                           skip_threads_44919));
                                
                                if (inactive_44920) {
                                    x_39662 = x_39663;
                                }
                                if (!inactive_44920) {
                                    float defunc_1_op_res_39664 = x_39662 +
                                          x_39663;
                                    
                                    x_39662 = defunc_1_op_res_39664;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44908, skip_threads_44919)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44919, local_tid_44906 -
                                  squot32(local_tid_44906, 32) * 32) &&
                            ltid_in_bounds_44918) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)] =
                                    x_39662;
                                x_39663 = x_39662;
                            }
                        }
                        if (sle32(wave_sizze_44908, skip_threads_44919)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44919 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44906 - squot32(local_tid_44906, 32) * 32) ==
                        31 && ltid_in_bounds_44918) {
                        ((volatile __local
                          float *) red_arr_mem_44910)[sext_i32_i64(squot32(local_tid_44906,
                                                                           32))] =
                            x_39662;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44921;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44906, 32) == 0 &&
                            ltid_in_bounds_44918) {
                            x_44916 = ((volatile __local
                                        float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)];
                            if ((local_tid_44906 - squot32(local_tid_44906,
                                                           32) * 32) == 0) {
                                x_44915 = x_44916;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44921 = 1;
                        while (slt32(skip_threads_44921, 32)) {
                            if (sle32(skip_threads_44921, local_tid_44906 -
                                      squot32(local_tid_44906, 32) * 32) &&
                                (squot32(local_tid_44906, 32) == 0 &&
                                 ltid_in_bounds_44918)) {
                                // read operands
                                {
                                    x_44915 = ((volatile __local
                                                float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906) -
                                                                            sext_i32_i64(skip_threads_44921)];
                                }
                                // perform operation
                                {
                                    bool inactive_44922 =
                                         slt64(srem64(sext_i32_i64(local_tid_44906 *
                                                      32 + 32 - 1),
                                                      i32_res_29272),
                                               sext_i32_i64(local_tid_44906 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44906 -
                                                             skip_threads_44921) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44922) {
                                        x_44915 = x_44916;
                                    }
                                    if (!inactive_44922) {
                                        float defunc_1_op_res_44917 = x_44915 +
                                              x_44916;
                                        
                                        x_44915 = defunc_1_op_res_44917;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44908, skip_threads_44921)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44921, local_tid_44906 -
                                      squot32(local_tid_44906, 32) * 32) &&
                                (squot32(local_tid_44906, 32) == 0 &&
                                 ltid_in_bounds_44918)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)] =
                                        x_44915;
                                    x_44916 = x_44915;
                                }
                            }
                            if (sle32(wave_sizze_44908, skip_threads_44921)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44921 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44906, 32) == 0 ||
                          !ltid_in_bounds_44918)) {
                        // read operands
                        {
                            x_39663 = x_39662;
                            x_39662 = ((__local
                                        float *) red_arr_mem_44910)[sext_i32_i64(squot32(local_tid_44906,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44923 =
                                 slt64(srem64(sext_i32_i64(local_tid_44906),
                                              i32_res_29272),
                                       sext_i32_i64(local_tid_44906) -
                                       sext_i32_i64(squot32(local_tid_44906,
                                                            32) * 32 - 1));
                            
                            if (inactive_44923) {
                                x_39662 = x_39663;
                            }
                            if (!inactive_44923) {
                                float defunc_1_op_res_39664 = x_39662 + x_39663;
                                
                                x_39662 = defunc_1_op_res_39664;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)] =
                                x_39662;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44906, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44910)[sext_i32_i64(local_tid_44906)] =
                            x_39663;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44914) *
                      squot64(segred_group_sizze_39658,
                              segment_sizze_nonzzero_44903) +
                      sext_i32_i64(local_tid_44906), m_29259 * i32_res_29278) &&
                slt64(sext_i32_i64(local_tid_44906),
                      squot64(segred_group_sizze_39658,
                              segment_sizze_nonzzero_44903))) {
                ((__global
                  float *) mem_43840)[squot64(sext_i32_i64(virt_group_id_44914) *
                                              squot64(segred_group_sizze_39658,
                                                      segment_sizze_nonzzero_44903) +
                                              sext_i32_i64(local_tid_44906),
                                              i32_res_29278) * i32_res_29278 +
                                      (sext_i32_i64(virt_group_id_44914) *
                                       squot64(segred_group_sizze_39658,
                                               segment_sizze_nonzzero_44903) +
                                       sext_i32_i64(local_tid_44906) -
                                       squot64(sext_i32_i64(virt_group_id_44914) *
                                               squot64(segred_group_sizze_39658,
                                                       segment_sizze_nonzzero_44903) +
                                               sext_i32_i64(local_tid_44906),
                                               i32_res_29278) *
                                       i32_res_29278)] = ((__local
                                                           float *) red_arr_mem_44910)[(sext_i32_i64(local_tid_44906) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44903 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39658
}
__kernel void mainzisegred_small_39743(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44998_backing_aligned_0,
                                       int64_t m_29259, int64_t i32_res_29278,
                                       int64_t num_groups_39792, __global
                                       unsigned char *defunc_3_map_res_mem_43625,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43846,
                                       __global unsigned char *mem_43906,
                                       int64_t segment_sizze_nonzzero_44991)
{
    #define segred_group_sizze_39791 (mainzisegred_group_sizze_39737)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44998_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44998_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44993;
    int32_t local_tid_44994;
    int64_t group_sizze_44997;
    int32_t wave_sizze_44996;
    int32_t group_tid_44995;
    
    global_tid_44993 = get_global_id(0);
    local_tid_44994 = get_local_id(0);
    group_sizze_44997 = get_local_size(0);
    wave_sizze_44996 = LOCKSTEP_WIDTH;
    group_tid_44995 = get_group_id(0);
    
    int32_t phys_tid_39743;
    
    phys_tid_39743 = global_tid_44993;
    
    __local char *red_arr_mem_44998;
    
    red_arr_mem_44998 = (__local char *) red_arr_mem_44998_backing_0;
    
    int32_t phys_group_id_45000;
    
    phys_group_id_45000 = get_group_id(0);
    for (int32_t i_45001 = 0; i_45001 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259 * i32_res_29278,
                                          squot64(segred_group_sizze_39791,
                                                  segment_sizze_nonzzero_44991))) -
                   phys_group_id_45000, sext_i64_i32(num_groups_39792));
         i_45001++) {
        int32_t virt_group_id_45002 = phys_group_id_45000 + i_45001 *
                sext_i64_i32(num_groups_39792);
        int64_t gtid_39732 = squot64(squot64(sext_i32_i64(local_tid_44994),
                                             segment_sizze_nonzzero_44991) +
                                     sext_i32_i64(virt_group_id_45002) *
                                     squot64(segred_group_sizze_39791,
                                             segment_sizze_nonzzero_44991),
                                     i32_res_29278);
        int64_t gtid_39733 = squot64(sext_i32_i64(local_tid_44994),
                                     segment_sizze_nonzzero_44991) +
                sext_i32_i64(virt_group_id_45002) *
                squot64(segred_group_sizze_39791,
                        segment_sizze_nonzzero_44991) -
                squot64(squot64(sext_i32_i64(local_tid_44994),
                                segment_sizze_nonzzero_44991) +
                        sext_i32_i64(virt_group_id_45002) *
                        squot64(segred_group_sizze_39791,
                                segment_sizze_nonzzero_44991), i32_res_29278) *
                i32_res_29278;
        int64_t gtid_39742 = srem64(sext_i32_i64(local_tid_44994),
                                    i32_res_29278);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29278) && ((slt64(gtid_39732, m_29259) &&
                                             slt64(gtid_39733,
                                                   i32_res_29278)) &&
                                            slt64(sext_i32_i64(local_tid_44994),
                                                  i32_res_29278 *
                                                  squot64(segred_group_sizze_39791,
                                                          segment_sizze_nonzzero_44991)))) {
                float x_39801 = ((__global
                                  float *) defunc_3_map_res_mem_43846)[gtid_39732 *
                                                                       i32_res_29278 +
                                                                       gtid_39742];
                float x_39802 = ((__global
                                  float *) defunc_3_map_res_mem_43625)[gtid_39732 *
                                                                       (i32_res_29278 *
                                                                        i32_res_29278) +
                                                                       gtid_39733 *
                                                                       i32_res_29278 +
                                                                       gtid_39742];
                float defunc_1_f_res_39803 = x_39801 * x_39802;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)] =
                        defunc_1_f_res_39803;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29278)) {
            // perform segmented scan to imitate reduction
            {
                float x_39795;
                float x_39796;
                float x_45003;
                float x_45004;
                bool ltid_in_bounds_45006;
                
                ltid_in_bounds_45006 = slt64(sext_i32_i64(local_tid_44994),
                                             i32_res_29278 *
                                             squot64(segred_group_sizze_39791,
                                                     segment_sizze_nonzzero_44991));
                
                int32_t skip_threads_45007;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45006) {
                        x_39796 = ((volatile __local
                                    float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)];
                        if ((local_tid_44994 - squot32(local_tid_44994, 32) *
                             32) == 0) {
                            x_39795 = x_39796;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45007 = 1;
                    while (slt32(skip_threads_45007, 32)) {
                        if (sle32(skip_threads_45007, local_tid_44994 -
                                  squot32(local_tid_44994, 32) * 32) &&
                            ltid_in_bounds_45006) {
                            // read operands
                            {
                                x_39795 = ((volatile __local
                                            float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994) -
                                                                        sext_i32_i64(skip_threads_45007)];
                            }
                            // perform operation
                            {
                                bool inactive_45008 =
                                     slt64(srem64(sext_i32_i64(local_tid_44994),
                                                  i32_res_29278),
                                           sext_i32_i64(local_tid_44994) -
                                           sext_i32_i64(local_tid_44994 -
                                           skip_threads_45007));
                                
                                if (inactive_45008) {
                                    x_39795 = x_39796;
                                }
                                if (!inactive_45008) {
                                    float defunc_1_op_res_39797 = x_39795 +
                                          x_39796;
                                    
                                    x_39795 = defunc_1_op_res_39797;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44996, skip_threads_45007)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45007, local_tid_44994 -
                                  squot32(local_tid_44994, 32) * 32) &&
                            ltid_in_bounds_45006) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)] =
                                    x_39795;
                                x_39796 = x_39795;
                            }
                        }
                        if (sle32(wave_sizze_44996, skip_threads_45007)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45007 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44994 - squot32(local_tid_44994, 32) * 32) ==
                        31 && ltid_in_bounds_45006) {
                        ((volatile __local
                          float *) red_arr_mem_44998)[sext_i32_i64(squot32(local_tid_44994,
                                                                           32))] =
                            x_39795;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45009;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44994, 32) == 0 &&
                            ltid_in_bounds_45006) {
                            x_45004 = ((volatile __local
                                        float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)];
                            if ((local_tid_44994 - squot32(local_tid_44994,
                                                           32) * 32) == 0) {
                                x_45003 = x_45004;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45009 = 1;
                        while (slt32(skip_threads_45009, 32)) {
                            if (sle32(skip_threads_45009, local_tid_44994 -
                                      squot32(local_tid_44994, 32) * 32) &&
                                (squot32(local_tid_44994, 32) == 0 &&
                                 ltid_in_bounds_45006)) {
                                // read operands
                                {
                                    x_45003 = ((volatile __local
                                                float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994) -
                                                                            sext_i32_i64(skip_threads_45009)];
                                }
                                // perform operation
                                {
                                    bool inactive_45010 =
                                         slt64(srem64(sext_i32_i64(local_tid_44994 *
                                                      32 + 32 - 1),
                                                      i32_res_29278),
                                               sext_i32_i64(local_tid_44994 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44994 -
                                                             skip_threads_45009) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45010) {
                                        x_45003 = x_45004;
                                    }
                                    if (!inactive_45010) {
                                        float defunc_1_op_res_45005 = x_45003 +
                                              x_45004;
                                        
                                        x_45003 = defunc_1_op_res_45005;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44996, skip_threads_45009)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45009, local_tid_44994 -
                                      squot32(local_tid_44994, 32) * 32) &&
                                (squot32(local_tid_44994, 32) == 0 &&
                                 ltid_in_bounds_45006)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)] =
                                        x_45003;
                                    x_45004 = x_45003;
                                }
                            }
                            if (sle32(wave_sizze_44996, skip_threads_45009)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45009 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44994, 32) == 0 ||
                          !ltid_in_bounds_45006)) {
                        // read operands
                        {
                            x_39796 = x_39795;
                            x_39795 = ((__local
                                        float *) red_arr_mem_44998)[sext_i32_i64(squot32(local_tid_44994,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45011 =
                                 slt64(srem64(sext_i32_i64(local_tid_44994),
                                              i32_res_29278),
                                       sext_i32_i64(local_tid_44994) -
                                       sext_i32_i64(squot32(local_tid_44994,
                                                            32) * 32 - 1));
                            
                            if (inactive_45011) {
                                x_39795 = x_39796;
                            }
                            if (!inactive_45011) {
                                float defunc_1_op_res_39797 = x_39795 + x_39796;
                                
                                x_39795 = defunc_1_op_res_39797;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)] =
                                x_39795;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44994, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44998)[sext_i32_i64(local_tid_44994)] =
                            x_39796;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45002) *
                      squot64(segred_group_sizze_39791,
                              segment_sizze_nonzzero_44991) +
                      sext_i32_i64(local_tid_44994), m_29259 * i32_res_29278) &&
                slt64(sext_i32_i64(local_tid_44994),
                      squot64(segred_group_sizze_39791,
                              segment_sizze_nonzzero_44991))) {
                ((__global
                  float *) mem_43906)[squot64(sext_i32_i64(virt_group_id_45002) *
                                              squot64(segred_group_sizze_39791,
                                                      segment_sizze_nonzzero_44991) +
                                              sext_i32_i64(local_tid_44994),
                                              i32_res_29278) * i32_res_29278 +
                                      (sext_i32_i64(virt_group_id_45002) *
                                       squot64(segred_group_sizze_39791,
                                               segment_sizze_nonzzero_44991) +
                                       sext_i32_i64(local_tid_44994) -
                                       squot64(sext_i32_i64(virt_group_id_45002) *
                                               squot64(segred_group_sizze_39791,
                                                       segment_sizze_nonzzero_44991) +
                                               sext_i32_i64(local_tid_44994),
                                               i32_res_29278) *
                                       i32_res_29278)] = ((__local
                                                           float *) red_arr_mem_44998)[(sext_i32_i64(local_tid_44994) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44991 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39791
}
__kernel void mainzisegred_small_39873(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45130_backing_aligned_0,
                                       int64_t N_29258, int64_t m_29259,
                                       int64_t i32_res_29278,
                                       int64_t num_groups_39920, __global
                                       unsigned char *mem_43394, __global
                                       unsigned char *defunc_4_map_res_mem_43912,
                                       __global unsigned char *mem_44130,
                                       int64_t segment_sizze_nonzzero_45123)
{
    #define segred_group_sizze_39919 (mainzisegred_group_sizze_39867)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45130_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45130_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45125;
    int32_t local_tid_45126;
    int64_t group_sizze_45129;
    int32_t wave_sizze_45128;
    int32_t group_tid_45127;
    
    global_tid_45125 = get_global_id(0);
    local_tid_45126 = get_local_id(0);
    group_sizze_45129 = get_local_size(0);
    wave_sizze_45128 = LOCKSTEP_WIDTH;
    group_tid_45127 = get_group_id(0);
    
    int32_t phys_tid_39873;
    
    phys_tid_39873 = global_tid_45125;
    
    __local char *red_arr_mem_45130;
    
    red_arr_mem_45130 = (__local char *) red_arr_mem_45130_backing_0;
    
    int32_t phys_group_id_45132;
    
    phys_group_id_45132 = get_group_id(0);
    for (int32_t i_45133 = 0; i_45133 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259 * N_29258,
                                          squot64(segred_group_sizze_39919,
                                                  segment_sizze_nonzzero_45123))) -
                   phys_group_id_45132, sext_i64_i32(num_groups_39920));
         i_45133++) {
        int32_t virt_group_id_45134 = phys_group_id_45132 + i_45133 *
                sext_i64_i32(num_groups_39920);
        int64_t gtid_39862 = squot64(squot64(sext_i32_i64(local_tid_45126),
                                             segment_sizze_nonzzero_45123) +
                                     sext_i32_i64(virt_group_id_45134) *
                                     squot64(segred_group_sizze_39919,
                                             segment_sizze_nonzzero_45123),
                                     N_29258);
        int64_t gtid_39863 = squot64(sext_i32_i64(local_tid_45126),
                                     segment_sizze_nonzzero_45123) +
                sext_i32_i64(virt_group_id_45134) *
                squot64(segred_group_sizze_39919,
                        segment_sizze_nonzzero_45123) -
                squot64(squot64(sext_i32_i64(local_tid_45126),
                                segment_sizze_nonzzero_45123) +
                        sext_i32_i64(virt_group_id_45134) *
                        squot64(segred_group_sizze_39919,
                                segment_sizze_nonzzero_45123), N_29258) *
                N_29258;
        int64_t gtid_39872 = srem64(sext_i32_i64(local_tid_45126),
                                    i32_res_29278);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29278) && ((slt64(gtid_39862, m_29259) &&
                                             slt64(gtid_39863, N_29258)) &&
                                            slt64(sext_i32_i64(local_tid_45126),
                                                  i32_res_29278 *
                                                  squot64(segred_group_sizze_39919,
                                                          segment_sizze_nonzzero_45123)))) {
                float x_39928 = ((__global
                                  float *) defunc_4_map_res_mem_43912)[gtid_39862 *
                                                                       i32_res_29278 +
                                                                       gtid_39872];
                float x_39929 = ((__global float *) mem_43394)[gtid_39863 *
                                                               i32_res_29278 +
                                                               gtid_39872];
                float defunc_1_f_res_39930 = x_39928 * x_39929;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)] =
                        defunc_1_f_res_39930;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29278)) {
            // perform segmented scan to imitate reduction
            {
                float x_39923;
                float x_39924;
                float x_45135;
                float x_45136;
                bool ltid_in_bounds_45138;
                
                ltid_in_bounds_45138 = slt64(sext_i32_i64(local_tid_45126),
                                             i32_res_29278 *
                                             squot64(segred_group_sizze_39919,
                                                     segment_sizze_nonzzero_45123));
                
                int32_t skip_threads_45139;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45138) {
                        x_39924 = ((volatile __local
                                    float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)];
                        if ((local_tid_45126 - squot32(local_tid_45126, 32) *
                             32) == 0) {
                            x_39923 = x_39924;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45139 = 1;
                    while (slt32(skip_threads_45139, 32)) {
                        if (sle32(skip_threads_45139, local_tid_45126 -
                                  squot32(local_tid_45126, 32) * 32) &&
                            ltid_in_bounds_45138) {
                            // read operands
                            {
                                x_39923 = ((volatile __local
                                            float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126) -
                                                                        sext_i32_i64(skip_threads_45139)];
                            }
                            // perform operation
                            {
                                bool inactive_45140 =
                                     slt64(srem64(sext_i32_i64(local_tid_45126),
                                                  i32_res_29278),
                                           sext_i32_i64(local_tid_45126) -
                                           sext_i32_i64(local_tid_45126 -
                                           skip_threads_45139));
                                
                                if (inactive_45140) {
                                    x_39923 = x_39924;
                                }
                                if (!inactive_45140) {
                                    float defunc_1_op_res_39925 = x_39923 +
                                          x_39924;
                                    
                                    x_39923 = defunc_1_op_res_39925;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45128, skip_threads_45139)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45139, local_tid_45126 -
                                  squot32(local_tid_45126, 32) * 32) &&
                            ltid_in_bounds_45138) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)] =
                                    x_39923;
                                x_39924 = x_39923;
                            }
                        }
                        if (sle32(wave_sizze_45128, skip_threads_45139)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45139 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45126 - squot32(local_tid_45126, 32) * 32) ==
                        31 && ltid_in_bounds_45138) {
                        ((volatile __local
                          float *) red_arr_mem_45130)[sext_i32_i64(squot32(local_tid_45126,
                                                                           32))] =
                            x_39923;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45141;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45126, 32) == 0 &&
                            ltid_in_bounds_45138) {
                            x_45136 = ((volatile __local
                                        float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)];
                            if ((local_tid_45126 - squot32(local_tid_45126,
                                                           32) * 32) == 0) {
                                x_45135 = x_45136;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45141 = 1;
                        while (slt32(skip_threads_45141, 32)) {
                            if (sle32(skip_threads_45141, local_tid_45126 -
                                      squot32(local_tid_45126, 32) * 32) &&
                                (squot32(local_tid_45126, 32) == 0 &&
                                 ltid_in_bounds_45138)) {
                                // read operands
                                {
                                    x_45135 = ((volatile __local
                                                float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126) -
                                                                            sext_i32_i64(skip_threads_45141)];
                                }
                                // perform operation
                                {
                                    bool inactive_45142 =
                                         slt64(srem64(sext_i32_i64(local_tid_45126 *
                                                      32 + 32 - 1),
                                                      i32_res_29278),
                                               sext_i32_i64(local_tid_45126 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45126 -
                                                             skip_threads_45141) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45142) {
                                        x_45135 = x_45136;
                                    }
                                    if (!inactive_45142) {
                                        float defunc_1_op_res_45137 = x_45135 +
                                              x_45136;
                                        
                                        x_45135 = defunc_1_op_res_45137;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45128, skip_threads_45141)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45141, local_tid_45126 -
                                      squot32(local_tid_45126, 32) * 32) &&
                                (squot32(local_tid_45126, 32) == 0 &&
                                 ltid_in_bounds_45138)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)] =
                                        x_45135;
                                    x_45136 = x_45135;
                                }
                            }
                            if (sle32(wave_sizze_45128, skip_threads_45141)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45141 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45126, 32) == 0 ||
                          !ltid_in_bounds_45138)) {
                        // read operands
                        {
                            x_39924 = x_39923;
                            x_39923 = ((__local
                                        float *) red_arr_mem_45130)[sext_i32_i64(squot32(local_tid_45126,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45143 =
                                 slt64(srem64(sext_i32_i64(local_tid_45126),
                                              i32_res_29278),
                                       sext_i32_i64(local_tid_45126) -
                                       sext_i32_i64(squot32(local_tid_45126,
                                                            32) * 32 - 1));
                            
                            if (inactive_45143) {
                                x_39923 = x_39924;
                            }
                            if (!inactive_45143) {
                                float defunc_1_op_res_39925 = x_39923 + x_39924;
                                
                                x_39923 = defunc_1_op_res_39925;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)] =
                                x_39923;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45126, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45130)[sext_i32_i64(local_tid_45126)] =
                            x_39924;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45134) *
                      squot64(segred_group_sizze_39919,
                              segment_sizze_nonzzero_45123) +
                      sext_i32_i64(local_tid_45126), m_29259 * N_29258) &&
                slt64(sext_i32_i64(local_tid_45126),
                      squot64(segred_group_sizze_39919,
                              segment_sizze_nonzzero_45123))) {
                ((__global
                  float *) mem_44130)[squot64(sext_i32_i64(virt_group_id_45134) *
                                              squot64(segred_group_sizze_39919,
                                                      segment_sizze_nonzzero_45123) +
                                              sext_i32_i64(local_tid_45126),
                                              N_29258) * N_29258 +
                                      (sext_i32_i64(virt_group_id_45134) *
                                       squot64(segred_group_sizze_39919,
                                               segment_sizze_nonzzero_45123) +
                                       sext_i32_i64(local_tid_45126) -
                                       squot64(sext_i32_i64(virt_group_id_45134) *
                                               squot64(segred_group_sizze_39919,
                                                       segment_sizze_nonzzero_45123) +
                                               sext_i32_i64(local_tid_45126),
                                               N_29258) * N_29258)] = ((__local
                                                                        float *) red_arr_mem_45130)[(sext_i32_i64(local_tid_45126) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_45123 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39919
}
__kernel void mainzisegred_small_40439(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45384_backing_aligned_0,
                                       int64_t N_29258, int64_t m_29259,
                                       int64_t i32_res_29272,
                                       int64_t num_groups_40486, __global
                                       unsigned char *defunc_4_map_res_mem_44174,
                                       __global unsigned char *mem_44225,
                                       __global unsigned char *mem_44228,
                                       int64_t segment_sizze_nonzzero_45377)
{
    #define segred_group_sizze_40485 (mainzisegred_group_sizze_40433)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45384_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45384_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45379;
    int32_t local_tid_45380;
    int64_t group_sizze_45383;
    int32_t wave_sizze_45382;
    int32_t group_tid_45381;
    
    global_tid_45379 = get_global_id(0);
    local_tid_45380 = get_local_id(0);
    group_sizze_45383 = get_local_size(0);
    wave_sizze_45382 = LOCKSTEP_WIDTH;
    group_tid_45381 = get_group_id(0);
    
    int32_t phys_tid_40439;
    
    phys_tid_40439 = global_tid_45379;
    
    __local char *red_arr_mem_45384;
    
    red_arr_mem_45384 = (__local char *) red_arr_mem_45384_backing_0;
    
    int32_t phys_group_id_45386;
    
    phys_group_id_45386 = get_group_id(0);
    for (int32_t i_45387 = 0; i_45387 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259,
                                          squot64(segred_group_sizze_40485,
                                                  segment_sizze_nonzzero_45377))) -
                   phys_group_id_45386, sext_i64_i32(num_groups_40486));
         i_45387++) {
        int32_t virt_group_id_45388 = phys_group_id_45386 + i_45387 *
                sext_i64_i32(num_groups_40486);
        int64_t gtid_40430 = squot64(sext_i32_i64(local_tid_45380),
                                     segment_sizze_nonzzero_45377) +
                sext_i32_i64(virt_group_id_45388) *
                squot64(segred_group_sizze_40485, segment_sizze_nonzzero_45377);
        int64_t gtid_40438 = srem64(sext_i32_i64(local_tid_45380),
                                    i32_res_29272);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29272) && (slt64(gtid_40430, m_29259) &&
                                            slt64(sext_i32_i64(local_tid_45380),
                                                  i32_res_29272 *
                                                  squot64(segred_group_sizze_40485,
                                                          segment_sizze_nonzzero_45377)))) {
                int32_t defunc_0_f_res_40493 = ((__global
                                                 int32_t *) mem_44225)[gtid_40430];
                int32_t index_primexp_41417 = sext_i64_i32(gtid_40438);
                bool cond_40495 = slt32(index_primexp_41417,
                                        defunc_0_f_res_40493);
                float defunc_0_f_res_40496;
                
                if (cond_40495) {
                    int64_t i_40497 = sext_i32_i64(index_primexp_41417);
                    float defunc_0_f_res_t_res_40498 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_40430 *
                                                                                              N_29258 +
                                                                                              i_40497];
                    
                    defunc_0_f_res_40496 = defunc_0_f_res_t_res_40498;
                } else {
                    defunc_0_f_res_40496 = 0.0F;
                }
                
                float defunc_0_f_res_40499 = defunc_0_f_res_40496 *
                      defunc_0_f_res_40496;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                        defunc_0_f_res_40499;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29272)) {
            // perform segmented scan to imitate reduction
            {
                float x_40489;
                float x_40490;
                float x_45389;
                float x_45390;
                bool ltid_in_bounds_45392;
                
                ltid_in_bounds_45392 = slt64(sext_i32_i64(local_tid_45380),
                                             i32_res_29272 *
                                             squot64(segred_group_sizze_40485,
                                                     segment_sizze_nonzzero_45377));
                
                int32_t skip_threads_45393;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45392) {
                        x_40490 = ((volatile __local
                                    float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)];
                        if ((local_tid_45380 - squot32(local_tid_45380, 32) *
                             32) == 0) {
                            x_40489 = x_40490;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45393 = 1;
                    while (slt32(skip_threads_45393, 32)) {
                        if (sle32(skip_threads_45393, local_tid_45380 -
                                  squot32(local_tid_45380, 32) * 32) &&
                            ltid_in_bounds_45392) {
                            // read operands
                            {
                                x_40489 = ((volatile __local
                                            float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380) -
                                                                        sext_i32_i64(skip_threads_45393)];
                            }
                            // perform operation
                            {
                                bool inactive_45394 =
                                     slt64(srem64(sext_i32_i64(local_tid_45380),
                                                  i32_res_29272),
                                           sext_i32_i64(local_tid_45380) -
                                           sext_i32_i64(local_tid_45380 -
                                           skip_threads_45393));
                                
                                if (inactive_45394) {
                                    x_40489 = x_40490;
                                }
                                if (!inactive_45394) {
                                    float defunc_1_op_res_40491 = x_40489 +
                                          x_40490;
                                    
                                    x_40489 = defunc_1_op_res_40491;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45382, skip_threads_45393)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45393, local_tid_45380 -
                                  squot32(local_tid_45380, 32) * 32) &&
                            ltid_in_bounds_45392) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                                    x_40489;
                                x_40490 = x_40489;
                            }
                        }
                        if (sle32(wave_sizze_45382, skip_threads_45393)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45393 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45380 - squot32(local_tid_45380, 32) * 32) ==
                        31 && ltid_in_bounds_45392) {
                        ((volatile __local
                          float *) red_arr_mem_45384)[sext_i32_i64(squot32(local_tid_45380,
                                                                           32))] =
                            x_40489;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45395;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45380, 32) == 0 &&
                            ltid_in_bounds_45392) {
                            x_45390 = ((volatile __local
                                        float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)];
                            if ((local_tid_45380 - squot32(local_tid_45380,
                                                           32) * 32) == 0) {
                                x_45389 = x_45390;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45395 = 1;
                        while (slt32(skip_threads_45395, 32)) {
                            if (sle32(skip_threads_45395, local_tid_45380 -
                                      squot32(local_tid_45380, 32) * 32) &&
                                (squot32(local_tid_45380, 32) == 0 &&
                                 ltid_in_bounds_45392)) {
                                // read operands
                                {
                                    x_45389 = ((volatile __local
                                                float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380) -
                                                                            sext_i32_i64(skip_threads_45395)];
                                }
                                // perform operation
                                {
                                    bool inactive_45396 =
                                         slt64(srem64(sext_i32_i64(local_tid_45380 *
                                                      32 + 32 - 1),
                                                      i32_res_29272),
                                               sext_i32_i64(local_tid_45380 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45380 -
                                                             skip_threads_45395) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45396) {
                                        x_45389 = x_45390;
                                    }
                                    if (!inactive_45396) {
                                        float defunc_1_op_res_45391 = x_45389 +
                                              x_45390;
                                        
                                        x_45389 = defunc_1_op_res_45391;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45382, skip_threads_45395)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45395, local_tid_45380 -
                                      squot32(local_tid_45380, 32) * 32) &&
                                (squot32(local_tid_45380, 32) == 0 &&
                                 ltid_in_bounds_45392)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                                        x_45389;
                                    x_45390 = x_45389;
                                }
                            }
                            if (sle32(wave_sizze_45382, skip_threads_45395)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45395 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45380, 32) == 0 ||
                          !ltid_in_bounds_45392)) {
                        // read operands
                        {
                            x_40490 = x_40489;
                            x_40489 = ((__local
                                        float *) red_arr_mem_45384)[sext_i32_i64(squot32(local_tid_45380,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45397 =
                                 slt64(srem64(sext_i32_i64(local_tid_45380),
                                              i32_res_29272),
                                       sext_i32_i64(local_tid_45380) -
                                       sext_i32_i64(squot32(local_tid_45380,
                                                            32) * 32 - 1));
                            
                            if (inactive_45397) {
                                x_40489 = x_40490;
                            }
                            if (!inactive_45397) {
                                float defunc_1_op_res_40491 = x_40489 + x_40490;
                                
                                x_40489 = defunc_1_op_res_40491;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                                x_40489;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45380, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                            x_40490;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45388) *
                      squot64(segred_group_sizze_40485,
                              segment_sizze_nonzzero_45377) +
                      sext_i32_i64(local_tid_45380), m_29259) &&
                slt64(sext_i32_i64(local_tid_45380),
                      squot64(segred_group_sizze_40485,
                              segment_sizze_nonzzero_45377))) {
                ((__global
                  float *) mem_44228)[sext_i32_i64(virt_group_id_45388) *
                                      squot64(segred_group_sizze_40485,
                                              segment_sizze_nonzzero_45377) +
                                      sext_i32_i64(local_tid_45380)] = ((__local
                                                                         float *) red_arr_mem_45384)[(sext_i32_i64(local_tid_45380) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45377 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40485
}
__kernel void mainzisegred_small_40460(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45324_backing_aligned_0,
                                       int64_t m_29259, int64_t N_29260,
                                       int64_t i32_res_29272,
                                       int64_t num_groups_40472, __global
                                       unsigned char *images_mem_43378, __global
                                       unsigned char *mem_44225,
                                       int64_t segment_sizze_nonzzero_45317)
{
    #define segred_group_sizze_40471 (mainzisegred_group_sizze_40454)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45324_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45324_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45319;
    int32_t local_tid_45320;
    int64_t group_sizze_45323;
    int32_t wave_sizze_45322;
    int32_t group_tid_45321;
    
    global_tid_45319 = get_global_id(0);
    local_tid_45320 = get_local_id(0);
    group_sizze_45323 = get_local_size(0);
    wave_sizze_45322 = LOCKSTEP_WIDTH;
    group_tid_45321 = get_group_id(0);
    
    int32_t phys_tid_40460;
    
    phys_tid_40460 = global_tid_45319;
    
    __local char *red_arr_mem_45324;
    
    red_arr_mem_45324 = (__local char *) red_arr_mem_45324_backing_0;
    
    int32_t phys_group_id_45326;
    
    phys_group_id_45326 = get_group_id(0);
    for (int32_t i_45327 = 0; i_45327 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259,
                                          squot64(segred_group_sizze_40471,
                                                  segment_sizze_nonzzero_45317))) -
                   phys_group_id_45326, sext_i64_i32(num_groups_40472));
         i_45327++) {
        int32_t virt_group_id_45328 = phys_group_id_45326 + i_45327 *
                sext_i64_i32(num_groups_40472);
        int64_t gtid_40451 = squot64(sext_i32_i64(local_tid_45320),
                                     segment_sizze_nonzzero_45317) +
                sext_i32_i64(virt_group_id_45328) *
                squot64(segred_group_sizze_40471, segment_sizze_nonzzero_45317);
        int64_t gtid_40459 = srem64(sext_i32_i64(local_tid_45320),
                                    i32_res_29272);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29272) && (slt64(gtid_40451, m_29259) &&
                                            slt64(sext_i32_i64(local_tid_45320),
                                                  i32_res_29272 *
                                                  squot64(segred_group_sizze_40471,
                                                          segment_sizze_nonzzero_45317)))) {
                float x_40479 = ((__global
                                  float *) images_mem_43378)[gtid_40451 *
                                                             N_29260 +
                                                             gtid_40459];
                bool isnan_res_40480;
                
                isnan_res_40480 = futrts_isnan32(x_40479);
                
                bool cond_40481 = !isnan_res_40480;
                int32_t defunc_0_f_res_40482 = btoi_bool_i32(cond_40481);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)] =
                        defunc_0_f_res_40482;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29272)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_40475;
                int32_t x_40476;
                int32_t x_45329;
                int32_t x_45330;
                bool ltid_in_bounds_45332;
                
                ltid_in_bounds_45332 = slt64(sext_i32_i64(local_tid_45320),
                                             i32_res_29272 *
                                             squot64(segred_group_sizze_40471,
                                                     segment_sizze_nonzzero_45317));
                
                int32_t skip_threads_45333;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45332) {
                        x_40476 = ((volatile __local
                                    int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)];
                        if ((local_tid_45320 - squot32(local_tid_45320, 32) *
                             32) == 0) {
                            x_40475 = x_40476;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45333 = 1;
                    while (slt32(skip_threads_45333, 32)) {
                        if (sle32(skip_threads_45333, local_tid_45320 -
                                  squot32(local_tid_45320, 32) * 32) &&
                            ltid_in_bounds_45332) {
                            // read operands
                            {
                                x_40475 = ((volatile __local
                                            int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320) -
                                                                          sext_i32_i64(skip_threads_45333)];
                            }
                            // perform operation
                            {
                                bool inactive_45334 =
                                     slt64(srem64(sext_i32_i64(local_tid_45320),
                                                  i32_res_29272),
                                           sext_i32_i64(local_tid_45320) -
                                           sext_i32_i64(local_tid_45320 -
                                           skip_threads_45333));
                                
                                if (inactive_45334) {
                                    x_40475 = x_40476;
                                }
                                if (!inactive_45334) {
                                    int32_t defunc_1_op_res_40477 =
                                            add32(x_40475, x_40476);
                                    
                                    x_40475 = defunc_1_op_res_40477;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45322, skip_threads_45333)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45333, local_tid_45320 -
                                  squot32(local_tid_45320, 32) * 32) &&
                            ltid_in_bounds_45332) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)] =
                                    x_40475;
                                x_40476 = x_40475;
                            }
                        }
                        if (sle32(wave_sizze_45322, skip_threads_45333)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45333 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45320 - squot32(local_tid_45320, 32) * 32) ==
                        31 && ltid_in_bounds_45332) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45324)[sext_i32_i64(squot32(local_tid_45320,
                                                                             32))] =
                            x_40475;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45335;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45320, 32) == 0 &&
                            ltid_in_bounds_45332) {
                            x_45330 = ((volatile __local
                                        int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)];
                            if ((local_tid_45320 - squot32(local_tid_45320,
                                                           32) * 32) == 0) {
                                x_45329 = x_45330;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45335 = 1;
                        while (slt32(skip_threads_45335, 32)) {
                            if (sle32(skip_threads_45335, local_tid_45320 -
                                      squot32(local_tid_45320, 32) * 32) &&
                                (squot32(local_tid_45320, 32) == 0 &&
                                 ltid_in_bounds_45332)) {
                                // read operands
                                {
                                    x_45329 = ((volatile __local
                                                int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320) -
                                                                              sext_i32_i64(skip_threads_45335)];
                                }
                                // perform operation
                                {
                                    bool inactive_45336 =
                                         slt64(srem64(sext_i32_i64(local_tid_45320 *
                                                      32 + 32 - 1),
                                                      i32_res_29272),
                                               sext_i32_i64(local_tid_45320 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45320 -
                                                             skip_threads_45335) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45336) {
                                        x_45329 = x_45330;
                                    }
                                    if (!inactive_45336) {
                                        int32_t defunc_1_op_res_45331 =
                                                add32(x_45329, x_45330);
                                        
                                        x_45329 = defunc_1_op_res_45331;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45322, skip_threads_45335)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45335, local_tid_45320 -
                                      squot32(local_tid_45320, 32) * 32) &&
                                (squot32(local_tid_45320, 32) == 0 &&
                                 ltid_in_bounds_45332)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)] =
                                        x_45329;
                                    x_45330 = x_45329;
                                }
                            }
                            if (sle32(wave_sizze_45322, skip_threads_45335)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45335 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45320, 32) == 0 ||
                          !ltid_in_bounds_45332)) {
                        // read operands
                        {
                            x_40476 = x_40475;
                            x_40475 = ((__local
                                        int32_t *) red_arr_mem_45324)[sext_i32_i64(squot32(local_tid_45320,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45337 =
                                 slt64(srem64(sext_i32_i64(local_tid_45320),
                                              i32_res_29272),
                                       sext_i32_i64(local_tid_45320) -
                                       sext_i32_i64(squot32(local_tid_45320,
                                                            32) * 32 - 1));
                            
                            if (inactive_45337) {
                                x_40475 = x_40476;
                            }
                            if (!inactive_45337) {
                                int32_t defunc_1_op_res_40477 = add32(x_40475,
                                                                      x_40476);
                                
                                x_40475 = defunc_1_op_res_40477;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)] =
                                x_40475;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45320, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45324)[sext_i32_i64(local_tid_45320)] =
                            x_40476;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45328) *
                      squot64(segred_group_sizze_40471,
                              segment_sizze_nonzzero_45317) +
                      sext_i32_i64(local_tid_45320), m_29259) &&
                slt64(sext_i32_i64(local_tid_45320),
                      squot64(segred_group_sizze_40471,
                              segment_sizze_nonzzero_45317))) {
                ((__global
                  int32_t *) mem_44225)[sext_i32_i64(virt_group_id_45328) *
                                        squot64(segred_group_sizze_40471,
                                                segment_sizze_nonzzero_45317) +
                                        sext_i32_i64(local_tid_45320)] =
                    ((__local
                      int32_t *) red_arr_mem_45324)[(sext_i32_i64(local_tid_45320) +
                                                     1) *
                                                    segment_sizze_nonzzero_45317 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40471
}
__kernel void mainzisegred_small_40611(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45493_backing_aligned_0,
                                       int64_t N_29258, int64_t m_29259,
                                       int64_t i32_res_29633,
                                       int64_t num_groups_40629, __global
                                       unsigned char *defunc_4_map_res_mem_44174,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44237,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44238,
                                       __global unsigned char *mem_44271,
                                       int64_t segment_sizze_nonzzero_45486)
{
    #define segred_group_sizze_40628 (mainzisegred_group_sizze_40605)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45493_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45493_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45488;
    int32_t local_tid_45489;
    int64_t group_sizze_45492;
    int32_t wave_sizze_45491;
    int32_t group_tid_45490;
    
    global_tid_45488 = get_global_id(0);
    local_tid_45489 = get_local_id(0);
    group_sizze_45492 = get_local_size(0);
    wave_sizze_45491 = LOCKSTEP_WIDTH;
    group_tid_45490 = get_group_id(0);
    
    int32_t phys_tid_40611;
    
    phys_tid_40611 = global_tid_45488;
    
    __local char *red_arr_mem_45493;
    
    red_arr_mem_45493 = (__local char *) red_arr_mem_45493_backing_0;
    
    int32_t phys_group_id_45495;
    
    phys_group_id_45495 = get_group_id(0);
    for (int32_t i_45496 = 0; i_45496 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259,
                                          squot64(segred_group_sizze_40628,
                                                  segment_sizze_nonzzero_45486))) -
                   phys_group_id_45495, sext_i64_i32(num_groups_40629));
         i_45496++) {
        int32_t virt_group_id_45497 = phys_group_id_45495 + i_45496 *
                sext_i64_i32(num_groups_40629);
        int64_t gtid_40602 = squot64(sext_i32_i64(local_tid_45489),
                                     segment_sizze_nonzzero_45486) +
                sext_i32_i64(virt_group_id_45497) *
                squot64(segred_group_sizze_40628, segment_sizze_nonzzero_45486);
        int64_t gtid_40610 = srem64(sext_i32_i64(local_tid_45489),
                                    i32_res_29633);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29633) && (slt64(gtid_40602, m_29259) &&
                                            slt64(sext_i32_i64(local_tid_45489),
                                                  i32_res_29633 *
                                                  squot64(segred_group_sizze_40628,
                                                          segment_sizze_nonzzero_45486)))) {
                int32_t x_40637 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44237)[gtid_40602];
                int32_t index_primexp_41422 = sext_i64_i32(gtid_40610);
                bool cond_40639 = slt32(index_primexp_41422, x_40637);
                float defunc_0_f_res_40640;
                
                if (cond_40639) {
                    int32_t x_40636 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_40602];
                    int32_t x_40641 = add32(x_40636, index_primexp_41422);
                    int32_t x_40642 = sub32(x_40641, x_40637);
                    int32_t i_40643 = add32(1, x_40642);
                    int64_t i_40644 = sext_i32_i64(i_40643);
                    float defunc_0_f_res_t_res_40645 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_40602 *
                                                                                              N_29258 +
                                                                                              i_40644];
                    
                    defunc_0_f_res_40640 = defunc_0_f_res_t_res_40645;
                } else {
                    defunc_0_f_res_40640 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)] =
                        defunc_0_f_res_40640;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29633)) {
            // perform segmented scan to imitate reduction
            {
                float x_40632;
                float x_40633;
                float x_45498;
                float x_45499;
                bool ltid_in_bounds_45501;
                
                ltid_in_bounds_45501 = slt64(sext_i32_i64(local_tid_45489),
                                             i32_res_29633 *
                                             squot64(segred_group_sizze_40628,
                                                     segment_sizze_nonzzero_45486));
                
                int32_t skip_threads_45502;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45501) {
                        x_40633 = ((volatile __local
                                    float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)];
                        if ((local_tid_45489 - squot32(local_tid_45489, 32) *
                             32) == 0) {
                            x_40632 = x_40633;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45502 = 1;
                    while (slt32(skip_threads_45502, 32)) {
                        if (sle32(skip_threads_45502, local_tid_45489 -
                                  squot32(local_tid_45489, 32) * 32) &&
                            ltid_in_bounds_45501) {
                            // read operands
                            {
                                x_40632 = ((volatile __local
                                            float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489) -
                                                                        sext_i32_i64(skip_threads_45502)];
                            }
                            // perform operation
                            {
                                bool inactive_45503 =
                                     slt64(srem64(sext_i32_i64(local_tid_45489),
                                                  i32_res_29633),
                                           sext_i32_i64(local_tid_45489) -
                                           sext_i32_i64(local_tid_45489 -
                                           skip_threads_45502));
                                
                                if (inactive_45503) {
                                    x_40632 = x_40633;
                                }
                                if (!inactive_45503) {
                                    float defunc_1_op_res_40634 = x_40632 +
                                          x_40633;
                                    
                                    x_40632 = defunc_1_op_res_40634;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45491, skip_threads_45502)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45502, local_tid_45489 -
                                  squot32(local_tid_45489, 32) * 32) &&
                            ltid_in_bounds_45501) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)] =
                                    x_40632;
                                x_40633 = x_40632;
                            }
                        }
                        if (sle32(wave_sizze_45491, skip_threads_45502)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45502 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45489 - squot32(local_tid_45489, 32) * 32) ==
                        31 && ltid_in_bounds_45501) {
                        ((volatile __local
                          float *) red_arr_mem_45493)[sext_i32_i64(squot32(local_tid_45489,
                                                                           32))] =
                            x_40632;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45504;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45489, 32) == 0 &&
                            ltid_in_bounds_45501) {
                            x_45499 = ((volatile __local
                                        float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)];
                            if ((local_tid_45489 - squot32(local_tid_45489,
                                                           32) * 32) == 0) {
                                x_45498 = x_45499;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45504 = 1;
                        while (slt32(skip_threads_45504, 32)) {
                            if (sle32(skip_threads_45504, local_tid_45489 -
                                      squot32(local_tid_45489, 32) * 32) &&
                                (squot32(local_tid_45489, 32) == 0 &&
                                 ltid_in_bounds_45501)) {
                                // read operands
                                {
                                    x_45498 = ((volatile __local
                                                float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489) -
                                                                            sext_i32_i64(skip_threads_45504)];
                                }
                                // perform operation
                                {
                                    bool inactive_45505 =
                                         slt64(srem64(sext_i32_i64(local_tid_45489 *
                                                      32 + 32 - 1),
                                                      i32_res_29633),
                                               sext_i32_i64(local_tid_45489 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45489 -
                                                             skip_threads_45504) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45505) {
                                        x_45498 = x_45499;
                                    }
                                    if (!inactive_45505) {
                                        float defunc_1_op_res_45500 = x_45498 +
                                              x_45499;
                                        
                                        x_45498 = defunc_1_op_res_45500;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45491, skip_threads_45504)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45504, local_tid_45489 -
                                      squot32(local_tid_45489, 32) * 32) &&
                                (squot32(local_tid_45489, 32) == 0 &&
                                 ltid_in_bounds_45501)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)] =
                                        x_45498;
                                    x_45499 = x_45498;
                                }
                            }
                            if (sle32(wave_sizze_45491, skip_threads_45504)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45504 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45489, 32) == 0 ||
                          !ltid_in_bounds_45501)) {
                        // read operands
                        {
                            x_40633 = x_40632;
                            x_40632 = ((__local
                                        float *) red_arr_mem_45493)[sext_i32_i64(squot32(local_tid_45489,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45506 =
                                 slt64(srem64(sext_i32_i64(local_tid_45489),
                                              i32_res_29633),
                                       sext_i32_i64(local_tid_45489) -
                                       sext_i32_i64(squot32(local_tid_45489,
                                                            32) * 32 - 1));
                            
                            if (inactive_45506) {
                                x_40632 = x_40633;
                            }
                            if (!inactive_45506) {
                                float defunc_1_op_res_40634 = x_40632 + x_40633;
                                
                                x_40632 = defunc_1_op_res_40634;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)] =
                                x_40632;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45489, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45493)[sext_i32_i64(local_tid_45489)] =
                            x_40633;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45497) *
                      squot64(segred_group_sizze_40628,
                              segment_sizze_nonzzero_45486) +
                      sext_i32_i64(local_tid_45489), m_29259) &&
                slt64(sext_i32_i64(local_tid_45489),
                      squot64(segred_group_sizze_40628,
                              segment_sizze_nonzzero_45486))) {
                ((__global
                  float *) mem_44271)[sext_i32_i64(virt_group_id_45497) *
                                      squot64(segred_group_sizze_40628,
                                              segment_sizze_nonzzero_45486) +
                                      sext_i32_i64(local_tid_45489)] = ((__local
                                                                         float *) red_arr_mem_45493)[(sext_i32_i64(local_tid_45489) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45486 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40628
}
__kernel void mainzisegred_small_41112(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45655_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45653_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45651_backing_aligned_2,
                                       int64_t m_29259,
                                       int64_t iota32_arg_29658,
                                       int64_t num_groups_41283, __global
                                       unsigned char *mem_44277, __global
                                       unsigned char *mem_44289, __global
                                       unsigned char *mem_44291, __global
                                       unsigned char *mem_44295, __global
                                       unsigned char *mem_44298, __global
                                       unsigned char *mem_44300, __global
                                       unsigned char *mem_44302,
                                       int64_t segment_sizze_nonzzero_45644)
{
    #define segred_group_sizze_41282 (mainzisegred_group_sizze_41106)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45655_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45655_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45653_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45653_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45651_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45651_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45646;
    int32_t local_tid_45647;
    int64_t group_sizze_45650;
    int32_t wave_sizze_45649;
    int32_t group_tid_45648;
    
    global_tid_45646 = get_global_id(0);
    local_tid_45647 = get_local_id(0);
    group_sizze_45650 = get_local_size(0);
    wave_sizze_45649 = LOCKSTEP_WIDTH;
    group_tid_45648 = get_group_id(0);
    
    int32_t phys_tid_41112;
    
    phys_tid_41112 = global_tid_45646;
    
    __local char *red_arr_mem_45651;
    
    red_arr_mem_45651 = (__local char *) red_arr_mem_45651_backing_0;
    
    __local char *red_arr_mem_45653;
    
    red_arr_mem_45653 = (__local char *) red_arr_mem_45653_backing_1;
    
    __local char *red_arr_mem_45655;
    
    red_arr_mem_45655 = (__local char *) red_arr_mem_45655_backing_2;
    
    int32_t phys_group_id_45657;
    
    phys_group_id_45657 = get_group_id(0);
    for (int32_t i_45658 = 0; i_45658 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29259,
                                          squot64(segred_group_sizze_41282,
                                                  segment_sizze_nonzzero_45644))) -
                   phys_group_id_45657, sext_i64_i32(num_groups_41283));
         i_45658++) {
        int32_t virt_group_id_45659 = phys_group_id_45657 + i_45658 *
                sext_i64_i32(num_groups_41283);
        int64_t gtid_41103 = squot64(sext_i32_i64(local_tid_45647),
                                     segment_sizze_nonzzero_45644) +
                sext_i32_i64(virt_group_id_45659) *
                squot64(segred_group_sizze_41282, segment_sizze_nonzzero_45644);
        int64_t gtid_41111 = srem64(sext_i32_i64(local_tid_45647),
                                    iota32_arg_29658);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_29658) && (slt64(gtid_41103, m_29259) &&
                                               slt64(sext_i32_i64(local_tid_45647),
                                                     iota32_arg_29658 *
                                                     squot64(segred_group_sizze_41282,
                                                             segment_sizze_nonzzero_45644)))) {
                int32_t y_41302 = ((__global int32_t *) mem_44291)[gtid_41103];
                float y_41303 = ((__global float *) mem_44289)[gtid_41103];
                float x_41307 = ((__global float *) mem_44295)[gtid_41103 *
                                                               iota32_arg_29658 +
                                                               gtid_41111];
                float x_41308 = ((__global float *) mem_44277)[gtid_41111];
                int32_t index_primexp_41436 = sext_i64_i32(gtid_41111);
                float defunc_0_f_res_41311 = x_41307 / y_41303;
                bool cond_41312 = slt32(index_primexp_41436, y_41302);
                bool isnan_res_41313;
                
                isnan_res_41313 = futrts_isnan32(defunc_0_f_res_41311);
                
                bool cond_t_res_41314 = !isnan_res_41313;
                bool x_41315 = cond_41312 && cond_t_res_41314;
                float abs_res_41316 = (float) fabs(defunc_0_f_res_41311);
                bool defunc_2_f_res_t_res_41317 = x_41308 < abs_res_41316;
                bool x_41318 = x_41315 && defunc_2_f_res_t_res_41317;
                float defunc_1_f_res_41319;
                
                if (cond_41312) {
                    defunc_1_f_res_41319 = defunc_0_f_res_41311;
                } else {
                    defunc_1_f_res_41319 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)] =
                        x_41318;
                    ((__local
                      int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)] =
                        index_primexp_41436;
                    ((__local
                      float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)] =
                        defunc_1_f_res_41319;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_29658)) {
            // perform segmented scan to imitate reduction
            {
                bool x_41288;
                int32_t x_41289;
                float x_41290;
                bool x_41291;
                int32_t x_41292;
                float x_41293;
                bool x_45660;
                int32_t x_45661;
                float x_45662;
                bool x_45663;
                int32_t x_45664;
                float x_45665;
                bool ltid_in_bounds_45674;
                
                ltid_in_bounds_45674 = slt64(sext_i32_i64(local_tid_45647),
                                             iota32_arg_29658 *
                                             squot64(segred_group_sizze_41282,
                                                     segment_sizze_nonzzero_45644));
                
                int32_t skip_threads_45675;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45674) {
                        x_41291 = ((volatile __local
                                    bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)];
                        x_41292 = ((volatile __local
                                    int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)];
                        x_41293 = ((volatile __local
                                    float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)];
                        if ((local_tid_45647 - squot32(local_tid_45647, 32) *
                             32) == 0) {
                            x_41288 = x_41291;
                            x_41289 = x_41292;
                            x_41290 = x_41293;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45675 = 1;
                    while (slt32(skip_threads_45675, 32)) {
                        if (sle32(skip_threads_45675, local_tid_45647 -
                                  squot32(local_tid_45647, 32) * 32) &&
                            ltid_in_bounds_45674) {
                            // read operands
                            {
                                x_41288 = ((volatile __local
                                            bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647) -
                                                                       sext_i32_i64(skip_threads_45675)];
                                x_41289 = ((volatile __local
                                            int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647) -
                                                                          sext_i32_i64(skip_threads_45675)];
                                x_41290 = ((volatile __local
                                            float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647) -
                                                                        sext_i32_i64(skip_threads_45675)];
                            }
                            // perform operation
                            {
                                bool inactive_45676 =
                                     slt64(srem64(sext_i32_i64(local_tid_45647),
                                                  iota32_arg_29658),
                                           sext_i32_i64(local_tid_45647) -
                                           sext_i32_i64(local_tid_45647 -
                                           skip_threads_45675));
                                
                                if (inactive_45676) {
                                    x_41288 = x_41291;
                                    x_41289 = x_41292;
                                    x_41290 = x_41293;
                                }
                                if (!inactive_45676) {
                                    bool defunc_1_op_res_41294;
                                    int32_t defunc_1_op_res_41295;
                                    
                                    if (x_41288) {
                                        defunc_1_op_res_41294 = x_41288;
                                        defunc_1_op_res_41295 = x_41289;
                                    } else {
                                        bool x_41296 = x_41291 && x_41291;
                                        bool x_41297 = !x_41291;
                                        bool y_41298 = x_41288 && x_41297;
                                        bool defunc_1_op_res_f_res_41299 =
                                             x_41296 || y_41298;
                                        int32_t defunc_1_op_res_f_res_41300;
                                        
                                        if (x_41291) {
                                            defunc_1_op_res_f_res_41300 =
                                                x_41292;
                                        } else {
                                            defunc_1_op_res_f_res_41300 =
                                                x_41289;
                                        }
                                        defunc_1_op_res_41294 =
                                            defunc_1_op_res_f_res_41299;
                                        defunc_1_op_res_41295 =
                                            defunc_1_op_res_f_res_41300;
                                    }
                                    
                                    float defunc_1_op_res_41301 = x_41290 +
                                          x_41293;
                                    
                                    x_41288 = defunc_1_op_res_41294;
                                    x_41289 = defunc_1_op_res_41295;
                                    x_41290 = defunc_1_op_res_41301;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45649, skip_threads_45675)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45675, local_tid_45647 -
                                  squot32(local_tid_45647, 32) * 32) &&
                            ltid_in_bounds_45674) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)] =
                                    x_41288;
                                x_41291 = x_41288;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)] =
                                    x_41289;
                                x_41292 = x_41289;
                                ((volatile __local
                                  float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)] =
                                    x_41290;
                                x_41293 = x_41290;
                            }
                        }
                        if (sle32(wave_sizze_45649, skip_threads_45675)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45675 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45647 - squot32(local_tid_45647, 32) * 32) ==
                        31 && ltid_in_bounds_45674) {
                        ((volatile __local
                          bool *) red_arr_mem_45651)[sext_i32_i64(squot32(local_tid_45647,
                                                                          32))] =
                            x_41288;
                        ((volatile __local
                          int32_t *) red_arr_mem_45653)[sext_i32_i64(squot32(local_tid_45647,
                                                                             32))] =
                            x_41289;
                        ((volatile __local
                          float *) red_arr_mem_45655)[sext_i32_i64(squot32(local_tid_45647,
                                                                           32))] =
                            x_41290;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45677;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45647, 32) == 0 &&
                            ltid_in_bounds_45674) {
                            x_45663 = ((volatile __local
                                        bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)];
                            x_45664 = ((volatile __local
                                        int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)];
                            x_45665 = ((volatile __local
                                        float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)];
                            if ((local_tid_45647 - squot32(local_tid_45647,
                                                           32) * 32) == 0) {
                                x_45660 = x_45663;
                                x_45661 = x_45664;
                                x_45662 = x_45665;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45677 = 1;
                        while (slt32(skip_threads_45677, 32)) {
                            if (sle32(skip_threads_45677, local_tid_45647 -
                                      squot32(local_tid_45647, 32) * 32) &&
                                (squot32(local_tid_45647, 32) == 0 &&
                                 ltid_in_bounds_45674)) {
                                // read operands
                                {
                                    x_45660 = ((volatile __local
                                                bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647) -
                                                                           sext_i32_i64(skip_threads_45677)];
                                    x_45661 = ((volatile __local
                                                int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647) -
                                                                              sext_i32_i64(skip_threads_45677)];
                                    x_45662 = ((volatile __local
                                                float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647) -
                                                                            sext_i32_i64(skip_threads_45677)];
                                }
                                // perform operation
                                {
                                    bool inactive_45678 =
                                         slt64(srem64(sext_i32_i64(local_tid_45647 *
                                                      32 + 32 - 1),
                                                      iota32_arg_29658),
                                               sext_i32_i64(local_tid_45647 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45647 -
                                                             skip_threads_45677) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45678) {
                                        x_45660 = x_45663;
                                        x_45661 = x_45664;
                                        x_45662 = x_45665;
                                    }
                                    if (!inactive_45678) {
                                        bool defunc_1_op_res_45666;
                                        int32_t defunc_1_op_res_45667;
                                        
                                        if (x_45660) {
                                            defunc_1_op_res_45666 = x_45660;
                                            defunc_1_op_res_45667 = x_45661;
                                        } else {
                                            bool x_45668 = x_45663 && x_45663;
                                            bool x_45669 = !x_45663;
                                            bool y_45670 = x_45660 && x_45669;
                                            bool defunc_1_op_res_f_res_45671 =
                                                 x_45668 || y_45670;
                                            int32_t defunc_1_op_res_f_res_45672;
                                            
                                            if (x_45663) {
                                                defunc_1_op_res_f_res_45672 =
                                                    x_45664;
                                            } else {
                                                defunc_1_op_res_f_res_45672 =
                                                    x_45661;
                                            }
                                            defunc_1_op_res_45666 =
                                                defunc_1_op_res_f_res_45671;
                                            defunc_1_op_res_45667 =
                                                defunc_1_op_res_f_res_45672;
                                        }
                                        
                                        float defunc_1_op_res_45673 = x_45662 +
                                              x_45665;
                                        
                                        x_45660 = defunc_1_op_res_45666;
                                        x_45661 = defunc_1_op_res_45667;
                                        x_45662 = defunc_1_op_res_45673;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45649, skip_threads_45677)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45677, local_tid_45647 -
                                      squot32(local_tid_45647, 32) * 32) &&
                                (squot32(local_tid_45647, 32) == 0 &&
                                 ltid_in_bounds_45674)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)] =
                                        x_45660;
                                    x_45663 = x_45660;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)] =
                                        x_45661;
                                    x_45664 = x_45661;
                                    ((volatile __local
                                      float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)] =
                                        x_45662;
                                    x_45665 = x_45662;
                                }
                            }
                            if (sle32(wave_sizze_45649, skip_threads_45677)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45677 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45647, 32) == 0 ||
                          !ltid_in_bounds_45674)) {
                        // read operands
                        {
                            x_41291 = x_41288;
                            x_41292 = x_41289;
                            x_41293 = x_41290;
                            x_41288 = ((__local
                                        bool *) red_arr_mem_45651)[sext_i32_i64(squot32(local_tid_45647,
                                                                                        32)) -
                                                                   1];
                            x_41289 = ((__local
                                        int32_t *) red_arr_mem_45653)[sext_i32_i64(squot32(local_tid_45647,
                                                                                           32)) -
                                                                      1];
                            x_41290 = ((__local
                                        float *) red_arr_mem_45655)[sext_i32_i64(squot32(local_tid_45647,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45679 =
                                 slt64(srem64(sext_i32_i64(local_tid_45647),
                                              iota32_arg_29658),
                                       sext_i32_i64(local_tid_45647) -
                                       sext_i32_i64(squot32(local_tid_45647,
                                                            32) * 32 - 1));
                            
                            if (inactive_45679) {
                                x_41288 = x_41291;
                                x_41289 = x_41292;
                                x_41290 = x_41293;
                            }
                            if (!inactive_45679) {
                                bool defunc_1_op_res_41294;
                                int32_t defunc_1_op_res_41295;
                                
                                if (x_41288) {
                                    defunc_1_op_res_41294 = x_41288;
                                    defunc_1_op_res_41295 = x_41289;
                                } else {
                                    bool x_41296 = x_41291 && x_41291;
                                    bool x_41297 = !x_41291;
                                    bool y_41298 = x_41288 && x_41297;
                                    bool defunc_1_op_res_f_res_41299 =
                                         x_41296 || y_41298;
                                    int32_t defunc_1_op_res_f_res_41300;
                                    
                                    if (x_41291) {
                                        defunc_1_op_res_f_res_41300 = x_41292;
                                    } else {
                                        defunc_1_op_res_f_res_41300 = x_41289;
                                    }
                                    defunc_1_op_res_41294 =
                                        defunc_1_op_res_f_res_41299;
                                    defunc_1_op_res_41295 =
                                        defunc_1_op_res_f_res_41300;
                                }
                                
                                float defunc_1_op_res_41301 = x_41290 + x_41293;
                                
                                x_41288 = defunc_1_op_res_41294;
                                x_41289 = defunc_1_op_res_41295;
                                x_41290 = defunc_1_op_res_41301;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)] =
                                x_41288;
                            ((__local
                              int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)] =
                                x_41289;
                            ((__local
                              float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)] =
                                x_41290;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45647, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45651)[sext_i32_i64(local_tid_45647)] =
                            x_41291;
                        ((__local
                          int32_t *) red_arr_mem_45653)[sext_i32_i64(local_tid_45647)] =
                            x_41292;
                        ((__local
                          float *) red_arr_mem_45655)[sext_i32_i64(local_tid_45647)] =
                            x_41293;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45659) *
                      squot64(segred_group_sizze_41282,
                              segment_sizze_nonzzero_45644) +
                      sext_i32_i64(local_tid_45647), m_29259) &&
                slt64(sext_i32_i64(local_tid_45647),
                      squot64(segred_group_sizze_41282,
                              segment_sizze_nonzzero_45644))) {
                ((__global
                  bool *) mem_44298)[sext_i32_i64(virt_group_id_45659) *
                                     squot64(segred_group_sizze_41282,
                                             segment_sizze_nonzzero_45644) +
                                     sext_i32_i64(local_tid_45647)] = ((__local
                                                                        bool *) red_arr_mem_45651)[(sext_i32_i64(local_tid_45647) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45644 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44300)[sext_i32_i64(virt_group_id_45659) *
                                        squot64(segred_group_sizze_41282,
                                                segment_sizze_nonzzero_45644) +
                                        sext_i32_i64(local_tid_45647)] =
                    ((__local
                      int32_t *) red_arr_mem_45653)[(sext_i32_i64(local_tid_45647) +
                                                     1) *
                                                    segment_sizze_nonzzero_45644 -
                                                    1];
                ((__global
                  float *) mem_44302)[sext_i32_i64(virt_group_id_45659) *
                                      squot64(segred_group_sizze_41282,
                                              segment_sizze_nonzzero_45644) +
                                      sext_i32_i64(local_tid_45647)] = ((__local
                                                                         float *) red_arr_mem_45655)[(sext_i32_i64(local_tid_45647) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45644 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41282
}
__kernel void mainDetailedzicopy_44823(int64_t m_27932, int64_t i32_res_28084,
                                       int64_t ctx_param_ext_43577,
                                       int64_t ctx_param_ext_43578,
                                       int64_t ctx_param_ext_43580, __global
                                       unsigned char *mem_param_43582, __global
                                       unsigned char *mem_43587)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44823;
    int32_t copy_ltid_44824;
    int32_t copy_gid_44825;
    
    copy_gtid_44823 = get_global_id(0);
    copy_ltid_44824 = get_local_id(0);
    copy_gid_44825 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44823), m_27932 * i32_res_28084)) {
        ((__global float *) mem_43587)[(sext_i32_i64(copy_gtid_44823) -
                                        squot64(sext_i32_i64(copy_gtid_44823),
                                                i32_res_28084) *
                                        i32_res_28084) * m_27932 +
                                       squot64(sext_i32_i64(copy_gtid_44823),
                                               i32_res_28084)] = ((__global
                                                                   float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44823),
                                                                                                      i32_res_28084) *
                                                                                              ctx_param_ext_43578 +
                                                                                              (sext_i32_i64(copy_gtid_44823) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44823),
                                                                                                       i32_res_28084) *
                                                                                               i32_res_28084) *
                                                                                              ctx_param_ext_43580)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_32099(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45253_backing_aligned_0,
                                              int64_t N_27931, int64_t m_27932,
                                              int64_t N_27933, __global
                                              unsigned char *images_mem_43378,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44136,
                                              __global unsigned char *mem_44165,
                                              __global unsigned char *mem_44168,
                                              int32_t num_threads_45247)
{
    #define segscan_group_sizze_32116 (mainDetailedzisegscan_group_sizze_32093)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45253_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45253_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45248;
    int32_t local_tid_45249;
    int64_t group_sizze_45252;
    int32_t wave_sizze_45251;
    int32_t group_tid_45250;
    
    global_tid_45248 = get_global_id(0);
    local_tid_45249 = get_local_id(0);
    group_sizze_45252 = get_local_size(0);
    wave_sizze_45251 = LOCKSTEP_WIDTH;
    group_tid_45250 = get_group_id(0);
    
    int32_t phys_tid_32099;
    
    phys_tid_32099 = global_tid_45248;
    
    __local char *scan_arr_mem_45253;
    
    scan_arr_mem_45253 = (__local char *) scan_arr_mem_45253_backing_0;
    
    int64_t x_32121;
    int64_t x_32122;
    
    x_32121 = 0;
    for (int64_t j_45255 = 0; j_45255 < sdiv_up64(m_27932 * N_27931,
                                                  sext_i32_i64(num_threads_45247));
         j_45255++) {
        int64_t chunk_offset_45256 = segscan_group_sizze_32116 * j_45255 +
                sext_i32_i64(group_tid_45250) * (segscan_group_sizze_32116 *
                                                 sdiv_up64(m_27932 * N_27931,
                                                           sext_i32_i64(num_threads_45247)));
        int64_t flat_idx_45257 = chunk_offset_45256 +
                sext_i32_i64(local_tid_45249);
        int64_t gtid_32090 = squot64(flat_idx_45257, N_27931);
        int64_t gtid_32098 = flat_idx_45257 - squot64(flat_idx_45257, N_27931) *
                N_27931;
        
        // threads in bounds read input
        {
            if (slt64(gtid_32090, m_27932) && slt64(gtid_32098, N_27931)) {
                float x_32126 = ((__global
                                  float *) images_mem_43378)[gtid_32090 *
                                                             N_27933 +
                                                             gtid_32098];
                bool isnan_res_32128;
                
                isnan_res_32128 = futrts_isnan32(x_32126);
                
                bool cond_32129 = !isnan_res_32128;
                float defunc_0_f_res_32130;
                
                if (cond_32129) {
                    float x_32127 = ((__global
                                      float *) defunc_3_map_res_mem_44136)[gtid_32090 *
                                                                           N_27931 +
                                                                           gtid_32098];
                    float defunc_0_f_res_t_res_32131 = x_32126 - x_32127;
                    
                    defunc_0_f_res_32130 = defunc_0_f_res_t_res_32131;
                } else {
                    defunc_0_f_res_32130 = NAN;
                }
                
                bool isnan_res_32132;
                
                isnan_res_32132 = futrts_isnan32(defunc_0_f_res_32130);
                
                bool defunc_0_p_res_32133 = !isnan_res_32132;
                int64_t defunc_0_f_res_32134 =
                        btoi_bool_i64(defunc_0_p_res_32133);
                
                // write to-scan values to parameters
                {
                    x_32122 = defunc_0_f_res_32134;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_44168)[gtid_32090 * N_27931 +
                                                   gtid_32098] =
                        defunc_0_f_res_32130;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_32090, m_27932) && slt64(gtid_32098,
                                                          N_27931))) {
                    x_32122 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_32123 = add64(x_32121, x_32122);
                
                ((__local
                  int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                    defunc_1_op_res_32123;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45258;
            int64_t x_45259;
            int64_t x_45261;
            int64_t x_45262;
            bool ltid_in_bounds_45264;
            
            ltid_in_bounds_45264 = slt64(sext_i32_i64(local_tid_45249),
                                         segscan_group_sizze_32116);
            
            int32_t skip_threads_45265;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45264) {
                    x_45259 = ((volatile __local
                                int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)];
                    if ((local_tid_45249 - squot32(local_tid_45249, 32) * 32) ==
                        0) {
                        x_45258 = x_45259;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45265 = 1;
                while (slt32(skip_threads_45265, 32)) {
                    if (sle32(skip_threads_45265, local_tid_45249 -
                              squot32(local_tid_45249, 32) * 32) &&
                        ltid_in_bounds_45264) {
                        // read operands
                        {
                            x_45258 = ((volatile __local
                                        int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249) -
                                                                       sext_i32_i64(skip_threads_45265)];
                        }
                        // perform operation
                        {
                            bool inactive_45266 =
                                 slt64(srem64(sext_i32_i64(local_tid_45249) +
                                              chunk_offset_45256, N_27931),
                                       sext_i32_i64(local_tid_45249) +
                                       chunk_offset_45256 -
                                       (sext_i32_i64(local_tid_45249 -
                                        skip_threads_45265) +
                                        chunk_offset_45256));
                            
                            if (inactive_45266) {
                                x_45258 = x_45259;
                            }
                            if (!inactive_45266) {
                                int64_t defunc_1_op_res_45260 = add64(x_45258,
                                                                      x_45259);
                                
                                x_45258 = defunc_1_op_res_45260;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45251, skip_threads_45265)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45265, local_tid_45249 -
                              squot32(local_tid_45249, 32) * 32) &&
                        ltid_in_bounds_45264) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                                x_45258;
                            x_45259 = x_45258;
                        }
                    }
                    if (sle32(wave_sizze_45251, skip_threads_45265)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45265 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45249 - squot32(local_tid_45249, 32) * 32) ==
                    31 && ltid_in_bounds_45264) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45253)[sext_i32_i64(squot32(local_tid_45249,
                                                                          32))] =
                        x_45258;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45267;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45249, 32) == 0 &&
                        ltid_in_bounds_45264) {
                        x_45262 = ((volatile __local
                                    int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)];
                        if ((local_tid_45249 - squot32(local_tid_45249, 32) *
                             32) == 0) {
                            x_45261 = x_45262;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45267 = 1;
                    while (slt32(skip_threads_45267, 32)) {
                        if (sle32(skip_threads_45267, local_tid_45249 -
                                  squot32(local_tid_45249, 32) * 32) &&
                            (squot32(local_tid_45249, 32) == 0 &&
                             ltid_in_bounds_45264)) {
                            // read operands
                            {
                                x_45261 = ((volatile __local
                                            int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249) -
                                                                           sext_i32_i64(skip_threads_45267)];
                            }
                            // perform operation
                            {
                                bool inactive_45268 =
                                     slt64(srem64(sext_i32_i64(local_tid_45249 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45256, N_27931),
                                           sext_i32_i64(local_tid_45249 * 32 +
                                           32 - 1) + chunk_offset_45256 -
                                           (sext_i32_i64((local_tid_45249 -
                                                          skip_threads_45267) *
                                            32 + 32 - 1) + chunk_offset_45256));
                                
                                if (inactive_45268) {
                                    x_45261 = x_45262;
                                }
                                if (!inactive_45268) {
                                    int64_t defunc_1_op_res_45263 =
                                            add64(x_45261, x_45262);
                                    
                                    x_45261 = defunc_1_op_res_45263;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45251, skip_threads_45267)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45267, local_tid_45249 -
                                  squot32(local_tid_45249, 32) * 32) &&
                            (squot32(local_tid_45249, 32) == 0 &&
                             ltid_in_bounds_45264)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                                    x_45261;
                                x_45262 = x_45261;
                            }
                        }
                        if (sle32(wave_sizze_45251, skip_threads_45267)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45267 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45249, 32) == 0 ||
                      !ltid_in_bounds_45264)) {
                    // read operands
                    {
                        x_45259 = x_45258;
                        x_45258 = ((__local
                                    int64_t *) scan_arr_mem_45253)[sext_i32_i64(squot32(local_tid_45249,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45269 =
                             slt64(srem64(sext_i32_i64(local_tid_45249) +
                                          chunk_offset_45256, N_27931),
                                   sext_i32_i64(local_tid_45249) +
                                   chunk_offset_45256 -
                                   (sext_i32_i64(squot32(local_tid_45249, 32) *
                                    32 - 1) + chunk_offset_45256));
                        
                        if (inactive_45269) {
                            x_45258 = x_45259;
                        }
                        if (!inactive_45269) {
                            int64_t defunc_1_op_res_45260 = add64(x_45258,
                                                                  x_45259);
                            
                            x_45258 = defunc_1_op_res_45260;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                            x_45258;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45249, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)] =
                        x_45259;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_32090, m_27932) && slt64(gtid_32098, N_27931)) {
                    ((__global int64_t *) mem_44165)[gtid_32090 * N_27931 +
                                                     gtid_32098] = ((__local
                                                                     int64_t *) scan_arr_mem_45253)[sext_i32_i64(local_tid_45249)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45270 = slt64(srem64(chunk_offset_45256 +
                                                          segscan_group_sizze_32116,
                                                          N_27931),
                                                   chunk_offset_45256 +
                                                   segscan_group_sizze_32116 -
                                                   (chunk_offset_45256 +
                                                    segscan_group_sizze_32116 -
                                                    1));
                bool should_load_carry_45271 = local_tid_45249 == 0 &&
                     !crosses_segment_45270;
                
                if (should_load_carry_45271) {
                    x_32121 = ((__local
                                int64_t *) scan_arr_mem_45253)[segscan_group_sizze_32116 -
                                                               1];
                }
                if (!should_load_carry_45271) {
                    x_32121 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_32116
}
__kernel void mainDetailedziscan_stage1_33687(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45624_backing_aligned_0,
                                              int64_t N_27931, int64_t m_27932,
                                              int64_t iota32_arg_28331, __global
                                              unsigned char *defunc_4_map_res_mem_44174,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44237,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44238,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_44272,
                                              __global unsigned char *mem_44334,
                                              __global unsigned char *mem_44338,
                                              int32_t num_threads_45618)
{
    #define segscan_group_sizze_33765 (mainDetailedzisegscan_group_sizze_33681)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45624_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45624_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45619;
    int32_t local_tid_45620;
    int64_t group_sizze_45623;
    int32_t wave_sizze_45622;
    int32_t group_tid_45621;
    
    global_tid_45619 = get_global_id(0);
    local_tid_45620 = get_local_id(0);
    group_sizze_45623 = get_local_size(0);
    wave_sizze_45622 = LOCKSTEP_WIDTH;
    group_tid_45621 = get_group_id(0);
    
    int32_t phys_tid_33687;
    
    phys_tid_33687 = global_tid_45619;
    
    __local char *scan_arr_mem_45624;
    
    scan_arr_mem_45624 = (__local char *) scan_arr_mem_45624_backing_0;
    
    float x_33769;
    float x_33770;
    
    x_33769 = 0.0F;
    for (int64_t j_45626 = 0; j_45626 < sdiv_up64(m_27932 * iota32_arg_28331,
                                                  sext_i32_i64(num_threads_45618));
         j_45626++) {
        int64_t chunk_offset_45627 = segscan_group_sizze_33765 * j_45626 +
                sext_i32_i64(group_tid_45621) * (segscan_group_sizze_33765 *
                                                 sdiv_up64(m_27932 *
                                                           iota32_arg_28331,
                                                           sext_i32_i64(num_threads_45618)));
        int64_t flat_idx_45628 = chunk_offset_45627 +
                sext_i32_i64(local_tid_45620);
        int64_t gtid_33678 = squot64(flat_idx_45628, iota32_arg_28331);
        int64_t gtid_33686 = flat_idx_45628 - squot64(flat_idx_45628,
                                                      iota32_arg_28331) *
                iota32_arg_28331;
        
        // threads in bounds read input
        {
            if (slt64(gtid_33678, m_27932) && slt64(gtid_33686,
                                                    iota32_arg_28331)) {
                int32_t y_33776 = ((__global int32_t *) mem_44334)[gtid_33678];
                int32_t index_primexp_41439 = sext_i64_i32(gtid_33686);
                bool cond_33779 = sle32(y_33776, index_primexp_41439);
                float defunc_0_f_res_33780;
                
                if (cond_33779) {
                    defunc_0_f_res_33780 = 0.0F;
                } else {
                    int32_t x_33772 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_33678];
                    int32_t x_33773 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44237)[gtid_33678];
                    float x_33774 = ((__global
                                      float *) defunc_0_f_res_mem_44272)[gtid_33678];
                    bool cond_33781 = index_primexp_41439 == 0;
                    float defunc_0_f_res_f_res_33782;
                    
                    if (cond_33781) {
                        defunc_0_f_res_f_res_33782 = x_33774;
                    } else {
                        int32_t i_33783 = add32(x_33772, index_primexp_41439);
                        int64_t i_33784 = sext_i32_i64(i_33783);
                        float x_33785 = ((__global
                                          float *) defunc_4_map_res_mem_44174)[gtid_33678 *
                                                                               N_27931 +
                                                                               i_33784];
                        int32_t x_33786 = sub32(x_33772, x_33773);
                        int32_t i_33787 = add32(x_33786, index_primexp_41439);
                        int64_t i_33788 = sext_i32_i64(i_33787);
                        float y_33789 = ((__global
                                          float *) defunc_4_map_res_mem_44174)[gtid_33678 *
                                                                               N_27931 +
                                                                               i_33788];
                        float defunc_0_f_res_f_res_f_res_33790 = x_33785 -
                              y_33789;
                        
                        defunc_0_f_res_f_res_33782 =
                            defunc_0_f_res_f_res_f_res_33790;
                    }
                    defunc_0_f_res_33780 = defunc_0_f_res_f_res_33782;
                }
                // write to-scan values to parameters
                {
                    x_33770 = defunc_0_f_res_33780;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_33678, m_27932) && slt64(gtid_33686,
                                                          iota32_arg_28331))) {
                    x_33770 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_33771 = x_33769 + x_33770;
                
                ((__local
                  float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)] =
                    defunc_1_op_res_33771;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45629;
            float x_45630;
            float x_45632;
            float x_45633;
            bool ltid_in_bounds_45635;
            
            ltid_in_bounds_45635 = slt64(sext_i32_i64(local_tid_45620),
                                         segscan_group_sizze_33765);
            
            int32_t skip_threads_45636;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45635) {
                    x_45630 = ((volatile __local
                                float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)];
                    if ((local_tid_45620 - squot32(local_tid_45620, 32) * 32) ==
                        0) {
                        x_45629 = x_45630;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45636 = 1;
                while (slt32(skip_threads_45636, 32)) {
                    if (sle32(skip_threads_45636, local_tid_45620 -
                              squot32(local_tid_45620, 32) * 32) &&
                        ltid_in_bounds_45635) {
                        // read operands
                        {
                            x_45629 = ((volatile __local
                                        float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620) -
                                                                     sext_i32_i64(skip_threads_45636)];
                        }
                        // perform operation
                        {
                            bool inactive_45637 =
                                 slt64(srem64(sext_i32_i64(local_tid_45620) +
                                              chunk_offset_45627,
                                              iota32_arg_28331),
                                       sext_i32_i64(local_tid_45620) +
                                       chunk_offset_45627 -
                                       (sext_i32_i64(local_tid_45620 -
                                        skip_threads_45636) +
                                        chunk_offset_45627));
                            
                            if (inactive_45637) {
                                x_45629 = x_45630;
                            }
                            if (!inactive_45637) {
                                float defunc_1_op_res_45631 = x_45629 + x_45630;
                                
                                x_45629 = defunc_1_op_res_45631;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45622, skip_threads_45636)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45636, local_tid_45620 -
                              squot32(local_tid_45620, 32) * 32) &&
                        ltid_in_bounds_45635) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)] =
                                x_45629;
                            x_45630 = x_45629;
                        }
                    }
                    if (sle32(wave_sizze_45622, skip_threads_45636)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45636 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45620 - squot32(local_tid_45620, 32) * 32) ==
                    31 && ltid_in_bounds_45635) {
                    ((volatile __local
                      float *) scan_arr_mem_45624)[sext_i32_i64(squot32(local_tid_45620,
                                                                        32))] =
                        x_45629;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45638;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45620, 32) == 0 &&
                        ltid_in_bounds_45635) {
                        x_45633 = ((volatile __local
                                    float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)];
                        if ((local_tid_45620 - squot32(local_tid_45620, 32) *
                             32) == 0) {
                            x_45632 = x_45633;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45638 = 1;
                    while (slt32(skip_threads_45638, 32)) {
                        if (sle32(skip_threads_45638, local_tid_45620 -
                                  squot32(local_tid_45620, 32) * 32) &&
                            (squot32(local_tid_45620, 32) == 0 &&
                             ltid_in_bounds_45635)) {
                            // read operands
                            {
                                x_45632 = ((volatile __local
                                            float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620) -
                                                                         sext_i32_i64(skip_threads_45638)];
                            }
                            // perform operation
                            {
                                bool inactive_45639 =
                                     slt64(srem64(sext_i32_i64(local_tid_45620 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45627,
                                                  iota32_arg_28331),
                                           sext_i32_i64(local_tid_45620 * 32 +
                                           32 - 1) + chunk_offset_45627 -
                                           (sext_i32_i64((local_tid_45620 -
                                                          skip_threads_45638) *
                                            32 + 32 - 1) + chunk_offset_45627));
                                
                                if (inactive_45639) {
                                    x_45632 = x_45633;
                                }
                                if (!inactive_45639) {
                                    float defunc_1_op_res_45634 = x_45632 +
                                          x_45633;
                                    
                                    x_45632 = defunc_1_op_res_45634;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45622, skip_threads_45638)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45638, local_tid_45620 -
                                  squot32(local_tid_45620, 32) * 32) &&
                            (squot32(local_tid_45620, 32) == 0 &&
                             ltid_in_bounds_45635)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)] =
                                    x_45632;
                                x_45633 = x_45632;
                            }
                        }
                        if (sle32(wave_sizze_45622, skip_threads_45638)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45638 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45620, 32) == 0 ||
                      !ltid_in_bounds_45635)) {
                    // read operands
                    {
                        x_45630 = x_45629;
                        x_45629 = ((__local
                                    float *) scan_arr_mem_45624)[sext_i32_i64(squot32(local_tid_45620,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45640 =
                             slt64(srem64(sext_i32_i64(local_tid_45620) +
                                          chunk_offset_45627, iota32_arg_28331),
                                   sext_i32_i64(local_tid_45620) +
                                   chunk_offset_45627 -
                                   (sext_i32_i64(squot32(local_tid_45620, 32) *
                                    32 - 1) + chunk_offset_45627));
                        
                        if (inactive_45640) {
                            x_45629 = x_45630;
                        }
                        if (!inactive_45640) {
                            float defunc_1_op_res_45631 = x_45629 + x_45630;
                            
                            x_45629 = defunc_1_op_res_45631;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)] =
                            x_45629;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45620, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)] =
                        x_45630;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_33678, m_27932) && slt64(gtid_33686,
                                                        iota32_arg_28331)) {
                    ((__global float *) mem_44338)[gtid_33678 *
                                                   iota32_arg_28331 +
                                                   gtid_33686] = ((__local
                                                                   float *) scan_arr_mem_45624)[sext_i32_i64(local_tid_45620)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45641 = slt64(srem64(chunk_offset_45627 +
                                                          segscan_group_sizze_33765,
                                                          iota32_arg_28331),
                                                   chunk_offset_45627 +
                                                   segscan_group_sizze_33765 -
                                                   (chunk_offset_45627 +
                                                    segscan_group_sizze_33765 -
                                                    1));
                bool should_load_carry_45642 = local_tid_45620 == 0 &&
                     !crosses_segment_45641;
                
                if (should_load_carry_45642) {
                    x_33769 = ((__local
                                float *) scan_arr_mem_45624)[segscan_group_sizze_33765 -
                                                             1];
                }
                if (!should_load_carry_45642) {
                    x_33769 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_33765
}
__kernel void mainDetailedziscan_stage2_32099(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45277_backing_aligned_0,
                                              int64_t N_27931, int64_t m_27932,
                                              __global unsigned char *mem_44165,
                                              int64_t stage1_num_groups_45246,
                                              int32_t num_threads_45247)
{
    #define segscan_group_sizze_32116 (mainDetailedzisegscan_group_sizze_32093)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45277_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45277_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45272;
    int32_t local_tid_45273;
    int64_t group_sizze_45276;
    int32_t wave_sizze_45275;
    int32_t group_tid_45274;
    
    global_tid_45272 = get_global_id(0);
    local_tid_45273 = get_local_id(0);
    group_sizze_45276 = get_local_size(0);
    wave_sizze_45275 = LOCKSTEP_WIDTH;
    group_tid_45274 = get_group_id(0);
    
    int32_t phys_tid_32099;
    
    phys_tid_32099 = global_tid_45272;
    
    __local char *scan_arr_mem_45277;
    
    scan_arr_mem_45277 = (__local char *) scan_arr_mem_45277_backing_0;
    
    int64_t flat_idx_45279;
    
    flat_idx_45279 = (sext_i32_i64(local_tid_45273) + 1) *
        (segscan_group_sizze_32116 * sdiv_up64(m_27932 * N_27931,
                                               sext_i32_i64(num_threads_45247))) -
        1;
    
    int64_t gtid_32090;
    
    gtid_32090 = squot64(flat_idx_45279, N_27931);
    
    int64_t gtid_32098;
    
    gtid_32098 = flat_idx_45279 - squot64(flat_idx_45279, N_27931) * N_27931;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_32090, m_27932) && slt64(gtid_32098, N_27931)) {
            ((__local
              int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)] =
                ((__global int64_t *) mem_44165)[gtid_32090 * N_27931 +
                                                 gtid_32098];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_32121;
    int64_t x_32122;
    int64_t x_45280;
    int64_t x_45281;
    bool ltid_in_bounds_45283;
    
    ltid_in_bounds_45283 = slt64(sext_i32_i64(local_tid_45273),
                                 stage1_num_groups_45246);
    
    int32_t skip_threads_45284;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45283) {
            x_32122 = ((volatile __local
                        int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)];
            if ((local_tid_45273 - squot32(local_tid_45273, 32) * 32) == 0) {
                x_32121 = x_32122;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45284 = 1;
        while (slt32(skip_threads_45284, 32)) {
            if (sle32(skip_threads_45284, local_tid_45273 -
                      squot32(local_tid_45273, 32) * 32) &&
                ltid_in_bounds_45283) {
                // read operands
                {
                    x_32121 = ((volatile __local
                                int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273) -
                                                               sext_i32_i64(skip_threads_45284)];
                }
                // perform operation
                {
                    bool inactive_45285 =
                         slt64(srem64((sext_i32_i64(local_tid_45273) + 1) *
                                      (segscan_group_sizze_32116 *
                                       sdiv_up64(m_27932 * N_27931,
                                                 sext_i32_i64(num_threads_45247))) -
                                      1, N_27931),
                               (sext_i32_i64(local_tid_45273) + 1) *
                               (segscan_group_sizze_32116 * sdiv_up64(m_27932 *
                                                                      N_27931,
                                                                      sext_i32_i64(num_threads_45247))) -
                               1 - ((sext_i32_i64(local_tid_45273 -
                                     skip_threads_45284) + 1) *
                                    (segscan_group_sizze_32116 *
                                     sdiv_up64(m_27932 * N_27931,
                                               sext_i32_i64(num_threads_45247))) -
                                    1));
                    
                    if (inactive_45285) {
                        x_32121 = x_32122;
                    }
                    if (!inactive_45285) {
                        int64_t defunc_1_op_res_32123 = add64(x_32121, x_32122);
                        
                        x_32121 = defunc_1_op_res_32123;
                    }
                }
            }
            if (sle32(wave_sizze_45275, skip_threads_45284)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45284, local_tid_45273 -
                      squot32(local_tid_45273, 32) * 32) &&
                ltid_in_bounds_45283) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)] =
                        x_32121;
                    x_32122 = x_32121;
                }
            }
            if (sle32(wave_sizze_45275, skip_threads_45284)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45284 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45273 - squot32(local_tid_45273, 32) * 32) == 31 &&
            ltid_in_bounds_45283) {
            ((volatile __local
              int64_t *) scan_arr_mem_45277)[sext_i32_i64(squot32(local_tid_45273,
                                                                  32))] =
                x_32121;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45286;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45273, 32) == 0 && ltid_in_bounds_45283) {
                x_45281 = ((volatile __local
                            int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)];
                if ((local_tid_45273 - squot32(local_tid_45273, 32) * 32) ==
                    0) {
                    x_45280 = x_45281;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45286 = 1;
            while (slt32(skip_threads_45286, 32)) {
                if (sle32(skip_threads_45286, local_tid_45273 -
                          squot32(local_tid_45273, 32) * 32) &&
                    (squot32(local_tid_45273, 32) == 0 &&
                     ltid_in_bounds_45283)) {
                    // read operands
                    {
                        x_45280 = ((volatile __local
                                    int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273) -
                                                                   sext_i32_i64(skip_threads_45286)];
                    }
                    // perform operation
                    {
                        bool inactive_45287 =
                             slt64(srem64((sext_i32_i64(local_tid_45273 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_32116 *
                                           sdiv_up64(m_27932 * N_27931,
                                                     sext_i32_i64(num_threads_45247))) -
                                          1, N_27931),
                                   (sext_i32_i64(local_tid_45273 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_32116 *
                                               sdiv_up64(m_27932 * N_27931,
                                                         sext_i32_i64(num_threads_45247))) -
                                   1 - ((sext_i32_i64((local_tid_45273 -
                                                       skip_threads_45286) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_32116 *
                                         sdiv_up64(m_27932 * N_27931,
                                                   sext_i32_i64(num_threads_45247))) -
                                        1));
                        
                        if (inactive_45287) {
                            x_45280 = x_45281;
                        }
                        if (!inactive_45287) {
                            int64_t defunc_1_op_res_45282 = add64(x_45280,
                                                                  x_45281);
                            
                            x_45280 = defunc_1_op_res_45282;
                        }
                    }
                }
                if (sle32(wave_sizze_45275, skip_threads_45286)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45286, local_tid_45273 -
                          squot32(local_tid_45273, 32) * 32) &&
                    (squot32(local_tid_45273, 32) == 0 &&
                     ltid_in_bounds_45283)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)] =
                            x_45280;
                        x_45281 = x_45280;
                    }
                }
                if (sle32(wave_sizze_45275, skip_threads_45286)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45286 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45273, 32) == 0 || !ltid_in_bounds_45283)) {
            // read operands
            {
                x_32122 = x_32121;
                x_32121 = ((__local
                            int64_t *) scan_arr_mem_45277)[sext_i32_i64(squot32(local_tid_45273,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45288 =
                     slt64(srem64((sext_i32_i64(local_tid_45273) + 1) *
                                  (segscan_group_sizze_32116 *
                                   sdiv_up64(m_27932 * N_27931,
                                             sext_i32_i64(num_threads_45247))) -
                                  1, N_27931), (sext_i32_i64(local_tid_45273) +
                                                1) *
                           (segscan_group_sizze_32116 * sdiv_up64(m_27932 *
                                                                  N_27931,
                                                                  sext_i32_i64(num_threads_45247))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45273, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_32116 *
                                                 sdiv_up64(m_27932 * N_27931,
                                                           sext_i32_i64(num_threads_45247))) -
                                1));
                
                if (inactive_45288) {
                    x_32121 = x_32122;
                }
                if (!inactive_45288) {
                    int64_t defunc_1_op_res_32123 = add64(x_32121, x_32122);
                    
                    x_32121 = defunc_1_op_res_32123;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)] =
                    x_32121;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45273, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)] =
                x_32122;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_32090, m_27932) && slt64(gtid_32098, N_27931)) {
            ((__global int64_t *) mem_44165)[gtid_32090 * N_27931 +
                                             gtid_32098] = ((__local
                                                             int64_t *) scan_arr_mem_45277)[sext_i32_i64(local_tid_45273)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_32116
}
__kernel void mainDetailedziscan_stage2_33687(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45648_backing_aligned_0,
                                              int64_t m_27932,
                                              int64_t iota32_arg_28331, __global
                                              unsigned char *mem_44338,
                                              int64_t stage1_num_groups_45617,
                                              int32_t num_threads_45618)
{
    #define segscan_group_sizze_33765 (mainDetailedzisegscan_group_sizze_33681)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45648_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45648_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45643;
    int32_t local_tid_45644;
    int64_t group_sizze_45647;
    int32_t wave_sizze_45646;
    int32_t group_tid_45645;
    
    global_tid_45643 = get_global_id(0);
    local_tid_45644 = get_local_id(0);
    group_sizze_45647 = get_local_size(0);
    wave_sizze_45646 = LOCKSTEP_WIDTH;
    group_tid_45645 = get_group_id(0);
    
    int32_t phys_tid_33687;
    
    phys_tid_33687 = global_tid_45643;
    
    __local char *scan_arr_mem_45648;
    
    scan_arr_mem_45648 = (__local char *) scan_arr_mem_45648_backing_0;
    
    int64_t flat_idx_45650;
    
    flat_idx_45650 = (sext_i32_i64(local_tid_45644) + 1) *
        (segscan_group_sizze_33765 * sdiv_up64(m_27932 * iota32_arg_28331,
                                               sext_i32_i64(num_threads_45618))) -
        1;
    
    int64_t gtid_33678;
    
    gtid_33678 = squot64(flat_idx_45650, iota32_arg_28331);
    
    int64_t gtid_33686;
    
    gtid_33686 = flat_idx_45650 - squot64(flat_idx_45650, iota32_arg_28331) *
        iota32_arg_28331;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_33678, m_27932) && slt64(gtid_33686, iota32_arg_28331)) {
            ((__local
              float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)] =
                ((__global float *) mem_44338)[gtid_33678 * iota32_arg_28331 +
                                               gtid_33686];
        } else {
            ((__local
              float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_33769;
    float x_33770;
    float x_45651;
    float x_45652;
    bool ltid_in_bounds_45654;
    
    ltid_in_bounds_45654 = slt64(sext_i32_i64(local_tid_45644),
                                 stage1_num_groups_45617);
    
    int32_t skip_threads_45655;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45654) {
            x_33770 = ((volatile __local
                        float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)];
            if ((local_tid_45644 - squot32(local_tid_45644, 32) * 32) == 0) {
                x_33769 = x_33770;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45655 = 1;
        while (slt32(skip_threads_45655, 32)) {
            if (sle32(skip_threads_45655, local_tid_45644 -
                      squot32(local_tid_45644, 32) * 32) &&
                ltid_in_bounds_45654) {
                // read operands
                {
                    x_33769 = ((volatile __local
                                float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644) -
                                                             sext_i32_i64(skip_threads_45655)];
                }
                // perform operation
                {
                    bool inactive_45656 =
                         slt64(srem64((sext_i32_i64(local_tid_45644) + 1) *
                                      (segscan_group_sizze_33765 *
                                       sdiv_up64(m_27932 * iota32_arg_28331,
                                                 sext_i32_i64(num_threads_45618))) -
                                      1, iota32_arg_28331),
                               (sext_i32_i64(local_tid_45644) + 1) *
                               (segscan_group_sizze_33765 * sdiv_up64(m_27932 *
                                                                      iota32_arg_28331,
                                                                      sext_i32_i64(num_threads_45618))) -
                               1 - ((sext_i32_i64(local_tid_45644 -
                                     skip_threads_45655) + 1) *
                                    (segscan_group_sizze_33765 *
                                     sdiv_up64(m_27932 * iota32_arg_28331,
                                               sext_i32_i64(num_threads_45618))) -
                                    1));
                    
                    if (inactive_45656) {
                        x_33769 = x_33770;
                    }
                    if (!inactive_45656) {
                        float defunc_1_op_res_33771 = x_33769 + x_33770;
                        
                        x_33769 = defunc_1_op_res_33771;
                    }
                }
            }
            if (sle32(wave_sizze_45646, skip_threads_45655)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45655, local_tid_45644 -
                      squot32(local_tid_45644, 32) * 32) &&
                ltid_in_bounds_45654) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)] =
                        x_33769;
                    x_33770 = x_33769;
                }
            }
            if (sle32(wave_sizze_45646, skip_threads_45655)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45655 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45644 - squot32(local_tid_45644, 32) * 32) == 31 &&
            ltid_in_bounds_45654) {
            ((volatile __local
              float *) scan_arr_mem_45648)[sext_i32_i64(squot32(local_tid_45644,
                                                                32))] = x_33769;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45657;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45644, 32) == 0 && ltid_in_bounds_45654) {
                x_45652 = ((volatile __local
                            float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)];
                if ((local_tid_45644 - squot32(local_tid_45644, 32) * 32) ==
                    0) {
                    x_45651 = x_45652;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45657 = 1;
            while (slt32(skip_threads_45657, 32)) {
                if (sle32(skip_threads_45657, local_tid_45644 -
                          squot32(local_tid_45644, 32) * 32) &&
                    (squot32(local_tid_45644, 32) == 0 &&
                     ltid_in_bounds_45654)) {
                    // read operands
                    {
                        x_45651 = ((volatile __local
                                    float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644) -
                                                                 sext_i32_i64(skip_threads_45657)];
                    }
                    // perform operation
                    {
                        bool inactive_45658 =
                             slt64(srem64((sext_i32_i64(local_tid_45644 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_33765 *
                                           sdiv_up64(m_27932 * iota32_arg_28331,
                                                     sext_i32_i64(num_threads_45618))) -
                                          1, iota32_arg_28331),
                                   (sext_i32_i64(local_tid_45644 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_33765 *
                                               sdiv_up64(m_27932 *
                                                         iota32_arg_28331,
                                                         sext_i32_i64(num_threads_45618))) -
                                   1 - ((sext_i32_i64((local_tid_45644 -
                                                       skip_threads_45657) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_33765 *
                                         sdiv_up64(m_27932 * iota32_arg_28331,
                                                   sext_i32_i64(num_threads_45618))) -
                                        1));
                        
                        if (inactive_45658) {
                            x_45651 = x_45652;
                        }
                        if (!inactive_45658) {
                            float defunc_1_op_res_45653 = x_45651 + x_45652;
                            
                            x_45651 = defunc_1_op_res_45653;
                        }
                    }
                }
                if (sle32(wave_sizze_45646, skip_threads_45657)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45657, local_tid_45644 -
                          squot32(local_tid_45644, 32) * 32) &&
                    (squot32(local_tid_45644, 32) == 0 &&
                     ltid_in_bounds_45654)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)] =
                            x_45651;
                        x_45652 = x_45651;
                    }
                }
                if (sle32(wave_sizze_45646, skip_threads_45657)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45657 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45644, 32) == 0 || !ltid_in_bounds_45654)) {
            // read operands
            {
                x_33770 = x_33769;
                x_33769 = ((__local
                            float *) scan_arr_mem_45648)[sext_i32_i64(squot32(local_tid_45644,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45659 =
                     slt64(srem64((sext_i32_i64(local_tid_45644) + 1) *
                                  (segscan_group_sizze_33765 *
                                   sdiv_up64(m_27932 * iota32_arg_28331,
                                             sext_i32_i64(num_threads_45618))) -
                                  1, iota32_arg_28331),
                           (sext_i32_i64(local_tid_45644) + 1) *
                           (segscan_group_sizze_33765 * sdiv_up64(m_27932 *
                                                                  iota32_arg_28331,
                                                                  sext_i32_i64(num_threads_45618))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45644, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_33765 *
                                                 sdiv_up64(m_27932 *
                                                           iota32_arg_28331,
                                                           sext_i32_i64(num_threads_45618))) -
                                1));
                
                if (inactive_45659) {
                    x_33769 = x_33770;
                }
                if (!inactive_45659) {
                    float defunc_1_op_res_33771 = x_33769 + x_33770;
                    
                    x_33769 = defunc_1_op_res_33771;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)] =
                    x_33769;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45644, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)] =
                x_33770;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_33678, m_27932) && slt64(gtid_33686, iota32_arg_28331)) {
            ((__global float *) mem_44338)[gtid_33678 * iota32_arg_28331 +
                                           gtid_33686] = ((__local
                                                           float *) scan_arr_mem_45648)[sext_i32_i64(local_tid_45644)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33765
}
__kernel void mainDetailedziscan_stage3_32099(__global int *global_failure,
                                              int64_t N_27931, int64_t m_27932,
                                              int64_t num_groups_32117, __global
                                              unsigned char *mem_44165,
                                              int32_t num_threads_45247,
                                              int32_t required_groups_45289)
{
    #define segscan_group_sizze_32116 (mainDetailedzisegscan_group_sizze_32093)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45290;
    int32_t local_tid_45291;
    int64_t group_sizze_45294;
    int32_t wave_sizze_45293;
    int32_t group_tid_45292;
    
    global_tid_45290 = get_global_id(0);
    local_tid_45291 = get_local_id(0);
    group_sizze_45294 = get_local_size(0);
    wave_sizze_45293 = LOCKSTEP_WIDTH;
    group_tid_45292 = get_group_id(0);
    
    int32_t phys_tid_32099;
    
    phys_tid_32099 = global_tid_45290;
    
    int32_t phys_group_id_45295;
    
    phys_group_id_45295 = get_group_id(0);
    for (int32_t i_45296 = 0; i_45296 < sdiv_up32(required_groups_45289 -
                                                  phys_group_id_45295,
                                                  sext_i64_i32(num_groups_32117));
         i_45296++) {
        int32_t virt_group_id_45297 = phys_group_id_45295 + i_45296 *
                sext_i64_i32(num_groups_32117);
        int64_t flat_idx_45298 = sext_i32_i64(virt_group_id_45297) *
                segscan_group_sizze_32116 + sext_i32_i64(local_tid_45291);
        int64_t gtid_32090 = squot64(flat_idx_45298, N_27931);
        int64_t gtid_32098 = flat_idx_45298 - squot64(flat_idx_45298, N_27931) *
                N_27931;
        int64_t orig_group_45299 = squot64(flat_idx_45298,
                                           segscan_group_sizze_32116 *
                                           sdiv_up64(m_27932 * N_27931,
                                                     sext_i32_i64(num_threads_45247)));
        int64_t carry_in_flat_idx_45300 = orig_group_45299 *
                (segscan_group_sizze_32116 * sdiv_up64(m_27932 * N_27931,
                                                       sext_i32_i64(num_threads_45247))) -
                1;
        
        if (slt64(gtid_32090, m_27932) && slt64(gtid_32098, N_27931)) {
            if (!(orig_group_45299 == 0 || (flat_idx_45298 ==
                                            (orig_group_45299 + 1) *
                                            (segscan_group_sizze_32116 *
                                             sdiv_up64(m_27932 * N_27931,
                                                       sext_i32_i64(num_threads_45247))) -
                                            1 || slt64(srem64(flat_idx_45298,
                                                              N_27931),
                                                       flat_idx_45298 -
                                                       carry_in_flat_idx_45300)))) {
                int64_t x_32121;
                int64_t x_32122;
                
                x_32121 = ((__global
                            int64_t *) mem_44165)[squot64(carry_in_flat_idx_45300,
                                                          N_27931) * N_27931 +
                                                  (carry_in_flat_idx_45300 -
                                                   squot64(carry_in_flat_idx_45300,
                                                           N_27931) * N_27931)];
                x_32122 = ((__global int64_t *) mem_44165)[gtid_32090 *
                                                           N_27931 +
                                                           gtid_32098];
                
                int64_t defunc_1_op_res_32123;
                
                defunc_1_op_res_32123 = add64(x_32121, x_32122);
                x_32121 = defunc_1_op_res_32123;
                ((__global int64_t *) mem_44165)[gtid_32090 * N_27931 +
                                                 gtid_32098] = x_32121;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_32116
}
__kernel void mainDetailedziscan_stage3_33687(__global int *global_failure,
                                              int64_t m_27932,
                                              int64_t iota32_arg_28331,
                                              int64_t num_groups_33766, __global
                                              unsigned char *mem_44338,
                                              int32_t num_threads_45618,
                                              int32_t required_groups_45660)
{
    #define segscan_group_sizze_33765 (mainDetailedzisegscan_group_sizze_33681)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45661;
    int32_t local_tid_45662;
    int64_t group_sizze_45665;
    int32_t wave_sizze_45664;
    int32_t group_tid_45663;
    
    global_tid_45661 = get_global_id(0);
    local_tid_45662 = get_local_id(0);
    group_sizze_45665 = get_local_size(0);
    wave_sizze_45664 = LOCKSTEP_WIDTH;
    group_tid_45663 = get_group_id(0);
    
    int32_t phys_tid_33687;
    
    phys_tid_33687 = global_tid_45661;
    
    int32_t phys_group_id_45666;
    
    phys_group_id_45666 = get_group_id(0);
    for (int32_t i_45667 = 0; i_45667 < sdiv_up32(required_groups_45660 -
                                                  phys_group_id_45666,
                                                  sext_i64_i32(num_groups_33766));
         i_45667++) {
        int32_t virt_group_id_45668 = phys_group_id_45666 + i_45667 *
                sext_i64_i32(num_groups_33766);
        int64_t flat_idx_45669 = sext_i32_i64(virt_group_id_45668) *
                segscan_group_sizze_33765 + sext_i32_i64(local_tid_45662);
        int64_t gtid_33678 = squot64(flat_idx_45669, iota32_arg_28331);
        int64_t gtid_33686 = flat_idx_45669 - squot64(flat_idx_45669,
                                                      iota32_arg_28331) *
                iota32_arg_28331;
        int64_t orig_group_45670 = squot64(flat_idx_45669,
                                           segscan_group_sizze_33765 *
                                           sdiv_up64(m_27932 * iota32_arg_28331,
                                                     sext_i32_i64(num_threads_45618)));
        int64_t carry_in_flat_idx_45671 = orig_group_45670 *
                (segscan_group_sizze_33765 * sdiv_up64(m_27932 *
                                                       iota32_arg_28331,
                                                       sext_i32_i64(num_threads_45618))) -
                1;
        
        if (slt64(gtid_33678, m_27932) && slt64(gtid_33686, iota32_arg_28331)) {
            if (!(orig_group_45670 == 0 || (flat_idx_45669 ==
                                            (orig_group_45670 + 1) *
                                            (segscan_group_sizze_33765 *
                                             sdiv_up64(m_27932 *
                                                       iota32_arg_28331,
                                                       sext_i32_i64(num_threads_45618))) -
                                            1 || slt64(srem64(flat_idx_45669,
                                                              iota32_arg_28331),
                                                       flat_idx_45669 -
                                                       carry_in_flat_idx_45671)))) {
                float x_33769;
                float x_33770;
                
                x_33769 = ((__global
                            float *) mem_44338)[squot64(carry_in_flat_idx_45671,
                                                        iota32_arg_28331) *
                                                iota32_arg_28331 +
                                                (carry_in_flat_idx_45671 -
                                                 squot64(carry_in_flat_idx_45671,
                                                         iota32_arg_28331) *
                                                 iota32_arg_28331)];
                x_33770 = ((__global float *) mem_44338)[gtid_33678 *
                                                         iota32_arg_28331 +
                                                         gtid_33686];
                
                float defunc_1_op_res_33771;
                
                defunc_1_op_res_33771 = x_33769 + x_33770;
                x_33769 = defunc_1_op_res_33771;
                ((__global float *) mem_44338)[gtid_33678 * iota32_arg_28331 +
                                               gtid_33686] = x_33769;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33765
}
__kernel void mainDetailedzisegmap_30022(__global int *global_failure,
                                         int64_t N_27931, float freq_27937,
                                         int64_t i32_res_27951, __global
                                         unsigned char *mappingindices_mem_43377,
                                         __global unsigned char *mem_43382)
{
    #define segmap_group_sizze_30095 (mainDetailedzisegmap_group_sizze_30025)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44654;
    int32_t local_tid_44655;
    int64_t group_sizze_44658;
    int32_t wave_sizze_44657;
    int32_t group_tid_44656;
    
    global_tid_44654 = get_global_id(0);
    local_tid_44655 = get_local_id(0);
    group_sizze_44658 = get_local_size(0);
    wave_sizze_44657 = LOCKSTEP_WIDTH;
    group_tid_44656 = get_group_id(0);
    
    int32_t phys_tid_30022;
    
    phys_tid_30022 = global_tid_44654;
    
    int64_t gtid_30020;
    
    gtid_30020 = squot64(sext_i32_i64(group_tid_44656) *
                         segmap_group_sizze_30095 +
                         sext_i32_i64(local_tid_44655), N_27931);
    
    int64_t gtid_30021;
    
    gtid_30021 = sext_i32_i64(group_tid_44656) * segmap_group_sizze_30095 +
        sext_i32_i64(local_tid_44655) - squot64(sext_i32_i64(group_tid_44656) *
                                                segmap_group_sizze_30095 +
                                                sext_i32_i64(local_tid_44655),
                                                N_27931) * N_27931;
    if (slt64(gtid_30020, i32_res_27951) && slt64(gtid_30021, N_27931)) {
        int32_t index_primexp_41372 = sext_i64_i32(gtid_30020);
        bool index_primexp_41369 = index_primexp_41372 == 0;
        float defunc_0_f_res_30101;
        
        if (index_primexp_41369) {
            defunc_0_f_res_30101 = 1.0F;
        } else {
            int32_t x_30100 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_30021];
            bool cond_30102 = index_primexp_41372 == 1;
            float defunc_0_f_res_f_res_30103;
            
            if (cond_30102) {
                float i32_res_30104 = sitofp_i32_f32(x_30100);
                
                defunc_0_f_res_f_res_30103 = i32_res_30104;
            } else {
                int32_t r32_arg_30105 = sdiv32(index_primexp_41372, 2);
                float i32_res_30106 = sitofp_i32_f32(r32_arg_30105);
                float i32_res_30107 = sitofp_i32_f32(x_30100);
                float x_30108 = 6.2831855F * i32_res_30106;
                float x_30109 = i32_res_30107 * x_30108;
                float angle_30110 = x_30109 / freq_27937;
                int32_t x_30111 = smod32(index_primexp_41372, 2);
                bool cond_30112 = x_30111 == 0;
                float defunc_0_f_res_f_res_f_res_30113;
                
                if (cond_30112) {
                    float sin_res_30114;
                    
                    sin_res_30114 = futrts_sin32(angle_30110);
                    defunc_0_f_res_f_res_f_res_30113 = sin_res_30114;
                } else {
                    float cos_res_30115;
                    
                    cos_res_30115 = futrts_cos32(angle_30110);
                    defunc_0_f_res_f_res_f_res_30113 = cos_res_30115;
                }
                defunc_0_f_res_f_res_30103 = defunc_0_f_res_f_res_f_res_30113;
            }
            defunc_0_f_res_30101 = defunc_0_f_res_f_res_30103;
        }
        ((__global float *) mem_43382)[gtid_30020 * N_27931 + gtid_30021] =
            defunc_0_f_res_30101;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30095
}
__kernel void mainDetailedzisegmap_30200(__global int *global_failure,
                                         int64_t N_27931, float freq_27937,
                                         int64_t i32_res_27951, __global
                                         unsigned char *mappingindices_mem_43377,
                                         __global unsigned char *mem_43386)
{
    #define segmap_group_sizze_30269 (mainDetailedzisegmap_group_sizze_30203)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44659;
    int32_t local_tid_44660;
    int64_t group_sizze_44663;
    int32_t wave_sizze_44662;
    int32_t group_tid_44661;
    
    global_tid_44659 = get_global_id(0);
    local_tid_44660 = get_local_id(0);
    group_sizze_44663 = get_local_size(0);
    wave_sizze_44662 = LOCKSTEP_WIDTH;
    group_tid_44661 = get_group_id(0);
    
    int32_t phys_tid_30200;
    
    phys_tid_30200 = global_tid_44659;
    
    int64_t gtid_30198;
    
    gtid_30198 = squot64(sext_i32_i64(group_tid_44661) *
                         segmap_group_sizze_30269 +
                         sext_i32_i64(local_tid_44660), N_27931);
    
    int64_t gtid_30199;
    
    gtid_30199 = sext_i32_i64(group_tid_44661) * segmap_group_sizze_30269 +
        sext_i32_i64(local_tid_44660) - squot64(sext_i32_i64(group_tid_44661) *
                                                segmap_group_sizze_30269 +
                                                sext_i32_i64(local_tid_44660),
                                                N_27931) * N_27931;
    if (slt64(gtid_30198, i32_res_27951) && slt64(gtid_30199, N_27931)) {
        int32_t index_primexp_41381 = sext_i64_i32(gtid_30198);
        bool index_primexp_41378 = index_primexp_41381 == 0;
        float defunc_0_f_res_30275;
        
        if (index_primexp_41378) {
            defunc_0_f_res_30275 = 1.0F;
        } else {
            int32_t x_30274 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_30199];
            int32_t i_30276 = add32(1, index_primexp_41381);
            int32_t r32_arg_30277 = sdiv32(i_30276, 2);
            float i32_res_30278 = sitofp_i32_f32(r32_arg_30277);
            float i32_res_30279 = sitofp_i32_f32(x_30274);
            float x_30280 = 6.2831855F * i32_res_30278;
            float x_30281 = i32_res_30279 * x_30280;
            float angle_30282 = x_30281 / freq_27937;
            int32_t x_30283 = smod32(i_30276, 2);
            bool cond_30284 = x_30283 == 0;
            float defunc_0_f_res_f_res_30285;
            
            if (cond_30284) {
                float sin_res_30286;
                
                sin_res_30286 = futrts_sin32(angle_30282);
                defunc_0_f_res_f_res_30285 = sin_res_30286;
            } else {
                float cos_res_30287;
                
                cos_res_30287 = futrts_cos32(angle_30282);
                defunc_0_f_res_f_res_30285 = cos_res_30287;
            }
            defunc_0_f_res_30275 = defunc_0_f_res_f_res_30285;
        }
        ((__global float *) mem_43386)[gtid_30198 * N_27931 + gtid_30199] =
            defunc_0_f_res_30275;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30269
}
__kernel void mainDetailedzisegmap_30328(__global int *global_failure,
                                         int64_t N_27931, int64_t i32_res_27951,
                                         float i32_res_28016, __global
                                         unsigned char *mem_43390, __global
                                         unsigned char *mem_43394)
{
    #define segmap_group_sizze_30352 (mainDetailedzisegmap_group_sizze_30331)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44664;
    int32_t local_tid_44665;
    int64_t group_sizze_44668;
    int32_t wave_sizze_44667;
    int32_t group_tid_44666;
    
    global_tid_44664 = get_global_id(0);
    local_tid_44665 = get_local_id(0);
    group_sizze_44668 = get_local_size(0);
    wave_sizze_44667 = LOCKSTEP_WIDTH;
    group_tid_44666 = get_group_id(0);
    
    int32_t phys_tid_30328;
    
    phys_tid_30328 = global_tid_44664;
    
    int64_t gtid_30326;
    
    gtid_30326 = squot64(sext_i32_i64(group_tid_44666) *
                         segmap_group_sizze_30352 +
                         sext_i32_i64(local_tid_44665), i32_res_27951);
    
    int64_t gtid_30327;
    
    gtid_30327 = sext_i32_i64(group_tid_44666) * segmap_group_sizze_30352 +
        sext_i32_i64(local_tid_44665) - squot64(sext_i32_i64(group_tid_44666) *
                                                segmap_group_sizze_30352 +
                                                sext_i32_i64(local_tid_44665),
                                                i32_res_27951) * i32_res_27951;
    if (slt64(gtid_30326, N_27931) && slt64(gtid_30327, i32_res_27951)) {
        float x_30355 = ((__global float *) mem_43390)[gtid_30326 *
                                                       i32_res_27951 +
                                                       gtid_30327];
        float defunc_0_f_res_30356 = i32_res_28016 + x_30355;
        
        ((__global float *) mem_43394)[gtid_30326 * i32_res_27951 +
                                       gtid_30327] = defunc_0_f_res_30356;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30352
}
__kernel void mainDetailedzisegmap_30361(__global int *global_failure,
                                         int64_t N_27931, int64_t m_27932,
                                         int32_t n_27936, int32_t k2p2zq_27949,
                                         int64_t i32_res_27951,
                                         int64_t num_groups_30386, __global
                                         unsigned char *binop_p_mem_43387,
                                         __global unsigned char *mem_43394,
                                         __global unsigned char *mem_43397,
                                         __global unsigned char *mem_43401,
                                         __global unsigned char *mem_43443)
{
    #define segmap_group_sizze_30385 (mainDetailedzisegmap_group_sizze_30363)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44672;
    int32_t local_tid_44673;
    int64_t group_sizze_44676;
    int32_t wave_sizze_44675;
    int32_t group_tid_44674;
    
    global_tid_44672 = get_global_id(0);
    local_tid_44673 = get_local_id(0);
    group_sizze_44676 = get_local_size(0);
    wave_sizze_44675 = LOCKSTEP_WIDTH;
    group_tid_44674 = get_group_id(0);
    
    int32_t phys_tid_30361;
    
    phys_tid_30361 = global_tid_44672;
    
    int32_t phys_group_id_44677;
    
    phys_group_id_44677 = get_group_id(0);
    for (int32_t i_44678 = 0; i_44678 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932, segmap_group_sizze_30385)) -
                   phys_group_id_44677, sext_i64_i32(num_groups_30386));
         i_44678++) {
        int32_t virt_group_id_44679 = phys_group_id_44677 + i_44678 *
                sext_i64_i32(num_groups_30386);
        int64_t gtid_30360 = sext_i32_i64(virt_group_id_44679) *
                segmap_group_sizze_30385 + sext_i32_i64(local_tid_44673);
        
        if (slt64(gtid_30360, m_27932)) {
            for (int32_t i_43359 = 0; i_43359 < k2p2zq_27949; i_43359++) {
                int64_t i_43307 = sext_i32_i64(i_43359);
                
                for (int32_t i_43358 = 0; i_43358 < k2p2zq_27949; i_43358++) {
                    int64_t i_43311 = sext_i32_i64(i_43358);
                    float defunc_2_reduce_res_30394;
                    float redout_43313 = 0.0F;
                    
                    for (int32_t i_43357 = 0; i_43357 < n_27936; i_43357++) {
                        int64_t i_43314 = sext_i32_i64(i_43357);
                        float x_30398 = ((__global float *) mem_43397)[i_43314 *
                                                                       m_27932 +
                                                                       gtid_30360];
                        float x_30399 = ((__global
                                          float *) binop_p_mem_43387)[i_43307 *
                                                                      N_27931 +
                                                                      i_43314];
                        float x_30400 = ((__global float *) mem_43394)[i_43314 *
                                                                       i32_res_27951 +
                                                                       i_43311];
                        float x_30401 = x_30399 * x_30400;
                        bool isnan_res_30402;
                        
                        isnan_res_30402 = futrts_isnan32(x_30398);
                        
                        float y_30403;
                        
                        if (isnan_res_30402) {
                            y_30403 = 0.0F;
                        } else {
                            y_30403 = 1.0F;
                        }
                        
                        float defunc_2_f_res_30404 = x_30401 * y_30403;
                        float defunc_1_op_res_30397 = defunc_2_f_res_30404 +
                              redout_43313;
                        float redout_tmp_44682 = defunc_1_op_res_30397;
                        
                        redout_43313 = redout_tmp_44682;
                    }
                    defunc_2_reduce_res_30394 = redout_43313;
                    ((__global float *) mem_43401)[phys_tid_30361 + (i_43307 *
                                                                     (num_groups_30386 *
                                                                      segmap_group_sizze_30385 *
                                                                      i32_res_27951) +
                                                                     i_43311 *
                                                                     (num_groups_30386 *
                                                                      segmap_group_sizze_30385))] =
                        defunc_2_reduce_res_30394;
                }
            }
            for (int64_t i_44683 = 0; i_44683 < i32_res_27951; i_44683++) {
                for (int64_t i_44684 = 0; i_44684 < i32_res_27951; i_44684++) {
                    ((__global float *) mem_43443)[i_44683 * (m_27932 *
                                                              i32_res_27951) +
                                                   i_44684 * m_27932 +
                                                   gtid_30360] = ((__global
                                                                   float *) mem_43401)[phys_tid_30361 +
                                                                                       (i_44683 *
                                                                                        (num_groups_30386 *
                                                                                         segmap_group_sizze_30385 *
                                                                                         i32_res_27951) +
                                                                                        i_44684 *
                                                                                        (num_groups_30386 *
                                                                                         segmap_group_sizze_30385))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30385
}
__kernel void mainDetailedzisegmap_30407(__global int *global_failure,
                                         int64_t m_27932, int64_t N_27933,
                                         int32_t n_27936, int32_t k2p2zq_27949,
                                         int64_t i32_res_27951,
                                         int64_t num_groups_30563, __global
                                         unsigned char *images_mem_43378,
                                         __global unsigned char *mem_43390,
                                         __global unsigned char *mem_43394,
                                         __global unsigned char *mem_43446,
                                         __global unsigned char *mem_43462)
{
    #define segmap_group_sizze_30562 (mainDetailedzisegmap_group_sizze_30410)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44685;
    int32_t local_tid_44686;
    int64_t group_sizze_44689;
    int32_t wave_sizze_44688;
    int32_t group_tid_44687;
    
    global_tid_44685 = get_global_id(0);
    local_tid_44686 = get_local_id(0);
    group_sizze_44689 = get_local_size(0);
    wave_sizze_44688 = LOCKSTEP_WIDTH;
    group_tid_44687 = get_group_id(0);
    
    int32_t phys_tid_30407;
    
    phys_tid_30407 = global_tid_44685;
    
    int32_t phys_group_id_44690;
    
    phys_group_id_44690 = get_group_id(0);
    for (int32_t i_44691 = 0; i_44691 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932 * i32_res_27951,
                                          segmap_group_sizze_30562)) -
                   phys_group_id_44690, sext_i64_i32(num_groups_30563));
         i_44691++) {
        int32_t virt_group_id_44692 = phys_group_id_44690 + i_44691 *
                sext_i64_i32(num_groups_30563);
        int64_t gtid_30405 = squot64(sext_i32_i64(virt_group_id_44692) *
                                     segmap_group_sizze_30562 +
                                     sext_i32_i64(local_tid_44686),
                                     i32_res_27951);
        int64_t gtid_30406 = sext_i32_i64(virt_group_id_44692) *
                segmap_group_sizze_30562 + sext_i32_i64(local_tid_44686) -
                squot64(sext_i32_i64(virt_group_id_44692) *
                        segmap_group_sizze_30562 +
                        sext_i32_i64(local_tid_44686), i32_res_27951) *
                i32_res_27951;
        
        if (slt64(gtid_30405, m_27932) && slt64(gtid_30406, i32_res_27951)) {
            for (int32_t i_43361 = 0; i_43361 < k2p2zq_27949; i_43361++) {
                int64_t i_43317 = sext_i32_i64(i_43361);
                float defunc_2_reduce_res_30574;
                float redout_43319 = 0.0F;
                
                for (int32_t i_43360 = 0; i_43360 < n_27936; i_43360++) {
                    int64_t i_43320 = sext_i32_i64(i_43360);
                    float x_30578 = ((__global
                                      float *) images_mem_43378)[gtid_30405 *
                                                                 N_27933 +
                                                                 i_43320];
                    float x_30579 = ((__global float *) mem_43390)[i_43320 *
                                                                   i32_res_27951 +
                                                                   gtid_30406];
                    float x_30580 = ((__global float *) mem_43394)[i_43320 *
                                                                   i32_res_27951 +
                                                                   i_43317];
                    float x_30581 = x_30579 * x_30580;
                    bool isnan_res_30582;
                    
                    isnan_res_30582 = futrts_isnan32(x_30578);
                    
                    float y_30583;
                    
                    if (isnan_res_30582) {
                        y_30583 = 0.0F;
                    } else {
                        y_30583 = 1.0F;
                    }
                    
                    float defunc_2_f_res_30584 = x_30581 * y_30583;
                    float defunc_1_op_res_30577 = defunc_2_f_res_30584 +
                          redout_43319;
                    float redout_tmp_44694 = defunc_1_op_res_30577;
                    
                    redout_43319 = redout_tmp_44694;
                }
                defunc_2_reduce_res_30574 = redout_43319;
                ((__global float *) mem_43446)[phys_tid_30407 + i_43317 *
                                               (num_groups_30563 *
                                                segmap_group_sizze_30562)] =
                    defunc_2_reduce_res_30574;
            }
            for (int64_t i_44695 = 0; i_44695 < i32_res_27951; i_44695++) {
                ((__global float *) mem_43462)[i_44695 * (i32_res_27951 *
                                                          m_27932) +
                                               gtid_30405 * i32_res_27951 +
                                               gtid_30406] = ((__global
                                                               float *) mem_43446)[phys_tid_30407 +
                                                                                   i_44695 *
                                                                                   (num_groups_30563 *
                                                                                    segmap_group_sizze_30562)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30562
}
__kernel void mainDetailedzisegmap_30891(__global int *global_failure,
                                         int64_t m_27932, int64_t i32_res_27951,
                                         int64_t i32_res_28084,
                                         int64_t i32_res_28099, int64_t x_28100,
                                         int64_t j_m_i_28103,
                                         int64_t gauss_jordan_res_r_ixfn_43614,
                                         int64_t gauss_jordan_res_r_ixfn_43615,
                                         int64_t gauss_jordan_res_r_ixfn_43617,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_43619,
                                         __global unsigned char *mem_43624)
{
    #define segmap_group_sizze_31442 (mainDetailedzisegmap_group_sizze_30895)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44851;
    int32_t local_tid_44852;
    int64_t group_sizze_44855;
    int32_t wave_sizze_44854;
    int32_t group_tid_44853;
    
    global_tid_44851 = get_global_id(0);
    local_tid_44852 = get_local_id(0);
    group_sizze_44855 = get_local_size(0);
    wave_sizze_44854 = LOCKSTEP_WIDTH;
    group_tid_44853 = get_group_id(0);
    
    int32_t phys_tid_30891;
    
    phys_tid_30891 = global_tid_44851;
    
    int64_t gtid_30888;
    
    gtid_30888 = squot64(sext_i32_i64(group_tid_44853) *
                         segmap_group_sizze_31442 +
                         sext_i32_i64(local_tid_44852), i32_res_27951 *
                         j_m_i_28103);
    
    int64_t gtid_slice_30886;
    
    gtid_slice_30886 = squot64(sext_i32_i64(group_tid_44853) *
                               segmap_group_sizze_31442 +
                               sext_i32_i64(local_tid_44852) -
                               squot64(sext_i32_i64(group_tid_44853) *
                                       segmap_group_sizze_31442 +
                                       sext_i32_i64(local_tid_44852),
                                       i32_res_27951 * j_m_i_28103) *
                               (i32_res_27951 * j_m_i_28103), j_m_i_28103);
    
    int64_t gtid_slice_30887;
    
    gtid_slice_30887 = sext_i32_i64(group_tid_44853) *
        segmap_group_sizze_31442 + sext_i32_i64(local_tid_44852) -
        squot64(sext_i32_i64(group_tid_44853) * segmap_group_sizze_31442 +
                sext_i32_i64(local_tid_44852), i32_res_27951 * j_m_i_28103) *
        (i32_res_27951 * j_m_i_28103) - squot64(sext_i32_i64(group_tid_44853) *
                                                segmap_group_sizze_31442 +
                                                sext_i32_i64(local_tid_44852) -
                                                squot64(sext_i32_i64(group_tid_44853) *
                                                        segmap_group_sizze_31442 +
                                                        sext_i32_i64(local_tid_44852),
                                                        i32_res_27951 *
                                                        j_m_i_28103) *
                                                (i32_res_27951 * j_m_i_28103),
                                                j_m_i_28103) * j_m_i_28103;
    if ((slt64(gtid_30888, m_27932) && slt64(gtid_slice_30886,
                                             i32_res_27951)) &&
        slt64(gtid_slice_30887, j_m_i_28103)) {
        int64_t slice_31446 = i32_res_27951 + gtid_slice_30887;
        int64_t binop_x_41451 = x_28100 * gtid_30888;
        int64_t binop_y_41452 = i32_res_28099 * gtid_slice_30886;
        int64_t binop_x_41453 = binop_x_41451 + binop_y_41452;
        int64_t binop_x_41454 = slice_31446 + binop_x_41453;
        int64_t new_index_41455 = squot64(binop_x_41454, i32_res_28084);
        int64_t binop_y_41467 = i32_res_28084 * new_index_41455;
        int64_t new_index_41468 = binop_x_41454 - binop_y_41467;
        float v_31447 = ((__global
                          float *) gauss_jordan_res_r_mem_43619)[gauss_jordan_res_r_ixfn_43614 +
                                                                 (new_index_41455 *
                                                                  gauss_jordan_res_r_ixfn_43615 +
                                                                  new_index_41468 *
                                                                  gauss_jordan_res_r_ixfn_43617)];
        
        ((__global float *) mem_43624)[gtid_30888 * (j_m_i_28103 *
                                                     i32_res_27951) +
                                       gtid_slice_30886 * j_m_i_28103 +
                                       gtid_slice_30887] = v_31447;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31442
}
__kernel void mainDetailedzisegmap_31057(__global int *global_failure,
                                         int64_t m_27932, int64_t i32_res_28084,
                                         int64_t ctx_param_ext_43577,
                                         int64_t ctx_param_ext_43578,
                                         int64_t ctx_param_ext_43580, __global
                                         unsigned char *mem_param_43582,
                                         __global unsigned char *mem_43602)
{
    #define segmap_group_sizze_31430 (mainDetailedzisegmap_group_sizze_31060)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44845;
    int32_t local_tid_44846;
    int64_t group_sizze_44849;
    int32_t wave_sizze_44848;
    int32_t group_tid_44847;
    
    global_tid_44845 = get_global_id(0);
    local_tid_44846 = get_local_id(0);
    group_sizze_44849 = get_local_size(0);
    wave_sizze_44848 = LOCKSTEP_WIDTH;
    group_tid_44847 = get_group_id(0);
    
    int32_t phys_tid_31057;
    
    phys_tid_31057 = global_tid_44845;
    
    int64_t gtid_31055;
    
    gtid_31055 = squot64(sext_i32_i64(group_tid_44847) *
                         segmap_group_sizze_31430 +
                         sext_i32_i64(local_tid_44846), i32_res_28084);
    
    int64_t gtid_31056;
    
    gtid_31056 = sext_i32_i64(group_tid_44847) * segmap_group_sizze_31430 +
        sext_i32_i64(local_tid_44846) - squot64(sext_i32_i64(group_tid_44847) *
                                                segmap_group_sizze_31430 +
                                                sext_i32_i64(local_tid_44846),
                                                i32_res_28084) * i32_res_28084;
    if (slt64(gtid_31055, m_27932) && slt64(gtid_31056, i32_res_28084)) {
        float write_value_31436 = ((__global float *) mem_43602)[gtid_31055 *
                                                                 i32_res_28084 +
                                                                 gtid_31056];
        
        if ((sle64(0, gtid_31055) && slt64(gtid_31055, m_27932)) && (sle64(0,
                                                                           gtid_31056) &&
                                                                     slt64(gtid_31056,
                                                                           i32_res_28084))) {
            ((__global float *) mem_param_43582)[ctx_param_ext_43577 +
                                                 (gtid_31055 *
                                                  ctx_param_ext_43578 +
                                                  gtid_31056 *
                                                  ctx_param_ext_43580)] =
                write_value_31436;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31430
}
__kernel void mainDetailedzisegmap_31111(__global int *global_failure,
                                         int64_t m_27932, int32_t k2p2zq_27949,
                                         int32_t m_28082, int64_t i32_res_28084,
                                         int32_t i_31333, int64_t i32_res_31335,
                                         int64_t ctx_param_ext_43577,
                                         int64_t ctx_param_ext_43578,
                                         int64_t ctx_param_ext_43580, __global
                                         unsigned char *mem_param_43582,
                                         __global unsigned char *mem_43598,
                                         __global unsigned char *mem_43602)
{
    #define segmap_group_sizze_31396 (mainDetailedzisegmap_group_sizze_31114)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44840;
    int32_t local_tid_44841;
    int64_t group_sizze_44844;
    int32_t wave_sizze_44843;
    int32_t group_tid_44842;
    
    global_tid_44840 = get_global_id(0);
    local_tid_44841 = get_local_id(0);
    group_sizze_44844 = get_local_size(0);
    wave_sizze_44843 = LOCKSTEP_WIDTH;
    group_tid_44842 = get_group_id(0);
    
    int32_t phys_tid_31111;
    
    phys_tid_31111 = global_tid_44840;
    
    int64_t gtid_31109;
    
    gtid_31109 = squot64(sext_i32_i64(group_tid_44842) *
                         segmap_group_sizze_31396 +
                         sext_i32_i64(local_tid_44841), i32_res_28084);
    
    int64_t gtid_31110;
    
    gtid_31110 = sext_i32_i64(group_tid_44842) * segmap_group_sizze_31396 +
        sext_i32_i64(local_tid_44841) - squot64(sext_i32_i64(group_tid_44842) *
                                                segmap_group_sizze_31396 +
                                                sext_i32_i64(local_tid_44841),
                                                i32_res_28084) * i32_res_28084;
    if (slt64(gtid_31109, m_27932) && slt64(gtid_31110, i32_res_28084)) {
        bool cond_31401 = ((__global bool *) mem_43598)[gtid_31109];
        int32_t defunc_0_f_res_31403 = sext_i64_i32(gtid_31110);
        int32_t defunc_0_f_res_31404 = sdiv32(defunc_0_f_res_31403, m_28082);
        int32_t defunc_0_f_res_31405 = smod32(defunc_0_f_res_31403, m_28082);
        float defunc_0_f_res_31406;
        
        if (cond_31401) {
            int32_t x_31407 = mul32(m_28082, defunc_0_f_res_31404);
            int32_t i32_arg_31408 = add32(defunc_0_f_res_31405, x_31407);
            int64_t i32_res_31409 = sext_i32_i64(i32_arg_31408);
            float defunc_0_f_res_t_res_31410 = ((__global
                                                 float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                           (gtid_31109 *
                                                                            ctx_param_ext_43578 +
                                                                            i32_res_31409 *
                                                                            ctx_param_ext_43580)];
            
            defunc_0_f_res_31406 = defunc_0_f_res_t_res_31410;
        } else {
            float v1_31400 = ((__global
                               float *) mem_param_43582)[ctx_param_ext_43577 +
                                                         (gtid_31109 *
                                                          ctx_param_ext_43578 +
                                                          i32_res_31335 *
                                                          ctx_param_ext_43580)];
            int64_t i32_res_31411 = sext_i32_i64(defunc_0_f_res_31405);
            float x_31412 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_31109 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_31411 *
                                                         ctx_param_ext_43580)];
            float x_31413 = x_31412 / v1_31400;
            int32_t y_31414 = sub32(k2p2zq_27949, 1);
            bool cond_31415 = slt32(defunc_0_f_res_31404, y_31414);
            float defunc_0_f_res_f_res_31416;
            
            if (cond_31415) {
                int32_t x_31417 = add32(1, defunc_0_f_res_31404);
                int32_t x_31418 = mul32(m_28082, x_31417);
                int32_t i32_arg_31419 = add32(defunc_0_f_res_31405, x_31418);
                int64_t i32_res_31420 = sext_i32_i64(i32_arg_31419);
                float x_31421 = ((__global
                                  float *) mem_param_43582)[ctx_param_ext_43577 +
                                                            (gtid_31109 *
                                                             ctx_param_ext_43578 +
                                                             i32_res_31420 *
                                                             ctx_param_ext_43580)];
                int32_t i32_arg_31422 = add32(i_31333, x_31418);
                int64_t i32_res_31423 = sext_i32_i64(i32_arg_31422);
                float x_31424 = ((__global
                                  float *) mem_param_43582)[ctx_param_ext_43577 +
                                                            (gtid_31109 *
                                                             ctx_param_ext_43578 +
                                                             i32_res_31423 *
                                                             ctx_param_ext_43580)];
                float y_31425 = x_31413 * x_31424;
                float defunc_0_f_res_f_res_t_res_31426 = x_31421 - y_31425;
                
                defunc_0_f_res_f_res_31416 = defunc_0_f_res_f_res_t_res_31426;
            } else {
                defunc_0_f_res_f_res_31416 = x_31413;
            }
            defunc_0_f_res_31406 = defunc_0_f_res_f_res_31416;
        }
        ((__global float *) mem_43602)[gtid_31109 * i32_res_28084 +
                                       gtid_31110] = defunc_0_f_res_31406;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31396
}
__kernel void mainDetailedzisegmap_31179(__global int *global_failure,
                                         int64_t m_27932, int64_t i32_res_31335,
                                         int64_t ctx_param_ext_43577,
                                         int64_t ctx_param_ext_43578,
                                         int64_t ctx_param_ext_43580, __global
                                         unsigned char *mem_param_43582,
                                         __global unsigned char *mem_43598)
{
    #define segmap_group_sizze_31380 (mainDetailedzisegmap_group_sizze_31181)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44835;
    int32_t local_tid_44836;
    int64_t group_sizze_44839;
    int32_t wave_sizze_44838;
    int32_t group_tid_44837;
    
    global_tid_44835 = get_global_id(0);
    local_tid_44836 = get_local_id(0);
    group_sizze_44839 = get_local_size(0);
    wave_sizze_44838 = LOCKSTEP_WIDTH;
    group_tid_44837 = get_group_id(0);
    
    int32_t phys_tid_31179;
    
    phys_tid_31179 = global_tid_44835;
    
    int64_t gtid_31178;
    
    gtid_31178 = sext_i32_i64(group_tid_44837) * segmap_group_sizze_31380 +
        sext_i32_i64(local_tid_44836);
    if (slt64(gtid_31178, m_27932)) {
        float v1_31385 = ((__global
                           float *) mem_param_43582)[ctx_param_ext_43577 +
                                                     (gtid_31178 *
                                                      ctx_param_ext_43578 +
                                                      i32_res_31335 *
                                                      ctx_param_ext_43580)];
        bool cond_31386 = v1_31385 == 0.0F;
        
        ((__global bool *) mem_43598)[gtid_31178] = cond_31386;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31380
}
__kernel void mainDetailedzisegmap_31272(__global int *global_failure,
                                         int64_t m_27932, int32_t k2p2zq_27949,
                                         int64_t i32_res_27951, int32_t m_28082,
                                         int64_t i32_res_28084, __global
                                         unsigned char *defunc_3_map_res_mem_43546,
                                         __global unsigned char *mem_43574)
{
    #define segmap_group_sizze_31316 (mainDetailedzisegmap_group_sizze_31275)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44802;
    int32_t local_tid_44803;
    int64_t group_sizze_44806;
    int32_t wave_sizze_44805;
    int32_t group_tid_44804;
    
    global_tid_44802 = get_global_id(0);
    local_tid_44803 = get_local_id(0);
    group_sizze_44806 = get_local_size(0);
    wave_sizze_44805 = LOCKSTEP_WIDTH;
    group_tid_44804 = get_group_id(0);
    
    int32_t phys_tid_31272;
    
    phys_tid_31272 = global_tid_44802;
    
    int64_t gtid_31270;
    
    gtid_31270 = squot64(sext_i32_i64(group_tid_44804) *
                         segmap_group_sizze_31316 +
                         sext_i32_i64(local_tid_44803), i32_res_28084);
    
    int64_t gtid_31271;
    
    gtid_31271 = sext_i32_i64(group_tid_44804) * segmap_group_sizze_31316 +
        sext_i32_i64(local_tid_44803) - squot64(sext_i32_i64(group_tid_44804) *
                                                segmap_group_sizze_31316 +
                                                sext_i32_i64(local_tid_44803),
                                                i32_res_28084) * i32_res_28084;
    if (slt64(gtid_31270, m_27932) && slt64(gtid_31271, i32_res_28084)) {
        int32_t index_primexp_41393 = sext_i64_i32(gtid_31271);
        int32_t defunc_0_f_res_31321 = sdiv32(index_primexp_41393, m_28082);
        int32_t defunc_0_f_res_31322 = smod32(index_primexp_41393, m_28082);
        bool cond_31323 = slt32(defunc_0_f_res_31322, k2p2zq_27949);
        float defunc_0_f_res_31324;
        
        if (cond_31323) {
            int64_t i_31325 = sext_i32_i64(defunc_0_f_res_31321);
            int64_t j_31326 = sext_i32_i64(defunc_0_f_res_31322);
            float defunc_0_f_res_t_res_31327 = ((__global
                                                 float *) defunc_3_map_res_mem_43546)[gtid_31270 *
                                                                                      (i32_res_27951 *
                                                                                       i32_res_27951) +
                                                                                      i_31325 *
                                                                                      i32_res_27951 +
                                                                                      j_31326];
            
            defunc_0_f_res_31324 = defunc_0_f_res_t_res_31327;
        } else {
            int32_t y_31328 = add32(k2p2zq_27949, defunc_0_f_res_31321);
            bool cond_31329 = defunc_0_f_res_31322 == y_31328;
            float defunc_0_f_res_f_res_31330;
            
            if (cond_31329) {
                defunc_0_f_res_f_res_31330 = 1.0F;
            } else {
                defunc_0_f_res_f_res_31330 = 0.0F;
            }
            defunc_0_f_res_31324 = defunc_0_f_res_f_res_31330;
        }
        ((__global float *) mem_43574)[gtid_31270 * i32_res_28084 +
                                       gtid_31271] = defunc_0_f_res_31324;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31316
}
__kernel void mainDetailedzisegmap_31453(__global int *global_failure,
                                         int64_t N_27931, int64_t m_27932,
                                         int32_t n_27936, int32_t k2p2zq_27949,
                                         int64_t i32_res_27951,
                                         int64_t num_groups_31474, __global
                                         unsigned char *binop_p_mem_43387,
                                         __global unsigned char *mem_43628,
                                         __global unsigned char *mem_43631,
                                         __global unsigned char *mem_43646)
{
    #define segmap_group_sizze_31473 (mainDetailedzisegmap_group_sizze_31455)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44859;
    int32_t local_tid_44860;
    int64_t group_sizze_44863;
    int32_t wave_sizze_44862;
    int32_t group_tid_44861;
    
    global_tid_44859 = get_global_id(0);
    local_tid_44860 = get_local_id(0);
    group_sizze_44863 = get_local_size(0);
    wave_sizze_44862 = LOCKSTEP_WIDTH;
    group_tid_44861 = get_group_id(0);
    
    int32_t phys_tid_31453;
    
    phys_tid_31453 = global_tid_44859;
    
    int32_t phys_group_id_44864;
    
    phys_group_id_44864 = get_group_id(0);
    for (int32_t i_44865 = 0; i_44865 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932, segmap_group_sizze_31473)) -
                   phys_group_id_44864, sext_i64_i32(num_groups_31474));
         i_44865++) {
        int32_t virt_group_id_44866 = phys_group_id_44864 + i_44865 *
                sext_i64_i32(num_groups_31474);
        int64_t gtid_31452 = sext_i32_i64(virt_group_id_44866) *
                segmap_group_sizze_31473 + sext_i32_i64(local_tid_44860);
        
        if (slt64(gtid_31452, m_27932)) {
            for (int32_t i_43363 = 0; i_43363 < k2p2zq_27949; i_43363++) {
                int64_t i_43323 = sext_i32_i64(i_43363);
                float defunc_2_reduce_res_31480;
                float redout_43325 = 0.0F;
                
                for (int32_t i_43362 = 0; i_43362 < n_27936; i_43362++) {
                    int64_t i_43326 = sext_i32_i64(i_43362);
                    float x_31485 = ((__global float *) mem_43628)[i_43326 *
                                                                   m_27932 +
                                                                   gtid_31452];
                    bool isnan_res_31486;
                    
                    isnan_res_31486 = futrts_isnan32(x_31485);
                    
                    float defunc_1_f_res_31487;
                    
                    if (isnan_res_31486) {
                        defunc_1_f_res_31487 = 0.0F;
                    } else {
                        float x_31484 = ((__global
                                          float *) binop_p_mem_43387)[i_43323 *
                                                                      N_27931 +
                                                                      i_43326];
                        float defunc_1_f_res_f_res_31488 = x_31484 * x_31485;
                        
                        defunc_1_f_res_31487 = defunc_1_f_res_f_res_31488;
                    }
                    
                    float defunc_1_op_res_31483 = defunc_1_f_res_31487 +
                          redout_43325;
                    float redout_tmp_44868 = defunc_1_op_res_31483;
                    
                    redout_43325 = redout_tmp_44868;
                }
                defunc_2_reduce_res_31480 = redout_43325;
                ((__global float *) mem_43631)[phys_tid_31453 + i_43323 *
                                               (num_groups_31474 *
                                                segmap_group_sizze_31473)] =
                    defunc_2_reduce_res_31480;
            }
            for (int64_t i_44869 = 0; i_44869 < i32_res_27951; i_44869++) {
                ((__global float *) mem_43646)[i_44869 * m_27932 + gtid_31452] =
                    ((__global float *) mem_43631)[phys_tid_31453 + i_44869 *
                                                   (num_groups_31474 *
                                                    segmap_group_sizze_31473)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31473
}
__kernel void mainDetailedzisegmap_31594(__global int *global_failure,
                                         int64_t m_27932, int32_t k2p2zq_27949,
                                         int64_t i32_res_27951,
                                         int64_t num_groups_31614, __global
                                         unsigned char *mem_43850, __global
                                         unsigned char *mem_43853, __global
                                         unsigned char *mem_43856, __global
                                         unsigned char *mem_43871)
{
    #define segmap_group_sizze_31613 (mainDetailedzisegmap_group_sizze_31596)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44991;
    int32_t local_tid_44992;
    int64_t group_sizze_44995;
    int32_t wave_sizze_44994;
    int32_t group_tid_44993;
    
    global_tid_44991 = get_global_id(0);
    local_tid_44992 = get_local_id(0);
    group_sizze_44995 = get_local_size(0);
    wave_sizze_44994 = LOCKSTEP_WIDTH;
    group_tid_44993 = get_group_id(0);
    
    int32_t phys_tid_31594;
    
    phys_tid_31594 = global_tid_44991;
    
    int32_t phys_group_id_44996;
    
    phys_group_id_44996 = get_group_id(0);
    for (int32_t i_44997 = 0; i_44997 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932, segmap_group_sizze_31613)) -
                   phys_group_id_44996, sext_i64_i32(num_groups_31614));
         i_44997++) {
        int32_t virt_group_id_44998 = phys_group_id_44996 + i_44997 *
                sext_i64_i32(num_groups_31614);
        int64_t gtid_31593 = sext_i32_i64(virt_group_id_44998) *
                segmap_group_sizze_31613 + sext_i32_i64(local_tid_44992);
        
        if (slt64(gtid_31593, m_27932)) {
            for (int32_t i_43365 = 0; i_43365 < k2p2zq_27949; i_43365++) {
                int64_t i_43329 = sext_i32_i64(i_43365);
                float defunc_0_f_res_31621;
                float redout_43331 = 0.0F;
                
                for (int32_t i_43364 = 0; i_43364 < k2p2zq_27949; i_43364++) {
                    int64_t i_43332 = sext_i32_i64(i_43364);
                    float x_31625 = ((__global float *) mem_43853)[i_43332 *
                                                                   m_27932 +
                                                                   gtid_31593];
                    float x_31626 = ((__global float *) mem_43850)[i_43329 *
                                                                   (m_27932 *
                                                                    i32_res_27951) +
                                                                   i_43332 *
                                                                   m_27932 +
                                                                   gtid_31593];
                    float defunc_1_f_res_31627 = x_31625 * x_31626;
                    float defunc_1_op_res_31624 = defunc_1_f_res_31627 +
                          redout_43331;
                    float redout_tmp_45000 = defunc_1_op_res_31624;
                    
                    redout_43331 = redout_tmp_45000;
                }
                defunc_0_f_res_31621 = redout_43331;
                ((__global float *) mem_43856)[phys_tid_31594 + i_43329 *
                                               (num_groups_31614 *
                                                segmap_group_sizze_31613)] =
                    defunc_0_f_res_31621;
            }
            for (int64_t i_45001 = 0; i_45001 < i32_res_27951; i_45001++) {
                ((__global float *) mem_43871)[i_45001 * m_27932 + gtid_31593] =
                    ((__global float *) mem_43856)[phys_tid_31594 + i_45001 *
                                                   (num_groups_31614 *
                                                    segmap_group_sizze_31613)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31613
}
__kernel void mainDetailedzisegmap_31726(__global int *global_failure,
                                         int64_t N_27931, int64_t m_27932,
                                         int32_t k2p2zq_27949,
                                         int64_t i32_res_27951,
                                         int64_t num_groups_31745, __global
                                         unsigned char *mem_43394, __global
                                         unsigned char *mem_43915, __global
                                         unsigned char *mem_43918, __global
                                         unsigned char *mem_43933)
{
    #define segmap_group_sizze_31744 (mainDetailedzisegmap_group_sizze_31728)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45079;
    int32_t local_tid_45080;
    int64_t group_sizze_45083;
    int32_t wave_sizze_45082;
    int32_t group_tid_45081;
    
    global_tid_45079 = get_global_id(0);
    local_tid_45080 = get_local_id(0);
    group_sizze_45083 = get_local_size(0);
    wave_sizze_45082 = LOCKSTEP_WIDTH;
    group_tid_45081 = get_group_id(0);
    
    int32_t phys_tid_31726;
    
    phys_tid_31726 = global_tid_45079;
    
    int32_t phys_group_id_45084;
    
    phys_group_id_45084 = get_group_id(0);
    for (int32_t i_45085 = 0; i_45085 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932, segmap_group_sizze_31744)) -
                   phys_group_id_45084, sext_i64_i32(num_groups_31745));
         i_45085++) {
        int32_t virt_group_id_45086 = phys_group_id_45084 + i_45085 *
                sext_i64_i32(num_groups_31745);
        int64_t gtid_31725 = sext_i32_i64(virt_group_id_45086) *
                segmap_group_sizze_31744 + sext_i32_i64(local_tid_45080);
        
        if (slt64(gtid_31725, m_27932)) {
            for (int64_t i_43339 = 0; i_43339 < N_27931; i_43339++) {
                float defunc_0_f_res_31751;
                float redout_43341 = 0.0F;
                
                for (int32_t i_43368 = 0; i_43368 < k2p2zq_27949; i_43368++) {
                    int64_t i_43342 = sext_i32_i64(i_43368);
                    float x_31755 = ((__global float *) mem_43915)[i_43342 *
                                                                   m_27932 +
                                                                   gtid_31725];
                    float x_31756 = ((__global float *) mem_43394)[i_43339 *
                                                                   i32_res_27951 +
                                                                   i_43342];
                    float defunc_1_f_res_31757 = x_31755 * x_31756;
                    float defunc_1_op_res_31754 = defunc_1_f_res_31757 +
                          redout_43341;
                    float redout_tmp_45088 = defunc_1_op_res_31754;
                    
                    redout_43341 = redout_tmp_45088;
                }
                defunc_0_f_res_31751 = redout_43341;
                ((__global float *) mem_43918)[phys_tid_31726 + i_43339 *
                                               (num_groups_31745 *
                                                segmap_group_sizze_31744)] =
                    defunc_0_f_res_31751;
            }
            for (int64_t i_45089 = 0; i_45089 < N_27931; i_45089++) {
                ((__global float *) mem_43933)[i_45089 * m_27932 + gtid_31725] =
                    ((__global float *) mem_43918)[phys_tid_31726 + i_45089 *
                                                   (num_groups_31745 *
                                                    segmap_group_sizze_31744)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31744
}
__kernel void mainDetailedzisegmap_32006(__global int *global_failure,
                                         int64_t N_27931, int64_t m_27932,
                                         __global unsigned char *mem_44139,
                                         __global unsigned char *mem_44142,
                                         __global unsigned char *mem_44165,
                                         __global unsigned char *mem_44168)
{
    #define segmap_group_sizze_32172 (mainDetailedzisegmap_group_sizze_32009)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45306;
    int32_t local_tid_45307;
    int64_t group_sizze_45310;
    int32_t wave_sizze_45309;
    int32_t group_tid_45308;
    
    global_tid_45306 = get_global_id(0);
    local_tid_45307 = get_local_id(0);
    group_sizze_45310 = get_local_size(0);
    wave_sizze_45309 = LOCKSTEP_WIDTH;
    group_tid_45308 = get_group_id(0);
    
    int32_t phys_tid_32006;
    
    phys_tid_32006 = global_tid_45306;
    
    int64_t gtid_32004;
    
    gtid_32004 = squot64(sext_i32_i64(group_tid_45308) *
                         segmap_group_sizze_32172 +
                         sext_i32_i64(local_tid_45307), N_27931);
    
    int64_t gtid_32005;
    
    gtid_32005 = sext_i32_i64(group_tid_45308) * segmap_group_sizze_32172 +
        sext_i32_i64(local_tid_45307) - squot64(sext_i32_i64(group_tid_45308) *
                                                segmap_group_sizze_32172 +
                                                sext_i32_i64(local_tid_45307),
                                                N_27931) * N_27931;
    if (slt64(gtid_32004, m_27932) && slt64(gtid_32005, N_27931)) {
        float x_32180 = ((__global float *) mem_44168)[gtid_32004 * N_27931 +
                                                       gtid_32005];
        int32_t index_primexp_41409 = sext_i64_i32(gtid_32005);
        bool isnan_res_32183;
        
        isnan_res_32183 = futrts_isnan32(x_32180);
        
        bool defunc_0_p_res_32184 = !isnan_res_32183;
        int64_t defunc_1_f_res_32185;
        
        if (defunc_0_p_res_32184) {
            int64_t x_32181 = ((__global int64_t *) mem_44165)[gtid_32004 *
                                                               N_27931 +
                                                               gtid_32005];
            int64_t defunc_1_f_res_t_res_32186 = sub64(x_32181, 1);
            
            defunc_1_f_res_32185 = defunc_1_f_res_t_res_32186;
        } else {
            defunc_1_f_res_32185 = -1;
        }
        if ((sle64(0, gtid_32004) && slt64(gtid_32004, m_27932)) && (sle64(0,
                                                                           defunc_1_f_res_32185) &&
                                                                     slt64(defunc_1_f_res_32185,
                                                                           N_27931))) {
            ((__global int32_t *) mem_44142)[gtid_32004 * N_27931 +
                                             defunc_1_f_res_32185] =
                index_primexp_41409;
        }
        if ((sle64(0, gtid_32004) && slt64(gtid_32004, m_27932)) && (sle64(0,
                                                                           defunc_1_f_res_32185) &&
                                                                     slt64(defunc_1_f_res_32185,
                                                                           N_27931))) {
            ((__global float *) mem_44139)[gtid_32004 * N_27931 +
                                           defunc_1_f_res_32185] = x_32180;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32172
}
__kernel void mainDetailedzisegmap_32082(__global int *global_failure,
                                         int64_t N_27931, int64_t m_27932,
                                         int64_t i_28211, __global
                                         unsigned char *mem_44165, __global
                                         unsigned char *mem_44171)
{
    #define segmap_group_sizze_32136 (mainDetailedzisegmap_group_sizze_32084)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45301;
    int32_t local_tid_45302;
    int64_t group_sizze_45305;
    int32_t wave_sizze_45304;
    int32_t group_tid_45303;
    
    global_tid_45301 = get_global_id(0);
    local_tid_45302 = get_local_id(0);
    group_sizze_45305 = get_local_size(0);
    wave_sizze_45304 = LOCKSTEP_WIDTH;
    group_tid_45303 = get_group_id(0);
    
    int32_t phys_tid_32082;
    
    phys_tid_32082 = global_tid_45301;
    
    int64_t gtid_32081;
    
    gtid_32081 = sext_i32_i64(group_tid_45303) * segmap_group_sizze_32136 +
        sext_i32_i64(local_tid_45302);
    if (slt64(gtid_32081, m_27932)) {
        int64_t last_res_32140 = ((__global int64_t *) mem_44165)[gtid_32081 *
                                                                  N_27931 +
                                                                  i_28211];
        int32_t defunc_0_f_res_32141 = sext_i64_i32(last_res_32140);
        
        ((__global int32_t *) mem_44171)[gtid_32081] = defunc_0_f_res_32141;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32136
}
__kernel void mainDetailedzisegmap_32333(__global int *global_failure,
                                         int64_t m_27932, float hfrac_27938,
                                         int32_t k2p2_27947, __global
                                         unsigned char *mem_44225, __global
                                         unsigned char *mem_44228, __global
                                         unsigned char *mem_44231, __global
                                         unsigned char *mem_44233)
{
    #define segmap_group_sizze_32418 (mainDetailedzisegmap_group_sizze_32335)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45461;
    int32_t local_tid_45462;
    int64_t group_sizze_45465;
    int32_t wave_sizze_45464;
    int32_t group_tid_45463;
    
    global_tid_45461 = get_global_id(0);
    local_tid_45462 = get_local_id(0);
    group_sizze_45465 = get_local_size(0);
    wave_sizze_45464 = LOCKSTEP_WIDTH;
    group_tid_45463 = get_group_id(0);
    
    int32_t phys_tid_32333;
    
    phys_tid_32333 = global_tid_45461;
    
    int64_t gtid_32332;
    
    gtid_32332 = sext_i32_i64(group_tid_45463) * segmap_group_sizze_32418 +
        sext_i32_i64(local_tid_45462);
    if (slt64(gtid_32332, m_27932)) {
        int32_t defunc_0_f_res_32422 = ((__global
                                         int32_t *) mem_44225)[gtid_32332];
        float defunc_0_f_res_32423 = ((__global float *) mem_44228)[gtid_32332];
        int32_t r32_arg_32424 = sub32(defunc_0_f_res_32422, k2p2_27947);
        float i32_res_32425 = sitofp_i32_f32(r32_arg_32424);
        float sqrt_arg_32426 = defunc_0_f_res_32423 / i32_res_32425;
        float sqrt_res_32427;
        
        sqrt_res_32427 = futrts_sqrt32(sqrt_arg_32426);
        
        float i32_res_32428 = sitofp_i32_f32(defunc_0_f_res_32422);
        float t32_arg_32429 = hfrac_27938 * i32_res_32428;
        int32_t f32_res_32430 = fptosi_f32_i32(t32_arg_32429);
        
        ((__global int32_t *) mem_44231)[gtid_32332] = f32_res_32430;
        ((__global float *) mem_44233)[gtid_32332] = sqrt_res_32427;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32418
}
__kernel void mainDetailedzisegmap_32604(__global int *global_failure,
                                         float lam_27939,
                                         int64_t iota32_arg_28331,
                                         int32_t x_28336, float i32_res_28344,
                                         __global
                                         unsigned char *mappingindices_mem_43377,
                                         __global unsigned char *mem_44275,
                                         __global unsigned char *mem_44277)
{
    #define segmap_group_sizze_32623 (mainDetailedzisegmap_group_sizze_32606)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45571;
    int32_t local_tid_45572;
    int64_t group_sizze_45575;
    int32_t wave_sizze_45574;
    int32_t group_tid_45573;
    
    global_tid_45571 = get_global_id(0);
    local_tid_45572 = get_local_id(0);
    group_sizze_45575 = get_local_size(0);
    wave_sizze_45574 = LOCKSTEP_WIDTH;
    group_tid_45573 = get_group_id(0);
    
    int32_t phys_tid_32604;
    
    phys_tid_32604 = global_tid_45571;
    
    int64_t gtid_32603;
    
    gtid_32603 = sext_i32_i64(group_tid_45573) * segmap_group_sizze_32623 +
        sext_i32_i64(local_tid_45572);
    if (slt64(gtid_32603, iota32_arg_28331)) {
        int32_t defunc_0_f_res_32628 = sext_i64_i32(gtid_32603);
        int32_t t_32629 = add32(x_28336, defunc_0_f_res_32628);
        int32_t i_32630 = sub32(t_32629, 1);
        int64_t i_32631 = sext_i32_i64(i_32630);
        int32_t time_32632 = ((__global
                               int32_t *) mappingindices_mem_43377)[i_32631];
        float i32_res_32633 = sitofp_i32_f32(time_32632);
        float logplus_arg_32634 = i32_res_32633 / i32_res_28344;
        bool cond_32635 = 2.7182817F < logplus_arg_32634;
        float logplus_res_32636;
        
        if (cond_32635) {
            float log_res_32637;
            
            log_res_32637 = futrts_log32(logplus_arg_32634);
            logplus_res_32636 = log_res_32637;
        } else {
            logplus_res_32636 = 1.0F;
        }
        
        float sqrt_res_32638;
        
        sqrt_res_32638 = futrts_sqrt32(logplus_res_32636);
        
        float defunc_0_f_res_32639 = lam_27939 * sqrt_res_32638;
        
        ((__global int32_t *) mem_44275)[gtid_32603] = defunc_0_f_res_32628;
        ((__global float *) mem_44277)[gtid_32603] = defunc_0_f_res_32639;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32623
}
__kernel void mainDetailedzisegmap_33332(__global int *global_failure,
                                         int64_t N_27931, int64_t m_27932,
                                         int32_t n_27936,
                                         int64_t iota32_arg_28331, __global
                                         unsigned char *defunc_4_map_res_mem_44175,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44238,
                                         __global unsigned char *mem_44280,
                                         __global unsigned char *mem_44334,
                                         __global unsigned char *mem_44348)
{
    #define segmap_group_sizze_34028 (mainDetailedzisegmap_group_sizze_33335)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45795;
    int32_t local_tid_45796;
    int64_t group_sizze_45799;
    int32_t wave_sizze_45798;
    int32_t group_tid_45797;
    
    global_tid_45795 = get_global_id(0);
    local_tid_45796 = get_local_id(0);
    group_sizze_45799 = get_local_size(0);
    wave_sizze_45798 = LOCKSTEP_WIDTH;
    group_tid_45797 = get_group_id(0);
    
    int32_t phys_tid_33332;
    
    phys_tid_33332 = global_tid_45795;
    
    int64_t gtid_33330;
    
    gtid_33330 = squot64(sext_i32_i64(group_tid_45797) *
                         segmap_group_sizze_34028 +
                         sext_i32_i64(local_tid_45796), iota32_arg_28331);
    
    int64_t gtid_33331;
    
    gtid_33331 = sext_i32_i64(group_tid_45797) * segmap_group_sizze_34028 +
        sext_i32_i64(local_tid_45796) - squot64(sext_i32_i64(group_tid_45797) *
                                                segmap_group_sizze_34028 +
                                                sext_i32_i64(local_tid_45796),
                                                iota32_arg_28331) *
        iota32_arg_28331;
    if (slt64(gtid_33330, m_27932) && slt64(gtid_33331, iota32_arg_28331)) {
        int32_t y_34033 = ((__global int32_t *) mem_44334)[gtid_33330];
        int32_t index_primexp_41448 = sext_i64_i32(gtid_33331);
        float write_value_34037 = ((__global float *) mem_44348)[gtid_33330 *
                                                                 iota32_arg_28331 +
                                                                 gtid_33331];
        bool cond_34038 = slt32(index_primexp_41448, y_34033);
        int32_t defunc_0_f_res_34039;
        
        if (cond_34038) {
            int32_t x_34031 = ((__global
                                int32_t *) defunc_3_map_res_mem_44238)[gtid_33330];
            int32_t i_34040 = add32(x_34031, index_primexp_41448);
            int64_t i_34041 = sext_i32_i64(i_34040);
            int32_t x_34042 = ((__global
                                int32_t *) defunc_4_map_res_mem_44175)[gtid_33330 *
                                                                       N_27931 +
                                                                       i_34041];
            int32_t defunc_0_f_res_t_res_34043 = sub32(x_34042, n_27936);
            
            defunc_0_f_res_34039 = defunc_0_f_res_t_res_34043;
        } else {
            defunc_0_f_res_34039 = -1;
        }
        
        int64_t defunc_0_f_res_34044 = sext_i32_i64(defunc_0_f_res_34039);
        
        if ((sle64(0, gtid_33330) && slt64(gtid_33330, m_27932)) && (sle64(0,
                                                                           defunc_0_f_res_34044) &&
                                                                     slt64(defunc_0_f_res_34044,
                                                                           iota32_arg_28331))) {
            ((__global float *) mem_44280)[gtid_33330 * iota32_arg_28331 +
                                           defunc_0_f_res_34044] =
                write_value_34037;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34028
}
__kernel void mainDetailedzisegmap_33385(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27931, int64_t m_27932,
                                         int32_t n_27936,
                                         int64_t iota32_arg_28331,
                                         int64_t distance_28363,
                                         int64_t segmap_usable_groups_33914,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_44173,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_44175,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44238,
                                         __global unsigned char *mem_44334,
                                         __global unsigned char *mem_44351,
                                         __global unsigned char *mem_44353,
                                         __global unsigned char *mem_44363,
                                         __global unsigned char *mem_44374,
                                         __global unsigned char *mem_44394,
                                         __global unsigned char *mem_44396)
{
    #define segmap_group_sizze_33913 (mainDetailedzisegmap_group_sizze_33387)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45785;
    int32_t local_tid_45786;
    int64_t group_sizze_45789;
    int32_t wave_sizze_45788;
    int32_t group_tid_45787;
    
    global_tid_45785 = get_global_id(0);
    local_tid_45786 = get_local_id(0);
    group_sizze_45789 = get_local_size(0);
    wave_sizze_45788 = LOCKSTEP_WIDTH;
    group_tid_45787 = get_group_id(0);
    
    int32_t phys_tid_33385;
    
    phys_tid_33385 = global_tid_45785;
    
    int64_t gtid_33384;
    
    gtid_33384 = sext_i32_i64(group_tid_45787) * segmap_group_sizze_33913 +
        sext_i32_i64(local_tid_45786);
    if (slt64(gtid_33384, m_27932)) {
        int32_t x_33917 = ((__global
                            int32_t *) defunc_4_map_res_mem_44173)[gtid_33384];
        int32_t x_33918 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_33384];
        int32_t y_33920 = ((__global int32_t *) mem_44334)[gtid_33384];
        bool defunc_0_f_res_33921 = ((__global bool *) mem_44351)[gtid_33384];
        
        for (int64_t i_45790 = 0; i_45790 < iota32_arg_28331; i_45790++) {
            ((__global float *) mem_44374)[phys_tid_33385 + i_45790 *
                                           (segmap_usable_groups_33914 *
                                            segmap_group_sizze_33913)] =
                ((__global float *) mem_44363)[gtid_33384 + i_45790 * m_27932];
        }
        for (int64_t i_33925 = 0; i_33925 < distance_28363; i_33925++) {
            int64_t index_primexp_33927 = add64(1, i_33925);
            bool cond_33928 = slt64(0, index_primexp_33927);
            bool loop_cond_33929;
            
            if (cond_33928) {
                bool x_33930 = sle64(0, index_primexp_33927);
                bool y_33931 = slt64(index_primexp_33927, iota32_arg_28331);
                bool bounds_check_33932 = x_33930 && y_33931;
                bool index_certs_33933;
                
                if (!bounds_check_33932) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = index_primexp_33927;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_33934 = ((__global
                                                       float *) mem_44374)[phys_tid_33385 +
                                                                           index_primexp_33927 *
                                                                           (segmap_usable_groups_33914 *
                                                                            segmap_group_sizze_33913)];
                bool y_33935 = slt64(i_33925, iota32_arg_28331);
                bool index_certs_33936;
                
                if (!y_33935) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_33925;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_33937 = ((__global
                                                       float *) mem_44374)[phys_tid_33385 +
                                                                           i_33925 *
                                                                           (segmap_usable_groups_33914 *
                                                                            segmap_group_sizze_33913)];
                bool defunc_1_zlze_res_33938 = defunc_1_lifted_gt_arg_33937 <=
                     defunc_2_lifted_gt_arg_33934;
                bool defunc_2_lifted_gt_res_33939 = !defunc_1_zlze_res_33938;
                
                loop_cond_33929 = defunc_2_lifted_gt_res_33939;
            } else {
                loop_cond_33929 = 0;
            }
            
            bool xszq_33940;
            int64_t xszq_33941;
            bool loop_while_33943;
            int64_t j_33944;
            
            loop_while_33943 = loop_cond_33929;
            j_33944 = index_primexp_33927;
            while (loop_while_33943) {
                int64_t loopres_33946 = sub64(j_33944, 1);
                bool x_33947 = sle64(0, j_33944);
                bool y_33948 = slt64(j_33944, iota32_arg_28331);
                bool bounds_check_33949 = x_33947 && y_33948;
                bool index_certs_33950;
                
                if (!bounds_check_33949) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = j_33944;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_33951 = ((__global
                                         float *) mem_44374)[phys_tid_33385 +
                                                             j_33944 *
                                                             (segmap_usable_groups_33914 *
                                                              segmap_group_sizze_33913)];
                bool x_33952 = sle64(0, loopres_33946);
                bool y_33953 = slt64(loopres_33946, iota32_arg_28331);
                bool bounds_check_33954 = x_33952 && y_33953;
                bool index_certs_33955;
                
                if (!bounds_check_33954) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 16) ==
                            -1) {
                            global_failure_args[0] = loopres_33946;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_33956 = ((__global
                                         float *) mem_44374)[phys_tid_33385 +
                                                             loopres_33946 *
                                                             (segmap_usable_groups_33914 *
                                                              segmap_group_sizze_33913)];
                
                ((__global float *) mem_44374)[phys_tid_33385 + j_33944 *
                                               (segmap_usable_groups_33914 *
                                                segmap_group_sizze_33913)] =
                    copy_arg_33956;
                ((__global float *) mem_44374)[phys_tid_33385 + loopres_33946 *
                                               (segmap_usable_groups_33914 *
                                                segmap_group_sizze_33913)] =
                    copy_arg_33951;
                
                bool cond_33959 = slt64(0, loopres_33946);
                bool loop_cond_33960;
                
                if (cond_33959) {
                    bool index_certs_33961;
                    
                    if (!bounds_check_33954) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = loopres_33946;
                                global_failure_args[1] = iota32_arg_28331;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_33962 = ((__global
                                                           float *) mem_44374)[phys_tid_33385 +
                                                                               loopres_33946 *
                                                                               (segmap_usable_groups_33914 *
                                                                                segmap_group_sizze_33913)];
                    int64_t i_33963 = sub64(loopres_33946, 1);
                    bool x_33964 = sle64(0, i_33963);
                    bool y_33965 = slt64(i_33963, iota32_arg_28331);
                    bool bounds_check_33966 = x_33964 && y_33965;
                    bool index_certs_33967;
                    
                    if (!bounds_check_33966) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_33963;
                                global_failure_args[1] = iota32_arg_28331;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_33968 = ((__global
                                                           float *) mem_44374)[phys_tid_33385 +
                                                                               i_33963 *
                                                                               (segmap_usable_groups_33914 *
                                                                                segmap_group_sizze_33913)];
                    bool defunc_1_zlze_res_33969 =
                         defunc_1_lifted_gt_arg_33968 <=
                         defunc_2_lifted_gt_arg_33962;
                    bool defunc_2_lifted_gt_res_33970 =
                         !defunc_1_zlze_res_33969;
                    
                    loop_cond_33960 = defunc_2_lifted_gt_res_33970;
                } else {
                    loop_cond_33960 = 0;
                }
                
                bool loop_while_tmp_45792 = loop_cond_33960;
                int64_t j_tmp_45793 = loopres_33946;
                
                loop_while_33943 = loop_while_tmp_45792;
                j_33944 = j_tmp_45793;
            }
            xszq_33940 = loop_while_33943;
            xszq_33941 = j_33944;
        }
        
        int32_t i_33971 = sdiv32(y_33920, 2);
        int32_t j_33972 = sub32(i_33971, 1);
        bool cond_33973 = x_33917 == x_33918;
        float defunc_0_f_res_33974;
        
        if (cond_33973) {
            defunc_0_f_res_33974 = 0.0F;
        } else {
            int32_t x_33975 = smod32(y_33920, 2);
            bool cond_33976 = x_33975 == 0;
            float defunc_0_f_res_f_res_33977;
            
            if (cond_33976) {
                int64_t j_33978 = sext_i32_i64(j_33972);
                bool x_33979 = sle64(0, j_33978);
                bool y_33980 = slt64(j_33978, iota32_arg_28331);
                bool bounds_check_33981 = x_33979 && y_33980;
                bool index_certs_33982;
                
                if (!bounds_check_33981) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 19) ==
                            -1) {
                            global_failure_args[0] = j_33978;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        return;
                    }
                }
                
                float x_33983 = ((__global float *) mem_44374)[phys_tid_33385 +
                                                               j_33978 *
                                                               (segmap_usable_groups_33914 *
                                                                segmap_group_sizze_33913)];
                int64_t i_33984 = sext_i32_i64(i_33971);
                bool x_33985 = sle64(0, i_33984);
                bool y_33986 = slt64(i_33984, iota32_arg_28331);
                bool bounds_check_33987 = x_33985 && y_33986;
                bool index_certs_33988;
                
                if (!bounds_check_33987) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 20) ==
                            -1) {
                            global_failure_args[0] = i_33984;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        return;
                    }
                }
                
                float y_33989 = ((__global float *) mem_44374)[phys_tid_33385 +
                                                               i_33984 *
                                                               (segmap_usable_groups_33914 *
                                                                segmap_group_sizze_33913)];
                float x_33990 = x_33983 + y_33989;
                float defunc_0_f_res_f_res_t_res_33991 = x_33990 / 2.0F;
                
                defunc_0_f_res_f_res_33977 = defunc_0_f_res_f_res_t_res_33991;
            } else {
                int64_t i_33992 = sext_i32_i64(i_33971);
                bool x_33993 = sle64(0, i_33992);
                bool y_33994 = slt64(i_33992, iota32_arg_28331);
                bool bounds_check_33995 = x_33993 && y_33994;
                bool index_certs_33996;
                
                if (!bounds_check_33995) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 21) ==
                            -1) {
                            global_failure_args[0] = i_33992;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_33997 = ((__global
                                                           float *) mem_44374)[phys_tid_33385 +
                                                                               i_33992 *
                                                                               (segmap_usable_groups_33914 *
                                                                                segmap_group_sizze_33913)];
                
                defunc_0_f_res_f_res_33977 = defunc_0_f_res_f_res_f_res_33997;
            }
            defunc_0_f_res_33974 = defunc_0_f_res_f_res_33977;
        }
        
        bool cond_33998 = !defunc_0_f_res_33921;
        int32_t fst_breakzq_33999;
        
        if (cond_33998) {
            fst_breakzq_33999 = -1;
        } else {
            int32_t defunc_0_f_res_33922 = ((__global
                                             int32_t *) mem_44353)[gtid_33384];
            bool cond_34000 = slt32(defunc_0_f_res_33922, y_33920);
            int32_t adjustValInds_res_34001;
            
            if (cond_34000) {
                int32_t i_34002 = add32(x_33918, defunc_0_f_res_33922);
                int64_t i_34003 = sext_i32_i64(i_34002);
                int32_t x_34004 = ((__global
                                    int32_t *) defunc_4_map_res_mem_44175)[gtid_33384 *
                                                                           N_27931 +
                                                                           i_34003];
                int32_t adjustValInds_res_t_res_34005 = sub32(x_34004, n_27936);
                
                adjustValInds_res_34001 = adjustValInds_res_t_res_34005;
            } else {
                adjustValInds_res_34001 = -1;
            }
            fst_breakzq_33999 = adjustValInds_res_34001;
        }
        
        bool cond_34006 = sle32(x_33918, 5);
        bool cond_f_res_34007 = sle32(y_33920, 5);
        bool x_34008 = !cond_34006;
        bool y_34009 = cond_f_res_34007 && x_34008;
        bool cond_34010 = cond_34006 || y_34009;
        int32_t fst_breakzq_34011;
        
        if (cond_34010) {
            fst_breakzq_34011 = -2;
        } else {
            fst_breakzq_34011 = fst_breakzq_33999;
        }
        ((__global int32_t *) mem_44394)[gtid_33384] = fst_breakzq_34011;
        ((__global float *) mem_44396)[gtid_33384] = defunc_0_f_res_33974;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33913
}
__kernel void mainDetailedzisegmap_33523(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27931, int64_t m_27932,
                                         int64_t iota32_arg_28331, __global
                                         unsigned char *defunc_4_map_res_mem_44174,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44238,
                                         __global unsigned char *mem_44334,
                                         __global unsigned char *mem_44360)
{
    #define segmap_group_sizze_33884 (mainDetailedzisegmap_group_sizze_33526)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45780;
    int32_t local_tid_45781;
    int64_t group_sizze_45784;
    int32_t wave_sizze_45783;
    int32_t group_tid_45782;
    
    global_tid_45780 = get_global_id(0);
    local_tid_45781 = get_local_id(0);
    group_sizze_45784 = get_local_size(0);
    wave_sizze_45783 = LOCKSTEP_WIDTH;
    group_tid_45782 = get_group_id(0);
    
    int32_t phys_tid_33523;
    
    phys_tid_33523 = global_tid_45780;
    
    int64_t gtid_33521;
    
    gtid_33521 = squot64(sext_i32_i64(group_tid_45782) *
                         segmap_group_sizze_33884 +
                         sext_i32_i64(local_tid_45781), iota32_arg_28331);
    
    int64_t gtid_33522;
    
    gtid_33522 = sext_i32_i64(group_tid_45782) * segmap_group_sizze_33884 +
        sext_i32_i64(local_tid_45781) - squot64(sext_i32_i64(group_tid_45782) *
                                                segmap_group_sizze_33884 +
                                                sext_i32_i64(local_tid_45781),
                                                iota32_arg_28331) *
        iota32_arg_28331;
    if (slt64(gtid_33521, m_27932) && slt64(gtid_33522, iota32_arg_28331)) {
        int32_t x_33887 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_33521];
        int32_t y_33889 = ((__global int32_t *) mem_44334)[gtid_33521];
        int32_t index_primexp_41445 = sext_i64_i32(gtid_33522);
        bool cond_33891 = slt32(index_primexp_41445, y_33889);
        bool cond_33892;
        
        if (cond_33891) {
            int32_t i_33893 = add32(x_33887, index_primexp_41445);
            int64_t i_33894 = sext_i32_i64(i_33893);
            bool x_33895 = sle64(0, i_33894);
            bool y_33896 = slt64(i_33894, N_27931);
            bool bounds_check_33897 = x_33895 && y_33896;
            bool index_certs_33898;
            
            if (!bounds_check_33897) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_33894;
                        global_failure_args[1] = N_27931;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_33899 = ((__global
                                      float *) defunc_4_map_res_mem_44174)[gtid_33521 *
                                                                           N_27931 +
                                                                           i_33894];
            bool isnan_res_33900;
            
            isnan_res_33900 = futrts_isnan32(isnan_arg_33899);
            
            bool cond_t_res_33901 = !isnan_res_33900;
            
            cond_33892 = cond_t_res_33901;
        } else {
            cond_33892 = 0;
        }
        
        float defunc_0_f_res_33902;
        
        if (cond_33892) {
            int32_t i_33903 = add32(x_33887, index_primexp_41445);
            int64_t i_33904 = sext_i32_i64(i_33903);
            bool x_33905 = sle64(0, i_33904);
            bool y_33906 = slt64(i_33904, N_27931);
            bool bounds_check_33907 = x_33905 && y_33906;
            bool index_certs_33908;
            
            if (!bounds_check_33907) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_33904;
                        global_failure_args[1] = N_27931;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_33909 = ((__global
                                                 float *) defunc_4_map_res_mem_44174)[gtid_33521 *
                                                                                      N_27931 +
                                                                                      i_33904];
            
            defunc_0_f_res_33902 = defunc_0_f_res_t_res_33909;
        } else {
            defunc_0_f_res_33902 = INFINITY;
        }
        ((__global float *) mem_44360)[gtid_33521 * iota32_arg_28331 +
                                       gtid_33522] = defunc_0_f_res_33902;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33884
}
__kernel void mainDetailedzisegmap_33582(__global int *global_failure,
                                         int64_t m_27932, __global
                                         unsigned char *mem_44334, __global
                                         unsigned char *mem_44345, __global
                                         unsigned char *mem_44356)
{
    #define segmap_group_sizze_33866 (mainDetailedzisegmap_group_sizze_33584)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45775;
    int32_t local_tid_45776;
    int64_t group_sizze_45779;
    int32_t wave_sizze_45778;
    int32_t group_tid_45777;
    
    global_tid_45775 = get_global_id(0);
    local_tid_45776 = get_local_id(0);
    group_sizze_45779 = get_local_size(0);
    wave_sizze_45778 = LOCKSTEP_WIDTH;
    group_tid_45777 = get_group_id(0);
    
    int32_t phys_tid_33582;
    
    phys_tid_33582 = global_tid_45775;
    
    int64_t gtid_33581;
    
    gtid_33581 = sext_i32_i64(group_tid_45777) * segmap_group_sizze_33866 +
        sext_i32_i64(local_tid_45776);
    if (slt64(gtid_33581, m_27932)) {
        int32_t y_33869 = ((__global int32_t *) mem_44334)[gtid_33581];
        bool cond_33871 = y_33869 == 0;
        float defunc_0_f_res_33872;
        
        if (cond_33871) {
            defunc_0_f_res_33872 = 0.0F;
        } else {
            float defunc_0_f_res_33870 = ((__global
                                           float *) mem_44345)[gtid_33581];
            float i32_res_33873 = sitofp_i32_f32(y_33869);
            float defunc_0_f_res_f_res_33874 = defunc_0_f_res_33870 /
                  i32_res_33873;
            
            defunc_0_f_res_33872 = defunc_0_f_res_f_res_33874;
        }
        ((__global float *) mem_44356)[gtid_33581] = defunc_0_f_res_33872;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33866
}
__kernel void mainDetailedzisegmap_33599(__global int *global_failure,
                                         int64_t m_27932, __global
                                         unsigned char *mem_44341, __global
                                         unsigned char *mem_44343, __global
                                         unsigned char *mem_44351, __global
                                         unsigned char *mem_44353)
{
    #define segmap_group_sizze_33843 (mainDetailedzisegmap_group_sizze_33601)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45770;
    int32_t local_tid_45771;
    int64_t group_sizze_45774;
    int32_t wave_sizze_45773;
    int32_t group_tid_45772;
    
    global_tid_45770 = get_global_id(0);
    local_tid_45771 = get_local_id(0);
    group_sizze_45774 = get_local_size(0);
    wave_sizze_45773 = LOCKSTEP_WIDTH;
    group_tid_45772 = get_group_id(0);
    
    int32_t phys_tid_33599;
    
    phys_tid_33599 = global_tid_45770;
    
    int64_t gtid_33598;
    
    gtid_33598 = sext_i32_i64(group_tid_45772) * segmap_group_sizze_33843 +
        sext_i32_i64(local_tid_45771);
    if (slt64(gtid_33598, m_27932)) {
        bool acc0_33849 = ((__global bool *) mem_44341)[gtid_33598];
        bool x_33854 = acc0_33849 && acc0_33849;
        int32_t defunc_1_op_res_f_res_33858;
        
        if (acc0_33849) {
            int32_t acc0_33850 = ((__global int32_t *) mem_44343)[gtid_33598];
            
            defunc_1_op_res_f_res_33858 = acc0_33850;
        } else {
            defunc_1_op_res_f_res_33858 = -1;
        }
        ((__global bool *) mem_44351)[gtid_33598] = x_33854;
        ((__global int32_t *) mem_44353)[gtid_33598] =
            defunc_1_op_res_f_res_33858;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33843
}
__kernel void mainDetailedzisegmap_33720(__global int *global_failure,
                                         int64_t m_27932,
                                         int64_t num_groups_33743, __global
                                         unsigned char *defunc_4_map_res_mem_44173,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44238,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44239,
                                         __global unsigned char *mem_44332,
                                         __global unsigned char *mem_44334)
{
    #define segmap_group_sizze_33742 (mainDetailedzisegmap_group_sizze_33722)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45608;
    int32_t local_tid_45609;
    int64_t group_sizze_45612;
    int32_t wave_sizze_45611;
    int32_t group_tid_45610;
    
    global_tid_45608 = get_global_id(0);
    local_tid_45609 = get_local_id(0);
    group_sizze_45612 = get_local_size(0);
    wave_sizze_45611 = LOCKSTEP_WIDTH;
    group_tid_45610 = get_group_id(0);
    
    int32_t phys_tid_33720;
    
    phys_tid_33720 = global_tid_45608;
    
    int32_t phys_group_id_45613;
    
    phys_group_id_45613 = get_group_id(0);
    for (int32_t i_45614 = 0; i_45614 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932, segmap_group_sizze_33742)) -
                   phys_group_id_45613, sext_i64_i32(num_groups_33743));
         i_45614++) {
        int32_t virt_group_id_45615 = phys_group_id_45613 + i_45614 *
                sext_i64_i32(num_groups_33743);
        int64_t gtid_33719 = sext_i32_i64(virt_group_id_45615) *
                segmap_group_sizze_33742 + sext_i32_i64(local_tid_45609);
        
        if (slt64(gtid_33719, m_27932)) {
            int32_t x_33749 = ((__global
                                int32_t *) defunc_4_map_res_mem_44173)[gtid_33719];
            int32_t x_33750 = ((__global
                                int32_t *) defunc_3_map_res_mem_44238)[gtid_33719];
            float x_33751 = ((__global
                              float *) defunc_3_map_res_mem_44239)[gtid_33719];
            int32_t y_33752 = sub32(x_33749, x_33750);
            float i32_res_33753 = sitofp_i32_f32(x_33750);
            float sqrt_res_33754;
            
            sqrt_res_33754 = futrts_sqrt32(i32_res_33753);
            
            float y_33755 = x_33751 * sqrt_res_33754;
            
            ((__global float *) mem_44332)[gtid_33719] = y_33755;
            ((__global int32_t *) mem_44334)[gtid_33719] = y_33752;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33742
}
__kernel void mainDetailedzisegmap_intragroup_30711(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43560_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43550_backing_aligned_1,
                                                    int32_t k2p2zq_27949,
                                                    int64_t i32_res_27951,
                                                    int32_t m_28082,
                                                    int64_t i32_res_28084,
                                                    int64_t i32_res_28099,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43546,
                                                    __global
                                                    unsigned char *mem_43570)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43560_backing_1 = (__local volatile
                                                           char *) mem_43560_backing_aligned_0;
    __local volatile char *restrict mem_43550_backing_0 = (__local volatile
                                                           char *) mem_43550_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44794;
    int32_t local_tid_44795;
    int64_t group_sizze_44798;
    int32_t wave_sizze_44797;
    int32_t group_tid_44796;
    
    global_tid_44794 = get_global_id(0);
    local_tid_44795 = get_local_id(0);
    group_sizze_44798 = get_local_size(0);
    wave_sizze_44797 = LOCKSTEP_WIDTH;
    group_tid_44796 = get_group_id(0);
    
    int32_t phys_tid_30711;
    
    phys_tid_30711 = group_tid_44796;
    
    int32_t ltid_pre_44799;
    
    ltid_pre_44799 = local_tid_44795;
    
    int64_t gtid_30666;
    
    gtid_30666 = sext_i32_i64(group_tid_44796);
    
    __local char *mem_43550;
    
    mem_43550 = (__local char *) mem_43550_backing_0;
    
    int64_t gtid_30669 = sext_i32_i64(ltid_pre_44799);
    int32_t phys_tid_30670 = local_tid_44795;
    int32_t index_primexp_41386 = sext_i64_i32(gtid_30669);
    int32_t defunc_0_f_res_30836 = sdiv32(index_primexp_41386, m_28082);
    int32_t defunc_0_f_res_30837 = smod32(index_primexp_41386, m_28082);
    bool cond_30838 = slt32(defunc_0_f_res_30837, k2p2zq_27949);
    float defunc_0_f_res_30839;
    
    if (cond_30838) {
        int64_t i_30840 = sext_i32_i64(defunc_0_f_res_30836);
        int64_t j_30841 = sext_i32_i64(defunc_0_f_res_30837);
        float defunc_0_f_res_t_res_30842 = ((__global
                                             float *) defunc_3_map_res_mem_43546)[gtid_30666 *
                                                                                  (i32_res_27951 *
                                                                                   i32_res_27951) +
                                                                                  i_30840 *
                                                                                  i32_res_27951 +
                                                                                  j_30841];
        
        defunc_0_f_res_30839 = defunc_0_f_res_t_res_30842;
    } else {
        int32_t y_30843 = add32(k2p2zq_27949, defunc_0_f_res_30836);
        bool cond_30844 = defunc_0_f_res_30837 == y_30843;
        float defunc_0_f_res_f_res_30845;
        
        if (cond_30844) {
            defunc_0_f_res_f_res_30845 = 1.0F;
        } else {
            defunc_0_f_res_f_res_30845 = 0.0F;
        }
        defunc_0_f_res_30839 = defunc_0_f_res_f_res_30845;
    }
    ((__local float *) mem_43550)[gtid_30669] = defunc_0_f_res_30839;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43560;
    
    mem_43560 = (__local char *) mem_43560_backing_1;
    for (int32_t i_30847 = 0; i_30847 < k2p2zq_27949; i_30847++) {
        int64_t i32_res_30849 = sext_i32_i64(i_30847);
        float v1_30850 = ((__local float *) mem_43550)[i32_res_30849];
        bool cond_30851 = v1_30850 == 0.0F;
        int64_t gtid_30682 = sext_i32_i64(ltid_pre_44799);
        int32_t phys_tid_30683 = local_tid_44795;
        int32_t defunc_0_f_res_30854 = sext_i64_i32(gtid_30682);
        int32_t defunc_0_f_res_30855 = sdiv32(defunc_0_f_res_30854, m_28082);
        int32_t defunc_0_f_res_30856 = smod32(defunc_0_f_res_30854, m_28082);
        float defunc_0_f_res_30857;
        
        if (cond_30851) {
            int32_t x_30858 = mul32(m_28082, defunc_0_f_res_30855);
            int32_t i32_arg_30859 = add32(defunc_0_f_res_30856, x_30858);
            int64_t i32_res_30860 = sext_i32_i64(i32_arg_30859);
            float defunc_0_f_res_t_res_30861 = ((__local
                                                 float *) mem_43550)[i32_res_30860];
            
            defunc_0_f_res_30857 = defunc_0_f_res_t_res_30861;
        } else {
            int64_t i32_res_30862 = sext_i32_i64(defunc_0_f_res_30856);
            float x_30863 = ((__local float *) mem_43550)[i32_res_30862];
            float x_30864 = x_30863 / v1_30850;
            int32_t y_30865 = sub32(k2p2zq_27949, 1);
            bool cond_30866 = slt32(defunc_0_f_res_30855, y_30865);
            float defunc_0_f_res_f_res_30867;
            
            if (cond_30866) {
                int32_t x_30868 = add32(1, defunc_0_f_res_30855);
                int32_t x_30869 = mul32(m_28082, x_30868);
                int32_t i32_arg_30870 = add32(defunc_0_f_res_30856, x_30869);
                int64_t i32_res_30871 = sext_i32_i64(i32_arg_30870);
                float x_30872 = ((__local float *) mem_43550)[i32_res_30871];
                int32_t i32_arg_30873 = add32(i_30847, x_30869);
                int64_t i32_res_30874 = sext_i32_i64(i32_arg_30873);
                float x_30875 = ((__local float *) mem_43550)[i32_res_30874];
                float y_30876 = x_30864 * x_30875;
                float defunc_0_f_res_f_res_t_res_30877 = x_30872 - y_30876;
                
                defunc_0_f_res_f_res_30867 = defunc_0_f_res_f_res_t_res_30877;
            } else {
                defunc_0_f_res_f_res_30867 = x_30864;
            }
            defunc_0_f_res_30857 = defunc_0_f_res_f_res_30867;
        }
        ((__local float *) mem_43560)[gtid_30682] = defunc_0_f_res_30857;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_30709 = sext_i32_i64(ltid_pre_44799);
        int32_t phys_tid_30710 = local_tid_44795;
        float write_value_30880 = ((__local float *) mem_43560)[write_i_30709];
        
        if (sle64(0, write_i_30709) && slt64(write_i_30709, i32_res_28084)) {
            ((__local float *) mem_43550)[write_i_30709] = write_value_30880;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44801 = 0; i_44801 < sdiv_up64(i32_res_27951 *
                                                  i32_res_27951 -
                                                  sext_i32_i64(local_tid_44795),
                                                  i32_res_28084); i_44801++) {
        ((__global float *) mem_43570)[gtid_30666 * (i32_res_27951 *
                                                     i32_res_27951) +
                                       squot64(i_44801 * i32_res_28084 +
                                               sext_i32_i64(local_tid_44795),
                                               i32_res_27951) * i32_res_27951 +
                                       (i_44801 * i32_res_28084 +
                                        sext_i32_i64(local_tid_44795) -
                                        squot64(i_44801 * i32_res_28084 +
                                                sext_i32_i64(local_tid_44795),
                                                i32_res_27951) *
                                        i32_res_27951)] = ((__local
                                                            float *) mem_43550)[i32_res_27951 +
                                                                                (squot64(i_44801 *
                                                                                         i32_res_28084 +
                                                                                         sext_i32_i64(local_tid_44795),
                                                                                         i32_res_27951) *
                                                                                 i32_res_28099 +
                                                                                 (i_44801 *
                                                                                  i32_res_28084 +
                                                                                  sext_i32_i64(local_tid_44795) -
                                                                                  squot64(i_44801 *
                                                                                          i32_res_28084 +
                                                                                          sext_i32_i64(local_tid_44795),
                                                                                          i32_res_27951) *
                                                                                  i32_res_27951))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_30938(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43591_backing_aligned_0,
                                                    int64_t m_27932,
                                                    int32_t k2p2zq_27949,
                                                    int32_t m_28082,
                                                    int64_t i32_res_28084,
                                                    int32_t i_31333,
                                                    int64_t i32_res_31335,
                                                    int64_t ctx_param_ext_43577,
                                                    int64_t ctx_param_ext_43578,
                                                    int64_t ctx_param_ext_43580,
                                                    __global
                                                    unsigned char *mem_param_43582,
                                                    __global
                                                    unsigned char *mem_43587,
                                                    __global
                                                    unsigned char *mem_43595)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43591_backing_0 = (__local volatile
                                                           char *) mem_43591_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44828;
    int32_t local_tid_44829;
    int64_t group_sizze_44832;
    int32_t wave_sizze_44831;
    int32_t group_tid_44830;
    
    global_tid_44828 = get_global_id(0);
    local_tid_44829 = get_local_id(0);
    group_sizze_44832 = get_local_size(0);
    wave_sizze_44831 = LOCKSTEP_WIDTH;
    group_tid_44830 = get_group_id(0);
    
    int32_t phys_tid_30938;
    
    phys_tid_30938 = group_tid_44830;
    
    int32_t ltid_pre_44833;
    
    ltid_pre_44833 = local_tid_44829;
    
    int64_t gtid_30906;
    
    gtid_30906 = sext_i32_i64(group_tid_44830);
    
    float v1_31348 = ((__global float *) mem_param_43582)[ctx_param_ext_43577 +
                                                          (gtid_30906 *
                                                           ctx_param_ext_43578 +
                                                           i32_res_31335 *
                                                           ctx_param_ext_43580)];
    bool cond_31349 = v1_31348 == 0.0F;
    __local char *mem_43591;
    
    mem_43591 = (__local char *) mem_43591_backing_0;
    
    int64_t gtid_30909 = sext_i32_i64(ltid_pre_44833);
    int32_t phys_tid_30910 = local_tid_44829;
    int32_t defunc_0_f_res_31352 = sext_i64_i32(gtid_30909);
    int32_t defunc_0_f_res_31353 = sdiv32(defunc_0_f_res_31352, m_28082);
    int32_t defunc_0_f_res_31354 = smod32(defunc_0_f_res_31352, m_28082);
    float defunc_0_f_res_31355;
    
    if (cond_31349) {
        int32_t x_31356 = mul32(m_28082, defunc_0_f_res_31353);
        int32_t i32_arg_31357 = add32(defunc_0_f_res_31354, x_31356);
        int64_t i32_res_31358 = sext_i32_i64(i32_arg_31357);
        float defunc_0_f_res_t_res_31359 = ((__global
                                             float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                       (gtid_30906 *
                                                                        ctx_param_ext_43578 +
                                                                        i32_res_31358 *
                                                                        ctx_param_ext_43580)];
        
        defunc_0_f_res_31355 = defunc_0_f_res_t_res_31359;
    } else {
        int64_t i32_res_31360 = sext_i32_i64(defunc_0_f_res_31354);
        float x_31361 = ((__global
                          float *) mem_param_43582)[ctx_param_ext_43577 +
                                                    (gtid_30906 *
                                                     ctx_param_ext_43578 +
                                                     i32_res_31360 *
                                                     ctx_param_ext_43580)];
        float x_31362 = x_31361 / v1_31348;
        int32_t y_31363 = sub32(k2p2zq_27949, 1);
        bool cond_31364 = slt32(defunc_0_f_res_31353, y_31363);
        float defunc_0_f_res_f_res_31365;
        
        if (cond_31364) {
            int32_t x_31366 = add32(1, defunc_0_f_res_31353);
            int32_t x_31367 = mul32(m_28082, x_31366);
            int32_t i32_arg_31368 = add32(defunc_0_f_res_31354, x_31367);
            int64_t i32_res_31369 = sext_i32_i64(i32_arg_31368);
            float x_31370 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_30906 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_31369 *
                                                         ctx_param_ext_43580)];
            int32_t i32_arg_31371 = add32(i_31333, x_31367);
            int64_t i32_res_31372 = sext_i32_i64(i32_arg_31371);
            float x_31373 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_30906 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_31372 *
                                                         ctx_param_ext_43580)];
            float y_31374 = x_31362 * x_31373;
            float defunc_0_f_res_f_res_t_res_31375 = x_31370 - y_31374;
            
            defunc_0_f_res_f_res_31365 = defunc_0_f_res_f_res_t_res_31375;
        } else {
            defunc_0_f_res_f_res_31365 = x_31362;
        }
        defunc_0_f_res_31355 = defunc_0_f_res_f_res_31365;
    }
    ((__local float *) mem_43591)[gtid_30909] = defunc_0_f_res_31355;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_30936 = sext_i32_i64(ltid_pre_44833);
    int32_t phys_tid_30937 = local_tid_44829;
    float write_value_31378 = ((__local float *) mem_43591)[write_i_30936];
    
    if (sle64(0, write_i_30936) && slt64(write_i_30936, i32_res_28084)) {
        ((__global float *) mem_43587)[gtid_30906 + write_i_30936 * m_27932] =
            write_value_31378;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44829 == 0) {
        for (int64_t i_44834 = 0; i_44834 < i32_res_28084; i_44834++) {
            ((__global float *) mem_43595)[gtid_30906 * i32_res_28084 +
                                           i_44834] = ((__global
                                                        float *) mem_43587)[gtid_30906 +
                                                                            i_44834 *
                                                                            m_27932];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31889(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44152_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44150_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_44148_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_44146_backing_aligned_3,
                                                    int64_t N_27931,
                                                    int64_t N_27933,
                                                    int64_t i_28211, __global
                                                    unsigned char *images_mem_43378,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44136,
                                                    __global
                                                    unsigned char *mem_44155,
                                                    __global
                                                    unsigned char *mem_44158,
                                                    __global
                                                    unsigned char *mem_44161)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44152_backing_3 = (__local volatile
                                                           char *) mem_44152_backing_aligned_0;
    __local volatile char *restrict mem_44150_backing_2 = (__local volatile
                                                           char *) mem_44150_backing_aligned_1;
    __local volatile char *restrict mem_44148_backing_1 = (__local volatile
                                                           char *) mem_44148_backing_aligned_2;
    __local volatile char *restrict mem_44146_backing_0 = (__local volatile
                                                           char *) mem_44146_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45228;
    int32_t local_tid_45229;
    int64_t group_sizze_45232;
    int32_t wave_sizze_45231;
    int32_t group_tid_45230;
    
    global_tid_45228 = get_global_id(0);
    local_tid_45229 = get_local_id(0);
    group_sizze_45232 = get_local_size(0);
    wave_sizze_45231 = LOCKSTEP_WIDTH;
    group_tid_45230 = get_group_id(0);
    
    int32_t phys_tid_31889;
    
    phys_tid_31889 = group_tid_45230;
    
    int32_t ltid_pre_45233;
    
    ltid_pre_45233 = local_tid_45229;
    
    int64_t gtid_31882;
    
    gtid_31882 = sext_i32_i64(group_tid_45230);
    
    __local char *mem_44146;
    
    mem_44146 = (__local char *) mem_44146_backing_0;
    
    __local char *mem_44148;
    
    mem_44148 = (__local char *) mem_44148_backing_1;
    
    int64_t gtid_31885 = sext_i32_i64(ltid_pre_45233);
    int32_t phys_tid_31886 = local_tid_45229;
    float x_31978 = ((__global float *) images_mem_43378)[gtid_31882 * N_27933 +
                                                          gtid_31885];
    bool isnan_res_31980;
    
    isnan_res_31980 = futrts_isnan32(x_31978);
    
    bool cond_31981 = !isnan_res_31980;
    float defunc_0_f_res_31982;
    
    if (cond_31981) {
        float x_31979 = ((__global
                          float *) defunc_3_map_res_mem_44136)[gtid_31882 *
                                                               N_27931 +
                                                               gtid_31885];
        float defunc_0_f_res_t_res_31983 = x_31978 - x_31979;
        
        defunc_0_f_res_31982 = defunc_0_f_res_t_res_31983;
    } else {
        defunc_0_f_res_31982 = NAN;
    }
    
    bool isnan_res_31984;
    
    isnan_res_31984 = futrts_isnan32(defunc_0_f_res_31982);
    
    bool defunc_0_p_res_31985 = !isnan_res_31984;
    int64_t defunc_0_f_res_31986 = btoi_bool_i64(defunc_0_p_res_31985);
    
    ((__local int64_t *) mem_44146)[gtid_31885] = defunc_0_f_res_31986;
    ((__local float *) mem_44148)[gtid_31885] = defunc_0_f_res_31982;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45234;
    
    dims_flat_45234 = N_27931;
    
    int64_t x_31975;
    int64_t x_31976;
    int64_t x_45236;
    int64_t x_45237;
    bool ltid_in_bounds_45239;
    
    ltid_in_bounds_45239 = slt64(sext_i32_i64(local_tid_45229), N_27931);
    
    int32_t skip_threads_45240;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45239) {
            x_31976 = ((volatile __local
                        int64_t *) mem_44146)[sext_i32_i64(local_tid_45229)];
            if ((local_tid_45229 - squot32(local_tid_45229, 32) * 32) == 0) {
                x_31975 = x_31976;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45240 = 1;
        while (slt32(skip_threads_45240, 32)) {
            if (sle32(skip_threads_45240, local_tid_45229 -
                      squot32(local_tid_45229, 32) * 32) &&
                ltid_in_bounds_45239) {
                // read operands
                {
                    x_31975 = ((volatile __local
                                int64_t *) mem_44146)[sext_i32_i64(local_tid_45229) -
                                                      sext_i32_i64(skip_threads_45240)];
                }
                // perform operation
                {
                    bool inactive_45241 =
                         slt64(srem64(sext_i32_i64(local_tid_45229), N_27931),
                               sext_i32_i64(local_tid_45229) -
                               sext_i32_i64(local_tid_45229 -
                               skip_threads_45240));
                    
                    if (inactive_45241) {
                        x_31975 = x_31976;
                    }
                    if (!inactive_45241) {
                        int64_t defunc_1_op_res_31977 = add64(x_31975, x_31976);
                        
                        x_31975 = defunc_1_op_res_31977;
                    }
                }
            }
            if (sle32(wave_sizze_45231, skip_threads_45240)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45240, local_tid_45229 -
                      squot32(local_tid_45229, 32) * 32) &&
                ltid_in_bounds_45239) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44146)[sext_i32_i64(local_tid_45229)] =
                        x_31975;
                    x_31976 = x_31975;
                }
            }
            if (sle32(wave_sizze_45231, skip_threads_45240)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45240 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45229 - squot32(local_tid_45229, 32) * 32) == 31 &&
            ltid_in_bounds_45239) {
            ((volatile __local
              int64_t *) mem_44146)[sext_i32_i64(squot32(local_tid_45229,
                                                         32))] = x_31975;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45242;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45229, 32) == 0 && ltid_in_bounds_45239) {
                x_45237 = ((volatile __local
                            int64_t *) mem_44146)[sext_i32_i64(local_tid_45229)];
                if ((local_tid_45229 - squot32(local_tid_45229, 32) * 32) ==
                    0) {
                    x_45236 = x_45237;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45242 = 1;
            while (slt32(skip_threads_45242, 32)) {
                if (sle32(skip_threads_45242, local_tid_45229 -
                          squot32(local_tid_45229, 32) * 32) &&
                    (squot32(local_tid_45229, 32) == 0 &&
                     ltid_in_bounds_45239)) {
                    // read operands
                    {
                        x_45236 = ((volatile __local
                                    int64_t *) mem_44146)[sext_i32_i64(local_tid_45229) -
                                                          sext_i32_i64(skip_threads_45242)];
                    }
                    // perform operation
                    {
                        bool inactive_45243 =
                             slt64(srem64(sext_i32_i64(local_tid_45229 * 32 +
                                          32 - 1), N_27931),
                                   sext_i32_i64(local_tid_45229 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45229 -
                                                 skip_threads_45242) * 32 + 32 -
                                   1));
                        
                        if (inactive_45243) {
                            x_45236 = x_45237;
                        }
                        if (!inactive_45243) {
                            int64_t defunc_1_op_res_45238 = add64(x_45236,
                                                                  x_45237);
                            
                            x_45236 = defunc_1_op_res_45238;
                        }
                    }
                }
                if (sle32(wave_sizze_45231, skip_threads_45242)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45242, local_tid_45229 -
                          squot32(local_tid_45229, 32) * 32) &&
                    (squot32(local_tid_45229, 32) == 0 &&
                     ltid_in_bounds_45239)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44146)[sext_i32_i64(local_tid_45229)] =
                            x_45236;
                        x_45237 = x_45236;
                    }
                }
                if (sle32(wave_sizze_45231, skip_threads_45242)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45242 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45229, 32) == 0 || !ltid_in_bounds_45239)) {
            // read operands
            {
                x_31976 = x_31975;
                x_31975 = ((__local
                            int64_t *) mem_44146)[sext_i32_i64(squot32(local_tid_45229,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45244 =
                     slt64(srem64(sext_i32_i64(local_tid_45229), N_27931),
                           sext_i32_i64(local_tid_45229) -
                           sext_i32_i64(squot32(local_tid_45229, 32) * 32 - 1));
                
                if (inactive_45244) {
                    x_31975 = x_31976;
                }
                if (!inactive_45244) {
                    int64_t defunc_1_op_res_31977 = add64(x_31975, x_31976);
                    
                    x_31975 = defunc_1_op_res_31977;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44146)[sext_i32_i64(local_tid_45229)] =
                    x_31975;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45229, 32) == 0) {
            ((__local int64_t *) mem_44146)[sext_i32_i64(local_tid_45229)] =
                x_31976;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_31987 = ((__local int64_t *) mem_44146)[i_28211];
    int32_t defunc_0_f_res_31988 = sext_i64_i32(last_res_31987);
    __local char *mem_44150;
    
    mem_44150 = (__local char *) mem_44150_backing_2;
    ((__local float *) mem_44150)[sext_i32_i64(local_tid_45229)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44152;
    
    mem_44152 = (__local char *) mem_44152_backing_3;
    ((__local int32_t *) mem_44152)[sext_i32_i64(local_tid_45229)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_31887 = sext_i32_i64(ltid_pre_45233);
    int32_t phys_tid_31888 = local_tid_45229;
    float x_31993 = ((__local float *) mem_44148)[write_i_31887];
    int32_t index_primexp_41406 = sext_i64_i32(write_i_31887);
    bool isnan_res_31996;
    
    isnan_res_31996 = futrts_isnan32(x_31993);
    
    bool defunc_0_p_res_31997 = !isnan_res_31996;
    int64_t defunc_1_f_res_31998;
    
    if (defunc_0_p_res_31997) {
        int64_t x_31994 = ((__local int64_t *) mem_44146)[write_i_31887];
        int64_t defunc_1_f_res_t_res_31999 = sub64(x_31994, 1);
        
        defunc_1_f_res_31998 = defunc_1_f_res_t_res_31999;
    } else {
        defunc_1_f_res_31998 = -1;
    }
    if (sle64(0, defunc_1_f_res_31998) && slt64(defunc_1_f_res_31998,
                                                N_27931)) {
        ((__local int32_t *) mem_44152)[defunc_1_f_res_31998] =
            index_primexp_41406;
    }
    if (sle64(0, defunc_1_f_res_31998) && slt64(defunc_1_f_res_31998,
                                                N_27931)) {
        ((__local float *) mem_44150)[defunc_1_f_res_31998] = x_31993;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45229 == 0) {
        ((__global int32_t *) mem_44155)[gtid_31882] = defunc_0_f_res_31988;
    }
    ((__global float *) mem_44158)[gtid_31882 * N_27931 +
                                   sext_i32_i64(local_tid_45229)] = ((__local
                                                                      float *) mem_44150)[sext_i32_i64(local_tid_45229)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_44161)[gtid_31882 * N_27931 +
                                     sext_i32_i64(local_tid_45229)] = ((__local
                                                                        int32_t *) mem_44152)[sext_i32_i64(local_tid_45229)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32229(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45337_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45333_backing_aligned_1,
                                                    int64_t N_27931,
                                                    int64_t N_27933,
                                                    float hfrac_27938,
                                                    int64_t i32_res_27945,
                                                    int32_t k2p2_27947, __global
                                                    unsigned char *images_mem_43378,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44174,
                                                    __global
                                                    unsigned char *mem_44218,
                                                    __global
                                                    unsigned char *mem_44220,
                                                    __global
                                                    unsigned char *mem_44222)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45337_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45337_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45333_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45333_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45327;
    int32_t local_tid_45328;
    int64_t group_sizze_45331;
    int32_t wave_sizze_45330;
    int32_t group_tid_45329;
    
    global_tid_45327 = get_global_id(0);
    local_tid_45328 = get_local_id(0);
    group_sizze_45331 = get_local_size(0);
    wave_sizze_45330 = LOCKSTEP_WIDTH;
    group_tid_45329 = get_group_id(0);
    
    int32_t phys_tid_32229;
    
    phys_tid_32229 = group_tid_45329;
    
    int32_t ltid_pre_45332;
    
    ltid_pre_45332 = local_tid_45328;
    
    int64_t gtid_32222;
    
    gtid_32222 = sext_i32_i64(group_tid_45329);
    
    int32_t defunc_0_f_res_32306;
    int64_t gtid_32225 = sext_i32_i64(ltid_pre_45332);
    int32_t phys_tid_32226 = local_tid_45328;
    __local char *red_arr_mem_45333;
    
    red_arr_mem_45333 = (__local char *) red_arr_mem_45333_backing_0;
    
    float x_32310;
    
    x_32310 = ((__global float *) images_mem_43378)[gtid_32222 * N_27933 +
                                                    gtid_32225];
    
    bool isnan_res_32311;
    
    isnan_res_32311 = futrts_isnan32(x_32310);
    
    bool cond_32312 = !isnan_res_32311;
    int32_t defunc_0_f_res_32313 = btoi_bool_i32(cond_32312);
    
    ((__local int32_t *) red_arr_mem_45333)[gtid_32225] = defunc_0_f_res_32313;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45335;
    int32_t skip_waves_45336;
    
    skip_waves_45336 = 1;
    
    int32_t x_32307;
    int32_t x_32308;
    
    offset_45335 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45328, sext_i64_i32(i32_res_27945))) {
            x_32307 = ((__local
                        int32_t *) red_arr_mem_45333)[sext_i32_i64(local_tid_45328 +
                                                      offset_45335)];
        }
    }
    offset_45335 = 1;
    while (slt32(offset_45335, wave_sizze_45330)) {
        if (slt32(local_tid_45328 + offset_45335,
                  sext_i64_i32(i32_res_27945)) && ((local_tid_45328 -
                                                    squot32(local_tid_45328,
                                                            wave_sizze_45330) *
                                                    wave_sizze_45330) & (2 *
                                                                         offset_45335 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_32308 = ((volatile __local
                            int32_t *) red_arr_mem_45333)[sext_i32_i64(local_tid_45328 +
                                                          offset_45335)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_32309 = add32(x_32307, x_32308);
                
                x_32307 = defunc_1_op_res_32309;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45333)[sext_i32_i64(local_tid_45328)] =
                    x_32307;
            }
        }
        offset_45335 *= 2;
    }
    while (slt32(skip_waves_45336, squot32(sext_i64_i32(i32_res_27945) +
                                           wave_sizze_45330 - 1,
                                           wave_sizze_45330))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45335 = skip_waves_45336 * wave_sizze_45330;
        if (slt32(local_tid_45328 + offset_45335,
                  sext_i64_i32(i32_res_27945)) && ((local_tid_45328 -
                                                    squot32(local_tid_45328,
                                                            wave_sizze_45330) *
                                                    wave_sizze_45330) == 0 &&
                                                   (squot32(local_tid_45328,
                                                            wave_sizze_45330) &
                                                    (2 * skip_waves_45336 -
                                                     1)) == 0)) {
            // read array element
            {
                x_32308 = ((__local
                            int32_t *) red_arr_mem_45333)[sext_i32_i64(local_tid_45328 +
                                                          offset_45335)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_32309 = add32(x_32307, x_32308);
                
                x_32307 = defunc_1_op_res_32309;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45333)[sext_i32_i64(local_tid_45328)] =
                    x_32307;
            }
        }
        skip_waves_45336 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32306 = ((__local int32_t *) red_arr_mem_45333)[0];
    
    float defunc_0_f_res_32314;
    int64_t gtid_32227 = sext_i32_i64(ltid_pre_45332);
    int32_t phys_tid_32228 = local_tid_45328;
    __local char *red_arr_mem_45337;
    
    red_arr_mem_45337 = (__local char *) red_arr_mem_45337_backing_1;
    
    int32_t index_primexp_41414;
    
    index_primexp_41414 = sext_i64_i32(gtid_32227);
    
    bool cond_32319 = slt32(index_primexp_41414, defunc_0_f_res_32306);
    float defunc_0_f_res_32320;
    
    if (cond_32319) {
        int64_t i_32321 = sext_i32_i64(index_primexp_41414);
        float defunc_0_f_res_t_res_32322 = ((__global
                                             float *) defunc_4_map_res_mem_44174)[gtid_32222 *
                                                                                  N_27931 +
                                                                                  i_32321];
        
        defunc_0_f_res_32320 = defunc_0_f_res_t_res_32322;
    } else {
        defunc_0_f_res_32320 = 0.0F;
    }
    
    float defunc_0_f_res_32323 = defunc_0_f_res_32320 * defunc_0_f_res_32320;
    
    ((__local float *) red_arr_mem_45337)[gtid_32227] = defunc_0_f_res_32323;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45339;
    int32_t skip_waves_45340;
    
    skip_waves_45340 = 1;
    
    float x_32315;
    float x_32316;
    
    offset_45339 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45328, sext_i64_i32(i32_res_27945))) {
            x_32315 = ((__local
                        float *) red_arr_mem_45337)[sext_i32_i64(local_tid_45328 +
                                                    offset_45339)];
        }
    }
    offset_45339 = 1;
    while (slt32(offset_45339, wave_sizze_45330)) {
        if (slt32(local_tid_45328 + offset_45339,
                  sext_i64_i32(i32_res_27945)) && ((local_tid_45328 -
                                                    squot32(local_tid_45328,
                                                            wave_sizze_45330) *
                                                    wave_sizze_45330) & (2 *
                                                                         offset_45339 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_32316 = ((volatile __local
                            float *) red_arr_mem_45337)[sext_i32_i64(local_tid_45328 +
                                                        offset_45339)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_32317 = x_32315 + x_32316;
                
                x_32315 = defunc_1_op_res_32317;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45337)[sext_i32_i64(local_tid_45328)] =
                    x_32315;
            }
        }
        offset_45339 *= 2;
    }
    while (slt32(skip_waves_45340, squot32(sext_i64_i32(i32_res_27945) +
                                           wave_sizze_45330 - 1,
                                           wave_sizze_45330))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45339 = skip_waves_45340 * wave_sizze_45330;
        if (slt32(local_tid_45328 + offset_45339,
                  sext_i64_i32(i32_res_27945)) && ((local_tid_45328 -
                                                    squot32(local_tid_45328,
                                                            wave_sizze_45330) *
                                                    wave_sizze_45330) == 0 &&
                                                   (squot32(local_tid_45328,
                                                            wave_sizze_45330) &
                                                    (2 * skip_waves_45340 -
                                                     1)) == 0)) {
            // read array element
            {
                x_32316 = ((__local
                            float *) red_arr_mem_45337)[sext_i32_i64(local_tid_45328 +
                                                        offset_45339)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_32317 = x_32315 + x_32316;
                
                x_32315 = defunc_1_op_res_32317;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45337)[sext_i32_i64(local_tid_45328)] =
                    x_32315;
            }
        }
        skip_waves_45340 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32314 = ((__local float *) red_arr_mem_45337)[0];
    
    int32_t r32_arg_32324 = sub32(defunc_0_f_res_32306, k2p2_27947);
    float i32_res_32325 = sitofp_i32_f32(r32_arg_32324);
    float sqrt_arg_32326 = defunc_0_f_res_32314 / i32_res_32325;
    float sqrt_res_32327;
    
    sqrt_res_32327 = futrts_sqrt32(sqrt_arg_32326);
    
    float i32_res_32328 = sitofp_i32_f32(defunc_0_f_res_32306);
    float t32_arg_32329 = hfrac_27938 * i32_res_32328;
    int32_t f32_res_32330 = fptosi_f32_i32(t32_arg_32329);
    
    if (local_tid_45328 == 0) {
        ((__global int32_t *) mem_44218)[gtid_32222] = f32_res_32330;
    }
    if (local_tid_45328 == 0) {
        ((__global int32_t *) mem_44220)[gtid_32222] = defunc_0_f_res_32306;
    }
    if (local_tid_45328 == 0) {
        ((__global float *) mem_44222)[gtid_32222] = sqrt_res_32327;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32673(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_44316_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44292_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_44290_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45600_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45598_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45596_backing_aligned_5,
                                                    __local volatile
                                                    int64_t *mem_44287_backing_aligned_6,
                                                    __local volatile
                                                    int64_t *mem_44284_backing_aligned_7,
                                                    int64_t N_27931,
                                                    int32_t n_27936,
                                                    int64_t iota32_arg_28331,
                                                    int64_t distance_28363,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44173,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44174,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44175,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44237,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44238,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44239,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_44272,
                                                    __global
                                                    unsigned char *mem_44277,
                                                    __global
                                                    unsigned char *mem_44320,
                                                    __global
                                                    unsigned char *mem_44323,
                                                    __global
                                                    unsigned char *mem_44325,
                                                    __global
                                                    unsigned char *mem_44327,
                                                    __global
                                                    unsigned char *mem_44329)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44316_backing_7 = (__local volatile
                                                           char *) mem_44316_backing_aligned_0;
    __local volatile char *restrict mem_44292_backing_6 = (__local volatile
                                                           char *) mem_44292_backing_aligned_1;
    __local volatile char *restrict mem_44290_backing_5 = (__local volatile
                                                           char *) mem_44290_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45600_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_45600_backing_aligned_3;
    __local volatile char *restrict red_arr_mem_45598_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45598_backing_aligned_4;
    __local volatile char *restrict red_arr_mem_45596_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45596_backing_aligned_5;
    __local volatile char *restrict mem_44287_backing_1 = (__local volatile
                                                           char *) mem_44287_backing_aligned_6;
    __local volatile char *restrict mem_44284_backing_0 = (__local volatile
                                                           char *) mem_44284_backing_aligned_7;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45579;
    int32_t local_tid_45580;
    int64_t group_sizze_45583;
    int32_t wave_sizze_45582;
    int32_t group_tid_45581;
    
    global_tid_45579 = get_global_id(0);
    local_tid_45580 = get_local_id(0);
    group_sizze_45583 = get_local_size(0);
    wave_sizze_45582 = LOCKSTEP_WIDTH;
    group_tid_45581 = get_group_id(0);
    
    int32_t phys_tid_32673;
    
    phys_tid_32673 = group_tid_45581;
    
    int32_t ltid_pre_45584;
    
    ltid_pre_45584 = local_tid_45580;
    
    int64_t gtid_32642;
    
    gtid_32642 = sext_i32_i64(group_tid_45581);
    
    int32_t x_33119;
    
    x_33119 = ((__global int32_t *) defunc_4_map_res_mem_44173)[gtid_32642];
    
    int32_t x_33120 = ((__global
                        int32_t *) defunc_3_map_res_mem_44238)[gtid_32642];
    float x_33121 = ((__global float *) defunc_3_map_res_mem_44239)[gtid_32642];
    int32_t x_33122 = ((__global
                        int32_t *) defunc_3_map_res_mem_44237)[gtid_32642];
    float x_33123 = ((__global float *) defunc_0_f_res_mem_44272)[gtid_32642];
    int32_t y_33126 = sub32(x_33119, x_33120);
    float i32_res_33127 = sitofp_i32_f32(x_33120);
    float sqrt_res_33128;
    
    sqrt_res_33128 = futrts_sqrt32(i32_res_33127);
    
    float y_33129 = x_33121 * sqrt_res_33128;
    __local char *mem_44284;
    
    mem_44284 = (__local char *) mem_44284_backing_0;
    
    int64_t gtid_32645 = sext_i32_i64(ltid_pre_45584);
    int32_t phys_tid_32646 = local_tid_45580;
    int32_t index_primexp_41427 = sext_i64_i32(gtid_32645);
    bool cond_33142 = sle32(y_33126, index_primexp_41427);
    float defunc_0_f_res_33143;
    
    if (cond_33142) {
        defunc_0_f_res_33143 = 0.0F;
    } else {
        bool cond_33144 = index_primexp_41427 == 0;
        float defunc_0_f_res_f_res_33145;
        
        if (cond_33144) {
            defunc_0_f_res_f_res_33145 = x_33123;
        } else {
            int32_t i_33146 = add32(x_33120, index_primexp_41427);
            int64_t i_33147 = sext_i32_i64(i_33146);
            float x_33148 = ((__global
                              float *) defunc_4_map_res_mem_44174)[gtid_32642 *
                                                                   N_27931 +
                                                                   i_33147];
            int32_t x_33149 = sub32(x_33120, x_33122);
            int32_t i_33150 = add32(x_33149, index_primexp_41427);
            int64_t i_33151 = sext_i32_i64(i_33150);
            float y_33152 = ((__global
                              float *) defunc_4_map_res_mem_44174)[gtid_32642 *
                                                                   N_27931 +
                                                                   i_33151];
            float defunc_0_f_res_f_res_f_res_33153 = x_33148 - y_33152;
            
            defunc_0_f_res_f_res_33145 = defunc_0_f_res_f_res_f_res_33153;
        }
        defunc_0_f_res_33143 = defunc_0_f_res_f_res_33145;
    }
    ((__local float *) mem_44284)[gtid_32645] = defunc_0_f_res_33143;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45585;
    
    dims_flat_45585 = iota32_arg_28331;
    
    float x_33138;
    float x_33139;
    float x_45587;
    float x_45588;
    bool ltid_in_bounds_45590;
    
    ltid_in_bounds_45590 = slt64(sext_i32_i64(local_tid_45580),
                                 iota32_arg_28331);
    
    int32_t skip_threads_45591;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45590) {
            x_33139 = ((volatile __local
                        float *) mem_44284)[sext_i32_i64(local_tid_45580)];
            if ((local_tid_45580 - squot32(local_tid_45580, 32) * 32) == 0) {
                x_33138 = x_33139;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45591 = 1;
        while (slt32(skip_threads_45591, 32)) {
            if (sle32(skip_threads_45591, local_tid_45580 -
                      squot32(local_tid_45580, 32) * 32) &&
                ltid_in_bounds_45590) {
                // read operands
                {
                    x_33138 = ((volatile __local
                                float *) mem_44284)[sext_i32_i64(local_tid_45580) -
                                                    sext_i32_i64(skip_threads_45591)];
                }
                // perform operation
                {
                    bool inactive_45592 =
                         slt64(srem64(sext_i32_i64(local_tid_45580),
                                      iota32_arg_28331),
                               sext_i32_i64(local_tid_45580) -
                               sext_i32_i64(local_tid_45580 -
                               skip_threads_45591));
                    
                    if (inactive_45592) {
                        x_33138 = x_33139;
                    }
                    if (!inactive_45592) {
                        float defunc_1_op_res_33140 = x_33138 + x_33139;
                        
                        x_33138 = defunc_1_op_res_33140;
                    }
                }
            }
            if (sle32(wave_sizze_45582, skip_threads_45591)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45591, local_tid_45580 -
                      squot32(local_tid_45580, 32) * 32) &&
                ltid_in_bounds_45590) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44284)[sext_i32_i64(local_tid_45580)] =
                        x_33138;
                    x_33139 = x_33138;
                }
            }
            if (sle32(wave_sizze_45582, skip_threads_45591)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45591 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45580 - squot32(local_tid_45580, 32) * 32) == 31 &&
            ltid_in_bounds_45590) {
            ((volatile __local
              float *) mem_44284)[sext_i32_i64(squot32(local_tid_45580, 32))] =
                x_33138;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45593;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45580, 32) == 0 && ltid_in_bounds_45590) {
                x_45588 = ((volatile __local
                            float *) mem_44284)[sext_i32_i64(local_tid_45580)];
                if ((local_tid_45580 - squot32(local_tid_45580, 32) * 32) ==
                    0) {
                    x_45587 = x_45588;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45593 = 1;
            while (slt32(skip_threads_45593, 32)) {
                if (sle32(skip_threads_45593, local_tid_45580 -
                          squot32(local_tid_45580, 32) * 32) &&
                    (squot32(local_tid_45580, 32) == 0 &&
                     ltid_in_bounds_45590)) {
                    // read operands
                    {
                        x_45587 = ((volatile __local
                                    float *) mem_44284)[sext_i32_i64(local_tid_45580) -
                                                        sext_i32_i64(skip_threads_45593)];
                    }
                    // perform operation
                    {
                        bool inactive_45594 =
                             slt64(srem64(sext_i32_i64(local_tid_45580 * 32 +
                                          32 - 1), iota32_arg_28331),
                                   sext_i32_i64(local_tid_45580 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45580 -
                                                 skip_threads_45593) * 32 + 32 -
                                   1));
                        
                        if (inactive_45594) {
                            x_45587 = x_45588;
                        }
                        if (!inactive_45594) {
                            float defunc_1_op_res_45589 = x_45587 + x_45588;
                            
                            x_45587 = defunc_1_op_res_45589;
                        }
                    }
                }
                if (sle32(wave_sizze_45582, skip_threads_45593)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45593, local_tid_45580 -
                          squot32(local_tid_45580, 32) * 32) &&
                    (squot32(local_tid_45580, 32) == 0 &&
                     ltid_in_bounds_45590)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44284)[sext_i32_i64(local_tid_45580)] =
                            x_45587;
                        x_45588 = x_45587;
                    }
                }
                if (sle32(wave_sizze_45582, skip_threads_45593)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45593 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45580, 32) == 0 || !ltid_in_bounds_45590)) {
            // read operands
            {
                x_33139 = x_33138;
                x_33138 = ((__local
                            float *) mem_44284)[sext_i32_i64(squot32(local_tid_45580,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45595 =
                     slt64(srem64(sext_i32_i64(local_tid_45580),
                                  iota32_arg_28331),
                           sext_i32_i64(local_tid_45580) -
                           sext_i32_i64(squot32(local_tid_45580, 32) * 32 - 1));
                
                if (inactive_45595) {
                    x_33138 = x_33139;
                }
                if (!inactive_45595) {
                    float defunc_1_op_res_33140 = x_33138 + x_33139;
                    
                    x_33138 = defunc_1_op_res_33140;
                }
            }
            // write final result
            {
                ((__local float *) mem_44284)[sext_i32_i64(local_tid_45580)] =
                    x_33138;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45580, 32) == 0) {
            ((__local float *) mem_44284)[sext_i32_i64(local_tid_45580)] =
                x_33139;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44287;
    
    mem_44287 = (__local char *) mem_44287_backing_1;
    
    bool acc0_33159;
    int32_t acc0_33160;
    float acc0_33161;
    int64_t gtid_32647 = sext_i32_i64(ltid_pre_45584);
    int32_t phys_tid_32648 = local_tid_45580;
    __local char *red_arr_mem_45596;
    
    red_arr_mem_45596 = (__local char *) red_arr_mem_45596_backing_2;
    
    __local char *red_arr_mem_45598;
    
    red_arr_mem_45598 = (__local char *) red_arr_mem_45598_backing_3;
    
    __local char *red_arr_mem_45600;
    
    red_arr_mem_45600 = (__local char *) red_arr_mem_45600_backing_4;
    
    float x_33177;
    
    x_33177 = ((__local float *) mem_44284)[gtid_32647];
    
    float x_33178 = ((__global float *) mem_44277)[gtid_32647];
    int32_t index_primexp_41430 = sext_i64_i32(gtid_32647);
    float defunc_0_f_res_33181 = x_33177 / y_33129;
    bool cond_33182 = slt32(index_primexp_41430, y_33126);
    bool isnan_res_33183;
    
    isnan_res_33183 = futrts_isnan32(defunc_0_f_res_33181);
    
    bool cond_t_res_33184 = !isnan_res_33183;
    bool x_33185 = cond_33182 && cond_t_res_33184;
    float abs_res_33186 = (float) fabs(defunc_0_f_res_33181);
    bool defunc_2_f_res_t_res_33187 = x_33178 < abs_res_33186;
    bool x_33188 = x_33185 && defunc_2_f_res_t_res_33187;
    float defunc_1_f_res_33189;
    
    if (cond_33182) {
        defunc_1_f_res_33189 = defunc_0_f_res_33181;
    } else {
        defunc_1_f_res_33189 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45596)[gtid_32647] = x_33188;
    ((__local int32_t *) red_arr_mem_45598)[gtid_32647] = index_primexp_41430;
    ((__local float *) red_arr_mem_45600)[gtid_32647] = defunc_1_f_res_33189;
    ((__local float *) mem_44287)[gtid_32647] = defunc_0_f_res_33181;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45602;
    int32_t skip_waves_45603;
    
    skip_waves_45603 = 1;
    
    bool x_33163;
    int32_t x_33164;
    float x_33165;
    bool x_33166;
    int32_t x_33167;
    float x_33168;
    
    offset_45602 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45580, sext_i64_i32(iota32_arg_28331))) {
            x_33163 = ((__local
                        bool *) red_arr_mem_45596)[sext_i32_i64(local_tid_45580 +
                                                   offset_45602)];
            x_33164 = ((__local
                        int32_t *) red_arr_mem_45598)[sext_i32_i64(local_tid_45580 +
                                                      offset_45602)];
            x_33165 = ((__local
                        float *) red_arr_mem_45600)[sext_i32_i64(local_tid_45580 +
                                                    offset_45602)];
        }
    }
    offset_45602 = 1;
    while (slt32(offset_45602, wave_sizze_45582)) {
        if (slt32(local_tid_45580 + offset_45602,
                  sext_i64_i32(iota32_arg_28331)) && ((local_tid_45580 -
                                                       squot32(local_tid_45580,
                                                               wave_sizze_45582) *
                                                       wave_sizze_45582) & (2 *
                                                                            offset_45602 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_33166 = ((volatile __local
                            bool *) red_arr_mem_45596)[sext_i32_i64(local_tid_45580 +
                                                       offset_45602)];
                x_33167 = ((volatile __local
                            int32_t *) red_arr_mem_45598)[sext_i32_i64(local_tid_45580 +
                                                          offset_45602)];
                x_33168 = ((volatile __local
                            float *) red_arr_mem_45600)[sext_i32_i64(local_tid_45580 +
                                                        offset_45602)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33169;
                int32_t defunc_1_op_res_33170;
                
                if (x_33163) {
                    defunc_1_op_res_33169 = x_33163;
                    defunc_1_op_res_33170 = x_33164;
                } else {
                    bool x_33171 = x_33166 && x_33166;
                    bool x_33172 = !x_33166;
                    bool y_33173 = x_33163 && x_33172;
                    bool defunc_1_op_res_f_res_33174 = x_33171 || y_33173;
                    int32_t defunc_1_op_res_f_res_33175;
                    
                    if (x_33166) {
                        defunc_1_op_res_f_res_33175 = x_33167;
                    } else {
                        defunc_1_op_res_f_res_33175 = x_33164;
                    }
                    defunc_1_op_res_33169 = defunc_1_op_res_f_res_33174;
                    defunc_1_op_res_33170 = defunc_1_op_res_f_res_33175;
                }
                
                float defunc_1_op_res_33176 = x_33165 + x_33168;
                
                x_33163 = defunc_1_op_res_33169;
                x_33164 = defunc_1_op_res_33170;
                x_33165 = defunc_1_op_res_33176;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45596)[sext_i32_i64(local_tid_45580)] =
                    x_33163;
                ((volatile __local
                  int32_t *) red_arr_mem_45598)[sext_i32_i64(local_tid_45580)] =
                    x_33164;
                ((volatile __local
                  float *) red_arr_mem_45600)[sext_i32_i64(local_tid_45580)] =
                    x_33165;
            }
        }
        offset_45602 *= 2;
    }
    while (slt32(skip_waves_45603, squot32(sext_i64_i32(iota32_arg_28331) +
                                           wave_sizze_45582 - 1,
                                           wave_sizze_45582))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45602 = skip_waves_45603 * wave_sizze_45582;
        if (slt32(local_tid_45580 + offset_45602,
                  sext_i64_i32(iota32_arg_28331)) && ((local_tid_45580 -
                                                       squot32(local_tid_45580,
                                                               wave_sizze_45582) *
                                                       wave_sizze_45582) == 0 &&
                                                      (squot32(local_tid_45580,
                                                               wave_sizze_45582) &
                                                       (2 * skip_waves_45603 -
                                                        1)) == 0)) {
            // read array element
            {
                x_33166 = ((__local
                            bool *) red_arr_mem_45596)[sext_i32_i64(local_tid_45580 +
                                                       offset_45602)];
                x_33167 = ((__local
                            int32_t *) red_arr_mem_45598)[sext_i32_i64(local_tid_45580 +
                                                          offset_45602)];
                x_33168 = ((__local
                            float *) red_arr_mem_45600)[sext_i32_i64(local_tid_45580 +
                                                        offset_45602)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33169;
                int32_t defunc_1_op_res_33170;
                
                if (x_33163) {
                    defunc_1_op_res_33169 = x_33163;
                    defunc_1_op_res_33170 = x_33164;
                } else {
                    bool x_33171 = x_33166 && x_33166;
                    bool x_33172 = !x_33166;
                    bool y_33173 = x_33163 && x_33172;
                    bool defunc_1_op_res_f_res_33174 = x_33171 || y_33173;
                    int32_t defunc_1_op_res_f_res_33175;
                    
                    if (x_33166) {
                        defunc_1_op_res_f_res_33175 = x_33167;
                    } else {
                        defunc_1_op_res_f_res_33175 = x_33164;
                    }
                    defunc_1_op_res_33169 = defunc_1_op_res_f_res_33174;
                    defunc_1_op_res_33170 = defunc_1_op_res_f_res_33175;
                }
                
                float defunc_1_op_res_33176 = x_33165 + x_33168;
                
                x_33163 = defunc_1_op_res_33169;
                x_33164 = defunc_1_op_res_33170;
                x_33165 = defunc_1_op_res_33176;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45596)[sext_i32_i64(local_tid_45580)] =
                    x_33163;
                ((__local
                  int32_t *) red_arr_mem_45598)[sext_i32_i64(local_tid_45580)] =
                    x_33164;
                ((__local
                  float *) red_arr_mem_45600)[sext_i32_i64(local_tid_45580)] =
                    x_33165;
            }
        }
        skip_waves_45603 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_33159 = ((__local bool *) red_arr_mem_45596)[0];
    acc0_33160 = ((__local int32_t *) red_arr_mem_45598)[0];
    acc0_33161 = ((__local float *) red_arr_mem_45600)[0];
    
    bool x_33192 = acc0_33159 && acc0_33159;
    int32_t defunc_1_op_res_f_res_33196;
    
    if (acc0_33159) {
        defunc_1_op_res_f_res_33196 = acc0_33160;
    } else {
        defunc_1_op_res_f_res_33196 = -1;
    }
    
    bool cond_33203 = y_33126 == 0;
    float defunc_0_f_res_33204;
    
    if (cond_33203) {
        defunc_0_f_res_33204 = 0.0F;
    } else {
        float i32_res_33205 = sitofp_i32_f32(y_33126);
        float defunc_0_f_res_f_res_33206 = acc0_33161 / i32_res_33205;
        
        defunc_0_f_res_33204 = defunc_0_f_res_f_res_33206;
    }
    
    __local char *mem_44290;
    
    mem_44290 = (__local char *) mem_44290_backing_5;
    
    int64_t gtid_32649 = sext_i32_i64(ltid_pre_45584);
    int32_t phys_tid_32650 = local_tid_45580;
    int32_t index_primexp_41433 = sext_i64_i32(gtid_32649);
    bool cond_33209 = slt32(index_primexp_41433, y_33126);
    bool cond_33210;
    
    if (cond_33209) {
        int32_t i_33211 = add32(x_33120, index_primexp_41433);
        int64_t i_33212 = sext_i32_i64(i_33211);
        bool x_33213 = sle64(0, i_33212);
        bool y_33214 = slt64(i_33212, N_27931);
        bool bounds_check_33215 = x_33213 && y_33214;
        bool index_certs_33216;
        
        if (!bounds_check_33215) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 0) == -1) {
                    global_failure_args[0] = i_33212;
                    global_failure_args[1] = N_27931;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_33217 = ((__global
                                  float *) defunc_4_map_res_mem_44174)[gtid_32642 *
                                                                       N_27931 +
                                                                       i_33212];
        bool isnan_res_33218;
        
        isnan_res_33218 = futrts_isnan32(isnan_arg_33217);
        
        bool cond_t_res_33219 = !isnan_res_33218;
        
        cond_33210 = cond_t_res_33219;
    } else {
        cond_33210 = 0;
    }
    
    float defunc_0_f_res_33220;
    
    if (cond_33210) {
        int32_t i_33221 = add32(x_33120, index_primexp_41433);
        int64_t i_33222 = sext_i32_i64(i_33221);
        bool x_33223 = sle64(0, i_33222);
        bool y_33224 = slt64(i_33222, N_27931);
        bool bounds_check_33225 = x_33223 && y_33224;
        bool index_certs_33226;
        
        if (!bounds_check_33225) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 1) == -1) {
                    global_failure_args[0] = i_33222;
                    global_failure_args[1] = N_27931;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_33227 = ((__global
                                             float *) defunc_4_map_res_mem_44174)[gtid_32642 *
                                                                                  N_27931 +
                                                                                  i_33222];
        
        defunc_0_f_res_33220 = defunc_0_f_res_t_res_33227;
    } else {
        defunc_0_f_res_33220 = INFINITY;
    }
    ((__local float *) mem_44290)[gtid_32649] = defunc_0_f_res_33220;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44292;
    
    mem_44292 = (__local char *) mem_44292_backing_6;
    ((__local float *) mem_44292)[sext_i32_i64(local_tid_45580)] = ((__local
                                                                     float *) mem_44290)[sext_i32_i64(local_tid_45580)];
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_33230 = 0; i_33230 < distance_28363; i_33230++) {
        int64_t index_primexp_33232 = add64(1, i_33230);
        bool cond_33233 = slt64(0, index_primexp_33232);
        bool loop_cond_33234;
        
        if (cond_33233) {
            bool x_33235 = sle64(0, index_primexp_33232);
            bool y_33236 = slt64(index_primexp_33232, iota32_arg_28331);
            bool bounds_check_33237 = x_33235 && y_33236;
            bool index_certs_33238;
            
            if (!bounds_check_33237) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                        -1) {
                        global_failure_args[0] = index_primexp_33232;
                        global_failure_args[1] = iota32_arg_28331;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_2_lifted_gt_arg_33239 = ((__local
                                                   float *) mem_44292)[index_primexp_33232];
            bool y_33240 = slt64(i_33230, iota32_arg_28331);
            bool index_certs_33241;
            
            if (!y_33240) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                        -1) {
                        global_failure_args[0] = i_33230;
                        global_failure_args[1] = iota32_arg_28331;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_1_lifted_gt_arg_33242 = ((__local
                                                   float *) mem_44292)[i_33230];
            bool defunc_1_zlze_res_33243 = defunc_1_lifted_gt_arg_33242 <=
                 defunc_2_lifted_gt_arg_33239;
            bool defunc_2_lifted_gt_res_33244 = !defunc_1_zlze_res_33243;
            
            loop_cond_33234 = defunc_2_lifted_gt_res_33244;
        } else {
            loop_cond_33234 = 0;
        }
        
        bool xszq_33245;
        int64_t xszq_33246;
        bool loop_while_33248;
        int64_t j_33249;
        
        loop_while_33248 = loop_cond_33234;
        j_33249 = index_primexp_33232;
        while (loop_while_33248) {
            int64_t loopres_33251 = sub64(j_33249, 1);
            bool x_33252 = sle64(0, j_33249);
            bool y_33253 = slt64(j_33249, iota32_arg_28331);
            bool bounds_check_33254 = x_33252 && y_33253;
            bool index_certs_33255;
            
            if (!bounds_check_33254) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                        -1) {
                        global_failure_args[0] = j_33249;
                        global_failure_args[1] = iota32_arg_28331;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_33256 = ((__local float *) mem_44292)[j_33249];
            bool x_33257 = sle64(0, loopres_33251);
            bool y_33258 = slt64(loopres_33251, iota32_arg_28331);
            bool bounds_check_33259 = x_33257 && y_33258;
            bool index_certs_33260;
            
            if (!bounds_check_33259) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                        -1) {
                        global_failure_args[0] = loopres_33251;
                        global_failure_args[1] = iota32_arg_28331;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_33261 = ((__local float *) mem_44292)[loopres_33251];
            
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_45580 == 0) {
                ((__local float *) mem_44292)[j_33249] = copy_arg_33261;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_45580 == 0) {
                ((__local float *) mem_44292)[loopres_33251] = copy_arg_33256;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            bool cond_33264 = slt64(0, loopres_33251);
            bool loop_cond_33265;
            
            if (cond_33264) {
                bool index_certs_33266;
                
                if (!bounds_check_33259) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 6) ==
                            -1) {
                            global_failure_args[0] = loopres_33251;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_2_lifted_gt_arg_33267 = ((__local
                                                       float *) mem_44292)[loopres_33251];
                int64_t i_33268 = sub64(loopres_33251, 1);
                bool x_33269 = sle64(0, i_33268);
                bool y_33270 = slt64(i_33268, iota32_arg_28331);
                bool bounds_check_33271 = x_33269 && y_33270;
                bool index_certs_33272;
                
                if (!bounds_check_33271) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 7) ==
                            -1) {
                            global_failure_args[0] = i_33268;
                            global_failure_args[1] = iota32_arg_28331;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_1_lifted_gt_arg_33273 = ((__local
                                                       float *) mem_44292)[i_33268];
                bool defunc_1_zlze_res_33274 = defunc_1_lifted_gt_arg_33273 <=
                     defunc_2_lifted_gt_arg_33267;
                bool defunc_2_lifted_gt_res_33275 = !defunc_1_zlze_res_33274;
                
                loop_cond_33265 = defunc_2_lifted_gt_res_33275;
            } else {
                loop_cond_33265 = 0;
            }
            
            bool loop_while_tmp_45605 = loop_cond_33265;
            int64_t j_tmp_45606 = loopres_33251;
            
            loop_while_33248 = loop_while_tmp_45605;
            j_33249 = j_tmp_45606;
        }
        xszq_33245 = loop_while_33248;
        xszq_33246 = j_33249;
    }
    
    int32_t i_33276 = sdiv32(y_33126, 2);
    int32_t j_33277 = sub32(i_33276, 1);
    bool cond_33278 = x_33119 == x_33120;
    float defunc_0_f_res_33279;
    
    if (cond_33278) {
        defunc_0_f_res_33279 = 0.0F;
    } else {
        int32_t x_33280 = smod32(y_33126, 2);
        bool cond_33281 = x_33280 == 0;
        float defunc_0_f_res_f_res_33282;
        
        if (cond_33281) {
            int64_t j_33283 = sext_i32_i64(j_33277);
            bool x_33284 = sle64(0, j_33283);
            bool y_33285 = slt64(j_33283, iota32_arg_28331);
            bool bounds_check_33286 = x_33284 && y_33285;
            bool index_certs_33287;
            
            if (!bounds_check_33286) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                        -1) {
                        global_failure_args[0] = j_33283;
                        global_failure_args[1] = iota32_arg_28331;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float x_33288 = ((__local float *) mem_44292)[j_33283];
            int64_t i_33289 = sext_i32_i64(i_33276);
            bool x_33290 = sle64(0, i_33289);
            bool y_33291 = slt64(i_33289, iota32_arg_28331);
            bool bounds_check_33292 = x_33290 && y_33291;
            bool index_certs_33293;
            
            if (!bounds_check_33292) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                        -1) {
                        global_failure_args[0] = i_33289;
                        global_failure_args[1] = iota32_arg_28331;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float y_33294 = ((__local float *) mem_44292)[i_33289];
            float x_33295 = x_33288 + y_33294;
            float defunc_0_f_res_f_res_t_res_33296 = x_33295 / 2.0F;
            
            defunc_0_f_res_f_res_33282 = defunc_0_f_res_f_res_t_res_33296;
        } else {
            int64_t i_33297 = sext_i32_i64(i_33276);
            bool x_33298 = sle64(0, i_33297);
            bool y_33299 = slt64(i_33297, iota32_arg_28331);
            bool bounds_check_33300 = x_33298 && y_33299;
            bool index_certs_33301;
            
            if (!bounds_check_33300) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                        -1) {
                        global_failure_args[0] = i_33297;
                        global_failure_args[1] = iota32_arg_28331;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_33302 = ((__local
                                                       float *) mem_44292)[i_33297];
            
            defunc_0_f_res_f_res_33282 = defunc_0_f_res_f_res_f_res_33302;
        }
        defunc_0_f_res_33279 = defunc_0_f_res_f_res_33282;
    }
    
    bool cond_33303 = !x_33192;
    int32_t fst_breakzq_33304;
    
    if (cond_33303) {
        fst_breakzq_33304 = -1;
    } else {
        bool cond_33305 = slt32(defunc_1_op_res_f_res_33196, y_33126);
        int32_t adjustValInds_res_33306;
        
        if (cond_33305) {
            int32_t i_33307 = add32(x_33120, defunc_1_op_res_f_res_33196);
            int64_t i_33308 = sext_i32_i64(i_33307);
            int32_t x_33309 = ((__global
                                int32_t *) defunc_4_map_res_mem_44175)[gtid_32642 *
                                                                       N_27931 +
                                                                       i_33308];
            int32_t adjustValInds_res_t_res_33310 = sub32(x_33309, n_27936);
            
            adjustValInds_res_33306 = adjustValInds_res_t_res_33310;
        } else {
            adjustValInds_res_33306 = -1;
        }
        fst_breakzq_33304 = adjustValInds_res_33306;
    }
    
    bool cond_33311 = sle32(x_33120, 5);
    bool cond_f_res_33312 = sle32(y_33126, 5);
    bool x_33313 = !cond_33311;
    bool y_33314 = cond_f_res_33312 && x_33313;
    bool cond_33315 = cond_33311 || y_33314;
    int32_t fst_breakzq_33316;
    
    if (cond_33315) {
        fst_breakzq_33316 = -2;
    } else {
        fst_breakzq_33316 = fst_breakzq_33304;
    }
    
    __local char *mem_44316;
    
    mem_44316 = (__local char *) mem_44316_backing_7;
    ((__local float *) mem_44316)[sext_i32_i64(local_tid_45580)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_32671 = sext_i32_i64(ltid_pre_45584);
    int32_t phys_tid_32672 = local_tid_45580;
    int32_t index_primexp_41436 = sext_i64_i32(write_i_32671);
    float write_value_33320 = ((__local float *) mem_44287)[write_i_32671];
    bool cond_33321 = slt32(index_primexp_41436, y_33126);
    int32_t defunc_0_f_res_33322;
    
    if (cond_33321) {
        int32_t i_33323 = add32(x_33120, index_primexp_41436);
        int64_t i_33324 = sext_i32_i64(i_33323);
        int32_t x_33325 = ((__global
                            int32_t *) defunc_4_map_res_mem_44175)[gtid_32642 *
                                                                   N_27931 +
                                                                   i_33324];
        int32_t defunc_0_f_res_t_res_33326 = sub32(x_33325, n_27936);
        
        defunc_0_f_res_33322 = defunc_0_f_res_t_res_33326;
    } else {
        defunc_0_f_res_33322 = -1;
    }
    
    int64_t defunc_0_f_res_33327 = sext_i32_i64(defunc_0_f_res_33322);
    
    if (sle64(0, defunc_0_f_res_33327) && slt64(defunc_0_f_res_33327,
                                                iota32_arg_28331)) {
        ((__local float *) mem_44316)[defunc_0_f_res_33327] = write_value_33320;
    }
    
  error_4:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44320)[gtid_32642 * iota32_arg_28331 +
                                   sext_i32_i64(local_tid_45580)] = ((__local
                                                                      float *) mem_44316)[sext_i32_i64(local_tid_45580)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44323)[gtid_32642 * iota32_arg_28331 +
                                   sext_i32_i64(local_tid_45580)] = ((__local
                                                                      float *) mem_44287)[sext_i32_i64(local_tid_45580)];
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45580 == 0) {
        ((__global int32_t *) mem_44325)[gtid_32642] = fst_breakzq_33316;
    }
    if (local_tid_45580 == 0) {
        ((__global float *) mem_44327)[gtid_32642] = defunc_0_f_res_33204;
    }
    if (local_tid_45580 == 0) {
        ((__global float *) mem_44329)[gtid_32642] = defunc_0_f_res_33279;
    }
    
  error_5:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41549(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43477_backing_aligned_0,
                                                    int64_t m_27932,
                                                    int32_t n_27936,
                                                    int64_t i32_res_27951,
                                                    int64_t Ty_41537,
                                                    int64_t Tx_41538,
                                                    int64_t gridDim_x_41539,
                                                    int64_t gridDim_y_41540,
                                                    int64_t group_sizze_41544,
                                                    int64_t count_shmem_41545,
                                                    __global
                                                    unsigned char *mem_43390,
                                                    __global
                                                    unsigned char *mem_43394,
                                                    __global
                                                    unsigned char *mem_43465,
                                                    __global
                                                    unsigned char *mem_43525)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43477_backing_0 = (__local volatile
                                                           char *) mem_43477_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44696;
    int32_t local_tid_44697;
    int64_t group_sizze_44700;
    int32_t wave_sizze_44699;
    int32_t group_tid_44698;
    
    global_tid_44696 = get_global_id(0);
    local_tid_44697 = get_local_id(0);
    group_sizze_44700 = get_local_size(0);
    wave_sizze_44699 = LOCKSTEP_WIDTH;
    group_tid_44698 = get_group_id(0);
    
    int32_t gid_flat_41549;
    
    gid_flat_41549 = group_tid_44698;
    
    int32_t ltid_pre_44701;
    
    ltid_pre_44701 = squot32(local_tid_44697, sext_i64_i32(Ty_41537) *
                             sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44702;
    
    ltid_pre_44702 = squot32(local_tid_44697 - squot32(local_tid_44697,
                                                       sext_i64_i32(Ty_41537) *
                                                       sext_i64_i32(Tx_41538)) *
                             (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)),
                             sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44703;
    
    ltid_pre_44703 = local_tid_44697 - squot32(local_tid_44697,
                                               sext_i64_i32(Ty_41537) *
                                               sext_i64_i32(Tx_41538)) *
        (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)) -
        squot32(local_tid_44697 - squot32(local_tid_44697,
                                          sext_i64_i32(Ty_41537) *
                                          sext_i64_i32(Tx_41538)) *
                (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)),
                sext_i64_i32(Tx_41538)) * sext_i64_i32(Tx_41538);
    
    int32_t ltid_pre_44704;
    
    ltid_pre_44704 = squot32(local_tid_44697, sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44705;
    
    ltid_pre_44705 = local_tid_44697 - squot32(local_tid_44697,
                                               sext_i64_i32(Tx_41538)) *
        sext_i64_i32(Tx_41538);
    
    int32_t ltid_pre_44706;
    
    ltid_pre_44706 = local_tid_44697;
    
    int64_t gid_zz_41548;
    
    gid_zz_41548 = squot64(sext_i32_i64(group_tid_44698), gridDim_y_41540 *
                           gridDim_x_41539);
    
    int64_t gid_y_41547;
    
    gid_y_41547 = squot64(sext_i32_i64(group_tid_44698) -
                          squot64(sext_i32_i64(group_tid_44698),
                                  gridDim_y_41540 * gridDim_x_41539) *
                          (gridDim_y_41540 * gridDim_x_41539), gridDim_x_41539);
    
    int64_t gid_x_41546;
    
    gid_x_41546 = sext_i32_i64(group_tid_44698) -
        squot64(sext_i32_i64(group_tid_44698), gridDim_y_41540 *
                gridDim_x_41539) * (gridDim_y_41540 * gridDim_x_41539) -
        squot64(sext_i32_i64(group_tid_44698) -
                squot64(sext_i32_i64(group_tid_44698), gridDim_y_41540 *
                        gridDim_x_41539) * (gridDim_y_41540 * gridDim_x_41539),
                gridDim_x_41539) * gridDim_x_41539;
    
    int64_t ii_41550;
    
    ii_41550 = 30 * gid_zz_41548;
    
    int64_t jj1_41551 = Ty_41537 * gid_y_41547;
    int64_t jj2_41552 = Tx_41538 * gid_x_41546;
    float mem_43475[30];
    int64_t ltid_y_41555 = sext_i32_i64(ltid_pre_44704);
    int64_t ltid_x_41553 = sext_i32_i64(ltid_pre_44705);
    int32_t ltid_flat_41554 = local_tid_44697;
    float mem_43469[30];
    
    for (int32_t i_43288 = 0; i_43288 < 30; i_43288++) {
        int64_t i_41563 = sext_i32_i64(i_43288);
        
        mem_43469[i_41563] = 0.0F;
    }
    for (int64_t i_44708 = 0; i_44708 < 30; i_44708++) {
        mem_43475[i_44708] = mem_43469[i_44708];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43477;
    
    mem_43477 = (__local char *) mem_43477_backing_0;
    
    float loop_mem_43507[30];
    float mem_param_43478[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43478[i_1] = mem_43475[i_1];
    for (int32_t i_43290 = 0; i_43290 < n_27936; i_43290++) {
        int64_t i_41568 = sext_i32_i64(i_43290);
        
        for (int64_t i_41571 = 0; i_41571 < count_shmem_41545; i_41571++) {
            int64_t offs_41584 = group_sizze_41544 * i_41571;
            int64_t ltid_41574 = sext_i32_i64(ltid_pre_44706);
            int32_t ltid_flat_41573 = local_tid_44697;
            int64_t loc_ind_41585 = ltid_41574 + offs_41584;
            int64_t gtid_41586 = ii_41550 + loc_ind_41585;
            bool cond_41587 = slt64(gtid_41586, m_27932);
            float y_elem_41588;
            
            if (cond_41587) {
                float Y_elem_41590 = ((__global float *) mem_43465)[i_41568 *
                                                                    m_27932 +
                                                                    gtid_41586];
                
                y_elem_41588 = Y_elem_41590;
            } else {
                y_elem_41588 = 0.0F;
            }
            
            bool cond_41592 = slt64(loc_ind_41585, 30);
            int64_t y_loc_ind_41593;
            
            if (cond_41592) {
                y_loc_ind_41593 = loc_ind_41585;
            } else {
                y_loc_ind_41593 = -1;
            }
            if (sle64(0, y_loc_ind_41593) && slt64(y_loc_ind_41593, 30)) {
                ((__local float *) mem_43477)[y_loc_ind_41593] = y_elem_41588;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43506[30];
        int64_t ltid_y_41599 = sext_i32_i64(ltid_pre_44704);
        int64_t ltid_x_41597 = sext_i32_i64(ltid_pre_44705);
        int32_t ltid_flat_41598 = local_tid_44697;
        int64_t gtid_41626 = jj1_41551 + ltid_y_41599;
        int64_t gtid_41627 = jj2_41552 + ltid_x_41597;
        bool binop_x_41629 = slt64(gtid_41626, i32_res_27951);
        bool binop_y_41630 = slt64(gtid_41627, i32_res_27951);
        bool cond_41631 = binop_x_41629 && binop_y_41630;
        float mem_44406[30];
        
        if (cond_41631) {
            float x_41634 = ((__global float *) mem_43390)[i_41568 *
                                                           i32_res_27951 +
                                                           gtid_41626];
            float x_41636 = ((__global float *) mem_43394)[i_41568 *
                                                           i32_res_27951 +
                                                           gtid_41627];
            
            for (int32_t i_43289 = 0; i_43289 < 30; i_43289++) {
                int64_t i_41638 = sext_i32_i64(i_43289);
                int64_t gtid_41640 = ii_41550 + i_41638;
                bool cond_41641 = slt64(gtid_41640, m_27932);
                
                if (cond_41641) {
                    float inp_reg_var2zz_41643 = ((__local
                                                   float *) mem_43477)[i_41638];
                    float res_reg_var2zz_41644 = mem_param_43478[i_41638];
                    float x_41648 = x_41634 * x_41636;
                    bool isnan_res_41649;
                    
                    isnan_res_41649 = futrts_isnan32(inp_reg_var2zz_41643);
                    
                    float y_41650;
                    
                    if (isnan_res_41649) {
                        y_41650 = 0.0F;
                    } else {
                        y_41650 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41651 = x_41648 * y_41650;
                    float defunc_1_op_res_41655 = res_reg_var2zz_41644 +
                          defunc_2_f_res_41651;
                    
                    mem_param_43478[i_41638] = defunc_1_op_res_41655;
                }
            }
            for (int64_t i_44714 = 0; i_44714 < 30; i_44714++) {
                mem_44406[i_44714] = mem_param_43478[i_44714];
            }
        } else {
            for (int64_t i_44715 = 0; i_44715 < 30; i_44715++) {
                mem_44406[i_44715] = mem_param_43478[i_44715];
            }
        }
        for (int64_t i_44716 = 0; i_44716 < 30; i_44716++) {
            mem_43506[i_44716] = mem_44406[i_44716];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44709[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44709[i_2] = mem_43506[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43478[i_3] = mem_param_tmp_44709[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43507[i_4] = mem_param_43478[i_4];
    
    float mem_43521[30 * 1 * 1];
    int64_t ltid_zz_41664 = sext_i32_i64(ltid_pre_44701);
    int64_t ltid_y_41663 = sext_i32_i64(ltid_pre_44702);
    int64_t ltid_x_41661 = sext_i32_i64(ltid_pre_44703);
    int32_t ltid_flat_41662 = local_tid_44697;
    float mem_43515[30 * 1 * 1];
    
    for (int32_t i_43292 = 0; i_43292 < 30; i_43292++) {
        int64_t i_41673 = sext_i32_i64(i_43292);
        
        for (int64_t i_44718 = 0; i_44718 < 1; i_44718++) {
            mem_43515[i_41673 + i_44718] = loop_mem_43507[i_41673 + i_44718];
        }
    }
    for (int64_t i_44719 = 0; i_44719 < 30; i_44719++) {
        for (int64_t i_44720 = 0; i_44720 < 1; i_44720++) {
            for (int64_t i_44721 = 0; i_44721 < 1; i_44721++) {
                mem_43521[i_44719 + i_44720 + i_44721] = mem_43515[i_44719 +
                                                                   i_44720 +
                                                                   i_44721];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44722 = squot64(sext_i32_i64(local_tid_44697), Ty_41537 *
                                       Tx_41538);
    int64_t reg_tile_i_44723 = squot64(sext_i32_i64(local_tid_44697) -
                                       squot64(sext_i32_i64(local_tid_44697),
                                               Ty_41537 * Tx_41538) *
                                       (Ty_41537 * Tx_41538), Tx_41538);
    int64_t reg_tile_i_44724 = sext_i32_i64(local_tid_44697) -
            squot64(sext_i32_i64(local_tid_44697), Ty_41537 * Tx_41538) *
            (Ty_41537 * Tx_41538) - squot64(sext_i32_i64(local_tid_44697) -
                                            squot64(sext_i32_i64(local_tid_44697),
                                                    Ty_41537 * Tx_41538) *
                                            (Ty_41537 * Tx_41538), Tx_41538) *
            Tx_41538;
    int64_t tile_dim_start_44725 = 30 * (gid_zz_41548 + reg_tile_i_44722);
    int64_t tile_dim_start_44726 = Ty_41537 * gid_y_41547 + reg_tile_i_44723;
    int64_t tile_dim_start_44727 = Tx_41538 * gid_x_41546 + reg_tile_i_44724;
    
    for (int64_t nest_i_44728 = 0; nest_i_44728 < 30; nest_i_44728++) {
        for (int64_t nest_i_44729 = 0; nest_i_44729 < 1; nest_i_44729++) {
            for (int64_t nest_i_44730 = 0; nest_i_44730 < 1; nest_i_44730++) {
                if ((slt64(tile_dim_start_44725 + nest_i_44728, m_27932) &&
                     slt64(tile_dim_start_44726 + nest_i_44729,
                           i32_res_27951)) && slt64(tile_dim_start_44727 +
                                                    nest_i_44730,
                                                    i32_res_27951)) {
                    ((__global float *) mem_43525)[(tile_dim_start_44725 +
                                                    nest_i_44728) *
                                                   (i32_res_27951 *
                                                    i32_res_27951) +
                                                   (tile_dim_start_44726 +
                                                    nest_i_44729) *
                                                   i32_res_27951 +
                                                   (tile_dim_start_44727 +
                                                    nest_i_44730)] =
                        mem_43521[nest_i_44728 + nest_i_44729 + nest_i_44730];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41702(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43664_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43662_backing_aligned_1,
                                                    int64_t m_27932,
                                                    int64_t N_27933,
                                                    int64_t i32_res_27945,
                                                    int64_t i32_res_27951,
                                                    int64_t gridDim_x_41696,
                                                    int64_t full_tiles_41727,
                                                    int64_t kk_41934, __global
                                                    unsigned char *images_mem_43378,
                                                    __global
                                                    unsigned char *mem_43390,
                                                    __global
                                                    unsigned char *mem_43836)
{
    #define Ty_41683 (mainDetailedziTy_41680)
    #define Ry_41684 (mainDetailedziRy_41682)
    #define Tx_41685 (mainDetailedziTx_41679)
    #define Rx_41686 (mainDetailedziRx_41681)
    #define Tk_41687 (mainDetailedziTk_41678)
    #define tk_div_tx_41688 (sdiv_up64(mainDetailedziTk_41678, mainDetailedziTx_41679))
    #define tk_div_ty_41689 (sdiv_up64(mainDetailedziTk_41678, mainDetailedziTy_41680))
    #define TxRx_41690 (mainDetailedziTx_41679 * mainDetailedziRx_41681)
    #define TyRy_41691 (mainDetailedziTy_41680 * mainDetailedziRy_41682)
    #define a_loc_szz_41693 (mainDetailedziTk_41678 * (mainDetailedziTy_41680 * mainDetailedziRy_41682))
    #define b_loc_szz_41695 (mainDetailedziRx_41681 * (mainDetailedziTx_41679 * mainDetailedziTk_41678))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43664_backing_1 = (__local volatile
                                                           char *) mem_43664_backing_aligned_0;
    __local volatile char *restrict mem_43662_backing_0 = (__local volatile
                                                           char *) mem_43662_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44870;
    int32_t local_tid_44871;
    int64_t group_sizze_44874;
    int32_t wave_sizze_44873;
    int32_t group_tid_44872;
    
    global_tid_44870 = get_global_id(0);
    local_tid_44871 = get_local_id(0);
    group_sizze_44874 = get_local_size(0);
    wave_sizze_44873 = LOCKSTEP_WIDTH;
    group_tid_44872 = get_group_id(0);
    
    int32_t gid_flat_41702;
    
    gid_flat_41702 = group_tid_44872;
    
    int32_t ltid_pre_44875;
    
    ltid_pre_44875 = squot32(local_tid_44871, sext_i64_i32(Tx_41685));
    
    int32_t ltid_pre_44876;
    
    ltid_pre_44876 = local_tid_44871 - squot32(local_tid_44871,
                                               sext_i64_i32(Tx_41685)) *
        sext_i64_i32(Tx_41685);
    
    int64_t gid_y_41701;
    
    gid_y_41701 = squot64(sext_i32_i64(group_tid_44872), gridDim_x_41696);
    
    int64_t gid_x_41700;
    
    gid_x_41700 = sext_i32_i64(group_tid_44872) -
        squot64(sext_i32_i64(group_tid_44872), gridDim_x_41696) *
        gridDim_x_41696;
    
    int64_t iii_41703;
    
    iii_41703 = TyRy_41691 * gid_y_41701;
    
    int64_t jjj_41704 = TxRx_41690 * gid_x_41700;
    float mem_43660[Ry_41684 * Rx_41686];
    int64_t ltid_y_41707 = sext_i32_i64(ltid_pre_44875);
    int64_t ltid_x_41705 = sext_i32_i64(ltid_pre_44876);
    int32_t ltid_flat_41706 = local_tid_44871;
    float mem_43651[Ry_41684 * Rx_41686];
    
    for (int64_t i_41718 = 0; i_41718 < Ry_41684; i_41718++) {
        for (int64_t i_41721 = 0; i_41721 < Rx_41686; i_41721++) {
            mem_43651[i_41718 * Rx_41686 + i_41721] = 0.0F;
        }
    }
    for (int64_t i_44879 = 0; i_44879 < Ry_41684; i_44879++) {
        for (int64_t i_44880 = 0; i_44880 < Rx_41686; i_44880++) {
            mem_43660[i_44879 * Rx_41686 + i_44880] = mem_43651[i_44879 *
                                                                Rx_41686 +
                                                                i_44880];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43662;
    
    mem_43662 = (__local char *) mem_43662_backing_0;
    
    __local char *mem_43664;
    
    mem_43664 = (__local char *) mem_43664_backing_1;
    
    float mem_43735[Ry_41684];
    float mem_43739[Rx_41686];
    float loop_mem_43751[Ry_41684 * Rx_41686];
    float mem_param_43665[Ry_41684 * Rx_41686];
    
    for (int32_t i_2 = 0; i_2 < Ry_41684 * Rx_41686; i_2++)
        mem_param_43665[i_2] = mem_43660[i_2];
    for (int64_t i_41728 = 0; i_41728 < full_tiles_41727; i_41728++) {
        int64_t kk_41732 = Tk_41687 * i_41728;
        
        for (int64_t i_41733 = 0; i_41733 < Ry_41684; i_41733++) {
            int64_t binop_y_41756 = Ty_41683 * i_41733;
            
            for (int64_t i_41735 = 0; i_41735 < tk_div_tx_41688; i_41735++) {
                int64_t binop_y_41754 = Tx_41685 * i_41735;
                int64_t ltid_x_41737 = sext_i32_i64(ltid_pre_44875);
                int64_t ltid_y_41738 = sext_i32_i64(ltid_pre_44876);
                int32_t ltid_flat_41739 = local_tid_44871;
                int64_t k_41755 = ltid_y_41738 + binop_y_41754;
                int64_t i_41757 = ltid_x_41737 + binop_y_41756;
                int64_t gtid_41758 = iii_41703 + i_41757;
                int64_t A_col_idx_41759 = kk_41732 + k_41755;
                bool cond_41760 = slt64(gtid_41758, m_27932);
                float A_elem_41761;
                
                if (cond_41760) {
                    float A_elem_41763 = ((__global
                                           float *) images_mem_43378)[gtid_41758 *
                                                                      N_27933 +
                                                                      A_col_idx_41759];
                    
                    A_elem_41761 = A_elem_41763;
                } else {
                    A_elem_41761 = 0.0F;
                }
                
                bool cond_41765 = slt64(k_41755, Tk_41687);
                int64_t a_loc_ind_41766;
                
                if (cond_41765) {
                    int64_t binop_y_41767 = Tk_41687 * i_41757;
                    int64_t loc_fi_41768 = k_41755 + binop_y_41767;
                    
                    a_loc_ind_41766 = loc_fi_41768;
                } else {
                    a_loc_ind_41766 = -1;
                }
                if (sle64(0, a_loc_ind_41766) && slt64(a_loc_ind_41766,
                                                       a_loc_szz_41693)) {
                    ((__local float *) mem_43662)[a_loc_ind_41766] =
                        A_elem_41761;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41773 = 0; i_41773 < tk_div_ty_41689; i_41773++) {
            int64_t binop_y_41794 = Ty_41683 * i_41773;
            
            for (int64_t i_41775 = 0; i_41775 < Rx_41686; i_41775++) {
                int64_t binop_y_41796 = Tx_41685 * i_41775;
                int64_t ltid_x_41777 = sext_i32_i64(ltid_pre_44875);
                int64_t ltid_y_41778 = sext_i32_i64(ltid_pre_44876);
                int32_t ltid_flat_41779 = local_tid_44871;
                int64_t k_41795 = ltid_x_41777 + binop_y_41794;
                int64_t j_41797 = ltid_y_41778 + binop_y_41796;
                int64_t gtid_41798 = jjj_41704 + j_41797;
                int64_t B_row_idx_41799 = kk_41732 + k_41795;
                bool cond_41800 = slt64(gtid_41798, i32_res_27951);
                float B_elem_41801;
                
                if (cond_41800) {
                    float B_elem_41803 = ((__global
                                           float *) mem_43390)[B_row_idx_41799 *
                                                               i32_res_27951 +
                                                               gtid_41798];
                    
                    B_elem_41801 = B_elem_41803;
                } else {
                    B_elem_41801 = 0.0F;
                }
                
                bool cond_41805 = slt64(k_41795, Tk_41687);
                int64_t b_loc_ind_41806;
                
                if (cond_41805) {
                    int64_t binop_y_41807 = TxRx_41690 * k_41795;
                    int64_t loc_fi_41808 = j_41797 + binop_y_41807;
                    
                    b_loc_ind_41806 = loc_fi_41808;
                } else {
                    b_loc_ind_41806 = -1;
                }
                if (sle64(0, b_loc_ind_41806) && slt64(b_loc_ind_41806,
                                                       b_loc_szz_41695)) {
                    ((__local float *) mem_43664)[b_loc_ind_41806] =
                        B_elem_41801;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43750[Ry_41684 * Rx_41686];
        float mem_param_43722[Ry_41684 * Rx_41686];
        
        for (int32_t i_3 = 0; i_3 < Ry_41684 * Rx_41686; i_3++)
            mem_param_43722[i_3] = mem_param_43665[i_3];
        for (int64_t i_41813 = 0; i_41813 < Tk_41687; i_41813++) {
            int64_t binop_y_41852 = TxRx_41690 * i_41813;
            int64_t ltid_y_41817 = sext_i32_i64(ltid_pre_44875);
            int64_t ltid_x_41815 = sext_i32_i64(ltid_pre_44876);
            int32_t ltid_flat_41816 = local_tid_44871;
            float mem_43725[Ry_41684];
            float mem_43727[Rx_41686];
            int64_t binop_x_41843 = Ry_41684 * ltid_y_41817;
            
            for (int64_t i_41841 = 0; i_41841 < Ry_41684; i_41841++) {
                int64_t binop_x_41844 = i_41841 + binop_x_41843;
                int64_t binop_y_41845 = Tk_41687 * binop_x_41844;
                int64_t a_loc_ind_41846 = i_41813 + binop_y_41845;
                
                for (int64_t i_44892 = 0; i_44892 < 1; i_44892++) {
                    mem_43725[i_41841 + i_44892] = ((__local
                                                     float *) mem_43662)[a_loc_ind_41846 +
                                                                         i_44892];
                }
            }
            
            int64_t binop_y_41854 = Rx_41686 * ltid_x_41815;
            
            for (int64_t i_41850 = 0; i_41850 < Rx_41686; i_41850++) {
                int64_t binop_x_41853 = i_41850 + binop_y_41852;
                int64_t b_loc_ind_41855 = binop_x_41853 + binop_y_41854;
                
                for (int64_t i_44894 = 0; i_44894 < 1; i_44894++) {
                    mem_43727[i_41850 + i_44894] = ((__local
                                                     float *) mem_43664)[b_loc_ind_41855 +
                                                                         i_44894];
                }
            }
            for (int64_t i_44895 = 0; i_44895 < Ry_41684; i_44895++) {
                mem_43735[i_44895] = mem_43725[i_44895];
            }
            for (int64_t i_44896 = 0; i_44896 < Rx_41686; i_44896++) {
                mem_43739[i_44896] = mem_43727[i_44896];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43749[Ry_41684 * Rx_41686];
            int64_t ltid_y_41862 = sext_i32_i64(ltid_pre_44875);
            int64_t ltid_x_41860 = sext_i32_i64(ltid_pre_44876);
            int32_t ltid_flat_41861 = local_tid_44871;
            int64_t binop_y_41905 = Ry_41684 * ltid_y_41862;
            int64_t binop_y_41909 = Rx_41686 * ltid_x_41860;
            
            for (int64_t i_41899 = 0; i_41899 < Ry_41684; i_41899++) {
                int64_t binop_x_41904 = iii_41703 + i_41899;
                int64_t cmpop_x_41906 = binop_x_41904 + binop_y_41905;
                bool binop_x_41907 = slt64(cmpop_x_41906, m_27932);
                
                for (int64_t i_41902 = 0; i_41902 < Rx_41686; i_41902++) {
                    int64_t binop_x_41908 = jjj_41704 + i_41902;
                    int64_t cmpop_x_41910 = binop_x_41908 + binop_y_41909;
                    bool binop_y_41911 = slt64(cmpop_x_41910, i32_res_27951);
                    bool cond_41912 = binop_x_41907 && binop_y_41911;
                    
                    if (cond_41912) {
                        float a_41914 = mem_43735[i_41899];
                        float c_41916 = mem_param_43722[i_41899 * Rx_41686 +
                                                        i_41902];
                        bool isnan_res_41919;
                        
                        isnan_res_41919 = futrts_isnan32(a_41914);
                        
                        float defunc_1_f_res_41920;
                        
                        if (isnan_res_41919) {
                            defunc_1_f_res_41920 = 0.0F;
                        } else {
                            float b_41915 = mem_43739[i_41902];
                            float defunc_1_f_res_f_res_41921 = a_41914 *
                                  b_41915;
                            
                            defunc_1_f_res_41920 = defunc_1_f_res_f_res_41921;
                        }
                        
                        float defunc_1_op_res_41925 = c_41916 +
                              defunc_1_f_res_41920;
                        
                        mem_param_43722[i_41899 * Rx_41686 + i_41902] =
                            defunc_1_op_res_41925;
                    }
                }
            }
            for (int64_t i_44899 = 0; i_44899 < Ry_41684; i_44899++) {
                for (int64_t i_44900 = 0; i_44900 < Rx_41686; i_44900++) {
                    mem_43749[i_44899 * Rx_41686 + i_44900] =
                        mem_param_43722[i_44899 * Rx_41686 + i_44900];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44889[Ry_41684 * Rx_41686];
            
            for (int32_t i_4 = 0; i_4 < Ry_41684 * Rx_41686; i_4++)
                mem_param_tmp_44889[i_4] = mem_43749[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41684 * Rx_41686; i_5++)
                mem_param_43722[i_5] = mem_param_tmp_44889[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41684 * Rx_41686; i_6++)
            loop_mem_43750[i_6] = mem_param_43722[i_6];
        
        float mem_param_tmp_44881[Ry_41684 * Rx_41686];
        
        for (int32_t i_7 = 0; i_7 < Ry_41684 * Rx_41686; i_7++)
            mem_param_tmp_44881[i_7] = loop_mem_43750[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41684 * Rx_41686; i_8++)
            mem_param_43665[i_8] = mem_param_tmp_44881[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41684 * Rx_41686; i_9++)
        loop_mem_43751[i_9] = mem_param_43665[i_9];
    for (int64_t i_41935 = 0; i_41935 < Ry_41684; i_41935++) {
        int64_t binop_y_41960 = Ty_41683 * i_41935;
        
        for (int64_t i_41937 = 0; i_41937 < tk_div_tx_41688; i_41937++) {
            int64_t binop_y_41958 = Tx_41685 * i_41937;
            int64_t ltid_x_41939 = sext_i32_i64(ltid_pre_44875);
            int64_t ltid_y_41940 = sext_i32_i64(ltid_pre_44876);
            int32_t ltid_flat_41941 = local_tid_44871;
            int64_t k_41959 = ltid_y_41940 + binop_y_41958;
            int64_t i_41961 = ltid_x_41939 + binop_y_41960;
            int64_t gtid_41962 = iii_41703 + i_41961;
            int64_t A_col_idx_41963 = kk_41934 + k_41959;
            bool binop_x_41964 = slt64(gtid_41962, m_27932);
            bool binop_y_41965 = slt64(A_col_idx_41963, i32_res_27945);
            bool cond_41966 = binop_x_41964 && binop_y_41965;
            float A_elem_41967;
            
            if (cond_41966) {
                float A_elem_41969 = ((__global
                                       float *) images_mem_43378)[gtid_41962 *
                                                                  N_27933 +
                                                                  A_col_idx_41963];
                
                A_elem_41967 = A_elem_41969;
            } else {
                A_elem_41967 = 0.0F;
            }
            
            bool cond_41971 = slt64(k_41959, Tk_41687);
            int64_t a_loc_ind_41972;
            
            if (cond_41971) {
                int64_t binop_y_41973 = Tk_41687 * i_41961;
                int64_t loc_fi_41974 = k_41959 + binop_y_41973;
                
                a_loc_ind_41972 = loc_fi_41974;
            } else {
                a_loc_ind_41972 = -1;
            }
            if (sle64(0, a_loc_ind_41972) && slt64(a_loc_ind_41972,
                                                   a_loc_szz_41693)) {
                ((__local float *) mem_43662)[a_loc_ind_41972] = A_elem_41967;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41979 = 0; i_41979 < tk_div_ty_41689; i_41979++) {
        int64_t binop_y_42002 = Ty_41683 * i_41979;
        
        for (int64_t i_41981 = 0; i_41981 < Rx_41686; i_41981++) {
            int64_t binop_y_42004 = Tx_41685 * i_41981;
            int64_t ltid_x_41983 = sext_i32_i64(ltid_pre_44875);
            int64_t ltid_y_41984 = sext_i32_i64(ltid_pre_44876);
            int32_t ltid_flat_41985 = local_tid_44871;
            int64_t k_42003 = ltid_x_41983 + binop_y_42002;
            int64_t j_42005 = ltid_y_41984 + binop_y_42004;
            int64_t gtid_42006 = jjj_41704 + j_42005;
            int64_t B_row_idx_42007 = kk_41934 + k_42003;
            bool binop_x_42008 = slt64(gtid_42006, i32_res_27951);
            bool binop_y_42009 = slt64(B_row_idx_42007, i32_res_27945);
            bool cond_42010 = binop_x_42008 && binop_y_42009;
            float B_elem_42011;
            
            if (cond_42010) {
                float B_elem_42013 = ((__global
                                       float *) mem_43390)[B_row_idx_42007 *
                                                           i32_res_27951 +
                                                           gtid_42006];
                
                B_elem_42011 = B_elem_42013;
            } else {
                B_elem_42011 = 0.0F;
            }
            
            bool cond_42015 = slt64(k_42003, Tk_41687);
            int64_t b_loc_ind_42016;
            
            if (cond_42015) {
                int64_t binop_y_42017 = TxRx_41690 * k_42003;
                int64_t loc_fi_42018 = j_42005 + binop_y_42017;
                
                b_loc_ind_42016 = loc_fi_42018;
            } else {
                b_loc_ind_42016 = -1;
            }
            if (sle64(0, b_loc_ind_42016) && slt64(b_loc_ind_42016,
                                                   b_loc_szz_41695)) {
                ((__local float *) mem_43664)[b_loc_ind_42016] = B_elem_42011;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43817[Ry_41684];
    float mem_43821[Rx_41686];
    float mem_43831[Ry_41684 * Rx_41686];
    float loop_mem_43833[Ry_41684 * Rx_41686];
    float mem_param_43804[Ry_41684 * Rx_41686];
    
    for (int32_t i_10 = 0; i_10 < Ry_41684 * Rx_41686; i_10++)
        mem_param_43804[i_10] = loop_mem_43751[i_10];
    for (int64_t i_42023 = 0; i_42023 < Tk_41687; i_42023++) {
        int64_t cmpop_x_42025 = kk_41934 + i_42023;
        bool cond_42026 = slt64(cmpop_x_42025, i32_res_27945);
        float mem_44424[Ry_41684 * Rx_41686];
        
        if (cond_42026) {
            int64_t binop_y_42064 = TxRx_41690 * i_42023;
            int64_t bytes_43806 = 4 * Ry_41684;
            int64_t bytes_43808 = 4 * Rx_41686;
            int64_t ltid_y_42029 = sext_i32_i64(ltid_pre_44875);
            int64_t ltid_x_42027 = sext_i32_i64(ltid_pre_44876);
            int32_t ltid_flat_42028 = local_tid_44871;
            float mem_43807[Ry_41684];
            float mem_43809[Rx_41686];
            int64_t binop_x_42055 = Ry_41684 * ltid_y_42029;
            
            for (int64_t i_42053 = 0; i_42053 < Ry_41684; i_42053++) {
                int64_t binop_x_42056 = i_42053 + binop_x_42055;
                int64_t binop_y_42057 = Tk_41687 * binop_x_42056;
                int64_t a_loc_ind_42058 = i_42023 + binop_y_42057;
                
                for (int64_t i_44908 = 0; i_44908 < 1; i_44908++) {
                    mem_43807[i_42053 + i_44908] = ((__local
                                                     float *) mem_43662)[a_loc_ind_42058 +
                                                                         i_44908];
                }
            }
            
            int64_t binop_y_42066 = Rx_41686 * ltid_x_42027;
            
            for (int64_t i_42062 = 0; i_42062 < Rx_41686; i_42062++) {
                int64_t binop_x_42065 = i_42062 + binop_y_42064;
                int64_t b_loc_ind_42067 = binop_x_42065 + binop_y_42066;
                
                for (int64_t i_44910 = 0; i_44910 < 1; i_44910++) {
                    mem_43809[i_42062 + i_44910] = ((__local
                                                     float *) mem_43664)[b_loc_ind_42067 +
                                                                         i_44910];
                }
            }
            for (int64_t i_44911 = 0; i_44911 < Ry_41684; i_44911++) {
                mem_43817[i_44911] = mem_43807[i_44911];
            }
            for (int64_t i_44912 = 0; i_44912 < Rx_41686; i_44912++) {
                mem_43821[i_44912] = mem_43809[i_44912];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42074 = sext_i32_i64(ltid_pre_44875);
            int64_t ltid_x_42072 = sext_i32_i64(ltid_pre_44876);
            int32_t ltid_flat_42073 = local_tid_44871;
            int64_t binop_y_42117 = Ry_41684 * ltid_y_42074;
            int64_t binop_y_42121 = Rx_41686 * ltid_x_42072;
            
            for (int64_t i_42111 = 0; i_42111 < Ry_41684; i_42111++) {
                int64_t binop_x_42116 = iii_41703 + i_42111;
                int64_t cmpop_x_42118 = binop_x_42116 + binop_y_42117;
                bool binop_x_42119 = slt64(cmpop_x_42118, m_27932);
                
                for (int64_t i_42114 = 0; i_42114 < Rx_41686; i_42114++) {
                    int64_t binop_x_42120 = jjj_41704 + i_42114;
                    int64_t cmpop_x_42122 = binop_x_42120 + binop_y_42121;
                    bool binop_y_42123 = slt64(cmpop_x_42122, i32_res_27951);
                    bool cond_42124 = binop_x_42119 && binop_y_42123;
                    
                    if (cond_42124) {
                        float a_42126 = mem_43817[i_42111];
                        float c_42128 = mem_param_43804[i_42111 * Rx_41686 +
                                                        i_42114];
                        bool isnan_res_42131;
                        
                        isnan_res_42131 = futrts_isnan32(a_42126);
                        
                        float defunc_1_f_res_42132;
                        
                        if (isnan_res_42131) {
                            defunc_1_f_res_42132 = 0.0F;
                        } else {
                            float b_42127 = mem_43821[i_42114];
                            float defunc_1_f_res_f_res_42133 = a_42126 *
                                  b_42127;
                            
                            defunc_1_f_res_42132 = defunc_1_f_res_f_res_42133;
                        }
                        
                        float defunc_1_op_res_42137 = c_42128 +
                              defunc_1_f_res_42132;
                        
                        mem_param_43804[i_42111 * Rx_41686 + i_42114] =
                            defunc_1_op_res_42137;
                    }
                }
            }
            for (int64_t i_44915 = 0; i_44915 < Ry_41684; i_44915++) {
                for (int64_t i_44916 = 0; i_44916 < Rx_41686; i_44916++) {
                    mem_43831[i_44915 * Rx_41686 + i_44916] =
                        mem_param_43804[i_44915 * Rx_41686 + i_44916];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44917 = 0; i_44917 < Ry_41684; i_44917++) {
                for (int64_t i_44918 = 0; i_44918 < Rx_41686; i_44918++) {
                    mem_44424[i_44917 * Rx_41686 + i_44918] =
                        mem_43831[i_44917 * Rx_41686 + i_44918];
                }
            }
        } else {
            for (int64_t i_44919 = 0; i_44919 < Ry_41684; i_44919++) {
                for (int64_t i_44920 = 0; i_44920 < Rx_41686; i_44920++) {
                    mem_44424[i_44919 * Rx_41686 + i_44920] =
                        mem_param_43804[i_44919 * Rx_41686 + i_44920];
                }
            }
        }
        
        float mem_param_tmp_44905[Ry_41684 * Rx_41686];
        
        for (int32_t i_11 = 0; i_11 < Ry_41684 * Rx_41686; i_11++)
            mem_param_tmp_44905[i_11] = mem_44424[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41684 * Rx_41686; i_12++)
            mem_param_43804[i_12] = mem_param_tmp_44905[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41684 * Rx_41686; i_13++)
        loop_mem_43833[i_13] = mem_param_43804[i_13];
    
    int64_t reg_tile_i_44921 = squot64(sext_i32_i64(local_tid_44871), Tx_41685);
    int64_t reg_tile_i_44922 = sext_i32_i64(local_tid_44871) -
            squot64(sext_i32_i64(local_tid_44871), Tx_41685) * Tx_41685;
    int64_t tile_dim_start_44923 = Ry_41684 * (Ty_41683 * gid_y_41701 +
                                               reg_tile_i_44921);
    int64_t tile_dim_start_44924 = Rx_41686 * (Tx_41685 * gid_x_41700 +
                                               reg_tile_i_44922);
    
    for (int64_t nest_i_44925 = 0; nest_i_44925 < Ry_41684; nest_i_44925++) {
        for (int64_t nest_i_44926 = 0; nest_i_44926 < Rx_41686;
             nest_i_44926++) {
            if (slt64(tile_dim_start_44923 + nest_i_44925, m_27932) &&
                slt64(tile_dim_start_44924 + nest_i_44926, i32_res_27951)) {
                ((__global float *) mem_43836)[(tile_dim_start_44923 +
                                                nest_i_44925) * i32_res_27951 +
                                               (tile_dim_start_44924 +
                                                nest_i_44926)] =
                    loop_mem_43833[nest_i_44925 * Rx_41686 + nest_i_44926];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41683
    #undef Ry_41684
    #undef Tx_41685
    #undef Rx_41686
    #undef Tk_41687
    #undef tk_div_tx_41688
    #undef tk_div_ty_41689
    #undef TxRx_41690
    #undef TyRy_41691
    #undef a_loc_szz_41693
    #undef b_loc_szz_41695
}
__kernel void mainDetailedzisegmap_intragroup_42151(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43894_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43885_backing_aligned_1,
                                                    int64_t m_27932,
                                                    int64_t i32_res_27951,
                                                    int64_t num_groups_y_42149,
                                                    int64_t num_whole_tiles_42167,
                                                    int64_t residual_input_42294,
                                                    unsigned char cond_42295,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43846,
                                                    __global
                                                    unsigned char *mem_43875,
                                                    __global
                                                    unsigned char *mem_43902)
{
    #define tile_sizze_42146 (mainDetailedzitile_sizze_42145)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43894_backing_5 = (__local volatile
                                                           char *) mem_43894_backing_aligned_0;
    __local volatile char *restrict mem_43885_backing_0 = (__local volatile
                                                           char *) mem_43885_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45002;
    int32_t local_tid_45003;
    int64_t group_sizze_45006;
    int32_t wave_sizze_45005;
    int32_t group_tid_45004;
    
    global_tid_45002 = get_global_id(0);
    local_tid_45003 = get_local_id(0);
    group_sizze_45006 = get_local_size(0);
    wave_sizze_45005 = LOCKSTEP_WIDTH;
    group_tid_45004 = get_group_id(0);
    
    int32_t gid_flat_42151;
    
    gid_flat_42151 = group_tid_45004;
    
    int32_t ltid_pre_45007;
    
    ltid_pre_45007 = squot32(local_tid_45003, sext_i64_i32(tile_sizze_42146));
    
    int32_t ltid_pre_45008;
    
    ltid_pre_45008 = local_tid_45003 - squot32(local_tid_45003,
                                               sext_i64_i32(tile_sizze_42146)) *
        sext_i64_i32(tile_sizze_42146);
    
    int64_t gid_x_42143;
    
    gid_x_42143 = squot64(sext_i32_i64(group_tid_45004), num_groups_y_42149);
    
    int64_t gid_y_42144;
    
    gid_y_42144 = sext_i32_i64(group_tid_45004) -
        squot64(sext_i32_i64(group_tid_45004), num_groups_y_42149) *
        num_groups_y_42149;
    
    float mem_43880[1];
    int64_t ltid_x_42168 = sext_i32_i64(ltid_pre_45007);
    int64_t ltid_y_42169 = sext_i32_i64(ltid_pre_45008);
    int32_t ltid_flat_42170 = local_tid_45003;
    
    if (slt64(ltid_x_42168, tile_sizze_42146) && slt64(ltid_y_42169,
                                                       tile_sizze_42146)) {
        mem_43880[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42253 = gid_x_42143 * tile_sizze_42146;
    int64_t binop_x_42268 = gid_y_42144 * tile_sizze_42146;
    __local char *mem_43885;
    
    mem_43885 = (__local char *) mem_43885_backing_0;
    
    float accs_mem_43890[1];
    float mem_param_43881[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43881[i_1] = mem_43880[i_1];
    for (int64_t tile_id_42179 = 0; tile_id_42179 < num_whole_tiles_42167;
         tile_id_42179++) {
        int64_t binop_x_42251 = tile_sizze_42146 * tile_id_42179;
        int64_t ltid_x_42180 = sext_i32_i64(ltid_pre_45007);
        int64_t ltid_y_42181 = sext_i32_i64(ltid_pre_45008);
        int32_t ltid_flat_42182 = local_tid_45003;
        int64_t j_42252 = ltid_y_42181 + binop_x_42251;
        int64_t gtid_42254 = ltid_x_42180 + binop_x_42253;
        bool binop_x_42259 = slt64(j_42252, i32_res_27951);
        bool binop_y_42260 = slt64(gtid_42254, m_27932);
        bool cond_42261 = binop_x_42259 && binop_y_42260;
        float pre_42262;
        
        if (cond_42261) {
            float x_42263 = ((__global
                              float *) defunc_3_map_res_mem_43846)[gtid_42254 *
                                                                   i32_res_27951 +
                                                                   j_42252];
            
            pre_42262 = x_42263;
        } else {
            pre_42262 = 0.0F;
        }
        ((__local float *) mem_43885)[ltid_x_42180 * tile_sizze_42146 +
                                      ltid_y_42181] = pre_42262;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43889[1];
        int64_t ltid_x_42212 = sext_i32_i64(ltid_pre_45007);
        int64_t ltid_y_42213 = sext_i32_i64(ltid_pre_45008);
        int32_t ltid_flat_42214 = local_tid_45003;
        int64_t gtid_42267 = ltid_x_42212 + binop_x_42253;
        int64_t gtid_42269 = ltid_y_42213 + binop_x_42268;
        float acc_42272 = mem_param_43881[0];
        bool binop_x_42276 = slt64(gtid_42267, m_27932);
        bool binop_y_42277 = slt64(gtid_42269, i32_res_27951);
        bool cond_42278 = binop_x_42276 && binop_y_42277;
        float acc_42279;
        
        if (cond_42278) {
            float x_42280;
            float redout_43333 = acc_42272;
            
            for (int64_t i_43334 = 0; i_43334 < tile_sizze_42146; i_43334++) {
                float x_42284 = ((__local float *) mem_43885)[ltid_x_42212 *
                                                              tile_sizze_42146 +
                                                              i_43334];
                int64_t slice_43366 = binop_x_42251 + i_43334;
                float x_42285 = ((__global float *) mem_43875)[slice_43366 *
                                                               (i32_res_27951 *
                                                                m_27932) +
                                                               gtid_42267 *
                                                               i32_res_27951 +
                                                               gtid_42269];
                float defunc_1_f_res_42286 = x_42284 * x_42285;
                float defunc_1_op_res_42283 = defunc_1_f_res_42286 +
                      redout_43333;
                float redout_tmp_45011 = defunc_1_op_res_42283;
                
                redout_43333 = redout_tmp_45011;
            }
            x_42280 = redout_43333;
            acc_42279 = x_42280;
        } else {
            acc_42279 = acc_42272;
        }
        mem_43889[0] = acc_42279;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45009[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45009[i_2] = mem_43889[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43881[i_3] = mem_param_tmp_45009[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43890[i_4] = mem_param_43881[i_4];
    
    __local char *mem_43894;
    
    mem_43894 = (__local char *) mem_43894_backing_5;
    
    float mem_43898[1];
    float mem_44438[1];
    
    if (cond_42295) {
        mem_44438[0] = accs_mem_43890[0];
    } else {
        int64_t binop_x_42368 = tile_sizze_42146 * num_whole_tiles_42167;
        int64_t ltid_x_42296 = sext_i32_i64(ltid_pre_45007);
        int64_t ltid_y_42297 = sext_i32_i64(ltid_pre_45008);
        int32_t ltid_flat_42298 = local_tid_45003;
        int64_t j_42369 = ltid_y_42297 + binop_x_42368;
        int64_t gtid_42371 = binop_x_42253 + ltid_x_42296;
        bool binop_x_42376 = slt64(j_42369, i32_res_27951);
        bool binop_y_42377 = slt64(gtid_42371, m_27932);
        bool cond_42378 = binop_x_42376 && binop_y_42377;
        float pre_42379;
        
        if (cond_42378) {
            float x_42380 = ((__global
                              float *) defunc_3_map_res_mem_43846)[gtid_42371 *
                                                                   i32_res_27951 +
                                                                   j_42369];
            
            pre_42379 = x_42380;
        } else {
            pre_42379 = 0.0F;
        }
        ((__local float *) mem_43894)[ltid_x_42296 * tile_sizze_42146 +
                                      ltid_y_42297] = pre_42379;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42329 = sext_i32_i64(ltid_pre_45007);
        int64_t ltid_y_42330 = sext_i32_i64(ltid_pre_45008);
        int32_t ltid_flat_42331 = local_tid_45003;
        int64_t gtid_42385 = binop_x_42253 + ltid_x_42329;
        int64_t gtid_42387 = binop_x_42268 + ltid_y_42330;
        float acc_42390 = accs_mem_43890[0];
        bool binop_x_42394 = slt64(gtid_42385, m_27932);
        bool binop_y_42395 = slt64(gtid_42387, i32_res_27951);
        bool cond_42396 = binop_x_42394 && binop_y_42395;
        float acc_42397;
        
        if (cond_42396) {
            float x_42398;
            float redout_43335 = acc_42390;
            
            for (int64_t i_43336 = 0; i_43336 < residual_input_42294;
                 i_43336++) {
                float x_42402 = ((__local float *) mem_43894)[ltid_x_42329 *
                                                              tile_sizze_42146 +
                                                              i_43336];
                int64_t slice_43367 = binop_x_42368 + i_43336;
                float x_42403 = ((__global float *) mem_43875)[slice_43367 *
                                                               (i32_res_27951 *
                                                                m_27932) +
                                                               gtid_42385 *
                                                               i32_res_27951 +
                                                               gtid_42387];
                float defunc_1_f_res_42404 = x_42402 * x_42403;
                float defunc_1_op_res_42401 = defunc_1_f_res_42404 +
                      redout_43335;
                float redout_tmp_45012 = defunc_1_op_res_42401;
                
                redout_43335 = redout_tmp_45012;
            }
            x_42398 = redout_43335;
            acc_42397 = x_42398;
        } else {
            acc_42397 = acc_42390;
        }
        mem_43898[0] = acc_42397;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44438[0] = mem_43898[0];
    }
    
    int64_t thread_out_index_45013 = gid_x_42143 * tile_sizze_42146 +
            sext_i32_i64(ltid_pre_45007);
    int64_t thread_out_index_45014 = gid_y_42144 * tile_sizze_42146 +
            sext_i32_i64(ltid_pre_45008);
    
    if (slt64(thread_out_index_45013, m_27932) && slt64(thread_out_index_45014,
                                                        i32_res_27951)) {
        ((__global float *) mem_43902)[thread_out_index_45013 * i32_res_27951 +
                                       thread_out_index_45014] = mem_44438[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42146
}
__kernel void mainDetailedzisegmap_intragroup_42443(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43954_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43952_backing_aligned_1,
                                                    int64_t N_27931,
                                                    int64_t m_27932,
                                                    int64_t i32_res_27951,
                                                    int64_t gridDim_x_42437,
                                                    int64_t full_tiles_42468,
                                                    int64_t kk_42671, __global
                                                    unsigned char *defunc_4_map_res_mem_43912,
                                                    __global
                                                    unsigned char *mem_43936,
                                                    __global
                                                    unsigned char *mem_44126)
{
    #define Ty_42424 (mainDetailedziTy_42421)
    #define Ry_42425 (mainDetailedziRy_42423)
    #define Tx_42426 (mainDetailedziTx_42420)
    #define Rx_42427 (mainDetailedziRx_42422)
    #define Tk_42428 (mainDetailedziTk_42419)
    #define tk_div_tx_42429 (sdiv_up64(mainDetailedziTk_42419, mainDetailedziTx_42420))
    #define tk_div_ty_42430 (sdiv_up64(mainDetailedziTk_42419, mainDetailedziTy_42421))
    #define TxRx_42431 (mainDetailedziTx_42420 * mainDetailedziRx_42422)
    #define TyRy_42432 (mainDetailedziTy_42421 * mainDetailedziRy_42423)
    #define a_loc_szz_42434 (mainDetailedziTk_42419 * (mainDetailedziTy_42421 * mainDetailedziRy_42423))
    #define b_loc_szz_42436 (mainDetailedziRx_42422 * (mainDetailedziTx_42420 * mainDetailedziTk_42419))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43954_backing_1 = (__local volatile
                                                           char *) mem_43954_backing_aligned_0;
    __local volatile char *restrict mem_43952_backing_0 = (__local volatile
                                                           char *) mem_43952_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45090;
    int32_t local_tid_45091;
    int64_t group_sizze_45094;
    int32_t wave_sizze_45093;
    int32_t group_tid_45092;
    
    global_tid_45090 = get_global_id(0);
    local_tid_45091 = get_local_id(0);
    group_sizze_45094 = get_local_size(0);
    wave_sizze_45093 = LOCKSTEP_WIDTH;
    group_tid_45092 = get_group_id(0);
    
    int32_t gid_flat_42443;
    
    gid_flat_42443 = group_tid_45092;
    
    int32_t ltid_pre_45095;
    
    ltid_pre_45095 = squot32(local_tid_45091, sext_i64_i32(Tx_42426));
    
    int32_t ltid_pre_45096;
    
    ltid_pre_45096 = local_tid_45091 - squot32(local_tid_45091,
                                               sext_i64_i32(Tx_42426)) *
        sext_i64_i32(Tx_42426);
    
    int64_t gid_y_42442;
    
    gid_y_42442 = squot64(sext_i32_i64(group_tid_45092), gridDim_x_42437);
    
    int64_t gid_x_42441;
    
    gid_x_42441 = sext_i32_i64(group_tid_45092) -
        squot64(sext_i32_i64(group_tid_45092), gridDim_x_42437) *
        gridDim_x_42437;
    
    int64_t iii_42444;
    
    iii_42444 = TyRy_42432 * gid_y_42442;
    
    int64_t jjj_42445 = TxRx_42431 * gid_x_42441;
    float mem_43950[Ry_42425 * Rx_42427];
    int64_t ltid_y_42448 = sext_i32_i64(ltid_pre_45095);
    int64_t ltid_x_42446 = sext_i32_i64(ltid_pre_45096);
    int32_t ltid_flat_42447 = local_tid_45091;
    float mem_43941[Ry_42425 * Rx_42427];
    
    for (int64_t i_42459 = 0; i_42459 < Ry_42425; i_42459++) {
        for (int64_t i_42462 = 0; i_42462 < Rx_42427; i_42462++) {
            mem_43941[i_42459 * Rx_42427 + i_42462] = 0.0F;
        }
    }
    for (int64_t i_45099 = 0; i_45099 < Ry_42425; i_45099++) {
        for (int64_t i_45100 = 0; i_45100 < Rx_42427; i_45100++) {
            mem_43950[i_45099 * Rx_42427 + i_45100] = mem_43941[i_45099 *
                                                                Rx_42427 +
                                                                i_45100];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43952;
    
    mem_43952 = (__local char *) mem_43952_backing_0;
    
    __local char *mem_43954;
    
    mem_43954 = (__local char *) mem_43954_backing_1;
    
    float mem_44025[Ry_42425];
    float mem_44029[Rx_42427];
    float loop_mem_44041[Ry_42425 * Rx_42427];
    float mem_param_43955[Ry_42425 * Rx_42427];
    
    for (int32_t i_2 = 0; i_2 < Ry_42425 * Rx_42427; i_2++)
        mem_param_43955[i_2] = mem_43950[i_2];
    for (int64_t i_42469 = 0; i_42469 < full_tiles_42468; i_42469++) {
        int64_t kk_42473 = Tk_42428 * i_42469;
        
        for (int64_t i_42474 = 0; i_42474 < Ry_42425; i_42474++) {
            int64_t binop_y_42497 = Ty_42424 * i_42474;
            
            for (int64_t i_42476 = 0; i_42476 < tk_div_tx_42429; i_42476++) {
                int64_t binop_y_42495 = Tx_42426 * i_42476;
                int64_t ltid_x_42478 = sext_i32_i64(ltid_pre_45095);
                int64_t ltid_y_42479 = sext_i32_i64(ltid_pre_45096);
                int32_t ltid_flat_42480 = local_tid_45091;
                int64_t k_42496 = ltid_y_42479 + binop_y_42495;
                int64_t i_42498 = ltid_x_42478 + binop_y_42497;
                int64_t gtid_42499 = iii_42444 + i_42498;
                int64_t A_col_idx_42500 = kk_42473 + k_42496;
                bool cond_42501 = slt64(gtid_42499, m_27932);
                float A_elem_42502;
                
                if (cond_42501) {
                    float A_elem_42504 = ((__global
                                           float *) defunc_4_map_res_mem_43912)[gtid_42499 *
                                                                                i32_res_27951 +
                                                                                A_col_idx_42500];
                    
                    A_elem_42502 = A_elem_42504;
                } else {
                    A_elem_42502 = 0.0F;
                }
                
                bool cond_42506 = slt64(k_42496, Tk_42428);
                int64_t a_loc_ind_42507;
                
                if (cond_42506) {
                    int64_t binop_y_42508 = Tk_42428 * i_42498;
                    int64_t loc_fi_42509 = k_42496 + binop_y_42508;
                    
                    a_loc_ind_42507 = loc_fi_42509;
                } else {
                    a_loc_ind_42507 = -1;
                }
                if (sle64(0, a_loc_ind_42507) && slt64(a_loc_ind_42507,
                                                       a_loc_szz_42434)) {
                    ((__local float *) mem_43952)[a_loc_ind_42507] =
                        A_elem_42502;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42514 = 0; i_42514 < tk_div_ty_42430; i_42514++) {
            int64_t binop_y_42535 = Ty_42424 * i_42514;
            
            for (int64_t i_42516 = 0; i_42516 < Rx_42427; i_42516++) {
                int64_t binop_y_42537 = Tx_42426 * i_42516;
                int64_t ltid_x_42518 = sext_i32_i64(ltid_pre_45095);
                int64_t ltid_y_42519 = sext_i32_i64(ltid_pre_45096);
                int32_t ltid_flat_42520 = local_tid_45091;
                int64_t k_42536 = ltid_x_42518 + binop_y_42535;
                int64_t j_42538 = ltid_y_42519 + binop_y_42537;
                int64_t gtid_42539 = jjj_42445 + j_42538;
                int64_t B_row_idx_42540 = kk_42473 + k_42536;
                bool cond_42541 = slt64(gtid_42539, N_27931);
                float B_elem_42542;
                
                if (cond_42541) {
                    float B_elem_42544 = ((__global
                                           float *) mem_43936)[B_row_idx_42540 *
                                                               N_27931 +
                                                               gtid_42539];
                    
                    B_elem_42542 = B_elem_42544;
                } else {
                    B_elem_42542 = 0.0F;
                }
                
                bool cond_42546 = slt64(k_42536, Tk_42428);
                int64_t b_loc_ind_42547;
                
                if (cond_42546) {
                    int64_t binop_y_42548 = TxRx_42431 * k_42536;
                    int64_t loc_fi_42549 = j_42538 + binop_y_42548;
                    
                    b_loc_ind_42547 = loc_fi_42549;
                } else {
                    b_loc_ind_42547 = -1;
                }
                if (sle64(0, b_loc_ind_42547) && slt64(b_loc_ind_42547,
                                                       b_loc_szz_42436)) {
                    ((__local float *) mem_43954)[b_loc_ind_42547] =
                        B_elem_42542;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44040[Ry_42425 * Rx_42427];
        float mem_param_44012[Ry_42425 * Rx_42427];
        
        for (int32_t i_3 = 0; i_3 < Ry_42425 * Rx_42427; i_3++)
            mem_param_44012[i_3] = mem_param_43955[i_3];
        for (int64_t i_42554 = 0; i_42554 < Tk_42428; i_42554++) {
            int64_t binop_y_42593 = TxRx_42431 * i_42554;
            int64_t ltid_y_42558 = sext_i32_i64(ltid_pre_45095);
            int64_t ltid_x_42556 = sext_i32_i64(ltid_pre_45096);
            int32_t ltid_flat_42557 = local_tid_45091;
            float mem_44015[Ry_42425];
            float mem_44017[Rx_42427];
            int64_t binop_x_42584 = Ry_42425 * ltid_y_42558;
            
            for (int64_t i_42582 = 0; i_42582 < Ry_42425; i_42582++) {
                int64_t binop_x_42585 = i_42582 + binop_x_42584;
                int64_t binop_y_42586 = Tk_42428 * binop_x_42585;
                int64_t a_loc_ind_42587 = i_42554 + binop_y_42586;
                
                for (int64_t i_45112 = 0; i_45112 < 1; i_45112++) {
                    mem_44015[i_42582 + i_45112] = ((__local
                                                     float *) mem_43952)[a_loc_ind_42587 +
                                                                         i_45112];
                }
            }
            
            int64_t binop_y_42595 = Rx_42427 * ltid_x_42556;
            
            for (int64_t i_42591 = 0; i_42591 < Rx_42427; i_42591++) {
                int64_t binop_x_42594 = i_42591 + binop_y_42593;
                int64_t b_loc_ind_42596 = binop_x_42594 + binop_y_42595;
                
                for (int64_t i_45114 = 0; i_45114 < 1; i_45114++) {
                    mem_44017[i_42591 + i_45114] = ((__local
                                                     float *) mem_43954)[b_loc_ind_42596 +
                                                                         i_45114];
                }
            }
            for (int64_t i_45115 = 0; i_45115 < Ry_42425; i_45115++) {
                mem_44025[i_45115] = mem_44015[i_45115];
            }
            for (int64_t i_45116 = 0; i_45116 < Rx_42427; i_45116++) {
                mem_44029[i_45116] = mem_44017[i_45116];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44039[Ry_42425 * Rx_42427];
            int64_t ltid_y_42603 = sext_i32_i64(ltid_pre_45095);
            int64_t ltid_x_42601 = sext_i32_i64(ltid_pre_45096);
            int32_t ltid_flat_42602 = local_tid_45091;
            int64_t binop_y_42644 = Ry_42425 * ltid_y_42603;
            int64_t binop_y_42648 = Rx_42427 * ltid_x_42601;
            
            for (int64_t i_42638 = 0; i_42638 < Ry_42425; i_42638++) {
                int64_t binop_x_42643 = iii_42444 + i_42638;
                int64_t cmpop_x_42645 = binop_x_42643 + binop_y_42644;
                bool binop_x_42646 = slt64(cmpop_x_42645, m_27932);
                
                for (int64_t i_42641 = 0; i_42641 < Rx_42427; i_42641++) {
                    int64_t binop_x_42647 = jjj_42445 + i_42641;
                    int64_t cmpop_x_42649 = binop_x_42647 + binop_y_42648;
                    bool binop_y_42650 = slt64(cmpop_x_42649, N_27931);
                    bool cond_42651 = binop_x_42646 && binop_y_42650;
                    
                    if (cond_42651) {
                        float a_42653 = mem_44025[i_42638];
                        float b_42654 = mem_44029[i_42641];
                        float c_42655 = mem_param_44012[i_42638 * Rx_42427 +
                                                        i_42641];
                        float defunc_1_f_res_42658 = a_42653 * b_42654;
                        float defunc_1_op_res_42662 = c_42655 +
                              defunc_1_f_res_42658;
                        
                        mem_param_44012[i_42638 * Rx_42427 + i_42641] =
                            defunc_1_op_res_42662;
                    }
                }
            }
            for (int64_t i_45119 = 0; i_45119 < Ry_42425; i_45119++) {
                for (int64_t i_45120 = 0; i_45120 < Rx_42427; i_45120++) {
                    mem_44039[i_45119 * Rx_42427 + i_45120] =
                        mem_param_44012[i_45119 * Rx_42427 + i_45120];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45109[Ry_42425 * Rx_42427];
            
            for (int32_t i_4 = 0; i_4 < Ry_42425 * Rx_42427; i_4++)
                mem_param_tmp_45109[i_4] = mem_44039[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42425 * Rx_42427; i_5++)
                mem_param_44012[i_5] = mem_param_tmp_45109[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42425 * Rx_42427; i_6++)
            loop_mem_44040[i_6] = mem_param_44012[i_6];
        
        float mem_param_tmp_45101[Ry_42425 * Rx_42427];
        
        for (int32_t i_7 = 0; i_7 < Ry_42425 * Rx_42427; i_7++)
            mem_param_tmp_45101[i_7] = loop_mem_44040[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42425 * Rx_42427; i_8++)
            mem_param_43955[i_8] = mem_param_tmp_45101[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42425 * Rx_42427; i_9++)
        loop_mem_44041[i_9] = mem_param_43955[i_9];
    for (int64_t i_42672 = 0; i_42672 < Ry_42425; i_42672++) {
        int64_t binop_y_42697 = Ty_42424 * i_42672;
        
        for (int64_t i_42674 = 0; i_42674 < tk_div_tx_42429; i_42674++) {
            int64_t binop_y_42695 = Tx_42426 * i_42674;
            int64_t ltid_x_42676 = sext_i32_i64(ltid_pre_45095);
            int64_t ltid_y_42677 = sext_i32_i64(ltid_pre_45096);
            int32_t ltid_flat_42678 = local_tid_45091;
            int64_t k_42696 = ltid_y_42677 + binop_y_42695;
            int64_t i_42698 = ltid_x_42676 + binop_y_42697;
            int64_t gtid_42699 = iii_42444 + i_42698;
            int64_t A_col_idx_42700 = kk_42671 + k_42696;
            bool binop_x_42701 = slt64(gtid_42699, m_27932);
            bool binop_y_42702 = slt64(A_col_idx_42700, i32_res_27951);
            bool cond_42703 = binop_x_42701 && binop_y_42702;
            float A_elem_42704;
            
            if (cond_42703) {
                float A_elem_42706 = ((__global
                                       float *) defunc_4_map_res_mem_43912)[gtid_42699 *
                                                                            i32_res_27951 +
                                                                            A_col_idx_42700];
                
                A_elem_42704 = A_elem_42706;
            } else {
                A_elem_42704 = 0.0F;
            }
            
            bool cond_42708 = slt64(k_42696, Tk_42428);
            int64_t a_loc_ind_42709;
            
            if (cond_42708) {
                int64_t binop_y_42710 = Tk_42428 * i_42698;
                int64_t loc_fi_42711 = k_42696 + binop_y_42710;
                
                a_loc_ind_42709 = loc_fi_42711;
            } else {
                a_loc_ind_42709 = -1;
            }
            if (sle64(0, a_loc_ind_42709) && slt64(a_loc_ind_42709,
                                                   a_loc_szz_42434)) {
                ((__local float *) mem_43952)[a_loc_ind_42709] = A_elem_42704;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42716 = 0; i_42716 < tk_div_ty_42430; i_42716++) {
        int64_t binop_y_42739 = Ty_42424 * i_42716;
        
        for (int64_t i_42718 = 0; i_42718 < Rx_42427; i_42718++) {
            int64_t binop_y_42741 = Tx_42426 * i_42718;
            int64_t ltid_x_42720 = sext_i32_i64(ltid_pre_45095);
            int64_t ltid_y_42721 = sext_i32_i64(ltid_pre_45096);
            int32_t ltid_flat_42722 = local_tid_45091;
            int64_t k_42740 = ltid_x_42720 + binop_y_42739;
            int64_t j_42742 = ltid_y_42721 + binop_y_42741;
            int64_t gtid_42743 = jjj_42445 + j_42742;
            int64_t B_row_idx_42744 = kk_42671 + k_42740;
            bool binop_x_42745 = slt64(gtid_42743, N_27931);
            bool binop_y_42746 = slt64(B_row_idx_42744, i32_res_27951);
            bool cond_42747 = binop_x_42745 && binop_y_42746;
            float B_elem_42748;
            
            if (cond_42747) {
                float B_elem_42750 = ((__global
                                       float *) mem_43936)[B_row_idx_42744 *
                                                           N_27931 +
                                                           gtid_42743];
                
                B_elem_42748 = B_elem_42750;
            } else {
                B_elem_42748 = 0.0F;
            }
            
            bool cond_42752 = slt64(k_42740, Tk_42428);
            int64_t b_loc_ind_42753;
            
            if (cond_42752) {
                int64_t binop_y_42754 = TxRx_42431 * k_42740;
                int64_t loc_fi_42755 = j_42742 + binop_y_42754;
                
                b_loc_ind_42753 = loc_fi_42755;
            } else {
                b_loc_ind_42753 = -1;
            }
            if (sle64(0, b_loc_ind_42753) && slt64(b_loc_ind_42753,
                                                   b_loc_szz_42436)) {
                ((__local float *) mem_43954)[b_loc_ind_42753] = B_elem_42748;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44107[Ry_42425];
    float mem_44111[Rx_42427];
    float mem_44121[Ry_42425 * Rx_42427];
    float loop_mem_44123[Ry_42425 * Rx_42427];
    float mem_param_44094[Ry_42425 * Rx_42427];
    
    for (int32_t i_10 = 0; i_10 < Ry_42425 * Rx_42427; i_10++)
        mem_param_44094[i_10] = loop_mem_44041[i_10];
    for (int64_t i_42760 = 0; i_42760 < Tk_42428; i_42760++) {
        int64_t cmpop_x_42762 = kk_42671 + i_42760;
        bool cond_42763 = slt64(cmpop_x_42762, i32_res_27951);
        float mem_44454[Ry_42425 * Rx_42427];
        
        if (cond_42763) {
            int64_t binop_y_42801 = TxRx_42431 * i_42760;
            int64_t bytes_44096 = 4 * Ry_42425;
            int64_t bytes_44098 = 4 * Rx_42427;
            int64_t ltid_y_42766 = sext_i32_i64(ltid_pre_45095);
            int64_t ltid_x_42764 = sext_i32_i64(ltid_pre_45096);
            int32_t ltid_flat_42765 = local_tid_45091;
            float mem_44097[Ry_42425];
            float mem_44099[Rx_42427];
            int64_t binop_x_42792 = Ry_42425 * ltid_y_42766;
            
            for (int64_t i_42790 = 0; i_42790 < Ry_42425; i_42790++) {
                int64_t binop_x_42793 = i_42790 + binop_x_42792;
                int64_t binop_y_42794 = Tk_42428 * binop_x_42793;
                int64_t a_loc_ind_42795 = i_42760 + binop_y_42794;
                
                for (int64_t i_45128 = 0; i_45128 < 1; i_45128++) {
                    mem_44097[i_42790 + i_45128] = ((__local
                                                     float *) mem_43952)[a_loc_ind_42795 +
                                                                         i_45128];
                }
            }
            
            int64_t binop_y_42803 = Rx_42427 * ltid_x_42764;
            
            for (int64_t i_42799 = 0; i_42799 < Rx_42427; i_42799++) {
                int64_t binop_x_42802 = i_42799 + binop_y_42801;
                int64_t b_loc_ind_42804 = binop_x_42802 + binop_y_42803;
                
                for (int64_t i_45130 = 0; i_45130 < 1; i_45130++) {
                    mem_44099[i_42799 + i_45130] = ((__local
                                                     float *) mem_43954)[b_loc_ind_42804 +
                                                                         i_45130];
                }
            }
            for (int64_t i_45131 = 0; i_45131 < Ry_42425; i_45131++) {
                mem_44107[i_45131] = mem_44097[i_45131];
            }
            for (int64_t i_45132 = 0; i_45132 < Rx_42427; i_45132++) {
                mem_44111[i_45132] = mem_44099[i_45132];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42811 = sext_i32_i64(ltid_pre_45095);
            int64_t ltid_x_42809 = sext_i32_i64(ltid_pre_45096);
            int32_t ltid_flat_42810 = local_tid_45091;
            int64_t binop_y_42852 = Ry_42425 * ltid_y_42811;
            int64_t binop_y_42856 = Rx_42427 * ltid_x_42809;
            
            for (int64_t i_42846 = 0; i_42846 < Ry_42425; i_42846++) {
                int64_t binop_x_42851 = iii_42444 + i_42846;
                int64_t cmpop_x_42853 = binop_x_42851 + binop_y_42852;
                bool binop_x_42854 = slt64(cmpop_x_42853, m_27932);
                
                for (int64_t i_42849 = 0; i_42849 < Rx_42427; i_42849++) {
                    int64_t binop_x_42855 = jjj_42445 + i_42849;
                    int64_t cmpop_x_42857 = binop_x_42855 + binop_y_42856;
                    bool binop_y_42858 = slt64(cmpop_x_42857, N_27931);
                    bool cond_42859 = binop_x_42854 && binop_y_42858;
                    
                    if (cond_42859) {
                        float a_42861 = mem_44107[i_42846];
                        float b_42862 = mem_44111[i_42849];
                        float c_42863 = mem_param_44094[i_42846 * Rx_42427 +
                                                        i_42849];
                        float defunc_1_f_res_42866 = a_42861 * b_42862;
                        float defunc_1_op_res_42870 = c_42863 +
                              defunc_1_f_res_42866;
                        
                        mem_param_44094[i_42846 * Rx_42427 + i_42849] =
                            defunc_1_op_res_42870;
                    }
                }
            }
            for (int64_t i_45135 = 0; i_45135 < Ry_42425; i_45135++) {
                for (int64_t i_45136 = 0; i_45136 < Rx_42427; i_45136++) {
                    mem_44121[i_45135 * Rx_42427 + i_45136] =
                        mem_param_44094[i_45135 * Rx_42427 + i_45136];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45137 = 0; i_45137 < Ry_42425; i_45137++) {
                for (int64_t i_45138 = 0; i_45138 < Rx_42427; i_45138++) {
                    mem_44454[i_45137 * Rx_42427 + i_45138] =
                        mem_44121[i_45137 * Rx_42427 + i_45138];
                }
            }
        } else {
            for (int64_t i_45139 = 0; i_45139 < Ry_42425; i_45139++) {
                for (int64_t i_45140 = 0; i_45140 < Rx_42427; i_45140++) {
                    mem_44454[i_45139 * Rx_42427 + i_45140] =
                        mem_param_44094[i_45139 * Rx_42427 + i_45140];
                }
            }
        }
        
        float mem_param_tmp_45125[Ry_42425 * Rx_42427];
        
        for (int32_t i_11 = 0; i_11 < Ry_42425 * Rx_42427; i_11++)
            mem_param_tmp_45125[i_11] = mem_44454[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42425 * Rx_42427; i_12++)
            mem_param_44094[i_12] = mem_param_tmp_45125[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42425 * Rx_42427; i_13++)
        loop_mem_44123[i_13] = mem_param_44094[i_13];
    
    int64_t reg_tile_i_45141 = squot64(sext_i32_i64(local_tid_45091), Tx_42426);
    int64_t reg_tile_i_45142 = sext_i32_i64(local_tid_45091) -
            squot64(sext_i32_i64(local_tid_45091), Tx_42426) * Tx_42426;
    int64_t tile_dim_start_45143 = Ry_42425 * (Ty_42424 * gid_y_42442 +
                                               reg_tile_i_45141);
    int64_t tile_dim_start_45144 = Rx_42427 * (Tx_42426 * gid_x_42441 +
                                               reg_tile_i_45142);
    
    for (int64_t nest_i_45145 = 0; nest_i_45145 < Ry_42425; nest_i_45145++) {
        for (int64_t nest_i_45146 = 0; nest_i_45146 < Rx_42427;
             nest_i_45146++) {
            if (slt64(tile_dim_start_45143 + nest_i_45145, m_27932) &&
                slt64(tile_dim_start_45144 + nest_i_45146, N_27931)) {
                ((__global float *) mem_44126)[(tile_dim_start_45143 +
                                                nest_i_45145) * N_27931 +
                                               (tile_dim_start_45144 +
                                                nest_i_45146)] =
                    loop_mem_44123[nest_i_45145 * Rx_42427 + nest_i_45146];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42424
    #undef Ry_42425
    #undef Tx_42426
    #undef Rx_42427
    #undef Tk_42428
    #undef tk_div_tx_42429
    #undef tk_div_ty_42430
    #undef TxRx_42431
    #undef TyRy_42432
    #undef a_loc_szz_42434
    #undef b_loc_szz_42436
}
__kernel void mainDetailedzisegmap_intragroup_42877(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44196_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44189_backing_aligned_1,
                                                    int64_t m_27932,
                                                    int32_t n_27936,
                                                    float hfrac_27938,
                                                    int64_t i32_res_27945,
                                                    int32_t k2p2_27947,
                                                    int64_t num_whole_tiles_42885,
                                                    int64_t residual_input_43006,
                                                    unsigned char cond_43007,
                                                    __global
                                                    unsigned char *mem_44178,
                                                    __global
                                                    unsigned char *mem_44181,
                                                    __global
                                                    unsigned char *mem_44209,
                                                    __global
                                                    unsigned char *mem_44211,
                                                    __global
                                                    unsigned char *mem_44213)
{
    #define segmap_group_sizze_32264 (mainDetailedzisegmap_group_sizze_32233)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44196_backing_5 = (__local volatile
                                                           char *) mem_44196_backing_aligned_0;
    __local volatile char *restrict mem_44189_backing_0 = (__local volatile
                                                           char *) mem_44189_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45314;
    int32_t local_tid_45315;
    int64_t group_sizze_45318;
    int32_t wave_sizze_45317;
    int32_t group_tid_45316;
    
    global_tid_45314 = get_global_id(0);
    local_tid_45315 = get_local_id(0);
    group_sizze_45318 = get_local_size(0);
    wave_sizze_45317 = LOCKSTEP_WIDTH;
    group_tid_45316 = get_group_id(0);
    
    int32_t gid_flat_42877;
    
    gid_flat_42877 = group_tid_45316;
    
    int32_t ltid_pre_45319;
    
    ltid_pre_45319 = local_tid_45315;
    
    int64_t gid_42876;
    
    gid_42876 = sext_i32_i64(group_tid_45316);
    
    float mem_44185[1];
    int64_t ltid_42886 = sext_i32_i64(ltid_pre_45319);
    int32_t ltid_flat_42887 = local_tid_45315;
    
    mem_44185[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42972 = segmap_group_sizze_32264 * gid_42876;
    __local char *mem_44189;
    
    mem_44189 = (__local char *) mem_44189_backing_0;
    
    float accs_mem_44193[1];
    float mem_param_44186[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44186[i_1] = mem_44185[i_1];
    for (int64_t tile_id_42893 = 0; tile_id_42893 < num_whole_tiles_42885;
         tile_id_42893++) {
        int64_t binop_x_42954 = segmap_group_sizze_32264 * tile_id_42893;
        int64_t ltid_42894 = sext_i32_i64(ltid_pre_45319);
        int32_t ltid_flat_42895 = local_tid_45315;
        int64_t j_42955 = ltid_42894 + binop_x_42954;
        bool cond_42967 = slt64(j_42955, i32_res_27945);
        int32_t pre_42968;
        
        if (cond_42967) {
            int32_t index_primexp_43301 = sext_i64_i32(j_42955);
            
            pre_42968 = index_primexp_43301;
        } else {
            pre_42968 = 0;
        }
        ((__local int32_t *) mem_44189)[ltid_42894] = pre_42968;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44192[1];
        int64_t ltid_42921 = sext_i32_i64(ltid_pre_45319);
        int32_t ltid_flat_42922 = local_tid_45315;
        int64_t gtid_42973 = ltid_42921 + binop_x_42972;
        int32_t defunc_0_f_res_42975;
        int32_t redout_43343 = 0;
        
        for (int32_t i_43369 = 0; i_43369 < n_27936; i_43369++) {
            int64_t i_43344 = sext_i32_i64(i_43369);
            float x_42979 = ((__global float *) mem_44178)[i_43344 * m_27932 +
                                                           gtid_42973];
            bool isnan_res_42980;
            
            isnan_res_42980 = futrts_isnan32(x_42979);
            
            bool cond_42981 = !isnan_res_42980;
            int32_t defunc_0_f_res_42982 = btoi_bool_i32(cond_42981);
            int32_t defunc_1_op_res_42978 = add32(defunc_0_f_res_42982,
                                                  redout_43343);
            int32_t redout_tmp_45322 = defunc_1_op_res_42978;
            
            redout_43343 = redout_tmp_45322;
        }
        defunc_0_f_res_42975 = redout_43343;
        
        float acc_42983 = mem_param_44186[0];
        bool cond_42984 = slt64(gtid_42973, m_27932);
        float acc_42985;
        
        if (cond_42984) {
            float x_42986;
            float redout_43345 = acc_42983;
            
            for (int64_t i_43346 = 0; i_43346 < segmap_group_sizze_32264;
                 i_43346++) {
                int32_t x_42990 = ((__local int32_t *) mem_44189)[i_43346];
                bool cond_42991 = slt32(x_42990, defunc_0_f_res_42975);
                float defunc_0_f_res_42992;
                
                if (cond_42991) {
                    int64_t i_42993 = sext_i32_i64(x_42990);
                    float defunc_0_f_res_t_res_42994 = ((__global
                                                         float *) mem_44181)[i_42993 *
                                                                             m_27932 +
                                                                             gtid_42973];
                    
                    defunc_0_f_res_42992 = defunc_0_f_res_t_res_42994;
                } else {
                    defunc_0_f_res_42992 = 0.0F;
                }
                
                float defunc_0_f_res_42995 = defunc_0_f_res_42992 *
                      defunc_0_f_res_42992;
                float defunc_1_op_res_42989 = defunc_0_f_res_42995 +
                      redout_43345;
                float redout_tmp_45323 = defunc_1_op_res_42989;
                
                redout_43345 = redout_tmp_45323;
            }
            x_42986 = redout_43345;
            acc_42985 = x_42986;
        } else {
            acc_42985 = acc_42983;
        }
        mem_44192[0] = acc_42985;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45320[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45320[i_2] = mem_44192[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44186[i_3] = mem_param_tmp_45320[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44193[i_4] = mem_param_44186[i_4];
    
    __local char *mem_44196;
    
    mem_44196 = (__local char *) mem_44196_backing_5;
    
    float mem_44199[1];
    float mem_44467[1];
    
    if (cond_43007) {
        mem_44467[0] = accs_mem_44193[0];
    } else {
        int64_t binop_x_43017 = segmap_group_sizze_32264 *
                num_whole_tiles_42885;
        int64_t ltid_43008 = sext_i32_i64(ltid_pre_45319);
        int32_t ltid_flat_43009 = local_tid_45315;
        int64_t j_43018 = ltid_43008 + binop_x_43017;
        bool cond_43030 = slt64(j_43018, i32_res_27945);
        int32_t pre_43031;
        
        if (cond_43030) {
            int32_t index_primexp_43302 = sext_i64_i32(j_43018);
            
            pre_43031 = index_primexp_43302;
        } else {
            pre_43031 = 0;
        }
        ((__local int32_t *) mem_44196)[ltid_43008] = pre_43031;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43036 = sext_i32_i64(ltid_pre_45319);
        int32_t ltid_flat_43037 = local_tid_45315;
        int64_t gtid_43044 = binop_x_42972 + ltid_43036;
        int32_t defunc_0_f_res_43046;
        int32_t redout_43347 = 0;
        
        for (int32_t i_43370 = 0; i_43370 < n_27936; i_43370++) {
            int64_t i_43348 = sext_i32_i64(i_43370);
            float x_43050 = ((__global float *) mem_44178)[i_43348 * m_27932 +
                                                           gtid_43044];
            bool isnan_res_43051;
            
            isnan_res_43051 = futrts_isnan32(x_43050);
            
            bool cond_43052 = !isnan_res_43051;
            int32_t defunc_0_f_res_43053 = btoi_bool_i32(cond_43052);
            int32_t defunc_1_op_res_43049 = add32(defunc_0_f_res_43053,
                                                  redout_43347);
            int32_t redout_tmp_45324 = defunc_1_op_res_43049;
            
            redout_43347 = redout_tmp_45324;
        }
        defunc_0_f_res_43046 = redout_43347;
        
        float acc_43054 = accs_mem_44193[0];
        bool cond_43055 = slt64(gtid_43044, m_27932);
        float acc_43056;
        
        if (cond_43055) {
            float x_43057;
            float redout_43349 = acc_43054;
            
            for (int64_t i_43350 = 0; i_43350 < residual_input_43006;
                 i_43350++) {
                int32_t x_43061 = ((__local int32_t *) mem_44196)[i_43350];
                bool cond_43062 = slt32(x_43061, defunc_0_f_res_43046);
                float defunc_0_f_res_43063;
                
                if (cond_43062) {
                    int64_t i_43064 = sext_i32_i64(x_43061);
                    float defunc_0_f_res_t_res_43065 = ((__global
                                                         float *) mem_44181)[i_43064 *
                                                                             m_27932 +
                                                                             gtid_43044];
                    
                    defunc_0_f_res_43063 = defunc_0_f_res_t_res_43065;
                } else {
                    defunc_0_f_res_43063 = 0.0F;
                }
                
                float defunc_0_f_res_43066 = defunc_0_f_res_43063 *
                      defunc_0_f_res_43063;
                float defunc_1_op_res_43060 = defunc_0_f_res_43066 +
                      redout_43349;
                float redout_tmp_45325 = defunc_1_op_res_43060;
                
                redout_43349 = redout_tmp_45325;
            }
            x_43057 = redout_43349;
            acc_43056 = x_43057;
        } else {
            acc_43056 = acc_43054;
        }
        mem_44199[0] = acc_43056;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44467[0] = mem_44199[0];
    }
    
    int32_t mem_44203[1];
    int32_t mem_44205[1];
    float mem_44207[1];
    int64_t ltid_43069 = sext_i32_i64(ltid_pre_45319);
    int32_t ltid_flat_43070 = local_tid_45315;
    int64_t gtid_43080 = binop_x_42972 + ltid_43069;
    bool cond_43082 = slt64(gtid_43080, m_27932);
    int32_t postlude_43083;
    int32_t postlude_43084;
    float postlude_43085;
    
    if (cond_43082) {
        float defunc_0_f_res_43081 = mem_44467[0];
        int32_t defunc_0_f_res_43087;
        int32_t redout_43351 = 0;
        
        for (int32_t i_43371 = 0; i_43371 < n_27936; i_43371++) {
            int64_t i_43352 = sext_i32_i64(i_43371);
            float x_43091 = ((__global float *) mem_44178)[i_43352 * m_27932 +
                                                           gtid_43080];
            bool isnan_res_43092;
            
            isnan_res_43092 = futrts_isnan32(x_43091);
            
            bool cond_43093 = !isnan_res_43092;
            int32_t defunc_0_f_res_43094 = btoi_bool_i32(cond_43093);
            int32_t defunc_1_op_res_43090 = add32(defunc_0_f_res_43094,
                                                  redout_43351);
            int32_t redout_tmp_45326 = defunc_1_op_res_43090;
            
            redout_43351 = redout_tmp_45326;
        }
        defunc_0_f_res_43087 = redout_43351;
        
        int32_t r32_arg_43095 = sub32(defunc_0_f_res_43087, k2p2_27947);
        float i32_res_43096 = sitofp_i32_f32(r32_arg_43095);
        float sqrt_arg_43097 = defunc_0_f_res_43081 / i32_res_43096;
        float sqrt_res_43098;
        
        sqrt_res_43098 = futrts_sqrt32(sqrt_arg_43097);
        
        float i32_res_43099 = sitofp_i32_f32(defunc_0_f_res_43087);
        float t32_arg_43100 = hfrac_27938 * i32_res_43099;
        int32_t f32_res_43101 = fptosi_f32_i32(t32_arg_43100);
        
        postlude_43083 = f32_res_43101;
        postlude_43084 = defunc_0_f_res_43087;
        postlude_43085 = sqrt_res_43098;
    } else {
        postlude_43083 = 0;
        postlude_43084 = 0;
        postlude_43085 = 0.0F;
    }
    mem_44203[0] = postlude_43083;
    mem_44205[0] = postlude_43084;
    mem_44207[0] = postlude_43085;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45315) + segmap_group_sizze_32264 *
              sext_i32_i64(group_tid_45316), m_27932)) {
        ((__global int32_t *) mem_44209)[sext_i32_i64(local_tid_45315) +
                                         segmap_group_sizze_32264 *
                                         sext_i32_i64(group_tid_45316)] =
            mem_44203[0];
    }
    if (slt64(sext_i32_i64(local_tid_45315) + segmap_group_sizze_32264 *
              sext_i32_i64(group_tid_45316), m_27932)) {
        ((__global int32_t *) mem_44211)[sext_i32_i64(local_tid_45315) +
                                         segmap_group_sizze_32264 *
                                         sext_i32_i64(group_tid_45316)] =
            mem_44205[0];
    }
    if (slt64(sext_i32_i64(local_tid_45315) + segmap_group_sizze_32264 *
              sext_i32_i64(group_tid_45316), m_27932)) {
        ((__global float *) mem_44213)[sext_i32_i64(local_tid_45315) +
                                       segmap_group_sizze_32264 *
                                       sext_i32_i64(group_tid_45316)] =
            mem_44207[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_32264
}
__kernel void mainDetailedzisegmap_intragroup_43109(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44262_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44255_backing_aligned_1,
                                                    int64_t N_27931,
                                                    int64_t m_27932,
                                                    int64_t i32_res_28306,
                                                    int64_t num_whole_tiles_43129,
                                                    int64_t residual_input_43228,
                                                    unsigned char cond_43229,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44174,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44237,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44238,
                                                    __global
                                                    unsigned char *mem_44268)
{
    #define segmap_group_sizze_32501 (mainDetailedzisegmap_group_sizze_32482)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44262_backing_5 = (__local volatile
                                                           char *) mem_44262_backing_aligned_0;
    __local volatile char *restrict mem_44255_backing_0 = (__local volatile
                                                           char *) mem_44255_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45500;
    int32_t local_tid_45501;
    int64_t group_sizze_45504;
    int32_t wave_sizze_45503;
    int32_t group_tid_45502;
    
    global_tid_45500 = get_global_id(0);
    local_tid_45501 = get_local_id(0);
    group_sizze_45504 = get_local_size(0);
    wave_sizze_45503 = LOCKSTEP_WIDTH;
    group_tid_45502 = get_group_id(0);
    
    int32_t gid_flat_43109;
    
    gid_flat_43109 = group_tid_45502;
    
    int32_t ltid_pre_45505;
    
    ltid_pre_45505 = local_tid_45501;
    
    int64_t gid_43108;
    
    gid_43108 = sext_i32_i64(group_tid_45502);
    
    int64_t binop_x_43118;
    
    binop_x_43118 = segmap_group_sizze_32501 * gid_43108;
    
    int32_t mem_44246[1];
    int32_t mem_44248[1];
    int64_t ltid_43110 = sext_i32_i64(ltid_pre_45505);
    int32_t ltid_flat_43111 = local_tid_45501;
    int64_t gtid_43119 = ltid_43110 + binop_x_43118;
    bool cond_43120 = slt64(gtid_43119, m_27932);
    int32_t pre_43121;
    int32_t pre_43122;
    
    if (cond_43120) {
        int32_t x_43123 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_43119];
        int32_t x_43124 = ((__global
                            int32_t *) defunc_3_map_res_mem_44237)[gtid_43119];
        
        pre_43121 = x_43123;
        pre_43122 = x_43124;
    } else {
        pre_43121 = 0;
        pre_43122 = 0;
    }
    mem_44246[0] = pre_43121;
    mem_44248[0] = pre_43122;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_44251[1];
    int64_t ltid_43130 = sext_i32_i64(ltid_pre_45505);
    int32_t ltid_flat_43131 = local_tid_45501;
    
    mem_44251[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44255;
    
    mem_44255 = (__local char *) mem_44255_backing_0;
    
    float accs_mem_44259[1];
    float mem_param_44252[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44252[i_1] = mem_44251[i_1];
    for (int64_t tile_id_43137 = 0; tile_id_43137 < num_whole_tiles_43129;
         tile_id_43137++) {
        int64_t binop_x_43186 = segmap_group_sizze_32501 * tile_id_43137;
        int64_t ltid_43138 = sext_i32_i64(ltid_pre_45505);
        int32_t ltid_flat_43139 = local_tid_45501;
        int64_t j_43187 = ltid_43138 + binop_x_43186;
        bool cond_43192 = slt64(j_43187, i32_res_28306);
        int32_t pre_43193;
        
        if (cond_43192) {
            int32_t index_primexp_43303 = sext_i64_i32(j_43187);
            int32_t tile_elem_43194 = index_primexp_43303;
            
            pre_43193 = tile_elem_43194;
        } else {
            pre_43193 = 0;
        }
        ((__local int32_t *) mem_44255)[ltid_43138] = pre_43193;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44258[1];
        int64_t ltid_43158 = sext_i32_i64(ltid_pre_45505);
        int32_t ltid_flat_43159 = local_tid_45501;
        int64_t gtid_43198 = binop_x_43118 + ltid_43158;
        float acc_43201 = mem_param_44252[0];
        bool cond_43202 = slt64(gtid_43198, m_27932);
        float acc_43203;
        
        if (cond_43202) {
            int32_t x_43199 = mem_44246[0];
            int32_t x_43200 = mem_44248[0];
            float x_43204;
            float redout_43353 = acc_43201;
            
            for (int64_t i_43354 = 0; i_43354 < segmap_group_sizze_32501;
                 i_43354++) {
                int32_t x_43208 = ((__local int32_t *) mem_44255)[i_43354];
                bool cond_43209 = slt32(x_43208, x_43200);
                float defunc_0_f_res_43210;
                
                if (cond_43209) {
                    int32_t x_43211 = add32(x_43199, x_43208);
                    int32_t x_43212 = sub32(x_43211, x_43200);
                    int32_t i_43213 = add32(1, x_43212);
                    int64_t i_43214 = sext_i32_i64(i_43213);
                    float defunc_0_f_res_t_res_43215 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_43198 *
                                                                                              N_27931 +
                                                                                              i_43214];
                    
                    defunc_0_f_res_43210 = defunc_0_f_res_t_res_43215;
                } else {
                    defunc_0_f_res_43210 = 0.0F;
                }
                
                float defunc_1_op_res_43207 = defunc_0_f_res_43210 +
                      redout_43353;
                float redout_tmp_45508 = defunc_1_op_res_43207;
                
                redout_43353 = redout_tmp_45508;
            }
            x_43204 = redout_43353;
            acc_43203 = x_43204;
        } else {
            acc_43203 = acc_43201;
        }
        mem_44258[0] = acc_43203;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45506[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45506[i_2] = mem_44258[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44252[i_3] = mem_param_tmp_45506[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44259[i_4] = mem_param_44252[i_4];
    
    __local char *mem_44262;
    
    mem_44262 = (__local char *) mem_44262_backing_5;
    
    float mem_44265[1];
    float mem_44476[1];
    
    if (cond_43229) {
        mem_44476[0] = accs_mem_44259[0];
    } else {
        int64_t binop_x_43239 = segmap_group_sizze_32501 *
                num_whole_tiles_43129;
        int64_t ltid_43230 = sext_i32_i64(ltid_pre_45505);
        int32_t ltid_flat_43231 = local_tid_45501;
        int64_t j_43240 = ltid_43230 + binop_x_43239;
        bool cond_43245 = slt64(j_43240, i32_res_28306);
        int32_t pre_43246;
        
        if (cond_43245) {
            int32_t index_primexp_43304 = sext_i64_i32(j_43240);
            int32_t tile_elem_43247 = index_primexp_43304;
            
            pre_43246 = tile_elem_43247;
        } else {
            pre_43246 = 0;
        }
        ((__local int32_t *) mem_44262)[ltid_43230] = pre_43246;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43251 = sext_i32_i64(ltid_pre_45505);
        int32_t ltid_flat_43252 = local_tid_45501;
        int64_t gtid_43259 = binop_x_43118 + ltid_43251;
        float acc_43262 = accs_mem_44259[0];
        bool cond_43263 = slt64(gtid_43259, m_27932);
        float acc_43264;
        
        if (cond_43263) {
            int32_t x_43260 = mem_44246[0];
            int32_t x_43261 = mem_44248[0];
            float x_43265;
            float redout_43355 = acc_43262;
            
            for (int64_t i_43356 = 0; i_43356 < residual_input_43228;
                 i_43356++) {
                int32_t x_43269 = ((__local int32_t *) mem_44262)[i_43356];
                bool cond_43270 = slt32(x_43269, x_43261);
                float defunc_0_f_res_43271;
                
                if (cond_43270) {
                    int32_t x_43272 = add32(x_43260, x_43269);
                    int32_t x_43273 = sub32(x_43272, x_43261);
                    int32_t i_43274 = add32(1, x_43273);
                    int64_t i_43275 = sext_i32_i64(i_43274);
                    float defunc_0_f_res_t_res_43276 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_43259 *
                                                                                              N_27931 +
                                                                                              i_43275];
                    
                    defunc_0_f_res_43271 = defunc_0_f_res_t_res_43276;
                } else {
                    defunc_0_f_res_43271 = 0.0F;
                }
                
                float defunc_1_op_res_43268 = defunc_0_f_res_43271 +
                      redout_43355;
                float redout_tmp_45509 = defunc_1_op_res_43268;
                
                redout_43355 = redout_tmp_45509;
            }
            x_43265 = redout_43355;
            acc_43264 = x_43265;
        } else {
            acc_43264 = acc_43262;
        }
        mem_44265[0] = acc_43264;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44476[0] = mem_44265[0];
    }
    if (slt64(sext_i32_i64(local_tid_45501) + segmap_group_sizze_32501 *
              sext_i32_i64(group_tid_45502), m_27932)) {
        ((__global float *) mem_44268)[sext_i32_i64(local_tid_45501) +
                                       segmap_group_sizze_32501 *
                                       sext_i32_i64(group_tid_45502)] =
            mem_44476[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_32501
}
__kernel void mainDetailedzisegred_large_30476(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44768_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44766_backing_aligned_1,
                                               int64_t N_27931, int64_t N_27933,
                                               int64_t i32_res_27945,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_30615,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43528,
                                               __global
                                               unsigned char *mem_43533,
                                               int64_t groups_per_segment_44752,
                                               int64_t elements_per_thread_44753,
                                               int64_t virt_num_groups_44754,
                                               int64_t threads_per_segment_44756,
                                               __global
                                               unsigned char *group_res_arr_mem_44757,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44759)
{
    #define segred_group_sizze_30614 (mainDetailedzisegred_group_sizze_30470)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44768_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44768_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44766_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44766_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44761;
    int32_t local_tid_44762;
    int64_t group_sizze_44765;
    int32_t wave_sizze_44764;
    int32_t group_tid_44763;
    
    global_tid_44761 = get_global_id(0);
    local_tid_44762 = get_local_id(0);
    group_sizze_44765 = get_local_size(0);
    wave_sizze_44764 = LOCKSTEP_WIDTH;
    group_tid_44763 = get_group_id(0);
    
    int32_t phys_tid_30476;
    
    phys_tid_30476 = global_tid_44761;
    
    __local char *red_arr_mem_44766;
    
    red_arr_mem_44766 = (__local char *) red_arr_mem_44766_backing_0;
    
    __local char *sync_arr_mem_44768;
    
    sync_arr_mem_44768 = (__local char *) sync_arr_mem_44768_backing_1;
    
    int32_t phys_group_id_44770;
    
    phys_group_id_44770 = get_group_id(0);
    for (int32_t i_44771 = 0; i_44771 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44754) - phys_group_id_44770,
                   sext_i64_i32(num_groups_30615)); i_44771++) {
        int32_t virt_group_id_44772 = phys_group_id_44770 + i_44771 *
                sext_i64_i32(num_groups_30615);
        int32_t flat_segment_id_44773 = squot32(virt_group_id_44772,
                                                sext_i64_i32(groups_per_segment_44752));
        int64_t global_tid_44774 = srem64(sext_i32_i64(virt_group_id_44772) *
                                          segred_group_sizze_30614 +
                                          sext_i32_i64(local_tid_44762),
                                          segred_group_sizze_30614 *
                                          groups_per_segment_44752);
        int64_t gtid_30463 = squot64(sext_i32_i64(flat_segment_id_44773),
                                     i32_res_27951 * i32_res_27951);
        int64_t gtid_30464 = squot64(sext_i32_i64(flat_segment_id_44773) -
                                     squot64(sext_i32_i64(flat_segment_id_44773),
                                             i32_res_27951 * i32_res_27951) *
                                     (i32_res_27951 * i32_res_27951),
                                     i32_res_27951);
        int64_t gtid_30465 = sext_i32_i64(flat_segment_id_44773) -
                squot64(sext_i32_i64(flat_segment_id_44773), i32_res_27951 *
                        i32_res_27951) * (i32_res_27951 * i32_res_27951) -
                squot64(sext_i32_i64(flat_segment_id_44773) -
                        squot64(sext_i32_i64(flat_segment_id_44773),
                                i32_res_27951 * i32_res_27951) *
                        (i32_res_27951 * i32_res_27951), i32_res_27951) *
                i32_res_27951;
        int64_t gtid_30475;
        float x_acc_44775;
        int64_t chunk_sizze_44776;
        
        chunk_sizze_44776 = smin64(elements_per_thread_44753,
                                   sdiv_up64(i32_res_27945 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44774)),
                                             threads_per_segment_44756));
        
        float x_30618;
        float x_30619;
        
        // neutral-initialise the accumulators
        {
            x_acc_44775 = 0.0F;
        }
        for (int64_t i_44780 = 0; i_44780 < chunk_sizze_44776; i_44780++) {
            gtid_30475 = sext_i32_i64(sext_i64_i32(global_tid_44774)) +
                threads_per_segment_44756 * i_44780;
            // apply map function
            {
                float x_30624 = ((__global
                                  float *) images_mem_43378)[gtid_30463 *
                                                             N_27933 +
                                                             gtid_30475];
                float x_30625 = ((__global
                                  float *) binop_p_mem_43387)[gtid_30464 *
                                                              N_27931 +
                                                              gtid_30475];
                float x_30626 = ((__global float *) mem_43528)[gtid_30465 *
                                                               N_27931 +
                                                               gtid_30475];
                float x_30627 = x_30625 * x_30626;
                bool isnan_res_30628;
                
                isnan_res_30628 = futrts_isnan32(x_30624);
                
                float y_30629;
                
                if (isnan_res_30628) {
                    y_30629 = 0.0F;
                } else {
                    y_30629 = 1.0F;
                }
                
                float defunc_2_f_res_30630 = x_30627 * y_30629;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30618 = x_acc_44775;
                }
                // load new values
                {
                    x_30619 = defunc_2_f_res_30630;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30620 = x_30618 + x_30619;
                    
                    // store in accumulator
                    {
                        x_acc_44775 = defunc_1_op_res_30620;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30618 = x_acc_44775;
            ((__local
              float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762)] =
                x_30618;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44781;
        int32_t skip_waves_44782;
        
        skip_waves_44782 = 1;
        
        float x_44777;
        float x_44778;
        
        offset_44781 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44762,
                      sext_i64_i32(segred_group_sizze_30614))) {
                x_44777 = ((__local
                            float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762 +
                                                        offset_44781)];
            }
        }
        offset_44781 = 1;
        while (slt32(offset_44781, wave_sizze_44764)) {
            if (slt32(local_tid_44762 + offset_44781,
                      sext_i64_i32(segred_group_sizze_30614)) &&
                ((local_tid_44762 - squot32(local_tid_44762, wave_sizze_44764) *
                  wave_sizze_44764) & (2 * offset_44781 - 1)) == 0) {
                // read array element
                {
                    x_44778 = ((volatile __local
                                float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762 +
                                                            offset_44781)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44779 = x_44777 + x_44778;
                    
                    x_44777 = defunc_1_op_res_44779;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762)] =
                        x_44777;
                }
            }
            offset_44781 *= 2;
        }
        while (slt32(skip_waves_44782,
                     squot32(sext_i64_i32(segred_group_sizze_30614) +
                             wave_sizze_44764 - 1, wave_sizze_44764))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44781 = skip_waves_44782 * wave_sizze_44764;
            if (slt32(local_tid_44762 + offset_44781,
                      sext_i64_i32(segred_group_sizze_30614)) &&
                ((local_tid_44762 - squot32(local_tid_44762, wave_sizze_44764) *
                  wave_sizze_44764) == 0 && (squot32(local_tid_44762,
                                                     wave_sizze_44764) & (2 *
                                                                          skip_waves_44782 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44778 = ((__local
                                float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762 +
                                                            offset_44781)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44779 = x_44777 + x_44778;
                    
                    x_44777 = defunc_1_op_res_44779;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762)] =
                        x_44777;
                }
            }
            skip_waves_44782 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44762) == 0) {
                x_acc_44775 = x_44777;
            }
        }
        if (groups_per_segment_44752 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44762 == 0) {
                    ((__global float *) mem_43533)[gtid_30463 * (i32_res_27951 *
                                                                 i32_res_27951) +
                                                   gtid_30464 * i32_res_27951 +
                                                   gtid_30465] = x_acc_44775;
                }
            }
        } else {
            int32_t old_counter_44783;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44762 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44757)[sext_i32_i64(virt_group_id_44772) *
                                                        segred_group_sizze_30614] =
                        x_acc_44775;
                    mem_fence_global();
                    old_counter_44783 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44759)[sext_i32_i64(srem32(flat_segment_id_44773,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44768)[0] =
                        old_counter_44783 == groups_per_segment_44752 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44784;
            
            is_last_group_44784 = ((__local bool *) sync_arr_mem_44768)[0];
            if (is_last_group_44784) {
                if (local_tid_44762 == 0) {
                    old_counter_44783 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44759)[sext_i32_i64(srem32(flat_segment_id_44773,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44752));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44785 =
                            sdiv_up64(groups_per_segment_44752,
                                      segred_group_sizze_30614);
                    
                    x_30618 = 0.0F;
                    for (int64_t i_44786 = 0; i_44786 < read_per_thread_44785;
                         i_44786++) {
                        int64_t group_res_id_44787 =
                                sext_i32_i64(local_tid_44762) *
                                read_per_thread_44785 + i_44786;
                        int64_t index_of_group_res_44788 =
                                sext_i32_i64(flat_segment_id_44773) *
                                groups_per_segment_44752 + group_res_id_44787;
                        
                        if (slt64(group_res_id_44787,
                                  groups_per_segment_44752)) {
                            x_30619 = ((__global
                                        float *) group_res_arr_mem_44757)[index_of_group_res_44788 *
                                                                          segred_group_sizze_30614];
                            
                            float defunc_1_op_res_30620;
                            
                            defunc_1_op_res_30620 = x_30618 + x_30619;
                            x_30618 = defunc_1_op_res_30620;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762)] =
                    x_30618;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44789;
                    int32_t skip_waves_44790;
                    
                    skip_waves_44790 = 1;
                    
                    float x_44777;
                    float x_44778;
                    
                    offset_44789 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44762,
                                  sext_i64_i32(segred_group_sizze_30614))) {
                            x_44777 = ((__local
                                        float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762 +
                                                                    offset_44789)];
                        }
                    }
                    offset_44789 = 1;
                    while (slt32(offset_44789, wave_sizze_44764)) {
                        if (slt32(local_tid_44762 + offset_44789,
                                  sext_i64_i32(segred_group_sizze_30614)) &&
                            ((local_tid_44762 - squot32(local_tid_44762,
                                                        wave_sizze_44764) *
                              wave_sizze_44764) & (2 * offset_44789 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44778 = ((volatile __local
                                            float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762 +
                                                                        offset_44789)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44779 = x_44777 + x_44778;
                                
                                x_44777 = defunc_1_op_res_44779;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762)] =
                                    x_44777;
                            }
                        }
                        offset_44789 *= 2;
                    }
                    while (slt32(skip_waves_44790,
                                 squot32(sext_i64_i32(segred_group_sizze_30614) +
                                         wave_sizze_44764 - 1,
                                         wave_sizze_44764))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44789 = skip_waves_44790 * wave_sizze_44764;
                        if (slt32(local_tid_44762 + offset_44789,
                                  sext_i64_i32(segred_group_sizze_30614)) &&
                            ((local_tid_44762 - squot32(local_tid_44762,
                                                        wave_sizze_44764) *
                              wave_sizze_44764) == 0 &&
                             (squot32(local_tid_44762, wave_sizze_44764) & (2 *
                                                                            skip_waves_44790 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44778 = ((__local
                                            float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762 +
                                                                        offset_44789)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44779 = x_44777 + x_44778;
                                
                                x_44777 = defunc_1_op_res_44779;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44766)[sext_i32_i64(local_tid_44762)] =
                                    x_44777;
                            }
                        }
                        skip_waves_44790 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44762 == 0) {
                            ((__global float *) mem_43533)[gtid_30463 *
                                                           (i32_res_27951 *
                                                            i32_res_27951) +
                                                           gtid_30464 *
                                                           i32_res_27951 +
                                                           gtid_30465] =
                                x_44777;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30614
}
__kernel void mainDetailedzisegred_large_31523(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44964_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44962_backing_aligned_1,
                                               int64_t N_27931, int64_t N_27933,
                                               int64_t i32_res_27945,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_31576,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43840,
                                               int64_t groups_per_segment_44948,
                                               int64_t elements_per_thread_44949,
                                               int64_t virt_num_groups_44950,
                                               int64_t threads_per_segment_44952,
                                               __global
                                               unsigned char *group_res_arr_mem_44953,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44955)
{
    #define segred_group_sizze_31575 (mainDetailedzisegred_group_sizze_31517)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44964_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44964_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44962_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44962_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44957;
    int32_t local_tid_44958;
    int64_t group_sizze_44961;
    int32_t wave_sizze_44960;
    int32_t group_tid_44959;
    
    global_tid_44957 = get_global_id(0);
    local_tid_44958 = get_local_id(0);
    group_sizze_44961 = get_local_size(0);
    wave_sizze_44960 = LOCKSTEP_WIDTH;
    group_tid_44959 = get_group_id(0);
    
    int32_t phys_tid_31523;
    
    phys_tid_31523 = global_tid_44957;
    
    __local char *red_arr_mem_44962;
    
    red_arr_mem_44962 = (__local char *) red_arr_mem_44962_backing_0;
    
    __local char *sync_arr_mem_44964;
    
    sync_arr_mem_44964 = (__local char *) sync_arr_mem_44964_backing_1;
    
    int32_t phys_group_id_44966;
    
    phys_group_id_44966 = get_group_id(0);
    for (int32_t i_44967 = 0; i_44967 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44950) - phys_group_id_44966,
                   sext_i64_i32(num_groups_31576)); i_44967++) {
        int32_t virt_group_id_44968 = phys_group_id_44966 + i_44967 *
                sext_i64_i32(num_groups_31576);
        int32_t flat_segment_id_44969 = squot32(virt_group_id_44968,
                                                sext_i64_i32(groups_per_segment_44948));
        int64_t global_tid_44970 = srem64(sext_i32_i64(virt_group_id_44968) *
                                          segred_group_sizze_31575 +
                                          sext_i32_i64(local_tid_44958),
                                          segred_group_sizze_31575 *
                                          groups_per_segment_44948);
        int64_t gtid_31512 = squot64(sext_i32_i64(flat_segment_id_44969),
                                     i32_res_27951);
        int64_t gtid_31513 = sext_i32_i64(flat_segment_id_44969) -
                squot64(sext_i32_i64(flat_segment_id_44969), i32_res_27951) *
                i32_res_27951;
        int64_t gtid_31522;
        float x_acc_44971;
        int64_t chunk_sizze_44972;
        
        chunk_sizze_44972 = smin64(elements_per_thread_44949,
                                   sdiv_up64(i32_res_27945 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44970)),
                                             threads_per_segment_44952));
        
        float x_31579;
        float x_31580;
        
        // neutral-initialise the accumulators
        {
            x_acc_44971 = 0.0F;
        }
        for (int64_t i_44976 = 0; i_44976 < chunk_sizze_44972; i_44976++) {
            gtid_31522 = sext_i32_i64(sext_i64_i32(global_tid_44970)) +
                threads_per_segment_44952 * i_44976;
            // apply map function
            {
                float x_31585 = ((__global
                                  float *) images_mem_43378)[gtid_31512 *
                                                             N_27933 +
                                                             gtid_31522];
                bool isnan_res_31586;
                
                isnan_res_31586 = futrts_isnan32(x_31585);
                
                float defunc_1_f_res_31587;
                
                if (isnan_res_31586) {
                    defunc_1_f_res_31587 = 0.0F;
                } else {
                    float x_31584 = ((__global
                                      float *) binop_p_mem_43387)[gtid_31513 *
                                                                  N_27931 +
                                                                  gtid_31522];
                    float defunc_1_f_res_f_res_31588 = x_31584 * x_31585;
                    
                    defunc_1_f_res_31587 = defunc_1_f_res_f_res_31588;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_31579 = x_acc_44971;
                }
                // load new values
                {
                    x_31580 = defunc_1_f_res_31587;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31581 = x_31579 + x_31580;
                    
                    // store in accumulator
                    {
                        x_acc_44971 = defunc_1_op_res_31581;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31579 = x_acc_44971;
            ((__local
              float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958)] =
                x_31579;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44977;
        int32_t skip_waves_44978;
        
        skip_waves_44978 = 1;
        
        float x_44973;
        float x_44974;
        
        offset_44977 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44958,
                      sext_i64_i32(segred_group_sizze_31575))) {
                x_44973 = ((__local
                            float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958 +
                                                        offset_44977)];
            }
        }
        offset_44977 = 1;
        while (slt32(offset_44977, wave_sizze_44960)) {
            if (slt32(local_tid_44958 + offset_44977,
                      sext_i64_i32(segred_group_sizze_31575)) &&
                ((local_tid_44958 - squot32(local_tid_44958, wave_sizze_44960) *
                  wave_sizze_44960) & (2 * offset_44977 - 1)) == 0) {
                // read array element
                {
                    x_44974 = ((volatile __local
                                float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958 +
                                                            offset_44977)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44975 = x_44973 + x_44974;
                    
                    x_44973 = defunc_1_op_res_44975;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958)] =
                        x_44973;
                }
            }
            offset_44977 *= 2;
        }
        while (slt32(skip_waves_44978,
                     squot32(sext_i64_i32(segred_group_sizze_31575) +
                             wave_sizze_44960 - 1, wave_sizze_44960))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44977 = skip_waves_44978 * wave_sizze_44960;
            if (slt32(local_tid_44958 + offset_44977,
                      sext_i64_i32(segred_group_sizze_31575)) &&
                ((local_tid_44958 - squot32(local_tid_44958, wave_sizze_44960) *
                  wave_sizze_44960) == 0 && (squot32(local_tid_44958,
                                                     wave_sizze_44960) & (2 *
                                                                          skip_waves_44978 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44974 = ((__local
                                float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958 +
                                                            offset_44977)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44975 = x_44973 + x_44974;
                    
                    x_44973 = defunc_1_op_res_44975;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958)] =
                        x_44973;
                }
            }
            skip_waves_44978 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44958) == 0) {
                x_acc_44971 = x_44973;
            }
        }
        if (groups_per_segment_44948 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44958 == 0) {
                    ((__global float *) mem_43840)[gtid_31512 * i32_res_27951 +
                                                   gtid_31513] = x_acc_44971;
                }
            }
        } else {
            int32_t old_counter_44979;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44958 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44953)[sext_i32_i64(virt_group_id_44968) *
                                                        segred_group_sizze_31575] =
                        x_acc_44971;
                    mem_fence_global();
                    old_counter_44979 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44955)[sext_i32_i64(srem32(flat_segment_id_44969,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44964)[0] =
                        old_counter_44979 == groups_per_segment_44948 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44980;
            
            is_last_group_44980 = ((__local bool *) sync_arr_mem_44964)[0];
            if (is_last_group_44980) {
                if (local_tid_44958 == 0) {
                    old_counter_44979 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44955)[sext_i32_i64(srem32(flat_segment_id_44969,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44948));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44981 =
                            sdiv_up64(groups_per_segment_44948,
                                      segred_group_sizze_31575);
                    
                    x_31579 = 0.0F;
                    for (int64_t i_44982 = 0; i_44982 < read_per_thread_44981;
                         i_44982++) {
                        int64_t group_res_id_44983 =
                                sext_i32_i64(local_tid_44958) *
                                read_per_thread_44981 + i_44982;
                        int64_t index_of_group_res_44984 =
                                sext_i32_i64(flat_segment_id_44969) *
                                groups_per_segment_44948 + group_res_id_44983;
                        
                        if (slt64(group_res_id_44983,
                                  groups_per_segment_44948)) {
                            x_31580 = ((__global
                                        float *) group_res_arr_mem_44953)[index_of_group_res_44984 *
                                                                          segred_group_sizze_31575];
                            
                            float defunc_1_op_res_31581;
                            
                            defunc_1_op_res_31581 = x_31579 + x_31580;
                            x_31579 = defunc_1_op_res_31581;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958)] =
                    x_31579;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44985;
                    int32_t skip_waves_44986;
                    
                    skip_waves_44986 = 1;
                    
                    float x_44973;
                    float x_44974;
                    
                    offset_44985 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44958,
                                  sext_i64_i32(segred_group_sizze_31575))) {
                            x_44973 = ((__local
                                        float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958 +
                                                                    offset_44985)];
                        }
                    }
                    offset_44985 = 1;
                    while (slt32(offset_44985, wave_sizze_44960)) {
                        if (slt32(local_tid_44958 + offset_44985,
                                  sext_i64_i32(segred_group_sizze_31575)) &&
                            ((local_tid_44958 - squot32(local_tid_44958,
                                                        wave_sizze_44960) *
                              wave_sizze_44960) & (2 * offset_44985 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44974 = ((volatile __local
                                            float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958 +
                                                                        offset_44985)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44975 = x_44973 + x_44974;
                                
                                x_44973 = defunc_1_op_res_44975;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958)] =
                                    x_44973;
                            }
                        }
                        offset_44985 *= 2;
                    }
                    while (slt32(skip_waves_44986,
                                 squot32(sext_i64_i32(segred_group_sizze_31575) +
                                         wave_sizze_44960 - 1,
                                         wave_sizze_44960))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44985 = skip_waves_44986 * wave_sizze_44960;
                        if (slt32(local_tid_44958 + offset_44985,
                                  sext_i64_i32(segred_group_sizze_31575)) &&
                            ((local_tid_44958 - squot32(local_tid_44958,
                                                        wave_sizze_44960) *
                              wave_sizze_44960) == 0 &&
                             (squot32(local_tid_44958, wave_sizze_44960) & (2 *
                                                                            skip_waves_44986 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44974 = ((__local
                                            float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958 +
                                                                        offset_44985)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44975 = x_44973 + x_44974;
                                
                                x_44973 = defunc_1_op_res_44975;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44962)[sext_i32_i64(local_tid_44958)] =
                                    x_44973;
                            }
                        }
                        skip_waves_44986 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44958 == 0) {
                            ((__global float *) mem_43840)[gtid_31512 *
                                                           i32_res_27951 +
                                                           gtid_31513] =
                                x_44973;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31575
}
__kernel void mainDetailedzisegred_large_31660(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45052_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45050_backing_aligned_1,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_31709,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43625,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43846,
                                               __global
                                               unsigned char *mem_43906,
                                               int64_t groups_per_segment_45036,
                                               int64_t elements_per_thread_45037,
                                               int64_t virt_num_groups_45038,
                                               int64_t threads_per_segment_45040,
                                               __global
                                               unsigned char *group_res_arr_mem_45041,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45043)
{
    #define segred_group_sizze_31708 (mainDetailedzisegred_group_sizze_31654)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45052_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45052_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45050_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45050_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45045;
    int32_t local_tid_45046;
    int64_t group_sizze_45049;
    int32_t wave_sizze_45048;
    int32_t group_tid_45047;
    
    global_tid_45045 = get_global_id(0);
    local_tid_45046 = get_local_id(0);
    group_sizze_45049 = get_local_size(0);
    wave_sizze_45048 = LOCKSTEP_WIDTH;
    group_tid_45047 = get_group_id(0);
    
    int32_t phys_tid_31660;
    
    phys_tid_31660 = global_tid_45045;
    
    __local char *red_arr_mem_45050;
    
    red_arr_mem_45050 = (__local char *) red_arr_mem_45050_backing_0;
    
    __local char *sync_arr_mem_45052;
    
    sync_arr_mem_45052 = (__local char *) sync_arr_mem_45052_backing_1;
    
    int32_t phys_group_id_45054;
    
    phys_group_id_45054 = get_group_id(0);
    for (int32_t i_45055 = 0; i_45055 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45038) - phys_group_id_45054,
                   sext_i64_i32(num_groups_31709)); i_45055++) {
        int32_t virt_group_id_45056 = phys_group_id_45054 + i_45055 *
                sext_i64_i32(num_groups_31709);
        int32_t flat_segment_id_45057 = squot32(virt_group_id_45056,
                                                sext_i64_i32(groups_per_segment_45036));
        int64_t global_tid_45058 = srem64(sext_i32_i64(virt_group_id_45056) *
                                          segred_group_sizze_31708 +
                                          sext_i32_i64(local_tid_45046),
                                          segred_group_sizze_31708 *
                                          groups_per_segment_45036);
        int64_t gtid_31649 = squot64(sext_i32_i64(flat_segment_id_45057),
                                     i32_res_27951);
        int64_t gtid_31650 = sext_i32_i64(flat_segment_id_45057) -
                squot64(sext_i32_i64(flat_segment_id_45057), i32_res_27951) *
                i32_res_27951;
        int64_t gtid_31659;
        float x_acc_45059;
        int64_t chunk_sizze_45060;
        
        chunk_sizze_45060 = smin64(elements_per_thread_45037,
                                   sdiv_up64(i32_res_27951 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45058)),
                                             threads_per_segment_45040));
        
        float x_31712;
        float x_31713;
        
        // neutral-initialise the accumulators
        {
            x_acc_45059 = 0.0F;
        }
        for (int64_t i_45064 = 0; i_45064 < chunk_sizze_45060; i_45064++) {
            gtid_31659 = sext_i32_i64(sext_i64_i32(global_tid_45058)) +
                threads_per_segment_45040 * i_45064;
            // apply map function
            {
                float x_31718 = ((__global
                                  float *) defunc_3_map_res_mem_43846)[gtid_31649 *
                                                                       i32_res_27951 +
                                                                       gtid_31659];
                float x_31719 = ((__global
                                  float *) defunc_3_map_res_mem_43625)[gtid_31649 *
                                                                       (i32_res_27951 *
                                                                        i32_res_27951) +
                                                                       gtid_31650 *
                                                                       i32_res_27951 +
                                                                       gtid_31659];
                float defunc_1_f_res_31720 = x_31718 * x_31719;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31712 = x_acc_45059;
                }
                // load new values
                {
                    x_31713 = defunc_1_f_res_31720;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31714 = x_31712 + x_31713;
                    
                    // store in accumulator
                    {
                        x_acc_45059 = defunc_1_op_res_31714;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31712 = x_acc_45059;
            ((__local
              float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046)] =
                x_31712;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45065;
        int32_t skip_waves_45066;
        
        skip_waves_45066 = 1;
        
        float x_45061;
        float x_45062;
        
        offset_45065 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45046,
                      sext_i64_i32(segred_group_sizze_31708))) {
                x_45061 = ((__local
                            float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046 +
                                                        offset_45065)];
            }
        }
        offset_45065 = 1;
        while (slt32(offset_45065, wave_sizze_45048)) {
            if (slt32(local_tid_45046 + offset_45065,
                      sext_i64_i32(segred_group_sizze_31708)) &&
                ((local_tid_45046 - squot32(local_tid_45046, wave_sizze_45048) *
                  wave_sizze_45048) & (2 * offset_45065 - 1)) == 0) {
                // read array element
                {
                    x_45062 = ((volatile __local
                                float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046 +
                                                            offset_45065)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45063 = x_45061 + x_45062;
                    
                    x_45061 = defunc_1_op_res_45063;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046)] =
                        x_45061;
                }
            }
            offset_45065 *= 2;
        }
        while (slt32(skip_waves_45066,
                     squot32(sext_i64_i32(segred_group_sizze_31708) +
                             wave_sizze_45048 - 1, wave_sizze_45048))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45065 = skip_waves_45066 * wave_sizze_45048;
            if (slt32(local_tid_45046 + offset_45065,
                      sext_i64_i32(segred_group_sizze_31708)) &&
                ((local_tid_45046 - squot32(local_tid_45046, wave_sizze_45048) *
                  wave_sizze_45048) == 0 && (squot32(local_tid_45046,
                                                     wave_sizze_45048) & (2 *
                                                                          skip_waves_45066 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45062 = ((__local
                                float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046 +
                                                            offset_45065)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45063 = x_45061 + x_45062;
                    
                    x_45061 = defunc_1_op_res_45063;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046)] =
                        x_45061;
                }
            }
            skip_waves_45066 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45046) == 0) {
                x_acc_45059 = x_45061;
            }
        }
        if (groups_per_segment_45036 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45046 == 0) {
                    ((__global float *) mem_43906)[gtid_31649 * i32_res_27951 +
                                                   gtid_31650] = x_acc_45059;
                }
            }
        } else {
            int32_t old_counter_45067;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45046 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45041)[sext_i32_i64(virt_group_id_45056) *
                                                        segred_group_sizze_31708] =
                        x_acc_45059;
                    mem_fence_global();
                    old_counter_45067 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45043)[sext_i32_i64(srem32(flat_segment_id_45057,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45052)[0] =
                        old_counter_45067 == groups_per_segment_45036 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45068;
            
            is_last_group_45068 = ((__local bool *) sync_arr_mem_45052)[0];
            if (is_last_group_45068) {
                if (local_tid_45046 == 0) {
                    old_counter_45067 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45043)[sext_i32_i64(srem32(flat_segment_id_45057,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45036));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45069 =
                            sdiv_up64(groups_per_segment_45036,
                                      segred_group_sizze_31708);
                    
                    x_31712 = 0.0F;
                    for (int64_t i_45070 = 0; i_45070 < read_per_thread_45069;
                         i_45070++) {
                        int64_t group_res_id_45071 =
                                sext_i32_i64(local_tid_45046) *
                                read_per_thread_45069 + i_45070;
                        int64_t index_of_group_res_45072 =
                                sext_i32_i64(flat_segment_id_45057) *
                                groups_per_segment_45036 + group_res_id_45071;
                        
                        if (slt64(group_res_id_45071,
                                  groups_per_segment_45036)) {
                            x_31713 = ((__global
                                        float *) group_res_arr_mem_45041)[index_of_group_res_45072 *
                                                                          segred_group_sizze_31708];
                            
                            float defunc_1_op_res_31714;
                            
                            defunc_1_op_res_31714 = x_31712 + x_31713;
                            x_31712 = defunc_1_op_res_31714;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046)] =
                    x_31712;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45073;
                    int32_t skip_waves_45074;
                    
                    skip_waves_45074 = 1;
                    
                    float x_45061;
                    float x_45062;
                    
                    offset_45073 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45046,
                                  sext_i64_i32(segred_group_sizze_31708))) {
                            x_45061 = ((__local
                                        float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046 +
                                                                    offset_45073)];
                        }
                    }
                    offset_45073 = 1;
                    while (slt32(offset_45073, wave_sizze_45048)) {
                        if (slt32(local_tid_45046 + offset_45073,
                                  sext_i64_i32(segred_group_sizze_31708)) &&
                            ((local_tid_45046 - squot32(local_tid_45046,
                                                        wave_sizze_45048) *
                              wave_sizze_45048) & (2 * offset_45073 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45062 = ((volatile __local
                                            float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046 +
                                                                        offset_45073)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45063 = x_45061 + x_45062;
                                
                                x_45061 = defunc_1_op_res_45063;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046)] =
                                    x_45061;
                            }
                        }
                        offset_45073 *= 2;
                    }
                    while (slt32(skip_waves_45074,
                                 squot32(sext_i64_i32(segred_group_sizze_31708) +
                                         wave_sizze_45048 - 1,
                                         wave_sizze_45048))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45073 = skip_waves_45074 * wave_sizze_45048;
                        if (slt32(local_tid_45046 + offset_45073,
                                  sext_i64_i32(segred_group_sizze_31708)) &&
                            ((local_tid_45046 - squot32(local_tid_45046,
                                                        wave_sizze_45048) *
                              wave_sizze_45048) == 0 &&
                             (squot32(local_tid_45046, wave_sizze_45048) & (2 *
                                                                            skip_waves_45074 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45062 = ((__local
                                            float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046 +
                                                                        offset_45073)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45063 = x_45061 + x_45062;
                                
                                x_45061 = defunc_1_op_res_45063;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45050)[sext_i32_i64(local_tid_45046)] =
                                    x_45061;
                            }
                        }
                        skip_waves_45074 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45046 == 0) {
                            ((__global float *) mem_43906)[gtid_31649 *
                                                           i32_res_27951 +
                                                           gtid_31650] =
                                x_45061;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31708
}
__kernel void mainDetailedzisegred_large_31790(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45184_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45182_backing_aligned_1,
                                               int64_t N_27931,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_31837,
                                               __global
                                               unsigned char *mem_43394,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43912,
                                               __global
                                               unsigned char *mem_44130,
                                               int64_t groups_per_segment_45168,
                                               int64_t elements_per_thread_45169,
                                               int64_t virt_num_groups_45170,
                                               int64_t threads_per_segment_45172,
                                               __global
                                               unsigned char *group_res_arr_mem_45173,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45175)
{
    #define segred_group_sizze_31836 (mainDetailedzisegred_group_sizze_31784)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45184_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45184_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45182_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45182_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45177;
    int32_t local_tid_45178;
    int64_t group_sizze_45181;
    int32_t wave_sizze_45180;
    int32_t group_tid_45179;
    
    global_tid_45177 = get_global_id(0);
    local_tid_45178 = get_local_id(0);
    group_sizze_45181 = get_local_size(0);
    wave_sizze_45180 = LOCKSTEP_WIDTH;
    group_tid_45179 = get_group_id(0);
    
    int32_t phys_tid_31790;
    
    phys_tid_31790 = global_tid_45177;
    
    __local char *red_arr_mem_45182;
    
    red_arr_mem_45182 = (__local char *) red_arr_mem_45182_backing_0;
    
    __local char *sync_arr_mem_45184;
    
    sync_arr_mem_45184 = (__local char *) sync_arr_mem_45184_backing_1;
    
    int32_t phys_group_id_45186;
    
    phys_group_id_45186 = get_group_id(0);
    for (int32_t i_45187 = 0; i_45187 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45170) - phys_group_id_45186,
                   sext_i64_i32(num_groups_31837)); i_45187++) {
        int32_t virt_group_id_45188 = phys_group_id_45186 + i_45187 *
                sext_i64_i32(num_groups_31837);
        int32_t flat_segment_id_45189 = squot32(virt_group_id_45188,
                                                sext_i64_i32(groups_per_segment_45168));
        int64_t global_tid_45190 = srem64(sext_i32_i64(virt_group_id_45188) *
                                          segred_group_sizze_31836 +
                                          sext_i32_i64(local_tid_45178),
                                          segred_group_sizze_31836 *
                                          groups_per_segment_45168);
        int64_t gtid_31779 = squot64(sext_i32_i64(flat_segment_id_45189),
                                     N_27931);
        int64_t gtid_31780 = sext_i32_i64(flat_segment_id_45189) -
                squot64(sext_i32_i64(flat_segment_id_45189), N_27931) * N_27931;
        int64_t gtid_31789;
        float x_acc_45191;
        int64_t chunk_sizze_45192;
        
        chunk_sizze_45192 = smin64(elements_per_thread_45169,
                                   sdiv_up64(i32_res_27951 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45190)),
                                             threads_per_segment_45172));
        
        float x_31840;
        float x_31841;
        
        // neutral-initialise the accumulators
        {
            x_acc_45191 = 0.0F;
        }
        for (int64_t i_45196 = 0; i_45196 < chunk_sizze_45192; i_45196++) {
            gtid_31789 = sext_i32_i64(sext_i64_i32(global_tid_45190)) +
                threads_per_segment_45172 * i_45196;
            // apply map function
            {
                float x_31845 = ((__global
                                  float *) defunc_4_map_res_mem_43912)[gtid_31779 *
                                                                       i32_res_27951 +
                                                                       gtid_31789];
                float x_31846 = ((__global float *) mem_43394)[gtid_31780 *
                                                               i32_res_27951 +
                                                               gtid_31789];
                float defunc_1_f_res_31847 = x_31845 * x_31846;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31840 = x_acc_45191;
                }
                // load new values
                {
                    x_31841 = defunc_1_f_res_31847;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31842 = x_31840 + x_31841;
                    
                    // store in accumulator
                    {
                        x_acc_45191 = defunc_1_op_res_31842;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31840 = x_acc_45191;
            ((__local
              float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178)] =
                x_31840;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45197;
        int32_t skip_waves_45198;
        
        skip_waves_45198 = 1;
        
        float x_45193;
        float x_45194;
        
        offset_45197 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45178,
                      sext_i64_i32(segred_group_sizze_31836))) {
                x_45193 = ((__local
                            float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178 +
                                                        offset_45197)];
            }
        }
        offset_45197 = 1;
        while (slt32(offset_45197, wave_sizze_45180)) {
            if (slt32(local_tid_45178 + offset_45197,
                      sext_i64_i32(segred_group_sizze_31836)) &&
                ((local_tid_45178 - squot32(local_tid_45178, wave_sizze_45180) *
                  wave_sizze_45180) & (2 * offset_45197 - 1)) == 0) {
                // read array element
                {
                    x_45194 = ((volatile __local
                                float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178 +
                                                            offset_45197)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45195 = x_45193 + x_45194;
                    
                    x_45193 = defunc_1_op_res_45195;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178)] =
                        x_45193;
                }
            }
            offset_45197 *= 2;
        }
        while (slt32(skip_waves_45198,
                     squot32(sext_i64_i32(segred_group_sizze_31836) +
                             wave_sizze_45180 - 1, wave_sizze_45180))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45197 = skip_waves_45198 * wave_sizze_45180;
            if (slt32(local_tid_45178 + offset_45197,
                      sext_i64_i32(segred_group_sizze_31836)) &&
                ((local_tid_45178 - squot32(local_tid_45178, wave_sizze_45180) *
                  wave_sizze_45180) == 0 && (squot32(local_tid_45178,
                                                     wave_sizze_45180) & (2 *
                                                                          skip_waves_45198 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45194 = ((__local
                                float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178 +
                                                            offset_45197)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45195 = x_45193 + x_45194;
                    
                    x_45193 = defunc_1_op_res_45195;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178)] =
                        x_45193;
                }
            }
            skip_waves_45198 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45178) == 0) {
                x_acc_45191 = x_45193;
            }
        }
        if (groups_per_segment_45168 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45178 == 0) {
                    ((__global float *) mem_44130)[gtid_31779 * N_27931 +
                                                   gtid_31780] = x_acc_45191;
                }
            }
        } else {
            int32_t old_counter_45199;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45178 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45173)[sext_i32_i64(virt_group_id_45188) *
                                                        segred_group_sizze_31836] =
                        x_acc_45191;
                    mem_fence_global();
                    old_counter_45199 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45175)[sext_i32_i64(srem32(flat_segment_id_45189,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45184)[0] =
                        old_counter_45199 == groups_per_segment_45168 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45200;
            
            is_last_group_45200 = ((__local bool *) sync_arr_mem_45184)[0];
            if (is_last_group_45200) {
                if (local_tid_45178 == 0) {
                    old_counter_45199 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45175)[sext_i32_i64(srem32(flat_segment_id_45189,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45168));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45201 =
                            sdiv_up64(groups_per_segment_45168,
                                      segred_group_sizze_31836);
                    
                    x_31840 = 0.0F;
                    for (int64_t i_45202 = 0; i_45202 < read_per_thread_45201;
                         i_45202++) {
                        int64_t group_res_id_45203 =
                                sext_i32_i64(local_tid_45178) *
                                read_per_thread_45201 + i_45202;
                        int64_t index_of_group_res_45204 =
                                sext_i32_i64(flat_segment_id_45189) *
                                groups_per_segment_45168 + group_res_id_45203;
                        
                        if (slt64(group_res_id_45203,
                                  groups_per_segment_45168)) {
                            x_31841 = ((__global
                                        float *) group_res_arr_mem_45173)[index_of_group_res_45204 *
                                                                          segred_group_sizze_31836];
                            
                            float defunc_1_op_res_31842;
                            
                            defunc_1_op_res_31842 = x_31840 + x_31841;
                            x_31840 = defunc_1_op_res_31842;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178)] =
                    x_31840;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45205;
                    int32_t skip_waves_45206;
                    
                    skip_waves_45206 = 1;
                    
                    float x_45193;
                    float x_45194;
                    
                    offset_45205 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45178,
                                  sext_i64_i32(segred_group_sizze_31836))) {
                            x_45193 = ((__local
                                        float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178 +
                                                                    offset_45205)];
                        }
                    }
                    offset_45205 = 1;
                    while (slt32(offset_45205, wave_sizze_45180)) {
                        if (slt32(local_tid_45178 + offset_45205,
                                  sext_i64_i32(segred_group_sizze_31836)) &&
                            ((local_tid_45178 - squot32(local_tid_45178,
                                                        wave_sizze_45180) *
                              wave_sizze_45180) & (2 * offset_45205 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45194 = ((volatile __local
                                            float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178 +
                                                                        offset_45205)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45195 = x_45193 + x_45194;
                                
                                x_45193 = defunc_1_op_res_45195;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178)] =
                                    x_45193;
                            }
                        }
                        offset_45205 *= 2;
                    }
                    while (slt32(skip_waves_45206,
                                 squot32(sext_i64_i32(segred_group_sizze_31836) +
                                         wave_sizze_45180 - 1,
                                         wave_sizze_45180))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45205 = skip_waves_45206 * wave_sizze_45180;
                        if (slt32(local_tid_45178 + offset_45205,
                                  sext_i64_i32(segred_group_sizze_31836)) &&
                            ((local_tid_45178 - squot32(local_tid_45178,
                                                        wave_sizze_45180) *
                              wave_sizze_45180) == 0 &&
                             (squot32(local_tid_45178, wave_sizze_45180) & (2 *
                                                                            skip_waves_45206 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45194 = ((__local
                                            float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178 +
                                                                        offset_45205)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45195 = x_45193 + x_45194;
                                
                                x_45193 = defunc_1_op_res_45195;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45182)[sext_i32_i64(local_tid_45178)] =
                                    x_45193;
                            }
                        }
                        skip_waves_45206 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45178 == 0) {
                            ((__global float *) mem_44130)[gtid_31779 *
                                                           N_27931 +
                                                           gtid_31780] =
                                x_45193;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31836
}
__kernel void mainDetailedzisegred_large_32356(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45438_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45436_backing_aligned_1,
                                               int64_t N_27931,
                                               int64_t i32_res_27945,
                                               int64_t num_groups_32403,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44174,
                                               __global
                                               unsigned char *mem_44225,
                                               __global
                                               unsigned char *mem_44228,
                                               int64_t groups_per_segment_45422,
                                               int64_t elements_per_thread_45423,
                                               int64_t virt_num_groups_45424,
                                               int64_t threads_per_segment_45426,
                                               __global
                                               unsigned char *group_res_arr_mem_45427,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45429)
{
    #define segred_group_sizze_32402 (mainDetailedzisegred_group_sizze_32350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45438_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45438_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45436_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45436_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45431;
    int32_t local_tid_45432;
    int64_t group_sizze_45435;
    int32_t wave_sizze_45434;
    int32_t group_tid_45433;
    
    global_tid_45431 = get_global_id(0);
    local_tid_45432 = get_local_id(0);
    group_sizze_45435 = get_local_size(0);
    wave_sizze_45434 = LOCKSTEP_WIDTH;
    group_tid_45433 = get_group_id(0);
    
    int32_t phys_tid_32356;
    
    phys_tid_32356 = global_tid_45431;
    
    __local char *red_arr_mem_45436;
    
    red_arr_mem_45436 = (__local char *) red_arr_mem_45436_backing_0;
    
    __local char *sync_arr_mem_45438;
    
    sync_arr_mem_45438 = (__local char *) sync_arr_mem_45438_backing_1;
    
    int32_t phys_group_id_45440;
    
    phys_group_id_45440 = get_group_id(0);
    for (int32_t i_45441 = 0; i_45441 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45424) - phys_group_id_45440,
                   sext_i64_i32(num_groups_32403)); i_45441++) {
        int32_t virt_group_id_45442 = phys_group_id_45440 + i_45441 *
                sext_i64_i32(num_groups_32403);
        int32_t flat_segment_id_45443 = squot32(virt_group_id_45442,
                                                sext_i64_i32(groups_per_segment_45422));
        int64_t global_tid_45444 = srem64(sext_i32_i64(virt_group_id_45442) *
                                          segred_group_sizze_32402 +
                                          sext_i32_i64(local_tid_45432),
                                          segred_group_sizze_32402 *
                                          groups_per_segment_45422);
        int64_t gtid_32347 = sext_i32_i64(flat_segment_id_45443);
        int64_t gtid_32355;
        float x_acc_45445;
        int64_t chunk_sizze_45446;
        
        chunk_sizze_45446 = smin64(elements_per_thread_45423,
                                   sdiv_up64(i32_res_27945 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45444)),
                                             threads_per_segment_45426));
        
        float x_32406;
        float x_32407;
        
        // neutral-initialise the accumulators
        {
            x_acc_45445 = 0.0F;
        }
        for (int64_t i_45450 = 0; i_45450 < chunk_sizze_45446; i_45450++) {
            gtid_32355 = sext_i32_i64(sext_i64_i32(global_tid_45444)) +
                threads_per_segment_45426 * i_45450;
            // apply map function
            {
                int32_t defunc_0_f_res_32410 = ((__global
                                                 int32_t *) mem_44225)[gtid_32347];
                int32_t index_primexp_41417 = sext_i64_i32(gtid_32355);
                bool cond_32412 = slt32(index_primexp_41417,
                                        defunc_0_f_res_32410);
                float defunc_0_f_res_32413;
                
                if (cond_32412) {
                    int64_t i_32414 = sext_i32_i64(index_primexp_41417);
                    float defunc_0_f_res_t_res_32415 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_32347 *
                                                                                              N_27931 +
                                                                                              i_32414];
                    
                    defunc_0_f_res_32413 = defunc_0_f_res_t_res_32415;
                } else {
                    defunc_0_f_res_32413 = 0.0F;
                }
                
                float defunc_0_f_res_32416 = defunc_0_f_res_32413 *
                      defunc_0_f_res_32413;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32406 = x_acc_45445;
                }
                // load new values
                {
                    x_32407 = defunc_0_f_res_32416;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32408 = x_32406 + x_32407;
                    
                    // store in accumulator
                    {
                        x_acc_45445 = defunc_1_op_res_32408;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32406 = x_acc_45445;
            ((__local
              float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432)] =
                x_32406;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45451;
        int32_t skip_waves_45452;
        
        skip_waves_45452 = 1;
        
        float x_45447;
        float x_45448;
        
        offset_45451 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45432,
                      sext_i64_i32(segred_group_sizze_32402))) {
                x_45447 = ((__local
                            float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432 +
                                                        offset_45451)];
            }
        }
        offset_45451 = 1;
        while (slt32(offset_45451, wave_sizze_45434)) {
            if (slt32(local_tid_45432 + offset_45451,
                      sext_i64_i32(segred_group_sizze_32402)) &&
                ((local_tid_45432 - squot32(local_tid_45432, wave_sizze_45434) *
                  wave_sizze_45434) & (2 * offset_45451 - 1)) == 0) {
                // read array element
                {
                    x_45448 = ((volatile __local
                                float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432 +
                                                            offset_45451)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45449 = x_45447 + x_45448;
                    
                    x_45447 = defunc_1_op_res_45449;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432)] =
                        x_45447;
                }
            }
            offset_45451 *= 2;
        }
        while (slt32(skip_waves_45452,
                     squot32(sext_i64_i32(segred_group_sizze_32402) +
                             wave_sizze_45434 - 1, wave_sizze_45434))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45451 = skip_waves_45452 * wave_sizze_45434;
            if (slt32(local_tid_45432 + offset_45451,
                      sext_i64_i32(segred_group_sizze_32402)) &&
                ((local_tid_45432 - squot32(local_tid_45432, wave_sizze_45434) *
                  wave_sizze_45434) == 0 && (squot32(local_tid_45432,
                                                     wave_sizze_45434) & (2 *
                                                                          skip_waves_45452 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45448 = ((__local
                                float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432 +
                                                            offset_45451)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45449 = x_45447 + x_45448;
                    
                    x_45447 = defunc_1_op_res_45449;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432)] =
                        x_45447;
                }
            }
            skip_waves_45452 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45432) == 0) {
                x_acc_45445 = x_45447;
            }
        }
        if (groups_per_segment_45422 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45432 == 0) {
                    ((__global float *) mem_44228)[gtid_32347] = x_acc_45445;
                }
            }
        } else {
            int32_t old_counter_45453;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45432 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45427)[sext_i32_i64(virt_group_id_45442) *
                                                        segred_group_sizze_32402] =
                        x_acc_45445;
                    mem_fence_global();
                    old_counter_45453 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45429)[sext_i32_i64(srem32(flat_segment_id_45443,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45438)[0] =
                        old_counter_45453 == groups_per_segment_45422 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45454;
            
            is_last_group_45454 = ((__local bool *) sync_arr_mem_45438)[0];
            if (is_last_group_45454) {
                if (local_tid_45432 == 0) {
                    old_counter_45453 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45429)[sext_i32_i64(srem32(flat_segment_id_45443,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45422));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45455 =
                            sdiv_up64(groups_per_segment_45422,
                                      segred_group_sizze_32402);
                    
                    x_32406 = 0.0F;
                    for (int64_t i_45456 = 0; i_45456 < read_per_thread_45455;
                         i_45456++) {
                        int64_t group_res_id_45457 =
                                sext_i32_i64(local_tid_45432) *
                                read_per_thread_45455 + i_45456;
                        int64_t index_of_group_res_45458 =
                                sext_i32_i64(flat_segment_id_45443) *
                                groups_per_segment_45422 + group_res_id_45457;
                        
                        if (slt64(group_res_id_45457,
                                  groups_per_segment_45422)) {
                            x_32407 = ((__global
                                        float *) group_res_arr_mem_45427)[index_of_group_res_45458 *
                                                                          segred_group_sizze_32402];
                            
                            float defunc_1_op_res_32408;
                            
                            defunc_1_op_res_32408 = x_32406 + x_32407;
                            x_32406 = defunc_1_op_res_32408;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432)] =
                    x_32406;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45459;
                    int32_t skip_waves_45460;
                    
                    skip_waves_45460 = 1;
                    
                    float x_45447;
                    float x_45448;
                    
                    offset_45459 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45432,
                                  sext_i64_i32(segred_group_sizze_32402))) {
                            x_45447 = ((__local
                                        float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432 +
                                                                    offset_45459)];
                        }
                    }
                    offset_45459 = 1;
                    while (slt32(offset_45459, wave_sizze_45434)) {
                        if (slt32(local_tid_45432 + offset_45459,
                                  sext_i64_i32(segred_group_sizze_32402)) &&
                            ((local_tid_45432 - squot32(local_tid_45432,
                                                        wave_sizze_45434) *
                              wave_sizze_45434) & (2 * offset_45459 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45448 = ((volatile __local
                                            float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432 +
                                                                        offset_45459)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45449 = x_45447 + x_45448;
                                
                                x_45447 = defunc_1_op_res_45449;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432)] =
                                    x_45447;
                            }
                        }
                        offset_45459 *= 2;
                    }
                    while (slt32(skip_waves_45460,
                                 squot32(sext_i64_i32(segred_group_sizze_32402) +
                                         wave_sizze_45434 - 1,
                                         wave_sizze_45434))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45459 = skip_waves_45460 * wave_sizze_45434;
                        if (slt32(local_tid_45432 + offset_45459,
                                  sext_i64_i32(segred_group_sizze_32402)) &&
                            ((local_tid_45432 - squot32(local_tid_45432,
                                                        wave_sizze_45434) *
                              wave_sizze_45434) == 0 &&
                             (squot32(local_tid_45432, wave_sizze_45434) & (2 *
                                                                            skip_waves_45460 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45448 = ((__local
                                            float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432 +
                                                                        offset_45459)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45449 = x_45447 + x_45448;
                                
                                x_45447 = defunc_1_op_res_45449;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45436)[sext_i32_i64(local_tid_45432)] =
                                    x_45447;
                            }
                        }
                        skip_waves_45460 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45432 == 0) {
                            ((__global float *) mem_44228)[gtid_32347] =
                                x_45447;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32402
}
__kernel void mainDetailedzisegred_large_32377(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45378_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45376_backing_aligned_1,
                                               int64_t N_27933,
                                               int64_t i32_res_27945,
                                               int64_t num_groups_32389,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *mem_44225,
                                               int64_t groups_per_segment_45362,
                                               int64_t elements_per_thread_45363,
                                               int64_t virt_num_groups_45364,
                                               int64_t threads_per_segment_45366,
                                               __global
                                               unsigned char *group_res_arr_mem_45367,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45369)
{
    #define segred_group_sizze_32388 (mainDetailedzisegred_group_sizze_32371)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45378_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45378_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45376_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45376_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45371;
    int32_t local_tid_45372;
    int64_t group_sizze_45375;
    int32_t wave_sizze_45374;
    int32_t group_tid_45373;
    
    global_tid_45371 = get_global_id(0);
    local_tid_45372 = get_local_id(0);
    group_sizze_45375 = get_local_size(0);
    wave_sizze_45374 = LOCKSTEP_WIDTH;
    group_tid_45373 = get_group_id(0);
    
    int32_t phys_tid_32377;
    
    phys_tid_32377 = global_tid_45371;
    
    __local char *red_arr_mem_45376;
    
    red_arr_mem_45376 = (__local char *) red_arr_mem_45376_backing_0;
    
    __local char *sync_arr_mem_45378;
    
    sync_arr_mem_45378 = (__local char *) sync_arr_mem_45378_backing_1;
    
    int32_t phys_group_id_45380;
    
    phys_group_id_45380 = get_group_id(0);
    for (int32_t i_45381 = 0; i_45381 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45364) - phys_group_id_45380,
                   sext_i64_i32(num_groups_32389)); i_45381++) {
        int32_t virt_group_id_45382 = phys_group_id_45380 + i_45381 *
                sext_i64_i32(num_groups_32389);
        int32_t flat_segment_id_45383 = squot32(virt_group_id_45382,
                                                sext_i64_i32(groups_per_segment_45362));
        int64_t global_tid_45384 = srem64(sext_i32_i64(virt_group_id_45382) *
                                          segred_group_sizze_32388 +
                                          sext_i32_i64(local_tid_45372),
                                          segred_group_sizze_32388 *
                                          groups_per_segment_45362);
        int64_t gtid_32368 = sext_i32_i64(flat_segment_id_45383);
        int64_t gtid_32376;
        int32_t x_acc_45385;
        int64_t chunk_sizze_45386;
        
        chunk_sizze_45386 = smin64(elements_per_thread_45363,
                                   sdiv_up64(i32_res_27945 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45384)),
                                             threads_per_segment_45366));
        
        int32_t x_32392;
        int32_t x_32393;
        
        // neutral-initialise the accumulators
        {
            x_acc_45385 = 0;
        }
        for (int64_t i_45390 = 0; i_45390 < chunk_sizze_45386; i_45390++) {
            gtid_32376 = sext_i32_i64(sext_i64_i32(global_tid_45384)) +
                threads_per_segment_45366 * i_45390;
            // apply map function
            {
                float x_32396 = ((__global
                                  float *) images_mem_43378)[gtid_32368 *
                                                             N_27933 +
                                                             gtid_32376];
                bool isnan_res_32397;
                
                isnan_res_32397 = futrts_isnan32(x_32396);
                
                bool cond_32398 = !isnan_res_32397;
                int32_t defunc_0_f_res_32399 = btoi_bool_i32(cond_32398);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32392 = x_acc_45385;
                }
                // load new values
                {
                    x_32393 = defunc_0_f_res_32399;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_32394 = add32(x_32392, x_32393);
                    
                    // store in accumulator
                    {
                        x_acc_45385 = defunc_1_op_res_32394;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32392 = x_acc_45385;
            ((__local
              int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372)] =
                x_32392;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45391;
        int32_t skip_waves_45392;
        
        skip_waves_45392 = 1;
        
        int32_t x_45387;
        int32_t x_45388;
        
        offset_45391 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45372,
                      sext_i64_i32(segred_group_sizze_32388))) {
                x_45387 = ((__local
                            int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372 +
                                                          offset_45391)];
            }
        }
        offset_45391 = 1;
        while (slt32(offset_45391, wave_sizze_45374)) {
            if (slt32(local_tid_45372 + offset_45391,
                      sext_i64_i32(segred_group_sizze_32388)) &&
                ((local_tid_45372 - squot32(local_tid_45372, wave_sizze_45374) *
                  wave_sizze_45374) & (2 * offset_45391 - 1)) == 0) {
                // read array element
                {
                    x_45388 = ((volatile __local
                                int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372 +
                                                              offset_45391)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45389 = add32(x_45387, x_45388);
                    
                    x_45387 = defunc_1_op_res_45389;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372)] =
                        x_45387;
                }
            }
            offset_45391 *= 2;
        }
        while (slt32(skip_waves_45392,
                     squot32(sext_i64_i32(segred_group_sizze_32388) +
                             wave_sizze_45374 - 1, wave_sizze_45374))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45391 = skip_waves_45392 * wave_sizze_45374;
            if (slt32(local_tid_45372 + offset_45391,
                      sext_i64_i32(segred_group_sizze_32388)) &&
                ((local_tid_45372 - squot32(local_tid_45372, wave_sizze_45374) *
                  wave_sizze_45374) == 0 && (squot32(local_tid_45372,
                                                     wave_sizze_45374) & (2 *
                                                                          skip_waves_45392 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45388 = ((__local
                                int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372 +
                                                              offset_45391)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45389 = add32(x_45387, x_45388);
                    
                    x_45387 = defunc_1_op_res_45389;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372)] =
                        x_45387;
                }
            }
            skip_waves_45392 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45372) == 0) {
                x_acc_45385 = x_45387;
            }
        }
        if (groups_per_segment_45362 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45372 == 0) {
                    ((__global int32_t *) mem_44225)[gtid_32368] = x_acc_45385;
                }
            }
        } else {
            int32_t old_counter_45393;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45372 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45367)[sext_i32_i64(virt_group_id_45382) *
                                                          segred_group_sizze_32388] =
                        x_acc_45385;
                    mem_fence_global();
                    old_counter_45393 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45369)[sext_i32_i64(srem32(flat_segment_id_45383,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45378)[0] =
                        old_counter_45393 == groups_per_segment_45362 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45394;
            
            is_last_group_45394 = ((__local bool *) sync_arr_mem_45378)[0];
            if (is_last_group_45394) {
                if (local_tid_45372 == 0) {
                    old_counter_45393 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45369)[sext_i32_i64(srem32(flat_segment_id_45383,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45362));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45395 =
                            sdiv_up64(groups_per_segment_45362,
                                      segred_group_sizze_32388);
                    
                    x_32392 = 0;
                    for (int64_t i_45396 = 0; i_45396 < read_per_thread_45395;
                         i_45396++) {
                        int64_t group_res_id_45397 =
                                sext_i32_i64(local_tid_45372) *
                                read_per_thread_45395 + i_45396;
                        int64_t index_of_group_res_45398 =
                                sext_i32_i64(flat_segment_id_45383) *
                                groups_per_segment_45362 + group_res_id_45397;
                        
                        if (slt64(group_res_id_45397,
                                  groups_per_segment_45362)) {
                            x_32393 = ((__global
                                        int32_t *) group_res_arr_mem_45367)[index_of_group_res_45398 *
                                                                            segred_group_sizze_32388];
                            
                            int32_t defunc_1_op_res_32394;
                            
                            defunc_1_op_res_32394 = add32(x_32392, x_32393);
                            x_32392 = defunc_1_op_res_32394;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372)] =
                    x_32392;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45399;
                    int32_t skip_waves_45400;
                    
                    skip_waves_45400 = 1;
                    
                    int32_t x_45387;
                    int32_t x_45388;
                    
                    offset_45399 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45372,
                                  sext_i64_i32(segred_group_sizze_32388))) {
                            x_45387 = ((__local
                                        int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372 +
                                                                      offset_45399)];
                        }
                    }
                    offset_45399 = 1;
                    while (slt32(offset_45399, wave_sizze_45374)) {
                        if (slt32(local_tid_45372 + offset_45399,
                                  sext_i64_i32(segred_group_sizze_32388)) &&
                            ((local_tid_45372 - squot32(local_tid_45372,
                                                        wave_sizze_45374) *
                              wave_sizze_45374) & (2 * offset_45399 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45388 = ((volatile __local
                                            int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372 +
                                                                          offset_45399)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45389 = add32(x_45387,
                                                                      x_45388);
                                
                                x_45387 = defunc_1_op_res_45389;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372)] =
                                    x_45387;
                            }
                        }
                        offset_45399 *= 2;
                    }
                    while (slt32(skip_waves_45400,
                                 squot32(sext_i64_i32(segred_group_sizze_32388) +
                                         wave_sizze_45374 - 1,
                                         wave_sizze_45374))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45399 = skip_waves_45400 * wave_sizze_45374;
                        if (slt32(local_tid_45372 + offset_45399,
                                  sext_i64_i32(segred_group_sizze_32388)) &&
                            ((local_tid_45372 - squot32(local_tid_45372,
                                                        wave_sizze_45374) *
                              wave_sizze_45374) == 0 &&
                             (squot32(local_tid_45372, wave_sizze_45374) & (2 *
                                                                            skip_waves_45400 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45388 = ((__local
                                            int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372 +
                                                                          offset_45399)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45389 = add32(x_45387,
                                                                      x_45388);
                                
                                x_45387 = defunc_1_op_res_45389;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45376)[sext_i32_i64(local_tid_45372)] =
                                    x_45387;
                            }
                        }
                        skip_waves_45400 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45372 == 0) {
                            ((__global int32_t *) mem_44225)[gtid_32368] =
                                x_45387;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32388
}
__kernel void mainDetailedzisegred_large_32528(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45547_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45545_backing_aligned_1,
                                               int64_t N_27931,
                                               int64_t i32_res_28306,
                                               int64_t num_groups_32546,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44174,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44237,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44238,
                                               __global
                                               unsigned char *mem_44271,
                                               int64_t groups_per_segment_45531,
                                               int64_t elements_per_thread_45532,
                                               int64_t virt_num_groups_45533,
                                               int64_t threads_per_segment_45535,
                                               __global
                                               unsigned char *group_res_arr_mem_45536,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45538)
{
    #define segred_group_sizze_32545 (mainDetailedzisegred_group_sizze_32522)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45547_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45547_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45545_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45545_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45540;
    int32_t local_tid_45541;
    int64_t group_sizze_45544;
    int32_t wave_sizze_45543;
    int32_t group_tid_45542;
    
    global_tid_45540 = get_global_id(0);
    local_tid_45541 = get_local_id(0);
    group_sizze_45544 = get_local_size(0);
    wave_sizze_45543 = LOCKSTEP_WIDTH;
    group_tid_45542 = get_group_id(0);
    
    int32_t phys_tid_32528;
    
    phys_tid_32528 = global_tid_45540;
    
    __local char *red_arr_mem_45545;
    
    red_arr_mem_45545 = (__local char *) red_arr_mem_45545_backing_0;
    
    __local char *sync_arr_mem_45547;
    
    sync_arr_mem_45547 = (__local char *) sync_arr_mem_45547_backing_1;
    
    int32_t phys_group_id_45549;
    
    phys_group_id_45549 = get_group_id(0);
    for (int32_t i_45550 = 0; i_45550 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45533) - phys_group_id_45549,
                   sext_i64_i32(num_groups_32546)); i_45550++) {
        int32_t virt_group_id_45551 = phys_group_id_45549 + i_45550 *
                sext_i64_i32(num_groups_32546);
        int32_t flat_segment_id_45552 = squot32(virt_group_id_45551,
                                                sext_i64_i32(groups_per_segment_45531));
        int64_t global_tid_45553 = srem64(sext_i32_i64(virt_group_id_45551) *
                                          segred_group_sizze_32545 +
                                          sext_i32_i64(local_tid_45541),
                                          segred_group_sizze_32545 *
                                          groups_per_segment_45531);
        int64_t gtid_32519 = sext_i32_i64(flat_segment_id_45552);
        int64_t gtid_32527;
        float x_acc_45554;
        int64_t chunk_sizze_45555;
        
        chunk_sizze_45555 = smin64(elements_per_thread_45532,
                                   sdiv_up64(i32_res_28306 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45553)),
                                             threads_per_segment_45535));
        
        float x_32549;
        float x_32550;
        
        // neutral-initialise the accumulators
        {
            x_acc_45554 = 0.0F;
        }
        for (int64_t i_45559 = 0; i_45559 < chunk_sizze_45555; i_45559++) {
            gtid_32527 = sext_i32_i64(sext_i64_i32(global_tid_45553)) +
                threads_per_segment_45535 * i_45559;
            // apply map function
            {
                int32_t x_32554 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44237)[gtid_32519];
                int32_t index_primexp_41422 = sext_i64_i32(gtid_32527);
                bool cond_32556 = slt32(index_primexp_41422, x_32554);
                float defunc_0_f_res_32557;
                
                if (cond_32556) {
                    int32_t x_32553 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_32519];
                    int32_t x_32558 = add32(x_32553, index_primexp_41422);
                    int32_t x_32559 = sub32(x_32558, x_32554);
                    int32_t i_32560 = add32(1, x_32559);
                    int64_t i_32561 = sext_i32_i64(i_32560);
                    float defunc_0_f_res_t_res_32562 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_32519 *
                                                                                              N_27931 +
                                                                                              i_32561];
                    
                    defunc_0_f_res_32557 = defunc_0_f_res_t_res_32562;
                } else {
                    defunc_0_f_res_32557 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_32549 = x_acc_45554;
                }
                // load new values
                {
                    x_32550 = defunc_0_f_res_32557;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32551 = x_32549 + x_32550;
                    
                    // store in accumulator
                    {
                        x_acc_45554 = defunc_1_op_res_32551;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32549 = x_acc_45554;
            ((__local
              float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541)] =
                x_32549;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45560;
        int32_t skip_waves_45561;
        
        skip_waves_45561 = 1;
        
        float x_45556;
        float x_45557;
        
        offset_45560 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45541,
                      sext_i64_i32(segred_group_sizze_32545))) {
                x_45556 = ((__local
                            float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541 +
                                                        offset_45560)];
            }
        }
        offset_45560 = 1;
        while (slt32(offset_45560, wave_sizze_45543)) {
            if (slt32(local_tid_45541 + offset_45560,
                      sext_i64_i32(segred_group_sizze_32545)) &&
                ((local_tid_45541 - squot32(local_tid_45541, wave_sizze_45543) *
                  wave_sizze_45543) & (2 * offset_45560 - 1)) == 0) {
                // read array element
                {
                    x_45557 = ((volatile __local
                                float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541 +
                                                            offset_45560)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45558 = x_45556 + x_45557;
                    
                    x_45556 = defunc_1_op_res_45558;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541)] =
                        x_45556;
                }
            }
            offset_45560 *= 2;
        }
        while (slt32(skip_waves_45561,
                     squot32(sext_i64_i32(segred_group_sizze_32545) +
                             wave_sizze_45543 - 1, wave_sizze_45543))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45560 = skip_waves_45561 * wave_sizze_45543;
            if (slt32(local_tid_45541 + offset_45560,
                      sext_i64_i32(segred_group_sizze_32545)) &&
                ((local_tid_45541 - squot32(local_tid_45541, wave_sizze_45543) *
                  wave_sizze_45543) == 0 && (squot32(local_tid_45541,
                                                     wave_sizze_45543) & (2 *
                                                                          skip_waves_45561 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45557 = ((__local
                                float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541 +
                                                            offset_45560)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45558 = x_45556 + x_45557;
                    
                    x_45556 = defunc_1_op_res_45558;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541)] =
                        x_45556;
                }
            }
            skip_waves_45561 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45541) == 0) {
                x_acc_45554 = x_45556;
            }
        }
        if (groups_per_segment_45531 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45541 == 0) {
                    ((__global float *) mem_44271)[gtid_32519] = x_acc_45554;
                }
            }
        } else {
            int32_t old_counter_45562;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45541 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45536)[sext_i32_i64(virt_group_id_45551) *
                                                        segred_group_sizze_32545] =
                        x_acc_45554;
                    mem_fence_global();
                    old_counter_45562 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45538)[sext_i32_i64(srem32(flat_segment_id_45552,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45547)[0] =
                        old_counter_45562 == groups_per_segment_45531 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45563;
            
            is_last_group_45563 = ((__local bool *) sync_arr_mem_45547)[0];
            if (is_last_group_45563) {
                if (local_tid_45541 == 0) {
                    old_counter_45562 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45538)[sext_i32_i64(srem32(flat_segment_id_45552,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45531));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45564 =
                            sdiv_up64(groups_per_segment_45531,
                                      segred_group_sizze_32545);
                    
                    x_32549 = 0.0F;
                    for (int64_t i_45565 = 0; i_45565 < read_per_thread_45564;
                         i_45565++) {
                        int64_t group_res_id_45566 =
                                sext_i32_i64(local_tid_45541) *
                                read_per_thread_45564 + i_45565;
                        int64_t index_of_group_res_45567 =
                                sext_i32_i64(flat_segment_id_45552) *
                                groups_per_segment_45531 + group_res_id_45566;
                        
                        if (slt64(group_res_id_45566,
                                  groups_per_segment_45531)) {
                            x_32550 = ((__global
                                        float *) group_res_arr_mem_45536)[index_of_group_res_45567 *
                                                                          segred_group_sizze_32545];
                            
                            float defunc_1_op_res_32551;
                            
                            defunc_1_op_res_32551 = x_32549 + x_32550;
                            x_32549 = defunc_1_op_res_32551;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541)] =
                    x_32549;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45568;
                    int32_t skip_waves_45569;
                    
                    skip_waves_45569 = 1;
                    
                    float x_45556;
                    float x_45557;
                    
                    offset_45568 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45541,
                                  sext_i64_i32(segred_group_sizze_32545))) {
                            x_45556 = ((__local
                                        float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541 +
                                                                    offset_45568)];
                        }
                    }
                    offset_45568 = 1;
                    while (slt32(offset_45568, wave_sizze_45543)) {
                        if (slt32(local_tid_45541 + offset_45568,
                                  sext_i64_i32(segred_group_sizze_32545)) &&
                            ((local_tid_45541 - squot32(local_tid_45541,
                                                        wave_sizze_45543) *
                              wave_sizze_45543) & (2 * offset_45568 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45557 = ((volatile __local
                                            float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541 +
                                                                        offset_45568)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45558 = x_45556 + x_45557;
                                
                                x_45556 = defunc_1_op_res_45558;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541)] =
                                    x_45556;
                            }
                        }
                        offset_45568 *= 2;
                    }
                    while (slt32(skip_waves_45569,
                                 squot32(sext_i64_i32(segred_group_sizze_32545) +
                                         wave_sizze_45543 - 1,
                                         wave_sizze_45543))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45568 = skip_waves_45569 * wave_sizze_45543;
                        if (slt32(local_tid_45541 + offset_45568,
                                  sext_i64_i32(segred_group_sizze_32545)) &&
                            ((local_tid_45541 - squot32(local_tid_45541,
                                                        wave_sizze_45543) *
                              wave_sizze_45543) == 0 &&
                             (squot32(local_tid_45541, wave_sizze_45543) & (2 *
                                                                            skip_waves_45569 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45557 = ((__local
                                            float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541 +
                                                                        offset_45568)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45558 = x_45556 + x_45557;
                                
                                x_45556 = defunc_1_op_res_45558;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45545)[sext_i32_i64(local_tid_45541)] =
                                    x_45556;
                            }
                        }
                        skip_waves_45569 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45541 == 0) {
                            ((__global float *) mem_44271)[gtid_32519] =
                                x_45556;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32545
}
__kernel void mainDetailedzisegred_large_33633(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45732_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45730_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45728_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_45726_backing_aligned_3,
                                               int64_t iota32_arg_28331,
                                               int64_t num_groups_33804,
                                               __global
                                               unsigned char *mem_44277,
                                               __global
                                               unsigned char *mem_44332,
                                               __global
                                               unsigned char *mem_44334,
                                               __global
                                               unsigned char *mem_44338,
                                               __global
                                               unsigned char *mem_44341,
                                               __global
                                               unsigned char *mem_44343,
                                               __global
                                               unsigned char *mem_44345,
                                               __global
                                               unsigned char *mem_44348,
                                               int64_t groups_per_segment_45708,
                                               int64_t elements_per_thread_45709,
                                               int64_t virt_num_groups_45710,
                                               __global
                                               unsigned char *group_res_arr_mem_45713,
                                               __global
                                               unsigned char *group_res_arr_mem_45715,
                                               __global
                                               unsigned char *group_res_arr_mem_45717,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45719)
{
    #define segred_group_sizze_33803 (mainDetailedzisegred_group_sizze_33627)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45732_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45732_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45730_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45730_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45728_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45728_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45726_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45726_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45721;
    int32_t local_tid_45722;
    int64_t group_sizze_45725;
    int32_t wave_sizze_45724;
    int32_t group_tid_45723;
    
    global_tid_45721 = get_global_id(0);
    local_tid_45722 = get_local_id(0);
    group_sizze_45725 = get_local_size(0);
    wave_sizze_45724 = LOCKSTEP_WIDTH;
    group_tid_45723 = get_group_id(0);
    
    int32_t phys_tid_33633;
    
    phys_tid_33633 = global_tid_45721;
    
    __local char *red_arr_mem_45726;
    
    red_arr_mem_45726 = (__local char *) red_arr_mem_45726_backing_0;
    
    __local char *red_arr_mem_45728;
    
    red_arr_mem_45728 = (__local char *) red_arr_mem_45728_backing_1;
    
    __local char *red_arr_mem_45730;
    
    red_arr_mem_45730 = (__local char *) red_arr_mem_45730_backing_2;
    
    __local char *sync_arr_mem_45732;
    
    sync_arr_mem_45732 = (__local char *) sync_arr_mem_45732_backing_3;
    
    int32_t phys_group_id_45734;
    
    phys_group_id_45734 = get_group_id(0);
    for (int32_t i_45735 = 0; i_45735 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45710) - phys_group_id_45734,
                   sext_i64_i32(num_groups_33804)); i_45735++) {
        int32_t virt_group_id_45736 = phys_group_id_45734 + i_45735 *
                sext_i64_i32(num_groups_33804);
        int32_t flat_segment_id_45737 = squot32(virt_group_id_45736,
                                                sext_i64_i32(groups_per_segment_45708));
        int64_t global_tid_45738 = srem64(sext_i32_i64(virt_group_id_45736) *
                                          segred_group_sizze_33803 +
                                          sext_i32_i64(local_tid_45722),
                                          segred_group_sizze_33803 *
                                          groups_per_segment_45708);
        int64_t gtid_33624 = sext_i32_i64(flat_segment_id_45737);
        int64_t gtid_33632;
        bool x_acc_45739;
        int32_t x_acc_45740;
        float x_acc_45741;
        int64_t chunk_sizze_45742;
        int64_t starting_point_45743;
        
        starting_point_45743 = sext_i32_i64(sext_i64_i32(global_tid_45738)) *
            elements_per_thread_45709;
        
        int64_t remaining_elements_45744;
        
        remaining_elements_45744 = iota32_arg_28331 - starting_point_45743;
        if (sle64(remaining_elements_45744, 0) || sle64(iota32_arg_28331,
                                                        starting_point_45743)) {
            chunk_sizze_45742 = 0;
        } else {
            if (slt64(iota32_arg_28331,
                      (sext_i32_i64(sext_i64_i32(global_tid_45738)) + 1) *
                      elements_per_thread_45709)) {
                chunk_sizze_45742 = iota32_arg_28331 -
                    sext_i32_i64(sext_i64_i32(global_tid_45738)) *
                    elements_per_thread_45709;
            } else {
                chunk_sizze_45742 = elements_per_thread_45709;
            }
        }
        
        bool x_33810;
        int32_t x_33811;
        float x_33812;
        bool x_33813;
        int32_t x_33814;
        float x_33815;
        
        // neutral-initialise the accumulators
        {
            x_acc_45739 = 0;
            x_acc_45740 = -1;
            x_acc_45741 = 0.0F;
        }
        for (int64_t i_45759 = 0; i_45759 < elements_per_thread_45709;
             i_45759++) {
            gtid_33632 = sext_i32_i64(local_tid_45722) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45738),
                                      sext_i64_i32(segred_group_sizze_33803))) *
                 elements_per_thread_45709 + i_45759) *
                segred_group_sizze_33803;
            if (slt64(gtid_33632, iota32_arg_28331)) {
                // apply map function
                {
                    int32_t y_33824 = ((__global
                                        int32_t *) mem_44334)[gtid_33624];
                    float y_33825 = ((__global float *) mem_44332)[gtid_33624];
                    float x_33829 = ((__global float *) mem_44338)[gtid_33624 *
                                                                   iota32_arg_28331 +
                                                                   gtid_33632];
                    float x_33830 = ((__global float *) mem_44277)[gtid_33632];
                    int32_t index_primexp_41442 = sext_i64_i32(gtid_33632);
                    float defunc_0_f_res_33833 = x_33829 / y_33825;
                    bool cond_33834 = slt32(index_primexp_41442, y_33824);
                    bool isnan_res_33835;
                    
                    isnan_res_33835 = futrts_isnan32(defunc_0_f_res_33833);
                    
                    bool cond_t_res_33836 = !isnan_res_33835;
                    bool x_33837 = cond_33834 && cond_t_res_33836;
                    float abs_res_33838 = (float) fabs(defunc_0_f_res_33833);
                    bool defunc_2_f_res_t_res_33839 = x_33830 < abs_res_33838;
                    bool x_33840 = x_33837 && defunc_2_f_res_t_res_33839;
                    float defunc_1_f_res_33841;
                    
                    if (cond_33834) {
                        defunc_1_f_res_33841 = defunc_0_f_res_33833;
                    } else {
                        defunc_1_f_res_33841 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_44348)[gtid_33624 *
                                                       iota32_arg_28331 +
                                                       gtid_33632] =
                            defunc_0_f_res_33833;
                    }
                    // load accumulator
                    {
                        x_33810 = x_acc_45739;
                        x_33811 = x_acc_45740;
                        x_33812 = x_acc_45741;
                    }
                    // load new values
                    {
                        x_33813 = x_33840;
                        x_33814 = index_primexp_41442;
                        x_33815 = defunc_1_f_res_33841;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_33816;
                        int32_t defunc_1_op_res_33817;
                        
                        if (x_33810) {
                            defunc_1_op_res_33816 = x_33810;
                            defunc_1_op_res_33817 = x_33811;
                        } else {
                            bool x_33818 = x_33813 && x_33813;
                            bool x_33819 = !x_33813;
                            bool y_33820 = x_33810 && x_33819;
                            bool defunc_1_op_res_f_res_33821 = x_33818 ||
                                 y_33820;
                            int32_t defunc_1_op_res_f_res_33822;
                            
                            if (x_33813) {
                                defunc_1_op_res_f_res_33822 = x_33814;
                            } else {
                                defunc_1_op_res_f_res_33822 = x_33811;
                            }
                            defunc_1_op_res_33816 = defunc_1_op_res_f_res_33821;
                            defunc_1_op_res_33817 = defunc_1_op_res_f_res_33822;
                        }
                        
                        float defunc_1_op_res_33823 = x_33812 + x_33815;
                        
                        // store in accumulator
                        {
                            x_acc_45739 = defunc_1_op_res_33816;
                            x_acc_45740 = defunc_1_op_res_33817;
                            x_acc_45741 = defunc_1_op_res_33823;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_33810 = x_acc_45739;
                x_33811 = x_acc_45740;
                x_33812 = x_acc_45741;
                ((__local
                  bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                    x_33810;
                ((__local
                  int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                    x_33811;
                ((__local
                  float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                    x_33812;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45760;
            int32_t skip_waves_45761;
            
            skip_waves_45761 = 1;
            
            bool x_45745;
            int32_t x_45746;
            float x_45747;
            bool x_45748;
            int32_t x_45749;
            float x_45750;
            
            offset_45760 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45722,
                          sext_i64_i32(segred_group_sizze_33803))) {
                    x_45745 = ((__local
                                bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722 +
                                                           offset_45760)];
                    x_45746 = ((__local
                                int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722 +
                                                              offset_45760)];
                    x_45747 = ((__local
                                float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722 +
                                                            offset_45760)];
                }
            }
            offset_45760 = 1;
            while (slt32(offset_45760, wave_sizze_45724)) {
                if (slt32(local_tid_45722 + offset_45760,
                          sext_i64_i32(segred_group_sizze_33803)) &&
                    ((local_tid_45722 - squot32(local_tid_45722,
                                                wave_sizze_45724) *
                      wave_sizze_45724) & (2 * offset_45760 - 1)) == 0) {
                    // read array element
                    {
                        x_45748 = ((volatile __local
                                    bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722 +
                                                               offset_45760)];
                        x_45749 = ((volatile __local
                                    int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722 +
                                                                  offset_45760)];
                        x_45750 = ((volatile __local
                                    float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722 +
                                                                offset_45760)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45751;
                        int32_t defunc_1_op_res_45752;
                        
                        if (x_45745) {
                            defunc_1_op_res_45751 = x_45745;
                            defunc_1_op_res_45752 = x_45746;
                        } else {
                            bool x_45753 = x_45748 && x_45748;
                            bool x_45754 = !x_45748;
                            bool y_45755 = x_45745 && x_45754;
                            bool defunc_1_op_res_f_res_45756 = x_45753 ||
                                 y_45755;
                            int32_t defunc_1_op_res_f_res_45757;
                            
                            if (x_45748) {
                                defunc_1_op_res_f_res_45757 = x_45749;
                            } else {
                                defunc_1_op_res_f_res_45757 = x_45746;
                            }
                            defunc_1_op_res_45751 = defunc_1_op_res_f_res_45756;
                            defunc_1_op_res_45752 = defunc_1_op_res_f_res_45757;
                        }
                        
                        float defunc_1_op_res_45758 = x_45747 + x_45750;
                        
                        x_45745 = defunc_1_op_res_45751;
                        x_45746 = defunc_1_op_res_45752;
                        x_45747 = defunc_1_op_res_45758;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                            x_45745;
                        ((volatile __local
                          int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                            x_45746;
                        ((volatile __local
                          float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                            x_45747;
                    }
                }
                offset_45760 *= 2;
            }
            while (slt32(skip_waves_45761,
                         squot32(sext_i64_i32(segred_group_sizze_33803) +
                                 wave_sizze_45724 - 1, wave_sizze_45724))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45760 = skip_waves_45761 * wave_sizze_45724;
                if (slt32(local_tid_45722 + offset_45760,
                          sext_i64_i32(segred_group_sizze_33803)) &&
                    ((local_tid_45722 - squot32(local_tid_45722,
                                                wave_sizze_45724) *
                      wave_sizze_45724) == 0 && (squot32(local_tid_45722,
                                                         wave_sizze_45724) &
                                                 (2 * skip_waves_45761 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45748 = ((__local
                                    bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722 +
                                                               offset_45760)];
                        x_45749 = ((__local
                                    int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722 +
                                                                  offset_45760)];
                        x_45750 = ((__local
                                    float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722 +
                                                                offset_45760)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45751;
                        int32_t defunc_1_op_res_45752;
                        
                        if (x_45745) {
                            defunc_1_op_res_45751 = x_45745;
                            defunc_1_op_res_45752 = x_45746;
                        } else {
                            bool x_45753 = x_45748 && x_45748;
                            bool x_45754 = !x_45748;
                            bool y_45755 = x_45745 && x_45754;
                            bool defunc_1_op_res_f_res_45756 = x_45753 ||
                                 y_45755;
                            int32_t defunc_1_op_res_f_res_45757;
                            
                            if (x_45748) {
                                defunc_1_op_res_f_res_45757 = x_45749;
                            } else {
                                defunc_1_op_res_f_res_45757 = x_45746;
                            }
                            defunc_1_op_res_45751 = defunc_1_op_res_f_res_45756;
                            defunc_1_op_res_45752 = defunc_1_op_res_f_res_45757;
                        }
                        
                        float defunc_1_op_res_45758 = x_45747 + x_45750;
                        
                        x_45745 = defunc_1_op_res_45751;
                        x_45746 = defunc_1_op_res_45752;
                        x_45747 = defunc_1_op_res_45758;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                            x_45745;
                        ((__local
                          int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                            x_45746;
                        ((__local
                          float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                            x_45747;
                    }
                }
                skip_waves_45761 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45722) == 0) {
                    x_acc_45739 = x_45745;
                    x_acc_45740 = x_45746;
                    x_acc_45741 = x_45747;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45722) == 0)) {
                    x_acc_45739 = 0;
                    x_acc_45740 = -1;
                    x_acc_45741 = 0.0F;
                }
            }
        }
        x_33810 = x_acc_45739;
        x_33811 = x_acc_45740;
        x_33812 = x_acc_45741;
        if (groups_per_segment_45708 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45722 == 0) {
                    ((__global bool *) mem_44341)[gtid_33624] = x_acc_45739;
                    ((__global int32_t *) mem_44343)[gtid_33624] = x_acc_45740;
                    ((__global float *) mem_44345)[gtid_33624] = x_acc_45741;
                }
            }
        } else {
            int32_t old_counter_45762;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45722 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45713)[sext_i32_i64(virt_group_id_45736) *
                                                       segred_group_sizze_33803] =
                        x_acc_45739;
                    ((__global
                      int32_t *) group_res_arr_mem_45715)[sext_i32_i64(virt_group_id_45736) *
                                                          segred_group_sizze_33803] =
                        x_acc_45740;
                    ((__global
                      float *) group_res_arr_mem_45717)[sext_i32_i64(virt_group_id_45736) *
                                                        segred_group_sizze_33803] =
                        x_acc_45741;
                    mem_fence_global();
                    old_counter_45762 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45719)[sext_i32_i64(srem32(flat_segment_id_45737,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45732)[0] =
                        old_counter_45762 == groups_per_segment_45708 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45763;
            
            is_last_group_45763 = ((__local bool *) sync_arr_mem_45732)[0];
            if (is_last_group_45763) {
                if (local_tid_45722 == 0) {
                    old_counter_45762 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45719)[sext_i32_i64(srem32(flat_segment_id_45737,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45708));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45764 =
                            sdiv_up64(groups_per_segment_45708,
                                      segred_group_sizze_33803);
                    
                    x_33810 = 0;
                    x_33811 = -1;
                    x_33812 = 0.0F;
                    for (int64_t i_45765 = 0; i_45765 < read_per_thread_45764;
                         i_45765++) {
                        int64_t group_res_id_45766 =
                                sext_i32_i64(local_tid_45722) *
                                read_per_thread_45764 + i_45765;
                        int64_t index_of_group_res_45767 =
                                sext_i32_i64(flat_segment_id_45737) *
                                groups_per_segment_45708 + group_res_id_45766;
                        
                        if (slt64(group_res_id_45766,
                                  groups_per_segment_45708)) {
                            x_33813 = ((__global
                                        bool *) group_res_arr_mem_45713)[index_of_group_res_45767 *
                                                                         segred_group_sizze_33803];
                            x_33814 = ((__global
                                        int32_t *) group_res_arr_mem_45715)[index_of_group_res_45767 *
                                                                            segred_group_sizze_33803];
                            x_33815 = ((__global
                                        float *) group_res_arr_mem_45717)[index_of_group_res_45767 *
                                                                          segred_group_sizze_33803];
                            
                            bool defunc_1_op_res_33816;
                            int32_t defunc_1_op_res_33817;
                            
                            if (x_33810) {
                                defunc_1_op_res_33816 = x_33810;
                                defunc_1_op_res_33817 = x_33811;
                            } else {
                                bool x_33818 = x_33813 && x_33813;
                                bool x_33819 = !x_33813;
                                bool y_33820 = x_33810 && x_33819;
                                bool defunc_1_op_res_f_res_33821 = x_33818 ||
                                     y_33820;
                                int32_t defunc_1_op_res_f_res_33822;
                                
                                if (x_33813) {
                                    defunc_1_op_res_f_res_33822 = x_33814;
                                } else {
                                    defunc_1_op_res_f_res_33822 = x_33811;
                                }
                                defunc_1_op_res_33816 =
                                    defunc_1_op_res_f_res_33821;
                                defunc_1_op_res_33817 =
                                    defunc_1_op_res_f_res_33822;
                            }
                            
                            float defunc_1_op_res_33823 = x_33812 + x_33815;
                            
                            x_33810 = defunc_1_op_res_33816;
                            x_33811 = defunc_1_op_res_33817;
                            x_33812 = defunc_1_op_res_33823;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                    x_33810;
                ((__local
                  int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                    x_33811;
                ((__local
                  float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                    x_33812;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45768;
                    int32_t skip_waves_45769;
                    
                    skip_waves_45769 = 1;
                    
                    bool x_45745;
                    int32_t x_45746;
                    float x_45747;
                    bool x_45748;
                    int32_t x_45749;
                    float x_45750;
                    
                    offset_45768 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45722,
                                  sext_i64_i32(segred_group_sizze_33803))) {
                            x_45745 = ((__local
                                        bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722 +
                                                                   offset_45768)];
                            x_45746 = ((__local
                                        int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722 +
                                                                      offset_45768)];
                            x_45747 = ((__local
                                        float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722 +
                                                                    offset_45768)];
                        }
                    }
                    offset_45768 = 1;
                    while (slt32(offset_45768, wave_sizze_45724)) {
                        if (slt32(local_tid_45722 + offset_45768,
                                  sext_i64_i32(segred_group_sizze_33803)) &&
                            ((local_tid_45722 - squot32(local_tid_45722,
                                                        wave_sizze_45724) *
                              wave_sizze_45724) & (2 * offset_45768 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45748 = ((volatile __local
                                            bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722 +
                                                                       offset_45768)];
                                x_45749 = ((volatile __local
                                            int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722 +
                                                                          offset_45768)];
                                x_45750 = ((volatile __local
                                            float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722 +
                                                                        offset_45768)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45751;
                                int32_t defunc_1_op_res_45752;
                                
                                if (x_45745) {
                                    defunc_1_op_res_45751 = x_45745;
                                    defunc_1_op_res_45752 = x_45746;
                                } else {
                                    bool x_45753 = x_45748 && x_45748;
                                    bool x_45754 = !x_45748;
                                    bool y_45755 = x_45745 && x_45754;
                                    bool defunc_1_op_res_f_res_45756 =
                                         x_45753 || y_45755;
                                    int32_t defunc_1_op_res_f_res_45757;
                                    
                                    if (x_45748) {
                                        defunc_1_op_res_f_res_45757 = x_45749;
                                    } else {
                                        defunc_1_op_res_f_res_45757 = x_45746;
                                    }
                                    defunc_1_op_res_45751 =
                                        defunc_1_op_res_f_res_45756;
                                    defunc_1_op_res_45752 =
                                        defunc_1_op_res_f_res_45757;
                                }
                                
                                float defunc_1_op_res_45758 = x_45747 + x_45750;
                                
                                x_45745 = defunc_1_op_res_45751;
                                x_45746 = defunc_1_op_res_45752;
                                x_45747 = defunc_1_op_res_45758;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                                    x_45745;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                                    x_45746;
                                ((volatile __local
                                  float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                                    x_45747;
                            }
                        }
                        offset_45768 *= 2;
                    }
                    while (slt32(skip_waves_45769,
                                 squot32(sext_i64_i32(segred_group_sizze_33803) +
                                         wave_sizze_45724 - 1,
                                         wave_sizze_45724))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45768 = skip_waves_45769 * wave_sizze_45724;
                        if (slt32(local_tid_45722 + offset_45768,
                                  sext_i64_i32(segred_group_sizze_33803)) &&
                            ((local_tid_45722 - squot32(local_tid_45722,
                                                        wave_sizze_45724) *
                              wave_sizze_45724) == 0 &&
                             (squot32(local_tid_45722, wave_sizze_45724) & (2 *
                                                                            skip_waves_45769 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45748 = ((__local
                                            bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722 +
                                                                       offset_45768)];
                                x_45749 = ((__local
                                            int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722 +
                                                                          offset_45768)];
                                x_45750 = ((__local
                                            float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722 +
                                                                        offset_45768)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45751;
                                int32_t defunc_1_op_res_45752;
                                
                                if (x_45745) {
                                    defunc_1_op_res_45751 = x_45745;
                                    defunc_1_op_res_45752 = x_45746;
                                } else {
                                    bool x_45753 = x_45748 && x_45748;
                                    bool x_45754 = !x_45748;
                                    bool y_45755 = x_45745 && x_45754;
                                    bool defunc_1_op_res_f_res_45756 =
                                         x_45753 || y_45755;
                                    int32_t defunc_1_op_res_f_res_45757;
                                    
                                    if (x_45748) {
                                        defunc_1_op_res_f_res_45757 = x_45749;
                                    } else {
                                        defunc_1_op_res_f_res_45757 = x_45746;
                                    }
                                    defunc_1_op_res_45751 =
                                        defunc_1_op_res_f_res_45756;
                                    defunc_1_op_res_45752 =
                                        defunc_1_op_res_f_res_45757;
                                }
                                
                                float defunc_1_op_res_45758 = x_45747 + x_45750;
                                
                                x_45745 = defunc_1_op_res_45751;
                                x_45746 = defunc_1_op_res_45752;
                                x_45747 = defunc_1_op_res_45758;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45726)[sext_i32_i64(local_tid_45722)] =
                                    x_45745;
                                ((__local
                                  int32_t *) red_arr_mem_45728)[sext_i32_i64(local_tid_45722)] =
                                    x_45746;
                                ((__local
                                  float *) red_arr_mem_45730)[sext_i32_i64(local_tid_45722)] =
                                    x_45747;
                            }
                        }
                        skip_waves_45769 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45722 == 0) {
                            ((__global bool *) mem_44341)[gtid_33624] = x_45745;
                            ((__global int32_t *) mem_44343)[gtid_33624] =
                                x_45746;
                            ((__global float *) mem_44345)[gtid_33624] =
                                x_45747;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33803
}
__kernel void mainDetailedzisegred_nonseg_32446(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45481_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_45479_backing_aligned_1,
                                                int64_t m_27932,
                                                int64_t num_groups_32441,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44237,
                                                __global
                                                unsigned char *mem_44242,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_45469,
                                                __global
                                                unsigned char *group_res_arr_mem_45471,
                                                int64_t num_threads_45473)
{
    #define segred_group_sizze_32439 (mainDetailedzisegred_group_sizze_32438)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45481_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45481_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45479_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45479_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45474;
    int32_t local_tid_45475;
    int64_t group_sizze_45478;
    int32_t wave_sizze_45477;
    int32_t group_tid_45476;
    
    global_tid_45474 = get_global_id(0);
    local_tid_45475 = get_local_id(0);
    group_sizze_45478 = get_local_size(0);
    wave_sizze_45477 = LOCKSTEP_WIDTH;
    group_tid_45476 = get_group_id(0);
    
    int32_t phys_tid_32446;
    
    phys_tid_32446 = global_tid_45474;
    
    __local char *sync_arr_mem_45479;
    
    sync_arr_mem_45479 = (__local char *) sync_arr_mem_45479_backing_0;
    
    __local char *red_arr_mem_45481;
    
    red_arr_mem_45481 = (__local char *) red_arr_mem_45481_backing_1;
    
    int64_t dummy_32444;
    
    dummy_32444 = 0;
    
    int64_t gtid_32445;
    
    gtid_32445 = 0;
    
    int32_t x_acc_45483;
    int64_t chunk_sizze_45484;
    
    chunk_sizze_45484 = smin64(sdiv_up64(m_27932,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_32439 *
                                         num_groups_32441))),
                               sdiv_up64(m_27932 - sext_i32_i64(phys_tid_32446),
                                         num_threads_45473));
    
    int32_t x_28302;
    int32_t x_28303;
    
    // neutral-initialise the accumulators
    {
        x_acc_45483 = 0;
    }
    for (int64_t i_45488 = 0; i_45488 < chunk_sizze_45484; i_45488++) {
        gtid_32445 = sext_i32_i64(phys_tid_32446) + num_threads_45473 * i_45488;
        // apply map function
        {
            int32_t x_28305 = ((__global
                                int32_t *) defunc_3_map_res_mem_44237)[gtid_32445];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28302 = x_acc_45483;
            }
            // load new values
            {
                x_28303 = x_28305;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28304 = smax32(x_28302, x_28303);
                
                // store in accumulator
                {
                    x_acc_45483 = defunc_1_op_res_28304;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28302 = x_acc_45483;
        ((__local int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475)] =
            x_28302;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45489;
    int32_t skip_waves_45490;
    
    skip_waves_45490 = 1;
    
    int32_t x_45485;
    int32_t x_45486;
    
    offset_45489 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45475, sext_i64_i32(segred_group_sizze_32439))) {
            x_45485 = ((__local
                        int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475 +
                                                      offset_45489)];
        }
    }
    offset_45489 = 1;
    while (slt32(offset_45489, wave_sizze_45477)) {
        if (slt32(local_tid_45475 + offset_45489,
                  sext_i64_i32(segred_group_sizze_32439)) && ((local_tid_45475 -
                                                               squot32(local_tid_45475,
                                                                       wave_sizze_45477) *
                                                               wave_sizze_45477) &
                                                              (2 *
                                                               offset_45489 -
                                                               1)) == 0) {
            // read array element
            {
                x_45486 = ((volatile __local
                            int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475 +
                                                          offset_45489)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45487 = smax32(x_45485, x_45486);
                
                x_45485 = defunc_1_op_res_45487;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475)] =
                    x_45485;
            }
        }
        offset_45489 *= 2;
    }
    while (slt32(skip_waves_45490,
                 squot32(sext_i64_i32(segred_group_sizze_32439) +
                         wave_sizze_45477 - 1, wave_sizze_45477))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45489 = skip_waves_45490 * wave_sizze_45477;
        if (slt32(local_tid_45475 + offset_45489,
                  sext_i64_i32(segred_group_sizze_32439)) && ((local_tid_45475 -
                                                               squot32(local_tid_45475,
                                                                       wave_sizze_45477) *
                                                               wave_sizze_45477) ==
                                                              0 &&
                                                              (squot32(local_tid_45475,
                                                                       wave_sizze_45477) &
                                                               (2 *
                                                                skip_waves_45490 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45486 = ((__local
                            int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475 +
                                                          offset_45489)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45487 = smax32(x_45485, x_45486);
                
                x_45485 = defunc_1_op_res_45487;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475)] =
                    x_45485;
            }
        }
        skip_waves_45490 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45475) == 0) {
            x_acc_45483 = x_45485;
        }
    }
    
    int32_t old_counter_45491;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45475 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45471)[sext_i32_i64(group_tid_45476) *
                                                  segred_group_sizze_32439] =
                x_acc_45483;
            mem_fence_global();
            old_counter_45491 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45469)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45479)[0] = old_counter_45491 ==
                num_groups_32441 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45492;
    
    is_last_group_45492 = ((__local bool *) sync_arr_mem_45479)[0];
    if (is_last_group_45492) {
        if (local_tid_45475 == 0) {
            old_counter_45491 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45469)[0],
                                                      (int) (0 -
                                                             num_groups_32441));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45493 = sdiv_up64(num_groups_32441,
                                                      segred_group_sizze_32439);
            
            x_28302 = 0;
            for (int64_t i_45494 = 0; i_45494 < read_per_thread_45493;
                 i_45494++) {
                int64_t group_res_id_45495 = sext_i32_i64(local_tid_45475) *
                        read_per_thread_45493 + i_45494;
                int64_t index_of_group_res_45496 = group_res_id_45495;
                
                if (slt64(group_res_id_45495, num_groups_32441)) {
                    x_28303 = ((__global
                                int32_t *) group_res_arr_mem_45471)[index_of_group_res_45496 *
                                                                    segred_group_sizze_32439];
                    
                    int32_t defunc_1_op_res_28304;
                    
                    defunc_1_op_res_28304 = smax32(x_28302, x_28303);
                    x_28302 = defunc_1_op_res_28304;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475)] =
            x_28302;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45497;
            int32_t skip_waves_45498;
            
            skip_waves_45498 = 1;
            
            int32_t x_45485;
            int32_t x_45486;
            
            offset_45497 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45475,
                          sext_i64_i32(segred_group_sizze_32439))) {
                    x_45485 = ((__local
                                int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475 +
                                                              offset_45497)];
                }
            }
            offset_45497 = 1;
            while (slt32(offset_45497, wave_sizze_45477)) {
                if (slt32(local_tid_45475 + offset_45497,
                          sext_i64_i32(segred_group_sizze_32439)) &&
                    ((local_tid_45475 - squot32(local_tid_45475,
                                                wave_sizze_45477) *
                      wave_sizze_45477) & (2 * offset_45497 - 1)) == 0) {
                    // read array element
                    {
                        x_45486 = ((volatile __local
                                    int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475 +
                                                                  offset_45497)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45487 = smax32(x_45485,
                                                               x_45486);
                        
                        x_45485 = defunc_1_op_res_45487;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475)] =
                            x_45485;
                    }
                }
                offset_45497 *= 2;
            }
            while (slt32(skip_waves_45498,
                         squot32(sext_i64_i32(segred_group_sizze_32439) +
                                 wave_sizze_45477 - 1, wave_sizze_45477))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45497 = skip_waves_45498 * wave_sizze_45477;
                if (slt32(local_tid_45475 + offset_45497,
                          sext_i64_i32(segred_group_sizze_32439)) &&
                    ((local_tid_45475 - squot32(local_tid_45475,
                                                wave_sizze_45477) *
                      wave_sizze_45477) == 0 && (squot32(local_tid_45475,
                                                         wave_sizze_45477) &
                                                 (2 * skip_waves_45498 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45486 = ((__local
                                    int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475 +
                                                                  offset_45497)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45487 = smax32(x_45485,
                                                               x_45486);
                        
                        x_45485 = defunc_1_op_res_45487;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45481)[sext_i32_i64(local_tid_45475)] =
                            x_45485;
                    }
                }
                skip_waves_45498 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45475 == 0) {
                    ((__global int32_t *) mem_44242)[0] = x_45485;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32439
}
__kernel void mainDetailedzisegred_small_30476(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44738_backing_aligned_0,
                                               int64_t N_27931, int64_t m_27932,
                                               int64_t N_27933,
                                               int64_t i32_res_27945,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_30615,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43528,
                                               __global
                                               unsigned char *mem_43533,
                                               int64_t segment_sizze_nonzzero_44731)
{
    #define segred_group_sizze_30614 (mainDetailedzisegred_group_sizze_30470)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44738_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44738_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44733;
    int32_t local_tid_44734;
    int64_t group_sizze_44737;
    int32_t wave_sizze_44736;
    int32_t group_tid_44735;
    
    global_tid_44733 = get_global_id(0);
    local_tid_44734 = get_local_id(0);
    group_sizze_44737 = get_local_size(0);
    wave_sizze_44736 = LOCKSTEP_WIDTH;
    group_tid_44735 = get_group_id(0);
    
    int32_t phys_tid_30476;
    
    phys_tid_30476 = global_tid_44733;
    
    __local char *red_arr_mem_44738;
    
    red_arr_mem_44738 = (__local char *) red_arr_mem_44738_backing_0;
    
    int32_t phys_group_id_44740;
    
    phys_group_id_44740 = get_group_id(0);
    for (int32_t i_44741 = 0; i_44741 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932 * i32_res_27951 *
                                          i32_res_27951,
                                          squot64(segred_group_sizze_30614,
                                                  segment_sizze_nonzzero_44731))) -
                   phys_group_id_44740, sext_i64_i32(num_groups_30615));
         i_44741++) {
        int32_t virt_group_id_44742 = phys_group_id_44740 + i_44741 *
                sext_i64_i32(num_groups_30615);
        int64_t gtid_30463 = squot64(squot64(sext_i32_i64(local_tid_44734),
                                             segment_sizze_nonzzero_44731) +
                                     sext_i32_i64(virt_group_id_44742) *
                                     squot64(segred_group_sizze_30614,
                                             segment_sizze_nonzzero_44731),
                                     i32_res_27951 * i32_res_27951);
        int64_t gtid_30464 = squot64(squot64(sext_i32_i64(local_tid_44734),
                                             segment_sizze_nonzzero_44731) +
                                     sext_i32_i64(virt_group_id_44742) *
                                     squot64(segred_group_sizze_30614,
                                             segment_sizze_nonzzero_44731) -
                                     squot64(squot64(sext_i32_i64(local_tid_44734),
                                                     segment_sizze_nonzzero_44731) +
                                             sext_i32_i64(virt_group_id_44742) *
                                             squot64(segred_group_sizze_30614,
                                                     segment_sizze_nonzzero_44731),
                                             i32_res_27951 * i32_res_27951) *
                                     (i32_res_27951 * i32_res_27951),
                                     i32_res_27951);
        int64_t gtid_30465 = squot64(sext_i32_i64(local_tid_44734),
                                     segment_sizze_nonzzero_44731) +
                sext_i32_i64(virt_group_id_44742) *
                squot64(segred_group_sizze_30614,
                        segment_sizze_nonzzero_44731) -
                squot64(squot64(sext_i32_i64(local_tid_44734),
                                segment_sizze_nonzzero_44731) +
                        sext_i32_i64(virt_group_id_44742) *
                        squot64(segred_group_sizze_30614,
                                segment_sizze_nonzzero_44731), i32_res_27951 *
                        i32_res_27951) * (i32_res_27951 * i32_res_27951) -
                squot64(squot64(sext_i32_i64(local_tid_44734),
                                segment_sizze_nonzzero_44731) +
                        sext_i32_i64(virt_group_id_44742) *
                        squot64(segred_group_sizze_30614,
                                segment_sizze_nonzzero_44731) -
                        squot64(squot64(sext_i32_i64(local_tid_44734),
                                        segment_sizze_nonzzero_44731) +
                                sext_i32_i64(virt_group_id_44742) *
                                squot64(segred_group_sizze_30614,
                                        segment_sizze_nonzzero_44731),
                                i32_res_27951 * i32_res_27951) *
                        (i32_res_27951 * i32_res_27951), i32_res_27951) *
                i32_res_27951;
        int64_t gtid_30475 = srem64(sext_i32_i64(local_tid_44734),
                                    i32_res_27945);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27945) && (((slt64(gtid_30463, m_27932) &&
                                              slt64(gtid_30464,
                                                    i32_res_27951)) &&
                                             slt64(gtid_30465,
                                                   i32_res_27951)) &&
                                            slt64(sext_i32_i64(local_tid_44734),
                                                  i32_res_27945 *
                                                  squot64(segred_group_sizze_30614,
                                                          segment_sizze_nonzzero_44731)))) {
                float x_30624 = ((__global
                                  float *) images_mem_43378)[gtid_30463 *
                                                             N_27933 +
                                                             gtid_30475];
                float x_30625 = ((__global
                                  float *) binop_p_mem_43387)[gtid_30464 *
                                                              N_27931 +
                                                              gtid_30475];
                float x_30626 = ((__global float *) mem_43528)[gtid_30465 *
                                                               N_27931 +
                                                               gtid_30475];
                float x_30627 = x_30625 * x_30626;
                bool isnan_res_30628;
                
                isnan_res_30628 = futrts_isnan32(x_30624);
                
                float y_30629;
                
                if (isnan_res_30628) {
                    y_30629 = 0.0F;
                } else {
                    y_30629 = 1.0F;
                }
                
                float defunc_2_f_res_30630 = x_30627 * y_30629;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                        defunc_2_f_res_30630;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27945)) {
            // perform segmented scan to imitate reduction
            {
                float x_30618;
                float x_30619;
                float x_44743;
                float x_44744;
                bool ltid_in_bounds_44746;
                
                ltid_in_bounds_44746 = slt64(sext_i32_i64(local_tid_44734),
                                             i32_res_27945 *
                                             squot64(segred_group_sizze_30614,
                                                     segment_sizze_nonzzero_44731));
                
                int32_t skip_threads_44747;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44746) {
                        x_30619 = ((volatile __local
                                    float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)];
                        if ((local_tid_44734 - squot32(local_tid_44734, 32) *
                             32) == 0) {
                            x_30618 = x_30619;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44747 = 1;
                    while (slt32(skip_threads_44747, 32)) {
                        if (sle32(skip_threads_44747, local_tid_44734 -
                                  squot32(local_tid_44734, 32) * 32) &&
                            ltid_in_bounds_44746) {
                            // read operands
                            {
                                x_30618 = ((volatile __local
                                            float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734) -
                                                                        sext_i32_i64(skip_threads_44747)];
                            }
                            // perform operation
                            {
                                bool inactive_44748 =
                                     slt64(srem64(sext_i32_i64(local_tid_44734),
                                                  i32_res_27945),
                                           sext_i32_i64(local_tid_44734) -
                                           sext_i32_i64(local_tid_44734 -
                                           skip_threads_44747));
                                
                                if (inactive_44748) {
                                    x_30618 = x_30619;
                                }
                                if (!inactive_44748) {
                                    float defunc_1_op_res_30620 = x_30618 +
                                          x_30619;
                                    
                                    x_30618 = defunc_1_op_res_30620;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44736, skip_threads_44747)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44747, local_tid_44734 -
                                  squot32(local_tid_44734, 32) * 32) &&
                            ltid_in_bounds_44746) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                                    x_30618;
                                x_30619 = x_30618;
                            }
                        }
                        if (sle32(wave_sizze_44736, skip_threads_44747)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44747 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44734 - squot32(local_tid_44734, 32) * 32) ==
                        31 && ltid_in_bounds_44746) {
                        ((volatile __local
                          float *) red_arr_mem_44738)[sext_i32_i64(squot32(local_tid_44734,
                                                                           32))] =
                            x_30618;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44749;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44734, 32) == 0 &&
                            ltid_in_bounds_44746) {
                            x_44744 = ((volatile __local
                                        float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)];
                            if ((local_tid_44734 - squot32(local_tid_44734,
                                                           32) * 32) == 0) {
                                x_44743 = x_44744;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44749 = 1;
                        while (slt32(skip_threads_44749, 32)) {
                            if (sle32(skip_threads_44749, local_tid_44734 -
                                      squot32(local_tid_44734, 32) * 32) &&
                                (squot32(local_tid_44734, 32) == 0 &&
                                 ltid_in_bounds_44746)) {
                                // read operands
                                {
                                    x_44743 = ((volatile __local
                                                float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734) -
                                                                            sext_i32_i64(skip_threads_44749)];
                                }
                                // perform operation
                                {
                                    bool inactive_44750 =
                                         slt64(srem64(sext_i32_i64(local_tid_44734 *
                                                      32 + 32 - 1),
                                                      i32_res_27945),
                                               sext_i32_i64(local_tid_44734 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44734 -
                                                             skip_threads_44749) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44750) {
                                        x_44743 = x_44744;
                                    }
                                    if (!inactive_44750) {
                                        float defunc_1_op_res_44745 = x_44743 +
                                              x_44744;
                                        
                                        x_44743 = defunc_1_op_res_44745;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44736, skip_threads_44749)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44749, local_tid_44734 -
                                      squot32(local_tid_44734, 32) * 32) &&
                                (squot32(local_tid_44734, 32) == 0 &&
                                 ltid_in_bounds_44746)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                                        x_44743;
                                    x_44744 = x_44743;
                                }
                            }
                            if (sle32(wave_sizze_44736, skip_threads_44749)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44749 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44734, 32) == 0 ||
                          !ltid_in_bounds_44746)) {
                        // read operands
                        {
                            x_30619 = x_30618;
                            x_30618 = ((__local
                                        float *) red_arr_mem_44738)[sext_i32_i64(squot32(local_tid_44734,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44751 =
                                 slt64(srem64(sext_i32_i64(local_tid_44734),
                                              i32_res_27945),
                                       sext_i32_i64(local_tid_44734) -
                                       sext_i32_i64(squot32(local_tid_44734,
                                                            32) * 32 - 1));
                            
                            if (inactive_44751) {
                                x_30618 = x_30619;
                            }
                            if (!inactive_44751) {
                                float defunc_1_op_res_30620 = x_30618 + x_30619;
                                
                                x_30618 = defunc_1_op_res_30620;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                                x_30618;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44734, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                            x_30619;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44742) *
                      squot64(segred_group_sizze_30614,
                              segment_sizze_nonzzero_44731) +
                      sext_i32_i64(local_tid_44734), m_27932 * i32_res_27951 *
                      i32_res_27951) && slt64(sext_i32_i64(local_tid_44734),
                                              squot64(segred_group_sizze_30614,
                                                      segment_sizze_nonzzero_44731))) {
                ((__global
                  float *) mem_43533)[squot64(sext_i32_i64(virt_group_id_44742) *
                                              squot64(segred_group_sizze_30614,
                                                      segment_sizze_nonzzero_44731) +
                                              sext_i32_i64(local_tid_44734),
                                              i32_res_27951 * i32_res_27951) *
                                      (i32_res_27951 * i32_res_27951) +
                                      squot64(sext_i32_i64(virt_group_id_44742) *
                                              squot64(segred_group_sizze_30614,
                                                      segment_sizze_nonzzero_44731) +
                                              sext_i32_i64(local_tid_44734) -
                                              squot64(sext_i32_i64(virt_group_id_44742) *
                                                      squot64(segred_group_sizze_30614,
                                                              segment_sizze_nonzzero_44731) +
                                                      sext_i32_i64(local_tid_44734),
                                                      i32_res_27951 *
                                                      i32_res_27951) *
                                              (i32_res_27951 * i32_res_27951),
                                              i32_res_27951) * i32_res_27951 +
                                      (sext_i32_i64(virt_group_id_44742) *
                                       squot64(segred_group_sizze_30614,
                                               segment_sizze_nonzzero_44731) +
                                       sext_i32_i64(local_tid_44734) -
                                       squot64(sext_i32_i64(virt_group_id_44742) *
                                               squot64(segred_group_sizze_30614,
                                                       segment_sizze_nonzzero_44731) +
                                               sext_i32_i64(local_tid_44734),
                                               i32_res_27951 * i32_res_27951) *
                                       (i32_res_27951 * i32_res_27951) -
                                       squot64(sext_i32_i64(virt_group_id_44742) *
                                               squot64(segred_group_sizze_30614,
                                                       segment_sizze_nonzzero_44731) +
                                               sext_i32_i64(local_tid_44734) -
                                               squot64(sext_i32_i64(virt_group_id_44742) *
                                                       squot64(segred_group_sizze_30614,
                                                               segment_sizze_nonzzero_44731) +
                                                       sext_i32_i64(local_tid_44734),
                                                       i32_res_27951 *
                                                       i32_res_27951) *
                                               (i32_res_27951 * i32_res_27951),
                                               i32_res_27951) *
                                       i32_res_27951)] = ((__local
                                                           float *) red_arr_mem_44738)[(sext_i32_i64(local_tid_44734) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44731 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30614
}
__kernel void mainDetailedzisegred_small_31523(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44934_backing_aligned_0,
                                               int64_t N_27931, int64_t m_27932,
                                               int64_t N_27933,
                                               int64_t i32_res_27945,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_31576,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *binop_p_mem_43387,
                                               __global
                                               unsigned char *mem_43840,
                                               int64_t segment_sizze_nonzzero_44927)
{
    #define segred_group_sizze_31575 (mainDetailedzisegred_group_sizze_31517)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44934_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44934_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44929;
    int32_t local_tid_44930;
    int64_t group_sizze_44933;
    int32_t wave_sizze_44932;
    int32_t group_tid_44931;
    
    global_tid_44929 = get_global_id(0);
    local_tid_44930 = get_local_id(0);
    group_sizze_44933 = get_local_size(0);
    wave_sizze_44932 = LOCKSTEP_WIDTH;
    group_tid_44931 = get_group_id(0);
    
    int32_t phys_tid_31523;
    
    phys_tid_31523 = global_tid_44929;
    
    __local char *red_arr_mem_44934;
    
    red_arr_mem_44934 = (__local char *) red_arr_mem_44934_backing_0;
    
    int32_t phys_group_id_44936;
    
    phys_group_id_44936 = get_group_id(0);
    for (int32_t i_44937 = 0; i_44937 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932 * i32_res_27951,
                                          squot64(segred_group_sizze_31575,
                                                  segment_sizze_nonzzero_44927))) -
                   phys_group_id_44936, sext_i64_i32(num_groups_31576));
         i_44937++) {
        int32_t virt_group_id_44938 = phys_group_id_44936 + i_44937 *
                sext_i64_i32(num_groups_31576);
        int64_t gtid_31512 = squot64(squot64(sext_i32_i64(local_tid_44930),
                                             segment_sizze_nonzzero_44927) +
                                     sext_i32_i64(virt_group_id_44938) *
                                     squot64(segred_group_sizze_31575,
                                             segment_sizze_nonzzero_44927),
                                     i32_res_27951);
        int64_t gtid_31513 = squot64(sext_i32_i64(local_tid_44930),
                                     segment_sizze_nonzzero_44927) +
                sext_i32_i64(virt_group_id_44938) *
                squot64(segred_group_sizze_31575,
                        segment_sizze_nonzzero_44927) -
                squot64(squot64(sext_i32_i64(local_tid_44930),
                                segment_sizze_nonzzero_44927) +
                        sext_i32_i64(virt_group_id_44938) *
                        squot64(segred_group_sizze_31575,
                                segment_sizze_nonzzero_44927), i32_res_27951) *
                i32_res_27951;
        int64_t gtid_31522 = srem64(sext_i32_i64(local_tid_44930),
                                    i32_res_27945);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27945) && ((slt64(gtid_31512, m_27932) &&
                                             slt64(gtid_31513,
                                                   i32_res_27951)) &&
                                            slt64(sext_i32_i64(local_tid_44930),
                                                  i32_res_27945 *
                                                  squot64(segred_group_sizze_31575,
                                                          segment_sizze_nonzzero_44927)))) {
                float x_31585 = ((__global
                                  float *) images_mem_43378)[gtid_31512 *
                                                             N_27933 +
                                                             gtid_31522];
                bool isnan_res_31586;
                
                isnan_res_31586 = futrts_isnan32(x_31585);
                
                float defunc_1_f_res_31587;
                
                if (isnan_res_31586) {
                    defunc_1_f_res_31587 = 0.0F;
                } else {
                    float x_31584 = ((__global
                                      float *) binop_p_mem_43387)[gtid_31513 *
                                                                  N_27931 +
                                                                  gtid_31522];
                    float defunc_1_f_res_f_res_31588 = x_31584 * x_31585;
                    
                    defunc_1_f_res_31587 = defunc_1_f_res_f_res_31588;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)] =
                        defunc_1_f_res_31587;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27945)) {
            // perform segmented scan to imitate reduction
            {
                float x_31579;
                float x_31580;
                float x_44939;
                float x_44940;
                bool ltid_in_bounds_44942;
                
                ltid_in_bounds_44942 = slt64(sext_i32_i64(local_tid_44930),
                                             i32_res_27945 *
                                             squot64(segred_group_sizze_31575,
                                                     segment_sizze_nonzzero_44927));
                
                int32_t skip_threads_44943;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44942) {
                        x_31580 = ((volatile __local
                                    float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)];
                        if ((local_tid_44930 - squot32(local_tid_44930, 32) *
                             32) == 0) {
                            x_31579 = x_31580;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44943 = 1;
                    while (slt32(skip_threads_44943, 32)) {
                        if (sle32(skip_threads_44943, local_tid_44930 -
                                  squot32(local_tid_44930, 32) * 32) &&
                            ltid_in_bounds_44942) {
                            // read operands
                            {
                                x_31579 = ((volatile __local
                                            float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930) -
                                                                        sext_i32_i64(skip_threads_44943)];
                            }
                            // perform operation
                            {
                                bool inactive_44944 =
                                     slt64(srem64(sext_i32_i64(local_tid_44930),
                                                  i32_res_27945),
                                           sext_i32_i64(local_tid_44930) -
                                           sext_i32_i64(local_tid_44930 -
                                           skip_threads_44943));
                                
                                if (inactive_44944) {
                                    x_31579 = x_31580;
                                }
                                if (!inactive_44944) {
                                    float defunc_1_op_res_31581 = x_31579 +
                                          x_31580;
                                    
                                    x_31579 = defunc_1_op_res_31581;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44932, skip_threads_44943)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44943, local_tid_44930 -
                                  squot32(local_tid_44930, 32) * 32) &&
                            ltid_in_bounds_44942) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)] =
                                    x_31579;
                                x_31580 = x_31579;
                            }
                        }
                        if (sle32(wave_sizze_44932, skip_threads_44943)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44943 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44930 - squot32(local_tid_44930, 32) * 32) ==
                        31 && ltid_in_bounds_44942) {
                        ((volatile __local
                          float *) red_arr_mem_44934)[sext_i32_i64(squot32(local_tid_44930,
                                                                           32))] =
                            x_31579;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44945;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44930, 32) == 0 &&
                            ltid_in_bounds_44942) {
                            x_44940 = ((volatile __local
                                        float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)];
                            if ((local_tid_44930 - squot32(local_tid_44930,
                                                           32) * 32) == 0) {
                                x_44939 = x_44940;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44945 = 1;
                        while (slt32(skip_threads_44945, 32)) {
                            if (sle32(skip_threads_44945, local_tid_44930 -
                                      squot32(local_tid_44930, 32) * 32) &&
                                (squot32(local_tid_44930, 32) == 0 &&
                                 ltid_in_bounds_44942)) {
                                // read operands
                                {
                                    x_44939 = ((volatile __local
                                                float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930) -
                                                                            sext_i32_i64(skip_threads_44945)];
                                }
                                // perform operation
                                {
                                    bool inactive_44946 =
                                         slt64(srem64(sext_i32_i64(local_tid_44930 *
                                                      32 + 32 - 1),
                                                      i32_res_27945),
                                               sext_i32_i64(local_tid_44930 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44930 -
                                                             skip_threads_44945) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44946) {
                                        x_44939 = x_44940;
                                    }
                                    if (!inactive_44946) {
                                        float defunc_1_op_res_44941 = x_44939 +
                                              x_44940;
                                        
                                        x_44939 = defunc_1_op_res_44941;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44932, skip_threads_44945)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44945, local_tid_44930 -
                                      squot32(local_tid_44930, 32) * 32) &&
                                (squot32(local_tid_44930, 32) == 0 &&
                                 ltid_in_bounds_44942)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)] =
                                        x_44939;
                                    x_44940 = x_44939;
                                }
                            }
                            if (sle32(wave_sizze_44932, skip_threads_44945)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44945 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44930, 32) == 0 ||
                          !ltid_in_bounds_44942)) {
                        // read operands
                        {
                            x_31580 = x_31579;
                            x_31579 = ((__local
                                        float *) red_arr_mem_44934)[sext_i32_i64(squot32(local_tid_44930,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44947 =
                                 slt64(srem64(sext_i32_i64(local_tid_44930),
                                              i32_res_27945),
                                       sext_i32_i64(local_tid_44930) -
                                       sext_i32_i64(squot32(local_tid_44930,
                                                            32) * 32 - 1));
                            
                            if (inactive_44947) {
                                x_31579 = x_31580;
                            }
                            if (!inactive_44947) {
                                float defunc_1_op_res_31581 = x_31579 + x_31580;
                                
                                x_31579 = defunc_1_op_res_31581;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)] =
                                x_31579;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44930, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44934)[sext_i32_i64(local_tid_44930)] =
                            x_31580;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44938) *
                      squot64(segred_group_sizze_31575,
                              segment_sizze_nonzzero_44927) +
                      sext_i32_i64(local_tid_44930), m_27932 * i32_res_27951) &&
                slt64(sext_i32_i64(local_tid_44930),
                      squot64(segred_group_sizze_31575,
                              segment_sizze_nonzzero_44927))) {
                ((__global
                  float *) mem_43840)[squot64(sext_i32_i64(virt_group_id_44938) *
                                              squot64(segred_group_sizze_31575,
                                                      segment_sizze_nonzzero_44927) +
                                              sext_i32_i64(local_tid_44930),
                                              i32_res_27951) * i32_res_27951 +
                                      (sext_i32_i64(virt_group_id_44938) *
                                       squot64(segred_group_sizze_31575,
                                               segment_sizze_nonzzero_44927) +
                                       sext_i32_i64(local_tid_44930) -
                                       squot64(sext_i32_i64(virt_group_id_44938) *
                                               squot64(segred_group_sizze_31575,
                                                       segment_sizze_nonzzero_44927) +
                                               sext_i32_i64(local_tid_44930),
                                               i32_res_27951) *
                                       i32_res_27951)] = ((__local
                                                           float *) red_arr_mem_44934)[(sext_i32_i64(local_tid_44930) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44927 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31575
}
__kernel void mainDetailedzisegred_small_31660(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45022_backing_aligned_0,
                                               int64_t m_27932,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_31709,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43625,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43846,
                                               __global
                                               unsigned char *mem_43906,
                                               int64_t segment_sizze_nonzzero_45015)
{
    #define segred_group_sizze_31708 (mainDetailedzisegred_group_sizze_31654)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45022_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45022_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45017;
    int32_t local_tid_45018;
    int64_t group_sizze_45021;
    int32_t wave_sizze_45020;
    int32_t group_tid_45019;
    
    global_tid_45017 = get_global_id(0);
    local_tid_45018 = get_local_id(0);
    group_sizze_45021 = get_local_size(0);
    wave_sizze_45020 = LOCKSTEP_WIDTH;
    group_tid_45019 = get_group_id(0);
    
    int32_t phys_tid_31660;
    
    phys_tid_31660 = global_tid_45017;
    
    __local char *red_arr_mem_45022;
    
    red_arr_mem_45022 = (__local char *) red_arr_mem_45022_backing_0;
    
    int32_t phys_group_id_45024;
    
    phys_group_id_45024 = get_group_id(0);
    for (int32_t i_45025 = 0; i_45025 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932 * i32_res_27951,
                                          squot64(segred_group_sizze_31708,
                                                  segment_sizze_nonzzero_45015))) -
                   phys_group_id_45024, sext_i64_i32(num_groups_31709));
         i_45025++) {
        int32_t virt_group_id_45026 = phys_group_id_45024 + i_45025 *
                sext_i64_i32(num_groups_31709);
        int64_t gtid_31649 = squot64(squot64(sext_i32_i64(local_tid_45018),
                                             segment_sizze_nonzzero_45015) +
                                     sext_i32_i64(virt_group_id_45026) *
                                     squot64(segred_group_sizze_31708,
                                             segment_sizze_nonzzero_45015),
                                     i32_res_27951);
        int64_t gtid_31650 = squot64(sext_i32_i64(local_tid_45018),
                                     segment_sizze_nonzzero_45015) +
                sext_i32_i64(virt_group_id_45026) *
                squot64(segred_group_sizze_31708,
                        segment_sizze_nonzzero_45015) -
                squot64(squot64(sext_i32_i64(local_tid_45018),
                                segment_sizze_nonzzero_45015) +
                        sext_i32_i64(virt_group_id_45026) *
                        squot64(segred_group_sizze_31708,
                                segment_sizze_nonzzero_45015), i32_res_27951) *
                i32_res_27951;
        int64_t gtid_31659 = srem64(sext_i32_i64(local_tid_45018),
                                    i32_res_27951);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27951) && ((slt64(gtid_31649, m_27932) &&
                                             slt64(gtid_31650,
                                                   i32_res_27951)) &&
                                            slt64(sext_i32_i64(local_tid_45018),
                                                  i32_res_27951 *
                                                  squot64(segred_group_sizze_31708,
                                                          segment_sizze_nonzzero_45015)))) {
                float x_31718 = ((__global
                                  float *) defunc_3_map_res_mem_43846)[gtid_31649 *
                                                                       i32_res_27951 +
                                                                       gtid_31659];
                float x_31719 = ((__global
                                  float *) defunc_3_map_res_mem_43625)[gtid_31649 *
                                                                       (i32_res_27951 *
                                                                        i32_res_27951) +
                                                                       gtid_31650 *
                                                                       i32_res_27951 +
                                                                       gtid_31659];
                float defunc_1_f_res_31720 = x_31718 * x_31719;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)] =
                        defunc_1_f_res_31720;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27951)) {
            // perform segmented scan to imitate reduction
            {
                float x_31712;
                float x_31713;
                float x_45027;
                float x_45028;
                bool ltid_in_bounds_45030;
                
                ltid_in_bounds_45030 = slt64(sext_i32_i64(local_tid_45018),
                                             i32_res_27951 *
                                             squot64(segred_group_sizze_31708,
                                                     segment_sizze_nonzzero_45015));
                
                int32_t skip_threads_45031;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45030) {
                        x_31713 = ((volatile __local
                                    float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)];
                        if ((local_tid_45018 - squot32(local_tid_45018, 32) *
                             32) == 0) {
                            x_31712 = x_31713;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45031 = 1;
                    while (slt32(skip_threads_45031, 32)) {
                        if (sle32(skip_threads_45031, local_tid_45018 -
                                  squot32(local_tid_45018, 32) * 32) &&
                            ltid_in_bounds_45030) {
                            // read operands
                            {
                                x_31712 = ((volatile __local
                                            float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018) -
                                                                        sext_i32_i64(skip_threads_45031)];
                            }
                            // perform operation
                            {
                                bool inactive_45032 =
                                     slt64(srem64(sext_i32_i64(local_tid_45018),
                                                  i32_res_27951),
                                           sext_i32_i64(local_tid_45018) -
                                           sext_i32_i64(local_tid_45018 -
                                           skip_threads_45031));
                                
                                if (inactive_45032) {
                                    x_31712 = x_31713;
                                }
                                if (!inactive_45032) {
                                    float defunc_1_op_res_31714 = x_31712 +
                                          x_31713;
                                    
                                    x_31712 = defunc_1_op_res_31714;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45020, skip_threads_45031)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45031, local_tid_45018 -
                                  squot32(local_tid_45018, 32) * 32) &&
                            ltid_in_bounds_45030) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)] =
                                    x_31712;
                                x_31713 = x_31712;
                            }
                        }
                        if (sle32(wave_sizze_45020, skip_threads_45031)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45031 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45018 - squot32(local_tid_45018, 32) * 32) ==
                        31 && ltid_in_bounds_45030) {
                        ((volatile __local
                          float *) red_arr_mem_45022)[sext_i32_i64(squot32(local_tid_45018,
                                                                           32))] =
                            x_31712;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45033;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45018, 32) == 0 &&
                            ltid_in_bounds_45030) {
                            x_45028 = ((volatile __local
                                        float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)];
                            if ((local_tid_45018 - squot32(local_tid_45018,
                                                           32) * 32) == 0) {
                                x_45027 = x_45028;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45033 = 1;
                        while (slt32(skip_threads_45033, 32)) {
                            if (sle32(skip_threads_45033, local_tid_45018 -
                                      squot32(local_tid_45018, 32) * 32) &&
                                (squot32(local_tid_45018, 32) == 0 &&
                                 ltid_in_bounds_45030)) {
                                // read operands
                                {
                                    x_45027 = ((volatile __local
                                                float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018) -
                                                                            sext_i32_i64(skip_threads_45033)];
                                }
                                // perform operation
                                {
                                    bool inactive_45034 =
                                         slt64(srem64(sext_i32_i64(local_tid_45018 *
                                                      32 + 32 - 1),
                                                      i32_res_27951),
                                               sext_i32_i64(local_tid_45018 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45018 -
                                                             skip_threads_45033) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45034) {
                                        x_45027 = x_45028;
                                    }
                                    if (!inactive_45034) {
                                        float defunc_1_op_res_45029 = x_45027 +
                                              x_45028;
                                        
                                        x_45027 = defunc_1_op_res_45029;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45020, skip_threads_45033)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45033, local_tid_45018 -
                                      squot32(local_tid_45018, 32) * 32) &&
                                (squot32(local_tid_45018, 32) == 0 &&
                                 ltid_in_bounds_45030)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)] =
                                        x_45027;
                                    x_45028 = x_45027;
                                }
                            }
                            if (sle32(wave_sizze_45020, skip_threads_45033)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45033 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45018, 32) == 0 ||
                          !ltid_in_bounds_45030)) {
                        // read operands
                        {
                            x_31713 = x_31712;
                            x_31712 = ((__local
                                        float *) red_arr_mem_45022)[sext_i32_i64(squot32(local_tid_45018,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45035 =
                                 slt64(srem64(sext_i32_i64(local_tid_45018),
                                              i32_res_27951),
                                       sext_i32_i64(local_tid_45018) -
                                       sext_i32_i64(squot32(local_tid_45018,
                                                            32) * 32 - 1));
                            
                            if (inactive_45035) {
                                x_31712 = x_31713;
                            }
                            if (!inactive_45035) {
                                float defunc_1_op_res_31714 = x_31712 + x_31713;
                                
                                x_31712 = defunc_1_op_res_31714;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)] =
                                x_31712;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45018, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45022)[sext_i32_i64(local_tid_45018)] =
                            x_31713;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45026) *
                      squot64(segred_group_sizze_31708,
                              segment_sizze_nonzzero_45015) +
                      sext_i32_i64(local_tid_45018), m_27932 * i32_res_27951) &&
                slt64(sext_i32_i64(local_tid_45018),
                      squot64(segred_group_sizze_31708,
                              segment_sizze_nonzzero_45015))) {
                ((__global
                  float *) mem_43906)[squot64(sext_i32_i64(virt_group_id_45026) *
                                              squot64(segred_group_sizze_31708,
                                                      segment_sizze_nonzzero_45015) +
                                              sext_i32_i64(local_tid_45018),
                                              i32_res_27951) * i32_res_27951 +
                                      (sext_i32_i64(virt_group_id_45026) *
                                       squot64(segred_group_sizze_31708,
                                               segment_sizze_nonzzero_45015) +
                                       sext_i32_i64(local_tid_45018) -
                                       squot64(sext_i32_i64(virt_group_id_45026) *
                                               squot64(segred_group_sizze_31708,
                                                       segment_sizze_nonzzero_45015) +
                                               sext_i32_i64(local_tid_45018),
                                               i32_res_27951) *
                                       i32_res_27951)] = ((__local
                                                           float *) red_arr_mem_45022)[(sext_i32_i64(local_tid_45018) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_45015 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31708
}
__kernel void mainDetailedzisegred_small_31790(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45154_backing_aligned_0,
                                               int64_t N_27931, int64_t m_27932,
                                               int64_t i32_res_27951,
                                               int64_t num_groups_31837,
                                               __global
                                               unsigned char *mem_43394,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43912,
                                               __global
                                               unsigned char *mem_44130,
                                               int64_t segment_sizze_nonzzero_45147)
{
    #define segred_group_sizze_31836 (mainDetailedzisegred_group_sizze_31784)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45154_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45154_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45149;
    int32_t local_tid_45150;
    int64_t group_sizze_45153;
    int32_t wave_sizze_45152;
    int32_t group_tid_45151;
    
    global_tid_45149 = get_global_id(0);
    local_tid_45150 = get_local_id(0);
    group_sizze_45153 = get_local_size(0);
    wave_sizze_45152 = LOCKSTEP_WIDTH;
    group_tid_45151 = get_group_id(0);
    
    int32_t phys_tid_31790;
    
    phys_tid_31790 = global_tid_45149;
    
    __local char *red_arr_mem_45154;
    
    red_arr_mem_45154 = (__local char *) red_arr_mem_45154_backing_0;
    
    int32_t phys_group_id_45156;
    
    phys_group_id_45156 = get_group_id(0);
    for (int32_t i_45157 = 0; i_45157 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932 * N_27931,
                                          squot64(segred_group_sizze_31836,
                                                  segment_sizze_nonzzero_45147))) -
                   phys_group_id_45156, sext_i64_i32(num_groups_31837));
         i_45157++) {
        int32_t virt_group_id_45158 = phys_group_id_45156 + i_45157 *
                sext_i64_i32(num_groups_31837);
        int64_t gtid_31779 = squot64(squot64(sext_i32_i64(local_tid_45150),
                                             segment_sizze_nonzzero_45147) +
                                     sext_i32_i64(virt_group_id_45158) *
                                     squot64(segred_group_sizze_31836,
                                             segment_sizze_nonzzero_45147),
                                     N_27931);
        int64_t gtid_31780 = squot64(sext_i32_i64(local_tid_45150),
                                     segment_sizze_nonzzero_45147) +
                sext_i32_i64(virt_group_id_45158) *
                squot64(segred_group_sizze_31836,
                        segment_sizze_nonzzero_45147) -
                squot64(squot64(sext_i32_i64(local_tid_45150),
                                segment_sizze_nonzzero_45147) +
                        sext_i32_i64(virt_group_id_45158) *
                        squot64(segred_group_sizze_31836,
                                segment_sizze_nonzzero_45147), N_27931) *
                N_27931;
        int64_t gtid_31789 = srem64(sext_i32_i64(local_tid_45150),
                                    i32_res_27951);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27951) && ((slt64(gtid_31779, m_27932) &&
                                             slt64(gtid_31780, N_27931)) &&
                                            slt64(sext_i32_i64(local_tid_45150),
                                                  i32_res_27951 *
                                                  squot64(segred_group_sizze_31836,
                                                          segment_sizze_nonzzero_45147)))) {
                float x_31845 = ((__global
                                  float *) defunc_4_map_res_mem_43912)[gtid_31779 *
                                                                       i32_res_27951 +
                                                                       gtid_31789];
                float x_31846 = ((__global float *) mem_43394)[gtid_31780 *
                                                               i32_res_27951 +
                                                               gtid_31789];
                float defunc_1_f_res_31847 = x_31845 * x_31846;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)] =
                        defunc_1_f_res_31847;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27951)) {
            // perform segmented scan to imitate reduction
            {
                float x_31840;
                float x_31841;
                float x_45159;
                float x_45160;
                bool ltid_in_bounds_45162;
                
                ltid_in_bounds_45162 = slt64(sext_i32_i64(local_tid_45150),
                                             i32_res_27951 *
                                             squot64(segred_group_sizze_31836,
                                                     segment_sizze_nonzzero_45147));
                
                int32_t skip_threads_45163;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45162) {
                        x_31841 = ((volatile __local
                                    float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)];
                        if ((local_tid_45150 - squot32(local_tid_45150, 32) *
                             32) == 0) {
                            x_31840 = x_31841;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45163 = 1;
                    while (slt32(skip_threads_45163, 32)) {
                        if (sle32(skip_threads_45163, local_tid_45150 -
                                  squot32(local_tid_45150, 32) * 32) &&
                            ltid_in_bounds_45162) {
                            // read operands
                            {
                                x_31840 = ((volatile __local
                                            float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150) -
                                                                        sext_i32_i64(skip_threads_45163)];
                            }
                            // perform operation
                            {
                                bool inactive_45164 =
                                     slt64(srem64(sext_i32_i64(local_tid_45150),
                                                  i32_res_27951),
                                           sext_i32_i64(local_tid_45150) -
                                           sext_i32_i64(local_tid_45150 -
                                           skip_threads_45163));
                                
                                if (inactive_45164) {
                                    x_31840 = x_31841;
                                }
                                if (!inactive_45164) {
                                    float defunc_1_op_res_31842 = x_31840 +
                                          x_31841;
                                    
                                    x_31840 = defunc_1_op_res_31842;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45152, skip_threads_45163)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45163, local_tid_45150 -
                                  squot32(local_tid_45150, 32) * 32) &&
                            ltid_in_bounds_45162) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)] =
                                    x_31840;
                                x_31841 = x_31840;
                            }
                        }
                        if (sle32(wave_sizze_45152, skip_threads_45163)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45163 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45150 - squot32(local_tid_45150, 32) * 32) ==
                        31 && ltid_in_bounds_45162) {
                        ((volatile __local
                          float *) red_arr_mem_45154)[sext_i32_i64(squot32(local_tid_45150,
                                                                           32))] =
                            x_31840;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45165;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45150, 32) == 0 &&
                            ltid_in_bounds_45162) {
                            x_45160 = ((volatile __local
                                        float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)];
                            if ((local_tid_45150 - squot32(local_tid_45150,
                                                           32) * 32) == 0) {
                                x_45159 = x_45160;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45165 = 1;
                        while (slt32(skip_threads_45165, 32)) {
                            if (sle32(skip_threads_45165, local_tid_45150 -
                                      squot32(local_tid_45150, 32) * 32) &&
                                (squot32(local_tid_45150, 32) == 0 &&
                                 ltid_in_bounds_45162)) {
                                // read operands
                                {
                                    x_45159 = ((volatile __local
                                                float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150) -
                                                                            sext_i32_i64(skip_threads_45165)];
                                }
                                // perform operation
                                {
                                    bool inactive_45166 =
                                         slt64(srem64(sext_i32_i64(local_tid_45150 *
                                                      32 + 32 - 1),
                                                      i32_res_27951),
                                               sext_i32_i64(local_tid_45150 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45150 -
                                                             skip_threads_45165) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45166) {
                                        x_45159 = x_45160;
                                    }
                                    if (!inactive_45166) {
                                        float defunc_1_op_res_45161 = x_45159 +
                                              x_45160;
                                        
                                        x_45159 = defunc_1_op_res_45161;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45152, skip_threads_45165)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45165, local_tid_45150 -
                                      squot32(local_tid_45150, 32) * 32) &&
                                (squot32(local_tid_45150, 32) == 0 &&
                                 ltid_in_bounds_45162)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)] =
                                        x_45159;
                                    x_45160 = x_45159;
                                }
                            }
                            if (sle32(wave_sizze_45152, skip_threads_45165)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45165 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45150, 32) == 0 ||
                          !ltid_in_bounds_45162)) {
                        // read operands
                        {
                            x_31841 = x_31840;
                            x_31840 = ((__local
                                        float *) red_arr_mem_45154)[sext_i32_i64(squot32(local_tid_45150,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45167 =
                                 slt64(srem64(sext_i32_i64(local_tid_45150),
                                              i32_res_27951),
                                       sext_i32_i64(local_tid_45150) -
                                       sext_i32_i64(squot32(local_tid_45150,
                                                            32) * 32 - 1));
                            
                            if (inactive_45167) {
                                x_31840 = x_31841;
                            }
                            if (!inactive_45167) {
                                float defunc_1_op_res_31842 = x_31840 + x_31841;
                                
                                x_31840 = defunc_1_op_res_31842;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)] =
                                x_31840;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45150, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45154)[sext_i32_i64(local_tid_45150)] =
                            x_31841;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45158) *
                      squot64(segred_group_sizze_31836,
                              segment_sizze_nonzzero_45147) +
                      sext_i32_i64(local_tid_45150), m_27932 * N_27931) &&
                slt64(sext_i32_i64(local_tid_45150),
                      squot64(segred_group_sizze_31836,
                              segment_sizze_nonzzero_45147))) {
                ((__global
                  float *) mem_44130)[squot64(sext_i32_i64(virt_group_id_45158) *
                                              squot64(segred_group_sizze_31836,
                                                      segment_sizze_nonzzero_45147) +
                                              sext_i32_i64(local_tid_45150),
                                              N_27931) * N_27931 +
                                      (sext_i32_i64(virt_group_id_45158) *
                                       squot64(segred_group_sizze_31836,
                                               segment_sizze_nonzzero_45147) +
                                       sext_i32_i64(local_tid_45150) -
                                       squot64(sext_i32_i64(virt_group_id_45158) *
                                               squot64(segred_group_sizze_31836,
                                                       segment_sizze_nonzzero_45147) +
                                               sext_i32_i64(local_tid_45150),
                                               N_27931) * N_27931)] = ((__local
                                                                        float *) red_arr_mem_45154)[(sext_i32_i64(local_tid_45150) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_45147 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31836
}
__kernel void mainDetailedzisegred_small_32356(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45408_backing_aligned_0,
                                               int64_t N_27931, int64_t m_27932,
                                               int64_t i32_res_27945,
                                               int64_t num_groups_32403,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44174,
                                               __global
                                               unsigned char *mem_44225,
                                               __global
                                               unsigned char *mem_44228,
                                               int64_t segment_sizze_nonzzero_45401)
{
    #define segred_group_sizze_32402 (mainDetailedzisegred_group_sizze_32350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45408_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45408_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45403;
    int32_t local_tid_45404;
    int64_t group_sizze_45407;
    int32_t wave_sizze_45406;
    int32_t group_tid_45405;
    
    global_tid_45403 = get_global_id(0);
    local_tid_45404 = get_local_id(0);
    group_sizze_45407 = get_local_size(0);
    wave_sizze_45406 = LOCKSTEP_WIDTH;
    group_tid_45405 = get_group_id(0);
    
    int32_t phys_tid_32356;
    
    phys_tid_32356 = global_tid_45403;
    
    __local char *red_arr_mem_45408;
    
    red_arr_mem_45408 = (__local char *) red_arr_mem_45408_backing_0;
    
    int32_t phys_group_id_45410;
    
    phys_group_id_45410 = get_group_id(0);
    for (int32_t i_45411 = 0; i_45411 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932,
                                          squot64(segred_group_sizze_32402,
                                                  segment_sizze_nonzzero_45401))) -
                   phys_group_id_45410, sext_i64_i32(num_groups_32403));
         i_45411++) {
        int32_t virt_group_id_45412 = phys_group_id_45410 + i_45411 *
                sext_i64_i32(num_groups_32403);
        int64_t gtid_32347 = squot64(sext_i32_i64(local_tid_45404),
                                     segment_sizze_nonzzero_45401) +
                sext_i32_i64(virt_group_id_45412) *
                squot64(segred_group_sizze_32402, segment_sizze_nonzzero_45401);
        int64_t gtid_32355 = srem64(sext_i32_i64(local_tid_45404),
                                    i32_res_27945);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27945) && (slt64(gtid_32347, m_27932) &&
                                            slt64(sext_i32_i64(local_tid_45404),
                                                  i32_res_27945 *
                                                  squot64(segred_group_sizze_32402,
                                                          segment_sizze_nonzzero_45401)))) {
                int32_t defunc_0_f_res_32410 = ((__global
                                                 int32_t *) mem_44225)[gtid_32347];
                int32_t index_primexp_41417 = sext_i64_i32(gtid_32355);
                bool cond_32412 = slt32(index_primexp_41417,
                                        defunc_0_f_res_32410);
                float defunc_0_f_res_32413;
                
                if (cond_32412) {
                    int64_t i_32414 = sext_i32_i64(index_primexp_41417);
                    float defunc_0_f_res_t_res_32415 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_32347 *
                                                                                              N_27931 +
                                                                                              i_32414];
                    
                    defunc_0_f_res_32413 = defunc_0_f_res_t_res_32415;
                } else {
                    defunc_0_f_res_32413 = 0.0F;
                }
                
                float defunc_0_f_res_32416 = defunc_0_f_res_32413 *
                      defunc_0_f_res_32413;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)] =
                        defunc_0_f_res_32416;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27945)) {
            // perform segmented scan to imitate reduction
            {
                float x_32406;
                float x_32407;
                float x_45413;
                float x_45414;
                bool ltid_in_bounds_45416;
                
                ltid_in_bounds_45416 = slt64(sext_i32_i64(local_tid_45404),
                                             i32_res_27945 *
                                             squot64(segred_group_sizze_32402,
                                                     segment_sizze_nonzzero_45401));
                
                int32_t skip_threads_45417;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45416) {
                        x_32407 = ((volatile __local
                                    float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)];
                        if ((local_tid_45404 - squot32(local_tid_45404, 32) *
                             32) == 0) {
                            x_32406 = x_32407;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45417 = 1;
                    while (slt32(skip_threads_45417, 32)) {
                        if (sle32(skip_threads_45417, local_tid_45404 -
                                  squot32(local_tid_45404, 32) * 32) &&
                            ltid_in_bounds_45416) {
                            // read operands
                            {
                                x_32406 = ((volatile __local
                                            float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404) -
                                                                        sext_i32_i64(skip_threads_45417)];
                            }
                            // perform operation
                            {
                                bool inactive_45418 =
                                     slt64(srem64(sext_i32_i64(local_tid_45404),
                                                  i32_res_27945),
                                           sext_i32_i64(local_tid_45404) -
                                           sext_i32_i64(local_tid_45404 -
                                           skip_threads_45417));
                                
                                if (inactive_45418) {
                                    x_32406 = x_32407;
                                }
                                if (!inactive_45418) {
                                    float defunc_1_op_res_32408 = x_32406 +
                                          x_32407;
                                    
                                    x_32406 = defunc_1_op_res_32408;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45406, skip_threads_45417)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45417, local_tid_45404 -
                                  squot32(local_tid_45404, 32) * 32) &&
                            ltid_in_bounds_45416) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)] =
                                    x_32406;
                                x_32407 = x_32406;
                            }
                        }
                        if (sle32(wave_sizze_45406, skip_threads_45417)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45417 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45404 - squot32(local_tid_45404, 32) * 32) ==
                        31 && ltid_in_bounds_45416) {
                        ((volatile __local
                          float *) red_arr_mem_45408)[sext_i32_i64(squot32(local_tid_45404,
                                                                           32))] =
                            x_32406;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45419;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45404, 32) == 0 &&
                            ltid_in_bounds_45416) {
                            x_45414 = ((volatile __local
                                        float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)];
                            if ((local_tid_45404 - squot32(local_tid_45404,
                                                           32) * 32) == 0) {
                                x_45413 = x_45414;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45419 = 1;
                        while (slt32(skip_threads_45419, 32)) {
                            if (sle32(skip_threads_45419, local_tid_45404 -
                                      squot32(local_tid_45404, 32) * 32) &&
                                (squot32(local_tid_45404, 32) == 0 &&
                                 ltid_in_bounds_45416)) {
                                // read operands
                                {
                                    x_45413 = ((volatile __local
                                                float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404) -
                                                                            sext_i32_i64(skip_threads_45419)];
                                }
                                // perform operation
                                {
                                    bool inactive_45420 =
                                         slt64(srem64(sext_i32_i64(local_tid_45404 *
                                                      32 + 32 - 1),
                                                      i32_res_27945),
                                               sext_i32_i64(local_tid_45404 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45404 -
                                                             skip_threads_45419) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45420) {
                                        x_45413 = x_45414;
                                    }
                                    if (!inactive_45420) {
                                        float defunc_1_op_res_45415 = x_45413 +
                                              x_45414;
                                        
                                        x_45413 = defunc_1_op_res_45415;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45406, skip_threads_45419)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45419, local_tid_45404 -
                                      squot32(local_tid_45404, 32) * 32) &&
                                (squot32(local_tid_45404, 32) == 0 &&
                                 ltid_in_bounds_45416)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)] =
                                        x_45413;
                                    x_45414 = x_45413;
                                }
                            }
                            if (sle32(wave_sizze_45406, skip_threads_45419)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45419 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45404, 32) == 0 ||
                          !ltid_in_bounds_45416)) {
                        // read operands
                        {
                            x_32407 = x_32406;
                            x_32406 = ((__local
                                        float *) red_arr_mem_45408)[sext_i32_i64(squot32(local_tid_45404,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45421 =
                                 slt64(srem64(sext_i32_i64(local_tid_45404),
                                              i32_res_27945),
                                       sext_i32_i64(local_tid_45404) -
                                       sext_i32_i64(squot32(local_tid_45404,
                                                            32) * 32 - 1));
                            
                            if (inactive_45421) {
                                x_32406 = x_32407;
                            }
                            if (!inactive_45421) {
                                float defunc_1_op_res_32408 = x_32406 + x_32407;
                                
                                x_32406 = defunc_1_op_res_32408;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)] =
                                x_32406;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45404, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45408)[sext_i32_i64(local_tid_45404)] =
                            x_32407;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45412) *
                      squot64(segred_group_sizze_32402,
                              segment_sizze_nonzzero_45401) +
                      sext_i32_i64(local_tid_45404), m_27932) &&
                slt64(sext_i32_i64(local_tid_45404),
                      squot64(segred_group_sizze_32402,
                              segment_sizze_nonzzero_45401))) {
                ((__global
                  float *) mem_44228)[sext_i32_i64(virt_group_id_45412) *
                                      squot64(segred_group_sizze_32402,
                                              segment_sizze_nonzzero_45401) +
                                      sext_i32_i64(local_tid_45404)] = ((__local
                                                                         float *) red_arr_mem_45408)[(sext_i32_i64(local_tid_45404) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45401 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32402
}
__kernel void mainDetailedzisegred_small_32377(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45348_backing_aligned_0,
                                               int64_t m_27932, int64_t N_27933,
                                               int64_t i32_res_27945,
                                               int64_t num_groups_32389,
                                               __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *mem_44225,
                                               int64_t segment_sizze_nonzzero_45341)
{
    #define segred_group_sizze_32388 (mainDetailedzisegred_group_sizze_32371)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45348_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45348_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45343;
    int32_t local_tid_45344;
    int64_t group_sizze_45347;
    int32_t wave_sizze_45346;
    int32_t group_tid_45345;
    
    global_tid_45343 = get_global_id(0);
    local_tid_45344 = get_local_id(0);
    group_sizze_45347 = get_local_size(0);
    wave_sizze_45346 = LOCKSTEP_WIDTH;
    group_tid_45345 = get_group_id(0);
    
    int32_t phys_tid_32377;
    
    phys_tid_32377 = global_tid_45343;
    
    __local char *red_arr_mem_45348;
    
    red_arr_mem_45348 = (__local char *) red_arr_mem_45348_backing_0;
    
    int32_t phys_group_id_45350;
    
    phys_group_id_45350 = get_group_id(0);
    for (int32_t i_45351 = 0; i_45351 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932,
                                          squot64(segred_group_sizze_32388,
                                                  segment_sizze_nonzzero_45341))) -
                   phys_group_id_45350, sext_i64_i32(num_groups_32389));
         i_45351++) {
        int32_t virt_group_id_45352 = phys_group_id_45350 + i_45351 *
                sext_i64_i32(num_groups_32389);
        int64_t gtid_32368 = squot64(sext_i32_i64(local_tid_45344),
                                     segment_sizze_nonzzero_45341) +
                sext_i32_i64(virt_group_id_45352) *
                squot64(segred_group_sizze_32388, segment_sizze_nonzzero_45341);
        int64_t gtid_32376 = srem64(sext_i32_i64(local_tid_45344),
                                    i32_res_27945);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27945) && (slt64(gtid_32368, m_27932) &&
                                            slt64(sext_i32_i64(local_tid_45344),
                                                  i32_res_27945 *
                                                  squot64(segred_group_sizze_32388,
                                                          segment_sizze_nonzzero_45341)))) {
                float x_32396 = ((__global
                                  float *) images_mem_43378)[gtid_32368 *
                                                             N_27933 +
                                                             gtid_32376];
                bool isnan_res_32397;
                
                isnan_res_32397 = futrts_isnan32(x_32396);
                
                bool cond_32398 = !isnan_res_32397;
                int32_t defunc_0_f_res_32399 = btoi_bool_i32(cond_32398);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)] =
                        defunc_0_f_res_32399;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27945)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_32392;
                int32_t x_32393;
                int32_t x_45353;
                int32_t x_45354;
                bool ltid_in_bounds_45356;
                
                ltid_in_bounds_45356 = slt64(sext_i32_i64(local_tid_45344),
                                             i32_res_27945 *
                                             squot64(segred_group_sizze_32388,
                                                     segment_sizze_nonzzero_45341));
                
                int32_t skip_threads_45357;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45356) {
                        x_32393 = ((volatile __local
                                    int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)];
                        if ((local_tid_45344 - squot32(local_tid_45344, 32) *
                             32) == 0) {
                            x_32392 = x_32393;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45357 = 1;
                    while (slt32(skip_threads_45357, 32)) {
                        if (sle32(skip_threads_45357, local_tid_45344 -
                                  squot32(local_tid_45344, 32) * 32) &&
                            ltid_in_bounds_45356) {
                            // read operands
                            {
                                x_32392 = ((volatile __local
                                            int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344) -
                                                                          sext_i32_i64(skip_threads_45357)];
                            }
                            // perform operation
                            {
                                bool inactive_45358 =
                                     slt64(srem64(sext_i32_i64(local_tid_45344),
                                                  i32_res_27945),
                                           sext_i32_i64(local_tid_45344) -
                                           sext_i32_i64(local_tid_45344 -
                                           skip_threads_45357));
                                
                                if (inactive_45358) {
                                    x_32392 = x_32393;
                                }
                                if (!inactive_45358) {
                                    int32_t defunc_1_op_res_32394 =
                                            add32(x_32392, x_32393);
                                    
                                    x_32392 = defunc_1_op_res_32394;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45346, skip_threads_45357)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45357, local_tid_45344 -
                                  squot32(local_tid_45344, 32) * 32) &&
                            ltid_in_bounds_45356) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)] =
                                    x_32392;
                                x_32393 = x_32392;
                            }
                        }
                        if (sle32(wave_sizze_45346, skip_threads_45357)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45357 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45344 - squot32(local_tid_45344, 32) * 32) ==
                        31 && ltid_in_bounds_45356) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45348)[sext_i32_i64(squot32(local_tid_45344,
                                                                             32))] =
                            x_32392;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45359;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45344, 32) == 0 &&
                            ltid_in_bounds_45356) {
                            x_45354 = ((volatile __local
                                        int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)];
                            if ((local_tid_45344 - squot32(local_tid_45344,
                                                           32) * 32) == 0) {
                                x_45353 = x_45354;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45359 = 1;
                        while (slt32(skip_threads_45359, 32)) {
                            if (sle32(skip_threads_45359, local_tid_45344 -
                                      squot32(local_tid_45344, 32) * 32) &&
                                (squot32(local_tid_45344, 32) == 0 &&
                                 ltid_in_bounds_45356)) {
                                // read operands
                                {
                                    x_45353 = ((volatile __local
                                                int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344) -
                                                                              sext_i32_i64(skip_threads_45359)];
                                }
                                // perform operation
                                {
                                    bool inactive_45360 =
                                         slt64(srem64(sext_i32_i64(local_tid_45344 *
                                                      32 + 32 - 1),
                                                      i32_res_27945),
                                               sext_i32_i64(local_tid_45344 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45344 -
                                                             skip_threads_45359) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45360) {
                                        x_45353 = x_45354;
                                    }
                                    if (!inactive_45360) {
                                        int32_t defunc_1_op_res_45355 =
                                                add32(x_45353, x_45354);
                                        
                                        x_45353 = defunc_1_op_res_45355;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45346, skip_threads_45359)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45359, local_tid_45344 -
                                      squot32(local_tid_45344, 32) * 32) &&
                                (squot32(local_tid_45344, 32) == 0 &&
                                 ltid_in_bounds_45356)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)] =
                                        x_45353;
                                    x_45354 = x_45353;
                                }
                            }
                            if (sle32(wave_sizze_45346, skip_threads_45359)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45359 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45344, 32) == 0 ||
                          !ltid_in_bounds_45356)) {
                        // read operands
                        {
                            x_32393 = x_32392;
                            x_32392 = ((__local
                                        int32_t *) red_arr_mem_45348)[sext_i32_i64(squot32(local_tid_45344,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45361 =
                                 slt64(srem64(sext_i32_i64(local_tid_45344),
                                              i32_res_27945),
                                       sext_i32_i64(local_tid_45344) -
                                       sext_i32_i64(squot32(local_tid_45344,
                                                            32) * 32 - 1));
                            
                            if (inactive_45361) {
                                x_32392 = x_32393;
                            }
                            if (!inactive_45361) {
                                int32_t defunc_1_op_res_32394 = add32(x_32392,
                                                                      x_32393);
                                
                                x_32392 = defunc_1_op_res_32394;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)] =
                                x_32392;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45344, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45348)[sext_i32_i64(local_tid_45344)] =
                            x_32393;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45352) *
                      squot64(segred_group_sizze_32388,
                              segment_sizze_nonzzero_45341) +
                      sext_i32_i64(local_tid_45344), m_27932) &&
                slt64(sext_i32_i64(local_tid_45344),
                      squot64(segred_group_sizze_32388,
                              segment_sizze_nonzzero_45341))) {
                ((__global
                  int32_t *) mem_44225)[sext_i32_i64(virt_group_id_45352) *
                                        squot64(segred_group_sizze_32388,
                                                segment_sizze_nonzzero_45341) +
                                        sext_i32_i64(local_tid_45344)] =
                    ((__local
                      int32_t *) red_arr_mem_45348)[(sext_i32_i64(local_tid_45344) +
                                                     1) *
                                                    segment_sizze_nonzzero_45341 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32388
}
__kernel void mainDetailedzisegred_small_32528(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45517_backing_aligned_0,
                                               int64_t N_27931, int64_t m_27932,
                                               int64_t i32_res_28306,
                                               int64_t num_groups_32546,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44174,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44237,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44238,
                                               __global
                                               unsigned char *mem_44271,
                                               int64_t segment_sizze_nonzzero_45510)
{
    #define segred_group_sizze_32545 (mainDetailedzisegred_group_sizze_32522)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45517_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45517_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45512;
    int32_t local_tid_45513;
    int64_t group_sizze_45516;
    int32_t wave_sizze_45515;
    int32_t group_tid_45514;
    
    global_tid_45512 = get_global_id(0);
    local_tid_45513 = get_local_id(0);
    group_sizze_45516 = get_local_size(0);
    wave_sizze_45515 = LOCKSTEP_WIDTH;
    group_tid_45514 = get_group_id(0);
    
    int32_t phys_tid_32528;
    
    phys_tid_32528 = global_tid_45512;
    
    __local char *red_arr_mem_45517;
    
    red_arr_mem_45517 = (__local char *) red_arr_mem_45517_backing_0;
    
    int32_t phys_group_id_45519;
    
    phys_group_id_45519 = get_group_id(0);
    for (int32_t i_45520 = 0; i_45520 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932,
                                          squot64(segred_group_sizze_32545,
                                                  segment_sizze_nonzzero_45510))) -
                   phys_group_id_45519, sext_i64_i32(num_groups_32546));
         i_45520++) {
        int32_t virt_group_id_45521 = phys_group_id_45519 + i_45520 *
                sext_i64_i32(num_groups_32546);
        int64_t gtid_32519 = squot64(sext_i32_i64(local_tid_45513),
                                     segment_sizze_nonzzero_45510) +
                sext_i32_i64(virt_group_id_45521) *
                squot64(segred_group_sizze_32545, segment_sizze_nonzzero_45510);
        int64_t gtid_32527 = srem64(sext_i32_i64(local_tid_45513),
                                    i32_res_28306);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28306) && (slt64(gtid_32519, m_27932) &&
                                            slt64(sext_i32_i64(local_tid_45513),
                                                  i32_res_28306 *
                                                  squot64(segred_group_sizze_32545,
                                                          segment_sizze_nonzzero_45510)))) {
                int32_t x_32554 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44237)[gtid_32519];
                int32_t index_primexp_41422 = sext_i64_i32(gtid_32527);
                bool cond_32556 = slt32(index_primexp_41422, x_32554);
                float defunc_0_f_res_32557;
                
                if (cond_32556) {
                    int32_t x_32553 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_32519];
                    int32_t x_32558 = add32(x_32553, index_primexp_41422);
                    int32_t x_32559 = sub32(x_32558, x_32554);
                    int32_t i_32560 = add32(1, x_32559);
                    int64_t i_32561 = sext_i32_i64(i_32560);
                    float defunc_0_f_res_t_res_32562 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_32519 *
                                                                                              N_27931 +
                                                                                              i_32561];
                    
                    defunc_0_f_res_32557 = defunc_0_f_res_t_res_32562;
                } else {
                    defunc_0_f_res_32557 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)] =
                        defunc_0_f_res_32557;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28306)) {
            // perform segmented scan to imitate reduction
            {
                float x_32549;
                float x_32550;
                float x_45522;
                float x_45523;
                bool ltid_in_bounds_45525;
                
                ltid_in_bounds_45525 = slt64(sext_i32_i64(local_tid_45513),
                                             i32_res_28306 *
                                             squot64(segred_group_sizze_32545,
                                                     segment_sizze_nonzzero_45510));
                
                int32_t skip_threads_45526;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45525) {
                        x_32550 = ((volatile __local
                                    float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)];
                        if ((local_tid_45513 - squot32(local_tid_45513, 32) *
                             32) == 0) {
                            x_32549 = x_32550;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45526 = 1;
                    while (slt32(skip_threads_45526, 32)) {
                        if (sle32(skip_threads_45526, local_tid_45513 -
                                  squot32(local_tid_45513, 32) * 32) &&
                            ltid_in_bounds_45525) {
                            // read operands
                            {
                                x_32549 = ((volatile __local
                                            float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513) -
                                                                        sext_i32_i64(skip_threads_45526)];
                            }
                            // perform operation
                            {
                                bool inactive_45527 =
                                     slt64(srem64(sext_i32_i64(local_tid_45513),
                                                  i32_res_28306),
                                           sext_i32_i64(local_tid_45513) -
                                           sext_i32_i64(local_tid_45513 -
                                           skip_threads_45526));
                                
                                if (inactive_45527) {
                                    x_32549 = x_32550;
                                }
                                if (!inactive_45527) {
                                    float defunc_1_op_res_32551 = x_32549 +
                                          x_32550;
                                    
                                    x_32549 = defunc_1_op_res_32551;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45515, skip_threads_45526)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45526, local_tid_45513 -
                                  squot32(local_tid_45513, 32) * 32) &&
                            ltid_in_bounds_45525) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)] =
                                    x_32549;
                                x_32550 = x_32549;
                            }
                        }
                        if (sle32(wave_sizze_45515, skip_threads_45526)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45526 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45513 - squot32(local_tid_45513, 32) * 32) ==
                        31 && ltid_in_bounds_45525) {
                        ((volatile __local
                          float *) red_arr_mem_45517)[sext_i32_i64(squot32(local_tid_45513,
                                                                           32))] =
                            x_32549;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45528;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45513, 32) == 0 &&
                            ltid_in_bounds_45525) {
                            x_45523 = ((volatile __local
                                        float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)];
                            if ((local_tid_45513 - squot32(local_tid_45513,
                                                           32) * 32) == 0) {
                                x_45522 = x_45523;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45528 = 1;
                        while (slt32(skip_threads_45528, 32)) {
                            if (sle32(skip_threads_45528, local_tid_45513 -
                                      squot32(local_tid_45513, 32) * 32) &&
                                (squot32(local_tid_45513, 32) == 0 &&
                                 ltid_in_bounds_45525)) {
                                // read operands
                                {
                                    x_45522 = ((volatile __local
                                                float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513) -
                                                                            sext_i32_i64(skip_threads_45528)];
                                }
                                // perform operation
                                {
                                    bool inactive_45529 =
                                         slt64(srem64(sext_i32_i64(local_tid_45513 *
                                                      32 + 32 - 1),
                                                      i32_res_28306),
                                               sext_i32_i64(local_tid_45513 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45513 -
                                                             skip_threads_45528) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45529) {
                                        x_45522 = x_45523;
                                    }
                                    if (!inactive_45529) {
                                        float defunc_1_op_res_45524 = x_45522 +
                                              x_45523;
                                        
                                        x_45522 = defunc_1_op_res_45524;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45515, skip_threads_45528)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45528, local_tid_45513 -
                                      squot32(local_tid_45513, 32) * 32) &&
                                (squot32(local_tid_45513, 32) == 0 &&
                                 ltid_in_bounds_45525)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)] =
                                        x_45522;
                                    x_45523 = x_45522;
                                }
                            }
                            if (sle32(wave_sizze_45515, skip_threads_45528)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45528 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45513, 32) == 0 ||
                          !ltid_in_bounds_45525)) {
                        // read operands
                        {
                            x_32550 = x_32549;
                            x_32549 = ((__local
                                        float *) red_arr_mem_45517)[sext_i32_i64(squot32(local_tid_45513,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45530 =
                                 slt64(srem64(sext_i32_i64(local_tid_45513),
                                              i32_res_28306),
                                       sext_i32_i64(local_tid_45513) -
                                       sext_i32_i64(squot32(local_tid_45513,
                                                            32) * 32 - 1));
                            
                            if (inactive_45530) {
                                x_32549 = x_32550;
                            }
                            if (!inactive_45530) {
                                float defunc_1_op_res_32551 = x_32549 + x_32550;
                                
                                x_32549 = defunc_1_op_res_32551;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)] =
                                x_32549;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45513, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45517)[sext_i32_i64(local_tid_45513)] =
                            x_32550;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45521) *
                      squot64(segred_group_sizze_32545,
                              segment_sizze_nonzzero_45510) +
                      sext_i32_i64(local_tid_45513), m_27932) &&
                slt64(sext_i32_i64(local_tid_45513),
                      squot64(segred_group_sizze_32545,
                              segment_sizze_nonzzero_45510))) {
                ((__global
                  float *) mem_44271)[sext_i32_i64(virt_group_id_45521) *
                                      squot64(segred_group_sizze_32545,
                                              segment_sizze_nonzzero_45510) +
                                      sext_i32_i64(local_tid_45513)] = ((__local
                                                                         float *) red_arr_mem_45517)[(sext_i32_i64(local_tid_45513) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45510 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32545
}
__kernel void mainDetailedzisegred_small_33633(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45683_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45681_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45679_backing_aligned_2,
                                               int64_t m_27932,
                                               int64_t iota32_arg_28331,
                                               int64_t num_groups_33804,
                                               __global
                                               unsigned char *mem_44277,
                                               __global
                                               unsigned char *mem_44332,
                                               __global
                                               unsigned char *mem_44334,
                                               __global
                                               unsigned char *mem_44338,
                                               __global
                                               unsigned char *mem_44341,
                                               __global
                                               unsigned char *mem_44343,
                                               __global
                                               unsigned char *mem_44345,
                                               __global
                                               unsigned char *mem_44348,
                                               int64_t segment_sizze_nonzzero_45672)
{
    #define segred_group_sizze_33803 (mainDetailedzisegred_group_sizze_33627)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45683_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45683_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45681_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45681_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45679_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45679_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45674;
    int32_t local_tid_45675;
    int64_t group_sizze_45678;
    int32_t wave_sizze_45677;
    int32_t group_tid_45676;
    
    global_tid_45674 = get_global_id(0);
    local_tid_45675 = get_local_id(0);
    group_sizze_45678 = get_local_size(0);
    wave_sizze_45677 = LOCKSTEP_WIDTH;
    group_tid_45676 = get_group_id(0);
    
    int32_t phys_tid_33633;
    
    phys_tid_33633 = global_tid_45674;
    
    __local char *red_arr_mem_45679;
    
    red_arr_mem_45679 = (__local char *) red_arr_mem_45679_backing_0;
    
    __local char *red_arr_mem_45681;
    
    red_arr_mem_45681 = (__local char *) red_arr_mem_45681_backing_1;
    
    __local char *red_arr_mem_45683;
    
    red_arr_mem_45683 = (__local char *) red_arr_mem_45683_backing_2;
    
    int32_t phys_group_id_45685;
    
    phys_group_id_45685 = get_group_id(0);
    for (int32_t i_45686 = 0; i_45686 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27932,
                                          squot64(segred_group_sizze_33803,
                                                  segment_sizze_nonzzero_45672))) -
                   phys_group_id_45685, sext_i64_i32(num_groups_33804));
         i_45686++) {
        int32_t virt_group_id_45687 = phys_group_id_45685 + i_45686 *
                sext_i64_i32(num_groups_33804);
        int64_t gtid_33624 = squot64(sext_i32_i64(local_tid_45675),
                                     segment_sizze_nonzzero_45672) +
                sext_i32_i64(virt_group_id_45687) *
                squot64(segred_group_sizze_33803, segment_sizze_nonzzero_45672);
        int64_t gtid_33632 = srem64(sext_i32_i64(local_tid_45675),
                                    iota32_arg_28331);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_28331) && (slt64(gtid_33624, m_27932) &&
                                               slt64(sext_i32_i64(local_tid_45675),
                                                     iota32_arg_28331 *
                                                     squot64(segred_group_sizze_33803,
                                                             segment_sizze_nonzzero_45672)))) {
                int32_t y_33824 = ((__global int32_t *) mem_44334)[gtid_33624];
                float y_33825 = ((__global float *) mem_44332)[gtid_33624];
                float x_33829 = ((__global float *) mem_44338)[gtid_33624 *
                                                               iota32_arg_28331 +
                                                               gtid_33632];
                float x_33830 = ((__global float *) mem_44277)[gtid_33632];
                int32_t index_primexp_41442 = sext_i64_i32(gtid_33632);
                float defunc_0_f_res_33833 = x_33829 / y_33825;
                bool cond_33834 = slt32(index_primexp_41442, y_33824);
                bool isnan_res_33835;
                
                isnan_res_33835 = futrts_isnan32(defunc_0_f_res_33833);
                
                bool cond_t_res_33836 = !isnan_res_33835;
                bool x_33837 = cond_33834 && cond_t_res_33836;
                float abs_res_33838 = (float) fabs(defunc_0_f_res_33833);
                bool defunc_2_f_res_t_res_33839 = x_33830 < abs_res_33838;
                bool x_33840 = x_33837 && defunc_2_f_res_t_res_33839;
                float defunc_1_f_res_33841;
                
                if (cond_33834) {
                    defunc_1_f_res_33841 = defunc_0_f_res_33833;
                } else {
                    defunc_1_f_res_33841 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_44348)[gtid_33624 *
                                                   iota32_arg_28331 +
                                                   gtid_33632] =
                        defunc_0_f_res_33833;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)] =
                        x_33840;
                    ((__local
                      int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)] =
                        index_primexp_41442;
                    ((__local
                      float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)] =
                        defunc_1_f_res_33841;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_28331)) {
            // perform segmented scan to imitate reduction
            {
                bool x_33810;
                int32_t x_33811;
                float x_33812;
                bool x_33813;
                int32_t x_33814;
                float x_33815;
                bool x_45688;
                int32_t x_45689;
                float x_45690;
                bool x_45691;
                int32_t x_45692;
                float x_45693;
                bool ltid_in_bounds_45702;
                
                ltid_in_bounds_45702 = slt64(sext_i32_i64(local_tid_45675),
                                             iota32_arg_28331 *
                                             squot64(segred_group_sizze_33803,
                                                     segment_sizze_nonzzero_45672));
                
                int32_t skip_threads_45703;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45702) {
                        x_33813 = ((volatile __local
                                    bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)];
                        x_33814 = ((volatile __local
                                    int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)];
                        x_33815 = ((volatile __local
                                    float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)];
                        if ((local_tid_45675 - squot32(local_tid_45675, 32) *
                             32) == 0) {
                            x_33810 = x_33813;
                            x_33811 = x_33814;
                            x_33812 = x_33815;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45703 = 1;
                    while (slt32(skip_threads_45703, 32)) {
                        if (sle32(skip_threads_45703, local_tid_45675 -
                                  squot32(local_tid_45675, 32) * 32) &&
                            ltid_in_bounds_45702) {
                            // read operands
                            {
                                x_33810 = ((volatile __local
                                            bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675) -
                                                                       sext_i32_i64(skip_threads_45703)];
                                x_33811 = ((volatile __local
                                            int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675) -
                                                                          sext_i32_i64(skip_threads_45703)];
                                x_33812 = ((volatile __local
                                            float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675) -
                                                                        sext_i32_i64(skip_threads_45703)];
                            }
                            // perform operation
                            {
                                bool inactive_45704 =
                                     slt64(srem64(sext_i32_i64(local_tid_45675),
                                                  iota32_arg_28331),
                                           sext_i32_i64(local_tid_45675) -
                                           sext_i32_i64(local_tid_45675 -
                                           skip_threads_45703));
                                
                                if (inactive_45704) {
                                    x_33810 = x_33813;
                                    x_33811 = x_33814;
                                    x_33812 = x_33815;
                                }
                                if (!inactive_45704) {
                                    bool defunc_1_op_res_33816;
                                    int32_t defunc_1_op_res_33817;
                                    
                                    if (x_33810) {
                                        defunc_1_op_res_33816 = x_33810;
                                        defunc_1_op_res_33817 = x_33811;
                                    } else {
                                        bool x_33818 = x_33813 && x_33813;
                                        bool x_33819 = !x_33813;
                                        bool y_33820 = x_33810 && x_33819;
                                        bool defunc_1_op_res_f_res_33821 =
                                             x_33818 || y_33820;
                                        int32_t defunc_1_op_res_f_res_33822;
                                        
                                        if (x_33813) {
                                            defunc_1_op_res_f_res_33822 =
                                                x_33814;
                                        } else {
                                            defunc_1_op_res_f_res_33822 =
                                                x_33811;
                                        }
                                        defunc_1_op_res_33816 =
                                            defunc_1_op_res_f_res_33821;
                                        defunc_1_op_res_33817 =
                                            defunc_1_op_res_f_res_33822;
                                    }
                                    
                                    float defunc_1_op_res_33823 = x_33812 +
                                          x_33815;
                                    
                                    x_33810 = defunc_1_op_res_33816;
                                    x_33811 = defunc_1_op_res_33817;
                                    x_33812 = defunc_1_op_res_33823;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45677, skip_threads_45703)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45703, local_tid_45675 -
                                  squot32(local_tid_45675, 32) * 32) &&
                            ltid_in_bounds_45702) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)] =
                                    x_33810;
                                x_33813 = x_33810;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)] =
                                    x_33811;
                                x_33814 = x_33811;
                                ((volatile __local
                                  float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)] =
                                    x_33812;
                                x_33815 = x_33812;
                            }
                        }
                        if (sle32(wave_sizze_45677, skip_threads_45703)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45703 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45675 - squot32(local_tid_45675, 32) * 32) ==
                        31 && ltid_in_bounds_45702) {
                        ((volatile __local
                          bool *) red_arr_mem_45679)[sext_i32_i64(squot32(local_tid_45675,
                                                                          32))] =
                            x_33810;
                        ((volatile __local
                          int32_t *) red_arr_mem_45681)[sext_i32_i64(squot32(local_tid_45675,
                                                                             32))] =
                            x_33811;
                        ((volatile __local
                          float *) red_arr_mem_45683)[sext_i32_i64(squot32(local_tid_45675,
                                                                           32))] =
                            x_33812;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45705;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45675, 32) == 0 &&
                            ltid_in_bounds_45702) {
                            x_45691 = ((volatile __local
                                        bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)];
                            x_45692 = ((volatile __local
                                        int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)];
                            x_45693 = ((volatile __local
                                        float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)];
                            if ((local_tid_45675 - squot32(local_tid_45675,
                                                           32) * 32) == 0) {
                                x_45688 = x_45691;
                                x_45689 = x_45692;
                                x_45690 = x_45693;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45705 = 1;
                        while (slt32(skip_threads_45705, 32)) {
                            if (sle32(skip_threads_45705, local_tid_45675 -
                                      squot32(local_tid_45675, 32) * 32) &&
                                (squot32(local_tid_45675, 32) == 0 &&
                                 ltid_in_bounds_45702)) {
                                // read operands
                                {
                                    x_45688 = ((volatile __local
                                                bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675) -
                                                                           sext_i32_i64(skip_threads_45705)];
                                    x_45689 = ((volatile __local
                                                int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675) -
                                                                              sext_i32_i64(skip_threads_45705)];
                                    x_45690 = ((volatile __local
                                                float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675) -
                                                                            sext_i32_i64(skip_threads_45705)];
                                }
                                // perform operation
                                {
                                    bool inactive_45706 =
                                         slt64(srem64(sext_i32_i64(local_tid_45675 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28331),
                                               sext_i32_i64(local_tid_45675 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45675 -
                                                             skip_threads_45705) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45706) {
                                        x_45688 = x_45691;
                                        x_45689 = x_45692;
                                        x_45690 = x_45693;
                                    }
                                    if (!inactive_45706) {
                                        bool defunc_1_op_res_45694;
                                        int32_t defunc_1_op_res_45695;
                                        
                                        if (x_45688) {
                                            defunc_1_op_res_45694 = x_45688;
                                            defunc_1_op_res_45695 = x_45689;
                                        } else {
                                            bool x_45696 = x_45691 && x_45691;
                                            bool x_45697 = !x_45691;
                                            bool y_45698 = x_45688 && x_45697;
                                            bool defunc_1_op_res_f_res_45699 =
                                                 x_45696 || y_45698;
                                            int32_t defunc_1_op_res_f_res_45700;
                                            
                                            if (x_45691) {
                                                defunc_1_op_res_f_res_45700 =
                                                    x_45692;
                                            } else {
                                                defunc_1_op_res_f_res_45700 =
                                                    x_45689;
                                            }
                                            defunc_1_op_res_45694 =
                                                defunc_1_op_res_f_res_45699;
                                            defunc_1_op_res_45695 =
                                                defunc_1_op_res_f_res_45700;
                                        }
                                        
                                        float defunc_1_op_res_45701 = x_45690 +
                                              x_45693;
                                        
                                        x_45688 = defunc_1_op_res_45694;
                                        x_45689 = defunc_1_op_res_45695;
                                        x_45690 = defunc_1_op_res_45701;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45677, skip_threads_45705)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45705, local_tid_45675 -
                                      squot32(local_tid_45675, 32) * 32) &&
                                (squot32(local_tid_45675, 32) == 0 &&
                                 ltid_in_bounds_45702)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)] =
                                        x_45688;
                                    x_45691 = x_45688;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)] =
                                        x_45689;
                                    x_45692 = x_45689;
                                    ((volatile __local
                                      float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)] =
                                        x_45690;
                                    x_45693 = x_45690;
                                }
                            }
                            if (sle32(wave_sizze_45677, skip_threads_45705)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45705 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45675, 32) == 0 ||
                          !ltid_in_bounds_45702)) {
                        // read operands
                        {
                            x_33813 = x_33810;
                            x_33814 = x_33811;
                            x_33815 = x_33812;
                            x_33810 = ((__local
                                        bool *) red_arr_mem_45679)[sext_i32_i64(squot32(local_tid_45675,
                                                                                        32)) -
                                                                   1];
                            x_33811 = ((__local
                                        int32_t *) red_arr_mem_45681)[sext_i32_i64(squot32(local_tid_45675,
                                                                                           32)) -
                                                                      1];
                            x_33812 = ((__local
                                        float *) red_arr_mem_45683)[sext_i32_i64(squot32(local_tid_45675,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45707 =
                                 slt64(srem64(sext_i32_i64(local_tid_45675),
                                              iota32_arg_28331),
                                       sext_i32_i64(local_tid_45675) -
                                       sext_i32_i64(squot32(local_tid_45675,
                                                            32) * 32 - 1));
                            
                            if (inactive_45707) {
                                x_33810 = x_33813;
                                x_33811 = x_33814;
                                x_33812 = x_33815;
                            }
                            if (!inactive_45707) {
                                bool defunc_1_op_res_33816;
                                int32_t defunc_1_op_res_33817;
                                
                                if (x_33810) {
                                    defunc_1_op_res_33816 = x_33810;
                                    defunc_1_op_res_33817 = x_33811;
                                } else {
                                    bool x_33818 = x_33813 && x_33813;
                                    bool x_33819 = !x_33813;
                                    bool y_33820 = x_33810 && x_33819;
                                    bool defunc_1_op_res_f_res_33821 =
                                         x_33818 || y_33820;
                                    int32_t defunc_1_op_res_f_res_33822;
                                    
                                    if (x_33813) {
                                        defunc_1_op_res_f_res_33822 = x_33814;
                                    } else {
                                        defunc_1_op_res_f_res_33822 = x_33811;
                                    }
                                    defunc_1_op_res_33816 =
                                        defunc_1_op_res_f_res_33821;
                                    defunc_1_op_res_33817 =
                                        defunc_1_op_res_f_res_33822;
                                }
                                
                                float defunc_1_op_res_33823 = x_33812 + x_33815;
                                
                                x_33810 = defunc_1_op_res_33816;
                                x_33811 = defunc_1_op_res_33817;
                                x_33812 = defunc_1_op_res_33823;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)] =
                                x_33810;
                            ((__local
                              int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)] =
                                x_33811;
                            ((__local
                              float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)] =
                                x_33812;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45675, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45679)[sext_i32_i64(local_tid_45675)] =
                            x_33813;
                        ((__local
                          int32_t *) red_arr_mem_45681)[sext_i32_i64(local_tid_45675)] =
                            x_33814;
                        ((__local
                          float *) red_arr_mem_45683)[sext_i32_i64(local_tid_45675)] =
                            x_33815;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45687) *
                      squot64(segred_group_sizze_33803,
                              segment_sizze_nonzzero_45672) +
                      sext_i32_i64(local_tid_45675), m_27932) &&
                slt64(sext_i32_i64(local_tid_45675),
                      squot64(segred_group_sizze_33803,
                              segment_sizze_nonzzero_45672))) {
                ((__global
                  bool *) mem_44341)[sext_i32_i64(virt_group_id_45687) *
                                     squot64(segred_group_sizze_33803,
                                             segment_sizze_nonzzero_45672) +
                                     sext_i32_i64(local_tid_45675)] = ((__local
                                                                        bool *) red_arr_mem_45679)[(sext_i32_i64(local_tid_45675) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45672 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44343)[sext_i32_i64(virt_group_id_45687) *
                                        squot64(segred_group_sizze_33803,
                                                segment_sizze_nonzzero_45672) +
                                        sext_i32_i64(local_tid_45675)] =
                    ((__local
                      int32_t *) red_arr_mem_45681)[(sext_i32_i64(local_tid_45675) +
                                                     1) *
                                                    segment_sizze_nonzzero_45672 -
                                                    1];
                ((__global
                  float *) mem_44345)[sext_i32_i64(virt_group_id_45687) *
                                      squot64(segred_group_sizze_33803,
                                              segment_sizze_nonzzero_45672) +
                                      sext_i32_i64(local_tid_45675)] = ((__local
                                                                         float *) red_arr_mem_45683)[(sext_i32_i64(local_tid_45675) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45672 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33803
}
__kernel void mainMagnitudezicopy_44801(int64_t m_28625, int64_t i32_res_28777,
                                        int64_t ctx_param_ext_43577,
                                        int64_t ctx_param_ext_43578,
                                        int64_t ctx_param_ext_43580, __global
                                        unsigned char *mem_param_43582, __global
                                        unsigned char *mem_43587)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44801;
    int32_t copy_ltid_44802;
    int32_t copy_gid_44803;
    
    copy_gtid_44801 = get_global_id(0);
    copy_ltid_44802 = get_local_id(0);
    copy_gid_44803 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44801), m_28625 * i32_res_28777)) {
        ((__global float *) mem_43587)[(sext_i32_i64(copy_gtid_44801) -
                                        squot64(sext_i32_i64(copy_gtid_44801),
                                                i32_res_28777) *
                                        i32_res_28777) * m_28625 +
                                       squot64(sext_i32_i64(copy_gtid_44801),
                                               i32_res_28777)] = ((__global
                                                                   float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44801),
                                                                                                      i32_res_28777) *
                                                                                              ctx_param_ext_43578 +
                                                                                              (sext_i32_i64(copy_gtid_44801) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44801),
                                                                                                       i32_res_28777) *
                                                                                               i32_res_28777) *
                                                                                              ctx_param_ext_43580)];
    }
    
  error_0:
    return;
}
__kernel void mainMagnitudeziscan_stage1_36216(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45231_backing_aligned_0,
                                               int64_t N_28624, int64_t m_28625,
                                               int64_t N_28626, __global
                                               unsigned char *images_mem_43378,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44136,
                                               __global
                                               unsigned char *mem_44165,
                                               __global
                                               unsigned char *mem_44168,
                                               int32_t num_threads_45225)
{
    #define segscan_group_sizze_36233 (mainMagnitudezisegscan_group_sizze_36210)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45231_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45231_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45226;
    int32_t local_tid_45227;
    int64_t group_sizze_45230;
    int32_t wave_sizze_45229;
    int32_t group_tid_45228;
    
    global_tid_45226 = get_global_id(0);
    local_tid_45227 = get_local_id(0);
    group_sizze_45230 = get_local_size(0);
    wave_sizze_45229 = LOCKSTEP_WIDTH;
    group_tid_45228 = get_group_id(0);
    
    int32_t phys_tid_36216;
    
    phys_tid_36216 = global_tid_45226;
    
    __local char *scan_arr_mem_45231;
    
    scan_arr_mem_45231 = (__local char *) scan_arr_mem_45231_backing_0;
    
    int64_t x_36238;
    int64_t x_36239;
    
    x_36238 = 0;
    for (int64_t j_45233 = 0; j_45233 < sdiv_up64(m_28625 * N_28624,
                                                  sext_i32_i64(num_threads_45225));
         j_45233++) {
        int64_t chunk_offset_45234 = segscan_group_sizze_36233 * j_45233 +
                sext_i32_i64(group_tid_45228) * (segscan_group_sizze_36233 *
                                                 sdiv_up64(m_28625 * N_28624,
                                                           sext_i32_i64(num_threads_45225)));
        int64_t flat_idx_45235 = chunk_offset_45234 +
                sext_i32_i64(local_tid_45227);
        int64_t gtid_36207 = squot64(flat_idx_45235, N_28624);
        int64_t gtid_36215 = flat_idx_45235 - squot64(flat_idx_45235, N_28624) *
                N_28624;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36207, m_28625) && slt64(gtid_36215, N_28624)) {
                float x_36243 = ((__global
                                  float *) images_mem_43378)[gtid_36207 *
                                                             N_28626 +
                                                             gtid_36215];
                bool isnan_res_36245;
                
                isnan_res_36245 = futrts_isnan32(x_36243);
                
                bool cond_36246 = !isnan_res_36245;
                float defunc_0_f_res_36247;
                
                if (cond_36246) {
                    float x_36244 = ((__global
                                      float *) defunc_3_map_res_mem_44136)[gtid_36207 *
                                                                           N_28624 +
                                                                           gtid_36215];
                    float defunc_0_f_res_t_res_36248 = x_36243 - x_36244;
                    
                    defunc_0_f_res_36247 = defunc_0_f_res_t_res_36248;
                } else {
                    defunc_0_f_res_36247 = NAN;
                }
                
                bool isnan_res_36249;
                
                isnan_res_36249 = futrts_isnan32(defunc_0_f_res_36247);
                
                bool defunc_0_p_res_36250 = !isnan_res_36249;
                int64_t defunc_0_f_res_36251 =
                        btoi_bool_i64(defunc_0_p_res_36250);
                
                // write to-scan values to parameters
                {
                    x_36239 = defunc_0_f_res_36251;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_44168)[gtid_36207 * N_28624 +
                                                   gtid_36215] =
                        defunc_0_f_res_36247;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36207, m_28625) && slt64(gtid_36215,
                                                          N_28624))) {
                    x_36239 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_36240 = add64(x_36238, x_36239);
                
                ((__local
                  int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                    defunc_1_op_res_36240;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45236;
            int64_t x_45237;
            int64_t x_45239;
            int64_t x_45240;
            bool ltid_in_bounds_45242;
            
            ltid_in_bounds_45242 = slt64(sext_i32_i64(local_tid_45227),
                                         segscan_group_sizze_36233);
            
            int32_t skip_threads_45243;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45242) {
                    x_45237 = ((volatile __local
                                int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)];
                    if ((local_tid_45227 - squot32(local_tid_45227, 32) * 32) ==
                        0) {
                        x_45236 = x_45237;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45243 = 1;
                while (slt32(skip_threads_45243, 32)) {
                    if (sle32(skip_threads_45243, local_tid_45227 -
                              squot32(local_tid_45227, 32) * 32) &&
                        ltid_in_bounds_45242) {
                        // read operands
                        {
                            x_45236 = ((volatile __local
                                        int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227) -
                                                                       sext_i32_i64(skip_threads_45243)];
                        }
                        // perform operation
                        {
                            bool inactive_45244 =
                                 slt64(srem64(sext_i32_i64(local_tid_45227) +
                                              chunk_offset_45234, N_28624),
                                       sext_i32_i64(local_tid_45227) +
                                       chunk_offset_45234 -
                                       (sext_i32_i64(local_tid_45227 -
                                        skip_threads_45243) +
                                        chunk_offset_45234));
                            
                            if (inactive_45244) {
                                x_45236 = x_45237;
                            }
                            if (!inactive_45244) {
                                int64_t defunc_1_op_res_45238 = add64(x_45236,
                                                                      x_45237);
                                
                                x_45236 = defunc_1_op_res_45238;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45229, skip_threads_45243)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45243, local_tid_45227 -
                              squot32(local_tid_45227, 32) * 32) &&
                        ltid_in_bounds_45242) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                                x_45236;
                            x_45237 = x_45236;
                        }
                    }
                    if (sle32(wave_sizze_45229, skip_threads_45243)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45243 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45227 - squot32(local_tid_45227, 32) * 32) ==
                    31 && ltid_in_bounds_45242) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45231)[sext_i32_i64(squot32(local_tid_45227,
                                                                          32))] =
                        x_45236;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45245;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45227, 32) == 0 &&
                        ltid_in_bounds_45242) {
                        x_45240 = ((volatile __local
                                    int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)];
                        if ((local_tid_45227 - squot32(local_tid_45227, 32) *
                             32) == 0) {
                            x_45239 = x_45240;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45245 = 1;
                    while (slt32(skip_threads_45245, 32)) {
                        if (sle32(skip_threads_45245, local_tid_45227 -
                                  squot32(local_tid_45227, 32) * 32) &&
                            (squot32(local_tid_45227, 32) == 0 &&
                             ltid_in_bounds_45242)) {
                            // read operands
                            {
                                x_45239 = ((volatile __local
                                            int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227) -
                                                                           sext_i32_i64(skip_threads_45245)];
                            }
                            // perform operation
                            {
                                bool inactive_45246 =
                                     slt64(srem64(sext_i32_i64(local_tid_45227 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45234, N_28624),
                                           sext_i32_i64(local_tid_45227 * 32 +
                                           32 - 1) + chunk_offset_45234 -
                                           (sext_i32_i64((local_tid_45227 -
                                                          skip_threads_45245) *
                                            32 + 32 - 1) + chunk_offset_45234));
                                
                                if (inactive_45246) {
                                    x_45239 = x_45240;
                                }
                                if (!inactive_45246) {
                                    int64_t defunc_1_op_res_45241 =
                                            add64(x_45239, x_45240);
                                    
                                    x_45239 = defunc_1_op_res_45241;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45229, skip_threads_45245)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45245, local_tid_45227 -
                                  squot32(local_tid_45227, 32) * 32) &&
                            (squot32(local_tid_45227, 32) == 0 &&
                             ltid_in_bounds_45242)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                                    x_45239;
                                x_45240 = x_45239;
                            }
                        }
                        if (sle32(wave_sizze_45229, skip_threads_45245)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45245 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45227, 32) == 0 ||
                      !ltid_in_bounds_45242)) {
                    // read operands
                    {
                        x_45237 = x_45236;
                        x_45236 = ((__local
                                    int64_t *) scan_arr_mem_45231)[sext_i32_i64(squot32(local_tid_45227,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45247 =
                             slt64(srem64(sext_i32_i64(local_tid_45227) +
                                          chunk_offset_45234, N_28624),
                                   sext_i32_i64(local_tid_45227) +
                                   chunk_offset_45234 -
                                   (sext_i32_i64(squot32(local_tid_45227, 32) *
                                    32 - 1) + chunk_offset_45234));
                        
                        if (inactive_45247) {
                            x_45236 = x_45237;
                        }
                        if (!inactive_45247) {
                            int64_t defunc_1_op_res_45238 = add64(x_45236,
                                                                  x_45237);
                            
                            x_45236 = defunc_1_op_res_45238;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                            x_45236;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45227, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)] =
                        x_45237;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36207, m_28625) && slt64(gtid_36215, N_28624)) {
                    ((__global int64_t *) mem_44165)[gtid_36207 * N_28624 +
                                                     gtid_36215] = ((__local
                                                                     int64_t *) scan_arr_mem_45231)[sext_i32_i64(local_tid_45227)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45248 = slt64(srem64(chunk_offset_45234 +
                                                          segscan_group_sizze_36233,
                                                          N_28624),
                                                   chunk_offset_45234 +
                                                   segscan_group_sizze_36233 -
                                                   (chunk_offset_45234 +
                                                    segscan_group_sizze_36233 -
                                                    1));
                bool should_load_carry_45249 = local_tid_45227 == 0 &&
                     !crosses_segment_45248;
                
                if (should_load_carry_45249) {
                    x_36238 = ((__local
                                int64_t *) scan_arr_mem_45231)[segscan_group_sizze_36233 -
                                                               1];
                }
                if (!should_load_carry_45249) {
                    x_36238 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36233
}
__kernel void mainMagnitudeziscan_stage1_37695(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45602_backing_aligned_0,
                                               int64_t N_28624, int64_t m_28625,
                                               int64_t iota32_arg_29024,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44174,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44237,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44238,
                                               __global
                                               unsigned char *defunc_0_f_res_mem_44272,
                                               __global
                                               unsigned char *mem_44320,
                                               __global
                                               unsigned char *mem_44324,
                                               int32_t num_threads_45596)
{
    #define segscan_group_sizze_37773 (mainMagnitudezisegscan_group_sizze_37689)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45602_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45602_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45597;
    int32_t local_tid_45598;
    int64_t group_sizze_45601;
    int32_t wave_sizze_45600;
    int32_t group_tid_45599;
    
    global_tid_45597 = get_global_id(0);
    local_tid_45598 = get_local_id(0);
    group_sizze_45601 = get_local_size(0);
    wave_sizze_45600 = LOCKSTEP_WIDTH;
    group_tid_45599 = get_group_id(0);
    
    int32_t phys_tid_37695;
    
    phys_tid_37695 = global_tid_45597;
    
    __local char *scan_arr_mem_45602;
    
    scan_arr_mem_45602 = (__local char *) scan_arr_mem_45602_backing_0;
    
    float x_37777;
    float x_37778;
    
    x_37777 = 0.0F;
    for (int64_t j_45604 = 0; j_45604 < sdiv_up64(m_28625 * iota32_arg_29024,
                                                  sext_i32_i64(num_threads_45596));
         j_45604++) {
        int64_t chunk_offset_45605 = segscan_group_sizze_37773 * j_45604 +
                sext_i32_i64(group_tid_45599) * (segscan_group_sizze_37773 *
                                                 sdiv_up64(m_28625 *
                                                           iota32_arg_29024,
                                                           sext_i32_i64(num_threads_45596)));
        int64_t flat_idx_45606 = chunk_offset_45605 +
                sext_i32_i64(local_tid_45598);
        int64_t gtid_37686 = squot64(flat_idx_45606, iota32_arg_29024);
        int64_t gtid_37694 = flat_idx_45606 - squot64(flat_idx_45606,
                                                      iota32_arg_29024) *
                iota32_arg_29024;
        
        // threads in bounds read input
        {
            if (slt64(gtid_37686, m_28625) && slt64(gtid_37694,
                                                    iota32_arg_29024)) {
                int32_t y_37784 = ((__global int32_t *) mem_44320)[gtid_37686];
                int32_t index_primexp_41436 = sext_i64_i32(gtid_37694);
                bool cond_37787 = sle32(y_37784, index_primexp_41436);
                float defunc_0_f_res_37788;
                
                if (cond_37787) {
                    defunc_0_f_res_37788 = 0.0F;
                } else {
                    int32_t x_37780 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_37686];
                    int32_t x_37781 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44237)[gtid_37686];
                    float x_37782 = ((__global
                                      float *) defunc_0_f_res_mem_44272)[gtid_37686];
                    bool cond_37789 = index_primexp_41436 == 0;
                    float defunc_0_f_res_f_res_37790;
                    
                    if (cond_37789) {
                        defunc_0_f_res_f_res_37790 = x_37782;
                    } else {
                        int32_t i_37791 = add32(x_37780, index_primexp_41436);
                        int64_t i_37792 = sext_i32_i64(i_37791);
                        float x_37793 = ((__global
                                          float *) defunc_4_map_res_mem_44174)[gtid_37686 *
                                                                               N_28624 +
                                                                               i_37792];
                        int32_t x_37794 = sub32(x_37780, x_37781);
                        int32_t i_37795 = add32(x_37794, index_primexp_41436);
                        int64_t i_37796 = sext_i32_i64(i_37795);
                        float y_37797 = ((__global
                                          float *) defunc_4_map_res_mem_44174)[gtid_37686 *
                                                                               N_28624 +
                                                                               i_37796];
                        float defunc_0_f_res_f_res_f_res_37798 = x_37793 -
                              y_37797;
                        
                        defunc_0_f_res_f_res_37790 =
                            defunc_0_f_res_f_res_f_res_37798;
                    }
                    defunc_0_f_res_37788 = defunc_0_f_res_f_res_37790;
                }
                // write to-scan values to parameters
                {
                    x_37778 = defunc_0_f_res_37788;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_37686, m_28625) && slt64(gtid_37694,
                                                          iota32_arg_29024))) {
                    x_37778 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_37779 = x_37777 + x_37778;
                
                ((__local
                  float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)] =
                    defunc_1_op_res_37779;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45607;
            float x_45608;
            float x_45610;
            float x_45611;
            bool ltid_in_bounds_45613;
            
            ltid_in_bounds_45613 = slt64(sext_i32_i64(local_tid_45598),
                                         segscan_group_sizze_37773);
            
            int32_t skip_threads_45614;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45613) {
                    x_45608 = ((volatile __local
                                float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)];
                    if ((local_tid_45598 - squot32(local_tid_45598, 32) * 32) ==
                        0) {
                        x_45607 = x_45608;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45614 = 1;
                while (slt32(skip_threads_45614, 32)) {
                    if (sle32(skip_threads_45614, local_tid_45598 -
                              squot32(local_tid_45598, 32) * 32) &&
                        ltid_in_bounds_45613) {
                        // read operands
                        {
                            x_45607 = ((volatile __local
                                        float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598) -
                                                                     sext_i32_i64(skip_threads_45614)];
                        }
                        // perform operation
                        {
                            bool inactive_45615 =
                                 slt64(srem64(sext_i32_i64(local_tid_45598) +
                                              chunk_offset_45605,
                                              iota32_arg_29024),
                                       sext_i32_i64(local_tid_45598) +
                                       chunk_offset_45605 -
                                       (sext_i32_i64(local_tid_45598 -
                                        skip_threads_45614) +
                                        chunk_offset_45605));
                            
                            if (inactive_45615) {
                                x_45607 = x_45608;
                            }
                            if (!inactive_45615) {
                                float defunc_1_op_res_45609 = x_45607 + x_45608;
                                
                                x_45607 = defunc_1_op_res_45609;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45600, skip_threads_45614)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45614, local_tid_45598 -
                              squot32(local_tid_45598, 32) * 32) &&
                        ltid_in_bounds_45613) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)] =
                                x_45607;
                            x_45608 = x_45607;
                        }
                    }
                    if (sle32(wave_sizze_45600, skip_threads_45614)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45614 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45598 - squot32(local_tid_45598, 32) * 32) ==
                    31 && ltid_in_bounds_45613) {
                    ((volatile __local
                      float *) scan_arr_mem_45602)[sext_i32_i64(squot32(local_tid_45598,
                                                                        32))] =
                        x_45607;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45616;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45598, 32) == 0 &&
                        ltid_in_bounds_45613) {
                        x_45611 = ((volatile __local
                                    float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)];
                        if ((local_tid_45598 - squot32(local_tid_45598, 32) *
                             32) == 0) {
                            x_45610 = x_45611;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45616 = 1;
                    while (slt32(skip_threads_45616, 32)) {
                        if (sle32(skip_threads_45616, local_tid_45598 -
                                  squot32(local_tid_45598, 32) * 32) &&
                            (squot32(local_tid_45598, 32) == 0 &&
                             ltid_in_bounds_45613)) {
                            // read operands
                            {
                                x_45610 = ((volatile __local
                                            float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598) -
                                                                         sext_i32_i64(skip_threads_45616)];
                            }
                            // perform operation
                            {
                                bool inactive_45617 =
                                     slt64(srem64(sext_i32_i64(local_tid_45598 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45605,
                                                  iota32_arg_29024),
                                           sext_i32_i64(local_tid_45598 * 32 +
                                           32 - 1) + chunk_offset_45605 -
                                           (sext_i32_i64((local_tid_45598 -
                                                          skip_threads_45616) *
                                            32 + 32 - 1) + chunk_offset_45605));
                                
                                if (inactive_45617) {
                                    x_45610 = x_45611;
                                }
                                if (!inactive_45617) {
                                    float defunc_1_op_res_45612 = x_45610 +
                                          x_45611;
                                    
                                    x_45610 = defunc_1_op_res_45612;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45600, skip_threads_45616)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45616, local_tid_45598 -
                                  squot32(local_tid_45598, 32) * 32) &&
                            (squot32(local_tid_45598, 32) == 0 &&
                             ltid_in_bounds_45613)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)] =
                                    x_45610;
                                x_45611 = x_45610;
                            }
                        }
                        if (sle32(wave_sizze_45600, skip_threads_45616)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45616 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45598, 32) == 0 ||
                      !ltid_in_bounds_45613)) {
                    // read operands
                    {
                        x_45608 = x_45607;
                        x_45607 = ((__local
                                    float *) scan_arr_mem_45602)[sext_i32_i64(squot32(local_tid_45598,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45618 =
                             slt64(srem64(sext_i32_i64(local_tid_45598) +
                                          chunk_offset_45605, iota32_arg_29024),
                                   sext_i32_i64(local_tid_45598) +
                                   chunk_offset_45605 -
                                   (sext_i32_i64(squot32(local_tid_45598, 32) *
                                    32 - 1) + chunk_offset_45605));
                        
                        if (inactive_45618) {
                            x_45607 = x_45608;
                        }
                        if (!inactive_45618) {
                            float defunc_1_op_res_45609 = x_45607 + x_45608;
                            
                            x_45607 = defunc_1_op_res_45609;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)] =
                            x_45607;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45598, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)] =
                        x_45608;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_37686, m_28625) && slt64(gtid_37694,
                                                        iota32_arg_29024)) {
                    ((__global float *) mem_44324)[gtid_37686 *
                                                   iota32_arg_29024 +
                                                   gtid_37694] = ((__local
                                                                   float *) scan_arr_mem_45602)[sext_i32_i64(local_tid_45598)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45619 = slt64(srem64(chunk_offset_45605 +
                                                          segscan_group_sizze_37773,
                                                          iota32_arg_29024),
                                                   chunk_offset_45605 +
                                                   segscan_group_sizze_37773 -
                                                   (chunk_offset_45605 +
                                                    segscan_group_sizze_37773 -
                                                    1));
                bool should_load_carry_45620 = local_tid_45598 == 0 &&
                     !crosses_segment_45619;
                
                if (should_load_carry_45620) {
                    x_37777 = ((__local
                                float *) scan_arr_mem_45602)[segscan_group_sizze_37773 -
                                                             1];
                }
                if (!should_load_carry_45620) {
                    x_37777 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_37773
}
__kernel void mainMagnitudeziscan_stage2_36216(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45255_backing_aligned_0,
                                               int64_t N_28624, int64_t m_28625,
                                               __global
                                               unsigned char *mem_44165,
                                               int64_t stage1_num_groups_45224,
                                               int32_t num_threads_45225)
{
    #define segscan_group_sizze_36233 (mainMagnitudezisegscan_group_sizze_36210)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45255_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45255_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45250;
    int32_t local_tid_45251;
    int64_t group_sizze_45254;
    int32_t wave_sizze_45253;
    int32_t group_tid_45252;
    
    global_tid_45250 = get_global_id(0);
    local_tid_45251 = get_local_id(0);
    group_sizze_45254 = get_local_size(0);
    wave_sizze_45253 = LOCKSTEP_WIDTH;
    group_tid_45252 = get_group_id(0);
    
    int32_t phys_tid_36216;
    
    phys_tid_36216 = global_tid_45250;
    
    __local char *scan_arr_mem_45255;
    
    scan_arr_mem_45255 = (__local char *) scan_arr_mem_45255_backing_0;
    
    int64_t flat_idx_45257;
    
    flat_idx_45257 = (sext_i32_i64(local_tid_45251) + 1) *
        (segscan_group_sizze_36233 * sdiv_up64(m_28625 * N_28624,
                                               sext_i32_i64(num_threads_45225))) -
        1;
    
    int64_t gtid_36207;
    
    gtid_36207 = squot64(flat_idx_45257, N_28624);
    
    int64_t gtid_36215;
    
    gtid_36215 = flat_idx_45257 - squot64(flat_idx_45257, N_28624) * N_28624;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36207, m_28625) && slt64(gtid_36215, N_28624)) {
            ((__local
              int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)] =
                ((__global int64_t *) mem_44165)[gtid_36207 * N_28624 +
                                                 gtid_36215];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_36238;
    int64_t x_36239;
    int64_t x_45258;
    int64_t x_45259;
    bool ltid_in_bounds_45261;
    
    ltid_in_bounds_45261 = slt64(sext_i32_i64(local_tid_45251),
                                 stage1_num_groups_45224);
    
    int32_t skip_threads_45262;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45261) {
            x_36239 = ((volatile __local
                        int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)];
            if ((local_tid_45251 - squot32(local_tid_45251, 32) * 32) == 0) {
                x_36238 = x_36239;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45262 = 1;
        while (slt32(skip_threads_45262, 32)) {
            if (sle32(skip_threads_45262, local_tid_45251 -
                      squot32(local_tid_45251, 32) * 32) &&
                ltid_in_bounds_45261) {
                // read operands
                {
                    x_36238 = ((volatile __local
                                int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251) -
                                                               sext_i32_i64(skip_threads_45262)];
                }
                // perform operation
                {
                    bool inactive_45263 =
                         slt64(srem64((sext_i32_i64(local_tid_45251) + 1) *
                                      (segscan_group_sizze_36233 *
                                       sdiv_up64(m_28625 * N_28624,
                                                 sext_i32_i64(num_threads_45225))) -
                                      1, N_28624),
                               (sext_i32_i64(local_tid_45251) + 1) *
                               (segscan_group_sizze_36233 * sdiv_up64(m_28625 *
                                                                      N_28624,
                                                                      sext_i32_i64(num_threads_45225))) -
                               1 - ((sext_i32_i64(local_tid_45251 -
                                     skip_threads_45262) + 1) *
                                    (segscan_group_sizze_36233 *
                                     sdiv_up64(m_28625 * N_28624,
                                               sext_i32_i64(num_threads_45225))) -
                                    1));
                    
                    if (inactive_45263) {
                        x_36238 = x_36239;
                    }
                    if (!inactive_45263) {
                        int64_t defunc_1_op_res_36240 = add64(x_36238, x_36239);
                        
                        x_36238 = defunc_1_op_res_36240;
                    }
                }
            }
            if (sle32(wave_sizze_45253, skip_threads_45262)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45262, local_tid_45251 -
                      squot32(local_tid_45251, 32) * 32) &&
                ltid_in_bounds_45261) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)] =
                        x_36238;
                    x_36239 = x_36238;
                }
            }
            if (sle32(wave_sizze_45253, skip_threads_45262)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45262 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45251 - squot32(local_tid_45251, 32) * 32) == 31 &&
            ltid_in_bounds_45261) {
            ((volatile __local
              int64_t *) scan_arr_mem_45255)[sext_i32_i64(squot32(local_tid_45251,
                                                                  32))] =
                x_36238;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45264;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45251, 32) == 0 && ltid_in_bounds_45261) {
                x_45259 = ((volatile __local
                            int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)];
                if ((local_tid_45251 - squot32(local_tid_45251, 32) * 32) ==
                    0) {
                    x_45258 = x_45259;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45264 = 1;
            while (slt32(skip_threads_45264, 32)) {
                if (sle32(skip_threads_45264, local_tid_45251 -
                          squot32(local_tid_45251, 32) * 32) &&
                    (squot32(local_tid_45251, 32) == 0 &&
                     ltid_in_bounds_45261)) {
                    // read operands
                    {
                        x_45258 = ((volatile __local
                                    int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251) -
                                                                   sext_i32_i64(skip_threads_45264)];
                    }
                    // perform operation
                    {
                        bool inactive_45265 =
                             slt64(srem64((sext_i32_i64(local_tid_45251 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_36233 *
                                           sdiv_up64(m_28625 * N_28624,
                                                     sext_i32_i64(num_threads_45225))) -
                                          1, N_28624),
                                   (sext_i32_i64(local_tid_45251 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_36233 *
                                               sdiv_up64(m_28625 * N_28624,
                                                         sext_i32_i64(num_threads_45225))) -
                                   1 - ((sext_i32_i64((local_tid_45251 -
                                                       skip_threads_45264) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_36233 *
                                         sdiv_up64(m_28625 * N_28624,
                                                   sext_i32_i64(num_threads_45225))) -
                                        1));
                        
                        if (inactive_45265) {
                            x_45258 = x_45259;
                        }
                        if (!inactive_45265) {
                            int64_t defunc_1_op_res_45260 = add64(x_45258,
                                                                  x_45259);
                            
                            x_45258 = defunc_1_op_res_45260;
                        }
                    }
                }
                if (sle32(wave_sizze_45253, skip_threads_45264)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45264, local_tid_45251 -
                          squot32(local_tid_45251, 32) * 32) &&
                    (squot32(local_tid_45251, 32) == 0 &&
                     ltid_in_bounds_45261)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)] =
                            x_45258;
                        x_45259 = x_45258;
                    }
                }
                if (sle32(wave_sizze_45253, skip_threads_45264)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45264 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45251, 32) == 0 || !ltid_in_bounds_45261)) {
            // read operands
            {
                x_36239 = x_36238;
                x_36238 = ((__local
                            int64_t *) scan_arr_mem_45255)[sext_i32_i64(squot32(local_tid_45251,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45266 =
                     slt64(srem64((sext_i32_i64(local_tid_45251) + 1) *
                                  (segscan_group_sizze_36233 *
                                   sdiv_up64(m_28625 * N_28624,
                                             sext_i32_i64(num_threads_45225))) -
                                  1, N_28624), (sext_i32_i64(local_tid_45251) +
                                                1) *
                           (segscan_group_sizze_36233 * sdiv_up64(m_28625 *
                                                                  N_28624,
                                                                  sext_i32_i64(num_threads_45225))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45251, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_36233 *
                                                 sdiv_up64(m_28625 * N_28624,
                                                           sext_i32_i64(num_threads_45225))) -
                                1));
                
                if (inactive_45266) {
                    x_36238 = x_36239;
                }
                if (!inactive_45266) {
                    int64_t defunc_1_op_res_36240 = add64(x_36238, x_36239);
                    
                    x_36238 = defunc_1_op_res_36240;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)] =
                    x_36238;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45251, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)] =
                x_36239;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36207, m_28625) && slt64(gtid_36215, N_28624)) {
            ((__global int64_t *) mem_44165)[gtid_36207 * N_28624 +
                                             gtid_36215] = ((__local
                                                             int64_t *) scan_arr_mem_45255)[sext_i32_i64(local_tid_45251)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36233
}
__kernel void mainMagnitudeziscan_stage2_37695(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45626_backing_aligned_0,
                                               int64_t m_28625,
                                               int64_t iota32_arg_29024,
                                               __global
                                               unsigned char *mem_44324,
                                               int64_t stage1_num_groups_45595,
                                               int32_t num_threads_45596)
{
    #define segscan_group_sizze_37773 (mainMagnitudezisegscan_group_sizze_37689)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45626_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45626_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45621;
    int32_t local_tid_45622;
    int64_t group_sizze_45625;
    int32_t wave_sizze_45624;
    int32_t group_tid_45623;
    
    global_tid_45621 = get_global_id(0);
    local_tid_45622 = get_local_id(0);
    group_sizze_45625 = get_local_size(0);
    wave_sizze_45624 = LOCKSTEP_WIDTH;
    group_tid_45623 = get_group_id(0);
    
    int32_t phys_tid_37695;
    
    phys_tid_37695 = global_tid_45621;
    
    __local char *scan_arr_mem_45626;
    
    scan_arr_mem_45626 = (__local char *) scan_arr_mem_45626_backing_0;
    
    int64_t flat_idx_45628;
    
    flat_idx_45628 = (sext_i32_i64(local_tid_45622) + 1) *
        (segscan_group_sizze_37773 * sdiv_up64(m_28625 * iota32_arg_29024,
                                               sext_i32_i64(num_threads_45596))) -
        1;
    
    int64_t gtid_37686;
    
    gtid_37686 = squot64(flat_idx_45628, iota32_arg_29024);
    
    int64_t gtid_37694;
    
    gtid_37694 = flat_idx_45628 - squot64(flat_idx_45628, iota32_arg_29024) *
        iota32_arg_29024;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_37686, m_28625) && slt64(gtid_37694, iota32_arg_29024)) {
            ((__local
              float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)] =
                ((__global float *) mem_44324)[gtid_37686 * iota32_arg_29024 +
                                               gtid_37694];
        } else {
            ((__local
              float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_37777;
    float x_37778;
    float x_45629;
    float x_45630;
    bool ltid_in_bounds_45632;
    
    ltid_in_bounds_45632 = slt64(sext_i32_i64(local_tid_45622),
                                 stage1_num_groups_45595);
    
    int32_t skip_threads_45633;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45632) {
            x_37778 = ((volatile __local
                        float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)];
            if ((local_tid_45622 - squot32(local_tid_45622, 32) * 32) == 0) {
                x_37777 = x_37778;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45633 = 1;
        while (slt32(skip_threads_45633, 32)) {
            if (sle32(skip_threads_45633, local_tid_45622 -
                      squot32(local_tid_45622, 32) * 32) &&
                ltid_in_bounds_45632) {
                // read operands
                {
                    x_37777 = ((volatile __local
                                float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622) -
                                                             sext_i32_i64(skip_threads_45633)];
                }
                // perform operation
                {
                    bool inactive_45634 =
                         slt64(srem64((sext_i32_i64(local_tid_45622) + 1) *
                                      (segscan_group_sizze_37773 *
                                       sdiv_up64(m_28625 * iota32_arg_29024,
                                                 sext_i32_i64(num_threads_45596))) -
                                      1, iota32_arg_29024),
                               (sext_i32_i64(local_tid_45622) + 1) *
                               (segscan_group_sizze_37773 * sdiv_up64(m_28625 *
                                                                      iota32_arg_29024,
                                                                      sext_i32_i64(num_threads_45596))) -
                               1 - ((sext_i32_i64(local_tid_45622 -
                                     skip_threads_45633) + 1) *
                                    (segscan_group_sizze_37773 *
                                     sdiv_up64(m_28625 * iota32_arg_29024,
                                               sext_i32_i64(num_threads_45596))) -
                                    1));
                    
                    if (inactive_45634) {
                        x_37777 = x_37778;
                    }
                    if (!inactive_45634) {
                        float defunc_1_op_res_37779 = x_37777 + x_37778;
                        
                        x_37777 = defunc_1_op_res_37779;
                    }
                }
            }
            if (sle32(wave_sizze_45624, skip_threads_45633)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45633, local_tid_45622 -
                      squot32(local_tid_45622, 32) * 32) &&
                ltid_in_bounds_45632) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)] =
                        x_37777;
                    x_37778 = x_37777;
                }
            }
            if (sle32(wave_sizze_45624, skip_threads_45633)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45633 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45622 - squot32(local_tid_45622, 32) * 32) == 31 &&
            ltid_in_bounds_45632) {
            ((volatile __local
              float *) scan_arr_mem_45626)[sext_i32_i64(squot32(local_tid_45622,
                                                                32))] = x_37777;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45635;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45622, 32) == 0 && ltid_in_bounds_45632) {
                x_45630 = ((volatile __local
                            float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)];
                if ((local_tid_45622 - squot32(local_tid_45622, 32) * 32) ==
                    0) {
                    x_45629 = x_45630;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45635 = 1;
            while (slt32(skip_threads_45635, 32)) {
                if (sle32(skip_threads_45635, local_tid_45622 -
                          squot32(local_tid_45622, 32) * 32) &&
                    (squot32(local_tid_45622, 32) == 0 &&
                     ltid_in_bounds_45632)) {
                    // read operands
                    {
                        x_45629 = ((volatile __local
                                    float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622) -
                                                                 sext_i32_i64(skip_threads_45635)];
                    }
                    // perform operation
                    {
                        bool inactive_45636 =
                             slt64(srem64((sext_i32_i64(local_tid_45622 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_37773 *
                                           sdiv_up64(m_28625 * iota32_arg_29024,
                                                     sext_i32_i64(num_threads_45596))) -
                                          1, iota32_arg_29024),
                                   (sext_i32_i64(local_tid_45622 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_37773 *
                                               sdiv_up64(m_28625 *
                                                         iota32_arg_29024,
                                                         sext_i32_i64(num_threads_45596))) -
                                   1 - ((sext_i32_i64((local_tid_45622 -
                                                       skip_threads_45635) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_37773 *
                                         sdiv_up64(m_28625 * iota32_arg_29024,
                                                   sext_i32_i64(num_threads_45596))) -
                                        1));
                        
                        if (inactive_45636) {
                            x_45629 = x_45630;
                        }
                        if (!inactive_45636) {
                            float defunc_1_op_res_45631 = x_45629 + x_45630;
                            
                            x_45629 = defunc_1_op_res_45631;
                        }
                    }
                }
                if (sle32(wave_sizze_45624, skip_threads_45635)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45635, local_tid_45622 -
                          squot32(local_tid_45622, 32) * 32) &&
                    (squot32(local_tid_45622, 32) == 0 &&
                     ltid_in_bounds_45632)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)] =
                            x_45629;
                        x_45630 = x_45629;
                    }
                }
                if (sle32(wave_sizze_45624, skip_threads_45635)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45635 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45622, 32) == 0 || !ltid_in_bounds_45632)) {
            // read operands
            {
                x_37778 = x_37777;
                x_37777 = ((__local
                            float *) scan_arr_mem_45626)[sext_i32_i64(squot32(local_tid_45622,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45637 =
                     slt64(srem64((sext_i32_i64(local_tid_45622) + 1) *
                                  (segscan_group_sizze_37773 *
                                   sdiv_up64(m_28625 * iota32_arg_29024,
                                             sext_i32_i64(num_threads_45596))) -
                                  1, iota32_arg_29024),
                           (sext_i32_i64(local_tid_45622) + 1) *
                           (segscan_group_sizze_37773 * sdiv_up64(m_28625 *
                                                                  iota32_arg_29024,
                                                                  sext_i32_i64(num_threads_45596))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45622, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_37773 *
                                                 sdiv_up64(m_28625 *
                                                           iota32_arg_29024,
                                                           sext_i32_i64(num_threads_45596))) -
                                1));
                
                if (inactive_45637) {
                    x_37777 = x_37778;
                }
                if (!inactive_45637) {
                    float defunc_1_op_res_37779 = x_37777 + x_37778;
                    
                    x_37777 = defunc_1_op_res_37779;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)] =
                    x_37777;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45622, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)] =
                x_37778;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_37686, m_28625) && slt64(gtid_37694, iota32_arg_29024)) {
            ((__global float *) mem_44324)[gtid_37686 * iota32_arg_29024 +
                                           gtid_37694] = ((__local
                                                           float *) scan_arr_mem_45626)[sext_i32_i64(local_tid_45622)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37773
}
__kernel void mainMagnitudeziscan_stage3_36216(__global int *global_failure,
                                               int64_t N_28624, int64_t m_28625,
                                               int64_t num_groups_36234,
                                               __global
                                               unsigned char *mem_44165,
                                               int32_t num_threads_45225,
                                               int32_t required_groups_45267)
{
    #define segscan_group_sizze_36233 (mainMagnitudezisegscan_group_sizze_36210)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45268;
    int32_t local_tid_45269;
    int64_t group_sizze_45272;
    int32_t wave_sizze_45271;
    int32_t group_tid_45270;
    
    global_tid_45268 = get_global_id(0);
    local_tid_45269 = get_local_id(0);
    group_sizze_45272 = get_local_size(0);
    wave_sizze_45271 = LOCKSTEP_WIDTH;
    group_tid_45270 = get_group_id(0);
    
    int32_t phys_tid_36216;
    
    phys_tid_36216 = global_tid_45268;
    
    int32_t phys_group_id_45273;
    
    phys_group_id_45273 = get_group_id(0);
    for (int32_t i_45274 = 0; i_45274 < sdiv_up32(required_groups_45267 -
                                                  phys_group_id_45273,
                                                  sext_i64_i32(num_groups_36234));
         i_45274++) {
        int32_t virt_group_id_45275 = phys_group_id_45273 + i_45274 *
                sext_i64_i32(num_groups_36234);
        int64_t flat_idx_45276 = sext_i32_i64(virt_group_id_45275) *
                segscan_group_sizze_36233 + sext_i32_i64(local_tid_45269);
        int64_t gtid_36207 = squot64(flat_idx_45276, N_28624);
        int64_t gtid_36215 = flat_idx_45276 - squot64(flat_idx_45276, N_28624) *
                N_28624;
        int64_t orig_group_45277 = squot64(flat_idx_45276,
                                           segscan_group_sizze_36233 *
                                           sdiv_up64(m_28625 * N_28624,
                                                     sext_i32_i64(num_threads_45225)));
        int64_t carry_in_flat_idx_45278 = orig_group_45277 *
                (segscan_group_sizze_36233 * sdiv_up64(m_28625 * N_28624,
                                                       sext_i32_i64(num_threads_45225))) -
                1;
        
        if (slt64(gtid_36207, m_28625) && slt64(gtid_36215, N_28624)) {
            if (!(orig_group_45277 == 0 || (flat_idx_45276 ==
                                            (orig_group_45277 + 1) *
                                            (segscan_group_sizze_36233 *
                                             sdiv_up64(m_28625 * N_28624,
                                                       sext_i32_i64(num_threads_45225))) -
                                            1 || slt64(srem64(flat_idx_45276,
                                                              N_28624),
                                                       flat_idx_45276 -
                                                       carry_in_flat_idx_45278)))) {
                int64_t x_36238;
                int64_t x_36239;
                
                x_36238 = ((__global
                            int64_t *) mem_44165)[squot64(carry_in_flat_idx_45278,
                                                          N_28624) * N_28624 +
                                                  (carry_in_flat_idx_45278 -
                                                   squot64(carry_in_flat_idx_45278,
                                                           N_28624) * N_28624)];
                x_36239 = ((__global int64_t *) mem_44165)[gtid_36207 *
                                                           N_28624 +
                                                           gtid_36215];
                
                int64_t defunc_1_op_res_36240;
                
                defunc_1_op_res_36240 = add64(x_36238, x_36239);
                x_36238 = defunc_1_op_res_36240;
                ((__global int64_t *) mem_44165)[gtid_36207 * N_28624 +
                                                 gtid_36215] = x_36238;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36233
}
__kernel void mainMagnitudeziscan_stage3_37695(__global int *global_failure,
                                               int64_t m_28625,
                                               int64_t iota32_arg_29024,
                                               int64_t num_groups_37774,
                                               __global
                                               unsigned char *mem_44324,
                                               int32_t num_threads_45596,
                                               int32_t required_groups_45638)
{
    #define segscan_group_sizze_37773 (mainMagnitudezisegscan_group_sizze_37689)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45639;
    int32_t local_tid_45640;
    int64_t group_sizze_45643;
    int32_t wave_sizze_45642;
    int32_t group_tid_45641;
    
    global_tid_45639 = get_global_id(0);
    local_tid_45640 = get_local_id(0);
    group_sizze_45643 = get_local_size(0);
    wave_sizze_45642 = LOCKSTEP_WIDTH;
    group_tid_45641 = get_group_id(0);
    
    int32_t phys_tid_37695;
    
    phys_tid_37695 = global_tid_45639;
    
    int32_t phys_group_id_45644;
    
    phys_group_id_45644 = get_group_id(0);
    for (int32_t i_45645 = 0; i_45645 < sdiv_up32(required_groups_45638 -
                                                  phys_group_id_45644,
                                                  sext_i64_i32(num_groups_37774));
         i_45645++) {
        int32_t virt_group_id_45646 = phys_group_id_45644 + i_45645 *
                sext_i64_i32(num_groups_37774);
        int64_t flat_idx_45647 = sext_i32_i64(virt_group_id_45646) *
                segscan_group_sizze_37773 + sext_i32_i64(local_tid_45640);
        int64_t gtid_37686 = squot64(flat_idx_45647, iota32_arg_29024);
        int64_t gtid_37694 = flat_idx_45647 - squot64(flat_idx_45647,
                                                      iota32_arg_29024) *
                iota32_arg_29024;
        int64_t orig_group_45648 = squot64(flat_idx_45647,
                                           segscan_group_sizze_37773 *
                                           sdiv_up64(m_28625 * iota32_arg_29024,
                                                     sext_i32_i64(num_threads_45596)));
        int64_t carry_in_flat_idx_45649 = orig_group_45648 *
                (segscan_group_sizze_37773 * sdiv_up64(m_28625 *
                                                       iota32_arg_29024,
                                                       sext_i32_i64(num_threads_45596))) -
                1;
        
        if (slt64(gtid_37686, m_28625) && slt64(gtid_37694, iota32_arg_29024)) {
            if (!(orig_group_45648 == 0 || (flat_idx_45647 ==
                                            (orig_group_45648 + 1) *
                                            (segscan_group_sizze_37773 *
                                             sdiv_up64(m_28625 *
                                                       iota32_arg_29024,
                                                       sext_i32_i64(num_threads_45596))) -
                                            1 || slt64(srem64(flat_idx_45647,
                                                              iota32_arg_29024),
                                                       flat_idx_45647 -
                                                       carry_in_flat_idx_45649)))) {
                float x_37777;
                float x_37778;
                
                x_37777 = ((__global
                            float *) mem_44324)[squot64(carry_in_flat_idx_45649,
                                                        iota32_arg_29024) *
                                                iota32_arg_29024 +
                                                (carry_in_flat_idx_45649 -
                                                 squot64(carry_in_flat_idx_45649,
                                                         iota32_arg_29024) *
                                                 iota32_arg_29024)];
                x_37778 = ((__global float *) mem_44324)[gtid_37686 *
                                                         iota32_arg_29024 +
                                                         gtid_37694];
                
                float defunc_1_op_res_37779;
                
                defunc_1_op_res_37779 = x_37777 + x_37778;
                x_37777 = defunc_1_op_res_37779;
                ((__global float *) mem_44324)[gtid_37686 * iota32_arg_29024 +
                                               gtid_37694] = x_37777;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37773
}
__kernel void mainMagnitudezisegmap_34139(__global int *global_failure,
                                          int64_t N_28624, float freq_28630,
                                          int64_t i32_res_28644, __global
                                          unsigned char *mappingindices_mem_43377,
                                          __global unsigned char *mem_43382)
{
    #define segmap_group_sizze_34212 (mainMagnitudezisegmap_group_sizze_34142)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44632;
    int32_t local_tid_44633;
    int64_t group_sizze_44636;
    int32_t wave_sizze_44635;
    int32_t group_tid_44634;
    
    global_tid_44632 = get_global_id(0);
    local_tid_44633 = get_local_id(0);
    group_sizze_44636 = get_local_size(0);
    wave_sizze_44635 = LOCKSTEP_WIDTH;
    group_tid_44634 = get_group_id(0);
    
    int32_t phys_tid_34139;
    
    phys_tid_34139 = global_tid_44632;
    
    int64_t gtid_34137;
    
    gtid_34137 = squot64(sext_i32_i64(group_tid_44634) *
                         segmap_group_sizze_34212 +
                         sext_i32_i64(local_tid_44633), N_28624);
    
    int64_t gtid_34138;
    
    gtid_34138 = sext_i32_i64(group_tid_44634) * segmap_group_sizze_34212 +
        sext_i32_i64(local_tid_44633) - squot64(sext_i32_i64(group_tid_44634) *
                                                segmap_group_sizze_34212 +
                                                sext_i32_i64(local_tid_44633),
                                                N_28624) * N_28624;
    if (slt64(gtid_34137, i32_res_28644) && slt64(gtid_34138, N_28624)) {
        int32_t index_primexp_41372 = sext_i64_i32(gtid_34137);
        bool index_primexp_41369 = index_primexp_41372 == 0;
        float defunc_0_f_res_34218;
        
        if (index_primexp_41369) {
            defunc_0_f_res_34218 = 1.0F;
        } else {
            int32_t x_34217 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_34138];
            bool cond_34219 = index_primexp_41372 == 1;
            float defunc_0_f_res_f_res_34220;
            
            if (cond_34219) {
                float i32_res_34221 = sitofp_i32_f32(x_34217);
                
                defunc_0_f_res_f_res_34220 = i32_res_34221;
            } else {
                int32_t r32_arg_34222 = sdiv32(index_primexp_41372, 2);
                float i32_res_34223 = sitofp_i32_f32(r32_arg_34222);
                float i32_res_34224 = sitofp_i32_f32(x_34217);
                float x_34225 = 6.2831855F * i32_res_34223;
                float x_34226 = i32_res_34224 * x_34225;
                float angle_34227 = x_34226 / freq_28630;
                int32_t x_34228 = smod32(index_primexp_41372, 2);
                bool cond_34229 = x_34228 == 0;
                float defunc_0_f_res_f_res_f_res_34230;
                
                if (cond_34229) {
                    float sin_res_34231;
                    
                    sin_res_34231 = futrts_sin32(angle_34227);
                    defunc_0_f_res_f_res_f_res_34230 = sin_res_34231;
                } else {
                    float cos_res_34232;
                    
                    cos_res_34232 = futrts_cos32(angle_34227);
                    defunc_0_f_res_f_res_f_res_34230 = cos_res_34232;
                }
                defunc_0_f_res_f_res_34220 = defunc_0_f_res_f_res_f_res_34230;
            }
            defunc_0_f_res_34218 = defunc_0_f_res_f_res_34220;
        }
        ((__global float *) mem_43382)[gtid_34137 * N_28624 + gtid_34138] =
            defunc_0_f_res_34218;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34212
}
__kernel void mainMagnitudezisegmap_34317(__global int *global_failure,
                                          int64_t N_28624, float freq_28630,
                                          int64_t i32_res_28644, __global
                                          unsigned char *mappingindices_mem_43377,
                                          __global unsigned char *mem_43386)
{
    #define segmap_group_sizze_34386 (mainMagnitudezisegmap_group_sizze_34320)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44637;
    int32_t local_tid_44638;
    int64_t group_sizze_44641;
    int32_t wave_sizze_44640;
    int32_t group_tid_44639;
    
    global_tid_44637 = get_global_id(0);
    local_tid_44638 = get_local_id(0);
    group_sizze_44641 = get_local_size(0);
    wave_sizze_44640 = LOCKSTEP_WIDTH;
    group_tid_44639 = get_group_id(0);
    
    int32_t phys_tid_34317;
    
    phys_tid_34317 = global_tid_44637;
    
    int64_t gtid_34315;
    
    gtid_34315 = squot64(sext_i32_i64(group_tid_44639) *
                         segmap_group_sizze_34386 +
                         sext_i32_i64(local_tid_44638), N_28624);
    
    int64_t gtid_34316;
    
    gtid_34316 = sext_i32_i64(group_tid_44639) * segmap_group_sizze_34386 +
        sext_i32_i64(local_tid_44638) - squot64(sext_i32_i64(group_tid_44639) *
                                                segmap_group_sizze_34386 +
                                                sext_i32_i64(local_tid_44638),
                                                N_28624) * N_28624;
    if (slt64(gtid_34315, i32_res_28644) && slt64(gtid_34316, N_28624)) {
        int32_t index_primexp_41381 = sext_i64_i32(gtid_34315);
        bool index_primexp_41378 = index_primexp_41381 == 0;
        float defunc_0_f_res_34392;
        
        if (index_primexp_41378) {
            defunc_0_f_res_34392 = 1.0F;
        } else {
            int32_t x_34391 = ((__global
                                int32_t *) mappingindices_mem_43377)[gtid_34316];
            int32_t i_34393 = add32(1, index_primexp_41381);
            int32_t r32_arg_34394 = sdiv32(i_34393, 2);
            float i32_res_34395 = sitofp_i32_f32(r32_arg_34394);
            float i32_res_34396 = sitofp_i32_f32(x_34391);
            float x_34397 = 6.2831855F * i32_res_34395;
            float x_34398 = i32_res_34396 * x_34397;
            float angle_34399 = x_34398 / freq_28630;
            int32_t x_34400 = smod32(i_34393, 2);
            bool cond_34401 = x_34400 == 0;
            float defunc_0_f_res_f_res_34402;
            
            if (cond_34401) {
                float sin_res_34403;
                
                sin_res_34403 = futrts_sin32(angle_34399);
                defunc_0_f_res_f_res_34402 = sin_res_34403;
            } else {
                float cos_res_34404;
                
                cos_res_34404 = futrts_cos32(angle_34399);
                defunc_0_f_res_f_res_34402 = cos_res_34404;
            }
            defunc_0_f_res_34392 = defunc_0_f_res_f_res_34402;
        }
        ((__global float *) mem_43386)[gtid_34315 * N_28624 + gtid_34316] =
            defunc_0_f_res_34392;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34386
}
__kernel void mainMagnitudezisegmap_34445(__global int *global_failure,
                                          int64_t N_28624,
                                          int64_t i32_res_28644,
                                          float i32_res_28709, __global
                                          unsigned char *mem_43390, __global
                                          unsigned char *mem_43394)
{
    #define segmap_group_sizze_34469 (mainMagnitudezisegmap_group_sizze_34448)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44642;
    int32_t local_tid_44643;
    int64_t group_sizze_44646;
    int32_t wave_sizze_44645;
    int32_t group_tid_44644;
    
    global_tid_44642 = get_global_id(0);
    local_tid_44643 = get_local_id(0);
    group_sizze_44646 = get_local_size(0);
    wave_sizze_44645 = LOCKSTEP_WIDTH;
    group_tid_44644 = get_group_id(0);
    
    int32_t phys_tid_34445;
    
    phys_tid_34445 = global_tid_44642;
    
    int64_t gtid_34443;
    
    gtid_34443 = squot64(sext_i32_i64(group_tid_44644) *
                         segmap_group_sizze_34469 +
                         sext_i32_i64(local_tid_44643), i32_res_28644);
    
    int64_t gtid_34444;
    
    gtid_34444 = sext_i32_i64(group_tid_44644) * segmap_group_sizze_34469 +
        sext_i32_i64(local_tid_44643) - squot64(sext_i32_i64(group_tid_44644) *
                                                segmap_group_sizze_34469 +
                                                sext_i32_i64(local_tid_44643),
                                                i32_res_28644) * i32_res_28644;
    if (slt64(gtid_34443, N_28624) && slt64(gtid_34444, i32_res_28644)) {
        float x_34472 = ((__global float *) mem_43390)[gtid_34443 *
                                                       i32_res_28644 +
                                                       gtid_34444];
        float defunc_0_f_res_34473 = i32_res_28709 + x_34472;
        
        ((__global float *) mem_43394)[gtid_34443 * i32_res_28644 +
                                       gtid_34444] = defunc_0_f_res_34473;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34469
}
__kernel void mainMagnitudezisegmap_34478(__global int *global_failure,
                                          int64_t N_28624, int64_t m_28625,
                                          int32_t n_28629, int32_t k2p2zq_28642,
                                          int64_t i32_res_28644,
                                          int64_t num_groups_34503, __global
                                          unsigned char *binop_p_mem_43387,
                                          __global unsigned char *mem_43394,
                                          __global unsigned char *mem_43397,
                                          __global unsigned char *mem_43401,
                                          __global unsigned char *mem_43443)
{
    #define segmap_group_sizze_34502 (mainMagnitudezisegmap_group_sizze_34480)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44650;
    int32_t local_tid_44651;
    int64_t group_sizze_44654;
    int32_t wave_sizze_44653;
    int32_t group_tid_44652;
    
    global_tid_44650 = get_global_id(0);
    local_tid_44651 = get_local_id(0);
    group_sizze_44654 = get_local_size(0);
    wave_sizze_44653 = LOCKSTEP_WIDTH;
    group_tid_44652 = get_group_id(0);
    
    int32_t phys_tid_34478;
    
    phys_tid_34478 = global_tid_44650;
    
    int32_t phys_group_id_44655;
    
    phys_group_id_44655 = get_group_id(0);
    for (int32_t i_44656 = 0; i_44656 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625, segmap_group_sizze_34502)) -
                   phys_group_id_44655, sext_i64_i32(num_groups_34503));
         i_44656++) {
        int32_t virt_group_id_44657 = phys_group_id_44655 + i_44656 *
                sext_i64_i32(num_groups_34503);
        int64_t gtid_34477 = sext_i32_i64(virt_group_id_44657) *
                segmap_group_sizze_34502 + sext_i32_i64(local_tid_44651);
        
        if (slt64(gtid_34477, m_28625)) {
            for (int32_t i_43359 = 0; i_43359 < k2p2zq_28642; i_43359++) {
                int64_t i_43307 = sext_i32_i64(i_43359);
                
                for (int32_t i_43358 = 0; i_43358 < k2p2zq_28642; i_43358++) {
                    int64_t i_43311 = sext_i32_i64(i_43358);
                    float defunc_2_reduce_res_34511;
                    float redout_43313 = 0.0F;
                    
                    for (int32_t i_43357 = 0; i_43357 < n_28629; i_43357++) {
                        int64_t i_43314 = sext_i32_i64(i_43357);
                        float x_34515 = ((__global float *) mem_43397)[i_43314 *
                                                                       m_28625 +
                                                                       gtid_34477];
                        float x_34516 = ((__global
                                          float *) binop_p_mem_43387)[i_43307 *
                                                                      N_28624 +
                                                                      i_43314];
                        float x_34517 = ((__global float *) mem_43394)[i_43314 *
                                                                       i32_res_28644 +
                                                                       i_43311];
                        float x_34518 = x_34516 * x_34517;
                        bool isnan_res_34519;
                        
                        isnan_res_34519 = futrts_isnan32(x_34515);
                        
                        float y_34520;
                        
                        if (isnan_res_34519) {
                            y_34520 = 0.0F;
                        } else {
                            y_34520 = 1.0F;
                        }
                        
                        float defunc_2_f_res_34521 = x_34518 * y_34520;
                        float defunc_1_op_res_34514 = defunc_2_f_res_34521 +
                              redout_43313;
                        float redout_tmp_44660 = defunc_1_op_res_34514;
                        
                        redout_43313 = redout_tmp_44660;
                    }
                    defunc_2_reduce_res_34511 = redout_43313;
                    ((__global float *) mem_43401)[phys_tid_34478 + (i_43307 *
                                                                     (num_groups_34503 *
                                                                      segmap_group_sizze_34502 *
                                                                      i32_res_28644) +
                                                                     i_43311 *
                                                                     (num_groups_34503 *
                                                                      segmap_group_sizze_34502))] =
                        defunc_2_reduce_res_34511;
                }
            }
            for (int64_t i_44661 = 0; i_44661 < i32_res_28644; i_44661++) {
                for (int64_t i_44662 = 0; i_44662 < i32_res_28644; i_44662++) {
                    ((__global float *) mem_43443)[i_44661 * (m_28625 *
                                                              i32_res_28644) +
                                                   i_44662 * m_28625 +
                                                   gtid_34477] = ((__global
                                                                   float *) mem_43401)[phys_tid_34478 +
                                                                                       (i_44661 *
                                                                                        (num_groups_34503 *
                                                                                         segmap_group_sizze_34502 *
                                                                                         i32_res_28644) +
                                                                                        i_44662 *
                                                                                        (num_groups_34503 *
                                                                                         segmap_group_sizze_34502))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34502
}
__kernel void mainMagnitudezisegmap_34524(__global int *global_failure,
                                          int64_t m_28625, int64_t N_28626,
                                          int32_t n_28629, int32_t k2p2zq_28642,
                                          int64_t i32_res_28644,
                                          int64_t num_groups_34680, __global
                                          unsigned char *images_mem_43378,
                                          __global unsigned char *mem_43390,
                                          __global unsigned char *mem_43394,
                                          __global unsigned char *mem_43446,
                                          __global unsigned char *mem_43462)
{
    #define segmap_group_sizze_34679 (mainMagnitudezisegmap_group_sizze_34527)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44663;
    int32_t local_tid_44664;
    int64_t group_sizze_44667;
    int32_t wave_sizze_44666;
    int32_t group_tid_44665;
    
    global_tid_44663 = get_global_id(0);
    local_tid_44664 = get_local_id(0);
    group_sizze_44667 = get_local_size(0);
    wave_sizze_44666 = LOCKSTEP_WIDTH;
    group_tid_44665 = get_group_id(0);
    
    int32_t phys_tid_34524;
    
    phys_tid_34524 = global_tid_44663;
    
    int32_t phys_group_id_44668;
    
    phys_group_id_44668 = get_group_id(0);
    for (int32_t i_44669 = 0; i_44669 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625 * i32_res_28644,
                                          segmap_group_sizze_34679)) -
                   phys_group_id_44668, sext_i64_i32(num_groups_34680));
         i_44669++) {
        int32_t virt_group_id_44670 = phys_group_id_44668 + i_44669 *
                sext_i64_i32(num_groups_34680);
        int64_t gtid_34522 = squot64(sext_i32_i64(virt_group_id_44670) *
                                     segmap_group_sizze_34679 +
                                     sext_i32_i64(local_tid_44664),
                                     i32_res_28644);
        int64_t gtid_34523 = sext_i32_i64(virt_group_id_44670) *
                segmap_group_sizze_34679 + sext_i32_i64(local_tid_44664) -
                squot64(sext_i32_i64(virt_group_id_44670) *
                        segmap_group_sizze_34679 +
                        sext_i32_i64(local_tid_44664), i32_res_28644) *
                i32_res_28644;
        
        if (slt64(gtid_34522, m_28625) && slt64(gtid_34523, i32_res_28644)) {
            for (int32_t i_43361 = 0; i_43361 < k2p2zq_28642; i_43361++) {
                int64_t i_43317 = sext_i32_i64(i_43361);
                float defunc_2_reduce_res_34691;
                float redout_43319 = 0.0F;
                
                for (int32_t i_43360 = 0; i_43360 < n_28629; i_43360++) {
                    int64_t i_43320 = sext_i32_i64(i_43360);
                    float x_34695 = ((__global
                                      float *) images_mem_43378)[gtid_34522 *
                                                                 N_28626 +
                                                                 i_43320];
                    float x_34696 = ((__global float *) mem_43390)[i_43320 *
                                                                   i32_res_28644 +
                                                                   gtid_34523];
                    float x_34697 = ((__global float *) mem_43394)[i_43320 *
                                                                   i32_res_28644 +
                                                                   i_43317];
                    float x_34698 = x_34696 * x_34697;
                    bool isnan_res_34699;
                    
                    isnan_res_34699 = futrts_isnan32(x_34695);
                    
                    float y_34700;
                    
                    if (isnan_res_34699) {
                        y_34700 = 0.0F;
                    } else {
                        y_34700 = 1.0F;
                    }
                    
                    float defunc_2_f_res_34701 = x_34698 * y_34700;
                    float defunc_1_op_res_34694 = defunc_2_f_res_34701 +
                          redout_43319;
                    float redout_tmp_44672 = defunc_1_op_res_34694;
                    
                    redout_43319 = redout_tmp_44672;
                }
                defunc_2_reduce_res_34691 = redout_43319;
                ((__global float *) mem_43446)[phys_tid_34524 + i_43317 *
                                               (num_groups_34680 *
                                                segmap_group_sizze_34679)] =
                    defunc_2_reduce_res_34691;
            }
            for (int64_t i_44673 = 0; i_44673 < i32_res_28644; i_44673++) {
                ((__global float *) mem_43462)[i_44673 * (i32_res_28644 *
                                                          m_28625) +
                                               gtid_34522 * i32_res_28644 +
                                               gtid_34523] = ((__global
                                                               float *) mem_43446)[phys_tid_34524 +
                                                                                   i_44673 *
                                                                                   (num_groups_34680 *
                                                                                    segmap_group_sizze_34679)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34679
}
__kernel void mainMagnitudezisegmap_35008(__global int *global_failure,
                                          int64_t m_28625,
                                          int64_t i32_res_28644,
                                          int64_t i32_res_28777,
                                          int64_t i32_res_28792,
                                          int64_t x_28793, int64_t j_m_i_28796,
                                          int64_t gauss_jordan_res_r_ixfn_43614,
                                          int64_t gauss_jordan_res_r_ixfn_43615,
                                          int64_t gauss_jordan_res_r_ixfn_43617,
                                          __global
                                          unsigned char *gauss_jordan_res_r_mem_43619,
                                          __global unsigned char *mem_43624)
{
    #define segmap_group_sizze_35559 (mainMagnitudezisegmap_group_sizze_35012)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44829;
    int32_t local_tid_44830;
    int64_t group_sizze_44833;
    int32_t wave_sizze_44832;
    int32_t group_tid_44831;
    
    global_tid_44829 = get_global_id(0);
    local_tid_44830 = get_local_id(0);
    group_sizze_44833 = get_local_size(0);
    wave_sizze_44832 = LOCKSTEP_WIDTH;
    group_tid_44831 = get_group_id(0);
    
    int32_t phys_tid_35008;
    
    phys_tid_35008 = global_tid_44829;
    
    int64_t gtid_35005;
    
    gtid_35005 = squot64(sext_i32_i64(group_tid_44831) *
                         segmap_group_sizze_35559 +
                         sext_i32_i64(local_tid_44830), i32_res_28644 *
                         j_m_i_28796);
    
    int64_t gtid_slice_35003;
    
    gtid_slice_35003 = squot64(sext_i32_i64(group_tid_44831) *
                               segmap_group_sizze_35559 +
                               sext_i32_i64(local_tid_44830) -
                               squot64(sext_i32_i64(group_tid_44831) *
                                       segmap_group_sizze_35559 +
                                       sext_i32_i64(local_tid_44830),
                                       i32_res_28644 * j_m_i_28796) *
                               (i32_res_28644 * j_m_i_28796), j_m_i_28796);
    
    int64_t gtid_slice_35004;
    
    gtid_slice_35004 = sext_i32_i64(group_tid_44831) *
        segmap_group_sizze_35559 + sext_i32_i64(local_tid_44830) -
        squot64(sext_i32_i64(group_tid_44831) * segmap_group_sizze_35559 +
                sext_i32_i64(local_tid_44830), i32_res_28644 * j_m_i_28796) *
        (i32_res_28644 * j_m_i_28796) - squot64(sext_i32_i64(group_tid_44831) *
                                                segmap_group_sizze_35559 +
                                                sext_i32_i64(local_tid_44830) -
                                                squot64(sext_i32_i64(group_tid_44831) *
                                                        segmap_group_sizze_35559 +
                                                        sext_i32_i64(local_tid_44830),
                                                        i32_res_28644 *
                                                        j_m_i_28796) *
                                                (i32_res_28644 * j_m_i_28796),
                                                j_m_i_28796) * j_m_i_28796;
    if ((slt64(gtid_35005, m_28625) && slt64(gtid_slice_35003,
                                             i32_res_28644)) &&
        slt64(gtid_slice_35004, j_m_i_28796)) {
        int64_t slice_35563 = i32_res_28644 + gtid_slice_35004;
        int64_t binop_x_41445 = x_28793 * gtid_35005;
        int64_t binop_y_41446 = i32_res_28792 * gtid_slice_35003;
        int64_t binop_x_41447 = binop_x_41445 + binop_y_41446;
        int64_t binop_x_41448 = slice_35563 + binop_x_41447;
        int64_t new_index_41449 = squot64(binop_x_41448, i32_res_28777);
        int64_t binop_y_41461 = i32_res_28777 * new_index_41449;
        int64_t new_index_41462 = binop_x_41448 - binop_y_41461;
        float v_35564 = ((__global
                          float *) gauss_jordan_res_r_mem_43619)[gauss_jordan_res_r_ixfn_43614 +
                                                                 (new_index_41449 *
                                                                  gauss_jordan_res_r_ixfn_43615 +
                                                                  new_index_41462 *
                                                                  gauss_jordan_res_r_ixfn_43617)];
        
        ((__global float *) mem_43624)[gtid_35005 * (j_m_i_28796 *
                                                     i32_res_28644) +
                                       gtid_slice_35003 * j_m_i_28796 +
                                       gtid_slice_35004] = v_35564;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35559
}
__kernel void mainMagnitudezisegmap_35174(__global int *global_failure,
                                          int64_t m_28625,
                                          int64_t i32_res_28777,
                                          int64_t ctx_param_ext_43577,
                                          int64_t ctx_param_ext_43578,
                                          int64_t ctx_param_ext_43580, __global
                                          unsigned char *mem_param_43582,
                                          __global unsigned char *mem_43602)
{
    #define segmap_group_sizze_35547 (mainMagnitudezisegmap_group_sizze_35177)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44823;
    int32_t local_tid_44824;
    int64_t group_sizze_44827;
    int32_t wave_sizze_44826;
    int32_t group_tid_44825;
    
    global_tid_44823 = get_global_id(0);
    local_tid_44824 = get_local_id(0);
    group_sizze_44827 = get_local_size(0);
    wave_sizze_44826 = LOCKSTEP_WIDTH;
    group_tid_44825 = get_group_id(0);
    
    int32_t phys_tid_35174;
    
    phys_tid_35174 = global_tid_44823;
    
    int64_t gtid_35172;
    
    gtid_35172 = squot64(sext_i32_i64(group_tid_44825) *
                         segmap_group_sizze_35547 +
                         sext_i32_i64(local_tid_44824), i32_res_28777);
    
    int64_t gtid_35173;
    
    gtid_35173 = sext_i32_i64(group_tid_44825) * segmap_group_sizze_35547 +
        sext_i32_i64(local_tid_44824) - squot64(sext_i32_i64(group_tid_44825) *
                                                segmap_group_sizze_35547 +
                                                sext_i32_i64(local_tid_44824),
                                                i32_res_28777) * i32_res_28777;
    if (slt64(gtid_35172, m_28625) && slt64(gtid_35173, i32_res_28777)) {
        float write_value_35553 = ((__global float *) mem_43602)[gtid_35172 *
                                                                 i32_res_28777 +
                                                                 gtid_35173];
        
        if ((sle64(0, gtid_35172) && slt64(gtid_35172, m_28625)) && (sle64(0,
                                                                           gtid_35173) &&
                                                                     slt64(gtid_35173,
                                                                           i32_res_28777))) {
            ((__global float *) mem_param_43582)[ctx_param_ext_43577 +
                                                 (gtid_35172 *
                                                  ctx_param_ext_43578 +
                                                  gtid_35173 *
                                                  ctx_param_ext_43580)] =
                write_value_35553;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35547
}
__kernel void mainMagnitudezisegmap_35228(__global int *global_failure,
                                          int64_t m_28625, int32_t k2p2zq_28642,
                                          int32_t m_28775,
                                          int64_t i32_res_28777,
                                          int32_t i_35450,
                                          int64_t i32_res_35452,
                                          int64_t ctx_param_ext_43577,
                                          int64_t ctx_param_ext_43578,
                                          int64_t ctx_param_ext_43580, __global
                                          unsigned char *mem_param_43582,
                                          __global unsigned char *mem_43598,
                                          __global unsigned char *mem_43602)
{
    #define segmap_group_sizze_35513 (mainMagnitudezisegmap_group_sizze_35231)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44818;
    int32_t local_tid_44819;
    int64_t group_sizze_44822;
    int32_t wave_sizze_44821;
    int32_t group_tid_44820;
    
    global_tid_44818 = get_global_id(0);
    local_tid_44819 = get_local_id(0);
    group_sizze_44822 = get_local_size(0);
    wave_sizze_44821 = LOCKSTEP_WIDTH;
    group_tid_44820 = get_group_id(0);
    
    int32_t phys_tid_35228;
    
    phys_tid_35228 = global_tid_44818;
    
    int64_t gtid_35226;
    
    gtid_35226 = squot64(sext_i32_i64(group_tid_44820) *
                         segmap_group_sizze_35513 +
                         sext_i32_i64(local_tid_44819), i32_res_28777);
    
    int64_t gtid_35227;
    
    gtid_35227 = sext_i32_i64(group_tid_44820) * segmap_group_sizze_35513 +
        sext_i32_i64(local_tid_44819) - squot64(sext_i32_i64(group_tid_44820) *
                                                segmap_group_sizze_35513 +
                                                sext_i32_i64(local_tid_44819),
                                                i32_res_28777) * i32_res_28777;
    if (slt64(gtid_35226, m_28625) && slt64(gtid_35227, i32_res_28777)) {
        bool cond_35518 = ((__global bool *) mem_43598)[gtid_35226];
        int32_t defunc_0_f_res_35520 = sext_i64_i32(gtid_35227);
        int32_t defunc_0_f_res_35521 = sdiv32(defunc_0_f_res_35520, m_28775);
        int32_t defunc_0_f_res_35522 = smod32(defunc_0_f_res_35520, m_28775);
        float defunc_0_f_res_35523;
        
        if (cond_35518) {
            int32_t x_35524 = mul32(m_28775, defunc_0_f_res_35521);
            int32_t i32_arg_35525 = add32(defunc_0_f_res_35522, x_35524);
            int64_t i32_res_35526 = sext_i32_i64(i32_arg_35525);
            float defunc_0_f_res_t_res_35527 = ((__global
                                                 float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                           (gtid_35226 *
                                                                            ctx_param_ext_43578 +
                                                                            i32_res_35526 *
                                                                            ctx_param_ext_43580)];
            
            defunc_0_f_res_35523 = defunc_0_f_res_t_res_35527;
        } else {
            float v1_35517 = ((__global
                               float *) mem_param_43582)[ctx_param_ext_43577 +
                                                         (gtid_35226 *
                                                          ctx_param_ext_43578 +
                                                          i32_res_35452 *
                                                          ctx_param_ext_43580)];
            int64_t i32_res_35528 = sext_i32_i64(defunc_0_f_res_35522);
            float x_35529 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_35226 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_35528 *
                                                         ctx_param_ext_43580)];
            float x_35530 = x_35529 / v1_35517;
            int32_t y_35531 = sub32(k2p2zq_28642, 1);
            bool cond_35532 = slt32(defunc_0_f_res_35521, y_35531);
            float defunc_0_f_res_f_res_35533;
            
            if (cond_35532) {
                int32_t x_35534 = add32(1, defunc_0_f_res_35521);
                int32_t x_35535 = mul32(m_28775, x_35534);
                int32_t i32_arg_35536 = add32(defunc_0_f_res_35522, x_35535);
                int64_t i32_res_35537 = sext_i32_i64(i32_arg_35536);
                float x_35538 = ((__global
                                  float *) mem_param_43582)[ctx_param_ext_43577 +
                                                            (gtid_35226 *
                                                             ctx_param_ext_43578 +
                                                             i32_res_35537 *
                                                             ctx_param_ext_43580)];
                int32_t i32_arg_35539 = add32(i_35450, x_35535);
                int64_t i32_res_35540 = sext_i32_i64(i32_arg_35539);
                float x_35541 = ((__global
                                  float *) mem_param_43582)[ctx_param_ext_43577 +
                                                            (gtid_35226 *
                                                             ctx_param_ext_43578 +
                                                             i32_res_35540 *
                                                             ctx_param_ext_43580)];
                float y_35542 = x_35530 * x_35541;
                float defunc_0_f_res_f_res_t_res_35543 = x_35538 - y_35542;
                
                defunc_0_f_res_f_res_35533 = defunc_0_f_res_f_res_t_res_35543;
            } else {
                defunc_0_f_res_f_res_35533 = x_35530;
            }
            defunc_0_f_res_35523 = defunc_0_f_res_f_res_35533;
        }
        ((__global float *) mem_43602)[gtid_35226 * i32_res_28777 +
                                       gtid_35227] = defunc_0_f_res_35523;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35513
}
__kernel void mainMagnitudezisegmap_35296(__global int *global_failure,
                                          int64_t m_28625,
                                          int64_t i32_res_35452,
                                          int64_t ctx_param_ext_43577,
                                          int64_t ctx_param_ext_43578,
                                          int64_t ctx_param_ext_43580, __global
                                          unsigned char *mem_param_43582,
                                          __global unsigned char *mem_43598)
{
    #define segmap_group_sizze_35497 (mainMagnitudezisegmap_group_sizze_35298)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44813;
    int32_t local_tid_44814;
    int64_t group_sizze_44817;
    int32_t wave_sizze_44816;
    int32_t group_tid_44815;
    
    global_tid_44813 = get_global_id(0);
    local_tid_44814 = get_local_id(0);
    group_sizze_44817 = get_local_size(0);
    wave_sizze_44816 = LOCKSTEP_WIDTH;
    group_tid_44815 = get_group_id(0);
    
    int32_t phys_tid_35296;
    
    phys_tid_35296 = global_tid_44813;
    
    int64_t gtid_35295;
    
    gtid_35295 = sext_i32_i64(group_tid_44815) * segmap_group_sizze_35497 +
        sext_i32_i64(local_tid_44814);
    if (slt64(gtid_35295, m_28625)) {
        float v1_35502 = ((__global
                           float *) mem_param_43582)[ctx_param_ext_43577 +
                                                     (gtid_35295 *
                                                      ctx_param_ext_43578 +
                                                      i32_res_35452 *
                                                      ctx_param_ext_43580)];
        bool cond_35503 = v1_35502 == 0.0F;
        
        ((__global bool *) mem_43598)[gtid_35295] = cond_35503;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35497
}
__kernel void mainMagnitudezisegmap_35389(__global int *global_failure,
                                          int64_t m_28625, int32_t k2p2zq_28642,
                                          int64_t i32_res_28644,
                                          int32_t m_28775,
                                          int64_t i32_res_28777, __global
                                          unsigned char *defunc_3_map_res_mem_43546,
                                          __global unsigned char *mem_43574)
{
    #define segmap_group_sizze_35433 (mainMagnitudezisegmap_group_sizze_35392)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44780;
    int32_t local_tid_44781;
    int64_t group_sizze_44784;
    int32_t wave_sizze_44783;
    int32_t group_tid_44782;
    
    global_tid_44780 = get_global_id(0);
    local_tid_44781 = get_local_id(0);
    group_sizze_44784 = get_local_size(0);
    wave_sizze_44783 = LOCKSTEP_WIDTH;
    group_tid_44782 = get_group_id(0);
    
    int32_t phys_tid_35389;
    
    phys_tid_35389 = global_tid_44780;
    
    int64_t gtid_35387;
    
    gtid_35387 = squot64(sext_i32_i64(group_tid_44782) *
                         segmap_group_sizze_35433 +
                         sext_i32_i64(local_tid_44781), i32_res_28777);
    
    int64_t gtid_35388;
    
    gtid_35388 = sext_i32_i64(group_tid_44782) * segmap_group_sizze_35433 +
        sext_i32_i64(local_tid_44781) - squot64(sext_i32_i64(group_tid_44782) *
                                                segmap_group_sizze_35433 +
                                                sext_i32_i64(local_tid_44781),
                                                i32_res_28777) * i32_res_28777;
    if (slt64(gtid_35387, m_28625) && slt64(gtid_35388, i32_res_28777)) {
        int32_t index_primexp_41393 = sext_i64_i32(gtid_35388);
        int32_t defunc_0_f_res_35438 = sdiv32(index_primexp_41393, m_28775);
        int32_t defunc_0_f_res_35439 = smod32(index_primexp_41393, m_28775);
        bool cond_35440 = slt32(defunc_0_f_res_35439, k2p2zq_28642);
        float defunc_0_f_res_35441;
        
        if (cond_35440) {
            int64_t i_35442 = sext_i32_i64(defunc_0_f_res_35438);
            int64_t j_35443 = sext_i32_i64(defunc_0_f_res_35439);
            float defunc_0_f_res_t_res_35444 = ((__global
                                                 float *) defunc_3_map_res_mem_43546)[gtid_35387 *
                                                                                      (i32_res_28644 *
                                                                                       i32_res_28644) +
                                                                                      i_35442 *
                                                                                      i32_res_28644 +
                                                                                      j_35443];
            
            defunc_0_f_res_35441 = defunc_0_f_res_t_res_35444;
        } else {
            int32_t y_35445 = add32(k2p2zq_28642, defunc_0_f_res_35438);
            bool cond_35446 = defunc_0_f_res_35439 == y_35445;
            float defunc_0_f_res_f_res_35447;
            
            if (cond_35446) {
                defunc_0_f_res_f_res_35447 = 1.0F;
            } else {
                defunc_0_f_res_f_res_35447 = 0.0F;
            }
            defunc_0_f_res_35441 = defunc_0_f_res_f_res_35447;
        }
        ((__global float *) mem_43574)[gtid_35387 * i32_res_28777 +
                                       gtid_35388] = defunc_0_f_res_35441;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35433
}
__kernel void mainMagnitudezisegmap_35570(__global int *global_failure,
                                          int64_t N_28624, int64_t m_28625,
                                          int32_t n_28629, int32_t k2p2zq_28642,
                                          int64_t i32_res_28644,
                                          int64_t num_groups_35591, __global
                                          unsigned char *binop_p_mem_43387,
                                          __global unsigned char *mem_43628,
                                          __global unsigned char *mem_43631,
                                          __global unsigned char *mem_43646)
{
    #define segmap_group_sizze_35590 (mainMagnitudezisegmap_group_sizze_35572)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44837;
    int32_t local_tid_44838;
    int64_t group_sizze_44841;
    int32_t wave_sizze_44840;
    int32_t group_tid_44839;
    
    global_tid_44837 = get_global_id(0);
    local_tid_44838 = get_local_id(0);
    group_sizze_44841 = get_local_size(0);
    wave_sizze_44840 = LOCKSTEP_WIDTH;
    group_tid_44839 = get_group_id(0);
    
    int32_t phys_tid_35570;
    
    phys_tid_35570 = global_tid_44837;
    
    int32_t phys_group_id_44842;
    
    phys_group_id_44842 = get_group_id(0);
    for (int32_t i_44843 = 0; i_44843 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625, segmap_group_sizze_35590)) -
                   phys_group_id_44842, sext_i64_i32(num_groups_35591));
         i_44843++) {
        int32_t virt_group_id_44844 = phys_group_id_44842 + i_44843 *
                sext_i64_i32(num_groups_35591);
        int64_t gtid_35569 = sext_i32_i64(virt_group_id_44844) *
                segmap_group_sizze_35590 + sext_i32_i64(local_tid_44838);
        
        if (slt64(gtid_35569, m_28625)) {
            for (int32_t i_43363 = 0; i_43363 < k2p2zq_28642; i_43363++) {
                int64_t i_43323 = sext_i32_i64(i_43363);
                float defunc_2_reduce_res_35597;
                float redout_43325 = 0.0F;
                
                for (int32_t i_43362 = 0; i_43362 < n_28629; i_43362++) {
                    int64_t i_43326 = sext_i32_i64(i_43362);
                    float x_35602 = ((__global float *) mem_43628)[i_43326 *
                                                                   m_28625 +
                                                                   gtid_35569];
                    bool isnan_res_35603;
                    
                    isnan_res_35603 = futrts_isnan32(x_35602);
                    
                    float defunc_1_f_res_35604;
                    
                    if (isnan_res_35603) {
                        defunc_1_f_res_35604 = 0.0F;
                    } else {
                        float x_35601 = ((__global
                                          float *) binop_p_mem_43387)[i_43323 *
                                                                      N_28624 +
                                                                      i_43326];
                        float defunc_1_f_res_f_res_35605 = x_35601 * x_35602;
                        
                        defunc_1_f_res_35604 = defunc_1_f_res_f_res_35605;
                    }
                    
                    float defunc_1_op_res_35600 = defunc_1_f_res_35604 +
                          redout_43325;
                    float redout_tmp_44846 = defunc_1_op_res_35600;
                    
                    redout_43325 = redout_tmp_44846;
                }
                defunc_2_reduce_res_35597 = redout_43325;
                ((__global float *) mem_43631)[phys_tid_35570 + i_43323 *
                                               (num_groups_35591 *
                                                segmap_group_sizze_35590)] =
                    defunc_2_reduce_res_35597;
            }
            for (int64_t i_44847 = 0; i_44847 < i32_res_28644; i_44847++) {
                ((__global float *) mem_43646)[i_44847 * m_28625 + gtid_35569] =
                    ((__global float *) mem_43631)[phys_tid_35570 + i_44847 *
                                                   (num_groups_35591 *
                                                    segmap_group_sizze_35590)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35590
}
__kernel void mainMagnitudezisegmap_35711(__global int *global_failure,
                                          int64_t m_28625, int32_t k2p2zq_28642,
                                          int64_t i32_res_28644,
                                          int64_t num_groups_35731, __global
                                          unsigned char *mem_43850, __global
                                          unsigned char *mem_43853, __global
                                          unsigned char *mem_43856, __global
                                          unsigned char *mem_43871)
{
    #define segmap_group_sizze_35730 (mainMagnitudezisegmap_group_sizze_35713)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44969;
    int32_t local_tid_44970;
    int64_t group_sizze_44973;
    int32_t wave_sizze_44972;
    int32_t group_tid_44971;
    
    global_tid_44969 = get_global_id(0);
    local_tid_44970 = get_local_id(0);
    group_sizze_44973 = get_local_size(0);
    wave_sizze_44972 = LOCKSTEP_WIDTH;
    group_tid_44971 = get_group_id(0);
    
    int32_t phys_tid_35711;
    
    phys_tid_35711 = global_tid_44969;
    
    int32_t phys_group_id_44974;
    
    phys_group_id_44974 = get_group_id(0);
    for (int32_t i_44975 = 0; i_44975 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625, segmap_group_sizze_35730)) -
                   phys_group_id_44974, sext_i64_i32(num_groups_35731));
         i_44975++) {
        int32_t virt_group_id_44976 = phys_group_id_44974 + i_44975 *
                sext_i64_i32(num_groups_35731);
        int64_t gtid_35710 = sext_i32_i64(virt_group_id_44976) *
                segmap_group_sizze_35730 + sext_i32_i64(local_tid_44970);
        
        if (slt64(gtid_35710, m_28625)) {
            for (int32_t i_43365 = 0; i_43365 < k2p2zq_28642; i_43365++) {
                int64_t i_43329 = sext_i32_i64(i_43365);
                float defunc_0_f_res_35738;
                float redout_43331 = 0.0F;
                
                for (int32_t i_43364 = 0; i_43364 < k2p2zq_28642; i_43364++) {
                    int64_t i_43332 = sext_i32_i64(i_43364);
                    float x_35742 = ((__global float *) mem_43853)[i_43332 *
                                                                   m_28625 +
                                                                   gtid_35710];
                    float x_35743 = ((__global float *) mem_43850)[i_43329 *
                                                                   (m_28625 *
                                                                    i32_res_28644) +
                                                                   i_43332 *
                                                                   m_28625 +
                                                                   gtid_35710];
                    float defunc_1_f_res_35744 = x_35742 * x_35743;
                    float defunc_1_op_res_35741 = defunc_1_f_res_35744 +
                          redout_43331;
                    float redout_tmp_44978 = defunc_1_op_res_35741;
                    
                    redout_43331 = redout_tmp_44978;
                }
                defunc_0_f_res_35738 = redout_43331;
                ((__global float *) mem_43856)[phys_tid_35711 + i_43329 *
                                               (num_groups_35731 *
                                                segmap_group_sizze_35730)] =
                    defunc_0_f_res_35738;
            }
            for (int64_t i_44979 = 0; i_44979 < i32_res_28644; i_44979++) {
                ((__global float *) mem_43871)[i_44979 * m_28625 + gtid_35710] =
                    ((__global float *) mem_43856)[phys_tid_35711 + i_44979 *
                                                   (num_groups_35731 *
                                                    segmap_group_sizze_35730)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35730
}
__kernel void mainMagnitudezisegmap_35843(__global int *global_failure,
                                          int64_t N_28624, int64_t m_28625,
                                          int32_t k2p2zq_28642,
                                          int64_t i32_res_28644,
                                          int64_t num_groups_35862, __global
                                          unsigned char *mem_43394, __global
                                          unsigned char *mem_43915, __global
                                          unsigned char *mem_43918, __global
                                          unsigned char *mem_43933)
{
    #define segmap_group_sizze_35861 (mainMagnitudezisegmap_group_sizze_35845)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45057;
    int32_t local_tid_45058;
    int64_t group_sizze_45061;
    int32_t wave_sizze_45060;
    int32_t group_tid_45059;
    
    global_tid_45057 = get_global_id(0);
    local_tid_45058 = get_local_id(0);
    group_sizze_45061 = get_local_size(0);
    wave_sizze_45060 = LOCKSTEP_WIDTH;
    group_tid_45059 = get_group_id(0);
    
    int32_t phys_tid_35843;
    
    phys_tid_35843 = global_tid_45057;
    
    int32_t phys_group_id_45062;
    
    phys_group_id_45062 = get_group_id(0);
    for (int32_t i_45063 = 0; i_45063 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625, segmap_group_sizze_35861)) -
                   phys_group_id_45062, sext_i64_i32(num_groups_35862));
         i_45063++) {
        int32_t virt_group_id_45064 = phys_group_id_45062 + i_45063 *
                sext_i64_i32(num_groups_35862);
        int64_t gtid_35842 = sext_i32_i64(virt_group_id_45064) *
                segmap_group_sizze_35861 + sext_i32_i64(local_tid_45058);
        
        if (slt64(gtid_35842, m_28625)) {
            for (int64_t i_43339 = 0; i_43339 < N_28624; i_43339++) {
                float defunc_0_f_res_35868;
                float redout_43341 = 0.0F;
                
                for (int32_t i_43368 = 0; i_43368 < k2p2zq_28642; i_43368++) {
                    int64_t i_43342 = sext_i32_i64(i_43368);
                    float x_35872 = ((__global float *) mem_43915)[i_43342 *
                                                                   m_28625 +
                                                                   gtid_35842];
                    float x_35873 = ((__global float *) mem_43394)[i_43339 *
                                                                   i32_res_28644 +
                                                                   i_43342];
                    float defunc_1_f_res_35874 = x_35872 * x_35873;
                    float defunc_1_op_res_35871 = defunc_1_f_res_35874 +
                          redout_43341;
                    float redout_tmp_45066 = defunc_1_op_res_35871;
                    
                    redout_43341 = redout_tmp_45066;
                }
                defunc_0_f_res_35868 = redout_43341;
                ((__global float *) mem_43918)[phys_tid_35843 + i_43339 *
                                               (num_groups_35862 *
                                                segmap_group_sizze_35861)] =
                    defunc_0_f_res_35868;
            }
            for (int64_t i_45067 = 0; i_45067 < N_28624; i_45067++) {
                ((__global float *) mem_43933)[i_45067 * m_28625 + gtid_35842] =
                    ((__global float *) mem_43918)[phys_tid_35843 + i_45067 *
                                                   (num_groups_35862 *
                                                    segmap_group_sizze_35861)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35861
}
__kernel void mainMagnitudezisegmap_36123(__global int *global_failure,
                                          int64_t N_28624, int64_t m_28625,
                                          __global unsigned char *mem_44139,
                                          __global unsigned char *mem_44142,
                                          __global unsigned char *mem_44165,
                                          __global unsigned char *mem_44168)
{
    #define segmap_group_sizze_36289 (mainMagnitudezisegmap_group_sizze_36126)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45284;
    int32_t local_tid_45285;
    int64_t group_sizze_45288;
    int32_t wave_sizze_45287;
    int32_t group_tid_45286;
    
    global_tid_45284 = get_global_id(0);
    local_tid_45285 = get_local_id(0);
    group_sizze_45288 = get_local_size(0);
    wave_sizze_45287 = LOCKSTEP_WIDTH;
    group_tid_45286 = get_group_id(0);
    
    int32_t phys_tid_36123;
    
    phys_tid_36123 = global_tid_45284;
    
    int64_t gtid_36121;
    
    gtid_36121 = squot64(sext_i32_i64(group_tid_45286) *
                         segmap_group_sizze_36289 +
                         sext_i32_i64(local_tid_45285), N_28624);
    
    int64_t gtid_36122;
    
    gtid_36122 = sext_i32_i64(group_tid_45286) * segmap_group_sizze_36289 +
        sext_i32_i64(local_tid_45285) - squot64(sext_i32_i64(group_tid_45286) *
                                                segmap_group_sizze_36289 +
                                                sext_i32_i64(local_tid_45285),
                                                N_28624) * N_28624;
    if (slt64(gtid_36121, m_28625) && slt64(gtid_36122, N_28624)) {
        float x_36297 = ((__global float *) mem_44168)[gtid_36121 * N_28624 +
                                                       gtid_36122];
        int32_t index_primexp_41409 = sext_i64_i32(gtid_36122);
        bool isnan_res_36300;
        
        isnan_res_36300 = futrts_isnan32(x_36297);
        
        bool defunc_0_p_res_36301 = !isnan_res_36300;
        int64_t defunc_1_f_res_36302;
        
        if (defunc_0_p_res_36301) {
            int64_t x_36298 = ((__global int64_t *) mem_44165)[gtid_36121 *
                                                               N_28624 +
                                                               gtid_36122];
            int64_t defunc_1_f_res_t_res_36303 = sub64(x_36298, 1);
            
            defunc_1_f_res_36302 = defunc_1_f_res_t_res_36303;
        } else {
            defunc_1_f_res_36302 = -1;
        }
        if ((sle64(0, gtid_36121) && slt64(gtid_36121, m_28625)) && (sle64(0,
                                                                           defunc_1_f_res_36302) &&
                                                                     slt64(defunc_1_f_res_36302,
                                                                           N_28624))) {
            ((__global int32_t *) mem_44142)[gtid_36121 * N_28624 +
                                             defunc_1_f_res_36302] =
                index_primexp_41409;
        }
        if ((sle64(0, gtid_36121) && slt64(gtid_36121, m_28625)) && (sle64(0,
                                                                           defunc_1_f_res_36302) &&
                                                                     slt64(defunc_1_f_res_36302,
                                                                           N_28624))) {
            ((__global float *) mem_44139)[gtid_36121 * N_28624 +
                                           defunc_1_f_res_36302] = x_36297;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36289
}
__kernel void mainMagnitudezisegmap_36199(__global int *global_failure,
                                          int64_t N_28624, int64_t m_28625,
                                          int64_t i_28904, __global
                                          unsigned char *mem_44165, __global
                                          unsigned char *mem_44171)
{
    #define segmap_group_sizze_36253 (mainMagnitudezisegmap_group_sizze_36201)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45279;
    int32_t local_tid_45280;
    int64_t group_sizze_45283;
    int32_t wave_sizze_45282;
    int32_t group_tid_45281;
    
    global_tid_45279 = get_global_id(0);
    local_tid_45280 = get_local_id(0);
    group_sizze_45283 = get_local_size(0);
    wave_sizze_45282 = LOCKSTEP_WIDTH;
    group_tid_45281 = get_group_id(0);
    
    int32_t phys_tid_36199;
    
    phys_tid_36199 = global_tid_45279;
    
    int64_t gtid_36198;
    
    gtid_36198 = sext_i32_i64(group_tid_45281) * segmap_group_sizze_36253 +
        sext_i32_i64(local_tid_45280);
    if (slt64(gtid_36198, m_28625)) {
        int64_t last_res_36257 = ((__global int64_t *) mem_44165)[gtid_36198 *
                                                                  N_28624 +
                                                                  i_28904];
        int32_t defunc_0_f_res_36258 = sext_i64_i32(last_res_36257);
        
        ((__global int32_t *) mem_44171)[gtid_36198] = defunc_0_f_res_36258;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36253
}
__kernel void mainMagnitudezisegmap_36450(__global int *global_failure,
                                          int64_t m_28625, float hfrac_28631,
                                          int32_t k2p2_28640, __global
                                          unsigned char *mem_44225, __global
                                          unsigned char *mem_44228, __global
                                          unsigned char *mem_44231, __global
                                          unsigned char *mem_44233)
{
    #define segmap_group_sizze_36535 (mainMagnitudezisegmap_group_sizze_36452)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45439;
    int32_t local_tid_45440;
    int64_t group_sizze_45443;
    int32_t wave_sizze_45442;
    int32_t group_tid_45441;
    
    global_tid_45439 = get_global_id(0);
    local_tid_45440 = get_local_id(0);
    group_sizze_45443 = get_local_size(0);
    wave_sizze_45442 = LOCKSTEP_WIDTH;
    group_tid_45441 = get_group_id(0);
    
    int32_t phys_tid_36450;
    
    phys_tid_36450 = global_tid_45439;
    
    int64_t gtid_36449;
    
    gtid_36449 = sext_i32_i64(group_tid_45441) * segmap_group_sizze_36535 +
        sext_i32_i64(local_tid_45440);
    if (slt64(gtid_36449, m_28625)) {
        int32_t defunc_0_f_res_36539 = ((__global
                                         int32_t *) mem_44225)[gtid_36449];
        float defunc_0_f_res_36540 = ((__global float *) mem_44228)[gtid_36449];
        int32_t r32_arg_36541 = sub32(defunc_0_f_res_36539, k2p2_28640);
        float i32_res_36542 = sitofp_i32_f32(r32_arg_36541);
        float sqrt_arg_36543 = defunc_0_f_res_36540 / i32_res_36542;
        float sqrt_res_36544;
        
        sqrt_res_36544 = futrts_sqrt32(sqrt_arg_36543);
        
        float i32_res_36545 = sitofp_i32_f32(defunc_0_f_res_36539);
        float t32_arg_36546 = hfrac_28631 * i32_res_36545;
        int32_t f32_res_36547 = fptosi_f32_i32(t32_arg_36546);
        
        ((__global int32_t *) mem_44231)[gtid_36449] = f32_res_36547;
        ((__global float *) mem_44233)[gtid_36449] = sqrt_res_36544;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36535
}
__kernel void mainMagnitudezisegmap_36721(__global int *global_failure,
                                          float lam_28632,
                                          int64_t iota32_arg_29024,
                                          int32_t x_29029, float i32_res_29037,
                                          __global
                                          unsigned char *mappingindices_mem_43377,
                                          __global unsigned char *mem_44275,
                                          __global unsigned char *mem_44277)
{
    #define segmap_group_sizze_36740 (mainMagnitudezisegmap_group_sizze_36723)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45549;
    int32_t local_tid_45550;
    int64_t group_sizze_45553;
    int32_t wave_sizze_45552;
    int32_t group_tid_45551;
    
    global_tid_45549 = get_global_id(0);
    local_tid_45550 = get_local_id(0);
    group_sizze_45553 = get_local_size(0);
    wave_sizze_45552 = LOCKSTEP_WIDTH;
    group_tid_45551 = get_group_id(0);
    
    int32_t phys_tid_36721;
    
    phys_tid_36721 = global_tid_45549;
    
    int64_t gtid_36720;
    
    gtid_36720 = sext_i32_i64(group_tid_45551) * segmap_group_sizze_36740 +
        sext_i32_i64(local_tid_45550);
    if (slt64(gtid_36720, iota32_arg_29024)) {
        int32_t defunc_0_f_res_36745 = sext_i64_i32(gtid_36720);
        int32_t t_36746 = add32(x_29029, defunc_0_f_res_36745);
        int32_t i_36747 = sub32(t_36746, 1);
        int64_t i_36748 = sext_i32_i64(i_36747);
        int32_t time_36749 = ((__global
                               int32_t *) mappingindices_mem_43377)[i_36748];
        float i32_res_36750 = sitofp_i32_f32(time_36749);
        float logplus_arg_36751 = i32_res_36750 / i32_res_29037;
        bool cond_36752 = 2.7182817F < logplus_arg_36751;
        float logplus_res_36753;
        
        if (cond_36752) {
            float log_res_36754;
            
            log_res_36754 = futrts_log32(logplus_arg_36751);
            logplus_res_36753 = log_res_36754;
        } else {
            logplus_res_36753 = 1.0F;
        }
        
        float sqrt_res_36755;
        
        sqrt_res_36755 = futrts_sqrt32(logplus_res_36753);
        
        float defunc_0_f_res_36756 = lam_28632 * sqrt_res_36755;
        
        ((__global int32_t *) mem_44275)[gtid_36720] = defunc_0_f_res_36745;
        ((__global float *) mem_44277)[gtid_36720] = defunc_0_f_res_36756;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36740
}
__kernel void mainMagnitudezisegmap_37402(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28624, int64_t m_28625,
                                          int32_t n_28629,
                                          int64_t iota32_arg_29024,
                                          int64_t distance_29056,
                                          int64_t segmap_usable_groups_37915,
                                          __global
                                          unsigned char *defunc_4_map_res_mem_44173,
                                          __global
                                          unsigned char *defunc_4_map_res_mem_44175,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_44238,
                                          __global unsigned char *mem_44320,
                                          __global unsigned char *mem_44334,
                                          __global unsigned char *mem_44336,
                                          __global unsigned char *mem_44345,
                                          __global unsigned char *mem_44356,
                                          __global unsigned char *mem_44376,
                                          __global unsigned char *mem_44378)
{
    #define segmap_group_sizze_37914 (mainMagnitudezisegmap_group_sizze_37404)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45758;
    int32_t local_tid_45759;
    int64_t group_sizze_45762;
    int32_t wave_sizze_45761;
    int32_t group_tid_45760;
    
    global_tid_45758 = get_global_id(0);
    local_tid_45759 = get_local_id(0);
    group_sizze_45762 = get_local_size(0);
    wave_sizze_45761 = LOCKSTEP_WIDTH;
    group_tid_45760 = get_group_id(0);
    
    int32_t phys_tid_37402;
    
    phys_tid_37402 = global_tid_45758;
    
    int64_t gtid_37401;
    
    gtid_37401 = sext_i32_i64(group_tid_45760) * segmap_group_sizze_37914 +
        sext_i32_i64(local_tid_45759);
    if (slt64(gtid_37401, m_28625)) {
        int32_t x_37918 = ((__global
                            int32_t *) defunc_4_map_res_mem_44173)[gtid_37401];
        int32_t x_37919 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_37401];
        int32_t y_37921 = ((__global int32_t *) mem_44320)[gtid_37401];
        bool defunc_0_f_res_37922 = ((__global bool *) mem_44334)[gtid_37401];
        
        for (int64_t i_45763 = 0; i_45763 < iota32_arg_29024; i_45763++) {
            ((__global float *) mem_44356)[phys_tid_37402 + i_45763 *
                                           (segmap_usable_groups_37915 *
                                            segmap_group_sizze_37914)] =
                ((__global float *) mem_44345)[gtid_37401 + i_45763 * m_28625];
        }
        for (int64_t i_37926 = 0; i_37926 < distance_29056; i_37926++) {
            int64_t index_primexp_37928 = add64(1, i_37926);
            bool cond_37929 = slt64(0, index_primexp_37928);
            bool loop_cond_37930;
            
            if (cond_37929) {
                bool x_37931 = sle64(0, index_primexp_37928);
                bool y_37932 = slt64(index_primexp_37928, iota32_arg_29024);
                bool bounds_check_37933 = x_37931 && y_37932;
                bool index_certs_37934;
                
                if (!bounds_check_37933) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 35) ==
                            -1) {
                            global_failure_args[0] = index_primexp_37928;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_37935 = ((__global
                                                       float *) mem_44356)[phys_tid_37402 +
                                                                           index_primexp_37928 *
                                                                           (segmap_usable_groups_37915 *
                                                                            segmap_group_sizze_37914)];
                bool y_37936 = slt64(i_37926, iota32_arg_29024);
                bool index_certs_37937;
                
                if (!y_37936) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 36) ==
                            -1) {
                            global_failure_args[0] = i_37926;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_37938 = ((__global
                                                       float *) mem_44356)[phys_tid_37402 +
                                                                           i_37926 *
                                                                           (segmap_usable_groups_37915 *
                                                                            segmap_group_sizze_37914)];
                bool defunc_1_zlze_res_37939 = defunc_1_lifted_gt_arg_37938 <=
                     defunc_2_lifted_gt_arg_37935;
                bool defunc_2_lifted_gt_res_37940 = !defunc_1_zlze_res_37939;
                
                loop_cond_37930 = defunc_2_lifted_gt_res_37940;
            } else {
                loop_cond_37930 = 0;
            }
            
            bool xszq_37941;
            int64_t xszq_37942;
            bool loop_while_37944;
            int64_t j_37945;
            
            loop_while_37944 = loop_cond_37930;
            j_37945 = index_primexp_37928;
            while (loop_while_37944) {
                int64_t loopres_37947 = sub64(j_37945, 1);
                bool x_37948 = sle64(0, j_37945);
                bool y_37949 = slt64(j_37945, iota32_arg_29024);
                bool bounds_check_37950 = x_37948 && y_37949;
                bool index_certs_37951;
                
                if (!bounds_check_37950) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 37) ==
                            -1) {
                            global_failure_args[0] = j_37945;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_37952 = ((__global
                                         float *) mem_44356)[phys_tid_37402 +
                                                             j_37945 *
                                                             (segmap_usable_groups_37915 *
                                                              segmap_group_sizze_37914)];
                bool x_37953 = sle64(0, loopres_37947);
                bool y_37954 = slt64(loopres_37947, iota32_arg_29024);
                bool bounds_check_37955 = x_37953 && y_37954;
                bool index_certs_37956;
                
                if (!bounds_check_37955) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 38) ==
                            -1) {
                            global_failure_args[0] = loopres_37947;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_37957 = ((__global
                                         float *) mem_44356)[phys_tid_37402 +
                                                             loopres_37947 *
                                                             (segmap_usable_groups_37915 *
                                                              segmap_group_sizze_37914)];
                
                ((__global float *) mem_44356)[phys_tid_37402 + j_37945 *
                                               (segmap_usable_groups_37915 *
                                                segmap_group_sizze_37914)] =
                    copy_arg_37957;
                ((__global float *) mem_44356)[phys_tid_37402 + loopres_37947 *
                                               (segmap_usable_groups_37915 *
                                                segmap_group_sizze_37914)] =
                    copy_arg_37952;
                
                bool cond_37960 = slt64(0, loopres_37947);
                bool loop_cond_37961;
                
                if (cond_37960) {
                    bool index_certs_37962;
                    
                    if (!bounds_check_37955) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          39) == -1) {
                                global_failure_args[0] = loopres_37947;
                                global_failure_args[1] = iota32_arg_29024;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_37963 = ((__global
                                                           float *) mem_44356)[phys_tid_37402 +
                                                                               loopres_37947 *
                                                                               (segmap_usable_groups_37915 *
                                                                                segmap_group_sizze_37914)];
                    int64_t i_37964 = sub64(loopres_37947, 1);
                    bool x_37965 = sle64(0, i_37964);
                    bool y_37966 = slt64(i_37964, iota32_arg_29024);
                    bool bounds_check_37967 = x_37965 && y_37966;
                    bool index_certs_37968;
                    
                    if (!bounds_check_37967) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          40) == -1) {
                                global_failure_args[0] = i_37964;
                                global_failure_args[1] = iota32_arg_29024;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_37969 = ((__global
                                                           float *) mem_44356)[phys_tid_37402 +
                                                                               i_37964 *
                                                                               (segmap_usable_groups_37915 *
                                                                                segmap_group_sizze_37914)];
                    bool defunc_1_zlze_res_37970 =
                         defunc_1_lifted_gt_arg_37969 <=
                         defunc_2_lifted_gt_arg_37963;
                    bool defunc_2_lifted_gt_res_37971 =
                         !defunc_1_zlze_res_37970;
                    
                    loop_cond_37961 = defunc_2_lifted_gt_res_37971;
                } else {
                    loop_cond_37961 = 0;
                }
                
                bool loop_while_tmp_45765 = loop_cond_37961;
                int64_t j_tmp_45766 = loopres_37947;
                
                loop_while_37944 = loop_while_tmp_45765;
                j_37945 = j_tmp_45766;
            }
            xszq_37941 = loop_while_37944;
            xszq_37942 = j_37945;
        }
        
        int32_t i_37972 = sdiv32(y_37921, 2);
        int32_t j_37973 = sub32(i_37972, 1);
        bool cond_37974 = x_37918 == x_37919;
        float defunc_0_f_res_37975;
        
        if (cond_37974) {
            defunc_0_f_res_37975 = 0.0F;
        } else {
            int32_t x_37976 = smod32(y_37921, 2);
            bool cond_37977 = x_37976 == 0;
            float defunc_0_f_res_f_res_37978;
            
            if (cond_37977) {
                int64_t j_37979 = sext_i32_i64(j_37973);
                bool x_37980 = sle64(0, j_37979);
                bool y_37981 = slt64(j_37979, iota32_arg_29024);
                bool bounds_check_37982 = x_37980 && y_37981;
                bool index_certs_37983;
                
                if (!bounds_check_37982) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 41) ==
                            -1) {
                            global_failure_args[0] = j_37979;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        return;
                    }
                }
                
                float x_37984 = ((__global float *) mem_44356)[phys_tid_37402 +
                                                               j_37979 *
                                                               (segmap_usable_groups_37915 *
                                                                segmap_group_sizze_37914)];
                int64_t i_37985 = sext_i32_i64(i_37972);
                bool x_37986 = sle64(0, i_37985);
                bool y_37987 = slt64(i_37985, iota32_arg_29024);
                bool bounds_check_37988 = x_37986 && y_37987;
                bool index_certs_37989;
                
                if (!bounds_check_37988) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 42) ==
                            -1) {
                            global_failure_args[0] = i_37985;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        return;
                    }
                }
                
                float y_37990 = ((__global float *) mem_44356)[phys_tid_37402 +
                                                               i_37985 *
                                                               (segmap_usable_groups_37915 *
                                                                segmap_group_sizze_37914)];
                float x_37991 = x_37984 + y_37990;
                float defunc_0_f_res_f_res_t_res_37992 = x_37991 / 2.0F;
                
                defunc_0_f_res_f_res_37978 = defunc_0_f_res_f_res_t_res_37992;
            } else {
                int64_t i_37993 = sext_i32_i64(i_37972);
                bool x_37994 = sle64(0, i_37993);
                bool y_37995 = slt64(i_37993, iota32_arg_29024);
                bool bounds_check_37996 = x_37994 && y_37995;
                bool index_certs_37997;
                
                if (!bounds_check_37996) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 43) ==
                            -1) {
                            global_failure_args[0] = i_37993;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_37998 = ((__global
                                                           float *) mem_44356)[phys_tid_37402 +
                                                                               i_37993 *
                                                                               (segmap_usable_groups_37915 *
                                                                                segmap_group_sizze_37914)];
                
                defunc_0_f_res_f_res_37978 = defunc_0_f_res_f_res_f_res_37998;
            }
            defunc_0_f_res_37975 = defunc_0_f_res_f_res_37978;
        }
        
        bool cond_37999 = !defunc_0_f_res_37922;
        int32_t fst_breakzq_38000;
        
        if (cond_37999) {
            fst_breakzq_38000 = -1;
        } else {
            int32_t defunc_0_f_res_37923 = ((__global
                                             int32_t *) mem_44336)[gtid_37401];
            bool cond_38001 = slt32(defunc_0_f_res_37923, y_37921);
            int32_t adjustValInds_res_38002;
            
            if (cond_38001) {
                int32_t i_38003 = add32(x_37919, defunc_0_f_res_37923);
                int64_t i_38004 = sext_i32_i64(i_38003);
                int32_t x_38005 = ((__global
                                    int32_t *) defunc_4_map_res_mem_44175)[gtid_37401 *
                                                                           N_28624 +
                                                                           i_38004];
                int32_t adjustValInds_res_t_res_38006 = sub32(x_38005, n_28629);
                
                adjustValInds_res_38002 = adjustValInds_res_t_res_38006;
            } else {
                adjustValInds_res_38002 = -1;
            }
            fst_breakzq_38000 = adjustValInds_res_38002;
        }
        
        bool cond_38007 = sle32(x_37919, 5);
        bool cond_f_res_38008 = sle32(y_37921, 5);
        bool x_38009 = !cond_38007;
        bool y_38010 = cond_f_res_38008 && x_38009;
        bool cond_38011 = cond_38007 || y_38010;
        int32_t fst_breakzq_38012;
        
        if (cond_38011) {
            fst_breakzq_38012 = -2;
        } else {
            fst_breakzq_38012 = fst_breakzq_38000;
        }
        ((__global int32_t *) mem_44376)[gtid_37401] = fst_breakzq_38012;
        ((__global float *) mem_44378)[gtid_37401] = defunc_0_f_res_37975;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37914
}
__kernel void mainMagnitudezisegmap_37540(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28624, int64_t m_28625,
                                          int64_t iota32_arg_29024, __global
                                          unsigned char *defunc_4_map_res_mem_44174,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_44238,
                                          __global unsigned char *mem_44320,
                                          __global unsigned char *mem_44342)
{
    #define segmap_group_sizze_37885 (mainMagnitudezisegmap_group_sizze_37543)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45753;
    int32_t local_tid_45754;
    int64_t group_sizze_45757;
    int32_t wave_sizze_45756;
    int32_t group_tid_45755;
    
    global_tid_45753 = get_global_id(0);
    local_tid_45754 = get_local_id(0);
    group_sizze_45757 = get_local_size(0);
    wave_sizze_45756 = LOCKSTEP_WIDTH;
    group_tid_45755 = get_group_id(0);
    
    int32_t phys_tid_37540;
    
    phys_tid_37540 = global_tid_45753;
    
    int64_t gtid_37538;
    
    gtid_37538 = squot64(sext_i32_i64(group_tid_45755) *
                         segmap_group_sizze_37885 +
                         sext_i32_i64(local_tid_45754), iota32_arg_29024);
    
    int64_t gtid_37539;
    
    gtid_37539 = sext_i32_i64(group_tid_45755) * segmap_group_sizze_37885 +
        sext_i32_i64(local_tid_45754) - squot64(sext_i32_i64(group_tid_45755) *
                                                segmap_group_sizze_37885 +
                                                sext_i32_i64(local_tid_45754),
                                                iota32_arg_29024) *
        iota32_arg_29024;
    if (slt64(gtid_37538, m_28625) && slt64(gtid_37539, iota32_arg_29024)) {
        int32_t x_37888 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_37538];
        int32_t y_37890 = ((__global int32_t *) mem_44320)[gtid_37538];
        int32_t index_primexp_41442 = sext_i64_i32(gtid_37539);
        bool cond_37892 = slt32(index_primexp_41442, y_37890);
        bool cond_37893;
        
        if (cond_37892) {
            int32_t i_37894 = add32(x_37888, index_primexp_41442);
            int64_t i_37895 = sext_i32_i64(i_37894);
            bool x_37896 = sle64(0, i_37895);
            bool y_37897 = slt64(i_37895, N_28624);
            bool bounds_check_37898 = x_37896 && y_37897;
            bool index_certs_37899;
            
            if (!bounds_check_37898) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 33) ==
                        -1) {
                        global_failure_args[0] = i_37895;
                        global_failure_args[1] = N_28624;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_37900 = ((__global
                                      float *) defunc_4_map_res_mem_44174)[gtid_37538 *
                                                                           N_28624 +
                                                                           i_37895];
            bool isnan_res_37901;
            
            isnan_res_37901 = futrts_isnan32(isnan_arg_37900);
            
            bool cond_t_res_37902 = !isnan_res_37901;
            
            cond_37893 = cond_t_res_37902;
        } else {
            cond_37893 = 0;
        }
        
        float defunc_0_f_res_37903;
        
        if (cond_37893) {
            int32_t i_37904 = add32(x_37888, index_primexp_41442);
            int64_t i_37905 = sext_i32_i64(i_37904);
            bool x_37906 = sle64(0, i_37905);
            bool y_37907 = slt64(i_37905, N_28624);
            bool bounds_check_37908 = x_37906 && y_37907;
            bool index_certs_37909;
            
            if (!bounds_check_37908) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 34) ==
                        -1) {
                        global_failure_args[0] = i_37905;
                        global_failure_args[1] = N_28624;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_37910 = ((__global
                                                 float *) defunc_4_map_res_mem_44174)[gtid_37538 *
                                                                                      N_28624 +
                                                                                      i_37905];
            
            defunc_0_f_res_37903 = defunc_0_f_res_t_res_37910;
        } else {
            defunc_0_f_res_37903 = INFINITY;
        }
        ((__global float *) mem_44342)[gtid_37538 * iota32_arg_29024 +
                                       gtid_37539] = defunc_0_f_res_37903;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37885
}
__kernel void mainMagnitudezisegmap_37602(__global int *global_failure,
                                          int64_t m_28625, __global
                                          unsigned char *mem_44320, __global
                                          unsigned char *mem_44327, __global
                                          unsigned char *mem_44329, __global
                                          unsigned char *mem_44331, __global
                                          unsigned char *mem_44334, __global
                                          unsigned char *mem_44336, __global
                                          unsigned char *mem_44338)
{
    #define segmap_group_sizze_37850 (mainMagnitudezisegmap_group_sizze_37604)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45748;
    int32_t local_tid_45749;
    int64_t group_sizze_45752;
    int32_t wave_sizze_45751;
    int32_t group_tid_45750;
    
    global_tid_45748 = get_global_id(0);
    local_tid_45749 = get_local_id(0);
    group_sizze_45752 = get_local_size(0);
    wave_sizze_45751 = LOCKSTEP_WIDTH;
    group_tid_45750 = get_group_id(0);
    
    int32_t phys_tid_37602;
    
    phys_tid_37602 = global_tid_45748;
    
    int64_t gtid_37601;
    
    gtid_37601 = sext_i32_i64(group_tid_45750) * segmap_group_sizze_37850 +
        sext_i32_i64(local_tid_45749);
    if (slt64(gtid_37601, m_28625)) {
        int32_t y_37855 = ((__global int32_t *) mem_44320)[gtid_37601];
        bool acc0_37857 = ((__global bool *) mem_44327)[gtid_37601];
        bool x_37862 = acc0_37857 && acc0_37857;
        int32_t defunc_1_op_res_f_res_37866;
        
        if (acc0_37857) {
            int32_t acc0_37858 = ((__global int32_t *) mem_44329)[gtid_37601];
            
            defunc_1_op_res_f_res_37866 = acc0_37858;
        } else {
            defunc_1_op_res_f_res_37866 = -1;
        }
        
        bool cond_37872 = y_37855 == 0;
        float defunc_0_f_res_37873;
        
        if (cond_37872) {
            defunc_0_f_res_37873 = 0.0F;
        } else {
            float acc0_37859 = ((__global float *) mem_44331)[gtid_37601];
            float i32_res_37874 = sitofp_i32_f32(y_37855);
            float defunc_0_f_res_f_res_37875 = acc0_37859 / i32_res_37874;
            
            defunc_0_f_res_37873 = defunc_0_f_res_f_res_37875;
        }
        ((__global bool *) mem_44334)[gtid_37601] = x_37862;
        ((__global int32_t *) mem_44336)[gtid_37601] =
            defunc_1_op_res_f_res_37866;
        ((__global float *) mem_44338)[gtid_37601] = defunc_0_f_res_37873;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37850
}
__kernel void mainMagnitudezisegmap_37728(__global int *global_failure,
                                          int64_t m_28625,
                                          int64_t num_groups_37751, __global
                                          unsigned char *defunc_4_map_res_mem_44173,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_44238,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_44239,
                                          __global unsigned char *mem_44318,
                                          __global unsigned char *mem_44320)
{
    #define segmap_group_sizze_37750 (mainMagnitudezisegmap_group_sizze_37730)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45586;
    int32_t local_tid_45587;
    int64_t group_sizze_45590;
    int32_t wave_sizze_45589;
    int32_t group_tid_45588;
    
    global_tid_45586 = get_global_id(0);
    local_tid_45587 = get_local_id(0);
    group_sizze_45590 = get_local_size(0);
    wave_sizze_45589 = LOCKSTEP_WIDTH;
    group_tid_45588 = get_group_id(0);
    
    int32_t phys_tid_37728;
    
    phys_tid_37728 = global_tid_45586;
    
    int32_t phys_group_id_45591;
    
    phys_group_id_45591 = get_group_id(0);
    for (int32_t i_45592 = 0; i_45592 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625, segmap_group_sizze_37750)) -
                   phys_group_id_45591, sext_i64_i32(num_groups_37751));
         i_45592++) {
        int32_t virt_group_id_45593 = phys_group_id_45591 + i_45592 *
                sext_i64_i32(num_groups_37751);
        int64_t gtid_37727 = sext_i32_i64(virt_group_id_45593) *
                segmap_group_sizze_37750 + sext_i32_i64(local_tid_45587);
        
        if (slt64(gtid_37727, m_28625)) {
            int32_t x_37757 = ((__global
                                int32_t *) defunc_4_map_res_mem_44173)[gtid_37727];
            int32_t x_37758 = ((__global
                                int32_t *) defunc_3_map_res_mem_44238)[gtid_37727];
            float x_37759 = ((__global
                              float *) defunc_3_map_res_mem_44239)[gtid_37727];
            int32_t y_37760 = sub32(x_37757, x_37758);
            float i32_res_37761 = sitofp_i32_f32(x_37758);
            float sqrt_res_37762;
            
            sqrt_res_37762 = futrts_sqrt32(i32_res_37761);
            
            float y_37763 = x_37759 * sqrt_res_37762;
            
            ((__global float *) mem_44318)[gtid_37727] = y_37763;
            ((__global int32_t *) mem_44320)[gtid_37727] = y_37760;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37750
}
__kernel void mainMagnitudezisegmap_intragroup_34828(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43560_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43550_backing_aligned_1,
                                                     int32_t k2p2zq_28642,
                                                     int64_t i32_res_28644,
                                                     int32_t m_28775,
                                                     int64_t i32_res_28777,
                                                     int64_t i32_res_28792,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43546,
                                                     __global
                                                     unsigned char *mem_43570)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43560_backing_1 = (__local volatile
                                                           char *) mem_43560_backing_aligned_0;
    __local volatile char *restrict mem_43550_backing_0 = (__local volatile
                                                           char *) mem_43550_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44772;
    int32_t local_tid_44773;
    int64_t group_sizze_44776;
    int32_t wave_sizze_44775;
    int32_t group_tid_44774;
    
    global_tid_44772 = get_global_id(0);
    local_tid_44773 = get_local_id(0);
    group_sizze_44776 = get_local_size(0);
    wave_sizze_44775 = LOCKSTEP_WIDTH;
    group_tid_44774 = get_group_id(0);
    
    int32_t phys_tid_34828;
    
    phys_tid_34828 = group_tid_44774;
    
    int32_t ltid_pre_44777;
    
    ltid_pre_44777 = local_tid_44773;
    
    int64_t gtid_34783;
    
    gtid_34783 = sext_i32_i64(group_tid_44774);
    
    __local char *mem_43550;
    
    mem_43550 = (__local char *) mem_43550_backing_0;
    
    int64_t gtid_34786 = sext_i32_i64(ltid_pre_44777);
    int32_t phys_tid_34787 = local_tid_44773;
    int32_t index_primexp_41386 = sext_i64_i32(gtid_34786);
    int32_t defunc_0_f_res_34953 = sdiv32(index_primexp_41386, m_28775);
    int32_t defunc_0_f_res_34954 = smod32(index_primexp_41386, m_28775);
    bool cond_34955 = slt32(defunc_0_f_res_34954, k2p2zq_28642);
    float defunc_0_f_res_34956;
    
    if (cond_34955) {
        int64_t i_34957 = sext_i32_i64(defunc_0_f_res_34953);
        int64_t j_34958 = sext_i32_i64(defunc_0_f_res_34954);
        float defunc_0_f_res_t_res_34959 = ((__global
                                             float *) defunc_3_map_res_mem_43546)[gtid_34783 *
                                                                                  (i32_res_28644 *
                                                                                   i32_res_28644) +
                                                                                  i_34957 *
                                                                                  i32_res_28644 +
                                                                                  j_34958];
        
        defunc_0_f_res_34956 = defunc_0_f_res_t_res_34959;
    } else {
        int32_t y_34960 = add32(k2p2zq_28642, defunc_0_f_res_34953);
        bool cond_34961 = defunc_0_f_res_34954 == y_34960;
        float defunc_0_f_res_f_res_34962;
        
        if (cond_34961) {
            defunc_0_f_res_f_res_34962 = 1.0F;
        } else {
            defunc_0_f_res_f_res_34962 = 0.0F;
        }
        defunc_0_f_res_34956 = defunc_0_f_res_f_res_34962;
    }
    ((__local float *) mem_43550)[gtid_34786] = defunc_0_f_res_34956;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43560;
    
    mem_43560 = (__local char *) mem_43560_backing_1;
    for (int32_t i_34964 = 0; i_34964 < k2p2zq_28642; i_34964++) {
        int64_t i32_res_34966 = sext_i32_i64(i_34964);
        float v1_34967 = ((__local float *) mem_43550)[i32_res_34966];
        bool cond_34968 = v1_34967 == 0.0F;
        int64_t gtid_34799 = sext_i32_i64(ltid_pre_44777);
        int32_t phys_tid_34800 = local_tid_44773;
        int32_t defunc_0_f_res_34971 = sext_i64_i32(gtid_34799);
        int32_t defunc_0_f_res_34972 = sdiv32(defunc_0_f_res_34971, m_28775);
        int32_t defunc_0_f_res_34973 = smod32(defunc_0_f_res_34971, m_28775);
        float defunc_0_f_res_34974;
        
        if (cond_34968) {
            int32_t x_34975 = mul32(m_28775, defunc_0_f_res_34972);
            int32_t i32_arg_34976 = add32(defunc_0_f_res_34973, x_34975);
            int64_t i32_res_34977 = sext_i32_i64(i32_arg_34976);
            float defunc_0_f_res_t_res_34978 = ((__local
                                                 float *) mem_43550)[i32_res_34977];
            
            defunc_0_f_res_34974 = defunc_0_f_res_t_res_34978;
        } else {
            int64_t i32_res_34979 = sext_i32_i64(defunc_0_f_res_34973);
            float x_34980 = ((__local float *) mem_43550)[i32_res_34979];
            float x_34981 = x_34980 / v1_34967;
            int32_t y_34982 = sub32(k2p2zq_28642, 1);
            bool cond_34983 = slt32(defunc_0_f_res_34972, y_34982);
            float defunc_0_f_res_f_res_34984;
            
            if (cond_34983) {
                int32_t x_34985 = add32(1, defunc_0_f_res_34972);
                int32_t x_34986 = mul32(m_28775, x_34985);
                int32_t i32_arg_34987 = add32(defunc_0_f_res_34973, x_34986);
                int64_t i32_res_34988 = sext_i32_i64(i32_arg_34987);
                float x_34989 = ((__local float *) mem_43550)[i32_res_34988];
                int32_t i32_arg_34990 = add32(i_34964, x_34986);
                int64_t i32_res_34991 = sext_i32_i64(i32_arg_34990);
                float x_34992 = ((__local float *) mem_43550)[i32_res_34991];
                float y_34993 = x_34981 * x_34992;
                float defunc_0_f_res_f_res_t_res_34994 = x_34989 - y_34993;
                
                defunc_0_f_res_f_res_34984 = defunc_0_f_res_f_res_t_res_34994;
            } else {
                defunc_0_f_res_f_res_34984 = x_34981;
            }
            defunc_0_f_res_34974 = defunc_0_f_res_f_res_34984;
        }
        ((__local float *) mem_43560)[gtid_34799] = defunc_0_f_res_34974;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_34826 = sext_i32_i64(ltid_pre_44777);
        int32_t phys_tid_34827 = local_tid_44773;
        float write_value_34997 = ((__local float *) mem_43560)[write_i_34826];
        
        if (sle64(0, write_i_34826) && slt64(write_i_34826, i32_res_28777)) {
            ((__local float *) mem_43550)[write_i_34826] = write_value_34997;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44779 = 0; i_44779 < sdiv_up64(i32_res_28644 *
                                                  i32_res_28644 -
                                                  sext_i32_i64(local_tid_44773),
                                                  i32_res_28777); i_44779++) {
        ((__global float *) mem_43570)[gtid_34783 * (i32_res_28644 *
                                                     i32_res_28644) +
                                       squot64(i_44779 * i32_res_28777 +
                                               sext_i32_i64(local_tid_44773),
                                               i32_res_28644) * i32_res_28644 +
                                       (i_44779 * i32_res_28777 +
                                        sext_i32_i64(local_tid_44773) -
                                        squot64(i_44779 * i32_res_28777 +
                                                sext_i32_i64(local_tid_44773),
                                                i32_res_28644) *
                                        i32_res_28644)] = ((__local
                                                            float *) mem_43550)[i32_res_28644 +
                                                                                (squot64(i_44779 *
                                                                                         i32_res_28777 +
                                                                                         sext_i32_i64(local_tid_44773),
                                                                                         i32_res_28644) *
                                                                                 i32_res_28792 +
                                                                                 (i_44779 *
                                                                                  i32_res_28777 +
                                                                                  sext_i32_i64(local_tid_44773) -
                                                                                  squot64(i_44779 *
                                                                                          i32_res_28777 +
                                                                                          sext_i32_i64(local_tid_44773),
                                                                                          i32_res_28644) *
                                                                                  i32_res_28644))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35055(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43591_backing_aligned_0,
                                                     int64_t m_28625,
                                                     int32_t k2p2zq_28642,
                                                     int32_t m_28775,
                                                     int64_t i32_res_28777,
                                                     int32_t i_35450,
                                                     int64_t i32_res_35452,
                                                     int64_t ctx_param_ext_43577,
                                                     int64_t ctx_param_ext_43578,
                                                     int64_t ctx_param_ext_43580,
                                                     __global
                                                     unsigned char *mem_param_43582,
                                                     __global
                                                     unsigned char *mem_43587,
                                                     __global
                                                     unsigned char *mem_43595)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43591_backing_0 = (__local volatile
                                                           char *) mem_43591_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44806;
    int32_t local_tid_44807;
    int64_t group_sizze_44810;
    int32_t wave_sizze_44809;
    int32_t group_tid_44808;
    
    global_tid_44806 = get_global_id(0);
    local_tid_44807 = get_local_id(0);
    group_sizze_44810 = get_local_size(0);
    wave_sizze_44809 = LOCKSTEP_WIDTH;
    group_tid_44808 = get_group_id(0);
    
    int32_t phys_tid_35055;
    
    phys_tid_35055 = group_tid_44808;
    
    int32_t ltid_pre_44811;
    
    ltid_pre_44811 = local_tid_44807;
    
    int64_t gtid_35023;
    
    gtid_35023 = sext_i32_i64(group_tid_44808);
    
    float v1_35465 = ((__global float *) mem_param_43582)[ctx_param_ext_43577 +
                                                          (gtid_35023 *
                                                           ctx_param_ext_43578 +
                                                           i32_res_35452 *
                                                           ctx_param_ext_43580)];
    bool cond_35466 = v1_35465 == 0.0F;
    __local char *mem_43591;
    
    mem_43591 = (__local char *) mem_43591_backing_0;
    
    int64_t gtid_35026 = sext_i32_i64(ltid_pre_44811);
    int32_t phys_tid_35027 = local_tid_44807;
    int32_t defunc_0_f_res_35469 = sext_i64_i32(gtid_35026);
    int32_t defunc_0_f_res_35470 = sdiv32(defunc_0_f_res_35469, m_28775);
    int32_t defunc_0_f_res_35471 = smod32(defunc_0_f_res_35469, m_28775);
    float defunc_0_f_res_35472;
    
    if (cond_35466) {
        int32_t x_35473 = mul32(m_28775, defunc_0_f_res_35470);
        int32_t i32_arg_35474 = add32(defunc_0_f_res_35471, x_35473);
        int64_t i32_res_35475 = sext_i32_i64(i32_arg_35474);
        float defunc_0_f_res_t_res_35476 = ((__global
                                             float *) mem_param_43582)[ctx_param_ext_43577 +
                                                                       (gtid_35023 *
                                                                        ctx_param_ext_43578 +
                                                                        i32_res_35475 *
                                                                        ctx_param_ext_43580)];
        
        defunc_0_f_res_35472 = defunc_0_f_res_t_res_35476;
    } else {
        int64_t i32_res_35477 = sext_i32_i64(defunc_0_f_res_35471);
        float x_35478 = ((__global
                          float *) mem_param_43582)[ctx_param_ext_43577 +
                                                    (gtid_35023 *
                                                     ctx_param_ext_43578 +
                                                     i32_res_35477 *
                                                     ctx_param_ext_43580)];
        float x_35479 = x_35478 / v1_35465;
        int32_t y_35480 = sub32(k2p2zq_28642, 1);
        bool cond_35481 = slt32(defunc_0_f_res_35470, y_35480);
        float defunc_0_f_res_f_res_35482;
        
        if (cond_35481) {
            int32_t x_35483 = add32(1, defunc_0_f_res_35470);
            int32_t x_35484 = mul32(m_28775, x_35483);
            int32_t i32_arg_35485 = add32(defunc_0_f_res_35471, x_35484);
            int64_t i32_res_35486 = sext_i32_i64(i32_arg_35485);
            float x_35487 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_35023 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_35486 *
                                                         ctx_param_ext_43580)];
            int32_t i32_arg_35488 = add32(i_35450, x_35484);
            int64_t i32_res_35489 = sext_i32_i64(i32_arg_35488);
            float x_35490 = ((__global
                              float *) mem_param_43582)[ctx_param_ext_43577 +
                                                        (gtid_35023 *
                                                         ctx_param_ext_43578 +
                                                         i32_res_35489 *
                                                         ctx_param_ext_43580)];
            float y_35491 = x_35479 * x_35490;
            float defunc_0_f_res_f_res_t_res_35492 = x_35487 - y_35491;
            
            defunc_0_f_res_f_res_35482 = defunc_0_f_res_f_res_t_res_35492;
        } else {
            defunc_0_f_res_f_res_35482 = x_35479;
        }
        defunc_0_f_res_35472 = defunc_0_f_res_f_res_35482;
    }
    ((__local float *) mem_43591)[gtid_35026] = defunc_0_f_res_35472;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35053 = sext_i32_i64(ltid_pre_44811);
    int32_t phys_tid_35054 = local_tid_44807;
    float write_value_35495 = ((__local float *) mem_43591)[write_i_35053];
    
    if (sle64(0, write_i_35053) && slt64(write_i_35053, i32_res_28777)) {
        ((__global float *) mem_43587)[gtid_35023 + write_i_35053 * m_28625] =
            write_value_35495;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44807 == 0) {
        for (int64_t i_44812 = 0; i_44812 < i32_res_28777; i_44812++) {
            ((__global float *) mem_43595)[gtid_35023 * i32_res_28777 +
                                           i_44812] = ((__global
                                                        float *) mem_43587)[gtid_35023 +
                                                                            i_44812 *
                                                                            m_28625];
        }
    }
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36006(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44152_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44150_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *mem_44148_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_44146_backing_aligned_3,
                                                     int64_t N_28624,
                                                     int64_t N_28626,
                                                     int64_t i_28904, __global
                                                     unsigned char *images_mem_43378,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44136,
                                                     __global
                                                     unsigned char *mem_44155,
                                                     __global
                                                     unsigned char *mem_44158,
                                                     __global
                                                     unsigned char *mem_44161)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44152_backing_3 = (__local volatile
                                                           char *) mem_44152_backing_aligned_0;
    __local volatile char *restrict mem_44150_backing_2 = (__local volatile
                                                           char *) mem_44150_backing_aligned_1;
    __local volatile char *restrict mem_44148_backing_1 = (__local volatile
                                                           char *) mem_44148_backing_aligned_2;
    __local volatile char *restrict mem_44146_backing_0 = (__local volatile
                                                           char *) mem_44146_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45206;
    int32_t local_tid_45207;
    int64_t group_sizze_45210;
    int32_t wave_sizze_45209;
    int32_t group_tid_45208;
    
    global_tid_45206 = get_global_id(0);
    local_tid_45207 = get_local_id(0);
    group_sizze_45210 = get_local_size(0);
    wave_sizze_45209 = LOCKSTEP_WIDTH;
    group_tid_45208 = get_group_id(0);
    
    int32_t phys_tid_36006;
    
    phys_tid_36006 = group_tid_45208;
    
    int32_t ltid_pre_45211;
    
    ltid_pre_45211 = local_tid_45207;
    
    int64_t gtid_35999;
    
    gtid_35999 = sext_i32_i64(group_tid_45208);
    
    __local char *mem_44146;
    
    mem_44146 = (__local char *) mem_44146_backing_0;
    
    __local char *mem_44148;
    
    mem_44148 = (__local char *) mem_44148_backing_1;
    
    int64_t gtid_36002 = sext_i32_i64(ltid_pre_45211);
    int32_t phys_tid_36003 = local_tid_45207;
    float x_36095 = ((__global float *) images_mem_43378)[gtid_35999 * N_28626 +
                                                          gtid_36002];
    bool isnan_res_36097;
    
    isnan_res_36097 = futrts_isnan32(x_36095);
    
    bool cond_36098 = !isnan_res_36097;
    float defunc_0_f_res_36099;
    
    if (cond_36098) {
        float x_36096 = ((__global
                          float *) defunc_3_map_res_mem_44136)[gtid_35999 *
                                                               N_28624 +
                                                               gtid_36002];
        float defunc_0_f_res_t_res_36100 = x_36095 - x_36096;
        
        defunc_0_f_res_36099 = defunc_0_f_res_t_res_36100;
    } else {
        defunc_0_f_res_36099 = NAN;
    }
    
    bool isnan_res_36101;
    
    isnan_res_36101 = futrts_isnan32(defunc_0_f_res_36099);
    
    bool defunc_0_p_res_36102 = !isnan_res_36101;
    int64_t defunc_0_f_res_36103 = btoi_bool_i64(defunc_0_p_res_36102);
    
    ((__local int64_t *) mem_44146)[gtid_36002] = defunc_0_f_res_36103;
    ((__local float *) mem_44148)[gtid_36002] = defunc_0_f_res_36099;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45212;
    
    dims_flat_45212 = N_28624;
    
    int64_t x_36092;
    int64_t x_36093;
    int64_t x_45214;
    int64_t x_45215;
    bool ltid_in_bounds_45217;
    
    ltid_in_bounds_45217 = slt64(sext_i32_i64(local_tid_45207), N_28624);
    
    int32_t skip_threads_45218;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45217) {
            x_36093 = ((volatile __local
                        int64_t *) mem_44146)[sext_i32_i64(local_tid_45207)];
            if ((local_tid_45207 - squot32(local_tid_45207, 32) * 32) == 0) {
                x_36092 = x_36093;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45218 = 1;
        while (slt32(skip_threads_45218, 32)) {
            if (sle32(skip_threads_45218, local_tid_45207 -
                      squot32(local_tid_45207, 32) * 32) &&
                ltid_in_bounds_45217) {
                // read operands
                {
                    x_36092 = ((volatile __local
                                int64_t *) mem_44146)[sext_i32_i64(local_tid_45207) -
                                                      sext_i32_i64(skip_threads_45218)];
                }
                // perform operation
                {
                    bool inactive_45219 =
                         slt64(srem64(sext_i32_i64(local_tid_45207), N_28624),
                               sext_i32_i64(local_tid_45207) -
                               sext_i32_i64(local_tid_45207 -
                               skip_threads_45218));
                    
                    if (inactive_45219) {
                        x_36092 = x_36093;
                    }
                    if (!inactive_45219) {
                        int64_t defunc_1_op_res_36094 = add64(x_36092, x_36093);
                        
                        x_36092 = defunc_1_op_res_36094;
                    }
                }
            }
            if (sle32(wave_sizze_45209, skip_threads_45218)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45218, local_tid_45207 -
                      squot32(local_tid_45207, 32) * 32) &&
                ltid_in_bounds_45217) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44146)[sext_i32_i64(local_tid_45207)] =
                        x_36092;
                    x_36093 = x_36092;
                }
            }
            if (sle32(wave_sizze_45209, skip_threads_45218)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45218 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45207 - squot32(local_tid_45207, 32) * 32) == 31 &&
            ltid_in_bounds_45217) {
            ((volatile __local
              int64_t *) mem_44146)[sext_i32_i64(squot32(local_tid_45207,
                                                         32))] = x_36092;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45220;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45207, 32) == 0 && ltid_in_bounds_45217) {
                x_45215 = ((volatile __local
                            int64_t *) mem_44146)[sext_i32_i64(local_tid_45207)];
                if ((local_tid_45207 - squot32(local_tid_45207, 32) * 32) ==
                    0) {
                    x_45214 = x_45215;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45220 = 1;
            while (slt32(skip_threads_45220, 32)) {
                if (sle32(skip_threads_45220, local_tid_45207 -
                          squot32(local_tid_45207, 32) * 32) &&
                    (squot32(local_tid_45207, 32) == 0 &&
                     ltid_in_bounds_45217)) {
                    // read operands
                    {
                        x_45214 = ((volatile __local
                                    int64_t *) mem_44146)[sext_i32_i64(local_tid_45207) -
                                                          sext_i32_i64(skip_threads_45220)];
                    }
                    // perform operation
                    {
                        bool inactive_45221 =
                             slt64(srem64(sext_i32_i64(local_tid_45207 * 32 +
                                          32 - 1), N_28624),
                                   sext_i32_i64(local_tid_45207 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45207 -
                                                 skip_threads_45220) * 32 + 32 -
                                   1));
                        
                        if (inactive_45221) {
                            x_45214 = x_45215;
                        }
                        if (!inactive_45221) {
                            int64_t defunc_1_op_res_45216 = add64(x_45214,
                                                                  x_45215);
                            
                            x_45214 = defunc_1_op_res_45216;
                        }
                    }
                }
                if (sle32(wave_sizze_45209, skip_threads_45220)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45220, local_tid_45207 -
                          squot32(local_tid_45207, 32) * 32) &&
                    (squot32(local_tid_45207, 32) == 0 &&
                     ltid_in_bounds_45217)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44146)[sext_i32_i64(local_tid_45207)] =
                            x_45214;
                        x_45215 = x_45214;
                    }
                }
                if (sle32(wave_sizze_45209, skip_threads_45220)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45220 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45207, 32) == 0 || !ltid_in_bounds_45217)) {
            // read operands
            {
                x_36093 = x_36092;
                x_36092 = ((__local
                            int64_t *) mem_44146)[sext_i32_i64(squot32(local_tid_45207,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45222 =
                     slt64(srem64(sext_i32_i64(local_tid_45207), N_28624),
                           sext_i32_i64(local_tid_45207) -
                           sext_i32_i64(squot32(local_tid_45207, 32) * 32 - 1));
                
                if (inactive_45222) {
                    x_36092 = x_36093;
                }
                if (!inactive_45222) {
                    int64_t defunc_1_op_res_36094 = add64(x_36092, x_36093);
                    
                    x_36092 = defunc_1_op_res_36094;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44146)[sext_i32_i64(local_tid_45207)] =
                    x_36092;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45207, 32) == 0) {
            ((__local int64_t *) mem_44146)[sext_i32_i64(local_tid_45207)] =
                x_36093;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_36104 = ((__local int64_t *) mem_44146)[i_28904];
    int32_t defunc_0_f_res_36105 = sext_i64_i32(last_res_36104);
    __local char *mem_44150;
    
    mem_44150 = (__local char *) mem_44150_backing_2;
    ((__local float *) mem_44150)[sext_i32_i64(local_tid_45207)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44152;
    
    mem_44152 = (__local char *) mem_44152_backing_3;
    ((__local int32_t *) mem_44152)[sext_i32_i64(local_tid_45207)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_36004 = sext_i32_i64(ltid_pre_45211);
    int32_t phys_tid_36005 = local_tid_45207;
    float x_36110 = ((__local float *) mem_44148)[write_i_36004];
    int32_t index_primexp_41406 = sext_i64_i32(write_i_36004);
    bool isnan_res_36113;
    
    isnan_res_36113 = futrts_isnan32(x_36110);
    
    bool defunc_0_p_res_36114 = !isnan_res_36113;
    int64_t defunc_1_f_res_36115;
    
    if (defunc_0_p_res_36114) {
        int64_t x_36111 = ((__local int64_t *) mem_44146)[write_i_36004];
        int64_t defunc_1_f_res_t_res_36116 = sub64(x_36111, 1);
        
        defunc_1_f_res_36115 = defunc_1_f_res_t_res_36116;
    } else {
        defunc_1_f_res_36115 = -1;
    }
    if (sle64(0, defunc_1_f_res_36115) && slt64(defunc_1_f_res_36115,
                                                N_28624)) {
        ((__local int32_t *) mem_44152)[defunc_1_f_res_36115] =
            index_primexp_41406;
    }
    if (sle64(0, defunc_1_f_res_36115) && slt64(defunc_1_f_res_36115,
                                                N_28624)) {
        ((__local float *) mem_44150)[defunc_1_f_res_36115] = x_36110;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45207 == 0) {
        ((__global int32_t *) mem_44155)[gtid_35999] = defunc_0_f_res_36105;
    }
    ((__global float *) mem_44158)[gtid_35999 * N_28624 +
                                   sext_i32_i64(local_tid_45207)] = ((__local
                                                                      float *) mem_44150)[sext_i32_i64(local_tid_45207)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_44161)[gtid_35999 * N_28624 +
                                     sext_i32_i64(local_tid_45207)] = ((__local
                                                                        int32_t *) mem_44152)[sext_i32_i64(local_tid_45207)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36346(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45315_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45311_backing_aligned_1,
                                                     int64_t N_28624,
                                                     int64_t N_28626,
                                                     float hfrac_28631,
                                                     int64_t i32_res_28638,
                                                     int32_t k2p2_28640,
                                                     __global
                                                     unsigned char *images_mem_43378,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_44174,
                                                     __global
                                                     unsigned char *mem_44218,
                                                     __global
                                                     unsigned char *mem_44220,
                                                     __global
                                                     unsigned char *mem_44222)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45315_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45315_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45311_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45311_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45305;
    int32_t local_tid_45306;
    int64_t group_sizze_45309;
    int32_t wave_sizze_45308;
    int32_t group_tid_45307;
    
    global_tid_45305 = get_global_id(0);
    local_tid_45306 = get_local_id(0);
    group_sizze_45309 = get_local_size(0);
    wave_sizze_45308 = LOCKSTEP_WIDTH;
    group_tid_45307 = get_group_id(0);
    
    int32_t phys_tid_36346;
    
    phys_tid_36346 = group_tid_45307;
    
    int32_t ltid_pre_45310;
    
    ltid_pre_45310 = local_tid_45306;
    
    int64_t gtid_36339;
    
    gtid_36339 = sext_i32_i64(group_tid_45307);
    
    int32_t defunc_0_f_res_36423;
    int64_t gtid_36342 = sext_i32_i64(ltid_pre_45310);
    int32_t phys_tid_36343 = local_tid_45306;
    __local char *red_arr_mem_45311;
    
    red_arr_mem_45311 = (__local char *) red_arr_mem_45311_backing_0;
    
    float x_36427;
    
    x_36427 = ((__global float *) images_mem_43378)[gtid_36339 * N_28626 +
                                                    gtid_36342];
    
    bool isnan_res_36428;
    
    isnan_res_36428 = futrts_isnan32(x_36427);
    
    bool cond_36429 = !isnan_res_36428;
    int32_t defunc_0_f_res_36430 = btoi_bool_i32(cond_36429);
    
    ((__local int32_t *) red_arr_mem_45311)[gtid_36342] = defunc_0_f_res_36430;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45313;
    int32_t skip_waves_45314;
    
    skip_waves_45314 = 1;
    
    int32_t x_36424;
    int32_t x_36425;
    
    offset_45313 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45306, sext_i64_i32(i32_res_28638))) {
            x_36424 = ((__local
                        int32_t *) red_arr_mem_45311)[sext_i32_i64(local_tid_45306 +
                                                      offset_45313)];
        }
    }
    offset_45313 = 1;
    while (slt32(offset_45313, wave_sizze_45308)) {
        if (slt32(local_tid_45306 + offset_45313,
                  sext_i64_i32(i32_res_28638)) && ((local_tid_45306 -
                                                    squot32(local_tid_45306,
                                                            wave_sizze_45308) *
                                                    wave_sizze_45308) & (2 *
                                                                         offset_45313 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_36425 = ((volatile __local
                            int32_t *) red_arr_mem_45311)[sext_i32_i64(local_tid_45306 +
                                                          offset_45313)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_36426 = add32(x_36424, x_36425);
                
                x_36424 = defunc_1_op_res_36426;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45311)[sext_i32_i64(local_tid_45306)] =
                    x_36424;
            }
        }
        offset_45313 *= 2;
    }
    while (slt32(skip_waves_45314, squot32(sext_i64_i32(i32_res_28638) +
                                           wave_sizze_45308 - 1,
                                           wave_sizze_45308))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45313 = skip_waves_45314 * wave_sizze_45308;
        if (slt32(local_tid_45306 + offset_45313,
                  sext_i64_i32(i32_res_28638)) && ((local_tid_45306 -
                                                    squot32(local_tid_45306,
                                                            wave_sizze_45308) *
                                                    wave_sizze_45308) == 0 &&
                                                   (squot32(local_tid_45306,
                                                            wave_sizze_45308) &
                                                    (2 * skip_waves_45314 -
                                                     1)) == 0)) {
            // read array element
            {
                x_36425 = ((__local
                            int32_t *) red_arr_mem_45311)[sext_i32_i64(local_tid_45306 +
                                                          offset_45313)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_36426 = add32(x_36424, x_36425);
                
                x_36424 = defunc_1_op_res_36426;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45311)[sext_i32_i64(local_tid_45306)] =
                    x_36424;
            }
        }
        skip_waves_45314 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_36423 = ((__local int32_t *) red_arr_mem_45311)[0];
    
    float defunc_0_f_res_36431;
    int64_t gtid_36344 = sext_i32_i64(ltid_pre_45310);
    int32_t phys_tid_36345 = local_tid_45306;
    __local char *red_arr_mem_45315;
    
    red_arr_mem_45315 = (__local char *) red_arr_mem_45315_backing_1;
    
    int32_t index_primexp_41414;
    
    index_primexp_41414 = sext_i64_i32(gtid_36344);
    
    bool cond_36436 = slt32(index_primexp_41414, defunc_0_f_res_36423);
    float defunc_0_f_res_36437;
    
    if (cond_36436) {
        int64_t i_36438 = sext_i32_i64(index_primexp_41414);
        float defunc_0_f_res_t_res_36439 = ((__global
                                             float *) defunc_4_map_res_mem_44174)[gtid_36339 *
                                                                                  N_28624 +
                                                                                  i_36438];
        
        defunc_0_f_res_36437 = defunc_0_f_res_t_res_36439;
    } else {
        defunc_0_f_res_36437 = 0.0F;
    }
    
    float defunc_0_f_res_36440 = defunc_0_f_res_36437 * defunc_0_f_res_36437;
    
    ((__local float *) red_arr_mem_45315)[gtid_36344] = defunc_0_f_res_36440;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45317;
    int32_t skip_waves_45318;
    
    skip_waves_45318 = 1;
    
    float x_36432;
    float x_36433;
    
    offset_45317 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45306, sext_i64_i32(i32_res_28638))) {
            x_36432 = ((__local
                        float *) red_arr_mem_45315)[sext_i32_i64(local_tid_45306 +
                                                    offset_45317)];
        }
    }
    offset_45317 = 1;
    while (slt32(offset_45317, wave_sizze_45308)) {
        if (slt32(local_tid_45306 + offset_45317,
                  sext_i64_i32(i32_res_28638)) && ((local_tid_45306 -
                                                    squot32(local_tid_45306,
                                                            wave_sizze_45308) *
                                                    wave_sizze_45308) & (2 *
                                                                         offset_45317 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_36433 = ((volatile __local
                            float *) red_arr_mem_45315)[sext_i32_i64(local_tid_45306 +
                                                        offset_45317)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36434 = x_36432 + x_36433;
                
                x_36432 = defunc_1_op_res_36434;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45315)[sext_i32_i64(local_tid_45306)] =
                    x_36432;
            }
        }
        offset_45317 *= 2;
    }
    while (slt32(skip_waves_45318, squot32(sext_i64_i32(i32_res_28638) +
                                           wave_sizze_45308 - 1,
                                           wave_sizze_45308))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45317 = skip_waves_45318 * wave_sizze_45308;
        if (slt32(local_tid_45306 + offset_45317,
                  sext_i64_i32(i32_res_28638)) && ((local_tid_45306 -
                                                    squot32(local_tid_45306,
                                                            wave_sizze_45308) *
                                                    wave_sizze_45308) == 0 &&
                                                   (squot32(local_tid_45306,
                                                            wave_sizze_45308) &
                                                    (2 * skip_waves_45318 -
                                                     1)) == 0)) {
            // read array element
            {
                x_36433 = ((__local
                            float *) red_arr_mem_45315)[sext_i32_i64(local_tid_45306 +
                                                        offset_45317)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36434 = x_36432 + x_36433;
                
                x_36432 = defunc_1_op_res_36434;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45315)[sext_i32_i64(local_tid_45306)] =
                    x_36432;
            }
        }
        skip_waves_45318 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_36431 = ((__local float *) red_arr_mem_45315)[0];
    
    int32_t r32_arg_36441 = sub32(defunc_0_f_res_36423, k2p2_28640);
    float i32_res_36442 = sitofp_i32_f32(r32_arg_36441);
    float sqrt_arg_36443 = defunc_0_f_res_36431 / i32_res_36442;
    float sqrt_res_36444;
    
    sqrt_res_36444 = futrts_sqrt32(sqrt_arg_36443);
    
    float i32_res_36445 = sitofp_i32_f32(defunc_0_f_res_36423);
    float t32_arg_36446 = hfrac_28631 * i32_res_36445;
    int32_t f32_res_36447 = fptosi_f32_i32(t32_arg_36446);
    
    if (local_tid_45306 == 0) {
        ((__global int32_t *) mem_44218)[gtid_36339] = f32_res_36447;
    }
    if (local_tid_45306 == 0) {
        ((__global int32_t *) mem_44220)[gtid_36339] = defunc_0_f_res_36423;
    }
    if (local_tid_45306 == 0) {
        ((__global float *) mem_44222)[gtid_36339] = sqrt_res_36444;
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36788(__global
                                                     int *global_failure,
                                                     int failure_is_an_option,
                                                     __global
                                                     int64_t *global_failure_args,
                                                     __local volatile
                                                     int64_t *mem_44287_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44285_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45578_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45576_backing_aligned_3,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45574_backing_aligned_4,
                                                     __local volatile
                                                     int64_t *mem_44281_backing_aligned_5,
                                                     int64_t N_28624,
                                                     int32_t n_28629,
                                                     int64_t iota32_arg_29024,
                                                     int64_t distance_29056,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_44173,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_44174,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_44175,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44237,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44238,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44239,
                                                     __global
                                                     unsigned char *defunc_0_f_res_mem_44272,
                                                     __global
                                                     unsigned char *mem_44277,
                                                     __global
                                                     unsigned char *mem_44311,
                                                     __global
                                                     unsigned char *mem_44313,
                                                     __global
                                                     unsigned char *mem_44315)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44287_backing_5 = (__local volatile
                                                           char *) mem_44287_backing_aligned_0;
    __local volatile char *restrict mem_44285_backing_4 = (__local volatile
                                                           char *) mem_44285_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45578_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45578_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45576_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45576_backing_aligned_3;
    __local volatile char *restrict red_arr_mem_45574_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45574_backing_aligned_4;
    __local volatile char *restrict mem_44281_backing_0 = (__local volatile
                                                           char *) mem_44281_backing_aligned_5;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45557;
    int32_t local_tid_45558;
    int64_t group_sizze_45561;
    int32_t wave_sizze_45560;
    int32_t group_tid_45559;
    
    global_tid_45557 = get_global_id(0);
    local_tid_45558 = get_local_id(0);
    group_sizze_45561 = get_local_size(0);
    wave_sizze_45560 = LOCKSTEP_WIDTH;
    group_tid_45559 = get_group_id(0);
    
    int32_t phys_tid_36788;
    
    phys_tid_36788 = group_tid_45559;
    
    int32_t ltid_pre_45562;
    
    ltid_pre_45562 = local_tid_45558;
    
    int64_t gtid_36759;
    
    gtid_36759 = sext_i32_i64(group_tid_45559);
    
    int32_t x_37201;
    
    x_37201 = ((__global int32_t *) defunc_4_map_res_mem_44173)[gtid_36759];
    
    int32_t x_37202 = ((__global
                        int32_t *) defunc_3_map_res_mem_44238)[gtid_36759];
    float x_37203 = ((__global float *) defunc_3_map_res_mem_44239)[gtid_36759];
    int32_t x_37204 = ((__global
                        int32_t *) defunc_3_map_res_mem_44237)[gtid_36759];
    float x_37205 = ((__global float *) defunc_0_f_res_mem_44272)[gtid_36759];
    int32_t y_37208 = sub32(x_37201, x_37202);
    float i32_res_37209 = sitofp_i32_f32(x_37202);
    float sqrt_res_37210;
    
    sqrt_res_37210 = futrts_sqrt32(i32_res_37209);
    
    float y_37211 = x_37203 * sqrt_res_37210;
    __local char *mem_44281;
    
    mem_44281 = (__local char *) mem_44281_backing_0;
    
    int64_t gtid_36762 = sext_i32_i64(ltid_pre_45562);
    int32_t phys_tid_36763 = local_tid_45558;
    int32_t index_primexp_41427 = sext_i64_i32(gtid_36762);
    bool cond_37224 = sle32(y_37208, index_primexp_41427);
    float defunc_0_f_res_37225;
    
    if (cond_37224) {
        defunc_0_f_res_37225 = 0.0F;
    } else {
        bool cond_37226 = index_primexp_41427 == 0;
        float defunc_0_f_res_f_res_37227;
        
        if (cond_37226) {
            defunc_0_f_res_f_res_37227 = x_37205;
        } else {
            int32_t i_37228 = add32(x_37202, index_primexp_41427);
            int64_t i_37229 = sext_i32_i64(i_37228);
            float x_37230 = ((__global
                              float *) defunc_4_map_res_mem_44174)[gtid_36759 *
                                                                   N_28624 +
                                                                   i_37229];
            int32_t x_37231 = sub32(x_37202, x_37204);
            int32_t i_37232 = add32(x_37231, index_primexp_41427);
            int64_t i_37233 = sext_i32_i64(i_37232);
            float y_37234 = ((__global
                              float *) defunc_4_map_res_mem_44174)[gtid_36759 *
                                                                   N_28624 +
                                                                   i_37233];
            float defunc_0_f_res_f_res_f_res_37235 = x_37230 - y_37234;
            
            defunc_0_f_res_f_res_37227 = defunc_0_f_res_f_res_f_res_37235;
        }
        defunc_0_f_res_37225 = defunc_0_f_res_f_res_37227;
    }
    ((__local float *) mem_44281)[gtid_36762] = defunc_0_f_res_37225;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45563;
    
    dims_flat_45563 = iota32_arg_29024;
    
    float x_37220;
    float x_37221;
    float x_45565;
    float x_45566;
    bool ltid_in_bounds_45568;
    
    ltid_in_bounds_45568 = slt64(sext_i32_i64(local_tid_45558),
                                 iota32_arg_29024);
    
    int32_t skip_threads_45569;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45568) {
            x_37221 = ((volatile __local
                        float *) mem_44281)[sext_i32_i64(local_tid_45558)];
            if ((local_tid_45558 - squot32(local_tid_45558, 32) * 32) == 0) {
                x_37220 = x_37221;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45569 = 1;
        while (slt32(skip_threads_45569, 32)) {
            if (sle32(skip_threads_45569, local_tid_45558 -
                      squot32(local_tid_45558, 32) * 32) &&
                ltid_in_bounds_45568) {
                // read operands
                {
                    x_37220 = ((volatile __local
                                float *) mem_44281)[sext_i32_i64(local_tid_45558) -
                                                    sext_i32_i64(skip_threads_45569)];
                }
                // perform operation
                {
                    bool inactive_45570 =
                         slt64(srem64(sext_i32_i64(local_tid_45558),
                                      iota32_arg_29024),
                               sext_i32_i64(local_tid_45558) -
                               sext_i32_i64(local_tid_45558 -
                               skip_threads_45569));
                    
                    if (inactive_45570) {
                        x_37220 = x_37221;
                    }
                    if (!inactive_45570) {
                        float defunc_1_op_res_37222 = x_37220 + x_37221;
                        
                        x_37220 = defunc_1_op_res_37222;
                    }
                }
            }
            if (sle32(wave_sizze_45560, skip_threads_45569)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45569, local_tid_45558 -
                      squot32(local_tid_45558, 32) * 32) &&
                ltid_in_bounds_45568) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44281)[sext_i32_i64(local_tid_45558)] =
                        x_37220;
                    x_37221 = x_37220;
                }
            }
            if (sle32(wave_sizze_45560, skip_threads_45569)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45569 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45558 - squot32(local_tid_45558, 32) * 32) == 31 &&
            ltid_in_bounds_45568) {
            ((volatile __local
              float *) mem_44281)[sext_i32_i64(squot32(local_tid_45558, 32))] =
                x_37220;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45571;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45558, 32) == 0 && ltid_in_bounds_45568) {
                x_45566 = ((volatile __local
                            float *) mem_44281)[sext_i32_i64(local_tid_45558)];
                if ((local_tid_45558 - squot32(local_tid_45558, 32) * 32) ==
                    0) {
                    x_45565 = x_45566;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45571 = 1;
            while (slt32(skip_threads_45571, 32)) {
                if (sle32(skip_threads_45571, local_tid_45558 -
                          squot32(local_tid_45558, 32) * 32) &&
                    (squot32(local_tid_45558, 32) == 0 &&
                     ltid_in_bounds_45568)) {
                    // read operands
                    {
                        x_45565 = ((volatile __local
                                    float *) mem_44281)[sext_i32_i64(local_tid_45558) -
                                                        sext_i32_i64(skip_threads_45571)];
                    }
                    // perform operation
                    {
                        bool inactive_45572 =
                             slt64(srem64(sext_i32_i64(local_tid_45558 * 32 +
                                          32 - 1), iota32_arg_29024),
                                   sext_i32_i64(local_tid_45558 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45558 -
                                                 skip_threads_45571) * 32 + 32 -
                                   1));
                        
                        if (inactive_45572) {
                            x_45565 = x_45566;
                        }
                        if (!inactive_45572) {
                            float defunc_1_op_res_45567 = x_45565 + x_45566;
                            
                            x_45565 = defunc_1_op_res_45567;
                        }
                    }
                }
                if (sle32(wave_sizze_45560, skip_threads_45571)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45571, local_tid_45558 -
                          squot32(local_tid_45558, 32) * 32) &&
                    (squot32(local_tid_45558, 32) == 0 &&
                     ltid_in_bounds_45568)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44281)[sext_i32_i64(local_tid_45558)] =
                            x_45565;
                        x_45566 = x_45565;
                    }
                }
                if (sle32(wave_sizze_45560, skip_threads_45571)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45571 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45558, 32) == 0 || !ltid_in_bounds_45568)) {
            // read operands
            {
                x_37221 = x_37220;
                x_37220 = ((__local
                            float *) mem_44281)[sext_i32_i64(squot32(local_tid_45558,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45573 =
                     slt64(srem64(sext_i32_i64(local_tid_45558),
                                  iota32_arg_29024),
                           sext_i32_i64(local_tid_45558) -
                           sext_i32_i64(squot32(local_tid_45558, 32) * 32 - 1));
                
                if (inactive_45573) {
                    x_37220 = x_37221;
                }
                if (!inactive_45573) {
                    float defunc_1_op_res_37222 = x_37220 + x_37221;
                    
                    x_37220 = defunc_1_op_res_37222;
                }
            }
            // write final result
            {
                ((__local float *) mem_44281)[sext_i32_i64(local_tid_45558)] =
                    x_37220;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45558, 32) == 0) {
            ((__local float *) mem_44281)[sext_i32_i64(local_tid_45558)] =
                x_37221;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_37241;
    int32_t acc0_37242;
    float acc0_37243;
    int64_t gtid_36764 = sext_i32_i64(ltid_pre_45562);
    int32_t phys_tid_36765 = local_tid_45558;
    __local char *red_arr_mem_45574;
    
    red_arr_mem_45574 = (__local char *) red_arr_mem_45574_backing_1;
    
    __local char *red_arr_mem_45576;
    
    red_arr_mem_45576 = (__local char *) red_arr_mem_45576_backing_2;
    
    __local char *red_arr_mem_45578;
    
    red_arr_mem_45578 = (__local char *) red_arr_mem_45578_backing_3;
    
    float x_37258;
    
    x_37258 = ((__local float *) mem_44281)[gtid_36764];
    
    float x_37259 = ((__global float *) mem_44277)[gtid_36764];
    int32_t index_primexp_41430 = sext_i64_i32(gtid_36764);
    float defunc_0_f_res_37262 = x_37258 / y_37211;
    bool cond_37263 = slt32(index_primexp_41430, y_37208);
    bool isnan_res_37264;
    
    isnan_res_37264 = futrts_isnan32(defunc_0_f_res_37262);
    
    bool cond_t_res_37265 = !isnan_res_37264;
    bool x_37266 = cond_37263 && cond_t_res_37265;
    float abs_res_37267 = (float) fabs(defunc_0_f_res_37262);
    bool defunc_2_f_res_t_res_37268 = x_37259 < abs_res_37267;
    bool x_37269 = x_37266 && defunc_2_f_res_t_res_37268;
    float defunc_1_f_res_37270;
    
    if (cond_37263) {
        defunc_1_f_res_37270 = defunc_0_f_res_37262;
    } else {
        defunc_1_f_res_37270 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45574)[gtid_36764] = x_37269;
    ((__local int32_t *) red_arr_mem_45576)[gtid_36764] = index_primexp_41430;
    ((__local float *) red_arr_mem_45578)[gtid_36764] = defunc_1_f_res_37270;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45580;
    int32_t skip_waves_45581;
    
    skip_waves_45581 = 1;
    
    bool x_37244;
    int32_t x_37245;
    float x_37246;
    bool x_37247;
    int32_t x_37248;
    float x_37249;
    
    offset_45580 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45558, sext_i64_i32(iota32_arg_29024))) {
            x_37244 = ((__local
                        bool *) red_arr_mem_45574)[sext_i32_i64(local_tid_45558 +
                                                   offset_45580)];
            x_37245 = ((__local
                        int32_t *) red_arr_mem_45576)[sext_i32_i64(local_tid_45558 +
                                                      offset_45580)];
            x_37246 = ((__local
                        float *) red_arr_mem_45578)[sext_i32_i64(local_tid_45558 +
                                                    offset_45580)];
        }
    }
    offset_45580 = 1;
    while (slt32(offset_45580, wave_sizze_45560)) {
        if (slt32(local_tid_45558 + offset_45580,
                  sext_i64_i32(iota32_arg_29024)) && ((local_tid_45558 -
                                                       squot32(local_tid_45558,
                                                               wave_sizze_45560) *
                                                       wave_sizze_45560) & (2 *
                                                                            offset_45580 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_37247 = ((volatile __local
                            bool *) red_arr_mem_45574)[sext_i32_i64(local_tid_45558 +
                                                       offset_45580)];
                x_37248 = ((volatile __local
                            int32_t *) red_arr_mem_45576)[sext_i32_i64(local_tid_45558 +
                                                          offset_45580)];
                x_37249 = ((volatile __local
                            float *) red_arr_mem_45578)[sext_i32_i64(local_tid_45558 +
                                                        offset_45580)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_37250;
                int32_t defunc_1_op_res_37251;
                
                if (x_37244) {
                    defunc_1_op_res_37250 = x_37244;
                    defunc_1_op_res_37251 = x_37245;
                } else {
                    bool x_37252 = x_37247 && x_37247;
                    bool x_37253 = !x_37247;
                    bool y_37254 = x_37244 && x_37253;
                    bool defunc_1_op_res_f_res_37255 = x_37252 || y_37254;
                    int32_t defunc_1_op_res_f_res_37256;
                    
                    if (x_37247) {
                        defunc_1_op_res_f_res_37256 = x_37248;
                    } else {
                        defunc_1_op_res_f_res_37256 = x_37245;
                    }
                    defunc_1_op_res_37250 = defunc_1_op_res_f_res_37255;
                    defunc_1_op_res_37251 = defunc_1_op_res_f_res_37256;
                }
                
                float defunc_1_op_res_37257 = x_37246 + x_37249;
                
                x_37244 = defunc_1_op_res_37250;
                x_37245 = defunc_1_op_res_37251;
                x_37246 = defunc_1_op_res_37257;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45574)[sext_i32_i64(local_tid_45558)] =
                    x_37244;
                ((volatile __local
                  int32_t *) red_arr_mem_45576)[sext_i32_i64(local_tid_45558)] =
                    x_37245;
                ((volatile __local
                  float *) red_arr_mem_45578)[sext_i32_i64(local_tid_45558)] =
                    x_37246;
            }
        }
        offset_45580 *= 2;
    }
    while (slt32(skip_waves_45581, squot32(sext_i64_i32(iota32_arg_29024) +
                                           wave_sizze_45560 - 1,
                                           wave_sizze_45560))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45580 = skip_waves_45581 * wave_sizze_45560;
        if (slt32(local_tid_45558 + offset_45580,
                  sext_i64_i32(iota32_arg_29024)) && ((local_tid_45558 -
                                                       squot32(local_tid_45558,
                                                               wave_sizze_45560) *
                                                       wave_sizze_45560) == 0 &&
                                                      (squot32(local_tid_45558,
                                                               wave_sizze_45560) &
                                                       (2 * skip_waves_45581 -
                                                        1)) == 0)) {
            // read array element
            {
                x_37247 = ((__local
                            bool *) red_arr_mem_45574)[sext_i32_i64(local_tid_45558 +
                                                       offset_45580)];
                x_37248 = ((__local
                            int32_t *) red_arr_mem_45576)[sext_i32_i64(local_tid_45558 +
                                                          offset_45580)];
                x_37249 = ((__local
                            float *) red_arr_mem_45578)[sext_i32_i64(local_tid_45558 +
                                                        offset_45580)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_37250;
                int32_t defunc_1_op_res_37251;
                
                if (x_37244) {
                    defunc_1_op_res_37250 = x_37244;
                    defunc_1_op_res_37251 = x_37245;
                } else {
                    bool x_37252 = x_37247 && x_37247;
                    bool x_37253 = !x_37247;
                    bool y_37254 = x_37244 && x_37253;
                    bool defunc_1_op_res_f_res_37255 = x_37252 || y_37254;
                    int32_t defunc_1_op_res_f_res_37256;
                    
                    if (x_37247) {
                        defunc_1_op_res_f_res_37256 = x_37248;
                    } else {
                        defunc_1_op_res_f_res_37256 = x_37245;
                    }
                    defunc_1_op_res_37250 = defunc_1_op_res_f_res_37255;
                    defunc_1_op_res_37251 = defunc_1_op_res_f_res_37256;
                }
                
                float defunc_1_op_res_37257 = x_37246 + x_37249;
                
                x_37244 = defunc_1_op_res_37250;
                x_37245 = defunc_1_op_res_37251;
                x_37246 = defunc_1_op_res_37257;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45574)[sext_i32_i64(local_tid_45558)] =
                    x_37244;
                ((__local
                  int32_t *) red_arr_mem_45576)[sext_i32_i64(local_tid_45558)] =
                    x_37245;
                ((__local
                  float *) red_arr_mem_45578)[sext_i32_i64(local_tid_45558)] =
                    x_37246;
            }
        }
        skip_waves_45581 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_37241 = ((__local bool *) red_arr_mem_45574)[0];
    acc0_37242 = ((__local int32_t *) red_arr_mem_45576)[0];
    acc0_37243 = ((__local float *) red_arr_mem_45578)[0];
    
    bool x_37273 = acc0_37241 && acc0_37241;
    int32_t defunc_1_op_res_f_res_37277;
    
    if (acc0_37241) {
        defunc_1_op_res_f_res_37277 = acc0_37242;
    } else {
        defunc_1_op_res_f_res_37277 = -1;
    }
    
    bool cond_37283 = y_37208 == 0;
    float defunc_0_f_res_37284;
    
    if (cond_37283) {
        defunc_0_f_res_37284 = 0.0F;
    } else {
        float i32_res_37285 = sitofp_i32_f32(y_37208);
        float defunc_0_f_res_f_res_37286 = acc0_37243 / i32_res_37285;
        
        defunc_0_f_res_37284 = defunc_0_f_res_f_res_37286;
    }
    
    __local char *mem_44285;
    
    mem_44285 = (__local char *) mem_44285_backing_4;
    
    int64_t gtid_36766 = sext_i32_i64(ltid_pre_45562);
    int32_t phys_tid_36767 = local_tid_45558;
    int32_t index_primexp_41433 = sext_i64_i32(gtid_36766);
    bool cond_37289 = slt32(index_primexp_41433, y_37208);
    bool cond_37290;
    
    if (cond_37289) {
        int32_t i_37291 = add32(x_37202, index_primexp_41433);
        int64_t i_37292 = sext_i32_i64(i_37291);
        bool x_37293 = sle64(0, i_37292);
        bool y_37294 = slt64(i_37292, N_28624);
        bool bounds_check_37295 = x_37293 && y_37294;
        bool index_certs_37296;
        
        if (!bounds_check_37295) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 22) == -1) {
                    global_failure_args[0] = i_37292;
                    global_failure_args[1] = N_28624;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_37297 = ((__global
                                  float *) defunc_4_map_res_mem_44174)[gtid_36759 *
                                                                       N_28624 +
                                                                       i_37292];
        bool isnan_res_37298;
        
        isnan_res_37298 = futrts_isnan32(isnan_arg_37297);
        
        bool cond_t_res_37299 = !isnan_res_37298;
        
        cond_37290 = cond_t_res_37299;
    } else {
        cond_37290 = 0;
    }
    
    float defunc_0_f_res_37300;
    
    if (cond_37290) {
        int32_t i_37301 = add32(x_37202, index_primexp_41433);
        int64_t i_37302 = sext_i32_i64(i_37301);
        bool x_37303 = sle64(0, i_37302);
        bool y_37304 = slt64(i_37302, N_28624);
        bool bounds_check_37305 = x_37303 && y_37304;
        bool index_certs_37306;
        
        if (!bounds_check_37305) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 23) == -1) {
                    global_failure_args[0] = i_37302;
                    global_failure_args[1] = N_28624;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_37307 = ((__global
                                             float *) defunc_4_map_res_mem_44174)[gtid_36759 *
                                                                                  N_28624 +
                                                                                  i_37302];
        
        defunc_0_f_res_37300 = defunc_0_f_res_t_res_37307;
    } else {
        defunc_0_f_res_37300 = INFINITY;
    }
    ((__local float *) mem_44285)[gtid_36766] = defunc_0_f_res_37300;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44287;
    
    mem_44287 = (__local char *) mem_44287_backing_5;
    ((__local float *) mem_44287)[sext_i32_i64(local_tid_45558)] = ((__local
                                                                     float *) mem_44285)[sext_i32_i64(local_tid_45558)];
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_37310 = 0; i_37310 < distance_29056; i_37310++) {
        int64_t index_primexp_37312 = add64(1, i_37310);
        bool cond_37313 = slt64(0, index_primexp_37312);
        bool loop_cond_37314;
        
        if (cond_37313) {
            bool x_37315 = sle64(0, index_primexp_37312);
            bool y_37316 = slt64(index_primexp_37312, iota32_arg_29024);
            bool bounds_check_37317 = x_37315 && y_37316;
            bool index_certs_37318;
            
            if (!bounds_check_37317) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 24) ==
                        -1) {
                        global_failure_args[0] = index_primexp_37312;
                        global_failure_args[1] = iota32_arg_29024;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_2_lifted_gt_arg_37319 = ((__local
                                                   float *) mem_44287)[index_primexp_37312];
            bool y_37320 = slt64(i_37310, iota32_arg_29024);
            bool index_certs_37321;
            
            if (!y_37320) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 25) ==
                        -1) {
                        global_failure_args[0] = i_37310;
                        global_failure_args[1] = iota32_arg_29024;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_1_lifted_gt_arg_37322 = ((__local
                                                   float *) mem_44287)[i_37310];
            bool defunc_1_zlze_res_37323 = defunc_1_lifted_gt_arg_37322 <=
                 defunc_2_lifted_gt_arg_37319;
            bool defunc_2_lifted_gt_res_37324 = !defunc_1_zlze_res_37323;
            
            loop_cond_37314 = defunc_2_lifted_gt_res_37324;
        } else {
            loop_cond_37314 = 0;
        }
        
        bool xszq_37325;
        int64_t xszq_37326;
        bool loop_while_37328;
        int64_t j_37329;
        
        loop_while_37328 = loop_cond_37314;
        j_37329 = index_primexp_37312;
        while (loop_while_37328) {
            int64_t loopres_37331 = sub64(j_37329, 1);
            bool x_37332 = sle64(0, j_37329);
            bool y_37333 = slt64(j_37329, iota32_arg_29024);
            bool bounds_check_37334 = x_37332 && y_37333;
            bool index_certs_37335;
            
            if (!bounds_check_37334) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 26) ==
                        -1) {
                        global_failure_args[0] = j_37329;
                        global_failure_args[1] = iota32_arg_29024;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_37336 = ((__local float *) mem_44287)[j_37329];
            bool x_37337 = sle64(0, loopres_37331);
            bool y_37338 = slt64(loopres_37331, iota32_arg_29024);
            bool bounds_check_37339 = x_37337 && y_37338;
            bool index_certs_37340;
            
            if (!bounds_check_37339) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 27) ==
                        -1) {
                        global_failure_args[0] = loopres_37331;
                        global_failure_args[1] = iota32_arg_29024;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_37341 = ((__local float *) mem_44287)[loopres_37331];
            
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_45558 == 0) {
                ((__local float *) mem_44287)[j_37329] = copy_arg_37341;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_45558 == 0) {
                ((__local float *) mem_44287)[loopres_37331] = copy_arg_37336;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            bool cond_37344 = slt64(0, loopres_37331);
            bool loop_cond_37345;
            
            if (cond_37344) {
                bool index_certs_37346;
                
                if (!bounds_check_37339) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 28) ==
                            -1) {
                            global_failure_args[0] = loopres_37331;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_2_lifted_gt_arg_37347 = ((__local
                                                       float *) mem_44287)[loopres_37331];
                int64_t i_37348 = sub64(loopres_37331, 1);
                bool x_37349 = sle64(0, i_37348);
                bool y_37350 = slt64(i_37348, iota32_arg_29024);
                bool bounds_check_37351 = x_37349 && y_37350;
                bool index_certs_37352;
                
                if (!bounds_check_37351) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 29) ==
                            -1) {
                            global_failure_args[0] = i_37348;
                            global_failure_args[1] = iota32_arg_29024;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_1_lifted_gt_arg_37353 = ((__local
                                                       float *) mem_44287)[i_37348];
                bool defunc_1_zlze_res_37354 = defunc_1_lifted_gt_arg_37353 <=
                     defunc_2_lifted_gt_arg_37347;
                bool defunc_2_lifted_gt_res_37355 = !defunc_1_zlze_res_37354;
                
                loop_cond_37345 = defunc_2_lifted_gt_res_37355;
            } else {
                loop_cond_37345 = 0;
            }
            
            bool loop_while_tmp_45583 = loop_cond_37345;
            int64_t j_tmp_45584 = loopres_37331;
            
            loop_while_37328 = loop_while_tmp_45583;
            j_37329 = j_tmp_45584;
        }
        xszq_37325 = loop_while_37328;
        xszq_37326 = j_37329;
    }
    
    int32_t i_37356 = sdiv32(y_37208, 2);
    int32_t j_37357 = sub32(i_37356, 1);
    bool cond_37358 = x_37201 == x_37202;
    float defunc_0_f_res_37359;
    
    if (cond_37358) {
        defunc_0_f_res_37359 = 0.0F;
    } else {
        int32_t x_37360 = smod32(y_37208, 2);
        bool cond_37361 = x_37360 == 0;
        float defunc_0_f_res_f_res_37362;
        
        if (cond_37361) {
            int64_t j_37363 = sext_i32_i64(j_37357);
            bool x_37364 = sle64(0, j_37363);
            bool y_37365 = slt64(j_37363, iota32_arg_29024);
            bool bounds_check_37366 = x_37364 && y_37365;
            bool index_certs_37367;
            
            if (!bounds_check_37366) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 30) ==
                        -1) {
                        global_failure_args[0] = j_37363;
                        global_failure_args[1] = iota32_arg_29024;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float x_37368 = ((__local float *) mem_44287)[j_37363];
            int64_t i_37369 = sext_i32_i64(i_37356);
            bool x_37370 = sle64(0, i_37369);
            bool y_37371 = slt64(i_37369, iota32_arg_29024);
            bool bounds_check_37372 = x_37370 && y_37371;
            bool index_certs_37373;
            
            if (!bounds_check_37372) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 31) ==
                        -1) {
                        global_failure_args[0] = i_37369;
                        global_failure_args[1] = iota32_arg_29024;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float y_37374 = ((__local float *) mem_44287)[i_37369];
            float x_37375 = x_37368 + y_37374;
            float defunc_0_f_res_f_res_t_res_37376 = x_37375 / 2.0F;
            
            defunc_0_f_res_f_res_37362 = defunc_0_f_res_f_res_t_res_37376;
        } else {
            int64_t i_37377 = sext_i32_i64(i_37356);
            bool x_37378 = sle64(0, i_37377);
            bool y_37379 = slt64(i_37377, iota32_arg_29024);
            bool bounds_check_37380 = x_37378 && y_37379;
            bool index_certs_37381;
            
            if (!bounds_check_37380) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 32) ==
                        -1) {
                        global_failure_args[0] = i_37377;
                        global_failure_args[1] = iota32_arg_29024;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_37382 = ((__local
                                                       float *) mem_44287)[i_37377];
            
            defunc_0_f_res_f_res_37362 = defunc_0_f_res_f_res_f_res_37382;
        }
        defunc_0_f_res_37359 = defunc_0_f_res_f_res_37362;
    }
    
    bool cond_37383 = !x_37273;
    int32_t fst_breakzq_37384;
    
    if (cond_37383) {
        fst_breakzq_37384 = -1;
    } else {
        bool cond_37385 = slt32(defunc_1_op_res_f_res_37277, y_37208);
        int32_t adjustValInds_res_37386;
        
        if (cond_37385) {
            int32_t i_37387 = add32(x_37202, defunc_1_op_res_f_res_37277);
            int64_t i_37388 = sext_i32_i64(i_37387);
            int32_t x_37389 = ((__global
                                int32_t *) defunc_4_map_res_mem_44175)[gtid_36759 *
                                                                       N_28624 +
                                                                       i_37388];
            int32_t adjustValInds_res_t_res_37390 = sub32(x_37389, n_28629);
            
            adjustValInds_res_37386 = adjustValInds_res_t_res_37390;
        } else {
            adjustValInds_res_37386 = -1;
        }
        fst_breakzq_37384 = adjustValInds_res_37386;
    }
    
    bool cond_37391 = sle32(x_37202, 5);
    bool cond_f_res_37392 = sle32(y_37208, 5);
    bool x_37393 = !cond_37391;
    bool y_37394 = cond_f_res_37392 && x_37393;
    bool cond_37395 = cond_37391 || y_37394;
    int32_t fst_breakzq_37396;
    
    if (cond_37395) {
        fst_breakzq_37396 = -2;
    } else {
        fst_breakzq_37396 = fst_breakzq_37384;
    }
    if (local_tid_45558 == 0) {
        ((__global int32_t *) mem_44311)[gtid_36759] = fst_breakzq_37396;
    }
    if (local_tid_45558 == 0) {
        ((__global float *) mem_44313)[gtid_36759] = defunc_0_f_res_37284;
    }
    if (local_tid_45558 == 0) {
        ((__global float *) mem_44315)[gtid_36759] = defunc_0_f_res_37359;
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_41549(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43477_backing_aligned_0,
                                                     int64_t m_28625,
                                                     int32_t n_28629,
                                                     int64_t i32_res_28644,
                                                     int64_t Ty_41537,
                                                     int64_t Tx_41538,
                                                     int64_t gridDim_x_41539,
                                                     int64_t gridDim_y_41540,
                                                     int64_t group_sizze_41544,
                                                     int64_t count_shmem_41545,
                                                     __global
                                                     unsigned char *mem_43390,
                                                     __global
                                                     unsigned char *mem_43394,
                                                     __global
                                                     unsigned char *mem_43465,
                                                     __global
                                                     unsigned char *mem_43525)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43477_backing_0 = (__local volatile
                                                           char *) mem_43477_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44674;
    int32_t local_tid_44675;
    int64_t group_sizze_44678;
    int32_t wave_sizze_44677;
    int32_t group_tid_44676;
    
    global_tid_44674 = get_global_id(0);
    local_tid_44675 = get_local_id(0);
    group_sizze_44678 = get_local_size(0);
    wave_sizze_44677 = LOCKSTEP_WIDTH;
    group_tid_44676 = get_group_id(0);
    
    int32_t gid_flat_41549;
    
    gid_flat_41549 = group_tid_44676;
    
    int32_t ltid_pre_44679;
    
    ltid_pre_44679 = squot32(local_tid_44675, sext_i64_i32(Ty_41537) *
                             sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44680;
    
    ltid_pre_44680 = squot32(local_tid_44675 - squot32(local_tid_44675,
                                                       sext_i64_i32(Ty_41537) *
                                                       sext_i64_i32(Tx_41538)) *
                             (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)),
                             sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44681;
    
    ltid_pre_44681 = local_tid_44675 - squot32(local_tid_44675,
                                               sext_i64_i32(Ty_41537) *
                                               sext_i64_i32(Tx_41538)) *
        (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)) -
        squot32(local_tid_44675 - squot32(local_tid_44675,
                                          sext_i64_i32(Ty_41537) *
                                          sext_i64_i32(Tx_41538)) *
                (sext_i64_i32(Ty_41537) * sext_i64_i32(Tx_41538)),
                sext_i64_i32(Tx_41538)) * sext_i64_i32(Tx_41538);
    
    int32_t ltid_pre_44682;
    
    ltid_pre_44682 = squot32(local_tid_44675, sext_i64_i32(Tx_41538));
    
    int32_t ltid_pre_44683;
    
    ltid_pre_44683 = local_tid_44675 - squot32(local_tid_44675,
                                               sext_i64_i32(Tx_41538)) *
        sext_i64_i32(Tx_41538);
    
    int32_t ltid_pre_44684;
    
    ltid_pre_44684 = local_tid_44675;
    
    int64_t gid_zz_41548;
    
    gid_zz_41548 = squot64(sext_i32_i64(group_tid_44676), gridDim_y_41540 *
                           gridDim_x_41539);
    
    int64_t gid_y_41547;
    
    gid_y_41547 = squot64(sext_i32_i64(group_tid_44676) -
                          squot64(sext_i32_i64(group_tid_44676),
                                  gridDim_y_41540 * gridDim_x_41539) *
                          (gridDim_y_41540 * gridDim_x_41539), gridDim_x_41539);
    
    int64_t gid_x_41546;
    
    gid_x_41546 = sext_i32_i64(group_tid_44676) -
        squot64(sext_i32_i64(group_tid_44676), gridDim_y_41540 *
                gridDim_x_41539) * (gridDim_y_41540 * gridDim_x_41539) -
        squot64(sext_i32_i64(group_tid_44676) -
                squot64(sext_i32_i64(group_tid_44676), gridDim_y_41540 *
                        gridDim_x_41539) * (gridDim_y_41540 * gridDim_x_41539),
                gridDim_x_41539) * gridDim_x_41539;
    
    int64_t ii_41550;
    
    ii_41550 = 30 * gid_zz_41548;
    
    int64_t jj1_41551 = Ty_41537 * gid_y_41547;
    int64_t jj2_41552 = Tx_41538 * gid_x_41546;
    float mem_43475[30];
    int64_t ltid_y_41555 = sext_i32_i64(ltid_pre_44682);
    int64_t ltid_x_41553 = sext_i32_i64(ltid_pre_44683);
    int32_t ltid_flat_41554 = local_tid_44675;
    float mem_43469[30];
    
    for (int32_t i_43288 = 0; i_43288 < 30; i_43288++) {
        int64_t i_41563 = sext_i32_i64(i_43288);
        
        mem_43469[i_41563] = 0.0F;
    }
    for (int64_t i_44686 = 0; i_44686 < 30; i_44686++) {
        mem_43475[i_44686] = mem_43469[i_44686];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43477;
    
    mem_43477 = (__local char *) mem_43477_backing_0;
    
    float loop_mem_43507[30];
    float mem_param_43478[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43478[i_1] = mem_43475[i_1];
    for (int32_t i_43290 = 0; i_43290 < n_28629; i_43290++) {
        int64_t i_41568 = sext_i32_i64(i_43290);
        
        for (int64_t i_41571 = 0; i_41571 < count_shmem_41545; i_41571++) {
            int64_t offs_41584 = group_sizze_41544 * i_41571;
            int64_t ltid_41574 = sext_i32_i64(ltid_pre_44684);
            int32_t ltid_flat_41573 = local_tid_44675;
            int64_t loc_ind_41585 = ltid_41574 + offs_41584;
            int64_t gtid_41586 = ii_41550 + loc_ind_41585;
            bool cond_41587 = slt64(gtid_41586, m_28625);
            float y_elem_41588;
            
            if (cond_41587) {
                float Y_elem_41590 = ((__global float *) mem_43465)[i_41568 *
                                                                    m_28625 +
                                                                    gtid_41586];
                
                y_elem_41588 = Y_elem_41590;
            } else {
                y_elem_41588 = 0.0F;
            }
            
            bool cond_41592 = slt64(loc_ind_41585, 30);
            int64_t y_loc_ind_41593;
            
            if (cond_41592) {
                y_loc_ind_41593 = loc_ind_41585;
            } else {
                y_loc_ind_41593 = -1;
            }
            if (sle64(0, y_loc_ind_41593) && slt64(y_loc_ind_41593, 30)) {
                ((__local float *) mem_43477)[y_loc_ind_41593] = y_elem_41588;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43506[30];
        int64_t ltid_y_41599 = sext_i32_i64(ltid_pre_44682);
        int64_t ltid_x_41597 = sext_i32_i64(ltid_pre_44683);
        int32_t ltid_flat_41598 = local_tid_44675;
        int64_t gtid_41626 = jj1_41551 + ltid_y_41599;
        int64_t gtid_41627 = jj2_41552 + ltid_x_41597;
        bool binop_x_41629 = slt64(gtid_41626, i32_res_28644);
        bool binop_y_41630 = slt64(gtid_41627, i32_res_28644);
        bool cond_41631 = binop_x_41629 && binop_y_41630;
        float mem_44406[30];
        
        if (cond_41631) {
            float x_41634 = ((__global float *) mem_43390)[i_41568 *
                                                           i32_res_28644 +
                                                           gtid_41626];
            float x_41636 = ((__global float *) mem_43394)[i_41568 *
                                                           i32_res_28644 +
                                                           gtid_41627];
            
            for (int32_t i_43289 = 0; i_43289 < 30; i_43289++) {
                int64_t i_41638 = sext_i32_i64(i_43289);
                int64_t gtid_41640 = ii_41550 + i_41638;
                bool cond_41641 = slt64(gtid_41640, m_28625);
                
                if (cond_41641) {
                    float inp_reg_var2zz_41643 = ((__local
                                                   float *) mem_43477)[i_41638];
                    float res_reg_var2zz_41644 = mem_param_43478[i_41638];
                    float x_41648 = x_41634 * x_41636;
                    bool isnan_res_41649;
                    
                    isnan_res_41649 = futrts_isnan32(inp_reg_var2zz_41643);
                    
                    float y_41650;
                    
                    if (isnan_res_41649) {
                        y_41650 = 0.0F;
                    } else {
                        y_41650 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41651 = x_41648 * y_41650;
                    float defunc_1_op_res_41655 = res_reg_var2zz_41644 +
                          defunc_2_f_res_41651;
                    
                    mem_param_43478[i_41638] = defunc_1_op_res_41655;
                }
            }
            for (int64_t i_44692 = 0; i_44692 < 30; i_44692++) {
                mem_44406[i_44692] = mem_param_43478[i_44692];
            }
        } else {
            for (int64_t i_44693 = 0; i_44693 < 30; i_44693++) {
                mem_44406[i_44693] = mem_param_43478[i_44693];
            }
        }
        for (int64_t i_44694 = 0; i_44694 < 30; i_44694++) {
            mem_43506[i_44694] = mem_44406[i_44694];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44687[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44687[i_2] = mem_43506[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43478[i_3] = mem_param_tmp_44687[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43507[i_4] = mem_param_43478[i_4];
    
    float mem_43521[30 * 1 * 1];
    int64_t ltid_zz_41664 = sext_i32_i64(ltid_pre_44679);
    int64_t ltid_y_41663 = sext_i32_i64(ltid_pre_44680);
    int64_t ltid_x_41661 = sext_i32_i64(ltid_pre_44681);
    int32_t ltid_flat_41662 = local_tid_44675;
    float mem_43515[30 * 1 * 1];
    
    for (int32_t i_43292 = 0; i_43292 < 30; i_43292++) {
        int64_t i_41673 = sext_i32_i64(i_43292);
        
        for (int64_t i_44696 = 0; i_44696 < 1; i_44696++) {
            mem_43515[i_41673 + i_44696] = loop_mem_43507[i_41673 + i_44696];
        }
    }
    for (int64_t i_44697 = 0; i_44697 < 30; i_44697++) {
        for (int64_t i_44698 = 0; i_44698 < 1; i_44698++) {
            for (int64_t i_44699 = 0; i_44699 < 1; i_44699++) {
                mem_43521[i_44697 + i_44698 + i_44699] = mem_43515[i_44697 +
                                                                   i_44698 +
                                                                   i_44699];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44700 = squot64(sext_i32_i64(local_tid_44675), Ty_41537 *
                                       Tx_41538);
    int64_t reg_tile_i_44701 = squot64(sext_i32_i64(local_tid_44675) -
                                       squot64(sext_i32_i64(local_tid_44675),
                                               Ty_41537 * Tx_41538) *
                                       (Ty_41537 * Tx_41538), Tx_41538);
    int64_t reg_tile_i_44702 = sext_i32_i64(local_tid_44675) -
            squot64(sext_i32_i64(local_tid_44675), Ty_41537 * Tx_41538) *
            (Ty_41537 * Tx_41538) - squot64(sext_i32_i64(local_tid_44675) -
                                            squot64(sext_i32_i64(local_tid_44675),
                                                    Ty_41537 * Tx_41538) *
                                            (Ty_41537 * Tx_41538), Tx_41538) *
            Tx_41538;
    int64_t tile_dim_start_44703 = 30 * (gid_zz_41548 + reg_tile_i_44700);
    int64_t tile_dim_start_44704 = Ty_41537 * gid_y_41547 + reg_tile_i_44701;
    int64_t tile_dim_start_44705 = Tx_41538 * gid_x_41546 + reg_tile_i_44702;
    
    for (int64_t nest_i_44706 = 0; nest_i_44706 < 30; nest_i_44706++) {
        for (int64_t nest_i_44707 = 0; nest_i_44707 < 1; nest_i_44707++) {
            for (int64_t nest_i_44708 = 0; nest_i_44708 < 1; nest_i_44708++) {
                if ((slt64(tile_dim_start_44703 + nest_i_44706, m_28625) &&
                     slt64(tile_dim_start_44704 + nest_i_44707,
                           i32_res_28644)) && slt64(tile_dim_start_44705 +
                                                    nest_i_44708,
                                                    i32_res_28644)) {
                    ((__global float *) mem_43525)[(tile_dim_start_44703 +
                                                    nest_i_44706) *
                                                   (i32_res_28644 *
                                                    i32_res_28644) +
                                                   (tile_dim_start_44704 +
                                                    nest_i_44707) *
                                                   i32_res_28644 +
                                                   (tile_dim_start_44705 +
                                                    nest_i_44708)] =
                        mem_43521[nest_i_44706 + nest_i_44707 + nest_i_44708];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_41702(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43664_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43662_backing_aligned_1,
                                                     int64_t m_28625,
                                                     int64_t N_28626,
                                                     int64_t i32_res_28638,
                                                     int64_t i32_res_28644,
                                                     int64_t gridDim_x_41696,
                                                     int64_t full_tiles_41727,
                                                     int64_t kk_41934, __global
                                                     unsigned char *images_mem_43378,
                                                     __global
                                                     unsigned char *mem_43390,
                                                     __global
                                                     unsigned char *mem_43836)
{
    #define Ty_41683 (mainMagnitudeziTy_41680)
    #define Ry_41684 (mainMagnitudeziRy_41682)
    #define Tx_41685 (mainMagnitudeziTx_41679)
    #define Rx_41686 (mainMagnitudeziRx_41681)
    #define Tk_41687 (mainMagnitudeziTk_41678)
    #define tk_div_tx_41688 (sdiv_up64(mainMagnitudeziTk_41678, mainMagnitudeziTx_41679))
    #define tk_div_ty_41689 (sdiv_up64(mainMagnitudeziTk_41678, mainMagnitudeziTy_41680))
    #define TxRx_41690 (mainMagnitudeziTx_41679 * mainMagnitudeziRx_41681)
    #define TyRy_41691 (mainMagnitudeziTy_41680 * mainMagnitudeziRy_41682)
    #define a_loc_szz_41693 (mainMagnitudeziTk_41678 * (mainMagnitudeziTy_41680 * mainMagnitudeziRy_41682))
    #define b_loc_szz_41695 (mainMagnitudeziRx_41681 * (mainMagnitudeziTx_41679 * mainMagnitudeziTk_41678))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43664_backing_1 = (__local volatile
                                                           char *) mem_43664_backing_aligned_0;
    __local volatile char *restrict mem_43662_backing_0 = (__local volatile
                                                           char *) mem_43662_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44848;
    int32_t local_tid_44849;
    int64_t group_sizze_44852;
    int32_t wave_sizze_44851;
    int32_t group_tid_44850;
    
    global_tid_44848 = get_global_id(0);
    local_tid_44849 = get_local_id(0);
    group_sizze_44852 = get_local_size(0);
    wave_sizze_44851 = LOCKSTEP_WIDTH;
    group_tid_44850 = get_group_id(0);
    
    int32_t gid_flat_41702;
    
    gid_flat_41702 = group_tid_44850;
    
    int32_t ltid_pre_44853;
    
    ltid_pre_44853 = squot32(local_tid_44849, sext_i64_i32(Tx_41685));
    
    int32_t ltid_pre_44854;
    
    ltid_pre_44854 = local_tid_44849 - squot32(local_tid_44849,
                                               sext_i64_i32(Tx_41685)) *
        sext_i64_i32(Tx_41685);
    
    int64_t gid_y_41701;
    
    gid_y_41701 = squot64(sext_i32_i64(group_tid_44850), gridDim_x_41696);
    
    int64_t gid_x_41700;
    
    gid_x_41700 = sext_i32_i64(group_tid_44850) -
        squot64(sext_i32_i64(group_tid_44850), gridDim_x_41696) *
        gridDim_x_41696;
    
    int64_t iii_41703;
    
    iii_41703 = TyRy_41691 * gid_y_41701;
    
    int64_t jjj_41704 = TxRx_41690 * gid_x_41700;
    float mem_43660[Ry_41684 * Rx_41686];
    int64_t ltid_y_41707 = sext_i32_i64(ltid_pre_44853);
    int64_t ltid_x_41705 = sext_i32_i64(ltid_pre_44854);
    int32_t ltid_flat_41706 = local_tid_44849;
    float mem_43651[Ry_41684 * Rx_41686];
    
    for (int64_t i_41718 = 0; i_41718 < Ry_41684; i_41718++) {
        for (int64_t i_41721 = 0; i_41721 < Rx_41686; i_41721++) {
            mem_43651[i_41718 * Rx_41686 + i_41721] = 0.0F;
        }
    }
    for (int64_t i_44857 = 0; i_44857 < Ry_41684; i_44857++) {
        for (int64_t i_44858 = 0; i_44858 < Rx_41686; i_44858++) {
            mem_43660[i_44857 * Rx_41686 + i_44858] = mem_43651[i_44857 *
                                                                Rx_41686 +
                                                                i_44858];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43662;
    
    mem_43662 = (__local char *) mem_43662_backing_0;
    
    __local char *mem_43664;
    
    mem_43664 = (__local char *) mem_43664_backing_1;
    
    float mem_43735[Ry_41684];
    float mem_43739[Rx_41686];
    float loop_mem_43751[Ry_41684 * Rx_41686];
    float mem_param_43665[Ry_41684 * Rx_41686];
    
    for (int32_t i_2 = 0; i_2 < Ry_41684 * Rx_41686; i_2++)
        mem_param_43665[i_2] = mem_43660[i_2];
    for (int64_t i_41728 = 0; i_41728 < full_tiles_41727; i_41728++) {
        int64_t kk_41732 = Tk_41687 * i_41728;
        
        for (int64_t i_41733 = 0; i_41733 < Ry_41684; i_41733++) {
            int64_t binop_y_41756 = Ty_41683 * i_41733;
            
            for (int64_t i_41735 = 0; i_41735 < tk_div_tx_41688; i_41735++) {
                int64_t binop_y_41754 = Tx_41685 * i_41735;
                int64_t ltid_x_41737 = sext_i32_i64(ltid_pre_44853);
                int64_t ltid_y_41738 = sext_i32_i64(ltid_pre_44854);
                int32_t ltid_flat_41739 = local_tid_44849;
                int64_t k_41755 = ltid_y_41738 + binop_y_41754;
                int64_t i_41757 = ltid_x_41737 + binop_y_41756;
                int64_t gtid_41758 = iii_41703 + i_41757;
                int64_t A_col_idx_41759 = kk_41732 + k_41755;
                bool cond_41760 = slt64(gtid_41758, m_28625);
                float A_elem_41761;
                
                if (cond_41760) {
                    float A_elem_41763 = ((__global
                                           float *) images_mem_43378)[gtid_41758 *
                                                                      N_28626 +
                                                                      A_col_idx_41759];
                    
                    A_elem_41761 = A_elem_41763;
                } else {
                    A_elem_41761 = 0.0F;
                }
                
                bool cond_41765 = slt64(k_41755, Tk_41687);
                int64_t a_loc_ind_41766;
                
                if (cond_41765) {
                    int64_t binop_y_41767 = Tk_41687 * i_41757;
                    int64_t loc_fi_41768 = k_41755 + binop_y_41767;
                    
                    a_loc_ind_41766 = loc_fi_41768;
                } else {
                    a_loc_ind_41766 = -1;
                }
                if (sle64(0, a_loc_ind_41766) && slt64(a_loc_ind_41766,
                                                       a_loc_szz_41693)) {
                    ((__local float *) mem_43662)[a_loc_ind_41766] =
                        A_elem_41761;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41773 = 0; i_41773 < tk_div_ty_41689; i_41773++) {
            int64_t binop_y_41794 = Ty_41683 * i_41773;
            
            for (int64_t i_41775 = 0; i_41775 < Rx_41686; i_41775++) {
                int64_t binop_y_41796 = Tx_41685 * i_41775;
                int64_t ltid_x_41777 = sext_i32_i64(ltid_pre_44853);
                int64_t ltid_y_41778 = sext_i32_i64(ltid_pre_44854);
                int32_t ltid_flat_41779 = local_tid_44849;
                int64_t k_41795 = ltid_x_41777 + binop_y_41794;
                int64_t j_41797 = ltid_y_41778 + binop_y_41796;
                int64_t gtid_41798 = jjj_41704 + j_41797;
                int64_t B_row_idx_41799 = kk_41732 + k_41795;
                bool cond_41800 = slt64(gtid_41798, i32_res_28644);
                float B_elem_41801;
                
                if (cond_41800) {
                    float B_elem_41803 = ((__global
                                           float *) mem_43390)[B_row_idx_41799 *
                                                               i32_res_28644 +
                                                               gtid_41798];
                    
                    B_elem_41801 = B_elem_41803;
                } else {
                    B_elem_41801 = 0.0F;
                }
                
                bool cond_41805 = slt64(k_41795, Tk_41687);
                int64_t b_loc_ind_41806;
                
                if (cond_41805) {
                    int64_t binop_y_41807 = TxRx_41690 * k_41795;
                    int64_t loc_fi_41808 = j_41797 + binop_y_41807;
                    
                    b_loc_ind_41806 = loc_fi_41808;
                } else {
                    b_loc_ind_41806 = -1;
                }
                if (sle64(0, b_loc_ind_41806) && slt64(b_loc_ind_41806,
                                                       b_loc_szz_41695)) {
                    ((__local float *) mem_43664)[b_loc_ind_41806] =
                        B_elem_41801;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43750[Ry_41684 * Rx_41686];
        float mem_param_43722[Ry_41684 * Rx_41686];
        
        for (int32_t i_3 = 0; i_3 < Ry_41684 * Rx_41686; i_3++)
            mem_param_43722[i_3] = mem_param_43665[i_3];
        for (int64_t i_41813 = 0; i_41813 < Tk_41687; i_41813++) {
            int64_t binop_y_41852 = TxRx_41690 * i_41813;
            int64_t ltid_y_41817 = sext_i32_i64(ltid_pre_44853);
            int64_t ltid_x_41815 = sext_i32_i64(ltid_pre_44854);
            int32_t ltid_flat_41816 = local_tid_44849;
            float mem_43725[Ry_41684];
            float mem_43727[Rx_41686];
            int64_t binop_x_41843 = Ry_41684 * ltid_y_41817;
            
            for (int64_t i_41841 = 0; i_41841 < Ry_41684; i_41841++) {
                int64_t binop_x_41844 = i_41841 + binop_x_41843;
                int64_t binop_y_41845 = Tk_41687 * binop_x_41844;
                int64_t a_loc_ind_41846 = i_41813 + binop_y_41845;
                
                for (int64_t i_44870 = 0; i_44870 < 1; i_44870++) {
                    mem_43725[i_41841 + i_44870] = ((__local
                                                     float *) mem_43662)[a_loc_ind_41846 +
                                                                         i_44870];
                }
            }
            
            int64_t binop_y_41854 = Rx_41686 * ltid_x_41815;
            
            for (int64_t i_41850 = 0; i_41850 < Rx_41686; i_41850++) {
                int64_t binop_x_41853 = i_41850 + binop_y_41852;
                int64_t b_loc_ind_41855 = binop_x_41853 + binop_y_41854;
                
                for (int64_t i_44872 = 0; i_44872 < 1; i_44872++) {
                    mem_43727[i_41850 + i_44872] = ((__local
                                                     float *) mem_43664)[b_loc_ind_41855 +
                                                                         i_44872];
                }
            }
            for (int64_t i_44873 = 0; i_44873 < Ry_41684; i_44873++) {
                mem_43735[i_44873] = mem_43725[i_44873];
            }
            for (int64_t i_44874 = 0; i_44874 < Rx_41686; i_44874++) {
                mem_43739[i_44874] = mem_43727[i_44874];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43749[Ry_41684 * Rx_41686];
            int64_t ltid_y_41862 = sext_i32_i64(ltid_pre_44853);
            int64_t ltid_x_41860 = sext_i32_i64(ltid_pre_44854);
            int32_t ltid_flat_41861 = local_tid_44849;
            int64_t binop_y_41905 = Ry_41684 * ltid_y_41862;
            int64_t binop_y_41909 = Rx_41686 * ltid_x_41860;
            
            for (int64_t i_41899 = 0; i_41899 < Ry_41684; i_41899++) {
                int64_t binop_x_41904 = iii_41703 + i_41899;
                int64_t cmpop_x_41906 = binop_x_41904 + binop_y_41905;
                bool binop_x_41907 = slt64(cmpop_x_41906, m_28625);
                
                for (int64_t i_41902 = 0; i_41902 < Rx_41686; i_41902++) {
                    int64_t binop_x_41908 = jjj_41704 + i_41902;
                    int64_t cmpop_x_41910 = binop_x_41908 + binop_y_41909;
                    bool binop_y_41911 = slt64(cmpop_x_41910, i32_res_28644);
                    bool cond_41912 = binop_x_41907 && binop_y_41911;
                    
                    if (cond_41912) {
                        float a_41914 = mem_43735[i_41899];
                        float c_41916 = mem_param_43722[i_41899 * Rx_41686 +
                                                        i_41902];
                        bool isnan_res_41919;
                        
                        isnan_res_41919 = futrts_isnan32(a_41914);
                        
                        float defunc_1_f_res_41920;
                        
                        if (isnan_res_41919) {
                            defunc_1_f_res_41920 = 0.0F;
                        } else {
                            float b_41915 = mem_43739[i_41902];
                            float defunc_1_f_res_f_res_41921 = a_41914 *
                                  b_41915;
                            
                            defunc_1_f_res_41920 = defunc_1_f_res_f_res_41921;
                        }
                        
                        float defunc_1_op_res_41925 = c_41916 +
                              defunc_1_f_res_41920;
                        
                        mem_param_43722[i_41899 * Rx_41686 + i_41902] =
                            defunc_1_op_res_41925;
                    }
                }
            }
            for (int64_t i_44877 = 0; i_44877 < Ry_41684; i_44877++) {
                for (int64_t i_44878 = 0; i_44878 < Rx_41686; i_44878++) {
                    mem_43749[i_44877 * Rx_41686 + i_44878] =
                        mem_param_43722[i_44877 * Rx_41686 + i_44878];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44867[Ry_41684 * Rx_41686];
            
            for (int32_t i_4 = 0; i_4 < Ry_41684 * Rx_41686; i_4++)
                mem_param_tmp_44867[i_4] = mem_43749[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41684 * Rx_41686; i_5++)
                mem_param_43722[i_5] = mem_param_tmp_44867[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41684 * Rx_41686; i_6++)
            loop_mem_43750[i_6] = mem_param_43722[i_6];
        
        float mem_param_tmp_44859[Ry_41684 * Rx_41686];
        
        for (int32_t i_7 = 0; i_7 < Ry_41684 * Rx_41686; i_7++)
            mem_param_tmp_44859[i_7] = loop_mem_43750[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41684 * Rx_41686; i_8++)
            mem_param_43665[i_8] = mem_param_tmp_44859[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41684 * Rx_41686; i_9++)
        loop_mem_43751[i_9] = mem_param_43665[i_9];
    for (int64_t i_41935 = 0; i_41935 < Ry_41684; i_41935++) {
        int64_t binop_y_41960 = Ty_41683 * i_41935;
        
        for (int64_t i_41937 = 0; i_41937 < tk_div_tx_41688; i_41937++) {
            int64_t binop_y_41958 = Tx_41685 * i_41937;
            int64_t ltid_x_41939 = sext_i32_i64(ltid_pre_44853);
            int64_t ltid_y_41940 = sext_i32_i64(ltid_pre_44854);
            int32_t ltid_flat_41941 = local_tid_44849;
            int64_t k_41959 = ltid_y_41940 + binop_y_41958;
            int64_t i_41961 = ltid_x_41939 + binop_y_41960;
            int64_t gtid_41962 = iii_41703 + i_41961;
            int64_t A_col_idx_41963 = kk_41934 + k_41959;
            bool binop_x_41964 = slt64(gtid_41962, m_28625);
            bool binop_y_41965 = slt64(A_col_idx_41963, i32_res_28638);
            bool cond_41966 = binop_x_41964 && binop_y_41965;
            float A_elem_41967;
            
            if (cond_41966) {
                float A_elem_41969 = ((__global
                                       float *) images_mem_43378)[gtid_41962 *
                                                                  N_28626 +
                                                                  A_col_idx_41963];
                
                A_elem_41967 = A_elem_41969;
            } else {
                A_elem_41967 = 0.0F;
            }
            
            bool cond_41971 = slt64(k_41959, Tk_41687);
            int64_t a_loc_ind_41972;
            
            if (cond_41971) {
                int64_t binop_y_41973 = Tk_41687 * i_41961;
                int64_t loc_fi_41974 = k_41959 + binop_y_41973;
                
                a_loc_ind_41972 = loc_fi_41974;
            } else {
                a_loc_ind_41972 = -1;
            }
            if (sle64(0, a_loc_ind_41972) && slt64(a_loc_ind_41972,
                                                   a_loc_szz_41693)) {
                ((__local float *) mem_43662)[a_loc_ind_41972] = A_elem_41967;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41979 = 0; i_41979 < tk_div_ty_41689; i_41979++) {
        int64_t binop_y_42002 = Ty_41683 * i_41979;
        
        for (int64_t i_41981 = 0; i_41981 < Rx_41686; i_41981++) {
            int64_t binop_y_42004 = Tx_41685 * i_41981;
            int64_t ltid_x_41983 = sext_i32_i64(ltid_pre_44853);
            int64_t ltid_y_41984 = sext_i32_i64(ltid_pre_44854);
            int32_t ltid_flat_41985 = local_tid_44849;
            int64_t k_42003 = ltid_x_41983 + binop_y_42002;
            int64_t j_42005 = ltid_y_41984 + binop_y_42004;
            int64_t gtid_42006 = jjj_41704 + j_42005;
            int64_t B_row_idx_42007 = kk_41934 + k_42003;
            bool binop_x_42008 = slt64(gtid_42006, i32_res_28644);
            bool binop_y_42009 = slt64(B_row_idx_42007, i32_res_28638);
            bool cond_42010 = binop_x_42008 && binop_y_42009;
            float B_elem_42011;
            
            if (cond_42010) {
                float B_elem_42013 = ((__global
                                       float *) mem_43390)[B_row_idx_42007 *
                                                           i32_res_28644 +
                                                           gtid_42006];
                
                B_elem_42011 = B_elem_42013;
            } else {
                B_elem_42011 = 0.0F;
            }
            
            bool cond_42015 = slt64(k_42003, Tk_41687);
            int64_t b_loc_ind_42016;
            
            if (cond_42015) {
                int64_t binop_y_42017 = TxRx_41690 * k_42003;
                int64_t loc_fi_42018 = j_42005 + binop_y_42017;
                
                b_loc_ind_42016 = loc_fi_42018;
            } else {
                b_loc_ind_42016 = -1;
            }
            if (sle64(0, b_loc_ind_42016) && slt64(b_loc_ind_42016,
                                                   b_loc_szz_41695)) {
                ((__local float *) mem_43664)[b_loc_ind_42016] = B_elem_42011;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43817[Ry_41684];
    float mem_43821[Rx_41686];
    float mem_43831[Ry_41684 * Rx_41686];
    float loop_mem_43833[Ry_41684 * Rx_41686];
    float mem_param_43804[Ry_41684 * Rx_41686];
    
    for (int32_t i_10 = 0; i_10 < Ry_41684 * Rx_41686; i_10++)
        mem_param_43804[i_10] = loop_mem_43751[i_10];
    for (int64_t i_42023 = 0; i_42023 < Tk_41687; i_42023++) {
        int64_t cmpop_x_42025 = kk_41934 + i_42023;
        bool cond_42026 = slt64(cmpop_x_42025, i32_res_28638);
        float mem_44424[Ry_41684 * Rx_41686];
        
        if (cond_42026) {
            int64_t binop_y_42064 = TxRx_41690 * i_42023;
            int64_t bytes_43806 = 4 * Ry_41684;
            int64_t bytes_43808 = 4 * Rx_41686;
            int64_t ltid_y_42029 = sext_i32_i64(ltid_pre_44853);
            int64_t ltid_x_42027 = sext_i32_i64(ltid_pre_44854);
            int32_t ltid_flat_42028 = local_tid_44849;
            float mem_43807[Ry_41684];
            float mem_43809[Rx_41686];
            int64_t binop_x_42055 = Ry_41684 * ltid_y_42029;
            
            for (int64_t i_42053 = 0; i_42053 < Ry_41684; i_42053++) {
                int64_t binop_x_42056 = i_42053 + binop_x_42055;
                int64_t binop_y_42057 = Tk_41687 * binop_x_42056;
                int64_t a_loc_ind_42058 = i_42023 + binop_y_42057;
                
                for (int64_t i_44886 = 0; i_44886 < 1; i_44886++) {
                    mem_43807[i_42053 + i_44886] = ((__local
                                                     float *) mem_43662)[a_loc_ind_42058 +
                                                                         i_44886];
                }
            }
            
            int64_t binop_y_42066 = Rx_41686 * ltid_x_42027;
            
            for (int64_t i_42062 = 0; i_42062 < Rx_41686; i_42062++) {
                int64_t binop_x_42065 = i_42062 + binop_y_42064;
                int64_t b_loc_ind_42067 = binop_x_42065 + binop_y_42066;
                
                for (int64_t i_44888 = 0; i_44888 < 1; i_44888++) {
                    mem_43809[i_42062 + i_44888] = ((__local
                                                     float *) mem_43664)[b_loc_ind_42067 +
                                                                         i_44888];
                }
            }
            for (int64_t i_44889 = 0; i_44889 < Ry_41684; i_44889++) {
                mem_43817[i_44889] = mem_43807[i_44889];
            }
            for (int64_t i_44890 = 0; i_44890 < Rx_41686; i_44890++) {
                mem_43821[i_44890] = mem_43809[i_44890];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42074 = sext_i32_i64(ltid_pre_44853);
            int64_t ltid_x_42072 = sext_i32_i64(ltid_pre_44854);
            int32_t ltid_flat_42073 = local_tid_44849;
            int64_t binop_y_42117 = Ry_41684 * ltid_y_42074;
            int64_t binop_y_42121 = Rx_41686 * ltid_x_42072;
            
            for (int64_t i_42111 = 0; i_42111 < Ry_41684; i_42111++) {
                int64_t binop_x_42116 = iii_41703 + i_42111;
                int64_t cmpop_x_42118 = binop_x_42116 + binop_y_42117;
                bool binop_x_42119 = slt64(cmpop_x_42118, m_28625);
                
                for (int64_t i_42114 = 0; i_42114 < Rx_41686; i_42114++) {
                    int64_t binop_x_42120 = jjj_41704 + i_42114;
                    int64_t cmpop_x_42122 = binop_x_42120 + binop_y_42121;
                    bool binop_y_42123 = slt64(cmpop_x_42122, i32_res_28644);
                    bool cond_42124 = binop_x_42119 && binop_y_42123;
                    
                    if (cond_42124) {
                        float a_42126 = mem_43817[i_42111];
                        float c_42128 = mem_param_43804[i_42111 * Rx_41686 +
                                                        i_42114];
                        bool isnan_res_42131;
                        
                        isnan_res_42131 = futrts_isnan32(a_42126);
                        
                        float defunc_1_f_res_42132;
                        
                        if (isnan_res_42131) {
                            defunc_1_f_res_42132 = 0.0F;
                        } else {
                            float b_42127 = mem_43821[i_42114];
                            float defunc_1_f_res_f_res_42133 = a_42126 *
                                  b_42127;
                            
                            defunc_1_f_res_42132 = defunc_1_f_res_f_res_42133;
                        }
                        
                        float defunc_1_op_res_42137 = c_42128 +
                              defunc_1_f_res_42132;
                        
                        mem_param_43804[i_42111 * Rx_41686 + i_42114] =
                            defunc_1_op_res_42137;
                    }
                }
            }
            for (int64_t i_44893 = 0; i_44893 < Ry_41684; i_44893++) {
                for (int64_t i_44894 = 0; i_44894 < Rx_41686; i_44894++) {
                    mem_43831[i_44893 * Rx_41686 + i_44894] =
                        mem_param_43804[i_44893 * Rx_41686 + i_44894];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44895 = 0; i_44895 < Ry_41684; i_44895++) {
                for (int64_t i_44896 = 0; i_44896 < Rx_41686; i_44896++) {
                    mem_44424[i_44895 * Rx_41686 + i_44896] =
                        mem_43831[i_44895 * Rx_41686 + i_44896];
                }
            }
        } else {
            for (int64_t i_44897 = 0; i_44897 < Ry_41684; i_44897++) {
                for (int64_t i_44898 = 0; i_44898 < Rx_41686; i_44898++) {
                    mem_44424[i_44897 * Rx_41686 + i_44898] =
                        mem_param_43804[i_44897 * Rx_41686 + i_44898];
                }
            }
        }
        
        float mem_param_tmp_44883[Ry_41684 * Rx_41686];
        
        for (int32_t i_11 = 0; i_11 < Ry_41684 * Rx_41686; i_11++)
            mem_param_tmp_44883[i_11] = mem_44424[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41684 * Rx_41686; i_12++)
            mem_param_43804[i_12] = mem_param_tmp_44883[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41684 * Rx_41686; i_13++)
        loop_mem_43833[i_13] = mem_param_43804[i_13];
    
    int64_t reg_tile_i_44899 = squot64(sext_i32_i64(local_tid_44849), Tx_41685);
    int64_t reg_tile_i_44900 = sext_i32_i64(local_tid_44849) -
            squot64(sext_i32_i64(local_tid_44849), Tx_41685) * Tx_41685;
    int64_t tile_dim_start_44901 = Ry_41684 * (Ty_41683 * gid_y_41701 +
                                               reg_tile_i_44899);
    int64_t tile_dim_start_44902 = Rx_41686 * (Tx_41685 * gid_x_41700 +
                                               reg_tile_i_44900);
    
    for (int64_t nest_i_44903 = 0; nest_i_44903 < Ry_41684; nest_i_44903++) {
        for (int64_t nest_i_44904 = 0; nest_i_44904 < Rx_41686;
             nest_i_44904++) {
            if (slt64(tile_dim_start_44901 + nest_i_44903, m_28625) &&
                slt64(tile_dim_start_44902 + nest_i_44904, i32_res_28644)) {
                ((__global float *) mem_43836)[(tile_dim_start_44901 +
                                                nest_i_44903) * i32_res_28644 +
                                               (tile_dim_start_44902 +
                                                nest_i_44904)] =
                    loop_mem_43833[nest_i_44903 * Rx_41686 + nest_i_44904];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41683
    #undef Ry_41684
    #undef Tx_41685
    #undef Rx_41686
    #undef Tk_41687
    #undef tk_div_tx_41688
    #undef tk_div_ty_41689
    #undef TxRx_41690
    #undef TyRy_41691
    #undef a_loc_szz_41693
    #undef b_loc_szz_41695
}
__kernel void mainMagnitudezisegmap_intragroup_42151(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43894_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43885_backing_aligned_1,
                                                     int64_t m_28625,
                                                     int64_t i32_res_28644,
                                                     int64_t num_groups_y_42149,
                                                     int64_t num_whole_tiles_42167,
                                                     int64_t residual_input_42294,
                                                     unsigned char cond_42295,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43846,
                                                     __global
                                                     unsigned char *mem_43875,
                                                     __global
                                                     unsigned char *mem_43902)
{
    #define tile_sizze_42146 (mainMagnitudezitile_sizze_42145)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43894_backing_5 = (__local volatile
                                                           char *) mem_43894_backing_aligned_0;
    __local volatile char *restrict mem_43885_backing_0 = (__local volatile
                                                           char *) mem_43885_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44980;
    int32_t local_tid_44981;
    int64_t group_sizze_44984;
    int32_t wave_sizze_44983;
    int32_t group_tid_44982;
    
    global_tid_44980 = get_global_id(0);
    local_tid_44981 = get_local_id(0);
    group_sizze_44984 = get_local_size(0);
    wave_sizze_44983 = LOCKSTEP_WIDTH;
    group_tid_44982 = get_group_id(0);
    
    int32_t gid_flat_42151;
    
    gid_flat_42151 = group_tid_44982;
    
    int32_t ltid_pre_44985;
    
    ltid_pre_44985 = squot32(local_tid_44981, sext_i64_i32(tile_sizze_42146));
    
    int32_t ltid_pre_44986;
    
    ltid_pre_44986 = local_tid_44981 - squot32(local_tid_44981,
                                               sext_i64_i32(tile_sizze_42146)) *
        sext_i64_i32(tile_sizze_42146);
    
    int64_t gid_x_42143;
    
    gid_x_42143 = squot64(sext_i32_i64(group_tid_44982), num_groups_y_42149);
    
    int64_t gid_y_42144;
    
    gid_y_42144 = sext_i32_i64(group_tid_44982) -
        squot64(sext_i32_i64(group_tid_44982), num_groups_y_42149) *
        num_groups_y_42149;
    
    float mem_43880[1];
    int64_t ltid_x_42168 = sext_i32_i64(ltid_pre_44985);
    int64_t ltid_y_42169 = sext_i32_i64(ltid_pre_44986);
    int32_t ltid_flat_42170 = local_tid_44981;
    
    if (slt64(ltid_x_42168, tile_sizze_42146) && slt64(ltid_y_42169,
                                                       tile_sizze_42146)) {
        mem_43880[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42253 = gid_x_42143 * tile_sizze_42146;
    int64_t binop_x_42268 = gid_y_42144 * tile_sizze_42146;
    __local char *mem_43885;
    
    mem_43885 = (__local char *) mem_43885_backing_0;
    
    float accs_mem_43890[1];
    float mem_param_43881[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43881[i_1] = mem_43880[i_1];
    for (int64_t tile_id_42179 = 0; tile_id_42179 < num_whole_tiles_42167;
         tile_id_42179++) {
        int64_t binop_x_42251 = tile_sizze_42146 * tile_id_42179;
        int64_t ltid_x_42180 = sext_i32_i64(ltid_pre_44985);
        int64_t ltid_y_42181 = sext_i32_i64(ltid_pre_44986);
        int32_t ltid_flat_42182 = local_tid_44981;
        int64_t j_42252 = ltid_y_42181 + binop_x_42251;
        int64_t gtid_42254 = ltid_x_42180 + binop_x_42253;
        bool binop_x_42259 = slt64(j_42252, i32_res_28644);
        bool binop_y_42260 = slt64(gtid_42254, m_28625);
        bool cond_42261 = binop_x_42259 && binop_y_42260;
        float pre_42262;
        
        if (cond_42261) {
            float x_42263 = ((__global
                              float *) defunc_3_map_res_mem_43846)[gtid_42254 *
                                                                   i32_res_28644 +
                                                                   j_42252];
            
            pre_42262 = x_42263;
        } else {
            pre_42262 = 0.0F;
        }
        ((__local float *) mem_43885)[ltid_x_42180 * tile_sizze_42146 +
                                      ltid_y_42181] = pre_42262;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43889[1];
        int64_t ltid_x_42212 = sext_i32_i64(ltid_pre_44985);
        int64_t ltid_y_42213 = sext_i32_i64(ltid_pre_44986);
        int32_t ltid_flat_42214 = local_tid_44981;
        int64_t gtid_42267 = ltid_x_42212 + binop_x_42253;
        int64_t gtid_42269 = ltid_y_42213 + binop_x_42268;
        float acc_42272 = mem_param_43881[0];
        bool binop_x_42276 = slt64(gtid_42267, m_28625);
        bool binop_y_42277 = slt64(gtid_42269, i32_res_28644);
        bool cond_42278 = binop_x_42276 && binop_y_42277;
        float acc_42279;
        
        if (cond_42278) {
            float x_42280;
            float redout_43333 = acc_42272;
            
            for (int64_t i_43334 = 0; i_43334 < tile_sizze_42146; i_43334++) {
                float x_42284 = ((__local float *) mem_43885)[ltid_x_42212 *
                                                              tile_sizze_42146 +
                                                              i_43334];
                int64_t slice_43366 = binop_x_42251 + i_43334;
                float x_42285 = ((__global float *) mem_43875)[slice_43366 *
                                                               (i32_res_28644 *
                                                                m_28625) +
                                                               gtid_42267 *
                                                               i32_res_28644 +
                                                               gtid_42269];
                float defunc_1_f_res_42286 = x_42284 * x_42285;
                float defunc_1_op_res_42283 = defunc_1_f_res_42286 +
                      redout_43333;
                float redout_tmp_44989 = defunc_1_op_res_42283;
                
                redout_43333 = redout_tmp_44989;
            }
            x_42280 = redout_43333;
            acc_42279 = x_42280;
        } else {
            acc_42279 = acc_42272;
        }
        mem_43889[0] = acc_42279;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44987[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44987[i_2] = mem_43889[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43881[i_3] = mem_param_tmp_44987[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43890[i_4] = mem_param_43881[i_4];
    
    __local char *mem_43894;
    
    mem_43894 = (__local char *) mem_43894_backing_5;
    
    float mem_43898[1];
    float mem_44438[1];
    
    if (cond_42295) {
        mem_44438[0] = accs_mem_43890[0];
    } else {
        int64_t binop_x_42368 = tile_sizze_42146 * num_whole_tiles_42167;
        int64_t ltid_x_42296 = sext_i32_i64(ltid_pre_44985);
        int64_t ltid_y_42297 = sext_i32_i64(ltid_pre_44986);
        int32_t ltid_flat_42298 = local_tid_44981;
        int64_t j_42369 = ltid_y_42297 + binop_x_42368;
        int64_t gtid_42371 = binop_x_42253 + ltid_x_42296;
        bool binop_x_42376 = slt64(j_42369, i32_res_28644);
        bool binop_y_42377 = slt64(gtid_42371, m_28625);
        bool cond_42378 = binop_x_42376 && binop_y_42377;
        float pre_42379;
        
        if (cond_42378) {
            float x_42380 = ((__global
                              float *) defunc_3_map_res_mem_43846)[gtid_42371 *
                                                                   i32_res_28644 +
                                                                   j_42369];
            
            pre_42379 = x_42380;
        } else {
            pre_42379 = 0.0F;
        }
        ((__local float *) mem_43894)[ltid_x_42296 * tile_sizze_42146 +
                                      ltid_y_42297] = pre_42379;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42329 = sext_i32_i64(ltid_pre_44985);
        int64_t ltid_y_42330 = sext_i32_i64(ltid_pre_44986);
        int32_t ltid_flat_42331 = local_tid_44981;
        int64_t gtid_42385 = binop_x_42253 + ltid_x_42329;
        int64_t gtid_42387 = binop_x_42268 + ltid_y_42330;
        float acc_42390 = accs_mem_43890[0];
        bool binop_x_42394 = slt64(gtid_42385, m_28625);
        bool binop_y_42395 = slt64(gtid_42387, i32_res_28644);
        bool cond_42396 = binop_x_42394 && binop_y_42395;
        float acc_42397;
        
        if (cond_42396) {
            float x_42398;
            float redout_43335 = acc_42390;
            
            for (int64_t i_43336 = 0; i_43336 < residual_input_42294;
                 i_43336++) {
                float x_42402 = ((__local float *) mem_43894)[ltid_x_42329 *
                                                              tile_sizze_42146 +
                                                              i_43336];
                int64_t slice_43367 = binop_x_42368 + i_43336;
                float x_42403 = ((__global float *) mem_43875)[slice_43367 *
                                                               (i32_res_28644 *
                                                                m_28625) +
                                                               gtid_42385 *
                                                               i32_res_28644 +
                                                               gtid_42387];
                float defunc_1_f_res_42404 = x_42402 * x_42403;
                float defunc_1_op_res_42401 = defunc_1_f_res_42404 +
                      redout_43335;
                float redout_tmp_44990 = defunc_1_op_res_42401;
                
                redout_43335 = redout_tmp_44990;
            }
            x_42398 = redout_43335;
            acc_42397 = x_42398;
        } else {
            acc_42397 = acc_42390;
        }
        mem_43898[0] = acc_42397;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44438[0] = mem_43898[0];
    }
    
    int64_t thread_out_index_44991 = gid_x_42143 * tile_sizze_42146 +
            sext_i32_i64(ltid_pre_44985);
    int64_t thread_out_index_44992 = gid_y_42144 * tile_sizze_42146 +
            sext_i32_i64(ltid_pre_44986);
    
    if (slt64(thread_out_index_44991, m_28625) && slt64(thread_out_index_44992,
                                                        i32_res_28644)) {
        ((__global float *) mem_43902)[thread_out_index_44991 * i32_res_28644 +
                                       thread_out_index_44992] = mem_44438[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42146
}
__kernel void mainMagnitudezisegmap_intragroup_42443(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43954_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43952_backing_aligned_1,
                                                     int64_t N_28624,
                                                     int64_t m_28625,
                                                     int64_t i32_res_28644,
                                                     int64_t gridDim_x_42437,
                                                     int64_t full_tiles_42468,
                                                     int64_t kk_42671, __global
                                                     unsigned char *defunc_4_map_res_mem_43912,
                                                     __global
                                                     unsigned char *mem_43936,
                                                     __global
                                                     unsigned char *mem_44126)
{
    #define Ty_42424 (mainMagnitudeziTy_42421)
    #define Ry_42425 (mainMagnitudeziRy_42423)
    #define Tx_42426 (mainMagnitudeziTx_42420)
    #define Rx_42427 (mainMagnitudeziRx_42422)
    #define Tk_42428 (mainMagnitudeziTk_42419)
    #define tk_div_tx_42429 (sdiv_up64(mainMagnitudeziTk_42419, mainMagnitudeziTx_42420))
    #define tk_div_ty_42430 (sdiv_up64(mainMagnitudeziTk_42419, mainMagnitudeziTy_42421))
    #define TxRx_42431 (mainMagnitudeziTx_42420 * mainMagnitudeziRx_42422)
    #define TyRy_42432 (mainMagnitudeziTy_42421 * mainMagnitudeziRy_42423)
    #define a_loc_szz_42434 (mainMagnitudeziTk_42419 * (mainMagnitudeziTy_42421 * mainMagnitudeziRy_42423))
    #define b_loc_szz_42436 (mainMagnitudeziRx_42422 * (mainMagnitudeziTx_42420 * mainMagnitudeziTk_42419))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43954_backing_1 = (__local volatile
                                                           char *) mem_43954_backing_aligned_0;
    __local volatile char *restrict mem_43952_backing_0 = (__local volatile
                                                           char *) mem_43952_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45068;
    int32_t local_tid_45069;
    int64_t group_sizze_45072;
    int32_t wave_sizze_45071;
    int32_t group_tid_45070;
    
    global_tid_45068 = get_global_id(0);
    local_tid_45069 = get_local_id(0);
    group_sizze_45072 = get_local_size(0);
    wave_sizze_45071 = LOCKSTEP_WIDTH;
    group_tid_45070 = get_group_id(0);
    
    int32_t gid_flat_42443;
    
    gid_flat_42443 = group_tid_45070;
    
    int32_t ltid_pre_45073;
    
    ltid_pre_45073 = squot32(local_tid_45069, sext_i64_i32(Tx_42426));
    
    int32_t ltid_pre_45074;
    
    ltid_pre_45074 = local_tid_45069 - squot32(local_tid_45069,
                                               sext_i64_i32(Tx_42426)) *
        sext_i64_i32(Tx_42426);
    
    int64_t gid_y_42442;
    
    gid_y_42442 = squot64(sext_i32_i64(group_tid_45070), gridDim_x_42437);
    
    int64_t gid_x_42441;
    
    gid_x_42441 = sext_i32_i64(group_tid_45070) -
        squot64(sext_i32_i64(group_tid_45070), gridDim_x_42437) *
        gridDim_x_42437;
    
    int64_t iii_42444;
    
    iii_42444 = TyRy_42432 * gid_y_42442;
    
    int64_t jjj_42445 = TxRx_42431 * gid_x_42441;
    float mem_43950[Ry_42425 * Rx_42427];
    int64_t ltid_y_42448 = sext_i32_i64(ltid_pre_45073);
    int64_t ltid_x_42446 = sext_i32_i64(ltid_pre_45074);
    int32_t ltid_flat_42447 = local_tid_45069;
    float mem_43941[Ry_42425 * Rx_42427];
    
    for (int64_t i_42459 = 0; i_42459 < Ry_42425; i_42459++) {
        for (int64_t i_42462 = 0; i_42462 < Rx_42427; i_42462++) {
            mem_43941[i_42459 * Rx_42427 + i_42462] = 0.0F;
        }
    }
    for (int64_t i_45077 = 0; i_45077 < Ry_42425; i_45077++) {
        for (int64_t i_45078 = 0; i_45078 < Rx_42427; i_45078++) {
            mem_43950[i_45077 * Rx_42427 + i_45078] = mem_43941[i_45077 *
                                                                Rx_42427 +
                                                                i_45078];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43952;
    
    mem_43952 = (__local char *) mem_43952_backing_0;
    
    __local char *mem_43954;
    
    mem_43954 = (__local char *) mem_43954_backing_1;
    
    float mem_44025[Ry_42425];
    float mem_44029[Rx_42427];
    float loop_mem_44041[Ry_42425 * Rx_42427];
    float mem_param_43955[Ry_42425 * Rx_42427];
    
    for (int32_t i_2 = 0; i_2 < Ry_42425 * Rx_42427; i_2++)
        mem_param_43955[i_2] = mem_43950[i_2];
    for (int64_t i_42469 = 0; i_42469 < full_tiles_42468; i_42469++) {
        int64_t kk_42473 = Tk_42428 * i_42469;
        
        for (int64_t i_42474 = 0; i_42474 < Ry_42425; i_42474++) {
            int64_t binop_y_42497 = Ty_42424 * i_42474;
            
            for (int64_t i_42476 = 0; i_42476 < tk_div_tx_42429; i_42476++) {
                int64_t binop_y_42495 = Tx_42426 * i_42476;
                int64_t ltid_x_42478 = sext_i32_i64(ltid_pre_45073);
                int64_t ltid_y_42479 = sext_i32_i64(ltid_pre_45074);
                int32_t ltid_flat_42480 = local_tid_45069;
                int64_t k_42496 = ltid_y_42479 + binop_y_42495;
                int64_t i_42498 = ltid_x_42478 + binop_y_42497;
                int64_t gtid_42499 = iii_42444 + i_42498;
                int64_t A_col_idx_42500 = kk_42473 + k_42496;
                bool cond_42501 = slt64(gtid_42499, m_28625);
                float A_elem_42502;
                
                if (cond_42501) {
                    float A_elem_42504 = ((__global
                                           float *) defunc_4_map_res_mem_43912)[gtid_42499 *
                                                                                i32_res_28644 +
                                                                                A_col_idx_42500];
                    
                    A_elem_42502 = A_elem_42504;
                } else {
                    A_elem_42502 = 0.0F;
                }
                
                bool cond_42506 = slt64(k_42496, Tk_42428);
                int64_t a_loc_ind_42507;
                
                if (cond_42506) {
                    int64_t binop_y_42508 = Tk_42428 * i_42498;
                    int64_t loc_fi_42509 = k_42496 + binop_y_42508;
                    
                    a_loc_ind_42507 = loc_fi_42509;
                } else {
                    a_loc_ind_42507 = -1;
                }
                if (sle64(0, a_loc_ind_42507) && slt64(a_loc_ind_42507,
                                                       a_loc_szz_42434)) {
                    ((__local float *) mem_43952)[a_loc_ind_42507] =
                        A_elem_42502;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42514 = 0; i_42514 < tk_div_ty_42430; i_42514++) {
            int64_t binop_y_42535 = Ty_42424 * i_42514;
            
            for (int64_t i_42516 = 0; i_42516 < Rx_42427; i_42516++) {
                int64_t binop_y_42537 = Tx_42426 * i_42516;
                int64_t ltid_x_42518 = sext_i32_i64(ltid_pre_45073);
                int64_t ltid_y_42519 = sext_i32_i64(ltid_pre_45074);
                int32_t ltid_flat_42520 = local_tid_45069;
                int64_t k_42536 = ltid_x_42518 + binop_y_42535;
                int64_t j_42538 = ltid_y_42519 + binop_y_42537;
                int64_t gtid_42539 = jjj_42445 + j_42538;
                int64_t B_row_idx_42540 = kk_42473 + k_42536;
                bool cond_42541 = slt64(gtid_42539, N_28624);
                float B_elem_42542;
                
                if (cond_42541) {
                    float B_elem_42544 = ((__global
                                           float *) mem_43936)[B_row_idx_42540 *
                                                               N_28624 +
                                                               gtid_42539];
                    
                    B_elem_42542 = B_elem_42544;
                } else {
                    B_elem_42542 = 0.0F;
                }
                
                bool cond_42546 = slt64(k_42536, Tk_42428);
                int64_t b_loc_ind_42547;
                
                if (cond_42546) {
                    int64_t binop_y_42548 = TxRx_42431 * k_42536;
                    int64_t loc_fi_42549 = j_42538 + binop_y_42548;
                    
                    b_loc_ind_42547 = loc_fi_42549;
                } else {
                    b_loc_ind_42547 = -1;
                }
                if (sle64(0, b_loc_ind_42547) && slt64(b_loc_ind_42547,
                                                       b_loc_szz_42436)) {
                    ((__local float *) mem_43954)[b_loc_ind_42547] =
                        B_elem_42542;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44040[Ry_42425 * Rx_42427];
        float mem_param_44012[Ry_42425 * Rx_42427];
        
        for (int32_t i_3 = 0; i_3 < Ry_42425 * Rx_42427; i_3++)
            mem_param_44012[i_3] = mem_param_43955[i_3];
        for (int64_t i_42554 = 0; i_42554 < Tk_42428; i_42554++) {
            int64_t binop_y_42593 = TxRx_42431 * i_42554;
            int64_t ltid_y_42558 = sext_i32_i64(ltid_pre_45073);
            int64_t ltid_x_42556 = sext_i32_i64(ltid_pre_45074);
            int32_t ltid_flat_42557 = local_tid_45069;
            float mem_44015[Ry_42425];
            float mem_44017[Rx_42427];
            int64_t binop_x_42584 = Ry_42425 * ltid_y_42558;
            
            for (int64_t i_42582 = 0; i_42582 < Ry_42425; i_42582++) {
                int64_t binop_x_42585 = i_42582 + binop_x_42584;
                int64_t binop_y_42586 = Tk_42428 * binop_x_42585;
                int64_t a_loc_ind_42587 = i_42554 + binop_y_42586;
                
                for (int64_t i_45090 = 0; i_45090 < 1; i_45090++) {
                    mem_44015[i_42582 + i_45090] = ((__local
                                                     float *) mem_43952)[a_loc_ind_42587 +
                                                                         i_45090];
                }
            }
            
            int64_t binop_y_42595 = Rx_42427 * ltid_x_42556;
            
            for (int64_t i_42591 = 0; i_42591 < Rx_42427; i_42591++) {
                int64_t binop_x_42594 = i_42591 + binop_y_42593;
                int64_t b_loc_ind_42596 = binop_x_42594 + binop_y_42595;
                
                for (int64_t i_45092 = 0; i_45092 < 1; i_45092++) {
                    mem_44017[i_42591 + i_45092] = ((__local
                                                     float *) mem_43954)[b_loc_ind_42596 +
                                                                         i_45092];
                }
            }
            for (int64_t i_45093 = 0; i_45093 < Ry_42425; i_45093++) {
                mem_44025[i_45093] = mem_44015[i_45093];
            }
            for (int64_t i_45094 = 0; i_45094 < Rx_42427; i_45094++) {
                mem_44029[i_45094] = mem_44017[i_45094];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44039[Ry_42425 * Rx_42427];
            int64_t ltid_y_42603 = sext_i32_i64(ltid_pre_45073);
            int64_t ltid_x_42601 = sext_i32_i64(ltid_pre_45074);
            int32_t ltid_flat_42602 = local_tid_45069;
            int64_t binop_y_42644 = Ry_42425 * ltid_y_42603;
            int64_t binop_y_42648 = Rx_42427 * ltid_x_42601;
            
            for (int64_t i_42638 = 0; i_42638 < Ry_42425; i_42638++) {
                int64_t binop_x_42643 = iii_42444 + i_42638;
                int64_t cmpop_x_42645 = binop_x_42643 + binop_y_42644;
                bool binop_x_42646 = slt64(cmpop_x_42645, m_28625);
                
                for (int64_t i_42641 = 0; i_42641 < Rx_42427; i_42641++) {
                    int64_t binop_x_42647 = jjj_42445 + i_42641;
                    int64_t cmpop_x_42649 = binop_x_42647 + binop_y_42648;
                    bool binop_y_42650 = slt64(cmpop_x_42649, N_28624);
                    bool cond_42651 = binop_x_42646 && binop_y_42650;
                    
                    if (cond_42651) {
                        float a_42653 = mem_44025[i_42638];
                        float b_42654 = mem_44029[i_42641];
                        float c_42655 = mem_param_44012[i_42638 * Rx_42427 +
                                                        i_42641];
                        float defunc_1_f_res_42658 = a_42653 * b_42654;
                        float defunc_1_op_res_42662 = c_42655 +
                              defunc_1_f_res_42658;
                        
                        mem_param_44012[i_42638 * Rx_42427 + i_42641] =
                            defunc_1_op_res_42662;
                    }
                }
            }
            for (int64_t i_45097 = 0; i_45097 < Ry_42425; i_45097++) {
                for (int64_t i_45098 = 0; i_45098 < Rx_42427; i_45098++) {
                    mem_44039[i_45097 * Rx_42427 + i_45098] =
                        mem_param_44012[i_45097 * Rx_42427 + i_45098];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45087[Ry_42425 * Rx_42427];
            
            for (int32_t i_4 = 0; i_4 < Ry_42425 * Rx_42427; i_4++)
                mem_param_tmp_45087[i_4] = mem_44039[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42425 * Rx_42427; i_5++)
                mem_param_44012[i_5] = mem_param_tmp_45087[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42425 * Rx_42427; i_6++)
            loop_mem_44040[i_6] = mem_param_44012[i_6];
        
        float mem_param_tmp_45079[Ry_42425 * Rx_42427];
        
        for (int32_t i_7 = 0; i_7 < Ry_42425 * Rx_42427; i_7++)
            mem_param_tmp_45079[i_7] = loop_mem_44040[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42425 * Rx_42427; i_8++)
            mem_param_43955[i_8] = mem_param_tmp_45079[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42425 * Rx_42427; i_9++)
        loop_mem_44041[i_9] = mem_param_43955[i_9];
    for (int64_t i_42672 = 0; i_42672 < Ry_42425; i_42672++) {
        int64_t binop_y_42697 = Ty_42424 * i_42672;
        
        for (int64_t i_42674 = 0; i_42674 < tk_div_tx_42429; i_42674++) {
            int64_t binop_y_42695 = Tx_42426 * i_42674;
            int64_t ltid_x_42676 = sext_i32_i64(ltid_pre_45073);
            int64_t ltid_y_42677 = sext_i32_i64(ltid_pre_45074);
            int32_t ltid_flat_42678 = local_tid_45069;
            int64_t k_42696 = ltid_y_42677 + binop_y_42695;
            int64_t i_42698 = ltid_x_42676 + binop_y_42697;
            int64_t gtid_42699 = iii_42444 + i_42698;
            int64_t A_col_idx_42700 = kk_42671 + k_42696;
            bool binop_x_42701 = slt64(gtid_42699, m_28625);
            bool binop_y_42702 = slt64(A_col_idx_42700, i32_res_28644);
            bool cond_42703 = binop_x_42701 && binop_y_42702;
            float A_elem_42704;
            
            if (cond_42703) {
                float A_elem_42706 = ((__global
                                       float *) defunc_4_map_res_mem_43912)[gtid_42699 *
                                                                            i32_res_28644 +
                                                                            A_col_idx_42700];
                
                A_elem_42704 = A_elem_42706;
            } else {
                A_elem_42704 = 0.0F;
            }
            
            bool cond_42708 = slt64(k_42696, Tk_42428);
            int64_t a_loc_ind_42709;
            
            if (cond_42708) {
                int64_t binop_y_42710 = Tk_42428 * i_42698;
                int64_t loc_fi_42711 = k_42696 + binop_y_42710;
                
                a_loc_ind_42709 = loc_fi_42711;
            } else {
                a_loc_ind_42709 = -1;
            }
            if (sle64(0, a_loc_ind_42709) && slt64(a_loc_ind_42709,
                                                   a_loc_szz_42434)) {
                ((__local float *) mem_43952)[a_loc_ind_42709] = A_elem_42704;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42716 = 0; i_42716 < tk_div_ty_42430; i_42716++) {
        int64_t binop_y_42739 = Ty_42424 * i_42716;
        
        for (int64_t i_42718 = 0; i_42718 < Rx_42427; i_42718++) {
            int64_t binop_y_42741 = Tx_42426 * i_42718;
            int64_t ltid_x_42720 = sext_i32_i64(ltid_pre_45073);
            int64_t ltid_y_42721 = sext_i32_i64(ltid_pre_45074);
            int32_t ltid_flat_42722 = local_tid_45069;
            int64_t k_42740 = ltid_x_42720 + binop_y_42739;
            int64_t j_42742 = ltid_y_42721 + binop_y_42741;
            int64_t gtid_42743 = jjj_42445 + j_42742;
            int64_t B_row_idx_42744 = kk_42671 + k_42740;
            bool binop_x_42745 = slt64(gtid_42743, N_28624);
            bool binop_y_42746 = slt64(B_row_idx_42744, i32_res_28644);
            bool cond_42747 = binop_x_42745 && binop_y_42746;
            float B_elem_42748;
            
            if (cond_42747) {
                float B_elem_42750 = ((__global
                                       float *) mem_43936)[B_row_idx_42744 *
                                                           N_28624 +
                                                           gtid_42743];
                
                B_elem_42748 = B_elem_42750;
            } else {
                B_elem_42748 = 0.0F;
            }
            
            bool cond_42752 = slt64(k_42740, Tk_42428);
            int64_t b_loc_ind_42753;
            
            if (cond_42752) {
                int64_t binop_y_42754 = TxRx_42431 * k_42740;
                int64_t loc_fi_42755 = j_42742 + binop_y_42754;
                
                b_loc_ind_42753 = loc_fi_42755;
            } else {
                b_loc_ind_42753 = -1;
            }
            if (sle64(0, b_loc_ind_42753) && slt64(b_loc_ind_42753,
                                                   b_loc_szz_42436)) {
                ((__local float *) mem_43954)[b_loc_ind_42753] = B_elem_42748;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44107[Ry_42425];
    float mem_44111[Rx_42427];
    float mem_44121[Ry_42425 * Rx_42427];
    float loop_mem_44123[Ry_42425 * Rx_42427];
    float mem_param_44094[Ry_42425 * Rx_42427];
    
    for (int32_t i_10 = 0; i_10 < Ry_42425 * Rx_42427; i_10++)
        mem_param_44094[i_10] = loop_mem_44041[i_10];
    for (int64_t i_42760 = 0; i_42760 < Tk_42428; i_42760++) {
        int64_t cmpop_x_42762 = kk_42671 + i_42760;
        bool cond_42763 = slt64(cmpop_x_42762, i32_res_28644);
        float mem_44454[Ry_42425 * Rx_42427];
        
        if (cond_42763) {
            int64_t binop_y_42801 = TxRx_42431 * i_42760;
            int64_t bytes_44096 = 4 * Ry_42425;
            int64_t bytes_44098 = 4 * Rx_42427;
            int64_t ltid_y_42766 = sext_i32_i64(ltid_pre_45073);
            int64_t ltid_x_42764 = sext_i32_i64(ltid_pre_45074);
            int32_t ltid_flat_42765 = local_tid_45069;
            float mem_44097[Ry_42425];
            float mem_44099[Rx_42427];
            int64_t binop_x_42792 = Ry_42425 * ltid_y_42766;
            
            for (int64_t i_42790 = 0; i_42790 < Ry_42425; i_42790++) {
                int64_t binop_x_42793 = i_42790 + binop_x_42792;
                int64_t binop_y_42794 = Tk_42428 * binop_x_42793;
                int64_t a_loc_ind_42795 = i_42760 + binop_y_42794;
                
                for (int64_t i_45106 = 0; i_45106 < 1; i_45106++) {
                    mem_44097[i_42790 + i_45106] = ((__local
                                                     float *) mem_43952)[a_loc_ind_42795 +
                                                                         i_45106];
                }
            }
            
            int64_t binop_y_42803 = Rx_42427 * ltid_x_42764;
            
            for (int64_t i_42799 = 0; i_42799 < Rx_42427; i_42799++) {
                int64_t binop_x_42802 = i_42799 + binop_y_42801;
                int64_t b_loc_ind_42804 = binop_x_42802 + binop_y_42803;
                
                for (int64_t i_45108 = 0; i_45108 < 1; i_45108++) {
                    mem_44099[i_42799 + i_45108] = ((__local
                                                     float *) mem_43954)[b_loc_ind_42804 +
                                                                         i_45108];
                }
            }
            for (int64_t i_45109 = 0; i_45109 < Ry_42425; i_45109++) {
                mem_44107[i_45109] = mem_44097[i_45109];
            }
            for (int64_t i_45110 = 0; i_45110 < Rx_42427; i_45110++) {
                mem_44111[i_45110] = mem_44099[i_45110];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42811 = sext_i32_i64(ltid_pre_45073);
            int64_t ltid_x_42809 = sext_i32_i64(ltid_pre_45074);
            int32_t ltid_flat_42810 = local_tid_45069;
            int64_t binop_y_42852 = Ry_42425 * ltid_y_42811;
            int64_t binop_y_42856 = Rx_42427 * ltid_x_42809;
            
            for (int64_t i_42846 = 0; i_42846 < Ry_42425; i_42846++) {
                int64_t binop_x_42851 = iii_42444 + i_42846;
                int64_t cmpop_x_42853 = binop_x_42851 + binop_y_42852;
                bool binop_x_42854 = slt64(cmpop_x_42853, m_28625);
                
                for (int64_t i_42849 = 0; i_42849 < Rx_42427; i_42849++) {
                    int64_t binop_x_42855 = jjj_42445 + i_42849;
                    int64_t cmpop_x_42857 = binop_x_42855 + binop_y_42856;
                    bool binop_y_42858 = slt64(cmpop_x_42857, N_28624);
                    bool cond_42859 = binop_x_42854 && binop_y_42858;
                    
                    if (cond_42859) {
                        float a_42861 = mem_44107[i_42846];
                        float b_42862 = mem_44111[i_42849];
                        float c_42863 = mem_param_44094[i_42846 * Rx_42427 +
                                                        i_42849];
                        float defunc_1_f_res_42866 = a_42861 * b_42862;
                        float defunc_1_op_res_42870 = c_42863 +
                              defunc_1_f_res_42866;
                        
                        mem_param_44094[i_42846 * Rx_42427 + i_42849] =
                            defunc_1_op_res_42870;
                    }
                }
            }
            for (int64_t i_45113 = 0; i_45113 < Ry_42425; i_45113++) {
                for (int64_t i_45114 = 0; i_45114 < Rx_42427; i_45114++) {
                    mem_44121[i_45113 * Rx_42427 + i_45114] =
                        mem_param_44094[i_45113 * Rx_42427 + i_45114];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45115 = 0; i_45115 < Ry_42425; i_45115++) {
                for (int64_t i_45116 = 0; i_45116 < Rx_42427; i_45116++) {
                    mem_44454[i_45115 * Rx_42427 + i_45116] =
                        mem_44121[i_45115 * Rx_42427 + i_45116];
                }
            }
        } else {
            for (int64_t i_45117 = 0; i_45117 < Ry_42425; i_45117++) {
                for (int64_t i_45118 = 0; i_45118 < Rx_42427; i_45118++) {
                    mem_44454[i_45117 * Rx_42427 + i_45118] =
                        mem_param_44094[i_45117 * Rx_42427 + i_45118];
                }
            }
        }
        
        float mem_param_tmp_45103[Ry_42425 * Rx_42427];
        
        for (int32_t i_11 = 0; i_11 < Ry_42425 * Rx_42427; i_11++)
            mem_param_tmp_45103[i_11] = mem_44454[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42425 * Rx_42427; i_12++)
            mem_param_44094[i_12] = mem_param_tmp_45103[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42425 * Rx_42427; i_13++)
        loop_mem_44123[i_13] = mem_param_44094[i_13];
    
    int64_t reg_tile_i_45119 = squot64(sext_i32_i64(local_tid_45069), Tx_42426);
    int64_t reg_tile_i_45120 = sext_i32_i64(local_tid_45069) -
            squot64(sext_i32_i64(local_tid_45069), Tx_42426) * Tx_42426;
    int64_t tile_dim_start_45121 = Ry_42425 * (Ty_42424 * gid_y_42442 +
                                               reg_tile_i_45119);
    int64_t tile_dim_start_45122 = Rx_42427 * (Tx_42426 * gid_x_42441 +
                                               reg_tile_i_45120);
    
    for (int64_t nest_i_45123 = 0; nest_i_45123 < Ry_42425; nest_i_45123++) {
        for (int64_t nest_i_45124 = 0; nest_i_45124 < Rx_42427;
             nest_i_45124++) {
            if (slt64(tile_dim_start_45121 + nest_i_45123, m_28625) &&
                slt64(tile_dim_start_45122 + nest_i_45124, N_28624)) {
                ((__global float *) mem_44126)[(tile_dim_start_45121 +
                                                nest_i_45123) * N_28624 +
                                               (tile_dim_start_45122 +
                                                nest_i_45124)] =
                    loop_mem_44123[nest_i_45123 * Rx_42427 + nest_i_45124];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42424
    #undef Ry_42425
    #undef Tx_42426
    #undef Rx_42427
    #undef Tk_42428
    #undef tk_div_tx_42429
    #undef tk_div_ty_42430
    #undef TxRx_42431
    #undef TyRy_42432
    #undef a_loc_szz_42434
    #undef b_loc_szz_42436
}
__kernel void mainMagnitudezisegmap_intragroup_42877(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44196_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44189_backing_aligned_1,
                                                     int64_t m_28625,
                                                     int32_t n_28629,
                                                     float hfrac_28631,
                                                     int64_t i32_res_28638,
                                                     int32_t k2p2_28640,
                                                     int64_t num_whole_tiles_42885,
                                                     int64_t residual_input_43006,
                                                     unsigned char cond_43007,
                                                     __global
                                                     unsigned char *mem_44178,
                                                     __global
                                                     unsigned char *mem_44181,
                                                     __global
                                                     unsigned char *mem_44209,
                                                     __global
                                                     unsigned char *mem_44211,
                                                     __global
                                                     unsigned char *mem_44213)
{
    #define segmap_group_sizze_36381 (mainMagnitudezisegmap_group_sizze_36350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44196_backing_5 = (__local volatile
                                                           char *) mem_44196_backing_aligned_0;
    __local volatile char *restrict mem_44189_backing_0 = (__local volatile
                                                           char *) mem_44189_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45292;
    int32_t local_tid_45293;
    int64_t group_sizze_45296;
    int32_t wave_sizze_45295;
    int32_t group_tid_45294;
    
    global_tid_45292 = get_global_id(0);
    local_tid_45293 = get_local_id(0);
    group_sizze_45296 = get_local_size(0);
    wave_sizze_45295 = LOCKSTEP_WIDTH;
    group_tid_45294 = get_group_id(0);
    
    int32_t gid_flat_42877;
    
    gid_flat_42877 = group_tid_45294;
    
    int32_t ltid_pre_45297;
    
    ltid_pre_45297 = local_tid_45293;
    
    int64_t gid_42876;
    
    gid_42876 = sext_i32_i64(group_tid_45294);
    
    float mem_44185[1];
    int64_t ltid_42886 = sext_i32_i64(ltid_pre_45297);
    int32_t ltid_flat_42887 = local_tid_45293;
    
    mem_44185[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42972 = segmap_group_sizze_36381 * gid_42876;
    __local char *mem_44189;
    
    mem_44189 = (__local char *) mem_44189_backing_0;
    
    float accs_mem_44193[1];
    float mem_param_44186[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44186[i_1] = mem_44185[i_1];
    for (int64_t tile_id_42893 = 0; tile_id_42893 < num_whole_tiles_42885;
         tile_id_42893++) {
        int64_t binop_x_42954 = segmap_group_sizze_36381 * tile_id_42893;
        int64_t ltid_42894 = sext_i32_i64(ltid_pre_45297);
        int32_t ltid_flat_42895 = local_tid_45293;
        int64_t j_42955 = ltid_42894 + binop_x_42954;
        bool cond_42967 = slt64(j_42955, i32_res_28638);
        int32_t pre_42968;
        
        if (cond_42967) {
            int32_t index_primexp_43301 = sext_i64_i32(j_42955);
            
            pre_42968 = index_primexp_43301;
        } else {
            pre_42968 = 0;
        }
        ((__local int32_t *) mem_44189)[ltid_42894] = pre_42968;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44192[1];
        int64_t ltid_42921 = sext_i32_i64(ltid_pre_45297);
        int32_t ltid_flat_42922 = local_tid_45293;
        int64_t gtid_42973 = ltid_42921 + binop_x_42972;
        int32_t defunc_0_f_res_42975;
        int32_t redout_43343 = 0;
        
        for (int32_t i_43369 = 0; i_43369 < n_28629; i_43369++) {
            int64_t i_43344 = sext_i32_i64(i_43369);
            float x_42979 = ((__global float *) mem_44178)[i_43344 * m_28625 +
                                                           gtid_42973];
            bool isnan_res_42980;
            
            isnan_res_42980 = futrts_isnan32(x_42979);
            
            bool cond_42981 = !isnan_res_42980;
            int32_t defunc_0_f_res_42982 = btoi_bool_i32(cond_42981);
            int32_t defunc_1_op_res_42978 = add32(defunc_0_f_res_42982,
                                                  redout_43343);
            int32_t redout_tmp_45300 = defunc_1_op_res_42978;
            
            redout_43343 = redout_tmp_45300;
        }
        defunc_0_f_res_42975 = redout_43343;
        
        float acc_42983 = mem_param_44186[0];
        bool cond_42984 = slt64(gtid_42973, m_28625);
        float acc_42985;
        
        if (cond_42984) {
            float x_42986;
            float redout_43345 = acc_42983;
            
            for (int64_t i_43346 = 0; i_43346 < segmap_group_sizze_36381;
                 i_43346++) {
                int32_t x_42990 = ((__local int32_t *) mem_44189)[i_43346];
                bool cond_42991 = slt32(x_42990, defunc_0_f_res_42975);
                float defunc_0_f_res_42992;
                
                if (cond_42991) {
                    int64_t i_42993 = sext_i32_i64(x_42990);
                    float defunc_0_f_res_t_res_42994 = ((__global
                                                         float *) mem_44181)[i_42993 *
                                                                             m_28625 +
                                                                             gtid_42973];
                    
                    defunc_0_f_res_42992 = defunc_0_f_res_t_res_42994;
                } else {
                    defunc_0_f_res_42992 = 0.0F;
                }
                
                float defunc_0_f_res_42995 = defunc_0_f_res_42992 *
                      defunc_0_f_res_42992;
                float defunc_1_op_res_42989 = defunc_0_f_res_42995 +
                      redout_43345;
                float redout_tmp_45301 = defunc_1_op_res_42989;
                
                redout_43345 = redout_tmp_45301;
            }
            x_42986 = redout_43345;
            acc_42985 = x_42986;
        } else {
            acc_42985 = acc_42983;
        }
        mem_44192[0] = acc_42985;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45298[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45298[i_2] = mem_44192[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44186[i_3] = mem_param_tmp_45298[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44193[i_4] = mem_param_44186[i_4];
    
    __local char *mem_44196;
    
    mem_44196 = (__local char *) mem_44196_backing_5;
    
    float mem_44199[1];
    float mem_44467[1];
    
    if (cond_43007) {
        mem_44467[0] = accs_mem_44193[0];
    } else {
        int64_t binop_x_43017 = segmap_group_sizze_36381 *
                num_whole_tiles_42885;
        int64_t ltid_43008 = sext_i32_i64(ltid_pre_45297);
        int32_t ltid_flat_43009 = local_tid_45293;
        int64_t j_43018 = ltid_43008 + binop_x_43017;
        bool cond_43030 = slt64(j_43018, i32_res_28638);
        int32_t pre_43031;
        
        if (cond_43030) {
            int32_t index_primexp_43302 = sext_i64_i32(j_43018);
            
            pre_43031 = index_primexp_43302;
        } else {
            pre_43031 = 0;
        }
        ((__local int32_t *) mem_44196)[ltid_43008] = pre_43031;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43036 = sext_i32_i64(ltid_pre_45297);
        int32_t ltid_flat_43037 = local_tid_45293;
        int64_t gtid_43044 = binop_x_42972 + ltid_43036;
        int32_t defunc_0_f_res_43046;
        int32_t redout_43347 = 0;
        
        for (int32_t i_43370 = 0; i_43370 < n_28629; i_43370++) {
            int64_t i_43348 = sext_i32_i64(i_43370);
            float x_43050 = ((__global float *) mem_44178)[i_43348 * m_28625 +
                                                           gtid_43044];
            bool isnan_res_43051;
            
            isnan_res_43051 = futrts_isnan32(x_43050);
            
            bool cond_43052 = !isnan_res_43051;
            int32_t defunc_0_f_res_43053 = btoi_bool_i32(cond_43052);
            int32_t defunc_1_op_res_43049 = add32(defunc_0_f_res_43053,
                                                  redout_43347);
            int32_t redout_tmp_45302 = defunc_1_op_res_43049;
            
            redout_43347 = redout_tmp_45302;
        }
        defunc_0_f_res_43046 = redout_43347;
        
        float acc_43054 = accs_mem_44193[0];
        bool cond_43055 = slt64(gtid_43044, m_28625);
        float acc_43056;
        
        if (cond_43055) {
            float x_43057;
            float redout_43349 = acc_43054;
            
            for (int64_t i_43350 = 0; i_43350 < residual_input_43006;
                 i_43350++) {
                int32_t x_43061 = ((__local int32_t *) mem_44196)[i_43350];
                bool cond_43062 = slt32(x_43061, defunc_0_f_res_43046);
                float defunc_0_f_res_43063;
                
                if (cond_43062) {
                    int64_t i_43064 = sext_i32_i64(x_43061);
                    float defunc_0_f_res_t_res_43065 = ((__global
                                                         float *) mem_44181)[i_43064 *
                                                                             m_28625 +
                                                                             gtid_43044];
                    
                    defunc_0_f_res_43063 = defunc_0_f_res_t_res_43065;
                } else {
                    defunc_0_f_res_43063 = 0.0F;
                }
                
                float defunc_0_f_res_43066 = defunc_0_f_res_43063 *
                      defunc_0_f_res_43063;
                float defunc_1_op_res_43060 = defunc_0_f_res_43066 +
                      redout_43349;
                float redout_tmp_45303 = defunc_1_op_res_43060;
                
                redout_43349 = redout_tmp_45303;
            }
            x_43057 = redout_43349;
            acc_43056 = x_43057;
        } else {
            acc_43056 = acc_43054;
        }
        mem_44199[0] = acc_43056;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44467[0] = mem_44199[0];
    }
    
    int32_t mem_44203[1];
    int32_t mem_44205[1];
    float mem_44207[1];
    int64_t ltid_43069 = sext_i32_i64(ltid_pre_45297);
    int32_t ltid_flat_43070 = local_tid_45293;
    int64_t gtid_43080 = binop_x_42972 + ltid_43069;
    bool cond_43082 = slt64(gtid_43080, m_28625);
    int32_t postlude_43083;
    int32_t postlude_43084;
    float postlude_43085;
    
    if (cond_43082) {
        float defunc_0_f_res_43081 = mem_44467[0];
        int32_t defunc_0_f_res_43087;
        int32_t redout_43351 = 0;
        
        for (int32_t i_43371 = 0; i_43371 < n_28629; i_43371++) {
            int64_t i_43352 = sext_i32_i64(i_43371);
            float x_43091 = ((__global float *) mem_44178)[i_43352 * m_28625 +
                                                           gtid_43080];
            bool isnan_res_43092;
            
            isnan_res_43092 = futrts_isnan32(x_43091);
            
            bool cond_43093 = !isnan_res_43092;
            int32_t defunc_0_f_res_43094 = btoi_bool_i32(cond_43093);
            int32_t defunc_1_op_res_43090 = add32(defunc_0_f_res_43094,
                                                  redout_43351);
            int32_t redout_tmp_45304 = defunc_1_op_res_43090;
            
            redout_43351 = redout_tmp_45304;
        }
        defunc_0_f_res_43087 = redout_43351;
        
        int32_t r32_arg_43095 = sub32(defunc_0_f_res_43087, k2p2_28640);
        float i32_res_43096 = sitofp_i32_f32(r32_arg_43095);
        float sqrt_arg_43097 = defunc_0_f_res_43081 / i32_res_43096;
        float sqrt_res_43098;
        
        sqrt_res_43098 = futrts_sqrt32(sqrt_arg_43097);
        
        float i32_res_43099 = sitofp_i32_f32(defunc_0_f_res_43087);
        float t32_arg_43100 = hfrac_28631 * i32_res_43099;
        int32_t f32_res_43101 = fptosi_f32_i32(t32_arg_43100);
        
        postlude_43083 = f32_res_43101;
        postlude_43084 = defunc_0_f_res_43087;
        postlude_43085 = sqrt_res_43098;
    } else {
        postlude_43083 = 0;
        postlude_43084 = 0;
        postlude_43085 = 0.0F;
    }
    mem_44203[0] = postlude_43083;
    mem_44205[0] = postlude_43084;
    mem_44207[0] = postlude_43085;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45293) + segmap_group_sizze_36381 *
              sext_i32_i64(group_tid_45294), m_28625)) {
        ((__global int32_t *) mem_44209)[sext_i32_i64(local_tid_45293) +
                                         segmap_group_sizze_36381 *
                                         sext_i32_i64(group_tid_45294)] =
            mem_44203[0];
    }
    if (slt64(sext_i32_i64(local_tid_45293) + segmap_group_sizze_36381 *
              sext_i32_i64(group_tid_45294), m_28625)) {
        ((__global int32_t *) mem_44211)[sext_i32_i64(local_tid_45293) +
                                         segmap_group_sizze_36381 *
                                         sext_i32_i64(group_tid_45294)] =
            mem_44205[0];
    }
    if (slt64(sext_i32_i64(local_tid_45293) + segmap_group_sizze_36381 *
              sext_i32_i64(group_tid_45294), m_28625)) {
        ((__global float *) mem_44213)[sext_i32_i64(local_tid_45293) +
                                       segmap_group_sizze_36381 *
                                       sext_i32_i64(group_tid_45294)] =
            mem_44207[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_36381
}
__kernel void mainMagnitudezisegmap_intragroup_43109(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44262_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44255_backing_aligned_1,
                                                     int64_t N_28624,
                                                     int64_t m_28625,
                                                     int64_t i32_res_28999,
                                                     int64_t num_whole_tiles_43129,
                                                     int64_t residual_input_43228,
                                                     unsigned char cond_43229,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_44174,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44237,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44238,
                                                     __global
                                                     unsigned char *mem_44268)
{
    #define segmap_group_sizze_36618 (mainMagnitudezisegmap_group_sizze_36599)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44262_backing_5 = (__local volatile
                                                           char *) mem_44262_backing_aligned_0;
    __local volatile char *restrict mem_44255_backing_0 = (__local volatile
                                                           char *) mem_44255_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45478;
    int32_t local_tid_45479;
    int64_t group_sizze_45482;
    int32_t wave_sizze_45481;
    int32_t group_tid_45480;
    
    global_tid_45478 = get_global_id(0);
    local_tid_45479 = get_local_id(0);
    group_sizze_45482 = get_local_size(0);
    wave_sizze_45481 = LOCKSTEP_WIDTH;
    group_tid_45480 = get_group_id(0);
    
    int32_t gid_flat_43109;
    
    gid_flat_43109 = group_tid_45480;
    
    int32_t ltid_pre_45483;
    
    ltid_pre_45483 = local_tid_45479;
    
    int64_t gid_43108;
    
    gid_43108 = sext_i32_i64(group_tid_45480);
    
    int64_t binop_x_43118;
    
    binop_x_43118 = segmap_group_sizze_36618 * gid_43108;
    
    int32_t mem_44246[1];
    int32_t mem_44248[1];
    int64_t ltid_43110 = sext_i32_i64(ltid_pre_45483);
    int32_t ltid_flat_43111 = local_tid_45479;
    int64_t gtid_43119 = ltid_43110 + binop_x_43118;
    bool cond_43120 = slt64(gtid_43119, m_28625);
    int32_t pre_43121;
    int32_t pre_43122;
    
    if (cond_43120) {
        int32_t x_43123 = ((__global
                            int32_t *) defunc_3_map_res_mem_44238)[gtid_43119];
        int32_t x_43124 = ((__global
                            int32_t *) defunc_3_map_res_mem_44237)[gtid_43119];
        
        pre_43121 = x_43123;
        pre_43122 = x_43124;
    } else {
        pre_43121 = 0;
        pre_43122 = 0;
    }
    mem_44246[0] = pre_43121;
    mem_44248[0] = pre_43122;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_44251[1];
    int64_t ltid_43130 = sext_i32_i64(ltid_pre_45483);
    int32_t ltid_flat_43131 = local_tid_45479;
    
    mem_44251[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44255;
    
    mem_44255 = (__local char *) mem_44255_backing_0;
    
    float accs_mem_44259[1];
    float mem_param_44252[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44252[i_1] = mem_44251[i_1];
    for (int64_t tile_id_43137 = 0; tile_id_43137 < num_whole_tiles_43129;
         tile_id_43137++) {
        int64_t binop_x_43186 = segmap_group_sizze_36618 * tile_id_43137;
        int64_t ltid_43138 = sext_i32_i64(ltid_pre_45483);
        int32_t ltid_flat_43139 = local_tid_45479;
        int64_t j_43187 = ltid_43138 + binop_x_43186;
        bool cond_43192 = slt64(j_43187, i32_res_28999);
        int32_t pre_43193;
        
        if (cond_43192) {
            int32_t index_primexp_43303 = sext_i64_i32(j_43187);
            int32_t tile_elem_43194 = index_primexp_43303;
            
            pre_43193 = tile_elem_43194;
        } else {
            pre_43193 = 0;
        }
        ((__local int32_t *) mem_44255)[ltid_43138] = pre_43193;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44258[1];
        int64_t ltid_43158 = sext_i32_i64(ltid_pre_45483);
        int32_t ltid_flat_43159 = local_tid_45479;
        int64_t gtid_43198 = binop_x_43118 + ltid_43158;
        float acc_43201 = mem_param_44252[0];
        bool cond_43202 = slt64(gtid_43198, m_28625);
        float acc_43203;
        
        if (cond_43202) {
            int32_t x_43199 = mem_44246[0];
            int32_t x_43200 = mem_44248[0];
            float x_43204;
            float redout_43353 = acc_43201;
            
            for (int64_t i_43354 = 0; i_43354 < segmap_group_sizze_36618;
                 i_43354++) {
                int32_t x_43208 = ((__local int32_t *) mem_44255)[i_43354];
                bool cond_43209 = slt32(x_43208, x_43200);
                float defunc_0_f_res_43210;
                
                if (cond_43209) {
                    int32_t x_43211 = add32(x_43199, x_43208);
                    int32_t x_43212 = sub32(x_43211, x_43200);
                    int32_t i_43213 = add32(1, x_43212);
                    int64_t i_43214 = sext_i32_i64(i_43213);
                    float defunc_0_f_res_t_res_43215 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_43198 *
                                                                                              N_28624 +
                                                                                              i_43214];
                    
                    defunc_0_f_res_43210 = defunc_0_f_res_t_res_43215;
                } else {
                    defunc_0_f_res_43210 = 0.0F;
                }
                
                float defunc_1_op_res_43207 = defunc_0_f_res_43210 +
                      redout_43353;
                float redout_tmp_45486 = defunc_1_op_res_43207;
                
                redout_43353 = redout_tmp_45486;
            }
            x_43204 = redout_43353;
            acc_43203 = x_43204;
        } else {
            acc_43203 = acc_43201;
        }
        mem_44258[0] = acc_43203;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45484[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45484[i_2] = mem_44258[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44252[i_3] = mem_param_tmp_45484[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44259[i_4] = mem_param_44252[i_4];
    
    __local char *mem_44262;
    
    mem_44262 = (__local char *) mem_44262_backing_5;
    
    float mem_44265[1];
    float mem_44476[1];
    
    if (cond_43229) {
        mem_44476[0] = accs_mem_44259[0];
    } else {
        int64_t binop_x_43239 = segmap_group_sizze_36618 *
                num_whole_tiles_43129;
        int64_t ltid_43230 = sext_i32_i64(ltid_pre_45483);
        int32_t ltid_flat_43231 = local_tid_45479;
        int64_t j_43240 = ltid_43230 + binop_x_43239;
        bool cond_43245 = slt64(j_43240, i32_res_28999);
        int32_t pre_43246;
        
        if (cond_43245) {
            int32_t index_primexp_43304 = sext_i64_i32(j_43240);
            int32_t tile_elem_43247 = index_primexp_43304;
            
            pre_43246 = tile_elem_43247;
        } else {
            pre_43246 = 0;
        }
        ((__local int32_t *) mem_44262)[ltid_43230] = pre_43246;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43251 = sext_i32_i64(ltid_pre_45483);
        int32_t ltid_flat_43252 = local_tid_45479;
        int64_t gtid_43259 = binop_x_43118 + ltid_43251;
        float acc_43262 = accs_mem_44259[0];
        bool cond_43263 = slt64(gtid_43259, m_28625);
        float acc_43264;
        
        if (cond_43263) {
            int32_t x_43260 = mem_44246[0];
            int32_t x_43261 = mem_44248[0];
            float x_43265;
            float redout_43355 = acc_43262;
            
            for (int64_t i_43356 = 0; i_43356 < residual_input_43228;
                 i_43356++) {
                int32_t x_43269 = ((__local int32_t *) mem_44262)[i_43356];
                bool cond_43270 = slt32(x_43269, x_43261);
                float defunc_0_f_res_43271;
                
                if (cond_43270) {
                    int32_t x_43272 = add32(x_43260, x_43269);
                    int32_t x_43273 = sub32(x_43272, x_43261);
                    int32_t i_43274 = add32(1, x_43273);
                    int64_t i_43275 = sext_i32_i64(i_43274);
                    float defunc_0_f_res_t_res_43276 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_43259 *
                                                                                              N_28624 +
                                                                                              i_43275];
                    
                    defunc_0_f_res_43271 = defunc_0_f_res_t_res_43276;
                } else {
                    defunc_0_f_res_43271 = 0.0F;
                }
                
                float defunc_1_op_res_43268 = defunc_0_f_res_43271 +
                      redout_43355;
                float redout_tmp_45487 = defunc_1_op_res_43268;
                
                redout_43355 = redout_tmp_45487;
            }
            x_43265 = redout_43355;
            acc_43264 = x_43265;
        } else {
            acc_43264 = acc_43262;
        }
        mem_44265[0] = acc_43264;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44476[0] = mem_44265[0];
    }
    if (slt64(sext_i32_i64(local_tid_45479) + segmap_group_sizze_36618 *
              sext_i32_i64(group_tid_45480), m_28625)) {
        ((__global float *) mem_44268)[sext_i32_i64(local_tid_45479) +
                                       segmap_group_sizze_36618 *
                                       sext_i32_i64(group_tid_45480)] =
            mem_44476[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_36618
}
__kernel void mainMagnitudezisegred_large_34593(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44746_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44744_backing_aligned_1,
                                                int64_t N_28624,
                                                int64_t N_28626,
                                                int64_t i32_res_28638,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_34732,
                                                __global
                                                unsigned char *images_mem_43378,
                                                __global
                                                unsigned char *binop_p_mem_43387,
                                                __global
                                                unsigned char *mem_43528,
                                                __global
                                                unsigned char *mem_43533,
                                                int64_t groups_per_segment_44730,
                                                int64_t elements_per_thread_44731,
                                                int64_t virt_num_groups_44732,
                                                int64_t threads_per_segment_44734,
                                                __global
                                                unsigned char *group_res_arr_mem_44735,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44737)
{
    #define segred_group_sizze_34731 (mainMagnitudezisegred_group_sizze_34587)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44746_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44746_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44744_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44744_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44739;
    int32_t local_tid_44740;
    int64_t group_sizze_44743;
    int32_t wave_sizze_44742;
    int32_t group_tid_44741;
    
    global_tid_44739 = get_global_id(0);
    local_tid_44740 = get_local_id(0);
    group_sizze_44743 = get_local_size(0);
    wave_sizze_44742 = LOCKSTEP_WIDTH;
    group_tid_44741 = get_group_id(0);
    
    int32_t phys_tid_34593;
    
    phys_tid_34593 = global_tid_44739;
    
    __local char *red_arr_mem_44744;
    
    red_arr_mem_44744 = (__local char *) red_arr_mem_44744_backing_0;
    
    __local char *sync_arr_mem_44746;
    
    sync_arr_mem_44746 = (__local char *) sync_arr_mem_44746_backing_1;
    
    int32_t phys_group_id_44748;
    
    phys_group_id_44748 = get_group_id(0);
    for (int32_t i_44749 = 0; i_44749 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44732) - phys_group_id_44748,
                   sext_i64_i32(num_groups_34732)); i_44749++) {
        int32_t virt_group_id_44750 = phys_group_id_44748 + i_44749 *
                sext_i64_i32(num_groups_34732);
        int32_t flat_segment_id_44751 = squot32(virt_group_id_44750,
                                                sext_i64_i32(groups_per_segment_44730));
        int64_t global_tid_44752 = srem64(sext_i32_i64(virt_group_id_44750) *
                                          segred_group_sizze_34731 +
                                          sext_i32_i64(local_tid_44740),
                                          segred_group_sizze_34731 *
                                          groups_per_segment_44730);
        int64_t gtid_34580 = squot64(sext_i32_i64(flat_segment_id_44751),
                                     i32_res_28644 * i32_res_28644);
        int64_t gtid_34581 = squot64(sext_i32_i64(flat_segment_id_44751) -
                                     squot64(sext_i32_i64(flat_segment_id_44751),
                                             i32_res_28644 * i32_res_28644) *
                                     (i32_res_28644 * i32_res_28644),
                                     i32_res_28644);
        int64_t gtid_34582 = sext_i32_i64(flat_segment_id_44751) -
                squot64(sext_i32_i64(flat_segment_id_44751), i32_res_28644 *
                        i32_res_28644) * (i32_res_28644 * i32_res_28644) -
                squot64(sext_i32_i64(flat_segment_id_44751) -
                        squot64(sext_i32_i64(flat_segment_id_44751),
                                i32_res_28644 * i32_res_28644) *
                        (i32_res_28644 * i32_res_28644), i32_res_28644) *
                i32_res_28644;
        int64_t gtid_34592;
        float x_acc_44753;
        int64_t chunk_sizze_44754;
        
        chunk_sizze_44754 = smin64(elements_per_thread_44731,
                                   sdiv_up64(i32_res_28638 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44752)),
                                             threads_per_segment_44734));
        
        float x_34735;
        float x_34736;
        
        // neutral-initialise the accumulators
        {
            x_acc_44753 = 0.0F;
        }
        for (int64_t i_44758 = 0; i_44758 < chunk_sizze_44754; i_44758++) {
            gtid_34592 = sext_i32_i64(sext_i64_i32(global_tid_44752)) +
                threads_per_segment_44734 * i_44758;
            // apply map function
            {
                float x_34741 = ((__global
                                  float *) images_mem_43378)[gtid_34580 *
                                                             N_28626 +
                                                             gtid_34592];
                float x_34742 = ((__global
                                  float *) binop_p_mem_43387)[gtid_34581 *
                                                              N_28624 +
                                                              gtid_34592];
                float x_34743 = ((__global float *) mem_43528)[gtid_34582 *
                                                               N_28624 +
                                                               gtid_34592];
                float x_34744 = x_34742 * x_34743;
                bool isnan_res_34745;
                
                isnan_res_34745 = futrts_isnan32(x_34741);
                
                float y_34746;
                
                if (isnan_res_34745) {
                    y_34746 = 0.0F;
                } else {
                    y_34746 = 1.0F;
                }
                
                float defunc_2_f_res_34747 = x_34744 * y_34746;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34735 = x_acc_44753;
                }
                // load new values
                {
                    x_34736 = defunc_2_f_res_34747;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34737 = x_34735 + x_34736;
                    
                    // store in accumulator
                    {
                        x_acc_44753 = defunc_1_op_res_34737;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34735 = x_acc_44753;
            ((__local
              float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740)] =
                x_34735;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44759;
        int32_t skip_waves_44760;
        
        skip_waves_44760 = 1;
        
        float x_44755;
        float x_44756;
        
        offset_44759 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44740,
                      sext_i64_i32(segred_group_sizze_34731))) {
                x_44755 = ((__local
                            float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740 +
                                                        offset_44759)];
            }
        }
        offset_44759 = 1;
        while (slt32(offset_44759, wave_sizze_44742)) {
            if (slt32(local_tid_44740 + offset_44759,
                      sext_i64_i32(segred_group_sizze_34731)) &&
                ((local_tid_44740 - squot32(local_tid_44740, wave_sizze_44742) *
                  wave_sizze_44742) & (2 * offset_44759 - 1)) == 0) {
                // read array element
                {
                    x_44756 = ((volatile __local
                                float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740 +
                                                            offset_44759)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44757 = x_44755 + x_44756;
                    
                    x_44755 = defunc_1_op_res_44757;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740)] =
                        x_44755;
                }
            }
            offset_44759 *= 2;
        }
        while (slt32(skip_waves_44760,
                     squot32(sext_i64_i32(segred_group_sizze_34731) +
                             wave_sizze_44742 - 1, wave_sizze_44742))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44759 = skip_waves_44760 * wave_sizze_44742;
            if (slt32(local_tid_44740 + offset_44759,
                      sext_i64_i32(segred_group_sizze_34731)) &&
                ((local_tid_44740 - squot32(local_tid_44740, wave_sizze_44742) *
                  wave_sizze_44742) == 0 && (squot32(local_tid_44740,
                                                     wave_sizze_44742) & (2 *
                                                                          skip_waves_44760 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44756 = ((__local
                                float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740 +
                                                            offset_44759)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44757 = x_44755 + x_44756;
                    
                    x_44755 = defunc_1_op_res_44757;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740)] =
                        x_44755;
                }
            }
            skip_waves_44760 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44740) == 0) {
                x_acc_44753 = x_44755;
            }
        }
        if (groups_per_segment_44730 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44740 == 0) {
                    ((__global float *) mem_43533)[gtid_34580 * (i32_res_28644 *
                                                                 i32_res_28644) +
                                                   gtid_34581 * i32_res_28644 +
                                                   gtid_34582] = x_acc_44753;
                }
            }
        } else {
            int32_t old_counter_44761;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44740 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44735)[sext_i32_i64(virt_group_id_44750) *
                                                        segred_group_sizze_34731] =
                        x_acc_44753;
                    mem_fence_global();
                    old_counter_44761 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44737)[sext_i32_i64(srem32(flat_segment_id_44751,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44746)[0] =
                        old_counter_44761 == groups_per_segment_44730 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44762;
            
            is_last_group_44762 = ((__local bool *) sync_arr_mem_44746)[0];
            if (is_last_group_44762) {
                if (local_tid_44740 == 0) {
                    old_counter_44761 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44737)[sext_i32_i64(srem32(flat_segment_id_44751,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_44730));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44763 =
                            sdiv_up64(groups_per_segment_44730,
                                      segred_group_sizze_34731);
                    
                    x_34735 = 0.0F;
                    for (int64_t i_44764 = 0; i_44764 < read_per_thread_44763;
                         i_44764++) {
                        int64_t group_res_id_44765 =
                                sext_i32_i64(local_tid_44740) *
                                read_per_thread_44763 + i_44764;
                        int64_t index_of_group_res_44766 =
                                sext_i32_i64(flat_segment_id_44751) *
                                groups_per_segment_44730 + group_res_id_44765;
                        
                        if (slt64(group_res_id_44765,
                                  groups_per_segment_44730)) {
                            x_34736 = ((__global
                                        float *) group_res_arr_mem_44735)[index_of_group_res_44766 *
                                                                          segred_group_sizze_34731];
                            
                            float defunc_1_op_res_34737;
                            
                            defunc_1_op_res_34737 = x_34735 + x_34736;
                            x_34735 = defunc_1_op_res_34737;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740)] =
                    x_34735;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44767;
                    int32_t skip_waves_44768;
                    
                    skip_waves_44768 = 1;
                    
                    float x_44755;
                    float x_44756;
                    
                    offset_44767 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44740,
                                  sext_i64_i32(segred_group_sizze_34731))) {
                            x_44755 = ((__local
                                        float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740 +
                                                                    offset_44767)];
                        }
                    }
                    offset_44767 = 1;
                    while (slt32(offset_44767, wave_sizze_44742)) {
                        if (slt32(local_tid_44740 + offset_44767,
                                  sext_i64_i32(segred_group_sizze_34731)) &&
                            ((local_tid_44740 - squot32(local_tid_44740,
                                                        wave_sizze_44742) *
                              wave_sizze_44742) & (2 * offset_44767 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44756 = ((volatile __local
                                            float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740 +
                                                                        offset_44767)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44757 = x_44755 + x_44756;
                                
                                x_44755 = defunc_1_op_res_44757;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740)] =
                                    x_44755;
                            }
                        }
                        offset_44767 *= 2;
                    }
                    while (slt32(skip_waves_44768,
                                 squot32(sext_i64_i32(segred_group_sizze_34731) +
                                         wave_sizze_44742 - 1,
                                         wave_sizze_44742))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44767 = skip_waves_44768 * wave_sizze_44742;
                        if (slt32(local_tid_44740 + offset_44767,
                                  sext_i64_i32(segred_group_sizze_34731)) &&
                            ((local_tid_44740 - squot32(local_tid_44740,
                                                        wave_sizze_44742) *
                              wave_sizze_44742) == 0 &&
                             (squot32(local_tid_44740, wave_sizze_44742) & (2 *
                                                                            skip_waves_44768 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44756 = ((__local
                                            float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740 +
                                                                        offset_44767)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44757 = x_44755 + x_44756;
                                
                                x_44755 = defunc_1_op_res_44757;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44744)[sext_i32_i64(local_tid_44740)] =
                                    x_44755;
                            }
                        }
                        skip_waves_44768 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44740 == 0) {
                            ((__global float *) mem_43533)[gtid_34580 *
                                                           (i32_res_28644 *
                                                            i32_res_28644) +
                                                           gtid_34581 *
                                                           i32_res_28644 +
                                                           gtid_34582] =
                                x_44755;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34731
}
__kernel void mainMagnitudezisegred_large_35640(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44942_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44940_backing_aligned_1,
                                                int64_t N_28624,
                                                int64_t N_28626,
                                                int64_t i32_res_28638,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_35693,
                                                __global
                                                unsigned char *images_mem_43378,
                                                __global
                                                unsigned char *binop_p_mem_43387,
                                                __global
                                                unsigned char *mem_43840,
                                                int64_t groups_per_segment_44926,
                                                int64_t elements_per_thread_44927,
                                                int64_t virt_num_groups_44928,
                                                int64_t threads_per_segment_44930,
                                                __global
                                                unsigned char *group_res_arr_mem_44931,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44933)
{
    #define segred_group_sizze_35692 (mainMagnitudezisegred_group_sizze_35634)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44942_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44942_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44940_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44940_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44935;
    int32_t local_tid_44936;
    int64_t group_sizze_44939;
    int32_t wave_sizze_44938;
    int32_t group_tid_44937;
    
    global_tid_44935 = get_global_id(0);
    local_tid_44936 = get_local_id(0);
    group_sizze_44939 = get_local_size(0);
    wave_sizze_44938 = LOCKSTEP_WIDTH;
    group_tid_44937 = get_group_id(0);
    
    int32_t phys_tid_35640;
    
    phys_tid_35640 = global_tid_44935;
    
    __local char *red_arr_mem_44940;
    
    red_arr_mem_44940 = (__local char *) red_arr_mem_44940_backing_0;
    
    __local char *sync_arr_mem_44942;
    
    sync_arr_mem_44942 = (__local char *) sync_arr_mem_44942_backing_1;
    
    int32_t phys_group_id_44944;
    
    phys_group_id_44944 = get_group_id(0);
    for (int32_t i_44945 = 0; i_44945 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44928) - phys_group_id_44944,
                   sext_i64_i32(num_groups_35693)); i_44945++) {
        int32_t virt_group_id_44946 = phys_group_id_44944 + i_44945 *
                sext_i64_i32(num_groups_35693);
        int32_t flat_segment_id_44947 = squot32(virt_group_id_44946,
                                                sext_i64_i32(groups_per_segment_44926));
        int64_t global_tid_44948 = srem64(sext_i32_i64(virt_group_id_44946) *
                                          segred_group_sizze_35692 +
                                          sext_i32_i64(local_tid_44936),
                                          segred_group_sizze_35692 *
                                          groups_per_segment_44926);
        int64_t gtid_35629 = squot64(sext_i32_i64(flat_segment_id_44947),
                                     i32_res_28644);
        int64_t gtid_35630 = sext_i32_i64(flat_segment_id_44947) -
                squot64(sext_i32_i64(flat_segment_id_44947), i32_res_28644) *
                i32_res_28644;
        int64_t gtid_35639;
        float x_acc_44949;
        int64_t chunk_sizze_44950;
        
        chunk_sizze_44950 = smin64(elements_per_thread_44927,
                                   sdiv_up64(i32_res_28638 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44948)),
                                             threads_per_segment_44930));
        
        float x_35696;
        float x_35697;
        
        // neutral-initialise the accumulators
        {
            x_acc_44949 = 0.0F;
        }
        for (int64_t i_44954 = 0; i_44954 < chunk_sizze_44950; i_44954++) {
            gtid_35639 = sext_i32_i64(sext_i64_i32(global_tid_44948)) +
                threads_per_segment_44930 * i_44954;
            // apply map function
            {
                float x_35702 = ((__global
                                  float *) images_mem_43378)[gtid_35629 *
                                                             N_28626 +
                                                             gtid_35639];
                bool isnan_res_35703;
                
                isnan_res_35703 = futrts_isnan32(x_35702);
                
                float defunc_1_f_res_35704;
                
                if (isnan_res_35703) {
                    defunc_1_f_res_35704 = 0.0F;
                } else {
                    float x_35701 = ((__global
                                      float *) binop_p_mem_43387)[gtid_35630 *
                                                                  N_28624 +
                                                                  gtid_35639];
                    float defunc_1_f_res_f_res_35705 = x_35701 * x_35702;
                    
                    defunc_1_f_res_35704 = defunc_1_f_res_f_res_35705;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_35696 = x_acc_44949;
                }
                // load new values
                {
                    x_35697 = defunc_1_f_res_35704;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35698 = x_35696 + x_35697;
                    
                    // store in accumulator
                    {
                        x_acc_44949 = defunc_1_op_res_35698;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35696 = x_acc_44949;
            ((__local
              float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936)] =
                x_35696;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44955;
        int32_t skip_waves_44956;
        
        skip_waves_44956 = 1;
        
        float x_44951;
        float x_44952;
        
        offset_44955 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44936,
                      sext_i64_i32(segred_group_sizze_35692))) {
                x_44951 = ((__local
                            float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936 +
                                                        offset_44955)];
            }
        }
        offset_44955 = 1;
        while (slt32(offset_44955, wave_sizze_44938)) {
            if (slt32(local_tid_44936 + offset_44955,
                      sext_i64_i32(segred_group_sizze_35692)) &&
                ((local_tid_44936 - squot32(local_tid_44936, wave_sizze_44938) *
                  wave_sizze_44938) & (2 * offset_44955 - 1)) == 0) {
                // read array element
                {
                    x_44952 = ((volatile __local
                                float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936 +
                                                            offset_44955)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44953 = x_44951 + x_44952;
                    
                    x_44951 = defunc_1_op_res_44953;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936)] =
                        x_44951;
                }
            }
            offset_44955 *= 2;
        }
        while (slt32(skip_waves_44956,
                     squot32(sext_i64_i32(segred_group_sizze_35692) +
                             wave_sizze_44938 - 1, wave_sizze_44938))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44955 = skip_waves_44956 * wave_sizze_44938;
            if (slt32(local_tid_44936 + offset_44955,
                      sext_i64_i32(segred_group_sizze_35692)) &&
                ((local_tid_44936 - squot32(local_tid_44936, wave_sizze_44938) *
                  wave_sizze_44938) == 0 && (squot32(local_tid_44936,
                                                     wave_sizze_44938) & (2 *
                                                                          skip_waves_44956 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44952 = ((__local
                                float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936 +
                                                            offset_44955)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44953 = x_44951 + x_44952;
                    
                    x_44951 = defunc_1_op_res_44953;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936)] =
                        x_44951;
                }
            }
            skip_waves_44956 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44936) == 0) {
                x_acc_44949 = x_44951;
            }
        }
        if (groups_per_segment_44926 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44936 == 0) {
                    ((__global float *) mem_43840)[gtid_35629 * i32_res_28644 +
                                                   gtid_35630] = x_acc_44949;
                }
            }
        } else {
            int32_t old_counter_44957;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44936 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44931)[sext_i32_i64(virt_group_id_44946) *
                                                        segred_group_sizze_35692] =
                        x_acc_44949;
                    mem_fence_global();
                    old_counter_44957 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44933)[sext_i32_i64(srem32(flat_segment_id_44947,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44942)[0] =
                        old_counter_44957 == groups_per_segment_44926 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44958;
            
            is_last_group_44958 = ((__local bool *) sync_arr_mem_44942)[0];
            if (is_last_group_44958) {
                if (local_tid_44936 == 0) {
                    old_counter_44957 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44933)[sext_i32_i64(srem32(flat_segment_id_44947,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_44926));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44959 =
                            sdiv_up64(groups_per_segment_44926,
                                      segred_group_sizze_35692);
                    
                    x_35696 = 0.0F;
                    for (int64_t i_44960 = 0; i_44960 < read_per_thread_44959;
                         i_44960++) {
                        int64_t group_res_id_44961 =
                                sext_i32_i64(local_tid_44936) *
                                read_per_thread_44959 + i_44960;
                        int64_t index_of_group_res_44962 =
                                sext_i32_i64(flat_segment_id_44947) *
                                groups_per_segment_44926 + group_res_id_44961;
                        
                        if (slt64(group_res_id_44961,
                                  groups_per_segment_44926)) {
                            x_35697 = ((__global
                                        float *) group_res_arr_mem_44931)[index_of_group_res_44962 *
                                                                          segred_group_sizze_35692];
                            
                            float defunc_1_op_res_35698;
                            
                            defunc_1_op_res_35698 = x_35696 + x_35697;
                            x_35696 = defunc_1_op_res_35698;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936)] =
                    x_35696;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44963;
                    int32_t skip_waves_44964;
                    
                    skip_waves_44964 = 1;
                    
                    float x_44951;
                    float x_44952;
                    
                    offset_44963 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44936,
                                  sext_i64_i32(segred_group_sizze_35692))) {
                            x_44951 = ((__local
                                        float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936 +
                                                                    offset_44963)];
                        }
                    }
                    offset_44963 = 1;
                    while (slt32(offset_44963, wave_sizze_44938)) {
                        if (slt32(local_tid_44936 + offset_44963,
                                  sext_i64_i32(segred_group_sizze_35692)) &&
                            ((local_tid_44936 - squot32(local_tid_44936,
                                                        wave_sizze_44938) *
                              wave_sizze_44938) & (2 * offset_44963 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44952 = ((volatile __local
                                            float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936 +
                                                                        offset_44963)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44953 = x_44951 + x_44952;
                                
                                x_44951 = defunc_1_op_res_44953;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936)] =
                                    x_44951;
                            }
                        }
                        offset_44963 *= 2;
                    }
                    while (slt32(skip_waves_44964,
                                 squot32(sext_i64_i32(segred_group_sizze_35692) +
                                         wave_sizze_44938 - 1,
                                         wave_sizze_44938))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44963 = skip_waves_44964 * wave_sizze_44938;
                        if (slt32(local_tid_44936 + offset_44963,
                                  sext_i64_i32(segred_group_sizze_35692)) &&
                            ((local_tid_44936 - squot32(local_tid_44936,
                                                        wave_sizze_44938) *
                              wave_sizze_44938) == 0 &&
                             (squot32(local_tid_44936, wave_sizze_44938) & (2 *
                                                                            skip_waves_44964 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44952 = ((__local
                                            float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936 +
                                                                        offset_44963)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44953 = x_44951 + x_44952;
                                
                                x_44951 = defunc_1_op_res_44953;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44940)[sext_i32_i64(local_tid_44936)] =
                                    x_44951;
                            }
                        }
                        skip_waves_44964 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44936 == 0) {
                            ((__global float *) mem_43840)[gtid_35629 *
                                                           i32_res_28644 +
                                                           gtid_35630] =
                                x_44951;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35692
}
__kernel void mainMagnitudezisegred_large_35777(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45030_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45028_backing_aligned_1,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_35826,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43625,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43846,
                                                __global
                                                unsigned char *mem_43906,
                                                int64_t groups_per_segment_45014,
                                                int64_t elements_per_thread_45015,
                                                int64_t virt_num_groups_45016,
                                                int64_t threads_per_segment_45018,
                                                __global
                                                unsigned char *group_res_arr_mem_45019,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45021)
{
    #define segred_group_sizze_35825 (mainMagnitudezisegred_group_sizze_35771)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45030_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45030_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45028_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45028_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45023;
    int32_t local_tid_45024;
    int64_t group_sizze_45027;
    int32_t wave_sizze_45026;
    int32_t group_tid_45025;
    
    global_tid_45023 = get_global_id(0);
    local_tid_45024 = get_local_id(0);
    group_sizze_45027 = get_local_size(0);
    wave_sizze_45026 = LOCKSTEP_WIDTH;
    group_tid_45025 = get_group_id(0);
    
    int32_t phys_tid_35777;
    
    phys_tid_35777 = global_tid_45023;
    
    __local char *red_arr_mem_45028;
    
    red_arr_mem_45028 = (__local char *) red_arr_mem_45028_backing_0;
    
    __local char *sync_arr_mem_45030;
    
    sync_arr_mem_45030 = (__local char *) sync_arr_mem_45030_backing_1;
    
    int32_t phys_group_id_45032;
    
    phys_group_id_45032 = get_group_id(0);
    for (int32_t i_45033 = 0; i_45033 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45016) - phys_group_id_45032,
                   sext_i64_i32(num_groups_35826)); i_45033++) {
        int32_t virt_group_id_45034 = phys_group_id_45032 + i_45033 *
                sext_i64_i32(num_groups_35826);
        int32_t flat_segment_id_45035 = squot32(virt_group_id_45034,
                                                sext_i64_i32(groups_per_segment_45014));
        int64_t global_tid_45036 = srem64(sext_i32_i64(virt_group_id_45034) *
                                          segred_group_sizze_35825 +
                                          sext_i32_i64(local_tid_45024),
                                          segred_group_sizze_35825 *
                                          groups_per_segment_45014);
        int64_t gtid_35766 = squot64(sext_i32_i64(flat_segment_id_45035),
                                     i32_res_28644);
        int64_t gtid_35767 = sext_i32_i64(flat_segment_id_45035) -
                squot64(sext_i32_i64(flat_segment_id_45035), i32_res_28644) *
                i32_res_28644;
        int64_t gtid_35776;
        float x_acc_45037;
        int64_t chunk_sizze_45038;
        
        chunk_sizze_45038 = smin64(elements_per_thread_45015,
                                   sdiv_up64(i32_res_28644 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45036)),
                                             threads_per_segment_45018));
        
        float x_35829;
        float x_35830;
        
        // neutral-initialise the accumulators
        {
            x_acc_45037 = 0.0F;
        }
        for (int64_t i_45042 = 0; i_45042 < chunk_sizze_45038; i_45042++) {
            gtid_35776 = sext_i32_i64(sext_i64_i32(global_tid_45036)) +
                threads_per_segment_45018 * i_45042;
            // apply map function
            {
                float x_35835 = ((__global
                                  float *) defunc_3_map_res_mem_43846)[gtid_35766 *
                                                                       i32_res_28644 +
                                                                       gtid_35776];
                float x_35836 = ((__global
                                  float *) defunc_3_map_res_mem_43625)[gtid_35766 *
                                                                       (i32_res_28644 *
                                                                        i32_res_28644) +
                                                                       gtid_35767 *
                                                                       i32_res_28644 +
                                                                       gtid_35776];
                float defunc_1_f_res_35837 = x_35835 * x_35836;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35829 = x_acc_45037;
                }
                // load new values
                {
                    x_35830 = defunc_1_f_res_35837;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35831 = x_35829 + x_35830;
                    
                    // store in accumulator
                    {
                        x_acc_45037 = defunc_1_op_res_35831;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35829 = x_acc_45037;
            ((__local
              float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024)] =
                x_35829;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45043;
        int32_t skip_waves_45044;
        
        skip_waves_45044 = 1;
        
        float x_45039;
        float x_45040;
        
        offset_45043 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45024,
                      sext_i64_i32(segred_group_sizze_35825))) {
                x_45039 = ((__local
                            float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024 +
                                                        offset_45043)];
            }
        }
        offset_45043 = 1;
        while (slt32(offset_45043, wave_sizze_45026)) {
            if (slt32(local_tid_45024 + offset_45043,
                      sext_i64_i32(segred_group_sizze_35825)) &&
                ((local_tid_45024 - squot32(local_tid_45024, wave_sizze_45026) *
                  wave_sizze_45026) & (2 * offset_45043 - 1)) == 0) {
                // read array element
                {
                    x_45040 = ((volatile __local
                                float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024 +
                                                            offset_45043)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45041 = x_45039 + x_45040;
                    
                    x_45039 = defunc_1_op_res_45041;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024)] =
                        x_45039;
                }
            }
            offset_45043 *= 2;
        }
        while (slt32(skip_waves_45044,
                     squot32(sext_i64_i32(segred_group_sizze_35825) +
                             wave_sizze_45026 - 1, wave_sizze_45026))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45043 = skip_waves_45044 * wave_sizze_45026;
            if (slt32(local_tid_45024 + offset_45043,
                      sext_i64_i32(segred_group_sizze_35825)) &&
                ((local_tid_45024 - squot32(local_tid_45024, wave_sizze_45026) *
                  wave_sizze_45026) == 0 && (squot32(local_tid_45024,
                                                     wave_sizze_45026) & (2 *
                                                                          skip_waves_45044 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45040 = ((__local
                                float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024 +
                                                            offset_45043)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45041 = x_45039 + x_45040;
                    
                    x_45039 = defunc_1_op_res_45041;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024)] =
                        x_45039;
                }
            }
            skip_waves_45044 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45024) == 0) {
                x_acc_45037 = x_45039;
            }
        }
        if (groups_per_segment_45014 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45024 == 0) {
                    ((__global float *) mem_43906)[gtid_35766 * i32_res_28644 +
                                                   gtid_35767] = x_acc_45037;
                }
            }
        } else {
            int32_t old_counter_45045;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45024 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45019)[sext_i32_i64(virt_group_id_45034) *
                                                        segred_group_sizze_35825] =
                        x_acc_45037;
                    mem_fence_global();
                    old_counter_45045 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45021)[sext_i32_i64(srem32(flat_segment_id_45035,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45030)[0] =
                        old_counter_45045 == groups_per_segment_45014 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45046;
            
            is_last_group_45046 = ((__local bool *) sync_arr_mem_45030)[0];
            if (is_last_group_45046) {
                if (local_tid_45024 == 0) {
                    old_counter_45045 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45021)[sext_i32_i64(srem32(flat_segment_id_45035,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45014));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45047 =
                            sdiv_up64(groups_per_segment_45014,
                                      segred_group_sizze_35825);
                    
                    x_35829 = 0.0F;
                    for (int64_t i_45048 = 0; i_45048 < read_per_thread_45047;
                         i_45048++) {
                        int64_t group_res_id_45049 =
                                sext_i32_i64(local_tid_45024) *
                                read_per_thread_45047 + i_45048;
                        int64_t index_of_group_res_45050 =
                                sext_i32_i64(flat_segment_id_45035) *
                                groups_per_segment_45014 + group_res_id_45049;
                        
                        if (slt64(group_res_id_45049,
                                  groups_per_segment_45014)) {
                            x_35830 = ((__global
                                        float *) group_res_arr_mem_45019)[index_of_group_res_45050 *
                                                                          segred_group_sizze_35825];
                            
                            float defunc_1_op_res_35831;
                            
                            defunc_1_op_res_35831 = x_35829 + x_35830;
                            x_35829 = defunc_1_op_res_35831;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024)] =
                    x_35829;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45051;
                    int32_t skip_waves_45052;
                    
                    skip_waves_45052 = 1;
                    
                    float x_45039;
                    float x_45040;
                    
                    offset_45051 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45024,
                                  sext_i64_i32(segred_group_sizze_35825))) {
                            x_45039 = ((__local
                                        float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024 +
                                                                    offset_45051)];
                        }
                    }
                    offset_45051 = 1;
                    while (slt32(offset_45051, wave_sizze_45026)) {
                        if (slt32(local_tid_45024 + offset_45051,
                                  sext_i64_i32(segred_group_sizze_35825)) &&
                            ((local_tid_45024 - squot32(local_tid_45024,
                                                        wave_sizze_45026) *
                              wave_sizze_45026) & (2 * offset_45051 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45040 = ((volatile __local
                                            float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024 +
                                                                        offset_45051)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45041 = x_45039 + x_45040;
                                
                                x_45039 = defunc_1_op_res_45041;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024)] =
                                    x_45039;
                            }
                        }
                        offset_45051 *= 2;
                    }
                    while (slt32(skip_waves_45052,
                                 squot32(sext_i64_i32(segred_group_sizze_35825) +
                                         wave_sizze_45026 - 1,
                                         wave_sizze_45026))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45051 = skip_waves_45052 * wave_sizze_45026;
                        if (slt32(local_tid_45024 + offset_45051,
                                  sext_i64_i32(segred_group_sizze_35825)) &&
                            ((local_tid_45024 - squot32(local_tid_45024,
                                                        wave_sizze_45026) *
                              wave_sizze_45026) == 0 &&
                             (squot32(local_tid_45024, wave_sizze_45026) & (2 *
                                                                            skip_waves_45052 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45040 = ((__local
                                            float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024 +
                                                                        offset_45051)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45041 = x_45039 + x_45040;
                                
                                x_45039 = defunc_1_op_res_45041;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45028)[sext_i32_i64(local_tid_45024)] =
                                    x_45039;
                            }
                        }
                        skip_waves_45052 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45024 == 0) {
                            ((__global float *) mem_43906)[gtid_35766 *
                                                           i32_res_28644 +
                                                           gtid_35767] =
                                x_45039;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35825
}
__kernel void mainMagnitudezisegred_large_35907(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45162_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45160_backing_aligned_1,
                                                int64_t N_28624,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_35954,
                                                __global
                                                unsigned char *mem_43394,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43912,
                                                __global
                                                unsigned char *mem_44130,
                                                int64_t groups_per_segment_45146,
                                                int64_t elements_per_thread_45147,
                                                int64_t virt_num_groups_45148,
                                                int64_t threads_per_segment_45150,
                                                __global
                                                unsigned char *group_res_arr_mem_45151,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45153)
{
    #define segred_group_sizze_35953 (mainMagnitudezisegred_group_sizze_35901)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45162_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45162_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45160_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45160_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45155;
    int32_t local_tid_45156;
    int64_t group_sizze_45159;
    int32_t wave_sizze_45158;
    int32_t group_tid_45157;
    
    global_tid_45155 = get_global_id(0);
    local_tid_45156 = get_local_id(0);
    group_sizze_45159 = get_local_size(0);
    wave_sizze_45158 = LOCKSTEP_WIDTH;
    group_tid_45157 = get_group_id(0);
    
    int32_t phys_tid_35907;
    
    phys_tid_35907 = global_tid_45155;
    
    __local char *red_arr_mem_45160;
    
    red_arr_mem_45160 = (__local char *) red_arr_mem_45160_backing_0;
    
    __local char *sync_arr_mem_45162;
    
    sync_arr_mem_45162 = (__local char *) sync_arr_mem_45162_backing_1;
    
    int32_t phys_group_id_45164;
    
    phys_group_id_45164 = get_group_id(0);
    for (int32_t i_45165 = 0; i_45165 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45148) - phys_group_id_45164,
                   sext_i64_i32(num_groups_35954)); i_45165++) {
        int32_t virt_group_id_45166 = phys_group_id_45164 + i_45165 *
                sext_i64_i32(num_groups_35954);
        int32_t flat_segment_id_45167 = squot32(virt_group_id_45166,
                                                sext_i64_i32(groups_per_segment_45146));
        int64_t global_tid_45168 = srem64(sext_i32_i64(virt_group_id_45166) *
                                          segred_group_sizze_35953 +
                                          sext_i32_i64(local_tid_45156),
                                          segred_group_sizze_35953 *
                                          groups_per_segment_45146);
        int64_t gtid_35896 = squot64(sext_i32_i64(flat_segment_id_45167),
                                     N_28624);
        int64_t gtid_35897 = sext_i32_i64(flat_segment_id_45167) -
                squot64(sext_i32_i64(flat_segment_id_45167), N_28624) * N_28624;
        int64_t gtid_35906;
        float x_acc_45169;
        int64_t chunk_sizze_45170;
        
        chunk_sizze_45170 = smin64(elements_per_thread_45147,
                                   sdiv_up64(i32_res_28644 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45168)),
                                             threads_per_segment_45150));
        
        float x_35957;
        float x_35958;
        
        // neutral-initialise the accumulators
        {
            x_acc_45169 = 0.0F;
        }
        for (int64_t i_45174 = 0; i_45174 < chunk_sizze_45170; i_45174++) {
            gtid_35906 = sext_i32_i64(sext_i64_i32(global_tid_45168)) +
                threads_per_segment_45150 * i_45174;
            // apply map function
            {
                float x_35962 = ((__global
                                  float *) defunc_4_map_res_mem_43912)[gtid_35896 *
                                                                       i32_res_28644 +
                                                                       gtid_35906];
                float x_35963 = ((__global float *) mem_43394)[gtid_35897 *
                                                               i32_res_28644 +
                                                               gtid_35906];
                float defunc_1_f_res_35964 = x_35962 * x_35963;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35957 = x_acc_45169;
                }
                // load new values
                {
                    x_35958 = defunc_1_f_res_35964;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35959 = x_35957 + x_35958;
                    
                    // store in accumulator
                    {
                        x_acc_45169 = defunc_1_op_res_35959;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35957 = x_acc_45169;
            ((__local
              float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                x_35957;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45175;
        int32_t skip_waves_45176;
        
        skip_waves_45176 = 1;
        
        float x_45171;
        float x_45172;
        
        offset_45175 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45156,
                      sext_i64_i32(segred_group_sizze_35953))) {
                x_45171 = ((__local
                            float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156 +
                                                        offset_45175)];
            }
        }
        offset_45175 = 1;
        while (slt32(offset_45175, wave_sizze_45158)) {
            if (slt32(local_tid_45156 + offset_45175,
                      sext_i64_i32(segred_group_sizze_35953)) &&
                ((local_tid_45156 - squot32(local_tid_45156, wave_sizze_45158) *
                  wave_sizze_45158) & (2 * offset_45175 - 1)) == 0) {
                // read array element
                {
                    x_45172 = ((volatile __local
                                float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156 +
                                                            offset_45175)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45173 = x_45171 + x_45172;
                    
                    x_45171 = defunc_1_op_res_45173;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                        x_45171;
                }
            }
            offset_45175 *= 2;
        }
        while (slt32(skip_waves_45176,
                     squot32(sext_i64_i32(segred_group_sizze_35953) +
                             wave_sizze_45158 - 1, wave_sizze_45158))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45175 = skip_waves_45176 * wave_sizze_45158;
            if (slt32(local_tid_45156 + offset_45175,
                      sext_i64_i32(segred_group_sizze_35953)) &&
                ((local_tid_45156 - squot32(local_tid_45156, wave_sizze_45158) *
                  wave_sizze_45158) == 0 && (squot32(local_tid_45156,
                                                     wave_sizze_45158) & (2 *
                                                                          skip_waves_45176 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45172 = ((__local
                                float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156 +
                                                            offset_45175)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45173 = x_45171 + x_45172;
                    
                    x_45171 = defunc_1_op_res_45173;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                        x_45171;
                }
            }
            skip_waves_45176 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45156) == 0) {
                x_acc_45169 = x_45171;
            }
        }
        if (groups_per_segment_45146 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45156 == 0) {
                    ((__global float *) mem_44130)[gtid_35896 * N_28624 +
                                                   gtid_35897] = x_acc_45169;
                }
            }
        } else {
            int32_t old_counter_45177;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45156 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45151)[sext_i32_i64(virt_group_id_45166) *
                                                        segred_group_sizze_35953] =
                        x_acc_45169;
                    mem_fence_global();
                    old_counter_45177 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45153)[sext_i32_i64(srem32(flat_segment_id_45167,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45162)[0] =
                        old_counter_45177 == groups_per_segment_45146 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45178;
            
            is_last_group_45178 = ((__local bool *) sync_arr_mem_45162)[0];
            if (is_last_group_45178) {
                if (local_tid_45156 == 0) {
                    old_counter_45177 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45153)[sext_i32_i64(srem32(flat_segment_id_45167,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45146));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45179 =
                            sdiv_up64(groups_per_segment_45146,
                                      segred_group_sizze_35953);
                    
                    x_35957 = 0.0F;
                    for (int64_t i_45180 = 0; i_45180 < read_per_thread_45179;
                         i_45180++) {
                        int64_t group_res_id_45181 =
                                sext_i32_i64(local_tid_45156) *
                                read_per_thread_45179 + i_45180;
                        int64_t index_of_group_res_45182 =
                                sext_i32_i64(flat_segment_id_45167) *
                                groups_per_segment_45146 + group_res_id_45181;
                        
                        if (slt64(group_res_id_45181,
                                  groups_per_segment_45146)) {
                            x_35958 = ((__global
                                        float *) group_res_arr_mem_45151)[index_of_group_res_45182 *
                                                                          segred_group_sizze_35953];
                            
                            float defunc_1_op_res_35959;
                            
                            defunc_1_op_res_35959 = x_35957 + x_35958;
                            x_35957 = defunc_1_op_res_35959;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                    x_35957;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45183;
                    int32_t skip_waves_45184;
                    
                    skip_waves_45184 = 1;
                    
                    float x_45171;
                    float x_45172;
                    
                    offset_45183 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45156,
                                  sext_i64_i32(segred_group_sizze_35953))) {
                            x_45171 = ((__local
                                        float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156 +
                                                                    offset_45183)];
                        }
                    }
                    offset_45183 = 1;
                    while (slt32(offset_45183, wave_sizze_45158)) {
                        if (slt32(local_tid_45156 + offset_45183,
                                  sext_i64_i32(segred_group_sizze_35953)) &&
                            ((local_tid_45156 - squot32(local_tid_45156,
                                                        wave_sizze_45158) *
                              wave_sizze_45158) & (2 * offset_45183 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45172 = ((volatile __local
                                            float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156 +
                                                                        offset_45183)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45173 = x_45171 + x_45172;
                                
                                x_45171 = defunc_1_op_res_45173;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                                    x_45171;
                            }
                        }
                        offset_45183 *= 2;
                    }
                    while (slt32(skip_waves_45184,
                                 squot32(sext_i64_i32(segred_group_sizze_35953) +
                                         wave_sizze_45158 - 1,
                                         wave_sizze_45158))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45183 = skip_waves_45184 * wave_sizze_45158;
                        if (slt32(local_tid_45156 + offset_45183,
                                  sext_i64_i32(segred_group_sizze_35953)) &&
                            ((local_tid_45156 - squot32(local_tid_45156,
                                                        wave_sizze_45158) *
                              wave_sizze_45158) == 0 &&
                             (squot32(local_tid_45156, wave_sizze_45158) & (2 *
                                                                            skip_waves_45184 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45172 = ((__local
                                            float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156 +
                                                                        offset_45183)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45173 = x_45171 + x_45172;
                                
                                x_45171 = defunc_1_op_res_45173;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45160)[sext_i32_i64(local_tid_45156)] =
                                    x_45171;
                            }
                        }
                        skip_waves_45184 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45156 == 0) {
                            ((__global float *) mem_44130)[gtid_35896 *
                                                           N_28624 +
                                                           gtid_35897] =
                                x_45171;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35953
}
__kernel void mainMagnitudezisegred_large_36473(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45416_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45414_backing_aligned_1,
                                                int64_t N_28624,
                                                int64_t i32_res_28638,
                                                int64_t num_groups_36520,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_44174,
                                                __global
                                                unsigned char *mem_44225,
                                                __global
                                                unsigned char *mem_44228,
                                                int64_t groups_per_segment_45400,
                                                int64_t elements_per_thread_45401,
                                                int64_t virt_num_groups_45402,
                                                int64_t threads_per_segment_45404,
                                                __global
                                                unsigned char *group_res_arr_mem_45405,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45407)
{
    #define segred_group_sizze_36519 (mainMagnitudezisegred_group_sizze_36467)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45416_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45416_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45414_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45414_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45409;
    int32_t local_tid_45410;
    int64_t group_sizze_45413;
    int32_t wave_sizze_45412;
    int32_t group_tid_45411;
    
    global_tid_45409 = get_global_id(0);
    local_tid_45410 = get_local_id(0);
    group_sizze_45413 = get_local_size(0);
    wave_sizze_45412 = LOCKSTEP_WIDTH;
    group_tid_45411 = get_group_id(0);
    
    int32_t phys_tid_36473;
    
    phys_tid_36473 = global_tid_45409;
    
    __local char *red_arr_mem_45414;
    
    red_arr_mem_45414 = (__local char *) red_arr_mem_45414_backing_0;
    
    __local char *sync_arr_mem_45416;
    
    sync_arr_mem_45416 = (__local char *) sync_arr_mem_45416_backing_1;
    
    int32_t phys_group_id_45418;
    
    phys_group_id_45418 = get_group_id(0);
    for (int32_t i_45419 = 0; i_45419 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45402) - phys_group_id_45418,
                   sext_i64_i32(num_groups_36520)); i_45419++) {
        int32_t virt_group_id_45420 = phys_group_id_45418 + i_45419 *
                sext_i64_i32(num_groups_36520);
        int32_t flat_segment_id_45421 = squot32(virt_group_id_45420,
                                                sext_i64_i32(groups_per_segment_45400));
        int64_t global_tid_45422 = srem64(sext_i32_i64(virt_group_id_45420) *
                                          segred_group_sizze_36519 +
                                          sext_i32_i64(local_tid_45410),
                                          segred_group_sizze_36519 *
                                          groups_per_segment_45400);
        int64_t gtid_36464 = sext_i32_i64(flat_segment_id_45421);
        int64_t gtid_36472;
        float x_acc_45423;
        int64_t chunk_sizze_45424;
        
        chunk_sizze_45424 = smin64(elements_per_thread_45401,
                                   sdiv_up64(i32_res_28638 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45422)),
                                             threads_per_segment_45404));
        
        float x_36523;
        float x_36524;
        
        // neutral-initialise the accumulators
        {
            x_acc_45423 = 0.0F;
        }
        for (int64_t i_45428 = 0; i_45428 < chunk_sizze_45424; i_45428++) {
            gtid_36472 = sext_i32_i64(sext_i64_i32(global_tid_45422)) +
                threads_per_segment_45404 * i_45428;
            // apply map function
            {
                int32_t defunc_0_f_res_36527 = ((__global
                                                 int32_t *) mem_44225)[gtid_36464];
                int32_t index_primexp_41417 = sext_i64_i32(gtid_36472);
                bool cond_36529 = slt32(index_primexp_41417,
                                        defunc_0_f_res_36527);
                float defunc_0_f_res_36530;
                
                if (cond_36529) {
                    int64_t i_36531 = sext_i32_i64(index_primexp_41417);
                    float defunc_0_f_res_t_res_36532 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_36464 *
                                                                                              N_28624 +
                                                                                              i_36531];
                    
                    defunc_0_f_res_36530 = defunc_0_f_res_t_res_36532;
                } else {
                    defunc_0_f_res_36530 = 0.0F;
                }
                
                float defunc_0_f_res_36533 = defunc_0_f_res_36530 *
                      defunc_0_f_res_36530;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36523 = x_acc_45423;
                }
                // load new values
                {
                    x_36524 = defunc_0_f_res_36533;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36525 = x_36523 + x_36524;
                    
                    // store in accumulator
                    {
                        x_acc_45423 = defunc_1_op_res_36525;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36523 = x_acc_45423;
            ((__local
              float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410)] =
                x_36523;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45429;
        int32_t skip_waves_45430;
        
        skip_waves_45430 = 1;
        
        float x_45425;
        float x_45426;
        
        offset_45429 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45410,
                      sext_i64_i32(segred_group_sizze_36519))) {
                x_45425 = ((__local
                            float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410 +
                                                        offset_45429)];
            }
        }
        offset_45429 = 1;
        while (slt32(offset_45429, wave_sizze_45412)) {
            if (slt32(local_tid_45410 + offset_45429,
                      sext_i64_i32(segred_group_sizze_36519)) &&
                ((local_tid_45410 - squot32(local_tid_45410, wave_sizze_45412) *
                  wave_sizze_45412) & (2 * offset_45429 - 1)) == 0) {
                // read array element
                {
                    x_45426 = ((volatile __local
                                float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410 +
                                                            offset_45429)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45427 = x_45425 + x_45426;
                    
                    x_45425 = defunc_1_op_res_45427;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410)] =
                        x_45425;
                }
            }
            offset_45429 *= 2;
        }
        while (slt32(skip_waves_45430,
                     squot32(sext_i64_i32(segred_group_sizze_36519) +
                             wave_sizze_45412 - 1, wave_sizze_45412))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45429 = skip_waves_45430 * wave_sizze_45412;
            if (slt32(local_tid_45410 + offset_45429,
                      sext_i64_i32(segred_group_sizze_36519)) &&
                ((local_tid_45410 - squot32(local_tid_45410, wave_sizze_45412) *
                  wave_sizze_45412) == 0 && (squot32(local_tid_45410,
                                                     wave_sizze_45412) & (2 *
                                                                          skip_waves_45430 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45426 = ((__local
                                float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410 +
                                                            offset_45429)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45427 = x_45425 + x_45426;
                    
                    x_45425 = defunc_1_op_res_45427;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410)] =
                        x_45425;
                }
            }
            skip_waves_45430 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45410) == 0) {
                x_acc_45423 = x_45425;
            }
        }
        if (groups_per_segment_45400 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45410 == 0) {
                    ((__global float *) mem_44228)[gtid_36464] = x_acc_45423;
                }
            }
        } else {
            int32_t old_counter_45431;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45410 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45405)[sext_i32_i64(virt_group_id_45420) *
                                                        segred_group_sizze_36519] =
                        x_acc_45423;
                    mem_fence_global();
                    old_counter_45431 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45407)[sext_i32_i64(srem32(flat_segment_id_45421,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45416)[0] =
                        old_counter_45431 == groups_per_segment_45400 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45432;
            
            is_last_group_45432 = ((__local bool *) sync_arr_mem_45416)[0];
            if (is_last_group_45432) {
                if (local_tid_45410 == 0) {
                    old_counter_45431 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45407)[sext_i32_i64(srem32(flat_segment_id_45421,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45400));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45433 =
                            sdiv_up64(groups_per_segment_45400,
                                      segred_group_sizze_36519);
                    
                    x_36523 = 0.0F;
                    for (int64_t i_45434 = 0; i_45434 < read_per_thread_45433;
                         i_45434++) {
                        int64_t group_res_id_45435 =
                                sext_i32_i64(local_tid_45410) *
                                read_per_thread_45433 + i_45434;
                        int64_t index_of_group_res_45436 =
                                sext_i32_i64(flat_segment_id_45421) *
                                groups_per_segment_45400 + group_res_id_45435;
                        
                        if (slt64(group_res_id_45435,
                                  groups_per_segment_45400)) {
                            x_36524 = ((__global
                                        float *) group_res_arr_mem_45405)[index_of_group_res_45436 *
                                                                          segred_group_sizze_36519];
                            
                            float defunc_1_op_res_36525;
                            
                            defunc_1_op_res_36525 = x_36523 + x_36524;
                            x_36523 = defunc_1_op_res_36525;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410)] =
                    x_36523;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45437;
                    int32_t skip_waves_45438;
                    
                    skip_waves_45438 = 1;
                    
                    float x_45425;
                    float x_45426;
                    
                    offset_45437 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45410,
                                  sext_i64_i32(segred_group_sizze_36519))) {
                            x_45425 = ((__local
                                        float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410 +
                                                                    offset_45437)];
                        }
                    }
                    offset_45437 = 1;
                    while (slt32(offset_45437, wave_sizze_45412)) {
                        if (slt32(local_tid_45410 + offset_45437,
                                  sext_i64_i32(segred_group_sizze_36519)) &&
                            ((local_tid_45410 - squot32(local_tid_45410,
                                                        wave_sizze_45412) *
                              wave_sizze_45412) & (2 * offset_45437 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45426 = ((volatile __local
                                            float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410 +
                                                                        offset_45437)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45427 = x_45425 + x_45426;
                                
                                x_45425 = defunc_1_op_res_45427;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410)] =
                                    x_45425;
                            }
                        }
                        offset_45437 *= 2;
                    }
                    while (slt32(skip_waves_45438,
                                 squot32(sext_i64_i32(segred_group_sizze_36519) +
                                         wave_sizze_45412 - 1,
                                         wave_sizze_45412))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45437 = skip_waves_45438 * wave_sizze_45412;
                        if (slt32(local_tid_45410 + offset_45437,
                                  sext_i64_i32(segred_group_sizze_36519)) &&
                            ((local_tid_45410 - squot32(local_tid_45410,
                                                        wave_sizze_45412) *
                              wave_sizze_45412) == 0 &&
                             (squot32(local_tid_45410, wave_sizze_45412) & (2 *
                                                                            skip_waves_45438 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45426 = ((__local
                                            float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410 +
                                                                        offset_45437)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45427 = x_45425 + x_45426;
                                
                                x_45425 = defunc_1_op_res_45427;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45414)[sext_i32_i64(local_tid_45410)] =
                                    x_45425;
                            }
                        }
                        skip_waves_45438 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45410 == 0) {
                            ((__global float *) mem_44228)[gtid_36464] =
                                x_45425;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36519
}
__kernel void mainMagnitudezisegred_large_36494(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45356_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45354_backing_aligned_1,
                                                int64_t N_28626,
                                                int64_t i32_res_28638,
                                                int64_t num_groups_36506,
                                                __global
                                                unsigned char *images_mem_43378,
                                                __global
                                                unsigned char *mem_44225,
                                                int64_t groups_per_segment_45340,
                                                int64_t elements_per_thread_45341,
                                                int64_t virt_num_groups_45342,
                                                int64_t threads_per_segment_45344,
                                                __global
                                                unsigned char *group_res_arr_mem_45345,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45347)
{
    #define segred_group_sizze_36505 (mainMagnitudezisegred_group_sizze_36488)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45356_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45356_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45354_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45354_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45349;
    int32_t local_tid_45350;
    int64_t group_sizze_45353;
    int32_t wave_sizze_45352;
    int32_t group_tid_45351;
    
    global_tid_45349 = get_global_id(0);
    local_tid_45350 = get_local_id(0);
    group_sizze_45353 = get_local_size(0);
    wave_sizze_45352 = LOCKSTEP_WIDTH;
    group_tid_45351 = get_group_id(0);
    
    int32_t phys_tid_36494;
    
    phys_tid_36494 = global_tid_45349;
    
    __local char *red_arr_mem_45354;
    
    red_arr_mem_45354 = (__local char *) red_arr_mem_45354_backing_0;
    
    __local char *sync_arr_mem_45356;
    
    sync_arr_mem_45356 = (__local char *) sync_arr_mem_45356_backing_1;
    
    int32_t phys_group_id_45358;
    
    phys_group_id_45358 = get_group_id(0);
    for (int32_t i_45359 = 0; i_45359 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45342) - phys_group_id_45358,
                   sext_i64_i32(num_groups_36506)); i_45359++) {
        int32_t virt_group_id_45360 = phys_group_id_45358 + i_45359 *
                sext_i64_i32(num_groups_36506);
        int32_t flat_segment_id_45361 = squot32(virt_group_id_45360,
                                                sext_i64_i32(groups_per_segment_45340));
        int64_t global_tid_45362 = srem64(sext_i32_i64(virt_group_id_45360) *
                                          segred_group_sizze_36505 +
                                          sext_i32_i64(local_tid_45350),
                                          segred_group_sizze_36505 *
                                          groups_per_segment_45340);
        int64_t gtid_36485 = sext_i32_i64(flat_segment_id_45361);
        int64_t gtid_36493;
        int32_t x_acc_45363;
        int64_t chunk_sizze_45364;
        
        chunk_sizze_45364 = smin64(elements_per_thread_45341,
                                   sdiv_up64(i32_res_28638 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45362)),
                                             threads_per_segment_45344));
        
        int32_t x_36509;
        int32_t x_36510;
        
        // neutral-initialise the accumulators
        {
            x_acc_45363 = 0;
        }
        for (int64_t i_45368 = 0; i_45368 < chunk_sizze_45364; i_45368++) {
            gtid_36493 = sext_i32_i64(sext_i64_i32(global_tid_45362)) +
                threads_per_segment_45344 * i_45368;
            // apply map function
            {
                float x_36513 = ((__global
                                  float *) images_mem_43378)[gtid_36485 *
                                                             N_28626 +
                                                             gtid_36493];
                bool isnan_res_36514;
                
                isnan_res_36514 = futrts_isnan32(x_36513);
                
                bool cond_36515 = !isnan_res_36514;
                int32_t defunc_0_f_res_36516 = btoi_bool_i32(cond_36515);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36509 = x_acc_45363;
                }
                // load new values
                {
                    x_36510 = defunc_0_f_res_36516;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_36511 = add32(x_36509, x_36510);
                    
                    // store in accumulator
                    {
                        x_acc_45363 = defunc_1_op_res_36511;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36509 = x_acc_45363;
            ((__local
              int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350)] =
                x_36509;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45369;
        int32_t skip_waves_45370;
        
        skip_waves_45370 = 1;
        
        int32_t x_45365;
        int32_t x_45366;
        
        offset_45369 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45350,
                      sext_i64_i32(segred_group_sizze_36505))) {
                x_45365 = ((__local
                            int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350 +
                                                          offset_45369)];
            }
        }
        offset_45369 = 1;
        while (slt32(offset_45369, wave_sizze_45352)) {
            if (slt32(local_tid_45350 + offset_45369,
                      sext_i64_i32(segred_group_sizze_36505)) &&
                ((local_tid_45350 - squot32(local_tid_45350, wave_sizze_45352) *
                  wave_sizze_45352) & (2 * offset_45369 - 1)) == 0) {
                // read array element
                {
                    x_45366 = ((volatile __local
                                int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350 +
                                                              offset_45369)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45367 = add32(x_45365, x_45366);
                    
                    x_45365 = defunc_1_op_res_45367;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350)] =
                        x_45365;
                }
            }
            offset_45369 *= 2;
        }
        while (slt32(skip_waves_45370,
                     squot32(sext_i64_i32(segred_group_sizze_36505) +
                             wave_sizze_45352 - 1, wave_sizze_45352))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45369 = skip_waves_45370 * wave_sizze_45352;
            if (slt32(local_tid_45350 + offset_45369,
                      sext_i64_i32(segred_group_sizze_36505)) &&
                ((local_tid_45350 - squot32(local_tid_45350, wave_sizze_45352) *
                  wave_sizze_45352) == 0 && (squot32(local_tid_45350,
                                                     wave_sizze_45352) & (2 *
                                                                          skip_waves_45370 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45366 = ((__local
                                int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350 +
                                                              offset_45369)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45367 = add32(x_45365, x_45366);
                    
                    x_45365 = defunc_1_op_res_45367;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350)] =
                        x_45365;
                }
            }
            skip_waves_45370 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45350) == 0) {
                x_acc_45363 = x_45365;
            }
        }
        if (groups_per_segment_45340 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45350 == 0) {
                    ((__global int32_t *) mem_44225)[gtid_36485] = x_acc_45363;
                }
            }
        } else {
            int32_t old_counter_45371;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45350 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45345)[sext_i32_i64(virt_group_id_45360) *
                                                          segred_group_sizze_36505] =
                        x_acc_45363;
                    mem_fence_global();
                    old_counter_45371 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45347)[sext_i32_i64(srem32(flat_segment_id_45361,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45356)[0] =
                        old_counter_45371 == groups_per_segment_45340 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45372;
            
            is_last_group_45372 = ((__local bool *) sync_arr_mem_45356)[0];
            if (is_last_group_45372) {
                if (local_tid_45350 == 0) {
                    old_counter_45371 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45347)[sext_i32_i64(srem32(flat_segment_id_45361,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45340));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45373 =
                            sdiv_up64(groups_per_segment_45340,
                                      segred_group_sizze_36505);
                    
                    x_36509 = 0;
                    for (int64_t i_45374 = 0; i_45374 < read_per_thread_45373;
                         i_45374++) {
                        int64_t group_res_id_45375 =
                                sext_i32_i64(local_tid_45350) *
                                read_per_thread_45373 + i_45374;
                        int64_t index_of_group_res_45376 =
                                sext_i32_i64(flat_segment_id_45361) *
                                groups_per_segment_45340 + group_res_id_45375;
                        
                        if (slt64(group_res_id_45375,
                                  groups_per_segment_45340)) {
                            x_36510 = ((__global
                                        int32_t *) group_res_arr_mem_45345)[index_of_group_res_45376 *
                                                                            segred_group_sizze_36505];
                            
                            int32_t defunc_1_op_res_36511;
                            
                            defunc_1_op_res_36511 = add32(x_36509, x_36510);
                            x_36509 = defunc_1_op_res_36511;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350)] =
                    x_36509;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45377;
                    int32_t skip_waves_45378;
                    
                    skip_waves_45378 = 1;
                    
                    int32_t x_45365;
                    int32_t x_45366;
                    
                    offset_45377 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45350,
                                  sext_i64_i32(segred_group_sizze_36505))) {
                            x_45365 = ((__local
                                        int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350 +
                                                                      offset_45377)];
                        }
                    }
                    offset_45377 = 1;
                    while (slt32(offset_45377, wave_sizze_45352)) {
                        if (slt32(local_tid_45350 + offset_45377,
                                  sext_i64_i32(segred_group_sizze_36505)) &&
                            ((local_tid_45350 - squot32(local_tid_45350,
                                                        wave_sizze_45352) *
                              wave_sizze_45352) & (2 * offset_45377 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45366 = ((volatile __local
                                            int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350 +
                                                                          offset_45377)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45367 = add32(x_45365,
                                                                      x_45366);
                                
                                x_45365 = defunc_1_op_res_45367;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350)] =
                                    x_45365;
                            }
                        }
                        offset_45377 *= 2;
                    }
                    while (slt32(skip_waves_45378,
                                 squot32(sext_i64_i32(segred_group_sizze_36505) +
                                         wave_sizze_45352 - 1,
                                         wave_sizze_45352))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45377 = skip_waves_45378 * wave_sizze_45352;
                        if (slt32(local_tid_45350 + offset_45377,
                                  sext_i64_i32(segred_group_sizze_36505)) &&
                            ((local_tid_45350 - squot32(local_tid_45350,
                                                        wave_sizze_45352) *
                              wave_sizze_45352) == 0 &&
                             (squot32(local_tid_45350, wave_sizze_45352) & (2 *
                                                                            skip_waves_45378 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45366 = ((__local
                                            int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350 +
                                                                          offset_45377)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45367 = add32(x_45365,
                                                                      x_45366);
                                
                                x_45365 = defunc_1_op_res_45367;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45354)[sext_i32_i64(local_tid_45350)] =
                                    x_45365;
                            }
                        }
                        skip_waves_45378 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45350 == 0) {
                            ((__global int32_t *) mem_44225)[gtid_36485] =
                                x_45365;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36505
}
__kernel void mainMagnitudezisegred_large_36645(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45525_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45523_backing_aligned_1,
                                                int64_t N_28624,
                                                int64_t i32_res_28999,
                                                int64_t num_groups_36663,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_44174,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44237,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44238,
                                                __global
                                                unsigned char *mem_44271,
                                                int64_t groups_per_segment_45509,
                                                int64_t elements_per_thread_45510,
                                                int64_t virt_num_groups_45511,
                                                int64_t threads_per_segment_45513,
                                                __global
                                                unsigned char *group_res_arr_mem_45514,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45516)
{
    #define segred_group_sizze_36662 (mainMagnitudezisegred_group_sizze_36639)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45525_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45525_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45523_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45523_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45518;
    int32_t local_tid_45519;
    int64_t group_sizze_45522;
    int32_t wave_sizze_45521;
    int32_t group_tid_45520;
    
    global_tid_45518 = get_global_id(0);
    local_tid_45519 = get_local_id(0);
    group_sizze_45522 = get_local_size(0);
    wave_sizze_45521 = LOCKSTEP_WIDTH;
    group_tid_45520 = get_group_id(0);
    
    int32_t phys_tid_36645;
    
    phys_tid_36645 = global_tid_45518;
    
    __local char *red_arr_mem_45523;
    
    red_arr_mem_45523 = (__local char *) red_arr_mem_45523_backing_0;
    
    __local char *sync_arr_mem_45525;
    
    sync_arr_mem_45525 = (__local char *) sync_arr_mem_45525_backing_1;
    
    int32_t phys_group_id_45527;
    
    phys_group_id_45527 = get_group_id(0);
    for (int32_t i_45528 = 0; i_45528 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45511) - phys_group_id_45527,
                   sext_i64_i32(num_groups_36663)); i_45528++) {
        int32_t virt_group_id_45529 = phys_group_id_45527 + i_45528 *
                sext_i64_i32(num_groups_36663);
        int32_t flat_segment_id_45530 = squot32(virt_group_id_45529,
                                                sext_i64_i32(groups_per_segment_45509));
        int64_t global_tid_45531 = srem64(sext_i32_i64(virt_group_id_45529) *
                                          segred_group_sizze_36662 +
                                          sext_i32_i64(local_tid_45519),
                                          segred_group_sizze_36662 *
                                          groups_per_segment_45509);
        int64_t gtid_36636 = sext_i32_i64(flat_segment_id_45530);
        int64_t gtid_36644;
        float x_acc_45532;
        int64_t chunk_sizze_45533;
        
        chunk_sizze_45533 = smin64(elements_per_thread_45510,
                                   sdiv_up64(i32_res_28999 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45531)),
                                             threads_per_segment_45513));
        
        float x_36666;
        float x_36667;
        
        // neutral-initialise the accumulators
        {
            x_acc_45532 = 0.0F;
        }
        for (int64_t i_45537 = 0; i_45537 < chunk_sizze_45533; i_45537++) {
            gtid_36644 = sext_i32_i64(sext_i64_i32(global_tid_45531)) +
                threads_per_segment_45513 * i_45537;
            // apply map function
            {
                int32_t x_36671 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44237)[gtid_36636];
                int32_t index_primexp_41422 = sext_i64_i32(gtid_36644);
                bool cond_36673 = slt32(index_primexp_41422, x_36671);
                float defunc_0_f_res_36674;
                
                if (cond_36673) {
                    int32_t x_36670 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_36636];
                    int32_t x_36675 = add32(x_36670, index_primexp_41422);
                    int32_t x_36676 = sub32(x_36675, x_36671);
                    int32_t i_36677 = add32(1, x_36676);
                    int64_t i_36678 = sext_i32_i64(i_36677);
                    float defunc_0_f_res_t_res_36679 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_36636 *
                                                                                              N_28624 +
                                                                                              i_36678];
                    
                    defunc_0_f_res_36674 = defunc_0_f_res_t_res_36679;
                } else {
                    defunc_0_f_res_36674 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_36666 = x_acc_45532;
                }
                // load new values
                {
                    x_36667 = defunc_0_f_res_36674;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36668 = x_36666 + x_36667;
                    
                    // store in accumulator
                    {
                        x_acc_45532 = defunc_1_op_res_36668;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36666 = x_acc_45532;
            ((__local
              float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519)] =
                x_36666;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45538;
        int32_t skip_waves_45539;
        
        skip_waves_45539 = 1;
        
        float x_45534;
        float x_45535;
        
        offset_45538 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45519,
                      sext_i64_i32(segred_group_sizze_36662))) {
                x_45534 = ((__local
                            float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519 +
                                                        offset_45538)];
            }
        }
        offset_45538 = 1;
        while (slt32(offset_45538, wave_sizze_45521)) {
            if (slt32(local_tid_45519 + offset_45538,
                      sext_i64_i32(segred_group_sizze_36662)) &&
                ((local_tid_45519 - squot32(local_tid_45519, wave_sizze_45521) *
                  wave_sizze_45521) & (2 * offset_45538 - 1)) == 0) {
                // read array element
                {
                    x_45535 = ((volatile __local
                                float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519 +
                                                            offset_45538)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45536 = x_45534 + x_45535;
                    
                    x_45534 = defunc_1_op_res_45536;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519)] =
                        x_45534;
                }
            }
            offset_45538 *= 2;
        }
        while (slt32(skip_waves_45539,
                     squot32(sext_i64_i32(segred_group_sizze_36662) +
                             wave_sizze_45521 - 1, wave_sizze_45521))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45538 = skip_waves_45539 * wave_sizze_45521;
            if (slt32(local_tid_45519 + offset_45538,
                      sext_i64_i32(segred_group_sizze_36662)) &&
                ((local_tid_45519 - squot32(local_tid_45519, wave_sizze_45521) *
                  wave_sizze_45521) == 0 && (squot32(local_tid_45519,
                                                     wave_sizze_45521) & (2 *
                                                                          skip_waves_45539 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45535 = ((__local
                                float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519 +
                                                            offset_45538)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45536 = x_45534 + x_45535;
                    
                    x_45534 = defunc_1_op_res_45536;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519)] =
                        x_45534;
                }
            }
            skip_waves_45539 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45519) == 0) {
                x_acc_45532 = x_45534;
            }
        }
        if (groups_per_segment_45509 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45519 == 0) {
                    ((__global float *) mem_44271)[gtid_36636] = x_acc_45532;
                }
            }
        } else {
            int32_t old_counter_45540;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45519 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45514)[sext_i32_i64(virt_group_id_45529) *
                                                        segred_group_sizze_36662] =
                        x_acc_45532;
                    mem_fence_global();
                    old_counter_45540 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45516)[sext_i32_i64(srem32(flat_segment_id_45530,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45525)[0] =
                        old_counter_45540 == groups_per_segment_45509 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45541;
            
            is_last_group_45541 = ((__local bool *) sync_arr_mem_45525)[0];
            if (is_last_group_45541) {
                if (local_tid_45519 == 0) {
                    old_counter_45540 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45516)[sext_i32_i64(srem32(flat_segment_id_45530,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45509));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45542 =
                            sdiv_up64(groups_per_segment_45509,
                                      segred_group_sizze_36662);
                    
                    x_36666 = 0.0F;
                    for (int64_t i_45543 = 0; i_45543 < read_per_thread_45542;
                         i_45543++) {
                        int64_t group_res_id_45544 =
                                sext_i32_i64(local_tid_45519) *
                                read_per_thread_45542 + i_45543;
                        int64_t index_of_group_res_45545 =
                                sext_i32_i64(flat_segment_id_45530) *
                                groups_per_segment_45509 + group_res_id_45544;
                        
                        if (slt64(group_res_id_45544,
                                  groups_per_segment_45509)) {
                            x_36667 = ((__global
                                        float *) group_res_arr_mem_45514)[index_of_group_res_45545 *
                                                                          segred_group_sizze_36662];
                            
                            float defunc_1_op_res_36668;
                            
                            defunc_1_op_res_36668 = x_36666 + x_36667;
                            x_36666 = defunc_1_op_res_36668;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519)] =
                    x_36666;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45546;
                    int32_t skip_waves_45547;
                    
                    skip_waves_45547 = 1;
                    
                    float x_45534;
                    float x_45535;
                    
                    offset_45546 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45519,
                                  sext_i64_i32(segred_group_sizze_36662))) {
                            x_45534 = ((__local
                                        float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519 +
                                                                    offset_45546)];
                        }
                    }
                    offset_45546 = 1;
                    while (slt32(offset_45546, wave_sizze_45521)) {
                        if (slt32(local_tid_45519 + offset_45546,
                                  sext_i64_i32(segred_group_sizze_36662)) &&
                            ((local_tid_45519 - squot32(local_tid_45519,
                                                        wave_sizze_45521) *
                              wave_sizze_45521) & (2 * offset_45546 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45535 = ((volatile __local
                                            float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519 +
                                                                        offset_45546)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45536 = x_45534 + x_45535;
                                
                                x_45534 = defunc_1_op_res_45536;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519)] =
                                    x_45534;
                            }
                        }
                        offset_45546 *= 2;
                    }
                    while (slt32(skip_waves_45547,
                                 squot32(sext_i64_i32(segred_group_sizze_36662) +
                                         wave_sizze_45521 - 1,
                                         wave_sizze_45521))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45546 = skip_waves_45547 * wave_sizze_45521;
                        if (slt32(local_tid_45519 + offset_45546,
                                  sext_i64_i32(segred_group_sizze_36662)) &&
                            ((local_tid_45519 - squot32(local_tid_45519,
                                                        wave_sizze_45521) *
                              wave_sizze_45521) == 0 &&
                             (squot32(local_tid_45519, wave_sizze_45521) & (2 *
                                                                            skip_waves_45547 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45535 = ((__local
                                            float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519 +
                                                                        offset_45546)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45536 = x_45534 + x_45535;
                                
                                x_45534 = defunc_1_op_res_45536;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45523)[sext_i32_i64(local_tid_45519)] =
                                    x_45534;
                            }
                        }
                        skip_waves_45547 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45519 == 0) {
                            ((__global float *) mem_44271)[gtid_36636] =
                                x_45534;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36662
}
__kernel void mainMagnitudezisegred_large_37641(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45710_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45708_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_45706_backing_aligned_2,
                                                __local volatile
                                                int64_t *red_arr_mem_45704_backing_aligned_3,
                                                int64_t iota32_arg_29024,
                                                int64_t num_groups_37812,
                                                __global
                                                unsigned char *mem_44277,
                                                __global
                                                unsigned char *mem_44318,
                                                __global
                                                unsigned char *mem_44320,
                                                __global
                                                unsigned char *mem_44324,
                                                __global
                                                unsigned char *mem_44327,
                                                __global
                                                unsigned char *mem_44329,
                                                __global
                                                unsigned char *mem_44331,
                                                int64_t groups_per_segment_45686,
                                                int64_t elements_per_thread_45687,
                                                int64_t virt_num_groups_45688,
                                                __global
                                                unsigned char *group_res_arr_mem_45691,
                                                __global
                                                unsigned char *group_res_arr_mem_45693,
                                                __global
                                                unsigned char *group_res_arr_mem_45695,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45697)
{
    #define segred_group_sizze_37811 (mainMagnitudezisegred_group_sizze_37635)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45710_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45710_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45708_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45708_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45706_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45706_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45704_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45704_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45699;
    int32_t local_tid_45700;
    int64_t group_sizze_45703;
    int32_t wave_sizze_45702;
    int32_t group_tid_45701;
    
    global_tid_45699 = get_global_id(0);
    local_tid_45700 = get_local_id(0);
    group_sizze_45703 = get_local_size(0);
    wave_sizze_45702 = LOCKSTEP_WIDTH;
    group_tid_45701 = get_group_id(0);
    
    int32_t phys_tid_37641;
    
    phys_tid_37641 = global_tid_45699;
    
    __local char *red_arr_mem_45704;
    
    red_arr_mem_45704 = (__local char *) red_arr_mem_45704_backing_0;
    
    __local char *red_arr_mem_45706;
    
    red_arr_mem_45706 = (__local char *) red_arr_mem_45706_backing_1;
    
    __local char *red_arr_mem_45708;
    
    red_arr_mem_45708 = (__local char *) red_arr_mem_45708_backing_2;
    
    __local char *sync_arr_mem_45710;
    
    sync_arr_mem_45710 = (__local char *) sync_arr_mem_45710_backing_3;
    
    int32_t phys_group_id_45712;
    
    phys_group_id_45712 = get_group_id(0);
    for (int32_t i_45713 = 0; i_45713 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45688) - phys_group_id_45712,
                   sext_i64_i32(num_groups_37812)); i_45713++) {
        int32_t virt_group_id_45714 = phys_group_id_45712 + i_45713 *
                sext_i64_i32(num_groups_37812);
        int32_t flat_segment_id_45715 = squot32(virt_group_id_45714,
                                                sext_i64_i32(groups_per_segment_45686));
        int64_t global_tid_45716 = srem64(sext_i32_i64(virt_group_id_45714) *
                                          segred_group_sizze_37811 +
                                          sext_i32_i64(local_tid_45700),
                                          segred_group_sizze_37811 *
                                          groups_per_segment_45686);
        int64_t gtid_37632 = sext_i32_i64(flat_segment_id_45715);
        int64_t gtid_37640;
        bool x_acc_45717;
        int32_t x_acc_45718;
        float x_acc_45719;
        int64_t chunk_sizze_45720;
        int64_t starting_point_45721;
        
        starting_point_45721 = sext_i32_i64(sext_i64_i32(global_tid_45716)) *
            elements_per_thread_45687;
        
        int64_t remaining_elements_45722;
        
        remaining_elements_45722 = iota32_arg_29024 - starting_point_45721;
        if (sle64(remaining_elements_45722, 0) || sle64(iota32_arg_29024,
                                                        starting_point_45721)) {
            chunk_sizze_45720 = 0;
        } else {
            if (slt64(iota32_arg_29024,
                      (sext_i32_i64(sext_i64_i32(global_tid_45716)) + 1) *
                      elements_per_thread_45687)) {
                chunk_sizze_45720 = iota32_arg_29024 -
                    sext_i32_i64(sext_i64_i32(global_tid_45716)) *
                    elements_per_thread_45687;
            } else {
                chunk_sizze_45720 = elements_per_thread_45687;
            }
        }
        
        bool x_37817;
        int32_t x_37818;
        float x_37819;
        bool x_37820;
        int32_t x_37821;
        float x_37822;
        
        // neutral-initialise the accumulators
        {
            x_acc_45717 = 0;
            x_acc_45718 = -1;
            x_acc_45719 = 0.0F;
        }
        for (int64_t i_45737 = 0; i_45737 < elements_per_thread_45687;
             i_45737++) {
            gtid_37640 = sext_i32_i64(local_tid_45700) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45716),
                                      sext_i64_i32(segred_group_sizze_37811))) *
                 elements_per_thread_45687 + i_45737) *
                segred_group_sizze_37811;
            if (slt64(gtid_37640, iota32_arg_29024)) {
                // apply map function
                {
                    int32_t y_37831 = ((__global
                                        int32_t *) mem_44320)[gtid_37632];
                    float y_37832 = ((__global float *) mem_44318)[gtid_37632];
                    float x_37836 = ((__global float *) mem_44324)[gtid_37632 *
                                                                   iota32_arg_29024 +
                                                                   gtid_37640];
                    float x_37837 = ((__global float *) mem_44277)[gtid_37640];
                    int32_t index_primexp_41439 = sext_i64_i32(gtid_37640);
                    float defunc_0_f_res_37840 = x_37836 / y_37832;
                    bool cond_37841 = slt32(index_primexp_41439, y_37831);
                    bool isnan_res_37842;
                    
                    isnan_res_37842 = futrts_isnan32(defunc_0_f_res_37840);
                    
                    bool cond_t_res_37843 = !isnan_res_37842;
                    bool x_37844 = cond_37841 && cond_t_res_37843;
                    float abs_res_37845 = (float) fabs(defunc_0_f_res_37840);
                    bool defunc_2_f_res_t_res_37846 = x_37837 < abs_res_37845;
                    bool x_37847 = x_37844 && defunc_2_f_res_t_res_37846;
                    float defunc_1_f_res_37848;
                    
                    if (cond_37841) {
                        defunc_1_f_res_37848 = defunc_0_f_res_37840;
                    } else {
                        defunc_1_f_res_37848 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_37817 = x_acc_45717;
                        x_37818 = x_acc_45718;
                        x_37819 = x_acc_45719;
                    }
                    // load new values
                    {
                        x_37820 = x_37847;
                        x_37821 = index_primexp_41439;
                        x_37822 = defunc_1_f_res_37848;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_37823;
                        int32_t defunc_1_op_res_37824;
                        
                        if (x_37817) {
                            defunc_1_op_res_37823 = x_37817;
                            defunc_1_op_res_37824 = x_37818;
                        } else {
                            bool x_37825 = x_37820 && x_37820;
                            bool x_37826 = !x_37820;
                            bool y_37827 = x_37817 && x_37826;
                            bool defunc_1_op_res_f_res_37828 = x_37825 ||
                                 y_37827;
                            int32_t defunc_1_op_res_f_res_37829;
                            
                            if (x_37820) {
                                defunc_1_op_res_f_res_37829 = x_37821;
                            } else {
                                defunc_1_op_res_f_res_37829 = x_37818;
                            }
                            defunc_1_op_res_37823 = defunc_1_op_res_f_res_37828;
                            defunc_1_op_res_37824 = defunc_1_op_res_f_res_37829;
                        }
                        
                        float defunc_1_op_res_37830 = x_37819 + x_37822;
                        
                        // store in accumulator
                        {
                            x_acc_45717 = defunc_1_op_res_37823;
                            x_acc_45718 = defunc_1_op_res_37824;
                            x_acc_45719 = defunc_1_op_res_37830;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_37817 = x_acc_45717;
                x_37818 = x_acc_45718;
                x_37819 = x_acc_45719;
                ((__local
                  bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700)] =
                    x_37817;
                ((__local
                  int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700)] =
                    x_37818;
                ((__local
                  float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700)] =
                    x_37819;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45738;
            int32_t skip_waves_45739;
            
            skip_waves_45739 = 1;
            
            bool x_45723;
            int32_t x_45724;
            float x_45725;
            bool x_45726;
            int32_t x_45727;
            float x_45728;
            
            offset_45738 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45700,
                          sext_i64_i32(segred_group_sizze_37811))) {
                    x_45723 = ((__local
                                bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700 +
                                                           offset_45738)];
                    x_45724 = ((__local
                                int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700 +
                                                              offset_45738)];
                    x_45725 = ((__local
                                float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700 +
                                                            offset_45738)];
                }
            }
            offset_45738 = 1;
            while (slt32(offset_45738, wave_sizze_45702)) {
                if (slt32(local_tid_45700 + offset_45738,
                          sext_i64_i32(segred_group_sizze_37811)) &&
                    ((local_tid_45700 - squot32(local_tid_45700,
                                                wave_sizze_45702) *
                      wave_sizze_45702) & (2 * offset_45738 - 1)) == 0) {
                    // read array element
                    {
                        x_45726 = ((volatile __local
                                    bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700 +
                                                               offset_45738)];
                        x_45727 = ((volatile __local
                                    int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700 +
                                                                  offset_45738)];
                        x_45728 = ((volatile __local
                                    float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700 +
                                                                offset_45738)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45729;
                        int32_t defunc_1_op_res_45730;
                        
                        if (x_45723) {
                            defunc_1_op_res_45729 = x_45723;
                            defunc_1_op_res_45730 = x_45724;
                        } else {
                            bool x_45731 = x_45726 && x_45726;
                            bool x_45732 = !x_45726;
                            bool y_45733 = x_45723 && x_45732;
                            bool defunc_1_op_res_f_res_45734 = x_45731 ||
                                 y_45733;
                            int32_t defunc_1_op_res_f_res_45735;
                            
                            if (x_45726) {
                                defunc_1_op_res_f_res_45735 = x_45727;
                            } else {
                                defunc_1_op_res_f_res_45735 = x_45724;
                            }
                            defunc_1_op_res_45729 = defunc_1_op_res_f_res_45734;
                            defunc_1_op_res_45730 = defunc_1_op_res_f_res_45735;
                        }
                        
                        float defunc_1_op_res_45736 = x_45725 + x_45728;
                        
                        x_45723 = defunc_1_op_res_45729;
                        x_45724 = defunc_1_op_res_45730;
                        x_45725 = defunc_1_op_res_45736;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700)] =
                            x_45723;
                        ((volatile __local
                          int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700)] =
                            x_45724;
                        ((volatile __local
                          float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700)] =
                            x_45725;
                    }
                }
                offset_45738 *= 2;
            }
            while (slt32(skip_waves_45739,
                         squot32(sext_i64_i32(segred_group_sizze_37811) +
                                 wave_sizze_45702 - 1, wave_sizze_45702))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45738 = skip_waves_45739 * wave_sizze_45702;
                if (slt32(local_tid_45700 + offset_45738,
                          sext_i64_i32(segred_group_sizze_37811)) &&
                    ((local_tid_45700 - squot32(local_tid_45700,
                                                wave_sizze_45702) *
                      wave_sizze_45702) == 0 && (squot32(local_tid_45700,
                                                         wave_sizze_45702) &
                                                 (2 * skip_waves_45739 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45726 = ((__local
                                    bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700 +
                                                               offset_45738)];
                        x_45727 = ((__local
                                    int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700 +
                                                                  offset_45738)];
                        x_45728 = ((__local
                                    float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700 +
                                                                offset_45738)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45729;
                        int32_t defunc_1_op_res_45730;
                        
                        if (x_45723) {
                            defunc_1_op_res_45729 = x_45723;
                            defunc_1_op_res_45730 = x_45724;
                        } else {
                            bool x_45731 = x_45726 && x_45726;
                            bool x_45732 = !x_45726;
                            bool y_45733 = x_45723 && x_45732;
                            bool defunc_1_op_res_f_res_45734 = x_45731 ||
                                 y_45733;
                            int32_t defunc_1_op_res_f_res_45735;
                            
                            if (x_45726) {
                                defunc_1_op_res_f_res_45735 = x_45727;
                            } else {
                                defunc_1_op_res_f_res_45735 = x_45724;
                            }
                            defunc_1_op_res_45729 = defunc_1_op_res_f_res_45734;
                            defunc_1_op_res_45730 = defunc_1_op_res_f_res_45735;
                        }
                        
                        float defunc_1_op_res_45736 = x_45725 + x_45728;
                        
                        x_45723 = defunc_1_op_res_45729;
                        x_45724 = defunc_1_op_res_45730;
                        x_45725 = defunc_1_op_res_45736;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700)] =
                            x_45723;
                        ((__local
                          int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700)] =
                            x_45724;
                        ((__local
                          float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700)] =
                            x_45725;
                    }
                }
                skip_waves_45739 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45700) == 0) {
                    x_acc_45717 = x_45723;
                    x_acc_45718 = x_45724;
                    x_acc_45719 = x_45725;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45700) == 0)) {
                    x_acc_45717 = 0;
                    x_acc_45718 = -1;
                    x_acc_45719 = 0.0F;
                }
            }
        }
        x_37817 = x_acc_45717;
        x_37818 = x_acc_45718;
        x_37819 = x_acc_45719;
        if (groups_per_segment_45686 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45700 == 0) {
                    ((__global bool *) mem_44327)[gtid_37632] = x_acc_45717;
                    ((__global int32_t *) mem_44329)[gtid_37632] = x_acc_45718;
                    ((__global float *) mem_44331)[gtid_37632] = x_acc_45719;
                }
            }
        } else {
            int32_t old_counter_45740;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45700 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45691)[sext_i32_i64(virt_group_id_45714) *
                                                       segred_group_sizze_37811] =
                        x_acc_45717;
                    ((__global
                      int32_t *) group_res_arr_mem_45693)[sext_i32_i64(virt_group_id_45714) *
                                                          segred_group_sizze_37811] =
                        x_acc_45718;
                    ((__global
                      float *) group_res_arr_mem_45695)[sext_i32_i64(virt_group_id_45714) *
                                                        segred_group_sizze_37811] =
                        x_acc_45719;
                    mem_fence_global();
                    old_counter_45740 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45697)[sext_i32_i64(srem32(flat_segment_id_45715,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45710)[0] =
                        old_counter_45740 == groups_per_segment_45686 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45741;
            
            is_last_group_45741 = ((__local bool *) sync_arr_mem_45710)[0];
            if (is_last_group_45741) {
                if (local_tid_45700 == 0) {
                    old_counter_45740 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45697)[sext_i32_i64(srem32(flat_segment_id_45715,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45686));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45742 =
                            sdiv_up64(groups_per_segment_45686,
                                      segred_group_sizze_37811);
                    
                    x_37817 = 0;
                    x_37818 = -1;
                    x_37819 = 0.0F;
                    for (int64_t i_45743 = 0; i_45743 < read_per_thread_45742;
                         i_45743++) {
                        int64_t group_res_id_45744 =
                                sext_i32_i64(local_tid_45700) *
                                read_per_thread_45742 + i_45743;
                        int64_t index_of_group_res_45745 =
                                sext_i32_i64(flat_segment_id_45715) *
                                groups_per_segment_45686 + group_res_id_45744;
                        
                        if (slt64(group_res_id_45744,
                                  groups_per_segment_45686)) {
                            x_37820 = ((__global
                                        bool *) group_res_arr_mem_45691)[index_of_group_res_45745 *
                                                                         segred_group_sizze_37811];
                            x_37821 = ((__global
                                        int32_t *) group_res_arr_mem_45693)[index_of_group_res_45745 *
                                                                            segred_group_sizze_37811];
                            x_37822 = ((__global
                                        float *) group_res_arr_mem_45695)[index_of_group_res_45745 *
                                                                          segred_group_sizze_37811];
                            
                            bool defunc_1_op_res_37823;
                            int32_t defunc_1_op_res_37824;
                            
                            if (x_37817) {
                                defunc_1_op_res_37823 = x_37817;
                                defunc_1_op_res_37824 = x_37818;
                            } else {
                                bool x_37825 = x_37820 && x_37820;
                                bool x_37826 = !x_37820;
                                bool y_37827 = x_37817 && x_37826;
                                bool defunc_1_op_res_f_res_37828 = x_37825 ||
                                     y_37827;
                                int32_t defunc_1_op_res_f_res_37829;
                                
                                if (x_37820) {
                                    defunc_1_op_res_f_res_37829 = x_37821;
                                } else {
                                    defunc_1_op_res_f_res_37829 = x_37818;
                                }
                                defunc_1_op_res_37823 =
                                    defunc_1_op_res_f_res_37828;
                                defunc_1_op_res_37824 =
                                    defunc_1_op_res_f_res_37829;
                            }
                            
                            float defunc_1_op_res_37830 = x_37819 + x_37822;
                            
                            x_37817 = defunc_1_op_res_37823;
                            x_37818 = defunc_1_op_res_37824;
                            x_37819 = defunc_1_op_res_37830;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700)] =
                    x_37817;
                ((__local
                  int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700)] =
                    x_37818;
                ((__local
                  float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700)] =
                    x_37819;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45746;
                    int32_t skip_waves_45747;
                    
                    skip_waves_45747 = 1;
                    
                    bool x_45723;
                    int32_t x_45724;
                    float x_45725;
                    bool x_45726;
                    int32_t x_45727;
                    float x_45728;
                    
                    offset_45746 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45700,
                                  sext_i64_i32(segred_group_sizze_37811))) {
                            x_45723 = ((__local
                                        bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700 +
                                                                   offset_45746)];
                            x_45724 = ((__local
                                        int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700 +
                                                                      offset_45746)];
                            x_45725 = ((__local
                                        float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700 +
                                                                    offset_45746)];
                        }
                    }
                    offset_45746 = 1;
                    while (slt32(offset_45746, wave_sizze_45702)) {
                        if (slt32(local_tid_45700 + offset_45746,
                                  sext_i64_i32(segred_group_sizze_37811)) &&
                            ((local_tid_45700 - squot32(local_tid_45700,
                                                        wave_sizze_45702) *
                              wave_sizze_45702) & (2 * offset_45746 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45726 = ((volatile __local
                                            bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700 +
                                                                       offset_45746)];
                                x_45727 = ((volatile __local
                                            int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700 +
                                                                          offset_45746)];
                                x_45728 = ((volatile __local
                                            float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700 +
                                                                        offset_45746)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45729;
                                int32_t defunc_1_op_res_45730;
                                
                                if (x_45723) {
                                    defunc_1_op_res_45729 = x_45723;
                                    defunc_1_op_res_45730 = x_45724;
                                } else {
                                    bool x_45731 = x_45726 && x_45726;
                                    bool x_45732 = !x_45726;
                                    bool y_45733 = x_45723 && x_45732;
                                    bool defunc_1_op_res_f_res_45734 =
                                         x_45731 || y_45733;
                                    int32_t defunc_1_op_res_f_res_45735;
                                    
                                    if (x_45726) {
                                        defunc_1_op_res_f_res_45735 = x_45727;
                                    } else {
                                        defunc_1_op_res_f_res_45735 = x_45724;
                                    }
                                    defunc_1_op_res_45729 =
                                        defunc_1_op_res_f_res_45734;
                                    defunc_1_op_res_45730 =
                                        defunc_1_op_res_f_res_45735;
                                }
                                
                                float defunc_1_op_res_45736 = x_45725 + x_45728;
                                
                                x_45723 = defunc_1_op_res_45729;
                                x_45724 = defunc_1_op_res_45730;
                                x_45725 = defunc_1_op_res_45736;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700)] =
                                    x_45723;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700)] =
                                    x_45724;
                                ((volatile __local
                                  float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700)] =
                                    x_45725;
                            }
                        }
                        offset_45746 *= 2;
                    }
                    while (slt32(skip_waves_45747,
                                 squot32(sext_i64_i32(segred_group_sizze_37811) +
                                         wave_sizze_45702 - 1,
                                         wave_sizze_45702))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45746 = skip_waves_45747 * wave_sizze_45702;
                        if (slt32(local_tid_45700 + offset_45746,
                                  sext_i64_i32(segred_group_sizze_37811)) &&
                            ((local_tid_45700 - squot32(local_tid_45700,
                                                        wave_sizze_45702) *
                              wave_sizze_45702) == 0 &&
                             (squot32(local_tid_45700, wave_sizze_45702) & (2 *
                                                                            skip_waves_45747 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45726 = ((__local
                                            bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700 +
                                                                       offset_45746)];
                                x_45727 = ((__local
                                            int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700 +
                                                                          offset_45746)];
                                x_45728 = ((__local
                                            float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700 +
                                                                        offset_45746)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45729;
                                int32_t defunc_1_op_res_45730;
                                
                                if (x_45723) {
                                    defunc_1_op_res_45729 = x_45723;
                                    defunc_1_op_res_45730 = x_45724;
                                } else {
                                    bool x_45731 = x_45726 && x_45726;
                                    bool x_45732 = !x_45726;
                                    bool y_45733 = x_45723 && x_45732;
                                    bool defunc_1_op_res_f_res_45734 =
                                         x_45731 || y_45733;
                                    int32_t defunc_1_op_res_f_res_45735;
                                    
                                    if (x_45726) {
                                        defunc_1_op_res_f_res_45735 = x_45727;
                                    } else {
                                        defunc_1_op_res_f_res_45735 = x_45724;
                                    }
                                    defunc_1_op_res_45729 =
                                        defunc_1_op_res_f_res_45734;
                                    defunc_1_op_res_45730 =
                                        defunc_1_op_res_f_res_45735;
                                }
                                
                                float defunc_1_op_res_45736 = x_45725 + x_45728;
                                
                                x_45723 = defunc_1_op_res_45729;
                                x_45724 = defunc_1_op_res_45730;
                                x_45725 = defunc_1_op_res_45736;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45704)[sext_i32_i64(local_tid_45700)] =
                                    x_45723;
                                ((__local
                                  int32_t *) red_arr_mem_45706)[sext_i32_i64(local_tid_45700)] =
                                    x_45724;
                                ((__local
                                  float *) red_arr_mem_45708)[sext_i32_i64(local_tid_45700)] =
                                    x_45725;
                            }
                        }
                        skip_waves_45747 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45700 == 0) {
                            ((__global bool *) mem_44327)[gtid_37632] = x_45723;
                            ((__global int32_t *) mem_44329)[gtid_37632] =
                                x_45724;
                            ((__global float *) mem_44331)[gtid_37632] =
                                x_45725;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37811
}
__kernel void mainMagnitudezisegred_nonseg_36563(__global int *global_failure,
                                                 __local volatile
                                                 int64_t *red_arr_mem_45459_backing_aligned_0,
                                                 __local volatile
                                                 int64_t *sync_arr_mem_45457_backing_aligned_1,
                                                 int64_t m_28625,
                                                 int64_t num_groups_36558,
                                                 __global
                                                 unsigned char *defunc_3_map_res_mem_44237,
                                                 __global
                                                 unsigned char *mem_44242,
                                                 __global
                                                 unsigned char *mainMagnitudezicounter_mem_45447,
                                                 __global
                                                 unsigned char *group_res_arr_mem_45449,
                                                 int64_t num_threads_45451)
{
    #define segred_group_sizze_36556 (mainMagnitudezisegred_group_sizze_36555)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45459_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45459_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45457_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45457_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45452;
    int32_t local_tid_45453;
    int64_t group_sizze_45456;
    int32_t wave_sizze_45455;
    int32_t group_tid_45454;
    
    global_tid_45452 = get_global_id(0);
    local_tid_45453 = get_local_id(0);
    group_sizze_45456 = get_local_size(0);
    wave_sizze_45455 = LOCKSTEP_WIDTH;
    group_tid_45454 = get_group_id(0);
    
    int32_t phys_tid_36563;
    
    phys_tid_36563 = global_tid_45452;
    
    __local char *sync_arr_mem_45457;
    
    sync_arr_mem_45457 = (__local char *) sync_arr_mem_45457_backing_0;
    
    __local char *red_arr_mem_45459;
    
    red_arr_mem_45459 = (__local char *) red_arr_mem_45459_backing_1;
    
    int64_t dummy_36561;
    
    dummy_36561 = 0;
    
    int64_t gtid_36562;
    
    gtid_36562 = 0;
    
    int32_t x_acc_45461;
    int64_t chunk_sizze_45462;
    
    chunk_sizze_45462 = smin64(sdiv_up64(m_28625,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_36556 *
                                         num_groups_36558))),
                               sdiv_up64(m_28625 - sext_i32_i64(phys_tid_36563),
                                         num_threads_45451));
    
    int32_t x_28995;
    int32_t x_28996;
    
    // neutral-initialise the accumulators
    {
        x_acc_45461 = 0;
    }
    for (int64_t i_45466 = 0; i_45466 < chunk_sizze_45462; i_45466++) {
        gtid_36562 = sext_i32_i64(phys_tid_36563) + num_threads_45451 * i_45466;
        // apply map function
        {
            int32_t x_28998 = ((__global
                                int32_t *) defunc_3_map_res_mem_44237)[gtid_36562];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28995 = x_acc_45461;
            }
            // load new values
            {
                x_28996 = x_28998;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28997 = smax32(x_28995, x_28996);
                
                // store in accumulator
                {
                    x_acc_45461 = defunc_1_op_res_28997;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28995 = x_acc_45461;
        ((__local int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453)] =
            x_28995;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45467;
    int32_t skip_waves_45468;
    
    skip_waves_45468 = 1;
    
    int32_t x_45463;
    int32_t x_45464;
    
    offset_45467 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45453, sext_i64_i32(segred_group_sizze_36556))) {
            x_45463 = ((__local
                        int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453 +
                                                      offset_45467)];
        }
    }
    offset_45467 = 1;
    while (slt32(offset_45467, wave_sizze_45455)) {
        if (slt32(local_tid_45453 + offset_45467,
                  sext_i64_i32(segred_group_sizze_36556)) && ((local_tid_45453 -
                                                               squot32(local_tid_45453,
                                                                       wave_sizze_45455) *
                                                               wave_sizze_45455) &
                                                              (2 *
                                                               offset_45467 -
                                                               1)) == 0) {
            // read array element
            {
                x_45464 = ((volatile __local
                            int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453 +
                                                          offset_45467)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45465 = smax32(x_45463, x_45464);
                
                x_45463 = defunc_1_op_res_45465;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453)] =
                    x_45463;
            }
        }
        offset_45467 *= 2;
    }
    while (slt32(skip_waves_45468,
                 squot32(sext_i64_i32(segred_group_sizze_36556) +
                         wave_sizze_45455 - 1, wave_sizze_45455))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45467 = skip_waves_45468 * wave_sizze_45455;
        if (slt32(local_tid_45453 + offset_45467,
                  sext_i64_i32(segred_group_sizze_36556)) && ((local_tid_45453 -
                                                               squot32(local_tid_45453,
                                                                       wave_sizze_45455) *
                                                               wave_sizze_45455) ==
                                                              0 &&
                                                              (squot32(local_tid_45453,
                                                                       wave_sizze_45455) &
                                                               (2 *
                                                                skip_waves_45468 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45464 = ((__local
                            int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453 +
                                                          offset_45467)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45465 = smax32(x_45463, x_45464);
                
                x_45463 = defunc_1_op_res_45465;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453)] =
                    x_45463;
            }
        }
        skip_waves_45468 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45453) == 0) {
            x_acc_45461 = x_45463;
        }
    }
    
    int32_t old_counter_45469;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45453 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45449)[sext_i32_i64(group_tid_45454) *
                                                  segred_group_sizze_36556] =
                x_acc_45461;
            mem_fence_global();
            old_counter_45469 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_45447)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45457)[0] = old_counter_45469 ==
                num_groups_36558 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45470;
    
    is_last_group_45470 = ((__local bool *) sync_arr_mem_45457)[0];
    if (is_last_group_45470) {
        if (local_tid_45453 == 0) {
            old_counter_45469 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_45447)[0],
                                                      (int) (0 -
                                                             num_groups_36558));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45471 = sdiv_up64(num_groups_36558,
                                                      segred_group_sizze_36556);
            
            x_28995 = 0;
            for (int64_t i_45472 = 0; i_45472 < read_per_thread_45471;
                 i_45472++) {
                int64_t group_res_id_45473 = sext_i32_i64(local_tid_45453) *
                        read_per_thread_45471 + i_45472;
                int64_t index_of_group_res_45474 = group_res_id_45473;
                
                if (slt64(group_res_id_45473, num_groups_36558)) {
                    x_28996 = ((__global
                                int32_t *) group_res_arr_mem_45449)[index_of_group_res_45474 *
                                                                    segred_group_sizze_36556];
                    
                    int32_t defunc_1_op_res_28997;
                    
                    defunc_1_op_res_28997 = smax32(x_28995, x_28996);
                    x_28995 = defunc_1_op_res_28997;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453)] =
            x_28995;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45475;
            int32_t skip_waves_45476;
            
            skip_waves_45476 = 1;
            
            int32_t x_45463;
            int32_t x_45464;
            
            offset_45475 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45453,
                          sext_i64_i32(segred_group_sizze_36556))) {
                    x_45463 = ((__local
                                int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453 +
                                                              offset_45475)];
                }
            }
            offset_45475 = 1;
            while (slt32(offset_45475, wave_sizze_45455)) {
                if (slt32(local_tid_45453 + offset_45475,
                          sext_i64_i32(segred_group_sizze_36556)) &&
                    ((local_tid_45453 - squot32(local_tid_45453,
                                                wave_sizze_45455) *
                      wave_sizze_45455) & (2 * offset_45475 - 1)) == 0) {
                    // read array element
                    {
                        x_45464 = ((volatile __local
                                    int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453 +
                                                                  offset_45475)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45465 = smax32(x_45463,
                                                               x_45464);
                        
                        x_45463 = defunc_1_op_res_45465;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453)] =
                            x_45463;
                    }
                }
                offset_45475 *= 2;
            }
            while (slt32(skip_waves_45476,
                         squot32(sext_i64_i32(segred_group_sizze_36556) +
                                 wave_sizze_45455 - 1, wave_sizze_45455))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45475 = skip_waves_45476 * wave_sizze_45455;
                if (slt32(local_tid_45453 + offset_45475,
                          sext_i64_i32(segred_group_sizze_36556)) &&
                    ((local_tid_45453 - squot32(local_tid_45453,
                                                wave_sizze_45455) *
                      wave_sizze_45455) == 0 && (squot32(local_tid_45453,
                                                         wave_sizze_45455) &
                                                 (2 * skip_waves_45476 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45464 = ((__local
                                    int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453 +
                                                                  offset_45475)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45465 = smax32(x_45463,
                                                               x_45464);
                        
                        x_45463 = defunc_1_op_res_45465;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45459)[sext_i32_i64(local_tid_45453)] =
                            x_45463;
                    }
                }
                skip_waves_45476 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45453 == 0) {
                    ((__global int32_t *) mem_44242)[0] = x_45463;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36556
}
__kernel void mainMagnitudezisegred_small_34593(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44716_backing_aligned_0,
                                                int64_t N_28624,
                                                int64_t m_28625,
                                                int64_t N_28626,
                                                int64_t i32_res_28638,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_34732,
                                                __global
                                                unsigned char *images_mem_43378,
                                                __global
                                                unsigned char *binop_p_mem_43387,
                                                __global
                                                unsigned char *mem_43528,
                                                __global
                                                unsigned char *mem_43533,
                                                int64_t segment_sizze_nonzzero_44709)
{
    #define segred_group_sizze_34731 (mainMagnitudezisegred_group_sizze_34587)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44716_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44716_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44711;
    int32_t local_tid_44712;
    int64_t group_sizze_44715;
    int32_t wave_sizze_44714;
    int32_t group_tid_44713;
    
    global_tid_44711 = get_global_id(0);
    local_tid_44712 = get_local_id(0);
    group_sizze_44715 = get_local_size(0);
    wave_sizze_44714 = LOCKSTEP_WIDTH;
    group_tid_44713 = get_group_id(0);
    
    int32_t phys_tid_34593;
    
    phys_tid_34593 = global_tid_44711;
    
    __local char *red_arr_mem_44716;
    
    red_arr_mem_44716 = (__local char *) red_arr_mem_44716_backing_0;
    
    int32_t phys_group_id_44718;
    
    phys_group_id_44718 = get_group_id(0);
    for (int32_t i_44719 = 0; i_44719 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625 * i32_res_28644 *
                                          i32_res_28644,
                                          squot64(segred_group_sizze_34731,
                                                  segment_sizze_nonzzero_44709))) -
                   phys_group_id_44718, sext_i64_i32(num_groups_34732));
         i_44719++) {
        int32_t virt_group_id_44720 = phys_group_id_44718 + i_44719 *
                sext_i64_i32(num_groups_34732);
        int64_t gtid_34580 = squot64(squot64(sext_i32_i64(local_tid_44712),
                                             segment_sizze_nonzzero_44709) +
                                     sext_i32_i64(virt_group_id_44720) *
                                     squot64(segred_group_sizze_34731,
                                             segment_sizze_nonzzero_44709),
                                     i32_res_28644 * i32_res_28644);
        int64_t gtid_34581 = squot64(squot64(sext_i32_i64(local_tid_44712),
                                             segment_sizze_nonzzero_44709) +
                                     sext_i32_i64(virt_group_id_44720) *
                                     squot64(segred_group_sizze_34731,
                                             segment_sizze_nonzzero_44709) -
                                     squot64(squot64(sext_i32_i64(local_tid_44712),
                                                     segment_sizze_nonzzero_44709) +
                                             sext_i32_i64(virt_group_id_44720) *
                                             squot64(segred_group_sizze_34731,
                                                     segment_sizze_nonzzero_44709),
                                             i32_res_28644 * i32_res_28644) *
                                     (i32_res_28644 * i32_res_28644),
                                     i32_res_28644);
        int64_t gtid_34582 = squot64(sext_i32_i64(local_tid_44712),
                                     segment_sizze_nonzzero_44709) +
                sext_i32_i64(virt_group_id_44720) *
                squot64(segred_group_sizze_34731,
                        segment_sizze_nonzzero_44709) -
                squot64(squot64(sext_i32_i64(local_tid_44712),
                                segment_sizze_nonzzero_44709) +
                        sext_i32_i64(virt_group_id_44720) *
                        squot64(segred_group_sizze_34731,
                                segment_sizze_nonzzero_44709), i32_res_28644 *
                        i32_res_28644) * (i32_res_28644 * i32_res_28644) -
                squot64(squot64(sext_i32_i64(local_tid_44712),
                                segment_sizze_nonzzero_44709) +
                        sext_i32_i64(virt_group_id_44720) *
                        squot64(segred_group_sizze_34731,
                                segment_sizze_nonzzero_44709) -
                        squot64(squot64(sext_i32_i64(local_tid_44712),
                                        segment_sizze_nonzzero_44709) +
                                sext_i32_i64(virt_group_id_44720) *
                                squot64(segred_group_sizze_34731,
                                        segment_sizze_nonzzero_44709),
                                i32_res_28644 * i32_res_28644) *
                        (i32_res_28644 * i32_res_28644), i32_res_28644) *
                i32_res_28644;
        int64_t gtid_34592 = srem64(sext_i32_i64(local_tid_44712),
                                    i32_res_28638);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28638) && (((slt64(gtid_34580, m_28625) &&
                                              slt64(gtid_34581,
                                                    i32_res_28644)) &&
                                             slt64(gtid_34582,
                                                   i32_res_28644)) &&
                                            slt64(sext_i32_i64(local_tid_44712),
                                                  i32_res_28638 *
                                                  squot64(segred_group_sizze_34731,
                                                          segment_sizze_nonzzero_44709)))) {
                float x_34741 = ((__global
                                  float *) images_mem_43378)[gtid_34580 *
                                                             N_28626 +
                                                             gtid_34592];
                float x_34742 = ((__global
                                  float *) binop_p_mem_43387)[gtid_34581 *
                                                              N_28624 +
                                                              gtid_34592];
                float x_34743 = ((__global float *) mem_43528)[gtid_34582 *
                                                               N_28624 +
                                                               gtid_34592];
                float x_34744 = x_34742 * x_34743;
                bool isnan_res_34745;
                
                isnan_res_34745 = futrts_isnan32(x_34741);
                
                float y_34746;
                
                if (isnan_res_34745) {
                    y_34746 = 0.0F;
                } else {
                    y_34746 = 1.0F;
                }
                
                float defunc_2_f_res_34747 = x_34744 * y_34746;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)] =
                        defunc_2_f_res_34747;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28638)) {
            // perform segmented scan to imitate reduction
            {
                float x_34735;
                float x_34736;
                float x_44721;
                float x_44722;
                bool ltid_in_bounds_44724;
                
                ltid_in_bounds_44724 = slt64(sext_i32_i64(local_tid_44712),
                                             i32_res_28638 *
                                             squot64(segred_group_sizze_34731,
                                                     segment_sizze_nonzzero_44709));
                
                int32_t skip_threads_44725;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44724) {
                        x_34736 = ((volatile __local
                                    float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)];
                        if ((local_tid_44712 - squot32(local_tid_44712, 32) *
                             32) == 0) {
                            x_34735 = x_34736;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44725 = 1;
                    while (slt32(skip_threads_44725, 32)) {
                        if (sle32(skip_threads_44725, local_tid_44712 -
                                  squot32(local_tid_44712, 32) * 32) &&
                            ltid_in_bounds_44724) {
                            // read operands
                            {
                                x_34735 = ((volatile __local
                                            float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712) -
                                                                        sext_i32_i64(skip_threads_44725)];
                            }
                            // perform operation
                            {
                                bool inactive_44726 =
                                     slt64(srem64(sext_i32_i64(local_tid_44712),
                                                  i32_res_28638),
                                           sext_i32_i64(local_tid_44712) -
                                           sext_i32_i64(local_tid_44712 -
                                           skip_threads_44725));
                                
                                if (inactive_44726) {
                                    x_34735 = x_34736;
                                }
                                if (!inactive_44726) {
                                    float defunc_1_op_res_34737 = x_34735 +
                                          x_34736;
                                    
                                    x_34735 = defunc_1_op_res_34737;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44714, skip_threads_44725)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44725, local_tid_44712 -
                                  squot32(local_tid_44712, 32) * 32) &&
                            ltid_in_bounds_44724) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)] =
                                    x_34735;
                                x_34736 = x_34735;
                            }
                        }
                        if (sle32(wave_sizze_44714, skip_threads_44725)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44725 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44712 - squot32(local_tid_44712, 32) * 32) ==
                        31 && ltid_in_bounds_44724) {
                        ((volatile __local
                          float *) red_arr_mem_44716)[sext_i32_i64(squot32(local_tid_44712,
                                                                           32))] =
                            x_34735;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44727;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44712, 32) == 0 &&
                            ltid_in_bounds_44724) {
                            x_44722 = ((volatile __local
                                        float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)];
                            if ((local_tid_44712 - squot32(local_tid_44712,
                                                           32) * 32) == 0) {
                                x_44721 = x_44722;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44727 = 1;
                        while (slt32(skip_threads_44727, 32)) {
                            if (sle32(skip_threads_44727, local_tid_44712 -
                                      squot32(local_tid_44712, 32) * 32) &&
                                (squot32(local_tid_44712, 32) == 0 &&
                                 ltid_in_bounds_44724)) {
                                // read operands
                                {
                                    x_44721 = ((volatile __local
                                                float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712) -
                                                                            sext_i32_i64(skip_threads_44727)];
                                }
                                // perform operation
                                {
                                    bool inactive_44728 =
                                         slt64(srem64(sext_i32_i64(local_tid_44712 *
                                                      32 + 32 - 1),
                                                      i32_res_28638),
                                               sext_i32_i64(local_tid_44712 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44712 -
                                                             skip_threads_44727) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44728) {
                                        x_44721 = x_44722;
                                    }
                                    if (!inactive_44728) {
                                        float defunc_1_op_res_44723 = x_44721 +
                                              x_44722;
                                        
                                        x_44721 = defunc_1_op_res_44723;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44714, skip_threads_44727)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44727, local_tid_44712 -
                                      squot32(local_tid_44712, 32) * 32) &&
                                (squot32(local_tid_44712, 32) == 0 &&
                                 ltid_in_bounds_44724)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)] =
                                        x_44721;
                                    x_44722 = x_44721;
                                }
                            }
                            if (sle32(wave_sizze_44714, skip_threads_44727)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44727 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44712, 32) == 0 ||
                          !ltid_in_bounds_44724)) {
                        // read operands
                        {
                            x_34736 = x_34735;
                            x_34735 = ((__local
                                        float *) red_arr_mem_44716)[sext_i32_i64(squot32(local_tid_44712,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44729 =
                                 slt64(srem64(sext_i32_i64(local_tid_44712),
                                              i32_res_28638),
                                       sext_i32_i64(local_tid_44712) -
                                       sext_i32_i64(squot32(local_tid_44712,
                                                            32) * 32 - 1));
                            
                            if (inactive_44729) {
                                x_34735 = x_34736;
                            }
                            if (!inactive_44729) {
                                float defunc_1_op_res_34737 = x_34735 + x_34736;
                                
                                x_34735 = defunc_1_op_res_34737;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)] =
                                x_34735;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44712, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44716)[sext_i32_i64(local_tid_44712)] =
                            x_34736;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44720) *
                      squot64(segred_group_sizze_34731,
                              segment_sizze_nonzzero_44709) +
                      sext_i32_i64(local_tid_44712), m_28625 * i32_res_28644 *
                      i32_res_28644) && slt64(sext_i32_i64(local_tid_44712),
                                              squot64(segred_group_sizze_34731,
                                                      segment_sizze_nonzzero_44709))) {
                ((__global
                  float *) mem_43533)[squot64(sext_i32_i64(virt_group_id_44720) *
                                              squot64(segred_group_sizze_34731,
                                                      segment_sizze_nonzzero_44709) +
                                              sext_i32_i64(local_tid_44712),
                                              i32_res_28644 * i32_res_28644) *
                                      (i32_res_28644 * i32_res_28644) +
                                      squot64(sext_i32_i64(virt_group_id_44720) *
                                              squot64(segred_group_sizze_34731,
                                                      segment_sizze_nonzzero_44709) +
                                              sext_i32_i64(local_tid_44712) -
                                              squot64(sext_i32_i64(virt_group_id_44720) *
                                                      squot64(segred_group_sizze_34731,
                                                              segment_sizze_nonzzero_44709) +
                                                      sext_i32_i64(local_tid_44712),
                                                      i32_res_28644 *
                                                      i32_res_28644) *
                                              (i32_res_28644 * i32_res_28644),
                                              i32_res_28644) * i32_res_28644 +
                                      (sext_i32_i64(virt_group_id_44720) *
                                       squot64(segred_group_sizze_34731,
                                               segment_sizze_nonzzero_44709) +
                                       sext_i32_i64(local_tid_44712) -
                                       squot64(sext_i32_i64(virt_group_id_44720) *
                                               squot64(segred_group_sizze_34731,
                                                       segment_sizze_nonzzero_44709) +
                                               sext_i32_i64(local_tid_44712),
                                               i32_res_28644 * i32_res_28644) *
                                       (i32_res_28644 * i32_res_28644) -
                                       squot64(sext_i32_i64(virt_group_id_44720) *
                                               squot64(segred_group_sizze_34731,
                                                       segment_sizze_nonzzero_44709) +
                                               sext_i32_i64(local_tid_44712) -
                                               squot64(sext_i32_i64(virt_group_id_44720) *
                                                       squot64(segred_group_sizze_34731,
                                                               segment_sizze_nonzzero_44709) +
                                                       sext_i32_i64(local_tid_44712),
                                                       i32_res_28644 *
                                                       i32_res_28644) *
                                               (i32_res_28644 * i32_res_28644),
                                               i32_res_28644) *
                                       i32_res_28644)] = ((__local
                                                           float *) red_arr_mem_44716)[(sext_i32_i64(local_tid_44712) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44709 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34731
}
__kernel void mainMagnitudezisegred_small_35640(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44912_backing_aligned_0,
                                                int64_t N_28624,
                                                int64_t m_28625,
                                                int64_t N_28626,
                                                int64_t i32_res_28638,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_35693,
                                                __global
                                                unsigned char *images_mem_43378,
                                                __global
                                                unsigned char *binop_p_mem_43387,
                                                __global
                                                unsigned char *mem_43840,
                                                int64_t segment_sizze_nonzzero_44905)
{
    #define segred_group_sizze_35692 (mainMagnitudezisegred_group_sizze_35634)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44912_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44912_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44907;
    int32_t local_tid_44908;
    int64_t group_sizze_44911;
    int32_t wave_sizze_44910;
    int32_t group_tid_44909;
    
    global_tid_44907 = get_global_id(0);
    local_tid_44908 = get_local_id(0);
    group_sizze_44911 = get_local_size(0);
    wave_sizze_44910 = LOCKSTEP_WIDTH;
    group_tid_44909 = get_group_id(0);
    
    int32_t phys_tid_35640;
    
    phys_tid_35640 = global_tid_44907;
    
    __local char *red_arr_mem_44912;
    
    red_arr_mem_44912 = (__local char *) red_arr_mem_44912_backing_0;
    
    int32_t phys_group_id_44914;
    
    phys_group_id_44914 = get_group_id(0);
    for (int32_t i_44915 = 0; i_44915 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625 * i32_res_28644,
                                          squot64(segred_group_sizze_35692,
                                                  segment_sizze_nonzzero_44905))) -
                   phys_group_id_44914, sext_i64_i32(num_groups_35693));
         i_44915++) {
        int32_t virt_group_id_44916 = phys_group_id_44914 + i_44915 *
                sext_i64_i32(num_groups_35693);
        int64_t gtid_35629 = squot64(squot64(sext_i32_i64(local_tid_44908),
                                             segment_sizze_nonzzero_44905) +
                                     sext_i32_i64(virt_group_id_44916) *
                                     squot64(segred_group_sizze_35692,
                                             segment_sizze_nonzzero_44905),
                                     i32_res_28644);
        int64_t gtid_35630 = squot64(sext_i32_i64(local_tid_44908),
                                     segment_sizze_nonzzero_44905) +
                sext_i32_i64(virt_group_id_44916) *
                squot64(segred_group_sizze_35692,
                        segment_sizze_nonzzero_44905) -
                squot64(squot64(sext_i32_i64(local_tid_44908),
                                segment_sizze_nonzzero_44905) +
                        sext_i32_i64(virt_group_id_44916) *
                        squot64(segred_group_sizze_35692,
                                segment_sizze_nonzzero_44905), i32_res_28644) *
                i32_res_28644;
        int64_t gtid_35639 = srem64(sext_i32_i64(local_tid_44908),
                                    i32_res_28638);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28638) && ((slt64(gtid_35629, m_28625) &&
                                             slt64(gtid_35630,
                                                   i32_res_28644)) &&
                                            slt64(sext_i32_i64(local_tid_44908),
                                                  i32_res_28638 *
                                                  squot64(segred_group_sizze_35692,
                                                          segment_sizze_nonzzero_44905)))) {
                float x_35702 = ((__global
                                  float *) images_mem_43378)[gtid_35629 *
                                                             N_28626 +
                                                             gtid_35639];
                bool isnan_res_35703;
                
                isnan_res_35703 = futrts_isnan32(x_35702);
                
                float defunc_1_f_res_35704;
                
                if (isnan_res_35703) {
                    defunc_1_f_res_35704 = 0.0F;
                } else {
                    float x_35701 = ((__global
                                      float *) binop_p_mem_43387)[gtid_35630 *
                                                                  N_28624 +
                                                                  gtid_35639];
                    float defunc_1_f_res_f_res_35705 = x_35701 * x_35702;
                    
                    defunc_1_f_res_35704 = defunc_1_f_res_f_res_35705;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)] =
                        defunc_1_f_res_35704;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28638)) {
            // perform segmented scan to imitate reduction
            {
                float x_35696;
                float x_35697;
                float x_44917;
                float x_44918;
                bool ltid_in_bounds_44920;
                
                ltid_in_bounds_44920 = slt64(sext_i32_i64(local_tid_44908),
                                             i32_res_28638 *
                                             squot64(segred_group_sizze_35692,
                                                     segment_sizze_nonzzero_44905));
                
                int32_t skip_threads_44921;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44920) {
                        x_35697 = ((volatile __local
                                    float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)];
                        if ((local_tid_44908 - squot32(local_tid_44908, 32) *
                             32) == 0) {
                            x_35696 = x_35697;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44921 = 1;
                    while (slt32(skip_threads_44921, 32)) {
                        if (sle32(skip_threads_44921, local_tid_44908 -
                                  squot32(local_tid_44908, 32) * 32) &&
                            ltid_in_bounds_44920) {
                            // read operands
                            {
                                x_35696 = ((volatile __local
                                            float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908) -
                                                                        sext_i32_i64(skip_threads_44921)];
                            }
                            // perform operation
                            {
                                bool inactive_44922 =
                                     slt64(srem64(sext_i32_i64(local_tid_44908),
                                                  i32_res_28638),
                                           sext_i32_i64(local_tid_44908) -
                                           sext_i32_i64(local_tid_44908 -
                                           skip_threads_44921));
                                
                                if (inactive_44922) {
                                    x_35696 = x_35697;
                                }
                                if (!inactive_44922) {
                                    float defunc_1_op_res_35698 = x_35696 +
                                          x_35697;
                                    
                                    x_35696 = defunc_1_op_res_35698;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44910, skip_threads_44921)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44921, local_tid_44908 -
                                  squot32(local_tid_44908, 32) * 32) &&
                            ltid_in_bounds_44920) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)] =
                                    x_35696;
                                x_35697 = x_35696;
                            }
                        }
                        if (sle32(wave_sizze_44910, skip_threads_44921)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44921 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44908 - squot32(local_tid_44908, 32) * 32) ==
                        31 && ltid_in_bounds_44920) {
                        ((volatile __local
                          float *) red_arr_mem_44912)[sext_i32_i64(squot32(local_tid_44908,
                                                                           32))] =
                            x_35696;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44923;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44908, 32) == 0 &&
                            ltid_in_bounds_44920) {
                            x_44918 = ((volatile __local
                                        float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)];
                            if ((local_tid_44908 - squot32(local_tid_44908,
                                                           32) * 32) == 0) {
                                x_44917 = x_44918;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44923 = 1;
                        while (slt32(skip_threads_44923, 32)) {
                            if (sle32(skip_threads_44923, local_tid_44908 -
                                      squot32(local_tid_44908, 32) * 32) &&
                                (squot32(local_tid_44908, 32) == 0 &&
                                 ltid_in_bounds_44920)) {
                                // read operands
                                {
                                    x_44917 = ((volatile __local
                                                float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908) -
                                                                            sext_i32_i64(skip_threads_44923)];
                                }
                                // perform operation
                                {
                                    bool inactive_44924 =
                                         slt64(srem64(sext_i32_i64(local_tid_44908 *
                                                      32 + 32 - 1),
                                                      i32_res_28638),
                                               sext_i32_i64(local_tid_44908 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44908 -
                                                             skip_threads_44923) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44924) {
                                        x_44917 = x_44918;
                                    }
                                    if (!inactive_44924) {
                                        float defunc_1_op_res_44919 = x_44917 +
                                              x_44918;
                                        
                                        x_44917 = defunc_1_op_res_44919;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44910, skip_threads_44923)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44923, local_tid_44908 -
                                      squot32(local_tid_44908, 32) * 32) &&
                                (squot32(local_tid_44908, 32) == 0 &&
                                 ltid_in_bounds_44920)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)] =
                                        x_44917;
                                    x_44918 = x_44917;
                                }
                            }
                            if (sle32(wave_sizze_44910, skip_threads_44923)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44923 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44908, 32) == 0 ||
                          !ltid_in_bounds_44920)) {
                        // read operands
                        {
                            x_35697 = x_35696;
                            x_35696 = ((__local
                                        float *) red_arr_mem_44912)[sext_i32_i64(squot32(local_tid_44908,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44925 =
                                 slt64(srem64(sext_i32_i64(local_tid_44908),
                                              i32_res_28638),
                                       sext_i32_i64(local_tid_44908) -
                                       sext_i32_i64(squot32(local_tid_44908,
                                                            32) * 32 - 1));
                            
                            if (inactive_44925) {
                                x_35696 = x_35697;
                            }
                            if (!inactive_44925) {
                                float defunc_1_op_res_35698 = x_35696 + x_35697;
                                
                                x_35696 = defunc_1_op_res_35698;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)] =
                                x_35696;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44908, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44912)[sext_i32_i64(local_tid_44908)] =
                            x_35697;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44916) *
                      squot64(segred_group_sizze_35692,
                              segment_sizze_nonzzero_44905) +
                      sext_i32_i64(local_tid_44908), m_28625 * i32_res_28644) &&
                slt64(sext_i32_i64(local_tid_44908),
                      squot64(segred_group_sizze_35692,
                              segment_sizze_nonzzero_44905))) {
                ((__global
                  float *) mem_43840)[squot64(sext_i32_i64(virt_group_id_44916) *
                                              squot64(segred_group_sizze_35692,
                                                      segment_sizze_nonzzero_44905) +
                                              sext_i32_i64(local_tid_44908),
                                              i32_res_28644) * i32_res_28644 +
                                      (sext_i32_i64(virt_group_id_44916) *
                                       squot64(segred_group_sizze_35692,
                                               segment_sizze_nonzzero_44905) +
                                       sext_i32_i64(local_tid_44908) -
                                       squot64(sext_i32_i64(virt_group_id_44916) *
                                               squot64(segred_group_sizze_35692,
                                                       segment_sizze_nonzzero_44905) +
                                               sext_i32_i64(local_tid_44908),
                                               i32_res_28644) *
                                       i32_res_28644)] = ((__local
                                                           float *) red_arr_mem_44912)[(sext_i32_i64(local_tid_44908) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44905 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35692
}
__kernel void mainMagnitudezisegred_small_35777(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45000_backing_aligned_0,
                                                int64_t m_28625,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_35826,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43625,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43846,
                                                __global
                                                unsigned char *mem_43906,
                                                int64_t segment_sizze_nonzzero_44993)
{
    #define segred_group_sizze_35825 (mainMagnitudezisegred_group_sizze_35771)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45000_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45000_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44995;
    int32_t local_tid_44996;
    int64_t group_sizze_44999;
    int32_t wave_sizze_44998;
    int32_t group_tid_44997;
    
    global_tid_44995 = get_global_id(0);
    local_tid_44996 = get_local_id(0);
    group_sizze_44999 = get_local_size(0);
    wave_sizze_44998 = LOCKSTEP_WIDTH;
    group_tid_44997 = get_group_id(0);
    
    int32_t phys_tid_35777;
    
    phys_tid_35777 = global_tid_44995;
    
    __local char *red_arr_mem_45000;
    
    red_arr_mem_45000 = (__local char *) red_arr_mem_45000_backing_0;
    
    int32_t phys_group_id_45002;
    
    phys_group_id_45002 = get_group_id(0);
    for (int32_t i_45003 = 0; i_45003 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625 * i32_res_28644,
                                          squot64(segred_group_sizze_35825,
                                                  segment_sizze_nonzzero_44993))) -
                   phys_group_id_45002, sext_i64_i32(num_groups_35826));
         i_45003++) {
        int32_t virt_group_id_45004 = phys_group_id_45002 + i_45003 *
                sext_i64_i32(num_groups_35826);
        int64_t gtid_35766 = squot64(squot64(sext_i32_i64(local_tid_44996),
                                             segment_sizze_nonzzero_44993) +
                                     sext_i32_i64(virt_group_id_45004) *
                                     squot64(segred_group_sizze_35825,
                                             segment_sizze_nonzzero_44993),
                                     i32_res_28644);
        int64_t gtid_35767 = squot64(sext_i32_i64(local_tid_44996),
                                     segment_sizze_nonzzero_44993) +
                sext_i32_i64(virt_group_id_45004) *
                squot64(segred_group_sizze_35825,
                        segment_sizze_nonzzero_44993) -
                squot64(squot64(sext_i32_i64(local_tid_44996),
                                segment_sizze_nonzzero_44993) +
                        sext_i32_i64(virt_group_id_45004) *
                        squot64(segred_group_sizze_35825,
                                segment_sizze_nonzzero_44993), i32_res_28644) *
                i32_res_28644;
        int64_t gtid_35776 = srem64(sext_i32_i64(local_tid_44996),
                                    i32_res_28644);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28644) && ((slt64(gtid_35766, m_28625) &&
                                             slt64(gtid_35767,
                                                   i32_res_28644)) &&
                                            slt64(sext_i32_i64(local_tid_44996),
                                                  i32_res_28644 *
                                                  squot64(segred_group_sizze_35825,
                                                          segment_sizze_nonzzero_44993)))) {
                float x_35835 = ((__global
                                  float *) defunc_3_map_res_mem_43846)[gtid_35766 *
                                                                       i32_res_28644 +
                                                                       gtid_35776];
                float x_35836 = ((__global
                                  float *) defunc_3_map_res_mem_43625)[gtid_35766 *
                                                                       (i32_res_28644 *
                                                                        i32_res_28644) +
                                                                       gtid_35767 *
                                                                       i32_res_28644 +
                                                                       gtid_35776];
                float defunc_1_f_res_35837 = x_35835 * x_35836;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)] =
                        defunc_1_f_res_35837;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28644)) {
            // perform segmented scan to imitate reduction
            {
                float x_35829;
                float x_35830;
                float x_45005;
                float x_45006;
                bool ltid_in_bounds_45008;
                
                ltid_in_bounds_45008 = slt64(sext_i32_i64(local_tid_44996),
                                             i32_res_28644 *
                                             squot64(segred_group_sizze_35825,
                                                     segment_sizze_nonzzero_44993));
                
                int32_t skip_threads_45009;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45008) {
                        x_35830 = ((volatile __local
                                    float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)];
                        if ((local_tid_44996 - squot32(local_tid_44996, 32) *
                             32) == 0) {
                            x_35829 = x_35830;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45009 = 1;
                    while (slt32(skip_threads_45009, 32)) {
                        if (sle32(skip_threads_45009, local_tid_44996 -
                                  squot32(local_tid_44996, 32) * 32) &&
                            ltid_in_bounds_45008) {
                            // read operands
                            {
                                x_35829 = ((volatile __local
                                            float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996) -
                                                                        sext_i32_i64(skip_threads_45009)];
                            }
                            // perform operation
                            {
                                bool inactive_45010 =
                                     slt64(srem64(sext_i32_i64(local_tid_44996),
                                                  i32_res_28644),
                                           sext_i32_i64(local_tid_44996) -
                                           sext_i32_i64(local_tid_44996 -
                                           skip_threads_45009));
                                
                                if (inactive_45010) {
                                    x_35829 = x_35830;
                                }
                                if (!inactive_45010) {
                                    float defunc_1_op_res_35831 = x_35829 +
                                          x_35830;
                                    
                                    x_35829 = defunc_1_op_res_35831;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44998, skip_threads_45009)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45009, local_tid_44996 -
                                  squot32(local_tid_44996, 32) * 32) &&
                            ltid_in_bounds_45008) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)] =
                                    x_35829;
                                x_35830 = x_35829;
                            }
                        }
                        if (sle32(wave_sizze_44998, skip_threads_45009)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45009 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44996 - squot32(local_tid_44996, 32) * 32) ==
                        31 && ltid_in_bounds_45008) {
                        ((volatile __local
                          float *) red_arr_mem_45000)[sext_i32_i64(squot32(local_tid_44996,
                                                                           32))] =
                            x_35829;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45011;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44996, 32) == 0 &&
                            ltid_in_bounds_45008) {
                            x_45006 = ((volatile __local
                                        float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)];
                            if ((local_tid_44996 - squot32(local_tid_44996,
                                                           32) * 32) == 0) {
                                x_45005 = x_45006;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45011 = 1;
                        while (slt32(skip_threads_45011, 32)) {
                            if (sle32(skip_threads_45011, local_tid_44996 -
                                      squot32(local_tid_44996, 32) * 32) &&
                                (squot32(local_tid_44996, 32) == 0 &&
                                 ltid_in_bounds_45008)) {
                                // read operands
                                {
                                    x_45005 = ((volatile __local
                                                float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996) -
                                                                            sext_i32_i64(skip_threads_45011)];
                                }
                                // perform operation
                                {
                                    bool inactive_45012 =
                                         slt64(srem64(sext_i32_i64(local_tid_44996 *
                                                      32 + 32 - 1),
                                                      i32_res_28644),
                                               sext_i32_i64(local_tid_44996 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44996 -
                                                             skip_threads_45011) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45012) {
                                        x_45005 = x_45006;
                                    }
                                    if (!inactive_45012) {
                                        float defunc_1_op_res_45007 = x_45005 +
                                              x_45006;
                                        
                                        x_45005 = defunc_1_op_res_45007;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44998, skip_threads_45011)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45011, local_tid_44996 -
                                      squot32(local_tid_44996, 32) * 32) &&
                                (squot32(local_tid_44996, 32) == 0 &&
                                 ltid_in_bounds_45008)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)] =
                                        x_45005;
                                    x_45006 = x_45005;
                                }
                            }
                            if (sle32(wave_sizze_44998, skip_threads_45011)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45011 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44996, 32) == 0 ||
                          !ltid_in_bounds_45008)) {
                        // read operands
                        {
                            x_35830 = x_35829;
                            x_35829 = ((__local
                                        float *) red_arr_mem_45000)[sext_i32_i64(squot32(local_tid_44996,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45013 =
                                 slt64(srem64(sext_i32_i64(local_tid_44996),
                                              i32_res_28644),
                                       sext_i32_i64(local_tid_44996) -
                                       sext_i32_i64(squot32(local_tid_44996,
                                                            32) * 32 - 1));
                            
                            if (inactive_45013) {
                                x_35829 = x_35830;
                            }
                            if (!inactive_45013) {
                                float defunc_1_op_res_35831 = x_35829 + x_35830;
                                
                                x_35829 = defunc_1_op_res_35831;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)] =
                                x_35829;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44996, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45000)[sext_i32_i64(local_tid_44996)] =
                            x_35830;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45004) *
                      squot64(segred_group_sizze_35825,
                              segment_sizze_nonzzero_44993) +
                      sext_i32_i64(local_tid_44996), m_28625 * i32_res_28644) &&
                slt64(sext_i32_i64(local_tid_44996),
                      squot64(segred_group_sizze_35825,
                              segment_sizze_nonzzero_44993))) {
                ((__global
                  float *) mem_43906)[squot64(sext_i32_i64(virt_group_id_45004) *
                                              squot64(segred_group_sizze_35825,
                                                      segment_sizze_nonzzero_44993) +
                                              sext_i32_i64(local_tid_44996),
                                              i32_res_28644) * i32_res_28644 +
                                      (sext_i32_i64(virt_group_id_45004) *
                                       squot64(segred_group_sizze_35825,
                                               segment_sizze_nonzzero_44993) +
                                       sext_i32_i64(local_tid_44996) -
                                       squot64(sext_i32_i64(virt_group_id_45004) *
                                               squot64(segred_group_sizze_35825,
                                                       segment_sizze_nonzzero_44993) +
                                               sext_i32_i64(local_tid_44996),
                                               i32_res_28644) *
                                       i32_res_28644)] = ((__local
                                                           float *) red_arr_mem_45000)[(sext_i32_i64(local_tid_44996) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44993 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35825
}
__kernel void mainMagnitudezisegred_small_35907(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45132_backing_aligned_0,
                                                int64_t N_28624,
                                                int64_t m_28625,
                                                int64_t i32_res_28644,
                                                int64_t num_groups_35954,
                                                __global
                                                unsigned char *mem_43394,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43912,
                                                __global
                                                unsigned char *mem_44130,
                                                int64_t segment_sizze_nonzzero_45125)
{
    #define segred_group_sizze_35953 (mainMagnitudezisegred_group_sizze_35901)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45132_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45132_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45127;
    int32_t local_tid_45128;
    int64_t group_sizze_45131;
    int32_t wave_sizze_45130;
    int32_t group_tid_45129;
    
    global_tid_45127 = get_global_id(0);
    local_tid_45128 = get_local_id(0);
    group_sizze_45131 = get_local_size(0);
    wave_sizze_45130 = LOCKSTEP_WIDTH;
    group_tid_45129 = get_group_id(0);
    
    int32_t phys_tid_35907;
    
    phys_tid_35907 = global_tid_45127;
    
    __local char *red_arr_mem_45132;
    
    red_arr_mem_45132 = (__local char *) red_arr_mem_45132_backing_0;
    
    int32_t phys_group_id_45134;
    
    phys_group_id_45134 = get_group_id(0);
    for (int32_t i_45135 = 0; i_45135 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625 * N_28624,
                                          squot64(segred_group_sizze_35953,
                                                  segment_sizze_nonzzero_45125))) -
                   phys_group_id_45134, sext_i64_i32(num_groups_35954));
         i_45135++) {
        int32_t virt_group_id_45136 = phys_group_id_45134 + i_45135 *
                sext_i64_i32(num_groups_35954);
        int64_t gtid_35896 = squot64(squot64(sext_i32_i64(local_tid_45128),
                                             segment_sizze_nonzzero_45125) +
                                     sext_i32_i64(virt_group_id_45136) *
                                     squot64(segred_group_sizze_35953,
                                             segment_sizze_nonzzero_45125),
                                     N_28624);
        int64_t gtid_35897 = squot64(sext_i32_i64(local_tid_45128),
                                     segment_sizze_nonzzero_45125) +
                sext_i32_i64(virt_group_id_45136) *
                squot64(segred_group_sizze_35953,
                        segment_sizze_nonzzero_45125) -
                squot64(squot64(sext_i32_i64(local_tid_45128),
                                segment_sizze_nonzzero_45125) +
                        sext_i32_i64(virt_group_id_45136) *
                        squot64(segred_group_sizze_35953,
                                segment_sizze_nonzzero_45125), N_28624) *
                N_28624;
        int64_t gtid_35906 = srem64(sext_i32_i64(local_tid_45128),
                                    i32_res_28644);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28644) && ((slt64(gtid_35896, m_28625) &&
                                             slt64(gtid_35897, N_28624)) &&
                                            slt64(sext_i32_i64(local_tid_45128),
                                                  i32_res_28644 *
                                                  squot64(segred_group_sizze_35953,
                                                          segment_sizze_nonzzero_45125)))) {
                float x_35962 = ((__global
                                  float *) defunc_4_map_res_mem_43912)[gtid_35896 *
                                                                       i32_res_28644 +
                                                                       gtid_35906];
                float x_35963 = ((__global float *) mem_43394)[gtid_35897 *
                                                               i32_res_28644 +
                                                               gtid_35906];
                float defunc_1_f_res_35964 = x_35962 * x_35963;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                        defunc_1_f_res_35964;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28644)) {
            // perform segmented scan to imitate reduction
            {
                float x_35957;
                float x_35958;
                float x_45137;
                float x_45138;
                bool ltid_in_bounds_45140;
                
                ltid_in_bounds_45140 = slt64(sext_i32_i64(local_tid_45128),
                                             i32_res_28644 *
                                             squot64(segred_group_sizze_35953,
                                                     segment_sizze_nonzzero_45125));
                
                int32_t skip_threads_45141;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45140) {
                        x_35958 = ((volatile __local
                                    float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)];
                        if ((local_tid_45128 - squot32(local_tid_45128, 32) *
                             32) == 0) {
                            x_35957 = x_35958;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45141 = 1;
                    while (slt32(skip_threads_45141, 32)) {
                        if (sle32(skip_threads_45141, local_tid_45128 -
                                  squot32(local_tid_45128, 32) * 32) &&
                            ltid_in_bounds_45140) {
                            // read operands
                            {
                                x_35957 = ((volatile __local
                                            float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128) -
                                                                        sext_i32_i64(skip_threads_45141)];
                            }
                            // perform operation
                            {
                                bool inactive_45142 =
                                     slt64(srem64(sext_i32_i64(local_tid_45128),
                                                  i32_res_28644),
                                           sext_i32_i64(local_tid_45128) -
                                           sext_i32_i64(local_tid_45128 -
                                           skip_threads_45141));
                                
                                if (inactive_45142) {
                                    x_35957 = x_35958;
                                }
                                if (!inactive_45142) {
                                    float defunc_1_op_res_35959 = x_35957 +
                                          x_35958;
                                    
                                    x_35957 = defunc_1_op_res_35959;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45130, skip_threads_45141)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45141, local_tid_45128 -
                                  squot32(local_tid_45128, 32) * 32) &&
                            ltid_in_bounds_45140) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                                    x_35957;
                                x_35958 = x_35957;
                            }
                        }
                        if (sle32(wave_sizze_45130, skip_threads_45141)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45141 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45128 - squot32(local_tid_45128, 32) * 32) ==
                        31 && ltid_in_bounds_45140) {
                        ((volatile __local
                          float *) red_arr_mem_45132)[sext_i32_i64(squot32(local_tid_45128,
                                                                           32))] =
                            x_35957;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45143;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45128, 32) == 0 &&
                            ltid_in_bounds_45140) {
                            x_45138 = ((volatile __local
                                        float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)];
                            if ((local_tid_45128 - squot32(local_tid_45128,
                                                           32) * 32) == 0) {
                                x_45137 = x_45138;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45143 = 1;
                        while (slt32(skip_threads_45143, 32)) {
                            if (sle32(skip_threads_45143, local_tid_45128 -
                                      squot32(local_tid_45128, 32) * 32) &&
                                (squot32(local_tid_45128, 32) == 0 &&
                                 ltid_in_bounds_45140)) {
                                // read operands
                                {
                                    x_45137 = ((volatile __local
                                                float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128) -
                                                                            sext_i32_i64(skip_threads_45143)];
                                }
                                // perform operation
                                {
                                    bool inactive_45144 =
                                         slt64(srem64(sext_i32_i64(local_tid_45128 *
                                                      32 + 32 - 1),
                                                      i32_res_28644),
                                               sext_i32_i64(local_tid_45128 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45128 -
                                                             skip_threads_45143) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45144) {
                                        x_45137 = x_45138;
                                    }
                                    if (!inactive_45144) {
                                        float defunc_1_op_res_45139 = x_45137 +
                                              x_45138;
                                        
                                        x_45137 = defunc_1_op_res_45139;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45130, skip_threads_45143)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45143, local_tid_45128 -
                                      squot32(local_tid_45128, 32) * 32) &&
                                (squot32(local_tid_45128, 32) == 0 &&
                                 ltid_in_bounds_45140)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                                        x_45137;
                                    x_45138 = x_45137;
                                }
                            }
                            if (sle32(wave_sizze_45130, skip_threads_45143)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45143 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45128, 32) == 0 ||
                          !ltid_in_bounds_45140)) {
                        // read operands
                        {
                            x_35958 = x_35957;
                            x_35957 = ((__local
                                        float *) red_arr_mem_45132)[sext_i32_i64(squot32(local_tid_45128,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45145 =
                                 slt64(srem64(sext_i32_i64(local_tid_45128),
                                              i32_res_28644),
                                       sext_i32_i64(local_tid_45128) -
                                       sext_i32_i64(squot32(local_tid_45128,
                                                            32) * 32 - 1));
                            
                            if (inactive_45145) {
                                x_35957 = x_35958;
                            }
                            if (!inactive_45145) {
                                float defunc_1_op_res_35959 = x_35957 + x_35958;
                                
                                x_35957 = defunc_1_op_res_35959;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                                x_35957;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45128, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                            x_35958;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45136) *
                      squot64(segred_group_sizze_35953,
                              segment_sizze_nonzzero_45125) +
                      sext_i32_i64(local_tid_45128), m_28625 * N_28624) &&
                slt64(sext_i32_i64(local_tid_45128),
                      squot64(segred_group_sizze_35953,
                              segment_sizze_nonzzero_45125))) {
                ((__global
                  float *) mem_44130)[squot64(sext_i32_i64(virt_group_id_45136) *
                                              squot64(segred_group_sizze_35953,
                                                      segment_sizze_nonzzero_45125) +
                                              sext_i32_i64(local_tid_45128),
                                              N_28624) * N_28624 +
                                      (sext_i32_i64(virt_group_id_45136) *
                                       squot64(segred_group_sizze_35953,
                                               segment_sizze_nonzzero_45125) +
                                       sext_i32_i64(local_tid_45128) -
                                       squot64(sext_i32_i64(virt_group_id_45136) *
                                               squot64(segred_group_sizze_35953,
                                                       segment_sizze_nonzzero_45125) +
                                               sext_i32_i64(local_tid_45128),
                                               N_28624) * N_28624)] = ((__local
                                                                        float *) red_arr_mem_45132)[(sext_i32_i64(local_tid_45128) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_45125 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35953
}
__kernel void mainMagnitudezisegred_small_36473(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45386_backing_aligned_0,
                                                int64_t N_28624,
                                                int64_t m_28625,
                                                int64_t i32_res_28638,
                                                int64_t num_groups_36520,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_44174,
                                                __global
                                                unsigned char *mem_44225,
                                                __global
                                                unsigned char *mem_44228,
                                                int64_t segment_sizze_nonzzero_45379)
{
    #define segred_group_sizze_36519 (mainMagnitudezisegred_group_sizze_36467)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45386_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45386_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45381;
    int32_t local_tid_45382;
    int64_t group_sizze_45385;
    int32_t wave_sizze_45384;
    int32_t group_tid_45383;
    
    global_tid_45381 = get_global_id(0);
    local_tid_45382 = get_local_id(0);
    group_sizze_45385 = get_local_size(0);
    wave_sizze_45384 = LOCKSTEP_WIDTH;
    group_tid_45383 = get_group_id(0);
    
    int32_t phys_tid_36473;
    
    phys_tid_36473 = global_tid_45381;
    
    __local char *red_arr_mem_45386;
    
    red_arr_mem_45386 = (__local char *) red_arr_mem_45386_backing_0;
    
    int32_t phys_group_id_45388;
    
    phys_group_id_45388 = get_group_id(0);
    for (int32_t i_45389 = 0; i_45389 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625,
                                          squot64(segred_group_sizze_36519,
                                                  segment_sizze_nonzzero_45379))) -
                   phys_group_id_45388, sext_i64_i32(num_groups_36520));
         i_45389++) {
        int32_t virt_group_id_45390 = phys_group_id_45388 + i_45389 *
                sext_i64_i32(num_groups_36520);
        int64_t gtid_36464 = squot64(sext_i32_i64(local_tid_45382),
                                     segment_sizze_nonzzero_45379) +
                sext_i32_i64(virt_group_id_45390) *
                squot64(segred_group_sizze_36519, segment_sizze_nonzzero_45379);
        int64_t gtid_36472 = srem64(sext_i32_i64(local_tid_45382),
                                    i32_res_28638);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28638) && (slt64(gtid_36464, m_28625) &&
                                            slt64(sext_i32_i64(local_tid_45382),
                                                  i32_res_28638 *
                                                  squot64(segred_group_sizze_36519,
                                                          segment_sizze_nonzzero_45379)))) {
                int32_t defunc_0_f_res_36527 = ((__global
                                                 int32_t *) mem_44225)[gtid_36464];
                int32_t index_primexp_41417 = sext_i64_i32(gtid_36472);
                bool cond_36529 = slt32(index_primexp_41417,
                                        defunc_0_f_res_36527);
                float defunc_0_f_res_36530;
                
                if (cond_36529) {
                    int64_t i_36531 = sext_i32_i64(index_primexp_41417);
                    float defunc_0_f_res_t_res_36532 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_36464 *
                                                                                              N_28624 +
                                                                                              i_36531];
                    
                    defunc_0_f_res_36530 = defunc_0_f_res_t_res_36532;
                } else {
                    defunc_0_f_res_36530 = 0.0F;
                }
                
                float defunc_0_f_res_36533 = defunc_0_f_res_36530 *
                      defunc_0_f_res_36530;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)] =
                        defunc_0_f_res_36533;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28638)) {
            // perform segmented scan to imitate reduction
            {
                float x_36523;
                float x_36524;
                float x_45391;
                float x_45392;
                bool ltid_in_bounds_45394;
                
                ltid_in_bounds_45394 = slt64(sext_i32_i64(local_tid_45382),
                                             i32_res_28638 *
                                             squot64(segred_group_sizze_36519,
                                                     segment_sizze_nonzzero_45379));
                
                int32_t skip_threads_45395;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45394) {
                        x_36524 = ((volatile __local
                                    float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)];
                        if ((local_tid_45382 - squot32(local_tid_45382, 32) *
                             32) == 0) {
                            x_36523 = x_36524;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45395 = 1;
                    while (slt32(skip_threads_45395, 32)) {
                        if (sle32(skip_threads_45395, local_tid_45382 -
                                  squot32(local_tid_45382, 32) * 32) &&
                            ltid_in_bounds_45394) {
                            // read operands
                            {
                                x_36523 = ((volatile __local
                                            float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382) -
                                                                        sext_i32_i64(skip_threads_45395)];
                            }
                            // perform operation
                            {
                                bool inactive_45396 =
                                     slt64(srem64(sext_i32_i64(local_tid_45382),
                                                  i32_res_28638),
                                           sext_i32_i64(local_tid_45382) -
                                           sext_i32_i64(local_tid_45382 -
                                           skip_threads_45395));
                                
                                if (inactive_45396) {
                                    x_36523 = x_36524;
                                }
                                if (!inactive_45396) {
                                    float defunc_1_op_res_36525 = x_36523 +
                                          x_36524;
                                    
                                    x_36523 = defunc_1_op_res_36525;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45384, skip_threads_45395)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45395, local_tid_45382 -
                                  squot32(local_tid_45382, 32) * 32) &&
                            ltid_in_bounds_45394) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)] =
                                    x_36523;
                                x_36524 = x_36523;
                            }
                        }
                        if (sle32(wave_sizze_45384, skip_threads_45395)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45395 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45382 - squot32(local_tid_45382, 32) * 32) ==
                        31 && ltid_in_bounds_45394) {
                        ((volatile __local
                          float *) red_arr_mem_45386)[sext_i32_i64(squot32(local_tid_45382,
                                                                           32))] =
                            x_36523;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45397;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45382, 32) == 0 &&
                            ltid_in_bounds_45394) {
                            x_45392 = ((volatile __local
                                        float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)];
                            if ((local_tid_45382 - squot32(local_tid_45382,
                                                           32) * 32) == 0) {
                                x_45391 = x_45392;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45397 = 1;
                        while (slt32(skip_threads_45397, 32)) {
                            if (sle32(skip_threads_45397, local_tid_45382 -
                                      squot32(local_tid_45382, 32) * 32) &&
                                (squot32(local_tid_45382, 32) == 0 &&
                                 ltid_in_bounds_45394)) {
                                // read operands
                                {
                                    x_45391 = ((volatile __local
                                                float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382) -
                                                                            sext_i32_i64(skip_threads_45397)];
                                }
                                // perform operation
                                {
                                    bool inactive_45398 =
                                         slt64(srem64(sext_i32_i64(local_tid_45382 *
                                                      32 + 32 - 1),
                                                      i32_res_28638),
                                               sext_i32_i64(local_tid_45382 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45382 -
                                                             skip_threads_45397) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45398) {
                                        x_45391 = x_45392;
                                    }
                                    if (!inactive_45398) {
                                        float defunc_1_op_res_45393 = x_45391 +
                                              x_45392;
                                        
                                        x_45391 = defunc_1_op_res_45393;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45384, skip_threads_45397)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45397, local_tid_45382 -
                                      squot32(local_tid_45382, 32) * 32) &&
                                (squot32(local_tid_45382, 32) == 0 &&
                                 ltid_in_bounds_45394)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)] =
                                        x_45391;
                                    x_45392 = x_45391;
                                }
                            }
                            if (sle32(wave_sizze_45384, skip_threads_45397)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45397 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45382, 32) == 0 ||
                          !ltid_in_bounds_45394)) {
                        // read operands
                        {
                            x_36524 = x_36523;
                            x_36523 = ((__local
                                        float *) red_arr_mem_45386)[sext_i32_i64(squot32(local_tid_45382,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45399 =
                                 slt64(srem64(sext_i32_i64(local_tid_45382),
                                              i32_res_28638),
                                       sext_i32_i64(local_tid_45382) -
                                       sext_i32_i64(squot32(local_tid_45382,
                                                            32) * 32 - 1));
                            
                            if (inactive_45399) {
                                x_36523 = x_36524;
                            }
                            if (!inactive_45399) {
                                float defunc_1_op_res_36525 = x_36523 + x_36524;
                                
                                x_36523 = defunc_1_op_res_36525;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)] =
                                x_36523;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45382, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45386)[sext_i32_i64(local_tid_45382)] =
                            x_36524;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45390) *
                      squot64(segred_group_sizze_36519,
                              segment_sizze_nonzzero_45379) +
                      sext_i32_i64(local_tid_45382), m_28625) &&
                slt64(sext_i32_i64(local_tid_45382),
                      squot64(segred_group_sizze_36519,
                              segment_sizze_nonzzero_45379))) {
                ((__global
                  float *) mem_44228)[sext_i32_i64(virt_group_id_45390) *
                                      squot64(segred_group_sizze_36519,
                                              segment_sizze_nonzzero_45379) +
                                      sext_i32_i64(local_tid_45382)] = ((__local
                                                                         float *) red_arr_mem_45386)[(sext_i32_i64(local_tid_45382) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45379 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36519
}
__kernel void mainMagnitudezisegred_small_36494(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45326_backing_aligned_0,
                                                int64_t m_28625,
                                                int64_t N_28626,
                                                int64_t i32_res_28638,
                                                int64_t num_groups_36506,
                                                __global
                                                unsigned char *images_mem_43378,
                                                __global
                                                unsigned char *mem_44225,
                                                int64_t segment_sizze_nonzzero_45319)
{
    #define segred_group_sizze_36505 (mainMagnitudezisegred_group_sizze_36488)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45326_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45326_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45321;
    int32_t local_tid_45322;
    int64_t group_sizze_45325;
    int32_t wave_sizze_45324;
    int32_t group_tid_45323;
    
    global_tid_45321 = get_global_id(0);
    local_tid_45322 = get_local_id(0);
    group_sizze_45325 = get_local_size(0);
    wave_sizze_45324 = LOCKSTEP_WIDTH;
    group_tid_45323 = get_group_id(0);
    
    int32_t phys_tid_36494;
    
    phys_tid_36494 = global_tid_45321;
    
    __local char *red_arr_mem_45326;
    
    red_arr_mem_45326 = (__local char *) red_arr_mem_45326_backing_0;
    
    int32_t phys_group_id_45328;
    
    phys_group_id_45328 = get_group_id(0);
    for (int32_t i_45329 = 0; i_45329 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625,
                                          squot64(segred_group_sizze_36505,
                                                  segment_sizze_nonzzero_45319))) -
                   phys_group_id_45328, sext_i64_i32(num_groups_36506));
         i_45329++) {
        int32_t virt_group_id_45330 = phys_group_id_45328 + i_45329 *
                sext_i64_i32(num_groups_36506);
        int64_t gtid_36485 = squot64(sext_i32_i64(local_tid_45322),
                                     segment_sizze_nonzzero_45319) +
                sext_i32_i64(virt_group_id_45330) *
                squot64(segred_group_sizze_36505, segment_sizze_nonzzero_45319);
        int64_t gtid_36493 = srem64(sext_i32_i64(local_tid_45322),
                                    i32_res_28638);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28638) && (slt64(gtid_36485, m_28625) &&
                                            slt64(sext_i32_i64(local_tid_45322),
                                                  i32_res_28638 *
                                                  squot64(segred_group_sizze_36505,
                                                          segment_sizze_nonzzero_45319)))) {
                float x_36513 = ((__global
                                  float *) images_mem_43378)[gtid_36485 *
                                                             N_28626 +
                                                             gtid_36493];
                bool isnan_res_36514;
                
                isnan_res_36514 = futrts_isnan32(x_36513);
                
                bool cond_36515 = !isnan_res_36514;
                int32_t defunc_0_f_res_36516 = btoi_bool_i32(cond_36515);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)] =
                        defunc_0_f_res_36516;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28638)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_36509;
                int32_t x_36510;
                int32_t x_45331;
                int32_t x_45332;
                bool ltid_in_bounds_45334;
                
                ltid_in_bounds_45334 = slt64(sext_i32_i64(local_tid_45322),
                                             i32_res_28638 *
                                             squot64(segred_group_sizze_36505,
                                                     segment_sizze_nonzzero_45319));
                
                int32_t skip_threads_45335;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45334) {
                        x_36510 = ((volatile __local
                                    int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)];
                        if ((local_tid_45322 - squot32(local_tid_45322, 32) *
                             32) == 0) {
                            x_36509 = x_36510;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45335 = 1;
                    while (slt32(skip_threads_45335, 32)) {
                        if (sle32(skip_threads_45335, local_tid_45322 -
                                  squot32(local_tid_45322, 32) * 32) &&
                            ltid_in_bounds_45334) {
                            // read operands
                            {
                                x_36509 = ((volatile __local
                                            int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322) -
                                                                          sext_i32_i64(skip_threads_45335)];
                            }
                            // perform operation
                            {
                                bool inactive_45336 =
                                     slt64(srem64(sext_i32_i64(local_tid_45322),
                                                  i32_res_28638),
                                           sext_i32_i64(local_tid_45322) -
                                           sext_i32_i64(local_tid_45322 -
                                           skip_threads_45335));
                                
                                if (inactive_45336) {
                                    x_36509 = x_36510;
                                }
                                if (!inactive_45336) {
                                    int32_t defunc_1_op_res_36511 =
                                            add32(x_36509, x_36510);
                                    
                                    x_36509 = defunc_1_op_res_36511;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45324, skip_threads_45335)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45335, local_tid_45322 -
                                  squot32(local_tid_45322, 32) * 32) &&
                            ltid_in_bounds_45334) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)] =
                                    x_36509;
                                x_36510 = x_36509;
                            }
                        }
                        if (sle32(wave_sizze_45324, skip_threads_45335)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45335 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45322 - squot32(local_tid_45322, 32) * 32) ==
                        31 && ltid_in_bounds_45334) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45326)[sext_i32_i64(squot32(local_tid_45322,
                                                                             32))] =
                            x_36509;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45337;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45322, 32) == 0 &&
                            ltid_in_bounds_45334) {
                            x_45332 = ((volatile __local
                                        int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)];
                            if ((local_tid_45322 - squot32(local_tid_45322,
                                                           32) * 32) == 0) {
                                x_45331 = x_45332;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45337 = 1;
                        while (slt32(skip_threads_45337, 32)) {
                            if (sle32(skip_threads_45337, local_tid_45322 -
                                      squot32(local_tid_45322, 32) * 32) &&
                                (squot32(local_tid_45322, 32) == 0 &&
                                 ltid_in_bounds_45334)) {
                                // read operands
                                {
                                    x_45331 = ((volatile __local
                                                int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322) -
                                                                              sext_i32_i64(skip_threads_45337)];
                                }
                                // perform operation
                                {
                                    bool inactive_45338 =
                                         slt64(srem64(sext_i32_i64(local_tid_45322 *
                                                      32 + 32 - 1),
                                                      i32_res_28638),
                                               sext_i32_i64(local_tid_45322 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45322 -
                                                             skip_threads_45337) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45338) {
                                        x_45331 = x_45332;
                                    }
                                    if (!inactive_45338) {
                                        int32_t defunc_1_op_res_45333 =
                                                add32(x_45331, x_45332);
                                        
                                        x_45331 = defunc_1_op_res_45333;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45324, skip_threads_45337)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45337, local_tid_45322 -
                                      squot32(local_tid_45322, 32) * 32) &&
                                (squot32(local_tid_45322, 32) == 0 &&
                                 ltid_in_bounds_45334)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)] =
                                        x_45331;
                                    x_45332 = x_45331;
                                }
                            }
                            if (sle32(wave_sizze_45324, skip_threads_45337)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45337 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45322, 32) == 0 ||
                          !ltid_in_bounds_45334)) {
                        // read operands
                        {
                            x_36510 = x_36509;
                            x_36509 = ((__local
                                        int32_t *) red_arr_mem_45326)[sext_i32_i64(squot32(local_tid_45322,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45339 =
                                 slt64(srem64(sext_i32_i64(local_tid_45322),
                                              i32_res_28638),
                                       sext_i32_i64(local_tid_45322) -
                                       sext_i32_i64(squot32(local_tid_45322,
                                                            32) * 32 - 1));
                            
                            if (inactive_45339) {
                                x_36509 = x_36510;
                            }
                            if (!inactive_45339) {
                                int32_t defunc_1_op_res_36511 = add32(x_36509,
                                                                      x_36510);
                                
                                x_36509 = defunc_1_op_res_36511;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)] =
                                x_36509;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45322, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45326)[sext_i32_i64(local_tid_45322)] =
                            x_36510;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45330) *
                      squot64(segred_group_sizze_36505,
                              segment_sizze_nonzzero_45319) +
                      sext_i32_i64(local_tid_45322), m_28625) &&
                slt64(sext_i32_i64(local_tid_45322),
                      squot64(segred_group_sizze_36505,
                              segment_sizze_nonzzero_45319))) {
                ((__global
                  int32_t *) mem_44225)[sext_i32_i64(virt_group_id_45330) *
                                        squot64(segred_group_sizze_36505,
                                                segment_sizze_nonzzero_45319) +
                                        sext_i32_i64(local_tid_45322)] =
                    ((__local
                      int32_t *) red_arr_mem_45326)[(sext_i32_i64(local_tid_45322) +
                                                     1) *
                                                    segment_sizze_nonzzero_45319 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36505
}
__kernel void mainMagnitudezisegred_small_36645(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45495_backing_aligned_0,
                                                int64_t N_28624,
                                                int64_t m_28625,
                                                int64_t i32_res_28999,
                                                int64_t num_groups_36663,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_44174,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44237,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44238,
                                                __global
                                                unsigned char *mem_44271,
                                                int64_t segment_sizze_nonzzero_45488)
{
    #define segred_group_sizze_36662 (mainMagnitudezisegred_group_sizze_36639)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45495_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45495_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45490;
    int32_t local_tid_45491;
    int64_t group_sizze_45494;
    int32_t wave_sizze_45493;
    int32_t group_tid_45492;
    
    global_tid_45490 = get_global_id(0);
    local_tid_45491 = get_local_id(0);
    group_sizze_45494 = get_local_size(0);
    wave_sizze_45493 = LOCKSTEP_WIDTH;
    group_tid_45492 = get_group_id(0);
    
    int32_t phys_tid_36645;
    
    phys_tid_36645 = global_tid_45490;
    
    __local char *red_arr_mem_45495;
    
    red_arr_mem_45495 = (__local char *) red_arr_mem_45495_backing_0;
    
    int32_t phys_group_id_45497;
    
    phys_group_id_45497 = get_group_id(0);
    for (int32_t i_45498 = 0; i_45498 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625,
                                          squot64(segred_group_sizze_36662,
                                                  segment_sizze_nonzzero_45488))) -
                   phys_group_id_45497, sext_i64_i32(num_groups_36663));
         i_45498++) {
        int32_t virt_group_id_45499 = phys_group_id_45497 + i_45498 *
                sext_i64_i32(num_groups_36663);
        int64_t gtid_36636 = squot64(sext_i32_i64(local_tid_45491),
                                     segment_sizze_nonzzero_45488) +
                sext_i32_i64(virt_group_id_45499) *
                squot64(segred_group_sizze_36662, segment_sizze_nonzzero_45488);
        int64_t gtid_36644 = srem64(sext_i32_i64(local_tid_45491),
                                    i32_res_28999);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28999) && (slt64(gtid_36636, m_28625) &&
                                            slt64(sext_i32_i64(local_tid_45491),
                                                  i32_res_28999 *
                                                  squot64(segred_group_sizze_36662,
                                                          segment_sizze_nonzzero_45488)))) {
                int32_t x_36671 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44237)[gtid_36636];
                int32_t index_primexp_41422 = sext_i64_i32(gtid_36644);
                bool cond_36673 = slt32(index_primexp_41422, x_36671);
                float defunc_0_f_res_36674;
                
                if (cond_36673) {
                    int32_t x_36670 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44238)[gtid_36636];
                    int32_t x_36675 = add32(x_36670, index_primexp_41422);
                    int32_t x_36676 = sub32(x_36675, x_36671);
                    int32_t i_36677 = add32(1, x_36676);
                    int64_t i_36678 = sext_i32_i64(i_36677);
                    float defunc_0_f_res_t_res_36679 = ((__global
                                                         float *) defunc_4_map_res_mem_44174)[gtid_36636 *
                                                                                              N_28624 +
                                                                                              i_36678];
                    
                    defunc_0_f_res_36674 = defunc_0_f_res_t_res_36679;
                } else {
                    defunc_0_f_res_36674 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)] =
                        defunc_0_f_res_36674;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28999)) {
            // perform segmented scan to imitate reduction
            {
                float x_36666;
                float x_36667;
                float x_45500;
                float x_45501;
                bool ltid_in_bounds_45503;
                
                ltid_in_bounds_45503 = slt64(sext_i32_i64(local_tid_45491),
                                             i32_res_28999 *
                                             squot64(segred_group_sizze_36662,
                                                     segment_sizze_nonzzero_45488));
                
                int32_t skip_threads_45504;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45503) {
                        x_36667 = ((volatile __local
                                    float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)];
                        if ((local_tid_45491 - squot32(local_tid_45491, 32) *
                             32) == 0) {
                            x_36666 = x_36667;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45504 = 1;
                    while (slt32(skip_threads_45504, 32)) {
                        if (sle32(skip_threads_45504, local_tid_45491 -
                                  squot32(local_tid_45491, 32) * 32) &&
                            ltid_in_bounds_45503) {
                            // read operands
                            {
                                x_36666 = ((volatile __local
                                            float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491) -
                                                                        sext_i32_i64(skip_threads_45504)];
                            }
                            // perform operation
                            {
                                bool inactive_45505 =
                                     slt64(srem64(sext_i32_i64(local_tid_45491),
                                                  i32_res_28999),
                                           sext_i32_i64(local_tid_45491) -
                                           sext_i32_i64(local_tid_45491 -
                                           skip_threads_45504));
                                
                                if (inactive_45505) {
                                    x_36666 = x_36667;
                                }
                                if (!inactive_45505) {
                                    float defunc_1_op_res_36668 = x_36666 +
                                          x_36667;
                                    
                                    x_36666 = defunc_1_op_res_36668;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45493, skip_threads_45504)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45504, local_tid_45491 -
                                  squot32(local_tid_45491, 32) * 32) &&
                            ltid_in_bounds_45503) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)] =
                                    x_36666;
                                x_36667 = x_36666;
                            }
                        }
                        if (sle32(wave_sizze_45493, skip_threads_45504)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45504 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45491 - squot32(local_tid_45491, 32) * 32) ==
                        31 && ltid_in_bounds_45503) {
                        ((volatile __local
                          float *) red_arr_mem_45495)[sext_i32_i64(squot32(local_tid_45491,
                                                                           32))] =
                            x_36666;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45506;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45491, 32) == 0 &&
                            ltid_in_bounds_45503) {
                            x_45501 = ((volatile __local
                                        float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)];
                            if ((local_tid_45491 - squot32(local_tid_45491,
                                                           32) * 32) == 0) {
                                x_45500 = x_45501;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45506 = 1;
                        while (slt32(skip_threads_45506, 32)) {
                            if (sle32(skip_threads_45506, local_tid_45491 -
                                      squot32(local_tid_45491, 32) * 32) &&
                                (squot32(local_tid_45491, 32) == 0 &&
                                 ltid_in_bounds_45503)) {
                                // read operands
                                {
                                    x_45500 = ((volatile __local
                                                float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491) -
                                                                            sext_i32_i64(skip_threads_45506)];
                                }
                                // perform operation
                                {
                                    bool inactive_45507 =
                                         slt64(srem64(sext_i32_i64(local_tid_45491 *
                                                      32 + 32 - 1),
                                                      i32_res_28999),
                                               sext_i32_i64(local_tid_45491 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45491 -
                                                             skip_threads_45506) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45507) {
                                        x_45500 = x_45501;
                                    }
                                    if (!inactive_45507) {
                                        float defunc_1_op_res_45502 = x_45500 +
                                              x_45501;
                                        
                                        x_45500 = defunc_1_op_res_45502;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45493, skip_threads_45506)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45506, local_tid_45491 -
                                      squot32(local_tid_45491, 32) * 32) &&
                                (squot32(local_tid_45491, 32) == 0 &&
                                 ltid_in_bounds_45503)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)] =
                                        x_45500;
                                    x_45501 = x_45500;
                                }
                            }
                            if (sle32(wave_sizze_45493, skip_threads_45506)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45506 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45491, 32) == 0 ||
                          !ltid_in_bounds_45503)) {
                        // read operands
                        {
                            x_36667 = x_36666;
                            x_36666 = ((__local
                                        float *) red_arr_mem_45495)[sext_i32_i64(squot32(local_tid_45491,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45508 =
                                 slt64(srem64(sext_i32_i64(local_tid_45491),
                                              i32_res_28999),
                                       sext_i32_i64(local_tid_45491) -
                                       sext_i32_i64(squot32(local_tid_45491,
                                                            32) * 32 - 1));
                            
                            if (inactive_45508) {
                                x_36666 = x_36667;
                            }
                            if (!inactive_45508) {
                                float defunc_1_op_res_36668 = x_36666 + x_36667;
                                
                                x_36666 = defunc_1_op_res_36668;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)] =
                                x_36666;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45491, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45495)[sext_i32_i64(local_tid_45491)] =
                            x_36667;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45499) *
                      squot64(segred_group_sizze_36662,
                              segment_sizze_nonzzero_45488) +
                      sext_i32_i64(local_tid_45491), m_28625) &&
                slt64(sext_i32_i64(local_tid_45491),
                      squot64(segred_group_sizze_36662,
                              segment_sizze_nonzzero_45488))) {
                ((__global
                  float *) mem_44271)[sext_i32_i64(virt_group_id_45499) *
                                      squot64(segred_group_sizze_36662,
                                              segment_sizze_nonzzero_45488) +
                                      sext_i32_i64(local_tid_45491)] = ((__local
                                                                         float *) red_arr_mem_45495)[(sext_i32_i64(local_tid_45491) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45488 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36662
}
__kernel void mainMagnitudezisegred_small_37641(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45661_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45659_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_45657_backing_aligned_2,
                                                int64_t m_28625,
                                                int64_t iota32_arg_29024,
                                                int64_t num_groups_37812,
                                                __global
                                                unsigned char *mem_44277,
                                                __global
                                                unsigned char *mem_44318,
                                                __global
                                                unsigned char *mem_44320,
                                                __global
                                                unsigned char *mem_44324,
                                                __global
                                                unsigned char *mem_44327,
                                                __global
                                                unsigned char *mem_44329,
                                                __global
                                                unsigned char *mem_44331,
                                                int64_t segment_sizze_nonzzero_45650)
{
    #define segred_group_sizze_37811 (mainMagnitudezisegred_group_sizze_37635)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45661_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45661_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45659_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45659_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45657_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45657_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45652;
    int32_t local_tid_45653;
    int64_t group_sizze_45656;
    int32_t wave_sizze_45655;
    int32_t group_tid_45654;
    
    global_tid_45652 = get_global_id(0);
    local_tid_45653 = get_local_id(0);
    group_sizze_45656 = get_local_size(0);
    wave_sizze_45655 = LOCKSTEP_WIDTH;
    group_tid_45654 = get_group_id(0);
    
    int32_t phys_tid_37641;
    
    phys_tid_37641 = global_tid_45652;
    
    __local char *red_arr_mem_45657;
    
    red_arr_mem_45657 = (__local char *) red_arr_mem_45657_backing_0;
    
    __local char *red_arr_mem_45659;
    
    red_arr_mem_45659 = (__local char *) red_arr_mem_45659_backing_1;
    
    __local char *red_arr_mem_45661;
    
    red_arr_mem_45661 = (__local char *) red_arr_mem_45661_backing_2;
    
    int32_t phys_group_id_45663;
    
    phys_group_id_45663 = get_group_id(0);
    for (int32_t i_45664 = 0; i_45664 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28625,
                                          squot64(segred_group_sizze_37811,
                                                  segment_sizze_nonzzero_45650))) -
                   phys_group_id_45663, sext_i64_i32(num_groups_37812));
         i_45664++) {
        int32_t virt_group_id_45665 = phys_group_id_45663 + i_45664 *
                sext_i64_i32(num_groups_37812);
        int64_t gtid_37632 = squot64(sext_i32_i64(local_tid_45653),
                                     segment_sizze_nonzzero_45650) +
                sext_i32_i64(virt_group_id_45665) *
                squot64(segred_group_sizze_37811, segment_sizze_nonzzero_45650);
        int64_t gtid_37640 = srem64(sext_i32_i64(local_tid_45653),
                                    iota32_arg_29024);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_29024) && (slt64(gtid_37632, m_28625) &&
                                               slt64(sext_i32_i64(local_tid_45653),
                                                     iota32_arg_29024 *
                                                     squot64(segred_group_sizze_37811,
                                                             segment_sizze_nonzzero_45650)))) {
                int32_t y_37831 = ((__global int32_t *) mem_44320)[gtid_37632];
                float y_37832 = ((__global float *) mem_44318)[gtid_37632];
                float x_37836 = ((__global float *) mem_44324)[gtid_37632 *
                                                               iota32_arg_29024 +
                                                               gtid_37640];
                float x_37837 = ((__global float *) mem_44277)[gtid_37640];
                int32_t index_primexp_41439 = sext_i64_i32(gtid_37640);
                float defunc_0_f_res_37840 = x_37836 / y_37832;
                bool cond_37841 = slt32(index_primexp_41439, y_37831);
                bool isnan_res_37842;
                
                isnan_res_37842 = futrts_isnan32(defunc_0_f_res_37840);
                
                bool cond_t_res_37843 = !isnan_res_37842;
                bool x_37844 = cond_37841 && cond_t_res_37843;
                float abs_res_37845 = (float) fabs(defunc_0_f_res_37840);
                bool defunc_2_f_res_t_res_37846 = x_37837 < abs_res_37845;
                bool x_37847 = x_37844 && defunc_2_f_res_t_res_37846;
                float defunc_1_f_res_37848;
                
                if (cond_37841) {
                    defunc_1_f_res_37848 = defunc_0_f_res_37840;
                } else {
                    defunc_1_f_res_37848 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)] =
                        x_37847;
                    ((__local
                      int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)] =
                        index_primexp_41439;
                    ((__local
                      float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)] =
                        defunc_1_f_res_37848;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_29024)) {
            // perform segmented scan to imitate reduction
            {
                bool x_37817;
                int32_t x_37818;
                float x_37819;
                bool x_37820;
                int32_t x_37821;
                float x_37822;
                bool x_45666;
                int32_t x_45667;
                float x_45668;
                bool x_45669;
                int32_t x_45670;
                float x_45671;
                bool ltid_in_bounds_45680;
                
                ltid_in_bounds_45680 = slt64(sext_i32_i64(local_tid_45653),
                                             iota32_arg_29024 *
                                             squot64(segred_group_sizze_37811,
                                                     segment_sizze_nonzzero_45650));
                
                int32_t skip_threads_45681;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45680) {
                        x_37820 = ((volatile __local
                                    bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)];
                        x_37821 = ((volatile __local
                                    int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)];
                        x_37822 = ((volatile __local
                                    float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)];
                        if ((local_tid_45653 - squot32(local_tid_45653, 32) *
                             32) == 0) {
                            x_37817 = x_37820;
                            x_37818 = x_37821;
                            x_37819 = x_37822;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45681 = 1;
                    while (slt32(skip_threads_45681, 32)) {
                        if (sle32(skip_threads_45681, local_tid_45653 -
                                  squot32(local_tid_45653, 32) * 32) &&
                            ltid_in_bounds_45680) {
                            // read operands
                            {
                                x_37817 = ((volatile __local
                                            bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653) -
                                                                       sext_i32_i64(skip_threads_45681)];
                                x_37818 = ((volatile __local
                                            int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653) -
                                                                          sext_i32_i64(skip_threads_45681)];
                                x_37819 = ((volatile __local
                                            float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653) -
                                                                        sext_i32_i64(skip_threads_45681)];
                            }
                            // perform operation
                            {
                                bool inactive_45682 =
                                     slt64(srem64(sext_i32_i64(local_tid_45653),
                                                  iota32_arg_29024),
                                           sext_i32_i64(local_tid_45653) -
                                           sext_i32_i64(local_tid_45653 -
                                           skip_threads_45681));
                                
                                if (inactive_45682) {
                                    x_37817 = x_37820;
                                    x_37818 = x_37821;
                                    x_37819 = x_37822;
                                }
                                if (!inactive_45682) {
                                    bool defunc_1_op_res_37823;
                                    int32_t defunc_1_op_res_37824;
                                    
                                    if (x_37817) {
                                        defunc_1_op_res_37823 = x_37817;
                                        defunc_1_op_res_37824 = x_37818;
                                    } else {
                                        bool x_37825 = x_37820 && x_37820;
                                        bool x_37826 = !x_37820;
                                        bool y_37827 = x_37817 && x_37826;
                                        bool defunc_1_op_res_f_res_37828 =
                                             x_37825 || y_37827;
                                        int32_t defunc_1_op_res_f_res_37829;
                                        
                                        if (x_37820) {
                                            defunc_1_op_res_f_res_37829 =
                                                x_37821;
                                        } else {
                                            defunc_1_op_res_f_res_37829 =
                                                x_37818;
                                        }
                                        defunc_1_op_res_37823 =
                                            defunc_1_op_res_f_res_37828;
                                        defunc_1_op_res_37824 =
                                            defunc_1_op_res_f_res_37829;
                                    }
                                    
                                    float defunc_1_op_res_37830 = x_37819 +
                                          x_37822;
                                    
                                    x_37817 = defunc_1_op_res_37823;
                                    x_37818 = defunc_1_op_res_37824;
                                    x_37819 = defunc_1_op_res_37830;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45655, skip_threads_45681)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45681, local_tid_45653 -
                                  squot32(local_tid_45653, 32) * 32) &&
                            ltid_in_bounds_45680) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)] =
                                    x_37817;
                                x_37820 = x_37817;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)] =
                                    x_37818;
                                x_37821 = x_37818;
                                ((volatile __local
                                  float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)] =
                                    x_37819;
                                x_37822 = x_37819;
                            }
                        }
                        if (sle32(wave_sizze_45655, skip_threads_45681)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45681 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45653 - squot32(local_tid_45653, 32) * 32) ==
                        31 && ltid_in_bounds_45680) {
                        ((volatile __local
                          bool *) red_arr_mem_45657)[sext_i32_i64(squot32(local_tid_45653,
                                                                          32))] =
                            x_37817;
                        ((volatile __local
                          int32_t *) red_arr_mem_45659)[sext_i32_i64(squot32(local_tid_45653,
                                                                             32))] =
                            x_37818;
                        ((volatile __local
                          float *) red_arr_mem_45661)[sext_i32_i64(squot32(local_tid_45653,
                                                                           32))] =
                            x_37819;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45683;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45653, 32) == 0 &&
                            ltid_in_bounds_45680) {
                            x_45669 = ((volatile __local
                                        bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)];
                            x_45670 = ((volatile __local
                                        int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)];
                            x_45671 = ((volatile __local
                                        float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)];
                            if ((local_tid_45653 - squot32(local_tid_45653,
                                                           32) * 32) == 0) {
                                x_45666 = x_45669;
                                x_45667 = x_45670;
                                x_45668 = x_45671;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45683 = 1;
                        while (slt32(skip_threads_45683, 32)) {
                            if (sle32(skip_threads_45683, local_tid_45653 -
                                      squot32(local_tid_45653, 32) * 32) &&
                                (squot32(local_tid_45653, 32) == 0 &&
                                 ltid_in_bounds_45680)) {
                                // read operands
                                {
                                    x_45666 = ((volatile __local
                                                bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653) -
                                                                           sext_i32_i64(skip_threads_45683)];
                                    x_45667 = ((volatile __local
                                                int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653) -
                                                                              sext_i32_i64(skip_threads_45683)];
                                    x_45668 = ((volatile __local
                                                float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653) -
                                                                            sext_i32_i64(skip_threads_45683)];
                                }
                                // perform operation
                                {
                                    bool inactive_45684 =
                                         slt64(srem64(sext_i32_i64(local_tid_45653 *
                                                      32 + 32 - 1),
                                                      iota32_arg_29024),
                                               sext_i32_i64(local_tid_45653 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45653 -
                                                             skip_threads_45683) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45684) {
                                        x_45666 = x_45669;
                                        x_45667 = x_45670;
                                        x_45668 = x_45671;
                                    }
                                    if (!inactive_45684) {
                                        bool defunc_1_op_res_45672;
                                        int32_t defunc_1_op_res_45673;
                                        
                                        if (x_45666) {
                                            defunc_1_op_res_45672 = x_45666;
                                            defunc_1_op_res_45673 = x_45667;
                                        } else {
                                            bool x_45674 = x_45669 && x_45669;
                                            bool x_45675 = !x_45669;
                                            bool y_45676 = x_45666 && x_45675;
                                            bool defunc_1_op_res_f_res_45677 =
                                                 x_45674 || y_45676;
                                            int32_t defunc_1_op_res_f_res_45678;
                                            
                                            if (x_45669) {
                                                defunc_1_op_res_f_res_45678 =
                                                    x_45670;
                                            } else {
                                                defunc_1_op_res_f_res_45678 =
                                                    x_45667;
                                            }
                                            defunc_1_op_res_45672 =
                                                defunc_1_op_res_f_res_45677;
                                            defunc_1_op_res_45673 =
                                                defunc_1_op_res_f_res_45678;
                                        }
                                        
                                        float defunc_1_op_res_45679 = x_45668 +
                                              x_45671;
                                        
                                        x_45666 = defunc_1_op_res_45672;
                                        x_45667 = defunc_1_op_res_45673;
                                        x_45668 = defunc_1_op_res_45679;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45655, skip_threads_45683)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45683, local_tid_45653 -
                                      squot32(local_tid_45653, 32) * 32) &&
                                (squot32(local_tid_45653, 32) == 0 &&
                                 ltid_in_bounds_45680)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)] =
                                        x_45666;
                                    x_45669 = x_45666;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)] =
                                        x_45667;
                                    x_45670 = x_45667;
                                    ((volatile __local
                                      float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)] =
                                        x_45668;
                                    x_45671 = x_45668;
                                }
                            }
                            if (sle32(wave_sizze_45655, skip_threads_45683)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45683 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45653, 32) == 0 ||
                          !ltid_in_bounds_45680)) {
                        // read operands
                        {
                            x_37820 = x_37817;
                            x_37821 = x_37818;
                            x_37822 = x_37819;
                            x_37817 = ((__local
                                        bool *) red_arr_mem_45657)[sext_i32_i64(squot32(local_tid_45653,
                                                                                        32)) -
                                                                   1];
                            x_37818 = ((__local
                                        int32_t *) red_arr_mem_45659)[sext_i32_i64(squot32(local_tid_45653,
                                                                                           32)) -
                                                                      1];
                            x_37819 = ((__local
                                        float *) red_arr_mem_45661)[sext_i32_i64(squot32(local_tid_45653,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45685 =
                                 slt64(srem64(sext_i32_i64(local_tid_45653),
                                              iota32_arg_29024),
                                       sext_i32_i64(local_tid_45653) -
                                       sext_i32_i64(squot32(local_tid_45653,
                                                            32) * 32 - 1));
                            
                            if (inactive_45685) {
                                x_37817 = x_37820;
                                x_37818 = x_37821;
                                x_37819 = x_37822;
                            }
                            if (!inactive_45685) {
                                bool defunc_1_op_res_37823;
                                int32_t defunc_1_op_res_37824;
                                
                                if (x_37817) {
                                    defunc_1_op_res_37823 = x_37817;
                                    defunc_1_op_res_37824 = x_37818;
                                } else {
                                    bool x_37825 = x_37820 && x_37820;
                                    bool x_37826 = !x_37820;
                                    bool y_37827 = x_37817 && x_37826;
                                    bool defunc_1_op_res_f_res_37828 =
                                         x_37825 || y_37827;
                                    int32_t defunc_1_op_res_f_res_37829;
                                    
                                    if (x_37820) {
                                        defunc_1_op_res_f_res_37829 = x_37821;
                                    } else {
                                        defunc_1_op_res_f_res_37829 = x_37818;
                                    }
                                    defunc_1_op_res_37823 =
                                        defunc_1_op_res_f_res_37828;
                                    defunc_1_op_res_37824 =
                                        defunc_1_op_res_f_res_37829;
                                }
                                
                                float defunc_1_op_res_37830 = x_37819 + x_37822;
                                
                                x_37817 = defunc_1_op_res_37823;
                                x_37818 = defunc_1_op_res_37824;
                                x_37819 = defunc_1_op_res_37830;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)] =
                                x_37817;
                            ((__local
                              int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)] =
                                x_37818;
                            ((__local
                              float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)] =
                                x_37819;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45653, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45657)[sext_i32_i64(local_tid_45653)] =
                            x_37820;
                        ((__local
                          int32_t *) red_arr_mem_45659)[sext_i32_i64(local_tid_45653)] =
                            x_37821;
                        ((__local
                          float *) red_arr_mem_45661)[sext_i32_i64(local_tid_45653)] =
                            x_37822;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45665) *
                      squot64(segred_group_sizze_37811,
                              segment_sizze_nonzzero_45650) +
                      sext_i32_i64(local_tid_45653), m_28625) &&
                slt64(sext_i32_i64(local_tid_45653),
                      squot64(segred_group_sizze_37811,
                              segment_sizze_nonzzero_45650))) {
                ((__global
                  bool *) mem_44327)[sext_i32_i64(virt_group_id_45665) *
                                     squot64(segred_group_sizze_37811,
                                             segment_sizze_nonzzero_45650) +
                                     sext_i32_i64(local_tid_45653)] = ((__local
                                                                        bool *) red_arr_mem_45657)[(sext_i32_i64(local_tid_45653) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45650 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44329)[sext_i32_i64(virt_group_id_45665) *
                                        squot64(segred_group_sizze_37811,
                                                segment_sizze_nonzzero_45650) +
                                        sext_i32_i64(local_tid_45653)] =
                    ((__local
                      int32_t *) red_arr_mem_45659)[(sext_i32_i64(local_tid_45653) +
                                                     1) *
                                                    segment_sizze_nonzzero_45650 -
                                                    1];
                ((__global
                  float *) mem_44331)[sext_i32_i64(virt_group_id_45665) *
                                      squot64(segred_group_sizze_37811,
                                              segment_sizze_nonzzero_45650) +
                                      sext_i32_i64(local_tid_45653)] = ((__local
                                                                         float *) red_arr_mem_45661)[(sext_i32_i64(local_tid_45653) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45650 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37811
}
__kernel void remove_nanszisegmap_29863(__global int *global_failure,
                                        int64_t m_27917, int64_t n_27918,
                                        int64_t p_27919,
                                        int16_t nan_value_27920, __global
                                        unsigned char *images_mem_43377,
                                        __global unsigned char *mem_43382)
{
    #define segmap_group_sizze_29924 (remove_nanszisegmap_group_sizze_29867)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44630;
    int32_t local_tid_44631;
    int64_t group_sizze_44634;
    int32_t wave_sizze_44633;
    int32_t group_tid_44632;
    
    global_tid_44630 = get_global_id(0);
    local_tid_44631 = get_local_id(0);
    group_sizze_44634 = get_local_size(0);
    wave_sizze_44633 = LOCKSTEP_WIDTH;
    group_tid_44632 = get_group_id(0);
    
    int32_t phys_tid_29863;
    
    phys_tid_29863 = global_tid_44630;
    
    int64_t gtid_29860;
    
    gtid_29860 = squot64(sext_i32_i64(group_tid_44632) *
                         segmap_group_sizze_29924 +
                         sext_i32_i64(local_tid_44631), n_27918 * p_27919);
    
    int64_t gtid_29861;
    
    gtid_29861 = squot64(sext_i32_i64(group_tid_44632) *
                         segmap_group_sizze_29924 +
                         sext_i32_i64(local_tid_44631) -
                         squot64(sext_i32_i64(group_tid_44632) *
                                 segmap_group_sizze_29924 +
                                 sext_i32_i64(local_tid_44631), n_27918 *
                                 p_27919) * (n_27918 * p_27919), p_27919);
    
    int64_t gtid_29862;
    
    gtid_29862 = sext_i32_i64(group_tid_44632) * segmap_group_sizze_29924 +
        sext_i32_i64(local_tid_44631) - squot64(sext_i32_i64(group_tid_44632) *
                                                segmap_group_sizze_29924 +
                                                sext_i32_i64(local_tid_44631),
                                                n_27918 * p_27919) * (n_27918 *
                                                                      p_27919) -
        squot64(sext_i32_i64(group_tid_44632) * segmap_group_sizze_29924 +
                sext_i32_i64(local_tid_44631) -
                squot64(sext_i32_i64(group_tid_44632) *
                        segmap_group_sizze_29924 +
                        sext_i32_i64(local_tid_44631), n_27918 * p_27919) *
                (n_27918 * p_27919), p_27919) * p_27919;
    if ((slt64(gtid_29860, m_27917) && slt64(gtid_29861, n_27918)) &&
        slt64(gtid_29862, p_27919)) {
        int16_t x_29927 = ((__global int16_t *) images_mem_43377)[gtid_29860 *
                                                                  (p_27919 *
                                                                   n_27918) +
                                                                  gtid_29861 *
                                                                  p_27919 +
                                                                  gtid_29862];
        bool cond_29928 = x_29927 == nan_value_27920;
        float defunc_0_f_res_29929;
        
        if (cond_29928) {
            defunc_0_f_res_29929 = NAN;
        } else {
            float i16_res_29930 = sitofp_i16_f32(x_29927);
            
            defunc_0_f_res_29929 = i16_res_29930;
        }
        ((__global float *) mem_43382)[gtid_29860 * (p_27919 * n_27918) +
                                       gtid_29861 * p_27919 + gtid_29862] =
            defunc_0_f_res_29929;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29924
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
class bfastfinal:
  entry_points = {"main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "mainMagnitude": (["i32", "i32", "i32", "f32", "f32", "f32",
                                     "[]i32", "[][]f32"], ["[]i32", "[]f32",
                                                           "[]f32"]),
                  "remove_nans": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:145:70-84\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:45-59\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:145:70-84\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:45-59\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:145:70-84\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:45-59\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:145:70-84\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:45-59\n   #1  bfastfinal.fut:145:29-148:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:123:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:145:29-151:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:123:50-167:9\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_45193": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_45202": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_41681": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_42422": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_41682": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_42423": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_41678": {"class": "tile_size", "value": None},
                                        "main.Tk_42419": {"class": "tile_size", "value": None},
                                        "main.Tx_41533": {"class": "tile_size", "value": None},
                                        "main.Tx_41679": {"class": "tile_size", "value": None},
                                        "main.Tx_42420": {"class": "tile_size", "value": None},
                                        "main.Ty_41534": {"class": "tile_size", "value": None},
                                        "main.Ty_41680": {"class": "tile_size", "value": None},
                                        "main.Ty_42421": {"class": "tile_size", "value": None},
                                        "main.group_size_44802": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38108": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38286": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38414": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38446": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38493": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38978": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39143": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39197": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39264": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39358": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39538": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39679": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39811": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40092": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40167": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40316": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40418": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40565": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40689": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41059": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41201": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_38448": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38495": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39540": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39681": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39813": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_41203": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_38553": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39600": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39737": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39867": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40433": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40454": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40521": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40605": {"class": "group_size", "value": None},
                                        "main.segred_group_size_41106": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_38555": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39602": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39739": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39869": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40435": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40456": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40523": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40607": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_41108": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_40176": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_41160": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_40178": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_41162": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_13": {"class": "threshold (!main.suff_intra_par_11)",
                                                                   "value": 32},
                                        "main.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_29": {"class": "threshold (!main.suff_outer_par_28)",
                                                                   "value": 32},
                                        "main.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "main.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_17": {"class": "threshold (!main.suff_outer_par_16)",
                                                                   "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold (!main.suff_outer_par_18)",
                                                                   "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold (!main.suff_outer_par_20)",
                                                                   "value": None},
                                        "main.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_42145": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_41681": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_42422": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_41682": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_42423": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_41678": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_42419": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41533": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41679": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_42420": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41534": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41680": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_42421": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_44826": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30025": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30203": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30331": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30363": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30410": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30895": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31060": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31114": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31181": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31275": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31455": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31596": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31728": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32009": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32084": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32233": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32335": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32482": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32606": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33335": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33387": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33526": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33584": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33601": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33722": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_30365": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30412": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31457": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31598": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31730": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33724": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_30470": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31517": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31654": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31784": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32350": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32371": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32438": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32522": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33627": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_30472": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31519": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31656": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31786": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32352": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32373": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32440": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32524": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33629": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_32093": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_33681": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_32095": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_33683": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_13": {"class": "threshold (!mainDetailed.suff_intra_par_11)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_29": {"class": "threshold (!mainDetailed.suff_outer_par_28)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold (!mainDetailed.suff_outer_par_16)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold (!mainDetailed.suff_outer_par_18)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold (!mainDetailed.suff_outer_par_20)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_42145": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Rx_41681": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Rx_42422": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_41682": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_42423": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Tk_41678": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tk_42419": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41533": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41679": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_42420": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41534": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41680": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_42421": {"class": "tile_size", "value": None},
                                        "mainMagnitude.group_size_44804": {"class": "group_size", "value": None},
                                        "mainMagnitude.segmap_group_size_34142": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34320": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34448": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34480": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34527": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35012": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35177": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35231": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35298": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35392": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35572": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35713": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35845": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36126": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36201": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36350": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36452": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36599": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36723": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37404": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37543": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37604": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37730": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34482": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34529": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35574": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35715": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35847": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_37732": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_34587": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35634": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35771": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35901": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36467": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36488": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36555": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36639": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_37635": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_34589": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35636": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35773": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35903": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36469": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36490": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36557": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36641": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_37637": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segscan_group_size_36210": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_group_size_37689": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_36212": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_37691": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_13": {"class": "threshold (!mainMagnitude.suff_intra_par_11)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_29": {"class": "threshold (!mainMagnitude.suff_outer_par_28)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_17": {"class": "threshold (!mainMagnitude.suff_outer_par_16)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_19": {"class": "threshold (!mainMagnitude.suff_outer_par_18)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_21": {"class": "threshold (!mainMagnitude.suff_outer_par_20)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_7": {"class": "threshold (!mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.suff_outer_par_8": {"class": "threshold (!mainMagnitude.suff_outer_par_7 !mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.tile_size_42145": {"class": "tile_size", "value": None},
                                        "remove_nans.segmap_group_size_29867": {"class": "group_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_45190_var = program.builtinzhreplicate_f32zireplicate_45190
    self.builtinzhreplicate_i32zireplicate_45199_var = program.builtinzhreplicate_i32zireplicate_45199
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_44799_var = program.mainzicopy_44799
    self.mainziscan_stage1_40182_var = program.mainziscan_stage1_40182
    self.mainziscan_stage1_41166_var = program.mainziscan_stage1_41166
    self.mainziscan_stage2_40182_var = program.mainziscan_stage2_40182
    self.mainziscan_stage2_41166_var = program.mainziscan_stage2_41166
    self.mainziscan_stage3_40182_var = program.mainziscan_stage3_40182
    self.mainziscan_stage3_41166_var = program.mainziscan_stage3_41166
    self.mainzisegmap_38105_var = program.mainzisegmap_38105
    self.mainzisegmap_38283_var = program.mainzisegmap_38283
    self.mainzisegmap_38411_var = program.mainzisegmap_38411
    self.mainzisegmap_38444_var = program.mainzisegmap_38444
    self.mainzisegmap_38490_var = program.mainzisegmap_38490
    self.mainzisegmap_38974_var = program.mainzisegmap_38974
    self.mainzisegmap_39140_var = program.mainzisegmap_39140
    self.mainzisegmap_39194_var = program.mainzisegmap_39194
    self.mainzisegmap_39262_var = program.mainzisegmap_39262
    self.mainzisegmap_39355_var = program.mainzisegmap_39355
    self.mainzisegmap_39536_var = program.mainzisegmap_39536
    self.mainzisegmap_39677_var = program.mainzisegmap_39677
    self.mainzisegmap_39809_var = program.mainzisegmap_39809
    self.mainzisegmap_40089_var = program.mainzisegmap_40089
    self.mainzisegmap_40165_var = program.mainzisegmap_40165
    self.mainzisegmap_40416_var = program.mainzisegmap_40416
    self.mainzisegmap_40687_var = program.mainzisegmap_40687
    self.mainzisegmap_41057_var = program.mainzisegmap_41057
    self.mainzisegmap_41199_var = program.mainzisegmap_41199
    self.mainzisegmap_intragroup_38794_var = program.mainzisegmap_intragroup_38794
    self.mainzisegmap_intragroup_39021_var = program.mainzisegmap_intragroup_39021
    self.mainzisegmap_intragroup_39972_var = program.mainzisegmap_intragroup_39972
    self.mainzisegmap_intragroup_40312_var = program.mainzisegmap_intragroup_40312
    self.mainzisegmap_intragroup_40732_var = program.mainzisegmap_intragroup_40732
    self.mainzisegmap_intragroup_41549_var = program.mainzisegmap_intragroup_41549
    self.mainzisegmap_intragroup_41702_var = program.mainzisegmap_intragroup_41702
    self.mainzisegmap_intragroup_42151_var = program.mainzisegmap_intragroup_42151
    self.mainzisegmap_intragroup_42443_var = program.mainzisegmap_intragroup_42443
    self.mainzisegmap_intragroup_42877_var = program.mainzisegmap_intragroup_42877
    self.mainzisegmap_intragroup_43109_var = program.mainzisegmap_intragroup_43109
    self.mainzisegred_large_38559_var = program.mainzisegred_large_38559
    self.mainzisegred_large_39606_var = program.mainzisegred_large_39606
    self.mainzisegred_large_39743_var = program.mainzisegred_large_39743
    self.mainzisegred_large_39873_var = program.mainzisegred_large_39873
    self.mainzisegred_large_40439_var = program.mainzisegred_large_40439
    self.mainzisegred_large_40460_var = program.mainzisegred_large_40460
    self.mainzisegred_large_40611_var = program.mainzisegred_large_40611
    self.mainzisegred_large_41112_var = program.mainzisegred_large_41112
    self.mainzisegred_nonseg_40529_var = program.mainzisegred_nonseg_40529
    self.mainzisegred_small_38559_var = program.mainzisegred_small_38559
    self.mainzisegred_small_39606_var = program.mainzisegred_small_39606
    self.mainzisegred_small_39743_var = program.mainzisegred_small_39743
    self.mainzisegred_small_39873_var = program.mainzisegred_small_39873
    self.mainzisegred_small_40439_var = program.mainzisegred_small_40439
    self.mainzisegred_small_40460_var = program.mainzisegred_small_40460
    self.mainzisegred_small_40611_var = program.mainzisegred_small_40611
    self.mainzisegred_small_41112_var = program.mainzisegred_small_41112
    self.mainDetailedzicopy_44823_var = program.mainDetailedzicopy_44823
    self.mainDetailedziscan_stage1_32099_var = program.mainDetailedziscan_stage1_32099
    self.mainDetailedziscan_stage1_33687_var = program.mainDetailedziscan_stage1_33687
    self.mainDetailedziscan_stage2_32099_var = program.mainDetailedziscan_stage2_32099
    self.mainDetailedziscan_stage2_33687_var = program.mainDetailedziscan_stage2_33687
    self.mainDetailedziscan_stage3_32099_var = program.mainDetailedziscan_stage3_32099
    self.mainDetailedziscan_stage3_33687_var = program.mainDetailedziscan_stage3_33687
    self.mainDetailedzisegmap_30022_var = program.mainDetailedzisegmap_30022
    self.mainDetailedzisegmap_30200_var = program.mainDetailedzisegmap_30200
    self.mainDetailedzisegmap_30328_var = program.mainDetailedzisegmap_30328
    self.mainDetailedzisegmap_30361_var = program.mainDetailedzisegmap_30361
    self.mainDetailedzisegmap_30407_var = program.mainDetailedzisegmap_30407
    self.mainDetailedzisegmap_30891_var = program.mainDetailedzisegmap_30891
    self.mainDetailedzisegmap_31057_var = program.mainDetailedzisegmap_31057
    self.mainDetailedzisegmap_31111_var = program.mainDetailedzisegmap_31111
    self.mainDetailedzisegmap_31179_var = program.mainDetailedzisegmap_31179
    self.mainDetailedzisegmap_31272_var = program.mainDetailedzisegmap_31272
    self.mainDetailedzisegmap_31453_var = program.mainDetailedzisegmap_31453
    self.mainDetailedzisegmap_31594_var = program.mainDetailedzisegmap_31594
    self.mainDetailedzisegmap_31726_var = program.mainDetailedzisegmap_31726
    self.mainDetailedzisegmap_32006_var = program.mainDetailedzisegmap_32006
    self.mainDetailedzisegmap_32082_var = program.mainDetailedzisegmap_32082
    self.mainDetailedzisegmap_32333_var = program.mainDetailedzisegmap_32333
    self.mainDetailedzisegmap_32604_var = program.mainDetailedzisegmap_32604
    self.mainDetailedzisegmap_33332_var = program.mainDetailedzisegmap_33332
    self.mainDetailedzisegmap_33385_var = program.mainDetailedzisegmap_33385
    self.mainDetailedzisegmap_33523_var = program.mainDetailedzisegmap_33523
    self.mainDetailedzisegmap_33582_var = program.mainDetailedzisegmap_33582
    self.mainDetailedzisegmap_33599_var = program.mainDetailedzisegmap_33599
    self.mainDetailedzisegmap_33720_var = program.mainDetailedzisegmap_33720
    self.mainDetailedzisegmap_intragroup_30711_var = program.mainDetailedzisegmap_intragroup_30711
    self.mainDetailedzisegmap_intragroup_30938_var = program.mainDetailedzisegmap_intragroup_30938
    self.mainDetailedzisegmap_intragroup_31889_var = program.mainDetailedzisegmap_intragroup_31889
    self.mainDetailedzisegmap_intragroup_32229_var = program.mainDetailedzisegmap_intragroup_32229
    self.mainDetailedzisegmap_intragroup_32673_var = program.mainDetailedzisegmap_intragroup_32673
    self.mainDetailedzisegmap_intragroup_41549_var = program.mainDetailedzisegmap_intragroup_41549
    self.mainDetailedzisegmap_intragroup_41702_var = program.mainDetailedzisegmap_intragroup_41702
    self.mainDetailedzisegmap_intragroup_42151_var = program.mainDetailedzisegmap_intragroup_42151
    self.mainDetailedzisegmap_intragroup_42443_var = program.mainDetailedzisegmap_intragroup_42443
    self.mainDetailedzisegmap_intragroup_42877_var = program.mainDetailedzisegmap_intragroup_42877
    self.mainDetailedzisegmap_intragroup_43109_var = program.mainDetailedzisegmap_intragroup_43109
    self.mainDetailedzisegred_large_30476_var = program.mainDetailedzisegred_large_30476
    self.mainDetailedzisegred_large_31523_var = program.mainDetailedzisegred_large_31523
    self.mainDetailedzisegred_large_31660_var = program.mainDetailedzisegred_large_31660
    self.mainDetailedzisegred_large_31790_var = program.mainDetailedzisegred_large_31790
    self.mainDetailedzisegred_large_32356_var = program.mainDetailedzisegred_large_32356
    self.mainDetailedzisegred_large_32377_var = program.mainDetailedzisegred_large_32377
    self.mainDetailedzisegred_large_32528_var = program.mainDetailedzisegred_large_32528
    self.mainDetailedzisegred_large_33633_var = program.mainDetailedzisegred_large_33633
    self.mainDetailedzisegred_nonseg_32446_var = program.mainDetailedzisegred_nonseg_32446
    self.mainDetailedzisegred_small_30476_var = program.mainDetailedzisegred_small_30476
    self.mainDetailedzisegred_small_31523_var = program.mainDetailedzisegred_small_31523
    self.mainDetailedzisegred_small_31660_var = program.mainDetailedzisegred_small_31660
    self.mainDetailedzisegred_small_31790_var = program.mainDetailedzisegred_small_31790
    self.mainDetailedzisegred_small_32356_var = program.mainDetailedzisegred_small_32356
    self.mainDetailedzisegred_small_32377_var = program.mainDetailedzisegred_small_32377
    self.mainDetailedzisegred_small_32528_var = program.mainDetailedzisegred_small_32528
    self.mainDetailedzisegred_small_33633_var = program.mainDetailedzisegred_small_33633
    self.mainMagnitudezicopy_44801_var = program.mainMagnitudezicopy_44801
    self.mainMagnitudeziscan_stage1_36216_var = program.mainMagnitudeziscan_stage1_36216
    self.mainMagnitudeziscan_stage1_37695_var = program.mainMagnitudeziscan_stage1_37695
    self.mainMagnitudeziscan_stage2_36216_var = program.mainMagnitudeziscan_stage2_36216
    self.mainMagnitudeziscan_stage2_37695_var = program.mainMagnitudeziscan_stage2_37695
    self.mainMagnitudeziscan_stage3_36216_var = program.mainMagnitudeziscan_stage3_36216
    self.mainMagnitudeziscan_stage3_37695_var = program.mainMagnitudeziscan_stage3_37695
    self.mainMagnitudezisegmap_34139_var = program.mainMagnitudezisegmap_34139
    self.mainMagnitudezisegmap_34317_var = program.mainMagnitudezisegmap_34317
    self.mainMagnitudezisegmap_34445_var = program.mainMagnitudezisegmap_34445
    self.mainMagnitudezisegmap_34478_var = program.mainMagnitudezisegmap_34478
    self.mainMagnitudezisegmap_34524_var = program.mainMagnitudezisegmap_34524
    self.mainMagnitudezisegmap_35008_var = program.mainMagnitudezisegmap_35008
    self.mainMagnitudezisegmap_35174_var = program.mainMagnitudezisegmap_35174
    self.mainMagnitudezisegmap_35228_var = program.mainMagnitudezisegmap_35228
    self.mainMagnitudezisegmap_35296_var = program.mainMagnitudezisegmap_35296
    self.mainMagnitudezisegmap_35389_var = program.mainMagnitudezisegmap_35389
    self.mainMagnitudezisegmap_35570_var = program.mainMagnitudezisegmap_35570
    self.mainMagnitudezisegmap_35711_var = program.mainMagnitudezisegmap_35711
    self.mainMagnitudezisegmap_35843_var = program.mainMagnitudezisegmap_35843
    self.mainMagnitudezisegmap_36123_var = program.mainMagnitudezisegmap_36123
    self.mainMagnitudezisegmap_36199_var = program.mainMagnitudezisegmap_36199
    self.mainMagnitudezisegmap_36450_var = program.mainMagnitudezisegmap_36450
    self.mainMagnitudezisegmap_36721_var = program.mainMagnitudezisegmap_36721
    self.mainMagnitudezisegmap_37402_var = program.mainMagnitudezisegmap_37402
    self.mainMagnitudezisegmap_37540_var = program.mainMagnitudezisegmap_37540
    self.mainMagnitudezisegmap_37602_var = program.mainMagnitudezisegmap_37602
    self.mainMagnitudezisegmap_37728_var = program.mainMagnitudezisegmap_37728
    self.mainMagnitudezisegmap_intragroup_34828_var = program.mainMagnitudezisegmap_intragroup_34828
    self.mainMagnitudezisegmap_intragroup_35055_var = program.mainMagnitudezisegmap_intragroup_35055
    self.mainMagnitudezisegmap_intragroup_36006_var = program.mainMagnitudezisegmap_intragroup_36006
    self.mainMagnitudezisegmap_intragroup_36346_var = program.mainMagnitudezisegmap_intragroup_36346
    self.mainMagnitudezisegmap_intragroup_36788_var = program.mainMagnitudezisegmap_intragroup_36788
    self.mainMagnitudezisegmap_intragroup_41549_var = program.mainMagnitudezisegmap_intragroup_41549
    self.mainMagnitudezisegmap_intragroup_41702_var = program.mainMagnitudezisegmap_intragroup_41702
    self.mainMagnitudezisegmap_intragroup_42151_var = program.mainMagnitudezisegmap_intragroup_42151
    self.mainMagnitudezisegmap_intragroup_42443_var = program.mainMagnitudezisegmap_intragroup_42443
    self.mainMagnitudezisegmap_intragroup_42877_var = program.mainMagnitudezisegmap_intragroup_42877
    self.mainMagnitudezisegmap_intragroup_43109_var = program.mainMagnitudezisegmap_intragroup_43109
    self.mainMagnitudezisegred_large_34593_var = program.mainMagnitudezisegred_large_34593
    self.mainMagnitudezisegred_large_35640_var = program.mainMagnitudezisegred_large_35640
    self.mainMagnitudezisegred_large_35777_var = program.mainMagnitudezisegred_large_35777
    self.mainMagnitudezisegred_large_35907_var = program.mainMagnitudezisegred_large_35907
    self.mainMagnitudezisegred_large_36473_var = program.mainMagnitudezisegred_large_36473
    self.mainMagnitudezisegred_large_36494_var = program.mainMagnitudezisegred_large_36494
    self.mainMagnitudezisegred_large_36645_var = program.mainMagnitudezisegred_large_36645
    self.mainMagnitudezisegred_large_37641_var = program.mainMagnitudezisegred_large_37641
    self.mainMagnitudezisegred_nonseg_36563_var = program.mainMagnitudezisegred_nonseg_36563
    self.mainMagnitudezisegred_small_34593_var = program.mainMagnitudezisegred_small_34593
    self.mainMagnitudezisegred_small_35640_var = program.mainMagnitudezisegred_small_35640
    self.mainMagnitudezisegred_small_35777_var = program.mainMagnitudezisegred_small_35777
    self.mainMagnitudezisegred_small_35907_var = program.mainMagnitudezisegred_small_35907
    self.mainMagnitudezisegred_small_36473_var = program.mainMagnitudezisegred_small_36473
    self.mainMagnitudezisegred_small_36494_var = program.mainMagnitudezisegred_small_36494
    self.mainMagnitudezisegred_small_36645_var = program.mainMagnitudezisegred_small_36645
    self.mainMagnitudezisegred_small_37641_var = program.mainMagnitudezisegred_small_37641
    self.remove_nanszisegmap_29863_var = program.remove_nanszisegmap_29863
    self.constants = {}
    mainzicounter_mem_44735 = np.zeros(10240, dtype=np.int32)
    static_mem_45801 = opencl_alloc(self, 40960, "static_mem_45801")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45801,
                      normaliseArray(mainzicounter_mem_44735),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44735 = static_mem_45801
    mainzicounter_mem_44931 = np.zeros(10240, dtype=np.int32)
    static_mem_45804 = opencl_alloc(self, 40960, "static_mem_45804")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45804,
                      normaliseArray(mainzicounter_mem_44931),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44931 = static_mem_45804
    mainzicounter_mem_45019 = np.zeros(10240, dtype=np.int32)
    static_mem_45805 = opencl_alloc(self, 40960, "static_mem_45805")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45805,
                      normaliseArray(mainzicounter_mem_45019),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45019 = static_mem_45805
    mainzicounter_mem_45151 = np.zeros(10240, dtype=np.int32)
    static_mem_45806 = opencl_alloc(self, 40960, "static_mem_45806")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45806,
                      normaliseArray(mainzicounter_mem_45151),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45151 = static_mem_45806
    mainzicounter_mem_45345 = np.zeros(10240, dtype=np.int32)
    static_mem_45807 = opencl_alloc(self, 40960, "static_mem_45807")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45807,
                      normaliseArray(mainzicounter_mem_45345),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45345 = static_mem_45807
    mainzicounter_mem_45405 = np.zeros(10240, dtype=np.int32)
    static_mem_45808 = opencl_alloc(self, 40960, "static_mem_45808")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45808,
                      normaliseArray(mainzicounter_mem_45405),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45405 = static_mem_45808
    mainzicounter_mem_45445 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_45809 = opencl_alloc(self, 40, "static_mem_45809")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45809,
                      normaliseArray(mainzicounter_mem_45445),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45445 = static_mem_45809
    mainzicounter_mem_45514 = np.zeros(10240, dtype=np.int32)
    static_mem_45811 = opencl_alloc(self, 40960, "static_mem_45811")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45811,
                      normaliseArray(mainzicounter_mem_45514),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45514 = static_mem_45811
    mainzicounter_mem_45691 = np.zeros(10240, dtype=np.int32)
    static_mem_45813 = opencl_alloc(self, 40960, "static_mem_45813")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45813,
                      normaliseArray(mainzicounter_mem_45691),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45691 = static_mem_45813
    mainDetailedzicounter_mem_44759 = np.zeros(10240, dtype=np.int32)
    static_mem_45814 = opencl_alloc(self, 40960, "static_mem_45814")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45814,
                      normaliseArray(mainDetailedzicounter_mem_44759),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44759 = static_mem_45814
    mainDetailedzicounter_mem_44955 = np.zeros(10240, dtype=np.int32)
    static_mem_45817 = opencl_alloc(self, 40960, "static_mem_45817")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45817,
                      normaliseArray(mainDetailedzicounter_mem_44955),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44955 = static_mem_45817
    mainDetailedzicounter_mem_45043 = np.zeros(10240, dtype=np.int32)
    static_mem_45818 = opencl_alloc(self, 40960, "static_mem_45818")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45818,
                      normaliseArray(mainDetailedzicounter_mem_45043),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45043 = static_mem_45818
    mainDetailedzicounter_mem_45175 = np.zeros(10240, dtype=np.int32)
    static_mem_45819 = opencl_alloc(self, 40960, "static_mem_45819")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45819,
                      normaliseArray(mainDetailedzicounter_mem_45175),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45175 = static_mem_45819
    mainDetailedzicounter_mem_45369 = np.zeros(10240, dtype=np.int32)
    static_mem_45820 = opencl_alloc(self, 40960, "static_mem_45820")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45820,
                      normaliseArray(mainDetailedzicounter_mem_45369),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45369 = static_mem_45820
    mainDetailedzicounter_mem_45429 = np.zeros(10240, dtype=np.int32)
    static_mem_45821 = opencl_alloc(self, 40960, "static_mem_45821")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45821,
                      normaliseArray(mainDetailedzicounter_mem_45429),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45429 = static_mem_45821
    mainDetailedzicounter_mem_45469 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_45822 = opencl_alloc(self, 40, "static_mem_45822")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45822,
                      normaliseArray(mainDetailedzicounter_mem_45469),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45469 = static_mem_45822
    mainDetailedzicounter_mem_45538 = np.zeros(10240, dtype=np.int32)
    static_mem_45824 = opencl_alloc(self, 40960, "static_mem_45824")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45824,
                      normaliseArray(mainDetailedzicounter_mem_45538),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45538 = static_mem_45824
    mainDetailedzicounter_mem_45719 = np.zeros(10240, dtype=np.int32)
    static_mem_45826 = opencl_alloc(self, 40960, "static_mem_45826")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45826,
                      normaliseArray(mainDetailedzicounter_mem_45719),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45719 = static_mem_45826
    mainMagnitudezicounter_mem_44737 = np.zeros(10240, dtype=np.int32)
    static_mem_45827 = opencl_alloc(self, 40960, "static_mem_45827")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45827,
                      normaliseArray(mainMagnitudezicounter_mem_44737),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44737 = static_mem_45827
    mainMagnitudezicounter_mem_44933 = np.zeros(10240, dtype=np.int32)
    static_mem_45830 = opencl_alloc(self, 40960, "static_mem_45830")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45830,
                      normaliseArray(mainMagnitudezicounter_mem_44933),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44933 = static_mem_45830
    mainMagnitudezicounter_mem_45021 = np.zeros(10240, dtype=np.int32)
    static_mem_45831 = opencl_alloc(self, 40960, "static_mem_45831")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45831,
                      normaliseArray(mainMagnitudezicounter_mem_45021),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45021 = static_mem_45831
    mainMagnitudezicounter_mem_45153 = np.zeros(10240, dtype=np.int32)
    static_mem_45832 = opencl_alloc(self, 40960, "static_mem_45832")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45832,
                      normaliseArray(mainMagnitudezicounter_mem_45153),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45153 = static_mem_45832
    mainMagnitudezicounter_mem_45347 = np.zeros(10240, dtype=np.int32)
    static_mem_45833 = opencl_alloc(self, 40960, "static_mem_45833")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45833,
                      normaliseArray(mainMagnitudezicounter_mem_45347),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45347 = static_mem_45833
    mainMagnitudezicounter_mem_45407 = np.zeros(10240, dtype=np.int32)
    static_mem_45834 = opencl_alloc(self, 40960, "static_mem_45834")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45834,
                      normaliseArray(mainMagnitudezicounter_mem_45407),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45407 = static_mem_45834
    mainMagnitudezicounter_mem_45447 = np.array([np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0)],
                                                dtype=np.int32)
    static_mem_45835 = opencl_alloc(self, 40, "static_mem_45835")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45835,
                      normaliseArray(mainMagnitudezicounter_mem_45447),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45447 = static_mem_45835
    mainMagnitudezicounter_mem_45516 = np.zeros(10240, dtype=np.int32)
    static_mem_45837 = opencl_alloc(self, 40960, "static_mem_45837")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45837,
                      normaliseArray(mainMagnitudezicounter_mem_45516),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45516 = static_mem_45837
    mainMagnitudezicounter_mem_45697 = np.zeros(10240, dtype=np.int32)
    static_mem_45839 = opencl_alloc(self, 40960, "static_mem_45839")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45839,
                      normaliseArray(mainMagnitudezicounter_mem_45697),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45697 = static_mem_45839
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_45186, num_elems_45187,
                                     val_45188):
    group_sizze_45193 = self.sizes["builtin#replicate_f32.group_size_45193"]
    num_groups_45194 = sdiv_up64(num_elems_45187, group_sizze_45193)
    if ((1 * (np.long(num_groups_45194) * np.long(group_sizze_45193))) != 0):
      self.builtinzhreplicate_f32zireplicate_45190_var.set_args(mem_45186,
                                                                np.int32(num_elems_45187),
                                                                np.float32(val_45188))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_45190_var,
                                 ((np.long(num_groups_45194) * np.long(group_sizze_45193)),),
                                 (np.long(group_sizze_45193),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_45195, num_elems_45196,
                                     val_45197):
    group_sizze_45202 = self.sizes["builtin#replicate_i32.group_size_45202"]
    num_groups_45203 = sdiv_up64(num_elems_45196, group_sizze_45202)
    if ((1 * (np.long(num_groups_45203) * np.long(group_sizze_45202))) != 0):
      self.builtinzhreplicate_i32zireplicate_45199_var.set_args(mem_45195,
                                                                np.int32(num_elems_45196),
                                                                np.int32(val_45197))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_45199_var,
                                 ((np.long(num_groups_45203) * np.long(group_sizze_45202)),),
                                 (np.long(group_sizze_45202),))
      if synchronous:
        sync(self)
    return ()
  def futhark_main(self, mappingindices_mem_43377, images_mem_43378, N_29258,
                   m_29259, N_29260, trend_29261, k_29262, n_29263, freq_29264,
                   hfrac_29265, lam_29266):
    dim_match_29269 = (N_29258 == N_29260)
    empty_or_match_cert_29270 = True
    assert dim_match_29269, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:187:1-193:20\n" % ("function arguments of wrong shape",))
    i32_res_29272 = sext_i32_i64(n_29263)
    x_29273 = (np.int32(2) * k_29262)
    k2p2_29274 = (np.int32(2) + x_29273)
    cond_29275 = slt32(np.int32(0), trend_29261)
    if cond_29275:
      k2p2zq_29276 = k2p2_29274
    else:
      k2p2zq_f_res_29277 = (k2p2_29274 - np.int32(1))
      k2p2zq_29276 = k2p2zq_f_res_29277
    i32_res_29278 = sext_i32_i64(k2p2zq_29276)
    binop_x_43381 = (N_29258 * i32_res_29278)
    bytes_43380 = (np.int64(4) * binop_x_43381)
    if cond_29275:
      bounds_invalid_upwards_29280 = slt64(i32_res_29278, np.int64(0))
      valid_29281 = not(bounds_invalid_upwards_29280)
      range_valid_c_29282 = True
      assert valid_29281, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:33:17-66\n   #4  bfastfinal.fut:192:5-58\n   #5  bfastfinal.fut:187:1-193:20\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_29278,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_38178 = self.sizes["main.segmap_group_size_38108"]
      segmap_usable_groups_38179 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_38178)
      mem_43382 = opencl_alloc(self, bytes_43380, "mem_43382")
      if ((1 * (np.long(segmap_usable_groups_38179) * np.long(segmap_group_sizze_38178))) != 0):
        self.mainzisegmap_38105_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.float32(freq_29264),
                                             np.int64(i32_res_29278),
                                             mappingindices_mem_43377,
                                             mem_43382)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38105_var,
                                   ((np.long(segmap_usable_groups_38179) * np.long(segmap_group_sizze_38178)),),
                                   (np.long(segmap_group_sizze_38178),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43382
    else:
      bounds_invalid_upwards_29306 = slt64(i32_res_29278, np.int64(0))
      valid_29307 = not(bounds_invalid_upwards_29306)
      range_valid_c_29308 = True
      assert valid_29307, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:34:17-64\n   #4  bfastfinal.fut:192:5-58\n   #5  bfastfinal.fut:187:1-193:20\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_29278,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_38352 = self.sizes["main.segmap_group_size_38286"]
      segmap_usable_groups_38353 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_38352)
      mem_43386 = opencl_alloc(self, bytes_43380, "mem_43386")
      if ((1 * (np.long(segmap_usable_groups_38353) * np.long(segmap_group_sizze_38352))) != 0):
        self.mainzisegmap_38283_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.float32(freq_29264),
                                             np.int64(i32_res_29278),
                                             mappingindices_mem_43377,
                                             mem_43386)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38283_var,
                                   ((np.long(segmap_usable_groups_38353) * np.long(segmap_group_sizze_38352)),),
                                   (np.long(segmap_group_sizze_38352),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43386
    x_29331 = (N_29258 * N_29258)
    y_29332 = (np.int64(2) * N_29258)
    x_29333 = (x_29331 + y_29332)
    x_29334 = (np.int64(1) + x_29333)
    y_29335 = (np.int64(1) + N_29258)
    zzero_29336 = (y_29335 == np.int64(0))
    nonzzero_29337 = not(zzero_29336)
    nonzzero_cert_29338 = True
    assert nonzzero_29337, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:32-60\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:20\n" % ("division by zero",))
    x_29339 = sdiv64(x_29334, y_29335)
    x_29340 = (x_29339 - N_29258)
    binop_p_29341 = (x_29340 - np.int64(1))
    defunc_0_f_res_29342 = sext_i64_i32(binop_p_29341)
    i32_res_29343 = sitofp_i32_f32(defunc_0_f_res_29342)
    segmap_group_sizze_38435 = self.sizes["main.segmap_group_size_38414"]
    segmap_usable_groups_38436 = sdiv_up64(binop_x_43381,
                                           segmap_group_sizze_38435)
    mem_43390 = opencl_alloc(self, bytes_43380, "mem_43390")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43390, np.int64(0),
                                                binop_p_mem_43387, np.int64(0),
                                                np.int64(1), N_29258,
                                                i32_res_29278)
    mem_43394 = opencl_alloc(self, bytes_43380, "mem_43394")
    if ((1 * (np.long(segmap_usable_groups_38436) * np.long(segmap_group_sizze_38435))) != 0):
      self.mainzisegmap_38411_var.set_args(self.global_failure,
                                           np.int64(N_29258),
                                           np.int64(i32_res_29278),
                                           np.float32(i32_res_29343), mem_43390,
                                           mem_43394)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38411_var,
                                 ((np.long(segmap_usable_groups_38436) * np.long(segmap_group_sizze_38435)),),
                                 (np.long(segmap_group_sizze_38435),))
      if synchronous:
        sync(self)
    eq_x_y_29351 = (np.int64(0) == i32_res_29278)
    p_and_eq_x_y_29352 = (cond_29275 and eq_x_y_29351)
    not_p_29353 = not(cond_29275)
    p_and_eq_x_y_29354 = (eq_x_y_29351 and not_p_29353)
    empty_slice_29355 = (p_and_eq_x_y_29352 or p_and_eq_x_y_29354)
    m_29356 = (i32_res_29278 - np.int64(1))
    zzero_leq_i_p_m_t_s_29357 = sle64(np.int64(0), m_29356)
    i_p_m_t_s_leq_w_29358 = slt64(m_29356, i32_res_29278)
    i_lte_j_29359 = sle64(np.int64(0), i32_res_29278)
    y_29360 = (zzero_leq_i_p_m_t_s_29357 and i_p_m_t_s_leq_w_29358)
    y_29361 = (i_lte_j_29359 and y_29360)
    ok_or_empty_29362 = (empty_slice_29355 or y_29361)
    empty_slice_29363 = (i32_res_29272 == np.int64(0))
    m_29364 = (i32_res_29272 - np.int64(1))
    zzero_leq_i_p_m_t_s_29365 = sle64(np.int64(0), m_29364)
    i_p_m_t_s_leq_w_29366 = slt64(m_29364, N_29258)
    i_lte_j_29367 = sle64(np.int64(0), i32_res_29272)
    y_29368 = (zzero_leq_i_p_m_t_s_29365 and i_p_m_t_s_leq_w_29366)
    y_29369 = (i_lte_j_29367 and y_29368)
    ok_or_empty_29370 = (empty_slice_29363 or y_29369)
    index_ok_29371 = (ok_or_empty_29362 and ok_or_empty_29370)
    index_certs_29372 = True
    assert index_ok_29371, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:43:15-23\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:20\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_29272,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_29278,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_29258,
                                                                                                                                                                               "]."))
    empty_slice_29374 = (i32_res_29278 == np.int64(0))
    ok_or_empty_29375 = (y_29361 or empty_slice_29374)
    index_ok_29376 = (ok_or_empty_29370 and ok_or_empty_29375)
    index_certs_29377 = True
    assert index_ok_29376, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:44:15-24\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:20\n" % ("Index [:",
                                                                                                                                                                               i32_res_29272,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_29258,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_29278,
                                                                                                                                                                               "]."))
    empty_slice_29379 = (m_29259 == np.int64(0))
    m_29380 = (m_29259 - np.int64(1))
    zzero_leq_i_p_m_t_s_29381 = sle64(np.int64(0), m_29380)
    i_p_m_t_s_leq_w_29382 = slt64(m_29380, m_29259)
    i_lte_j_29383 = sle64(np.int64(0), m_29259)
    y_29384 = (zzero_leq_i_p_m_t_s_29381 and i_p_m_t_s_leq_w_29382)
    y_29385 = (i_lte_j_29383 and y_29384)
    ok_or_empty_29386 = (empty_slice_29379 or y_29385)
    index_ok_29387 = (ok_or_empty_29370 and ok_or_empty_29386)
    index_certs_29388 = True
    assert index_ok_29387, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:45:15-28\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:20\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_29272,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_29259,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_29258,
                                                                                                                                                                               "]."))
    suff_outer_par_38442 = (self.sizes["main.suff_outer_par_6"] <= m_29259)
    segmap_group_sizze_38468 = self.sizes["main.segmap_group_size_38446"]
    max_num_groups_44645 = self.sizes["main.segmap_num_groups_38448"]
    num_groups_38469 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29259,
                                                            segmap_group_sizze_38468),
                                                  sext_i32_i64(max_num_groups_44645))))
    nest_sizze_38644 = (m_29259 * i32_res_29278)
    segmap_group_sizze_38645 = self.sizes["main.segmap_group_size_38493"]
    max_num_groups_44646 = self.sizes["main.segmap_num_groups_38495"]
    num_groups_38646 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38644,
                                                            segmap_group_sizze_38645),
                                                  sext_i32_i64(max_num_groups_44646))))
    suff_outer_par_38650 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_38644)
    y_38674 = (i32_res_29278 * i32_res_29278)
    comparatee_38675 = (m_29259 * y_38674)
    suff_outer_par_38676 = (self.sizes["main.suff_outer_par_8"] <= comparatee_38675)
    nest_sizze_38696 = (i32_res_29272 * comparatee_38675)
    segred_group_sizze_38697 = self.sizes["main.segred_group_size_38553"]
    max_num_groups_44647 = self.sizes["main.segred_num_groups_38555"]
    num_groups_38698 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38696,
                                                            segred_group_sizze_38697),
                                                  sext_i32_i64(max_num_groups_44647))))
    Tx_41535 = self.sizes["main.Tx_41533"]
    Ty_41536 = self.sizes["main.Ty_41534"]
    Ty_41537 = smin64(i32_res_29278, Ty_41536)
    Tx_41538 = smin64(i32_res_29278, Tx_41535)
    gridDim_zz_41541 = sdiv_up64(m_29259, np.int64(30))
    group_sizze_41544 = (Ty_41537 * Tx_41538)
    binop_x_43396 = (m_29259 * N_29260)
    bytes_43395 = (np.int64(4) * binop_x_43396)
    bytes_43440 = (np.int64(4) * comparatee_38675)
    bytes_43399 = (np.int64(4) * y_38674)
    binop_x_43543 = (i32_res_29278 * nest_sizze_38644)
    bytes_43541 = (np.int64(4) * binop_x_43543)
    bytes_43445 = (np.int64(4) * i32_res_29278)
    binop_x_43474 = (np.int64(30) * group_sizze_41544)
    bytes_43472 = (np.int64(4) * binop_x_43474)
    binop_x_44403 = (np.int64(4) * Ty_41537)
    binop_x_44404 = (Tx_41538 * binop_x_44403)
    sizze_44405 = (np.int64(30) * binop_x_44404)
    num_threads_44583 = (segmap_group_sizze_38468 * num_groups_38469)
    total_sizze_44584 = (bytes_43399 * num_threads_44583)
    num_threads_44585 = (segmap_group_sizze_38645 * num_groups_38646)
    total_sizze_44586 = (bytes_43445 * num_threads_44585)
    local_memory_capacity_44769 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44769)) and suff_outer_par_38442):
      mem_43397 = opencl_alloc(self, bytes_43395, "mem_43397")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43397, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_29260, m_29259)
      mem_43443 = opencl_alloc(self, bytes_43440, "mem_43443")
      mem_43401 = opencl_alloc(self, total_sizze_44584, "mem_43401")
      if ((1 * (np.long(num_groups_38469) * np.long(segmap_group_sizze_38468))) != 0):
        self.mainzisegmap_38444_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.int64(m_29259),
                                             np.int32(n_29263),
                                             np.int32(k2p2zq_29276),
                                             np.int64(i32_res_29278),
                                             np.int64(num_groups_38469),
                                             binop_p_mem_43387, mem_43394,
                                             mem_43397, mem_43401, mem_43443)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38444_var,
                                   ((np.long(num_groups_38469) * np.long(segmap_group_sizze_38468)),),
                                   (np.long(segmap_group_sizze_38468),))
        if synchronous:
          sync(self)
      mem_43397 = None
      mem_43401 = None
      mem_43544 = opencl_alloc(self, bytes_43541, "mem_43544")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43544, np.int64(0),
                                                  mem_43443, np.int64(0),
                                                  np.int64(1), m_29259,
                                                  (i32_res_29278 * i32_res_29278))
      mem_43443 = None
      defunc_3_map_res_mem_43546 = mem_43544
    else:
      local_memory_capacity_44768 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44768)) and suff_outer_par_38650):
        mem_43462 = opencl_alloc(self, bytes_43541, "mem_43462")
        mem_43446 = opencl_alloc(self, total_sizze_44586, "mem_43446")
        if ((1 * (np.long(num_groups_38646) * np.long(segmap_group_sizze_38645))) != 0):
          self.mainzisegmap_38490_var.set_args(self.global_failure,
                                               np.int64(m_29259),
                                               np.int64(N_29260),
                                               np.int32(n_29263),
                                               np.int32(k2p2zq_29276),
                                               np.int64(i32_res_29278),
                                               np.int64(num_groups_38646),
                                               images_mem_43378, mem_43390,
                                               mem_43394, mem_43446, mem_43462)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38490_var,
                                     ((np.long(num_groups_38646) * np.long(segmap_group_sizze_38645)),),
                                     (np.long(segmap_group_sizze_38645),))
          if synchronous:
            sync(self)
        mem_43446 = None
        mem_43538 = opencl_alloc(self, bytes_43541, "mem_43538")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43538, np.int64(0),
                                                    mem_43462, np.int64(0),
                                                    np.int64(1),
                                                    (m_29259 * i32_res_29278),
                                                    i32_res_29278)
        mem_43462 = None
        defunc_3_map_res_mem_43540 = mem_43538
      else:
        local_memory_capacity_44767 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44767)) and suff_outer_par_38676):
          mem_43465 = opencl_alloc(self, bytes_43395, "mem_43465")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43465, np.int64(0),
                                                      images_mem_43378,
                                                      np.int64(0), np.int64(1),
                                                      N_29260, m_29259)
          gridDim_x_41539 = sdiv_up64(i32_res_29278, Tx_41538)
          gridDim_y_41540 = sdiv_up64(i32_res_29278, Ty_41537)
          binop_x_41542 = (gridDim_y_41540 * gridDim_zz_41541)
          grid_sizze_41543 = (gridDim_x_41539 * binop_x_41542)
          count_shmem_41545 = sdiv_up64(np.int64(30), group_sizze_41544)
          mem_43525 = opencl_alloc(self, bytes_43541, "mem_43525")
          if ((1 * (np.long(grid_sizze_41543) * np.long(group_sizze_41544))) != 0):
            self.mainzisegmap_intragroup_41549_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_29259),
                                                            np.int32(n_29263),
                                                            np.int64(i32_res_29278),
                                                            np.int64(Ty_41537),
                                                            np.int64(Tx_41538),
                                                            np.int64(gridDim_x_41539),
                                                            np.int64(gridDim_y_41540),
                                                            np.int64(group_sizze_41544),
                                                            np.int64(count_shmem_41545),
                                                            mem_43390,
                                                            mem_43394,
                                                            mem_43465,
                                                            mem_43525)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_41549_var,
                                       ((np.long(grid_sizze_41543) * np.long(group_sizze_41544)),),
                                       (np.long(group_sizze_41544),))
            if synchronous:
              sync(self)
          mem_43465 = None
          defunc_3_map_res_mem_43534 = mem_43525
        else:
          mem_43528 = opencl_alloc(self, bytes_43380, "mem_43528")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43528, np.int64(0),
                                                      mem_43394, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_29278, N_29258)
          mem_43533 = opencl_alloc(self, bytes_43541, "mem_43533")
          if slt64((i32_res_29272 * np.int64(2)), segred_group_sizze_38697):
            segment_sizze_nonzzero_44707 = smax64(np.int64(1), i32_res_29272)
            num_threads_44708 = (num_groups_38698 * segred_group_sizze_38697)
            if ((1 * (np.long(num_groups_38698) * np.long(segred_group_sizze_38697))) != 0):
              self.mainzisegred_small_38559_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38697))),
                                                         np.int64(N_29258),
                                                         np.int64(m_29259),
                                                         np.int64(N_29260),
                                                         np.int64(i32_res_29272),
                                                         np.int64(i32_res_29278),
                                                         np.int64(num_groups_38698),
                                                         images_mem_43378,
                                                         binop_p_mem_43387,
                                                         mem_43528, mem_43533,
                                                         np.int64(segment_sizze_nonzzero_44707))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_38559_var,
                                         ((np.long(num_groups_38698) * np.long(segred_group_sizze_38697)),),
                                         (np.long(segred_group_sizze_38697),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44728 = sdiv_up64(num_groups_38698,
                                                 smax64(np.int64(1),
                                                        ((m_29259 * i32_res_29278) * i32_res_29278)))
            elements_per_thread_44729 = sdiv_up64(i32_res_29272,
                                                  (segred_group_sizze_38697 * groups_per_segment_44728))
            virt_num_groups_44730 = (groups_per_segment_44728 * ((m_29259 * i32_res_29278) * i32_res_29278))
            num_threads_44731 = (num_groups_38698 * segred_group_sizze_38697)
            threads_per_segment_44732 = (groups_per_segment_44728 * segred_group_sizze_38697)
            group_res_arr_mem_44733 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_38697 * virt_num_groups_44730)),
                                                   "group_res_arr_mem_44733")
            mainzicounter_mem_44735 = self.mainzicounter_mem_44735
            if ((1 * (np.long(num_groups_38698) * np.long(segred_group_sizze_38697))) != 0):
              self.mainzisegred_large_38559_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38697))),
                                                         np.int64(N_29258),
                                                         np.int64(N_29260),
                                                         np.int64(i32_res_29272),
                                                         np.int64(i32_res_29278),
                                                         np.int64(num_groups_38698),
                                                         images_mem_43378,
                                                         binop_p_mem_43387,
                                                         mem_43528, mem_43533,
                                                         np.int64(groups_per_segment_44728),
                                                         np.int64(elements_per_thread_44729),
                                                         np.int64(virt_num_groups_44730),
                                                         np.int64(threads_per_segment_44732),
                                                         group_res_arr_mem_44733,
                                                         mainzicounter_mem_44735)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_38559_var,
                                         ((np.long(num_groups_38698) * np.long(segred_group_sizze_38697)),),
                                         (np.long(segred_group_sizze_38697),))
              if synchronous:
                sync(self)
          mem_43528 = None
          defunc_3_map_res_mem_43534 = mem_43533
        defunc_3_map_res_mem_43540 = defunc_3_map_res_mem_43534
      defunc_3_map_res_mem_43546 = defunc_3_map_res_mem_43540
    m_29409 = (np.int32(2) * k2p2zq_29276)
    nm_29410 = (k2p2zq_29276 * m_29409)
    i32_res_29411 = sext_i32_i64(nm_29410)
    bounds_invalid_upwards_29412 = slt64(i32_res_29411, np.int64(0))
    valid_29413 = not(bounds_invalid_upwards_29412)
    range_valid_c_29414 = True
    assert valid_29413, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:20\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_29411,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_29419 = (m_29409 == np.int32(0))
    nonzzero_29420 = not(zzero_29419)
    nonzzero_cert_29421 = True
    assert nonzzero_29420, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:20\n" % ("division by zero",))
    loop_nonempty_29422 = slt32(np.int32(0), k2p2zq_29276)
    loop_not_taken_29423 = not(loop_nonempty_29422)
    protect_assert_disj_29424 = (nonzzero_29420 or loop_not_taken_29423)
    nonzzero_cert_29425 = True
    assert protect_assert_disj_29424, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:55:35-50\n   #4  bfastfinal.fut:192:5-58\n   #5  bfastfinal.fut:187:1-193:20\n" % ("division by zero",))
    i32_res_29426 = sext_i32_i64(m_29409)
    x_29427 = (i32_res_29278 * i32_res_29426)
    dim_ok_29428 = (x_29427 == i32_res_29411)
    dim_ok_cert_29429 = True
    assert dim_ok_29428, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:20\n" % ("new shape has different number of elements than old shape",))
    j_m_i_29430 = (i32_res_29426 - i32_res_29278)
    empty_slice_29431 = (j_m_i_29430 == np.int64(0))
    m_29432 = (j_m_i_29430 - np.int64(1))
    i_p_m_t_s_29433 = (i32_res_29278 + m_29432)
    zzero_leq_i_p_m_t_s_29434 = sle64(np.int64(0), i_p_m_t_s_29433)
    i_p_m_t_s_leq_w_29435 = slt64(i_p_m_t_s_29433, i32_res_29426)
    i_lte_j_29436 = sle64(i32_res_29278, i32_res_29426)
    y_29437 = (i_lte_j_29359 and i_p_m_t_s_leq_w_29435)
    y_29438 = (zzero_leq_i_p_m_t_s_29434 and y_29437)
    y_29439 = (i_lte_j_29436 and y_29438)
    forwards_ok_29440 = (i_lte_j_29359 and y_29439)
    ok_or_empty_29441 = (empty_slice_29431 or forwards_ok_29440)
    index_ok_29442 = (ok_or_empty_29375 and ok_or_empty_29441)
    index_certs_29443 = True
    assert index_ok_29442, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:55:35-50\n   #2  bfastfinal.fut:192:5-58\n   #3  bfastfinal.fut:187:1-193:20\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_29278,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_29278,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_29426,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_29278,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_29426,
                                                                                                                                                                                                                   "]."))
    dim_match_29444 = (i32_res_29278 == j_m_i_29430)
    empty_or_match_cert_29445 = True
    assert dim_match_29444, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:55:35-50\n   #2  bfastfinal.fut:192:5-58\n   #3  bfastfinal.fut:187:1-193:20\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_29278,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_29430,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_29278,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_29278,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_38912 = self.max_group_size
    fits_38913 = sle64(i32_res_29411, max_group_sizze_38912)
    suff_intra_par_38911 = (self.sizes["main.suff_intra_par_11"] <= i32_res_29411)
    intra_suff_and_fits_38914 = (suff_intra_par_38911 and fits_38913)
    nest_sizze_39398 = (m_29259 * i32_res_29411)
    segmap_group_sizze_39399 = self.sizes["main.segmap_group_size_39358"]
    suff_intra_par_39426 = (self.sizes["main.suff_intra_par_13"] <= i32_res_29411)
    intra_suff_and_fits_39427 = (fits_38913 and suff_intra_par_39426)
    segmap_group_sizze_39463 = self.sizes["main.segmap_group_size_39264"]
    segmap_group_sizze_39479 = self.sizes["main.segmap_group_size_39197"]
    segmap_group_sizze_39513 = self.sizes["main.segmap_group_size_39143"]
    y_39523 = (i32_res_29278 * j_m_i_29430)
    nest_sizze_39524 = (m_29259 * y_39523)
    segmap_group_sizze_39525 = self.sizes["main.segmap_group_size_38978"]
    segmap_usable_groups_39464 = sdiv_up_safe64(m_29259,
                                                segmap_group_sizze_39463)
    segmap_usable_groups_39480 = sdiv_up_safe64(nest_sizze_39398,
                                                segmap_group_sizze_39479)
    segmap_usable_groups_39514 = sdiv_up_safe64(nest_sizze_39398,
                                                segmap_group_sizze_39513)
    bytes_43549 = (np.int64(4) * i32_res_29411)
    bytes_43572 = (np.int64(4) * nest_sizze_39398)
    binop_x_43623 = (j_m_i_29430 * nest_sizze_38644)
    bytes_43621 = (np.int64(4) * binop_x_43623)
    local_memory_capacity_44832 = self.max_local_memory
    if (sle64((bytes_43549 + bytes_43549),
              sext_i32_i64(local_memory_capacity_44832)) and intra_suff_and_fits_38914):
      mem_43570 = opencl_alloc(self, bytes_43541, "mem_43570")
      if ((1 * (np.long(m_29259) * np.long(i32_res_29411))) != 0):
        self.mainzisegmap_intragroup_38794_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43549)),
                                                        cl.LocalMemory(np.long(bytes_43549)),
                                                        np.int32(k2p2zq_29276),
                                                        np.int64(i32_res_29278),
                                                        np.int32(m_29409),
                                                        np.int64(i32_res_29411),
                                                        np.int64(i32_res_29426),
                                                        defunc_3_map_res_mem_43546,
                                                        mem_43570)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_38794_var,
                                   ((np.long(m_29259) * np.long(i32_res_29411)),),
                                   (np.long(i32_res_29411),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43625 = mem_43570
    else:
      segmap_usable_groups_39400 = sdiv_up64(nest_sizze_39398,
                                             segmap_group_sizze_39399)
      mem_43574 = opencl_alloc(self, bytes_43572, "mem_43574")
      if ((1 * (np.long(segmap_usable_groups_39400) * np.long(segmap_group_sizze_39399))) != 0):
        self.mainzisegmap_39355_var.set_args(self.global_failure,
                                             np.int64(m_29259),
                                             np.int32(k2p2zq_29276),
                                             np.int64(i32_res_29278),
                                             np.int32(m_29409),
                                             np.int64(i32_res_29411),
                                             defunc_3_map_res_mem_43546,
                                             mem_43574)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39355_var,
                                   ((np.long(segmap_usable_groups_39400) * np.long(segmap_group_sizze_39399)),),
                                   (np.long(segmap_group_sizze_39399),))
        if synchronous:
          sync(self)
      ctx_param_ext_43575 = m_29259
      ctx_param_ext_43576 = i32_res_29411
      ctx_param_ext_43577 = np.int64(0)
      ctx_param_ext_43578 = i32_res_29411
      ctx_param_ext_43579 = m_29259
      ctx_param_ext_43580 = np.int64(1)
      ctx_param_ext_43581 = i32_res_29411
      mem_param_43582 = mem_43574
      i_39416 = np.int32(0)
      one_45803 = np.int32(1)
      for counter_45802 in range(k2p2zq_29276):
        i32_res_39418 = sext_i32_i64(i_39416)
        local_memory_capacity_44792 = self.max_local_memory
        if intra_suff_and_fits_39427:
          gauss_jordan_res_ixfn_43604 = m_29259
        else:
          gauss_jordan_res_ixfn_43604 = ctx_param_ext_43579
        local_memory_capacity_44793 = self.max_local_memory
        if intra_suff_and_fits_39427:
          gauss_jordan_res_ixfn_43605 = i32_res_29411
        else:
          gauss_jordan_res_ixfn_43605 = ctx_param_ext_43581
        local_memory_capacity_44794 = self.max_local_memory
        if intra_suff_and_fits_39427:
          gauss_jordan_res_ixfn_43606 = m_29259
        else:
          gauss_jordan_res_ixfn_43606 = ctx_param_ext_43575
        local_memory_capacity_44795 = self.max_local_memory
        if intra_suff_and_fits_39427:
          gauss_jordan_res_ixfn_43607 = i32_res_29411
        else:
          gauss_jordan_res_ixfn_43607 = ctx_param_ext_43576
        local_memory_capacity_44796 = self.max_local_memory
        if intra_suff_and_fits_39427:
          gauss_jordan_res_ixfn_43608 = i32_res_29411
        else:
          gauss_jordan_res_ixfn_43608 = ctx_param_ext_43578
        local_memory_capacity_44797 = self.max_local_memory
        if intra_suff_and_fits_39427:
          gauss_jordan_res_ixfn_43609 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43609 = ctx_param_ext_43580
        local_memory_capacity_44798 = self.max_local_memory
        if intra_suff_and_fits_39427:
          gauss_jordan_res_ixfn_43610 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43610 = ctx_param_ext_43577
        local_memory_capacity_44826 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44826)) and sle64(bytes_43549,
                                                                        sext_i32_i64(local_memory_capacity_44826))) and intra_suff_and_fits_39427):
          mem_43587 = opencl_alloc(self, bytes_43572, "mem_43587")
          group_sizze_44802 = self.sizes["main.group_size_44802"]
          num_groups_44803 = sdiv_up64((m_29259 * i32_res_29411),
                                       group_sizze_44802)
          if ((1 * (np.long(num_groups_44803) * np.long(group_sizze_44802))) != 0):
            self.mainzicopy_44799_var.set_args(np.int64(m_29259),
                                               np.int64(i32_res_29411),
                                               np.int64(ctx_param_ext_43577),
                                               np.int64(ctx_param_ext_43578),
                                               np.int64(ctx_param_ext_43580),
                                               mem_param_43582, mem_43587)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_44799_var,
                                       ((np.long(num_groups_44803) * np.long(group_sizze_44802)),),
                                       (np.long(group_sizze_44802),))
            if synchronous:
              sync(self)
          mem_43595 = opencl_alloc(self, bytes_43572, "mem_43595")
          if ((1 * (np.long(m_29259) * np.long(i32_res_29411))) != 0):
            self.mainzisegmap_intragroup_39021_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_43549)),
                                                            np.int64(m_29259),
                                                            np.int32(k2p2zq_29276),
                                                            np.int32(m_29409),
                                                            np.int64(i32_res_29411),
                                                            np.int32(i_39416),
                                                            np.int64(i32_res_39418),
                                                            np.int64(ctx_param_ext_43577),
                                                            np.int64(ctx_param_ext_43578),
                                                            np.int64(ctx_param_ext_43580),
                                                            mem_param_43582,
                                                            mem_43587,
                                                            mem_43595)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_39021_var,
                                       ((np.long(m_29259) * np.long(i32_res_29411)),),
                                       (np.long(i32_res_29411),))
            if synchronous:
              sync(self)
          mem_43587 = None
          gauss_jordan_res_mem_43611 = mem_43595
        else:
          mem_43598 = opencl_alloc(self, m_29259, "mem_43598")
          if ((1 * (np.long(segmap_usable_groups_39464) * np.long(segmap_group_sizze_39463))) != 0):
            self.mainzisegmap_39262_var.set_args(self.global_failure,
                                                 np.int64(m_29259),
                                                 np.int64(i32_res_39418),
                                                 np.int64(ctx_param_ext_43577),
                                                 np.int64(ctx_param_ext_43578),
                                                 np.int64(ctx_param_ext_43580),
                                                 mem_param_43582, mem_43598)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39262_var,
                                       ((np.long(segmap_usable_groups_39464) * np.long(segmap_group_sizze_39463)),),
                                       (np.long(segmap_group_sizze_39463),))
            if synchronous:
              sync(self)
          mem_43602 = opencl_alloc(self, bytes_43572, "mem_43602")
          if ((1 * (np.long(segmap_usable_groups_39480) * np.long(segmap_group_sizze_39479))) != 0):
            self.mainzisegmap_39194_var.set_args(self.global_failure,
                                                 np.int64(m_29259),
                                                 np.int32(k2p2zq_29276),
                                                 np.int32(m_29409),
                                                 np.int64(i32_res_29411),
                                                 np.int32(i_39416),
                                                 np.int64(i32_res_39418),
                                                 np.int64(ctx_param_ext_43577),
                                                 np.int64(ctx_param_ext_43578),
                                                 np.int64(ctx_param_ext_43580),
                                                 mem_param_43582, mem_43598,
                                                 mem_43602)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39194_var,
                                       ((np.long(segmap_usable_groups_39480) * np.long(segmap_group_sizze_39479)),),
                                       (np.long(segmap_group_sizze_39479),))
            if synchronous:
              sync(self)
          mem_43598 = None
          if ((1 * (np.long(segmap_usable_groups_39514) * np.long(segmap_group_sizze_39513))) != 0):
            self.mainzisegmap_39140_var.set_args(self.global_failure,
                                                 np.int64(m_29259),
                                                 np.int64(i32_res_29411),
                                                 np.int64(ctx_param_ext_43577),
                                                 np.int64(ctx_param_ext_43578),
                                                 np.int64(ctx_param_ext_43580),
                                                 mem_param_43582, mem_43602)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39140_var,
                                       ((np.long(segmap_usable_groups_39514) * np.long(segmap_group_sizze_39513)),),
                                       (np.long(segmap_group_sizze_39513),))
            if synchronous:
              sync(self)
          mem_43602 = None
          gauss_jordan_res_mem_43611 = mem_param_43582
        ctx_param_ext_tmp_44783 = gauss_jordan_res_ixfn_43606
        ctx_param_ext_tmp_44784 = gauss_jordan_res_ixfn_43607
        ctx_param_ext_tmp_44785 = gauss_jordan_res_ixfn_43610
        ctx_param_ext_tmp_44786 = gauss_jordan_res_ixfn_43608
        ctx_param_ext_tmp_44787 = gauss_jordan_res_ixfn_43604
        ctx_param_ext_tmp_44788 = gauss_jordan_res_ixfn_43609
        ctx_param_ext_tmp_44789 = gauss_jordan_res_ixfn_43605
        mem_param_tmp_44790 = gauss_jordan_res_mem_43611
        ctx_param_ext_43575 = ctx_param_ext_tmp_44783
        ctx_param_ext_43576 = ctx_param_ext_tmp_44784
        ctx_param_ext_43577 = ctx_param_ext_tmp_44785
        ctx_param_ext_43578 = ctx_param_ext_tmp_44786
        ctx_param_ext_43579 = ctx_param_ext_tmp_44787
        ctx_param_ext_43580 = ctx_param_ext_tmp_44788
        ctx_param_ext_43581 = ctx_param_ext_tmp_44789
        mem_param_43582 = mem_param_tmp_44790
        i_39416 += one_45803
      gauss_jordan_res_r_ixfn_43612 = ctx_param_ext_43575
      gauss_jordan_res_r_ixfn_43613 = ctx_param_ext_43576
      gauss_jordan_res_r_ixfn_43614 = ctx_param_ext_43577
      gauss_jordan_res_r_ixfn_43615 = ctx_param_ext_43578
      gauss_jordan_res_r_ixfn_43616 = ctx_param_ext_43579
      gauss_jordan_res_r_ixfn_43617 = ctx_param_ext_43580
      gauss_jordan_res_r_ixfn_43618 = ctx_param_ext_43581
      gauss_jordan_res_r_mem_43619 = mem_param_43582
      mem_43574 = None
      segmap_usable_groups_39526 = sdiv_up64(nest_sizze_39524,
                                             segmap_group_sizze_39525)
      mem_43624 = opencl_alloc(self, bytes_43621, "mem_43624")
      if ((1 * (np.long(segmap_usable_groups_39526) * np.long(segmap_group_sizze_39525))) != 0):
        self.mainzisegmap_38974_var.set_args(self.global_failure,
                                             np.int64(m_29259),
                                             np.int64(i32_res_29278),
                                             np.int64(i32_res_29411),
                                             np.int64(i32_res_29426),
                                             np.int64(x_29427),
                                             np.int64(j_m_i_29430),
                                             np.int64(gauss_jordan_res_r_ixfn_43614),
                                             np.int64(gauss_jordan_res_r_ixfn_43615),
                                             np.int64(gauss_jordan_res_r_ixfn_43617),
                                             gauss_jordan_res_r_mem_43619,
                                             mem_43624)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38974_var,
                                   ((np.long(segmap_usable_groups_39526) * np.long(segmap_group_sizze_39525)),),
                                   (np.long(segmap_group_sizze_39525),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43619 = None
      defunc_3_map_res_mem_43625 = mem_43624
    defunc_3_map_res_mem_43546 = None
    suff_outer_par_39534 = (self.sizes["main.suff_outer_par_16"] <= m_29259)
    segmap_group_sizze_39556 = self.sizes["main.segmap_group_size_39538"]
    max_num_groups_44833 = self.sizes["main.segmap_num_groups_39540"]
    num_groups_39557 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29259,
                                                            segmap_group_sizze_39556),
                                                  sext_i32_i64(max_num_groups_44833))))
    suff_outer_par_39641 = (self.sizes["main.suff_outer_par_17"] <= nest_sizze_38644)
    nest_sizze_39657 = (i32_res_29272 * nest_sizze_38644)
    segred_group_sizze_39658 = self.sizes["main.segred_group_size_39600"]
    max_num_groups_44834 = self.sizes["main.segred_num_groups_39602"]
    num_groups_39659 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39657,
                                                            segred_group_sizze_39658),
                                                  sext_i32_i64(max_num_groups_44834))))
    Ty_41683 = self.sizes["main.Ty_41680"]
    Ry_41684 = self.sizes["main.Ry_41682"]
    Tx_41685 = self.sizes["main.Tx_41679"]
    Rx_41686 = self.sizes["main.Rx_41681"]
    Tk_41687 = self.sizes["main.Tk_41678"]
    TxRx_41690 = (Tx_41685 * Rx_41686)
    TyRy_41691 = (Ty_41683 * Ry_41684)
    a_loc_szz_41693 = (Tk_41687 * TyRy_41691)
    binop_x_41694 = (Tx_41685 * Tk_41687)
    b_loc_szz_41695 = (Rx_41686 * binop_x_41694)
    group_sizze_41699 = (Ty_41683 * Tx_41685)
    bytes_43644 = (np.int64(4) * nest_sizze_38644)
    binop_x_43658 = (Ry_41684 * group_sizze_41699)
    binop_x_43659 = (Rx_41686 * binop_x_43658)
    bytes_43656 = (np.int64(4) * binop_x_43659)
    binop_x_43650 = (Ry_41684 * Rx_41686)
    bytes_43649 = (np.int64(4) * binop_x_43650)
    bytes_43661 = (np.int64(4) * a_loc_szz_41693)
    bytes_43663 = (np.int64(4) * b_loc_szz_41695)
    bytes_43732 = (np.int64(4) * binop_x_43658)
    binop_x_43738 = (Rx_41686 * group_sizze_41699)
    bytes_43736 = (np.int64(4) * binop_x_43738)
    bytes_43724 = (np.int64(4) * Ry_41684)
    bytes_43726 = (np.int64(4) * Rx_41686)
    binop_x_44420 = (np.int64(4) * Ty_41683)
    binop_x_44421 = (Tx_41685 * binop_x_44420)
    binop_x_44422 = (Ry_41684 * binop_x_44421)
    sizze_44423 = (Rx_41686 * binop_x_44422)
    num_threads_44596 = (segmap_group_sizze_39556 * num_groups_39557)
    total_sizze_44597 = (bytes_43445 * num_threads_44596)
    local_memory_capacity_44964 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44964)) and suff_outer_par_39534):
      mem_43628 = opencl_alloc(self, bytes_43395, "mem_43628")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43628, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_29260, m_29259)
      mem_43646 = opencl_alloc(self, bytes_43644, "mem_43646")
      mem_43631 = opencl_alloc(self, total_sizze_44597, "mem_43631")
      if ((1 * (np.long(num_groups_39557) * np.long(segmap_group_sizze_39556))) != 0):
        self.mainzisegmap_39536_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.int64(m_29259),
                                             np.int32(n_29263),
                                             np.int32(k2p2zq_29276),
                                             np.int64(i32_res_29278),
                                             np.int64(num_groups_39557),
                                             binop_p_mem_43387, mem_43628,
                                             mem_43631, mem_43646)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39536_var,
                                   ((np.long(num_groups_39557) * np.long(segmap_group_sizze_39556)),),
                                   (np.long(segmap_group_sizze_39556),))
        if synchronous:
          sync(self)
      mem_43628 = None
      mem_43631 = None
      mem_43844 = opencl_alloc(self, bytes_43644, "mem_43844")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43844, np.int64(0),
                                                  mem_43646, np.int64(0),
                                                  np.int64(1), m_29259,
                                                  i32_res_29278)
      mem_43646 = None
      defunc_3_map_res_mem_43846 = mem_43844
    else:
      local_memory_capacity_44963 = self.max_local_memory
      if (sle64((bytes_43661 + bytes_43663),
                sext_i32_i64(local_memory_capacity_44963)) and suff_outer_par_39641):
        tk_div_tx_41688 = sdiv_up64(Tk_41687, Tx_41685)
        tk_div_ty_41689 = sdiv_up64(Tk_41687, Ty_41683)
        gridDim_x_41696 = sdiv_up64(i32_res_29278, TxRx_41690)
        gridDim_y_41697 = sdiv_up64(m_29259, TyRy_41691)
        grid_sizze_41698 = (gridDim_x_41696 * gridDim_y_41697)
        full_tiles_41727 = squot64(i32_res_29272, Tk_41687)
        kk_41934 = (Tk_41687 * full_tiles_41727)
        mem_43836 = opencl_alloc(self, bytes_43644, "mem_43836")
        if ((1 * (np.long(grid_sizze_41698) * np.long(group_sizze_41699))) != 0):
          self.mainzisegmap_intragroup_41702_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43663)),
                                                          cl.LocalMemory(np.long(bytes_43661)),
                                                          np.int64(m_29259),
                                                          np.int64(N_29260),
                                                          np.int64(i32_res_29272),
                                                          np.int64(i32_res_29278),
                                                          np.int64(gridDim_x_41696),
                                                          np.int64(full_tiles_41727),
                                                          np.int64(kk_41934),
                                                          images_mem_43378,
                                                          mem_43390, mem_43836)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41702_var,
                                     ((np.long(grid_sizze_41698) * np.long(group_sizze_41699)),),
                                     (np.long(group_sizze_41699),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43841 = mem_43836
      else:
        mem_43840 = opencl_alloc(self, bytes_43644, "mem_43840")
        if slt64((i32_res_29272 * np.int64(2)), segred_group_sizze_39658):
          segment_sizze_nonzzero_44903 = smax64(np.int64(1), i32_res_29272)
          num_threads_44904 = (num_groups_39659 * segred_group_sizze_39658)
          if ((1 * (np.long(num_groups_39659) * np.long(segred_group_sizze_39658))) != 0):
            self.mainzisegred_small_39606_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39658))),
                                                       np.int64(N_29258),
                                                       np.int64(m_29259),
                                                       np.int64(N_29260),
                                                       np.int64(i32_res_29272),
                                                       np.int64(i32_res_29278),
                                                       np.int64(num_groups_39659),
                                                       images_mem_43378,
                                                       binop_p_mem_43387,
                                                       mem_43840,
                                                       np.int64(segment_sizze_nonzzero_44903))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39606_var,
                                       ((np.long(num_groups_39659) * np.long(segred_group_sizze_39658)),),
                                       (np.long(segred_group_sizze_39658),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44924 = sdiv_up64(num_groups_39659,
                                               smax64(np.int64(1),
                                                      (m_29259 * i32_res_29278)))
          elements_per_thread_44925 = sdiv_up64(i32_res_29272,
                                                (segred_group_sizze_39658 * groups_per_segment_44924))
          virt_num_groups_44926 = (groups_per_segment_44924 * (m_29259 * i32_res_29278))
          num_threads_44927 = (num_groups_39659 * segred_group_sizze_39658)
          threads_per_segment_44928 = (groups_per_segment_44924 * segred_group_sizze_39658)
          group_res_arr_mem_44929 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39658 * virt_num_groups_44926)),
                                                 "group_res_arr_mem_44929")
          mainzicounter_mem_44931 = self.mainzicounter_mem_44931
          if ((1 * (np.long(num_groups_39659) * np.long(segred_group_sizze_39658))) != 0):
            self.mainzisegred_large_39606_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39658))),
                                                       np.int64(N_29258),
                                                       np.int64(N_29260),
                                                       np.int64(i32_res_29272),
                                                       np.int64(i32_res_29278),
                                                       np.int64(num_groups_39659),
                                                       images_mem_43378,
                                                       binop_p_mem_43387,
                                                       mem_43840,
                                                       np.int64(groups_per_segment_44924),
                                                       np.int64(elements_per_thread_44925),
                                                       np.int64(virt_num_groups_44926),
                                                       np.int64(threads_per_segment_44928),
                                                       group_res_arr_mem_44929,
                                                       mainzicounter_mem_44931)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39606_var,
                                       ((np.long(num_groups_39659) * np.long(segred_group_sizze_39658)),),
                                       (np.long(segred_group_sizze_39658),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43841 = mem_43840
      defunc_3_map_res_mem_43846 = defunc_3_map_res_mem_43841
    binop_p_mem_43387 = None
    mem_43390 = None
    suff_outer_par_39675 = (self.sizes["main.suff_outer_par_18"] <= m_29259)
    segmap_group_sizze_39696 = self.sizes["main.segmap_group_size_39679"]
    max_num_groups_44965 = self.sizes["main.segmap_num_groups_39681"]
    num_groups_39697 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29259,
                                                            segmap_group_sizze_39696),
                                                  sext_i32_i64(max_num_groups_44965))))
    suff_outer_par_39776 = (self.sizes["main.suff_outer_par_19"] <= nest_sizze_38644)
    segred_group_sizze_39791 = self.sizes["main.segred_group_size_39737"]
    max_num_groups_44966 = self.sizes["main.segred_num_groups_39739"]
    num_groups_39792 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43543,
                                                            segred_group_sizze_39791),
                                                  sext_i32_i64(max_num_groups_44966))))
    tile_sizze_42146 = self.sizes["main.tile_size_42145"]
    group_sizze_42147 = (tile_sizze_42146 * tile_sizze_42146)
    bytes_43878 = (np.int64(4) * group_sizze_42147)
    binop_x_44436 = (np.int64(4) * tile_sizze_42146)
    sizze_44437 = (tile_sizze_42146 * binop_x_44436)
    num_threads_44600 = (segmap_group_sizze_39696 * num_groups_39697)
    total_sizze_44601 = (bytes_43445 * num_threads_44600)
    local_memory_capacity_45052 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45052)) and suff_outer_par_39675):
      mem_43850 = opencl_alloc(self, bytes_43440, "mem_43850")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43850, np.int64(0),
                                                  defunc_3_map_res_mem_43625,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_29278 * i32_res_29278),
                                                  m_29259)
      mem_43853 = opencl_alloc(self, bytes_43644, "mem_43853")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43853, np.int64(0),
                                                  defunc_3_map_res_mem_43846,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_29278, m_29259)
      mem_43871 = opencl_alloc(self, bytes_43644, "mem_43871")
      mem_43856 = opencl_alloc(self, total_sizze_44601, "mem_43856")
      if ((1 * (np.long(num_groups_39697) * np.long(segmap_group_sizze_39696))) != 0):
        self.mainzisegmap_39677_var.set_args(self.global_failure,
                                             np.int64(m_29259),
                                             np.int32(k2p2zq_29276),
                                             np.int64(i32_res_29278),
                                             np.int64(num_groups_39697),
                                             mem_43850, mem_43853, mem_43856,
                                             mem_43871)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39677_var,
                                   ((np.long(num_groups_39697) * np.long(segmap_group_sizze_39696)),),
                                   (np.long(segmap_group_sizze_39696),))
        if synchronous:
          sync(self)
      mem_43850 = None
      mem_43853 = None
      mem_43856 = None
      mem_43910 = opencl_alloc(self, bytes_43644, "mem_43910")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43910, np.int64(0),
                                                  mem_43871, np.int64(0),
                                                  np.int64(1), m_29259,
                                                  i32_res_29278)
      mem_43871 = None
      defunc_4_map_res_mem_43912 = mem_43910
    else:
      local_memory_capacity_45051 = self.max_local_memory
      if (sle64((bytes_43878 + bytes_43878),
                sext_i32_i64(local_memory_capacity_45051)) and suff_outer_par_39776):
        mem_43875 = opencl_alloc(self, bytes_43541, "mem_43875")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43875, np.int64(0),
                                                    defunc_3_map_res_mem_43625,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_29278,
                                                    (m_29259 * i32_res_29278))
        num_groups_x_42148 = sdiv_up64(m_29259, tile_sizze_42146)
        num_groups_y_42149 = sdiv_up64(i32_res_29278, tile_sizze_42146)
        num_groups_top_42150 = (num_groups_x_42148 * num_groups_y_42149)
        num_whole_tiles_42167 = squot64(i32_res_29278, tile_sizze_42146)
        residual_input_42294 = srem64(i32_res_29278, tile_sizze_42146)
        cond_42295 = (residual_input_42294 == np.int64(0))
        mem_43902 = opencl_alloc(self, bytes_43644, "mem_43902")
        if ((1 * (np.long(num_groups_top_42150) * np.long(group_sizze_42147))) != 0):
          self.mainzisegmap_intragroup_42151_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43878)),
                                                          cl.LocalMemory(np.long(bytes_43878)),
                                                          np.int64(m_29259),
                                                          np.int64(i32_res_29278),
                                                          np.int64(num_groups_y_42149),
                                                          np.int64(num_whole_tiles_42167),
                                                          np.int64(residual_input_42294),
                                                          np.byte(cond_42295),
                                                          defunc_3_map_res_mem_43846,
                                                          mem_43875, mem_43902)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42151_var,
                                     ((np.long(num_groups_top_42150) * np.long(group_sizze_42147)),),
                                     (np.long(group_sizze_42147),))
          if synchronous:
            sync(self)
        mem_43875 = None
        defunc_4_map_res_mem_43907 = mem_43902
      else:
        mem_43906 = opencl_alloc(self, bytes_43644, "mem_43906")
        if slt64((i32_res_29278 * np.int64(2)), segred_group_sizze_39791):
          segment_sizze_nonzzero_44991 = smax64(np.int64(1), i32_res_29278)
          num_threads_44992 = (num_groups_39792 * segred_group_sizze_39791)
          if ((1 * (np.long(num_groups_39792) * np.long(segred_group_sizze_39791))) != 0):
            self.mainzisegred_small_39743_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39791))),
                                                       np.int64(m_29259),
                                                       np.int64(i32_res_29278),
                                                       np.int64(num_groups_39792),
                                                       defunc_3_map_res_mem_43625,
                                                       defunc_3_map_res_mem_43846,
                                                       mem_43906,
                                                       np.int64(segment_sizze_nonzzero_44991))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39743_var,
                                       ((np.long(num_groups_39792) * np.long(segred_group_sizze_39791)),),
                                       (np.long(segred_group_sizze_39791),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45012 = sdiv_up64(num_groups_39792,
                                               smax64(np.int64(1),
                                                      (m_29259 * i32_res_29278)))
          elements_per_thread_45013 = sdiv_up64(i32_res_29278,
                                                (segred_group_sizze_39791 * groups_per_segment_45012))
          virt_num_groups_45014 = (groups_per_segment_45012 * (m_29259 * i32_res_29278))
          num_threads_45015 = (num_groups_39792 * segred_group_sizze_39791)
          threads_per_segment_45016 = (groups_per_segment_45012 * segred_group_sizze_39791)
          group_res_arr_mem_45017 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39791 * virt_num_groups_45014)),
                                                 "group_res_arr_mem_45017")
          mainzicounter_mem_45019 = self.mainzicounter_mem_45019
          if ((1 * (np.long(num_groups_39792) * np.long(segred_group_sizze_39791))) != 0):
            self.mainzisegred_large_39743_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39791))),
                                                       np.int64(i32_res_29278),
                                                       np.int64(num_groups_39792),
                                                       defunc_3_map_res_mem_43625,
                                                       defunc_3_map_res_mem_43846,
                                                       mem_43906,
                                                       np.int64(groups_per_segment_45012),
                                                       np.int64(elements_per_thread_45013),
                                                       np.int64(virt_num_groups_45014),
                                                       np.int64(threads_per_segment_45016),
                                                       group_res_arr_mem_45017,
                                                       mainzicounter_mem_45019)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39743_var,
                                       ((np.long(num_groups_39792) * np.long(segred_group_sizze_39791)),),
                                       (np.long(segred_group_sizze_39791),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43907 = mem_43906
      defunc_4_map_res_mem_43912 = defunc_4_map_res_mem_43907
    defunc_3_map_res_mem_43625 = None
    defunc_3_map_res_mem_43846 = None
    suff_outer_par_39807 = (self.sizes["main.suff_outer_par_20"] <= m_29259)
    segmap_group_sizze_39827 = self.sizes["main.segmap_group_size_39811"]
    max_num_groups_45053 = self.sizes["main.segmap_num_groups_39813"]
    num_groups_39828 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29259,
                                                            segmap_group_sizze_39827),
                                                  sext_i32_i64(max_num_groups_45053))))
    comparatee_39903 = (N_29258 * m_29259)
    suff_outer_par_39904 = (self.sizes["main.suff_outer_par_21"] <= comparatee_39903)
    nest_sizze_39918 = (i32_res_29278 * comparatee_39903)
    segred_group_sizze_39919 = self.sizes["main.segred_group_size_39867"]
    max_num_groups_45054 = self.sizes["main.segred_num_groups_39869"]
    num_groups_39920 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39918,
                                                            segred_group_sizze_39919),
                                                  sext_i32_i64(max_num_groups_45054))))
    Ty_42424 = self.sizes["main.Ty_42421"]
    Ry_42425 = self.sizes["main.Ry_42423"]
    Tx_42426 = self.sizes["main.Tx_42420"]
    Rx_42427 = self.sizes["main.Rx_42422"]
    Tk_42428 = self.sizes["main.Tk_42419"]
    TxRx_42431 = (Tx_42426 * Rx_42427)
    TyRy_42432 = (Ty_42424 * Ry_42425)
    a_loc_szz_42434 = (Tk_42428 * TyRy_42432)
    binop_x_42435 = (Tx_42426 * Tk_42428)
    b_loc_szz_42436 = (Rx_42427 * binop_x_42435)
    group_sizze_42440 = (Ty_42424 * Tx_42426)
    bytes_43931 = (np.int64(4) * comparatee_39903)
    bytes_43917 = (np.int64(4) * N_29258)
    binop_x_43948 = (Ry_42425 * group_sizze_42440)
    binop_x_43949 = (Rx_42427 * binop_x_43948)
    bytes_43946 = (np.int64(4) * binop_x_43949)
    binop_x_43940 = (Ry_42425 * Rx_42427)
    bytes_43939 = (np.int64(4) * binop_x_43940)
    bytes_43951 = (np.int64(4) * a_loc_szz_42434)
    bytes_43953 = (np.int64(4) * b_loc_szz_42436)
    bytes_44022 = (np.int64(4) * binop_x_43948)
    binop_x_44028 = (Rx_42427 * group_sizze_42440)
    bytes_44026 = (np.int64(4) * binop_x_44028)
    bytes_44014 = (np.int64(4) * Ry_42425)
    bytes_44016 = (np.int64(4) * Rx_42427)
    binop_x_44450 = (np.int64(4) * Ty_42424)
    binop_x_44451 = (Tx_42426 * binop_x_44450)
    binop_x_44452 = (Ry_42425 * binop_x_44451)
    sizze_44453 = (Rx_42427 * binop_x_44452)
    num_threads_44604 = (segmap_group_sizze_39827 * num_groups_39828)
    total_sizze_44605 = (bytes_43917 * num_threads_44604)
    local_memory_capacity_45184 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45184)) and suff_outer_par_39807):
      mem_43915 = opencl_alloc(self, bytes_43644, "mem_43915")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43915, np.int64(0),
                                                  defunc_4_map_res_mem_43912,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_29278, m_29259)
      mem_43933 = opencl_alloc(self, bytes_43931, "mem_43933")
      mem_43918 = opencl_alloc(self, total_sizze_44605, "mem_43918")
      if ((1 * (np.long(num_groups_39828) * np.long(segmap_group_sizze_39827))) != 0):
        self.mainzisegmap_39809_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.int64(m_29259),
                                             np.int32(k2p2zq_29276),
                                             np.int64(i32_res_29278),
                                             np.int64(num_groups_39828),
                                             mem_43394, mem_43915, mem_43918,
                                             mem_43933)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39809_var,
                                   ((np.long(num_groups_39828) * np.long(segmap_group_sizze_39827)),),
                                   (np.long(segmap_group_sizze_39827),))
        if synchronous:
          sync(self)
      mem_43915 = None
      mem_43918 = None
      mem_44134 = opencl_alloc(self, bytes_43931, "mem_44134")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44134, np.int64(0),
                                                  mem_43933, np.int64(0),
                                                  np.int64(1), m_29259, N_29258)
      mem_43933 = None
      defunc_3_map_res_mem_44136 = mem_44134
    else:
      local_memory_capacity_45183 = self.max_local_memory
      if (sle64((bytes_43951 + bytes_43953),
                sext_i32_i64(local_memory_capacity_45183)) and suff_outer_par_39904):
        mem_43936 = opencl_alloc(self, bytes_43380, "mem_43936")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43936, np.int64(0),
                                                    mem_43394, np.int64(0),
                                                    np.int64(1), i32_res_29278,
                                                    N_29258)
        tk_div_tx_42429 = sdiv_up64(Tk_42428, Tx_42426)
        tk_div_ty_42430 = sdiv_up64(Tk_42428, Ty_42424)
        gridDim_x_42437 = sdiv_up64(N_29258, TxRx_42431)
        gridDim_y_42438 = sdiv_up64(m_29259, TyRy_42432)
        grid_sizze_42439 = (gridDim_x_42437 * gridDim_y_42438)
        full_tiles_42468 = squot64(i32_res_29278, Tk_42428)
        kk_42671 = (Tk_42428 * full_tiles_42468)
        mem_44126 = opencl_alloc(self, bytes_43931, "mem_44126")
        if ((1 * (np.long(grid_sizze_42439) * np.long(group_sizze_42440))) != 0):
          self.mainzisegmap_intragroup_42443_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43953)),
                                                          cl.LocalMemory(np.long(bytes_43951)),
                                                          np.int64(N_29258),
                                                          np.int64(m_29259),
                                                          np.int64(i32_res_29278),
                                                          np.int64(gridDim_x_42437),
                                                          np.int64(full_tiles_42468),
                                                          np.int64(kk_42671),
                                                          defunc_4_map_res_mem_43912,
                                                          mem_43936, mem_44126)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42443_var,
                                     ((np.long(grid_sizze_42439) * np.long(group_sizze_42440)),),
                                     (np.long(group_sizze_42440),))
          if synchronous:
            sync(self)
        mem_43936 = None
        defunc_3_map_res_mem_44131 = mem_44126
      else:
        mem_44130 = opencl_alloc(self, bytes_43931, "mem_44130")
        if slt64((i32_res_29278 * np.int64(2)), segred_group_sizze_39919):
          segment_sizze_nonzzero_45123 = smax64(np.int64(1), i32_res_29278)
          num_threads_45124 = (num_groups_39920 * segred_group_sizze_39919)
          if ((1 * (np.long(num_groups_39920) * np.long(segred_group_sizze_39919))) != 0):
            self.mainzisegred_small_39873_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39919))),
                                                       np.int64(N_29258),
                                                       np.int64(m_29259),
                                                       np.int64(i32_res_29278),
                                                       np.int64(num_groups_39920),
                                                       mem_43394,
                                                       defunc_4_map_res_mem_43912,
                                                       mem_44130,
                                                       np.int64(segment_sizze_nonzzero_45123))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39873_var,
                                       ((np.long(num_groups_39920) * np.long(segred_group_sizze_39919)),),
                                       (np.long(segred_group_sizze_39919),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45144 = sdiv_up64(num_groups_39920,
                                               smax64(np.int64(1),
                                                      (m_29259 * N_29258)))
          elements_per_thread_45145 = sdiv_up64(i32_res_29278,
                                                (segred_group_sizze_39919 * groups_per_segment_45144))
          virt_num_groups_45146 = (groups_per_segment_45144 * (m_29259 * N_29258))
          num_threads_45147 = (num_groups_39920 * segred_group_sizze_39919)
          threads_per_segment_45148 = (groups_per_segment_45144 * segred_group_sizze_39919)
          group_res_arr_mem_45149 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39919 * virt_num_groups_45146)),
                                                 "group_res_arr_mem_45149")
          mainzicounter_mem_45151 = self.mainzicounter_mem_45151
          if ((1 * (np.long(num_groups_39920) * np.long(segred_group_sizze_39919))) != 0):
            self.mainzisegred_large_39873_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39919))),
                                                       np.int64(N_29258),
                                                       np.int64(i32_res_29278),
                                                       np.int64(num_groups_39920),
                                                       mem_43394,
                                                       defunc_4_map_res_mem_43912,
                                                       mem_44130,
                                                       np.int64(groups_per_segment_45144),
                                                       np.int64(elements_per_thread_45145),
                                                       np.int64(virt_num_groups_45146),
                                                       np.int64(threads_per_segment_45148),
                                                       group_res_arr_mem_45149,
                                                       mainzicounter_mem_45151)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39873_var,
                                       ((np.long(num_groups_39920) * np.long(segred_group_sizze_39919)),),
                                       (np.long(segred_group_sizze_39919),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44131 = mem_44130
      defunc_3_map_res_mem_44136 = defunc_3_map_res_mem_44131
    mem_43394 = None
    defunc_4_map_res_mem_43912 = None
    i_29538 = (N_29258 - np.int64(1))
    x_29539 = sle64(np.int64(0), i_29538)
    y_29540 = slt64(i_29538, N_29258)
    bounds_check_29541 = (x_29539 and y_29540)
    index_certs_29542 = True
    assert bounds_check_29541, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:82:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:76:5-85:25\n   #6  bfastfinal.fut:192:5-58\n   #7  bfastfinal.fut:187:1-193:20\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_29538,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_29258,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_40049 = sle64(N_29258, max_group_sizze_38912)
    suff_intra_par_40047 = (self.sizes["main.suff_intra_par_24"] <= N_29258)
    intra_suff_and_fits_40050 = (suff_intra_par_40047 and fits_40049)
    segscan_group_sizze_40199 = self.sizes["main.segscan_group_size_40176"]
    max_num_groups_45185 = self.sizes["main.segscan_num_groups_40178"]
    num_groups_40200 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_39903,
                                                            segscan_group_sizze_40199),
                                                  sext_i32_i64(max_num_groups_45185))))
    segmap_group_sizze_40219 = self.sizes["main.segmap_group_size_40167"]
    mem_44139 = opencl_alloc(self, bytes_43931, "mem_44139")
    self.futhark_builtinzhreplicate_f32(mem_44139, (m_29259 * N_29258), np.nan)
    mem_44142 = opencl_alloc(self, bytes_43931, "mem_44142")
    self.futhark_builtinzhreplicate_i32(mem_44142, (m_29259 * N_29258),
                                        np.int32(0))
    segmap_group_sizze_40255 = self.sizes["main.segmap_group_size_40092"]
    bytes_44154 = (np.int64(4) * m_29259)
    bytes_44145 = (np.int64(8) * N_29258)
    bytes_44163 = (np.int64(8) * comparatee_39903)
    local_memory_capacity_45287 = self.max_local_memory
    if (sle64((((bytes_44145 + bytes_43917) + bytes_43917) + bytes_43917),
              sext_i32_i64(local_memory_capacity_45287)) and intra_suff_and_fits_40050):
      mem_44155 = opencl_alloc(self, bytes_44154, "mem_44155")
      mem_44158 = opencl_alloc(self, bytes_43931, "mem_44158")
      mem_44161 = opencl_alloc(self, bytes_43931, "mem_44161")
      if ((1 * (np.long(m_29259) * np.long(N_29258))) != 0):
        self.mainzisegmap_intragroup_39972_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43917)),
                                                        cl.LocalMemory(np.long(bytes_43917)),
                                                        cl.LocalMemory(np.long(bytes_43917)),
                                                        cl.LocalMemory(np.long(bytes_44145)),
                                                        np.int64(N_29258),
                                                        np.int64(N_29260),
                                                        np.int64(i_29538),
                                                        images_mem_43378,
                                                        defunc_3_map_res_mem_44136,
                                                        mem_44155, mem_44158,
                                                        mem_44161)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39972_var,
                                   ((np.long(m_29259) * np.long(N_29258)),),
                                   (np.long(N_29258),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_44173 = mem_44155
      defunc_4_map_res_mem_44174 = mem_44158
      defunc_4_map_res_mem_44175 = mem_44161
    else:
      mem_44165 = opencl_alloc(self, bytes_44163, "mem_44165")
      mem_44168 = opencl_alloc(self, bytes_43931, "mem_44168")
      if slt64(np.int64(0), (m_29259 * N_29258)):
        stage1_max_num_groups_45221 = self.max_group_size
        stage1_num_groups_45222 = smin64(stage1_max_num_groups_45221,
                                         num_groups_40200)
        num_threads_45223 = sext_i64_i32((stage1_num_groups_45222 * segscan_group_sizze_40199))
        if ((1 * (np.long(stage1_num_groups_45222) * np.long(segscan_group_sizze_40199))) != 0):
          self.mainziscan_stage1_40182_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_40199)))),
                                                    np.int64(N_29258),
                                                    np.int64(m_29259),
                                                    np.int64(N_29260),
                                                    images_mem_43378,
                                                    defunc_3_map_res_mem_44136,
                                                    mem_44165, mem_44168,
                                                    np.int32(num_threads_45223))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_40182_var,
                                     ((np.long(stage1_num_groups_45222) * np.long(segscan_group_sizze_40199)),),
                                     (np.long(segscan_group_sizze_40199),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45222))) != 0):
          self.mainziscan_stage2_40182_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_45222)))),
                                                    np.int64(N_29258),
                                                    np.int64(m_29259),
                                                    mem_44165,
                                                    np.int64(stage1_num_groups_45222),
                                                    np.int32(num_threads_45223))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_40182_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45222)),),
                                     (np.long(stage1_num_groups_45222),))
          if synchronous:
            sync(self)
        required_groups_45265 = sext_i64_i32(sdiv_up64((m_29259 * N_29258),
                                                       segscan_group_sizze_40199))
        if ((1 * (np.long(num_groups_40200) * np.long(segscan_group_sizze_40199))) != 0):
          self.mainziscan_stage3_40182_var.set_args(self.global_failure,
                                                    np.int64(N_29258),
                                                    np.int64(m_29259),
                                                    np.int64(num_groups_40200),
                                                    mem_44165,
                                                    np.int32(num_threads_45223),
                                                    np.int32(required_groups_45265))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_40182_var,
                                     ((np.long(num_groups_40200) * np.long(segscan_group_sizze_40199)),),
                                     (np.long(segscan_group_sizze_40199),))
          if synchronous:
            sync(self)
      segmap_usable_groups_40220 = sdiv_up64(m_29259, segmap_group_sizze_40219)
      mem_44171 = opencl_alloc(self, bytes_44154, "mem_44171")
      if ((1 * (np.long(segmap_usable_groups_40220) * np.long(segmap_group_sizze_40219))) != 0):
        self.mainzisegmap_40165_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.int64(m_29259),
                                             np.int64(i_29538), mem_44165,
                                             mem_44171)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40165_var,
                                   ((np.long(segmap_usable_groups_40220) * np.long(segmap_group_sizze_40219)),),
                                   (np.long(segmap_group_sizze_40219),))
        if synchronous:
          sync(self)
      segmap_usable_groups_40256 = sdiv_up64(comparatee_39903,
                                             segmap_group_sizze_40255)
      if ((1 * (np.long(segmap_usable_groups_40256) * np.long(segmap_group_sizze_40255))) != 0):
        self.mainzisegmap_40089_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.int64(m_29259), mem_44139,
                                             mem_44142, mem_44165, mem_44168)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40089_var,
                                   ((np.long(segmap_usable_groups_40256) * np.long(segmap_group_sizze_40255)),),
                                   (np.long(segmap_group_sizze_40255),))
        if synchronous:
          sync(self)
      mem_44165 = None
      mem_44168 = None
      defunc_4_map_res_mem_44173 = mem_44171
      defunc_4_map_res_mem_44174 = mem_44139
      defunc_4_map_res_mem_44175 = mem_44142
    defunc_3_map_res_mem_44136 = None
    mem_44139 = None
    mem_44142 = None
    suff_outer_par_40304 = (self.sizes["main.suff_outer_par_28"] <= m_29259)
    fits_40382 = sle64(i32_res_29272, max_group_sizze_38912)
    suff_intra_par_40380 = (self.sizes["main.suff_intra_par_29"] <= i32_res_29272)
    intra_suff_and_fits_40383 = (suff_intra_par_40380 and fits_40382)
    segmap_group_sizze_40347 = self.sizes["main.segmap_group_size_40316"]
    nest_sizze_40470 = (m_29259 * i32_res_29272)
    segred_group_sizze_40471 = self.sizes["main.segred_group_size_40454"]
    max_num_groups_45288 = self.sizes["main.segred_num_groups_40456"]
    num_groups_40472 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40470,
                                                            segred_group_sizze_40471),
                                                  sext_i32_i64(max_num_groups_45288))))
    segred_group_sizze_40485 = self.sizes["main.segred_group_size_40433"]
    max_num_groups_45289 = self.sizes["main.segred_num_groups_40435"]
    num_groups_40486 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40470,
                                                            segred_group_sizze_40485),
                                                  sext_i32_i64(max_num_groups_45289))))
    segmap_group_sizze_40501 = self.sizes["main.segmap_group_size_40418"]
    bytes_44184 = (np.int64(4) * segmap_group_sizze_40347)
    local_memory_capacity_45443 = self.max_local_memory
    if (sle64((bytes_44184 + bytes_44184),
              sext_i32_i64(local_memory_capacity_45443)) and suff_outer_par_40304):
      segmap_usable_groups_40348 = sdiv_up64(m_29259, segmap_group_sizze_40347)
      mem_44178 = opencl_alloc(self, bytes_43395, "mem_44178")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44178, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_29260, m_29259)
      mem_44181 = opencl_alloc(self, bytes_43931, "mem_44181")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44181, np.int64(0),
                                                  defunc_4_map_res_mem_44174,
                                                  np.int64(0), np.int64(1),
                                                  N_29258, m_29259)
      num_whole_tiles_42885 = squot64(i32_res_29272, segmap_group_sizze_40347)
      residual_input_43006 = srem64(i32_res_29272, segmap_group_sizze_40347)
      cond_43007 = (residual_input_43006 == np.int64(0))
      mem_44209 = opencl_alloc(self, bytes_44154, "mem_44209")
      mem_44211 = opencl_alloc(self, bytes_44154, "mem_44211")
      mem_44213 = opencl_alloc(self, bytes_44154, "mem_44213")
      if ((1 * (np.long(segmap_usable_groups_40348) * np.long(segmap_group_sizze_40347))) != 0):
        self.mainzisegmap_intragroup_42877_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_44184)),
                                                        cl.LocalMemory(np.long(bytes_44184)),
                                                        np.int64(m_29259),
                                                        np.int32(n_29263),
                                                        np.float32(hfrac_29265),
                                                        np.int64(i32_res_29272),
                                                        np.int32(k2p2_29274),
                                                        np.int64(num_whole_tiles_42885),
                                                        np.int64(residual_input_43006),
                                                        np.byte(cond_43007),
                                                        mem_44178, mem_44181,
                                                        mem_44209, mem_44211,
                                                        mem_44213)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42877_var,
                                   ((np.long(segmap_usable_groups_40348) * np.long(segmap_group_sizze_40347)),),
                                   (np.long(segmap_group_sizze_40347),))
        if synchronous:
          sync(self)
      mem_44178 = None
      mem_44181 = None
      defunc_3_map_res_mem_44237 = mem_44209
      defunc_3_map_res_mem_44238 = mem_44211
      defunc_3_map_res_mem_44239 = mem_44213
    else:
      local_memory_capacity_45442 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_29272) + (np.int32(4) * i32_res_29272)),
                sext_i32_i64(local_memory_capacity_45442)) and intra_suff_and_fits_40383):
        mem_44218 = opencl_alloc(self, bytes_44154, "mem_44218")
        mem_44220 = opencl_alloc(self, bytes_44154, "mem_44220")
        mem_44222 = opencl_alloc(self, bytes_44154, "mem_44222")
        if ((1 * (np.long(m_29259) * np.long(i32_res_29272))) != 0):
          self.mainzisegmap_intragroup_40312_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_29272))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_29272))),
                                                          np.int64(N_29258),
                                                          np.int64(N_29260),
                                                          np.float32(hfrac_29265),
                                                          np.int64(i32_res_29272),
                                                          np.int32(k2p2_29274),
                                                          images_mem_43378,
                                                          defunc_4_map_res_mem_44174,
                                                          mem_44218, mem_44220,
                                                          mem_44222)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_40312_var,
                                     ((np.long(m_29259) * np.long(i32_res_29272)),),
                                     (np.long(i32_res_29272),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44234 = mem_44218
        defunc_3_map_res_mem_44235 = mem_44220
        defunc_3_map_res_mem_44236 = mem_44222
      else:
        mem_44225 = opencl_alloc(self, bytes_44154, "mem_44225")
        if slt64((i32_res_29272 * np.int64(2)), segred_group_sizze_40471):
          segment_sizze_nonzzero_45317 = smax64(np.int64(1), i32_res_29272)
          num_threads_45318 = (num_groups_40472 * segred_group_sizze_40471)
          if ((1 * (np.long(num_groups_40472) * np.long(segred_group_sizze_40471))) != 0):
            self.mainzisegred_small_40460_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40471))),
                                                       np.int64(m_29259),
                                                       np.int64(N_29260),
                                                       np.int64(i32_res_29272),
                                                       np.int64(num_groups_40472),
                                                       images_mem_43378,
                                                       mem_44225,
                                                       np.int64(segment_sizze_nonzzero_45317))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40460_var,
                                       ((np.long(num_groups_40472) * np.long(segred_group_sizze_40471)),),
                                       (np.long(segred_group_sizze_40471),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45338 = sdiv_up64(num_groups_40472,
                                               smax64(np.int64(1), m_29259))
          elements_per_thread_45339 = sdiv_up64(i32_res_29272,
                                                (segred_group_sizze_40471 * groups_per_segment_45338))
          virt_num_groups_45340 = (groups_per_segment_45338 * m_29259)
          num_threads_45341 = (num_groups_40472 * segred_group_sizze_40471)
          threads_per_segment_45342 = (groups_per_segment_45338 * segred_group_sizze_40471)
          group_res_arr_mem_45343 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_40471 * virt_num_groups_45340)),
                                                 "group_res_arr_mem_45343")
          mainzicounter_mem_45345 = self.mainzicounter_mem_45345
          if ((1 * (np.long(num_groups_40472) * np.long(segred_group_sizze_40471))) != 0):
            self.mainzisegred_large_40460_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40471))),
                                                       np.int64(N_29260),
                                                       np.int64(i32_res_29272),
                                                       np.int64(num_groups_40472),
                                                       images_mem_43378,
                                                       mem_44225,
                                                       np.int64(groups_per_segment_45338),
                                                       np.int64(elements_per_thread_45339),
                                                       np.int64(virt_num_groups_45340),
                                                       np.int64(threads_per_segment_45342),
                                                       group_res_arr_mem_45343,
                                                       mainzicounter_mem_45345)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40460_var,
                                       ((np.long(num_groups_40472) * np.long(segred_group_sizze_40471)),),
                                       (np.long(segred_group_sizze_40471),))
            if synchronous:
              sync(self)
        mem_44228 = opencl_alloc(self, bytes_44154, "mem_44228")
        if slt64((i32_res_29272 * np.int64(2)), segred_group_sizze_40485):
          segment_sizze_nonzzero_45377 = smax64(np.int64(1), i32_res_29272)
          num_threads_45378 = (num_groups_40486 * segred_group_sizze_40485)
          if ((1 * (np.long(num_groups_40486) * np.long(segred_group_sizze_40485))) != 0):
            self.mainzisegred_small_40439_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40485))),
                                                       np.int64(N_29258),
                                                       np.int64(m_29259),
                                                       np.int64(i32_res_29272),
                                                       np.int64(num_groups_40486),
                                                       defunc_4_map_res_mem_44174,
                                                       mem_44225, mem_44228,
                                                       np.int64(segment_sizze_nonzzero_45377))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40439_var,
                                       ((np.long(num_groups_40486) * np.long(segred_group_sizze_40485)),),
                                       (np.long(segred_group_sizze_40485),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45398 = sdiv_up64(num_groups_40486,
                                               smax64(np.int64(1), m_29259))
          elements_per_thread_45399 = sdiv_up64(i32_res_29272,
                                                (segred_group_sizze_40485 * groups_per_segment_45398))
          virt_num_groups_45400 = (groups_per_segment_45398 * m_29259)
          num_threads_45401 = (num_groups_40486 * segred_group_sizze_40485)
          threads_per_segment_45402 = (groups_per_segment_45398 * segred_group_sizze_40485)
          group_res_arr_mem_45403 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_40485 * virt_num_groups_45400)),
                                                 "group_res_arr_mem_45403")
          mainzicounter_mem_45405 = self.mainzicounter_mem_45405
          if ((1 * (np.long(num_groups_40486) * np.long(segred_group_sizze_40485))) != 0):
            self.mainzisegred_large_40439_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40485))),
                                                       np.int64(N_29258),
                                                       np.int64(i32_res_29272),
                                                       np.int64(num_groups_40486),
                                                       defunc_4_map_res_mem_44174,
                                                       mem_44225, mem_44228,
                                                       np.int64(groups_per_segment_45398),
                                                       np.int64(elements_per_thread_45399),
                                                       np.int64(virt_num_groups_45400),
                                                       np.int64(threads_per_segment_45402),
                                                       group_res_arr_mem_45403,
                                                       mainzicounter_mem_45405)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40439_var,
                                       ((np.long(num_groups_40486) * np.long(segred_group_sizze_40485)),),
                                       (np.long(segred_group_sizze_40485),))
            if synchronous:
              sync(self)
        segmap_usable_groups_40502 = sdiv_up64(m_29259,
                                               segmap_group_sizze_40501)
        mem_44231 = opencl_alloc(self, bytes_44154, "mem_44231")
        mem_44233 = opencl_alloc(self, bytes_44154, "mem_44233")
        if ((1 * (np.long(segmap_usable_groups_40502) * np.long(segmap_group_sizze_40501))) != 0):
          self.mainzisegmap_40416_var.set_args(self.global_failure,
                                               np.int64(m_29259),
                                               np.float32(hfrac_29265),
                                               np.int32(k2p2_29274), mem_44225,
                                               mem_44228, mem_44231, mem_44233)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40416_var,
                                     ((np.long(segmap_usable_groups_40502) * np.long(segmap_group_sizze_40501)),),
                                     (np.long(segmap_group_sizze_40501),))
          if synchronous:
            sync(self)
        mem_44228 = None
        defunc_3_map_res_mem_44234 = mem_44231
        defunc_3_map_res_mem_44235 = mem_44225
        defunc_3_map_res_mem_44236 = mem_44233
      defunc_3_map_res_mem_44237 = defunc_3_map_res_mem_44234
      defunc_3_map_res_mem_44238 = defunc_3_map_res_mem_44235
      defunc_3_map_res_mem_44239 = defunc_3_map_res_mem_44236
    segred_group_sizze_40522 = self.sizes["main.segred_group_size_40521"]
    max_num_groups_45444 = self.sizes["main.segred_num_groups_40523"]
    num_groups_40524 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29259,
                                                            segred_group_sizze_40522),
                                                  sext_i32_i64(max_num_groups_45444))))
    mem_44242 = opencl_alloc(self, np.int64(4), "mem_44242")
    mainzicounter_mem_45445 = self.mainzicounter_mem_45445
    group_res_arr_mem_45447 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_40522 * num_groups_40524)),
                                           "group_res_arr_mem_45447")
    num_threads_45449 = (num_groups_40524 * segred_group_sizze_40522)
    if ((1 * (np.long(num_groups_40524) * np.long(segred_group_sizze_40522))) != 0):
      self.mainzisegred_nonseg_40529_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40522))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_29259),
                                                  np.int64(num_groups_40524),
                                                  defunc_3_map_res_mem_44237,
                                                  mem_44242,
                                                  mainzicounter_mem_45445,
                                                  group_res_arr_mem_45447,
                                                  np.int64(num_threads_45449))
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_40529_var,
                                 ((np.long(num_groups_40524) * np.long(segred_group_sizze_40522)),),
                                 (np.long(segred_group_sizze_40522),))
      if synchronous:
        sync(self)
    read_res_45810 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45810, mem_44242,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_29628 = read_res_45810[0]
    mem_44242 = None
    i32_res_29633 = sext_i32_i64(defunc_2_reduce_comm_res_29628)
    bounds_invalid_upwards_29634 = slt64(i32_res_29633, np.int64(0))
    valid_29635 = not(bounds_invalid_upwards_29634)
    range_valid_c_29636 = True
    assert valid_29635, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:110:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:105:17-112:24\n   #5  bfastfinal.fut:192:5-58\n   #6  bfastfinal.fut:187:1-193:20\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_29633,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_40561 = (self.sizes["main.suff_outer_par_31"] <= m_29259)
    segmap_group_sizze_40584 = self.sizes["main.segmap_group_size_40565"]
    nest_sizze_40627 = (m_29259 * i32_res_29633)
    segred_group_sizze_40628 = self.sizes["main.segred_group_size_40605"]
    max_num_groups_45475 = self.sizes["main.segred_num_groups_40607"]
    num_groups_40629 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40627,
                                                            segred_group_sizze_40628),
                                                  sext_i32_i64(max_num_groups_45475))))
    bytes_44245 = (np.int64(4) * segmap_group_sizze_40584)
    local_memory_capacity_45546 = self.max_local_memory
    if (sle64((bytes_44245 + bytes_44245),
              sext_i32_i64(local_memory_capacity_45546)) and suff_outer_par_40561):
      segmap_usable_groups_40585 = sdiv_up64(m_29259, segmap_group_sizze_40584)
      num_whole_tiles_43129 = squot64(i32_res_29633, segmap_group_sizze_40584)
      residual_input_43228 = srem64(i32_res_29633, segmap_group_sizze_40584)
      cond_43229 = (residual_input_43228 == np.int64(0))
      mem_44268 = opencl_alloc(self, bytes_44154, "mem_44268")
      if ((1 * (np.long(segmap_usable_groups_40585) * np.long(segmap_group_sizze_40584))) != 0):
        self.mainzisegmap_intragroup_43109_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_44245)),
                                                        cl.LocalMemory(np.long(bytes_44245)),
                                                        np.int64(N_29258),
                                                        np.int64(m_29259),
                                                        np.int64(i32_res_29633),
                                                        np.int64(num_whole_tiles_43129),
                                                        np.int64(residual_input_43228),
                                                        np.byte(cond_43229),
                                                        defunc_4_map_res_mem_44174,
                                                        defunc_3_map_res_mem_44237,
                                                        defunc_3_map_res_mem_44238,
                                                        mem_44268)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_43109_var,
                                   ((np.long(segmap_usable_groups_40585) * np.long(segmap_group_sizze_40584)),),
                                   (np.long(segmap_group_sizze_40584),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44272 = mem_44268
    else:
      mem_44271 = opencl_alloc(self, bytes_44154, "mem_44271")
      if slt64((i32_res_29633 * np.int64(2)), segred_group_sizze_40628):
        segment_sizze_nonzzero_45486 = smax64(np.int64(1), i32_res_29633)
        num_threads_45487 = (num_groups_40629 * segred_group_sizze_40628)
        if ((1 * (np.long(num_groups_40629) * np.long(segred_group_sizze_40628))) != 0):
          self.mainzisegred_small_40611_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40628))),
                                                     np.int64(N_29258),
                                                     np.int64(m_29259),
                                                     np.int64(i32_res_29633),
                                                     np.int64(num_groups_40629),
                                                     defunc_4_map_res_mem_44174,
                                                     defunc_3_map_res_mem_44237,
                                                     defunc_3_map_res_mem_44238,
                                                     mem_44271,
                                                     np.int64(segment_sizze_nonzzero_45486))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_40611_var,
                                     ((np.long(num_groups_40629) * np.long(segred_group_sizze_40628)),),
                                     (np.long(segred_group_sizze_40628),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45507 = sdiv_up64(num_groups_40629,
                                             smax64(np.int64(1), m_29259))
        elements_per_thread_45508 = sdiv_up64(i32_res_29633,
                                              (segred_group_sizze_40628 * groups_per_segment_45507))
        virt_num_groups_45509 = (groups_per_segment_45507 * m_29259)
        num_threads_45510 = (num_groups_40629 * segred_group_sizze_40628)
        threads_per_segment_45511 = (groups_per_segment_45507 * segred_group_sizze_40628)
        group_res_arr_mem_45512 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40628 * virt_num_groups_45509)),
                                               "group_res_arr_mem_45512")
        mainzicounter_mem_45514 = self.mainzicounter_mem_45514
        if ((1 * (np.long(num_groups_40629) * np.long(segred_group_sizze_40628))) != 0):
          self.mainzisegred_large_40611_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40628))),
                                                     np.int64(N_29258),
                                                     np.int64(i32_res_29633),
                                                     np.int64(num_groups_40629),
                                                     defunc_4_map_res_mem_44174,
                                                     defunc_3_map_res_mem_44237,
                                                     defunc_3_map_res_mem_44238,
                                                     mem_44271,
                                                     np.int64(groups_per_segment_45507),
                                                     np.int64(elements_per_thread_45508),
                                                     np.int64(virt_num_groups_45509),
                                                     np.int64(threads_per_segment_45511),
                                                     group_res_arr_mem_45512,
                                                     mainzicounter_mem_45514)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_40611_var,
                                     ((np.long(num_groups_40629) * np.long(segred_group_sizze_40628)),),
                                     (np.long(segred_group_sizze_40628),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44272 = mem_44271
    iota32_arg_29658 = (N_29258 - i32_res_29272)
    bounds_invalid_upwards_29659 = slt64(iota32_arg_29658, np.int64(0))
    valid_29660 = not(bounds_invalid_upwards_29659)
    range_valid_c_29661 = True
    assert valid_29660, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:118:22-35\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:20\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_29658,
                                                                                                                                                                                                                                      " is invalid."))
    x_29663 = (np.int32(1) + n_29263)
    i_29664 = (n_29263 - np.int32(1))
    i_29665 = sext_i32_i64(i_29664)
    x_29666 = sle64(np.int64(0), i_29665)
    y_29667 = slt64(i_29665, N_29258)
    bounds_check_29668 = (x_29666 and y_29667)
    index_certs_29669 = True
    assert bounds_check_29668, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:116:64-84\n   #1  bfastfinal.fut:114:15-118:36\n   #2  bfastfinal.fut:192:5-58\n   #3  bfastfinal.fut:187:1-193:20\n" % ("Index [",
                                                                                                                                                                                                                 i_29665,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_29258,
                                                                                                                                                                                                                 "]."))
    read_res_45812 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45812, mappingindices_mem_43377,
                    device_offset=(np.long(i_29665) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_29670 = read_res_45812[0]
    i32_res_29671 = sitofp_i32_f32(r32_arg_29670)
    range_valid_c_29672 = True
    assert valid_29660, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:130:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:192:5-58\n   #6  bfastfinal.fut:187:1-193:20\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_29658,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_40706 = self.sizes["main.segmap_group_size_40689"]
    segmap_usable_groups_40707 = sdiv_up64(iota32_arg_29658,
                                           segmap_group_sizze_40706)
    bytes_44274 = (np.int64(4) * iota32_arg_29658)
    mem_44275 = opencl_alloc(self, bytes_44274, "mem_44275")
    mem_44277 = opencl_alloc(self, bytes_44274, "mem_44277")
    if ((1 * (np.long(segmap_usable_groups_40707) * np.long(segmap_group_sizze_40706))) != 0):
      self.mainzisegmap_40687_var.set_args(self.global_failure,
                                           np.float32(lam_29266),
                                           np.int64(iota32_arg_29658),
                                           np.int32(x_29663),
                                           np.float32(i32_res_29671),
                                           mappingindices_mem_43377, mem_44275,
                                           mem_44277)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40687_var,
                                 ((np.long(segmap_usable_groups_40707) * np.long(segmap_group_sizze_40706)),),
                                 (np.long(segmap_group_sizze_40706),))
      if synchronous:
        sync(self)
    mem_44275 = None
    fits_40947 = sle64(iota32_arg_29658, max_group_sizze_38912)
    suff_intra_par_40945 = (self.sizes["main.suff_intra_par_34"] <= iota32_arg_29658)
    intra_suff_and_fits_40948 = (suff_intra_par_40945 and fits_40947)
    segmap_group_sizze_41221 = self.sizes["main.segmap_group_size_41201"]
    max_num_groups_45552 = self.sizes["main.segmap_num_groups_41203"]
    num_groups_41222 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29259,
                                                            segmap_group_sizze_41221),
                                                  sext_i32_i64(max_num_groups_45552))))
    nest_sizze_41243 = (m_29259 * iota32_arg_29658)
    segscan_group_sizze_41244 = self.sizes["main.segscan_group_size_41160"]
    max_num_groups_45553 = self.sizes["main.segscan_num_groups_41162"]
    num_groups_41245 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41243,
                                                            segscan_group_sizze_41244),
                                                  sext_i32_i64(max_num_groups_45553))))
    segred_group_sizze_41282 = self.sizes["main.segred_group_size_41106"]
    max_num_groups_45554 = self.sizes["main.segred_num_groups_41108"]
    num_groups_41283 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41243,
                                                            segred_group_sizze_41282),
                                                  sext_i32_i64(max_num_groups_45554))))
    segmap_group_sizze_41321 = self.sizes["main.segmap_group_size_41059"]
    bytes_44293 = (np.int64(4) * nest_sizze_41243)
    local_memory_capacity_45747 = self.max_local_memory
    if (sle64((((bytes_44274 + (np.int32(1) * iota32_arg_29658)) + (np.int32(4) * iota32_arg_29658)) + (np.int32(4) * iota32_arg_29658)),
              sext_i32_i64(local_memory_capacity_45747)) and intra_suff_and_fits_40948):
      mem_44284 = opencl_alloc(self, bytes_44154, "mem_44284")
      mem_44286 = opencl_alloc(self, bytes_44154, "mem_44286")
      if ((1 * (np.long(m_29259) * np.long(iota32_arg_29658))) != 0):
        self.mainzisegmap_intragroup_40732_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29658))),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29658))),
                                                        cl.LocalMemory(np.long((np.int32(1) * iota32_arg_29658))),
                                                        cl.LocalMemory(np.long(bytes_44274)),
                                                        np.int64(N_29258),
                                                        np.int32(n_29263),
                                                        np.int64(iota32_arg_29658),
                                                        defunc_4_map_res_mem_44173,
                                                        defunc_4_map_res_mem_44174,
                                                        defunc_4_map_res_mem_44175,
                                                        defunc_3_map_res_mem_44237,
                                                        defunc_3_map_res_mem_44238,
                                                        defunc_3_map_res_mem_44239,
                                                        defunc_0_f_res_mem_44272,
                                                        mem_44277, mem_44284,
                                                        mem_44286)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_40732_var,
                                   ((np.long(m_29259) * np.long(iota32_arg_29658)),),
                                   (np.long(iota32_arg_29658),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44308 = mem_44284
      defunc_0_f_res_mem_44309 = mem_44286
    else:
      mem_44289 = opencl_alloc(self, bytes_44154, "mem_44289")
      mem_44291 = opencl_alloc(self, bytes_44154, "mem_44291")
      if ((1 * (np.long(num_groups_41222) * np.long(segmap_group_sizze_41221))) != 0):
        self.mainzisegmap_41199_var.set_args(self.global_failure,
                                             np.int64(m_29259),
                                             np.int64(num_groups_41222),
                                             defunc_4_map_res_mem_44173,
                                             defunc_3_map_res_mem_44238,
                                             defunc_3_map_res_mem_44239,
                                             mem_44289, mem_44291)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_41199_var,
                                   ((np.long(num_groups_41222) * np.long(segmap_group_sizze_41221)),),
                                   (np.long(segmap_group_sizze_41221),))
        if synchronous:
          sync(self)
      mem_44295 = opencl_alloc(self, bytes_44293, "mem_44295")
      if slt64(np.int64(0), (m_29259 * iota32_arg_29658)):
        stage1_max_num_groups_45588 = self.max_group_size
        stage1_num_groups_45589 = smin64(stage1_max_num_groups_45588,
                                         num_groups_41245)
        num_threads_45590 = sext_i64_i32((stage1_num_groups_45589 * segscan_group_sizze_41244))
        if ((1 * (np.long(stage1_num_groups_45589) * np.long(segscan_group_sizze_41244))) != 0):
          self.mainziscan_stage1_41166_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * segscan_group_sizze_41244)))),
                                                    np.int64(N_29258),
                                                    np.int64(m_29259),
                                                    np.int64(iota32_arg_29658),
                                                    defunc_4_map_res_mem_44174,
                                                    defunc_3_map_res_mem_44237,
                                                    defunc_3_map_res_mem_44238,
                                                    defunc_0_f_res_mem_44272,
                                                    mem_44291, mem_44295,
                                                    np.int32(num_threads_45590))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_41166_var,
                                     ((np.long(stage1_num_groups_45589) * np.long(segscan_group_sizze_41244)),),
                                     (np.long(segscan_group_sizze_41244),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45589))) != 0):
          self.mainziscan_stage2_41166_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * stage1_num_groups_45589)))),
                                                    np.int64(m_29259),
                                                    np.int64(iota32_arg_29658),
                                                    mem_44295,
                                                    np.int64(stage1_num_groups_45589),
                                                    np.int32(num_threads_45590))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_41166_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45589)),),
                                     (np.long(stage1_num_groups_45589),))
          if synchronous:
            sync(self)
        required_groups_45632 = sext_i64_i32(sdiv_up64((m_29259 * iota32_arg_29658),
                                                       segscan_group_sizze_41244))
        if ((1 * (np.long(num_groups_41245) * np.long(segscan_group_sizze_41244))) != 0):
          self.mainziscan_stage3_41166_var.set_args(self.global_failure,
                                                    np.int64(m_29259),
                                                    np.int64(iota32_arg_29658),
                                                    np.int64(num_groups_41245),
                                                    mem_44295,
                                                    np.int32(num_threads_45590),
                                                    np.int32(required_groups_45632))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_41166_var,
                                     ((np.long(num_groups_41245) * np.long(segscan_group_sizze_41244)),),
                                     (np.long(segscan_group_sizze_41244),))
          if synchronous:
            sync(self)
      mem_44298 = opencl_alloc(self, m_29259, "mem_44298")
      mem_44300 = opencl_alloc(self, bytes_44154, "mem_44300")
      mem_44302 = opencl_alloc(self, bytes_44154, "mem_44302")
      if slt64((iota32_arg_29658 * np.int64(2)), segred_group_sizze_41282):
        segment_sizze_nonzzero_45644 = smax64(np.int64(1), iota32_arg_29658)
        num_threads_45645 = (num_groups_41283 * segred_group_sizze_41282)
        if ((1 * (np.long(num_groups_41283) * np.long(segred_group_sizze_41282))) != 0):
          self.mainzisegred_small_41112_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41282))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41282))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41282))),
                                                     np.int64(m_29259),
                                                     np.int64(iota32_arg_29658),
                                                     np.int64(num_groups_41283),
                                                     mem_44277, mem_44289,
                                                     mem_44291, mem_44295,
                                                     mem_44298, mem_44300,
                                                     mem_44302,
                                                     np.int64(segment_sizze_nonzzero_45644))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_41112_var,
                                     ((np.long(num_groups_41283) * np.long(segred_group_sizze_41282)),),
                                     (np.long(segred_group_sizze_41282),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45680 = sdiv_up64(num_groups_41283,
                                             smax64(np.int64(1), m_29259))
        elements_per_thread_45681 = sdiv_up64(iota32_arg_29658,
                                              (segred_group_sizze_41282 * groups_per_segment_45680))
        virt_num_groups_45682 = (groups_per_segment_45680 * m_29259)
        num_threads_45683 = (num_groups_41283 * segred_group_sizze_41282)
        threads_per_segment_45684 = (groups_per_segment_45680 * segred_group_sizze_41282)
        group_res_arr_mem_45685 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_41282 * virt_num_groups_45682)),
                                               "group_res_arr_mem_45685")
        group_res_arr_mem_45687 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_41282 * virt_num_groups_45682)),
                                               "group_res_arr_mem_45687")
        group_res_arr_mem_45689 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_41282 * virt_num_groups_45682)),
                                               "group_res_arr_mem_45689")
        mainzicounter_mem_45691 = self.mainzicounter_mem_45691
        if ((1 * (np.long(num_groups_41283) * np.long(segred_group_sizze_41282))) != 0):
          self.mainzisegred_large_41112_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41282))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41282))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41282))),
                                                     np.int64(iota32_arg_29658),
                                                     np.int64(num_groups_41283),
                                                     mem_44277, mem_44289,
                                                     mem_44291, mem_44295,
                                                     mem_44298, mem_44300,
                                                     mem_44302,
                                                     np.int64(groups_per_segment_45680),
                                                     np.int64(elements_per_thread_45681),
                                                     np.int64(virt_num_groups_45682),
                                                     group_res_arr_mem_45685,
                                                     group_res_arr_mem_45687,
                                                     group_res_arr_mem_45689,
                                                     mainzicounter_mem_45691)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_41112_var,
                                     ((np.long(num_groups_41283) * np.long(segred_group_sizze_41282)),),
                                     (np.long(segred_group_sizze_41282),))
          if synchronous:
            sync(self)
      mem_44289 = None
      mem_44295 = None
      segmap_usable_groups_41322 = sdiv_up64(m_29259, segmap_group_sizze_41321)
      mem_44305 = opencl_alloc(self, bytes_44154, "mem_44305")
      mem_44307 = opencl_alloc(self, bytes_44154, "mem_44307")
      if ((1 * (np.long(segmap_usable_groups_41322) * np.long(segmap_group_sizze_41321))) != 0):
        self.mainzisegmap_41057_var.set_args(self.global_failure,
                                             np.int64(N_29258),
                                             np.int64(m_29259),
                                             np.int32(n_29263),
                                             defunc_4_map_res_mem_44175,
                                             defunc_3_map_res_mem_44238,
                                             mem_44291, mem_44298, mem_44300,
                                             mem_44302, mem_44305, mem_44307)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_41057_var,
                                   ((np.long(segmap_usable_groups_41322) * np.long(segmap_group_sizze_41321)),),
                                   (np.long(segmap_group_sizze_41321),))
        if synchronous:
          sync(self)
      mem_44291 = None
      mem_44298 = None
      mem_44300 = None
      mem_44302 = None
      defunc_0_f_res_mem_44308 = mem_44305
      defunc_0_f_res_mem_44309 = mem_44307
    defunc_4_map_res_mem_44173 = None
    defunc_4_map_res_mem_44174 = None
    defunc_4_map_res_mem_44175 = None
    defunc_3_map_res_mem_44237 = None
    defunc_3_map_res_mem_44238 = None
    defunc_3_map_res_mem_44239 = None
    defunc_0_f_res_mem_44272 = None
    mem_44277 = None
    out_arrsizze_44627 = m_29259
    out_arrsizze_44629 = m_29259
    out_mem_44626 = defunc_0_f_res_mem_44308
    out_mem_44628 = defunc_0_f_res_mem_44309
    return (out_mem_44626, out_arrsizze_44627, out_mem_44628,
            out_arrsizze_44629)
  def futhark_mainDetailed(self, mappingindices_mem_43377, images_mem_43378,
                           N_27931, m_27932, N_27933, trend_27934, k_27935,
                           n_27936, freq_27937, hfrac_27938, lam_27939):
    dim_match_27942 = (N_27931 == N_27933)
    empty_or_match_cert_27943 = True
    assert dim_match_27942, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:173:1-177:56\n" % ("function arguments of wrong shape",))
    i32_res_27945 = sext_i32_i64(n_27936)
    x_27946 = (np.int32(2) * k_27935)
    k2p2_27947 = (np.int32(2) + x_27946)
    cond_27948 = slt32(np.int32(0), trend_27934)
    if cond_27948:
      k2p2zq_27949 = k2p2_27947
    else:
      k2p2zq_f_res_27950 = (k2p2_27947 - np.int32(1))
      k2p2zq_27949 = k2p2zq_f_res_27950
    i32_res_27951 = sext_i32_i64(k2p2zq_27949)
    binop_x_43381 = (N_27931 * i32_res_27951)
    bytes_43380 = (np.int64(4) * binop_x_43381)
    if cond_27948:
      bounds_invalid_upwards_27953 = slt64(i32_res_27951, np.int64(0))
      valid_27954 = not(bounds_invalid_upwards_27953)
      range_valid_c_27955 = True
      assert valid_27954, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:33:17-66\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27951,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_30095 = self.sizes["mainDetailed.segmap_group_size_30025"]
      segmap_usable_groups_30096 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_30095)
      mem_43382 = opencl_alloc(self, bytes_43380, "mem_43382")
      if ((1 * (np.long(segmap_usable_groups_30096) * np.long(segmap_group_sizze_30095))) != 0):
        self.mainDetailedzisegmap_30022_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.float32(freq_27937),
                                                     np.int64(i32_res_27951),
                                                     mappingindices_mem_43377,
                                                     mem_43382)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30022_var,
                                   ((np.long(segmap_usable_groups_30096) * np.long(segmap_group_sizze_30095)),),
                                   (np.long(segmap_group_sizze_30095),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43382
    else:
      bounds_invalid_upwards_27979 = slt64(i32_res_27951, np.int64(0))
      valid_27980 = not(bounds_invalid_upwards_27979)
      range_valid_c_27981 = True
      assert valid_27980, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:34:17-64\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27951,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_30269 = self.sizes["mainDetailed.segmap_group_size_30203"]
      segmap_usable_groups_30270 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_30269)
      mem_43386 = opencl_alloc(self, bytes_43380, "mem_43386")
      if ((1 * (np.long(segmap_usable_groups_30270) * np.long(segmap_group_sizze_30269))) != 0):
        self.mainDetailedzisegmap_30200_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.float32(freq_27937),
                                                     np.int64(i32_res_27951),
                                                     mappingindices_mem_43377,
                                                     mem_43386)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30200_var,
                                   ((np.long(segmap_usable_groups_30270) * np.long(segmap_group_sizze_30269)),),
                                   (np.long(segmap_group_sizze_30269),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43386
    x_28004 = (N_27931 * N_27931)
    y_28005 = (np.int64(2) * N_27931)
    x_28006 = (x_28004 + y_28005)
    x_28007 = (np.int64(1) + x_28006)
    y_28008 = (np.int64(1) + N_27931)
    zzero_28009 = (y_28008 == np.int64(0))
    nonzzero_28010 = not(zzero_28009)
    nonzzero_cert_28011 = True
    assert nonzzero_28010, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:32-60\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    x_28012 = sdiv64(x_28007, y_28008)
    x_28013 = (x_28012 - N_27931)
    binop_p_28014 = (x_28013 - np.int64(1))
    defunc_0_f_res_28015 = sext_i64_i32(binop_p_28014)
    i32_res_28016 = sitofp_i32_f32(defunc_0_f_res_28015)
    segmap_group_sizze_30352 = self.sizes["mainDetailed.segmap_group_size_30331"]
    segmap_usable_groups_30353 = sdiv_up64(binop_x_43381,
                                           segmap_group_sizze_30352)
    mem_43390 = opencl_alloc(self, bytes_43380, "mem_43390")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43390, np.int64(0),
                                                binop_p_mem_43387, np.int64(0),
                                                np.int64(1), N_27931,
                                                i32_res_27951)
    mem_43394 = opencl_alloc(self, bytes_43380, "mem_43394")
    if ((1 * (np.long(segmap_usable_groups_30353) * np.long(segmap_group_sizze_30352))) != 0):
      self.mainDetailedzisegmap_30328_var.set_args(self.global_failure,
                                                   np.int64(N_27931),
                                                   np.int64(i32_res_27951),
                                                   np.float32(i32_res_28016),
                                                   mem_43390, mem_43394)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_30328_var,
                                 ((np.long(segmap_usable_groups_30353) * np.long(segmap_group_sizze_30352)),),
                                 (np.long(segmap_group_sizze_30352),))
      if synchronous:
        sync(self)
    eq_x_y_28024 = (np.int64(0) == i32_res_27951)
    p_and_eq_x_y_28025 = (cond_27948 and eq_x_y_28024)
    not_p_28026 = not(cond_27948)
    p_and_eq_x_y_28027 = (eq_x_y_28024 and not_p_28026)
    empty_slice_28028 = (p_and_eq_x_y_28025 or p_and_eq_x_y_28027)
    m_28029 = (i32_res_27951 - np.int64(1))
    zzero_leq_i_p_m_t_s_28030 = sle64(np.int64(0), m_28029)
    i_p_m_t_s_leq_w_28031 = slt64(m_28029, i32_res_27951)
    i_lte_j_28032 = sle64(np.int64(0), i32_res_27951)
    y_28033 = (zzero_leq_i_p_m_t_s_28030 and i_p_m_t_s_leq_w_28031)
    y_28034 = (i_lte_j_28032 and y_28033)
    ok_or_empty_28035 = (empty_slice_28028 or y_28034)
    empty_slice_28036 = (i32_res_27945 == np.int64(0))
    m_28037 = (i32_res_27945 - np.int64(1))
    zzero_leq_i_p_m_t_s_28038 = sle64(np.int64(0), m_28037)
    i_p_m_t_s_leq_w_28039 = slt64(m_28037, N_27931)
    i_lte_j_28040 = sle64(np.int64(0), i32_res_27945)
    y_28041 = (zzero_leq_i_p_m_t_s_28038 and i_p_m_t_s_leq_w_28039)
    y_28042 = (i_lte_j_28040 and y_28041)
    ok_or_empty_28043 = (empty_slice_28036 or y_28042)
    index_ok_28044 = (ok_or_empty_28035 and ok_or_empty_28043)
    index_certs_28045 = True
    assert index_ok_28044, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:43:15-23\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27945,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27951,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27931,
                                                                                                                                                                               "]."))
    empty_slice_28047 = (i32_res_27951 == np.int64(0))
    ok_or_empty_28048 = (y_28034 or empty_slice_28047)
    index_ok_28049 = (ok_or_empty_28043 and ok_or_empty_28048)
    index_certs_28050 = True
    assert index_ok_28049, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:44:15-24\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_27945,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27931,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27951,
                                                                                                                                                                               "]."))
    empty_slice_28052 = (m_27932 == np.int64(0))
    m_28053 = (m_27932 - np.int64(1))
    zzero_leq_i_p_m_t_s_28054 = sle64(np.int64(0), m_28053)
    i_p_m_t_s_leq_w_28055 = slt64(m_28053, m_27932)
    i_lte_j_28056 = sle64(np.int64(0), m_27932)
    y_28057 = (zzero_leq_i_p_m_t_s_28054 and i_p_m_t_s_leq_w_28055)
    y_28058 = (i_lte_j_28056 and y_28057)
    ok_or_empty_28059 = (empty_slice_28052 or y_28058)
    index_ok_28060 = (ok_or_empty_28043 and ok_or_empty_28059)
    index_certs_28061 = True
    assert index_ok_28060, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:45:15-28\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27945,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27932,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27931,
                                                                                                                                                                               "]."))
    suff_outer_par_30359 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_27932)
    segmap_group_sizze_30385 = self.sizes["mainDetailed.segmap_group_size_30363"]
    max_num_groups_44669 = self.sizes["mainDetailed.segmap_num_groups_30365"]
    num_groups_30386 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27932,
                                                            segmap_group_sizze_30385),
                                                  sext_i32_i64(max_num_groups_44669))))
    nest_sizze_30561 = (m_27932 * i32_res_27951)
    segmap_group_sizze_30562 = self.sizes["mainDetailed.segmap_group_size_30410"]
    max_num_groups_44670 = self.sizes["mainDetailed.segmap_num_groups_30412"]
    num_groups_30563 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30561,
                                                            segmap_group_sizze_30562),
                                                  sext_i32_i64(max_num_groups_44670))))
    suff_outer_par_30567 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_30561)
    y_30591 = (i32_res_27951 * i32_res_27951)
    comparatee_30592 = (m_27932 * y_30591)
    suff_outer_par_30593 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_30592)
    nest_sizze_30613 = (i32_res_27945 * comparatee_30592)
    segred_group_sizze_30614 = self.sizes["mainDetailed.segred_group_size_30470"]
    max_num_groups_44671 = self.sizes["mainDetailed.segred_num_groups_30472"]
    num_groups_30615 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30613,
                                                            segred_group_sizze_30614),
                                                  sext_i32_i64(max_num_groups_44671))))
    Tx_41535 = self.sizes["mainDetailed.Tx_41533"]
    Ty_41536 = self.sizes["mainDetailed.Ty_41534"]
    Ty_41537 = smin64(i32_res_27951, Ty_41536)
    Tx_41538 = smin64(i32_res_27951, Tx_41535)
    gridDim_zz_41541 = sdiv_up64(m_27932, np.int64(30))
    group_sizze_41544 = (Ty_41537 * Tx_41538)
    binop_x_43396 = (m_27932 * N_27933)
    bytes_43395 = (np.int64(4) * binop_x_43396)
    bytes_43440 = (np.int64(4) * comparatee_30592)
    bytes_43399 = (np.int64(4) * y_30591)
    binop_x_43543 = (i32_res_27951 * nest_sizze_30561)
    bytes_43541 = (np.int64(4) * binop_x_43543)
    bytes_43445 = (np.int64(4) * i32_res_27951)
    binop_x_43474 = (np.int64(30) * group_sizze_41544)
    bytes_43472 = (np.int64(4) * binop_x_43474)
    binop_x_44403 = (np.int64(4) * Ty_41537)
    binop_x_44404 = (Tx_41538 * binop_x_44403)
    sizze_44405 = (np.int64(30) * binop_x_44404)
    num_threads_44483 = (segmap_group_sizze_30385 * num_groups_30386)
    total_sizze_44484 = (bytes_43399 * num_threads_44483)
    num_threads_44485 = (segmap_group_sizze_30562 * num_groups_30563)
    total_sizze_44486 = (bytes_43445 * num_threads_44485)
    local_memory_capacity_44793 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44793)) and suff_outer_par_30359):
      mem_43397 = opencl_alloc(self, bytes_43395, "mem_43397")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43397, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_27933, m_27932)
      mem_43443 = opencl_alloc(self, bytes_43440, "mem_43443")
      mem_43401 = opencl_alloc(self, total_sizze_44484, "mem_43401")
      if ((1 * (np.long(num_groups_30386) * np.long(segmap_group_sizze_30385))) != 0):
        self.mainDetailedzisegmap_30361_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     np.int32(n_27936),
                                                     np.int32(k2p2zq_27949),
                                                     np.int64(i32_res_27951),
                                                     np.int64(num_groups_30386),
                                                     binop_p_mem_43387,
                                                     mem_43394, mem_43397,
                                                     mem_43401, mem_43443)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30361_var,
                                   ((np.long(num_groups_30386) * np.long(segmap_group_sizze_30385)),),
                                   (np.long(segmap_group_sizze_30385),))
        if synchronous:
          sync(self)
      mem_43397 = None
      mem_43401 = None
      mem_43544 = opencl_alloc(self, bytes_43541, "mem_43544")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43544, np.int64(0),
                                                  mem_43443, np.int64(0),
                                                  np.int64(1), m_27932,
                                                  (i32_res_27951 * i32_res_27951))
      mem_43443 = None
      defunc_3_map_res_mem_43546 = mem_43544
    else:
      local_memory_capacity_44792 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44792)) and suff_outer_par_30567):
        mem_43462 = opencl_alloc(self, bytes_43541, "mem_43462")
        mem_43446 = opencl_alloc(self, total_sizze_44486, "mem_43446")
        if ((1 * (np.long(num_groups_30563) * np.long(segmap_group_sizze_30562))) != 0):
          self.mainDetailedzisegmap_30407_var.set_args(self.global_failure,
                                                       np.int64(m_27932),
                                                       np.int64(N_27933),
                                                       np.int32(n_27936),
                                                       np.int32(k2p2zq_27949),
                                                       np.int64(i32_res_27951),
                                                       np.int64(num_groups_30563),
                                                       images_mem_43378,
                                                       mem_43390, mem_43394,
                                                       mem_43446, mem_43462)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_30407_var,
                                     ((np.long(num_groups_30563) * np.long(segmap_group_sizze_30562)),),
                                     (np.long(segmap_group_sizze_30562),))
          if synchronous:
            sync(self)
        mem_43446 = None
        mem_43538 = opencl_alloc(self, bytes_43541, "mem_43538")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43538, np.int64(0),
                                                    mem_43462, np.int64(0),
                                                    np.int64(1),
                                                    (m_27932 * i32_res_27951),
                                                    i32_res_27951)
        mem_43462 = None
        defunc_3_map_res_mem_43540 = mem_43538
      else:
        local_memory_capacity_44791 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44791)) and suff_outer_par_30593):
          mem_43465 = opencl_alloc(self, bytes_43395, "mem_43465")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43465, np.int64(0),
                                                      images_mem_43378,
                                                      np.int64(0), np.int64(1),
                                                      N_27933, m_27932)
          gridDim_x_41539 = sdiv_up64(i32_res_27951, Tx_41538)
          gridDim_y_41540 = sdiv_up64(i32_res_27951, Ty_41537)
          binop_x_41542 = (gridDim_y_41540 * gridDim_zz_41541)
          grid_sizze_41543 = (gridDim_x_41539 * binop_x_41542)
          count_shmem_41545 = sdiv_up64(np.int64(30), group_sizze_41544)
          mem_43525 = opencl_alloc(self, bytes_43541, "mem_43525")
          if ((1 * (np.long(grid_sizze_41543) * np.long(group_sizze_41544))) != 0):
            self.mainDetailedzisegmap_intragroup_41549_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_27932),
                                                                    np.int32(n_27936),
                                                                    np.int64(i32_res_27951),
                                                                    np.int64(Ty_41537),
                                                                    np.int64(Tx_41538),
                                                                    np.int64(gridDim_x_41539),
                                                                    np.int64(gridDim_y_41540),
                                                                    np.int64(group_sizze_41544),
                                                                    np.int64(count_shmem_41545),
                                                                    mem_43390,
                                                                    mem_43394,
                                                                    mem_43465,
                                                                    mem_43525)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_41549_var,
                                       ((np.long(grid_sizze_41543) * np.long(group_sizze_41544)),),
                                       (np.long(group_sizze_41544),))
            if synchronous:
              sync(self)
          mem_43465 = None
          defunc_3_map_res_mem_43534 = mem_43525
        else:
          mem_43528 = opencl_alloc(self, bytes_43380, "mem_43528")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43528, np.int64(0),
                                                      mem_43394, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27951, N_27931)
          mem_43533 = opencl_alloc(self, bytes_43541, "mem_43533")
          if slt64((i32_res_27945 * np.int64(2)), segred_group_sizze_30614):
            segment_sizze_nonzzero_44731 = smax64(np.int64(1), i32_res_27945)
            num_threads_44732 = (num_groups_30615 * segred_group_sizze_30614)
            if ((1 * (np.long(num_groups_30615) * np.long(segred_group_sizze_30614))) != 0):
              self.mainDetailedzisegred_small_30476_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30614))),
                                                                 np.int64(N_27931),
                                                                 np.int64(m_27932),
                                                                 np.int64(N_27933),
                                                                 np.int64(i32_res_27945),
                                                                 np.int64(i32_res_27951),
                                                                 np.int64(num_groups_30615),
                                                                 images_mem_43378,
                                                                 binop_p_mem_43387,
                                                                 mem_43528,
                                                                 mem_43533,
                                                                 np.int64(segment_sizze_nonzzero_44731))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_30476_var,
                                         ((np.long(num_groups_30615) * np.long(segred_group_sizze_30614)),),
                                         (np.long(segred_group_sizze_30614),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44752 = sdiv_up64(num_groups_30615,
                                                 smax64(np.int64(1),
                                                        ((m_27932 * i32_res_27951) * i32_res_27951)))
            elements_per_thread_44753 = sdiv_up64(i32_res_27945,
                                                  (segred_group_sizze_30614 * groups_per_segment_44752))
            virt_num_groups_44754 = (groups_per_segment_44752 * ((m_27932 * i32_res_27951) * i32_res_27951))
            num_threads_44755 = (num_groups_30615 * segred_group_sizze_30614)
            threads_per_segment_44756 = (groups_per_segment_44752 * segred_group_sizze_30614)
            group_res_arr_mem_44757 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_30614 * virt_num_groups_44754)),
                                                   "group_res_arr_mem_44757")
            mainDetailedzicounter_mem_44759 = self.mainDetailedzicounter_mem_44759
            if ((1 * (np.long(num_groups_30615) * np.long(segred_group_sizze_30614))) != 0):
              self.mainDetailedzisegred_large_30476_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30614))),
                                                                 np.int64(N_27931),
                                                                 np.int64(N_27933),
                                                                 np.int64(i32_res_27945),
                                                                 np.int64(i32_res_27951),
                                                                 np.int64(num_groups_30615),
                                                                 images_mem_43378,
                                                                 binop_p_mem_43387,
                                                                 mem_43528,
                                                                 mem_43533,
                                                                 np.int64(groups_per_segment_44752),
                                                                 np.int64(elements_per_thread_44753),
                                                                 np.int64(virt_num_groups_44754),
                                                                 np.int64(threads_per_segment_44756),
                                                                 group_res_arr_mem_44757,
                                                                 mainDetailedzicounter_mem_44759)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_30476_var,
                                         ((np.long(num_groups_30615) * np.long(segred_group_sizze_30614)),),
                                         (np.long(segred_group_sizze_30614),))
              if synchronous:
                sync(self)
          mem_43528 = None
          defunc_3_map_res_mem_43534 = mem_43533
        defunc_3_map_res_mem_43540 = defunc_3_map_res_mem_43534
      defunc_3_map_res_mem_43546 = defunc_3_map_res_mem_43540
    m_28082 = (np.int32(2) * k2p2zq_27949)
    nm_28083 = (k2p2zq_27949 * m_28082)
    i32_res_28084 = sext_i32_i64(nm_28083)
    bounds_invalid_upwards_28085 = slt64(i32_res_28084, np.int64(0))
    valid_28086 = not(bounds_invalid_upwards_28085)
    range_valid_c_28087 = True
    assert valid_28086, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28084,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28092 = (m_28082 == np.int32(0))
    nonzzero_28093 = not(zzero_28092)
    nonzzero_cert_28094 = True
    assert nonzzero_28093, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    loop_nonempty_28095 = slt32(np.int32(0), k2p2zq_27949)
    loop_not_taken_28096 = not(loop_nonempty_28095)
    protect_assert_disj_28097 = (nonzzero_28093 or loop_not_taken_28096)
    nonzzero_cert_28098 = True
    assert protect_assert_disj_28097, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:55:35-50\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    i32_res_28099 = sext_i32_i64(m_28082)
    x_28100 = (i32_res_27951 * i32_res_28099)
    dim_ok_28101 = (x_28100 == i32_res_28084)
    dim_ok_cert_28102 = True
    assert dim_ok_28101, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28103 = (i32_res_28099 - i32_res_27951)
    empty_slice_28104 = (j_m_i_28103 == np.int64(0))
    m_28105 = (j_m_i_28103 - np.int64(1))
    i_p_m_t_s_28106 = (i32_res_27951 + m_28105)
    zzero_leq_i_p_m_t_s_28107 = sle64(np.int64(0), i_p_m_t_s_28106)
    i_p_m_t_s_leq_w_28108 = slt64(i_p_m_t_s_28106, i32_res_28099)
    i_lte_j_28109 = sle64(i32_res_27951, i32_res_28099)
    y_28110 = (i_lte_j_28032 and i_p_m_t_s_leq_w_28108)
    y_28111 = (zzero_leq_i_p_m_t_s_28107 and y_28110)
    y_28112 = (i_lte_j_28109 and y_28111)
    forwards_ok_28113 = (i_lte_j_28032 and y_28112)
    ok_or_empty_28114 = (empty_slice_28104 or forwards_ok_28113)
    index_ok_28115 = (ok_or_empty_28048 and ok_or_empty_28114)
    index_certs_28116 = True
    assert index_ok_28115, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:55:35-50\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27951,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27951,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28099,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27951,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28099,
                                                                                                                                                                                                                   "]."))
    dim_match_28117 = (i32_res_27951 == j_m_i_28103)
    empty_or_match_cert_28118 = True
    assert dim_match_28117, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:55:35-50\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_27951,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28103,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_27951,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_27951,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_30829 = self.max_group_size
    fits_30830 = sle64(i32_res_28084, max_group_sizze_30829)
    suff_intra_par_30828 = (self.sizes["mainDetailed.suff_intra_par_11"] <= i32_res_28084)
    intra_suff_and_fits_30831 = (suff_intra_par_30828 and fits_30830)
    nest_sizze_31315 = (m_27932 * i32_res_28084)
    segmap_group_sizze_31316 = self.sizes["mainDetailed.segmap_group_size_31275"]
    suff_intra_par_31343 = (self.sizes["mainDetailed.suff_intra_par_13"] <= i32_res_28084)
    intra_suff_and_fits_31344 = (fits_30830 and suff_intra_par_31343)
    segmap_group_sizze_31380 = self.sizes["mainDetailed.segmap_group_size_31181"]
    segmap_group_sizze_31396 = self.sizes["mainDetailed.segmap_group_size_31114"]
    segmap_group_sizze_31430 = self.sizes["mainDetailed.segmap_group_size_31060"]
    y_31440 = (i32_res_27951 * j_m_i_28103)
    nest_sizze_31441 = (m_27932 * y_31440)
    segmap_group_sizze_31442 = self.sizes["mainDetailed.segmap_group_size_30895"]
    segmap_usable_groups_31381 = sdiv_up_safe64(m_27932,
                                                segmap_group_sizze_31380)
    segmap_usable_groups_31397 = sdiv_up_safe64(nest_sizze_31315,
                                                segmap_group_sizze_31396)
    segmap_usable_groups_31431 = sdiv_up_safe64(nest_sizze_31315,
                                                segmap_group_sizze_31430)
    bytes_43549 = (np.int64(4) * i32_res_28084)
    bytes_43572 = (np.int64(4) * nest_sizze_31315)
    binop_x_43623 = (j_m_i_28103 * nest_sizze_30561)
    bytes_43621 = (np.int64(4) * binop_x_43623)
    local_memory_capacity_44856 = self.max_local_memory
    if (sle64((bytes_43549 + bytes_43549),
              sext_i32_i64(local_memory_capacity_44856)) and intra_suff_and_fits_30831):
      mem_43570 = opencl_alloc(self, bytes_43541, "mem_43570")
      if ((1 * (np.long(m_27932) * np.long(i32_res_28084))) != 0):
        self.mainDetailedzisegmap_intragroup_30711_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43549)),
                                                                cl.LocalMemory(np.long(bytes_43549)),
                                                                np.int32(k2p2zq_27949),
                                                                np.int64(i32_res_27951),
                                                                np.int32(m_28082),
                                                                np.int64(i32_res_28084),
                                                                np.int64(i32_res_28099),
                                                                defunc_3_map_res_mem_43546,
                                                                mem_43570)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_30711_var,
                                   ((np.long(m_27932) * np.long(i32_res_28084)),),
                                   (np.long(i32_res_28084),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43625 = mem_43570
    else:
      segmap_usable_groups_31317 = sdiv_up64(nest_sizze_31315,
                                             segmap_group_sizze_31316)
      mem_43574 = opencl_alloc(self, bytes_43572, "mem_43574")
      if ((1 * (np.long(segmap_usable_groups_31317) * np.long(segmap_group_sizze_31316))) != 0):
        self.mainDetailedzisegmap_31272_var.set_args(self.global_failure,
                                                     np.int64(m_27932),
                                                     np.int32(k2p2zq_27949),
                                                     np.int64(i32_res_27951),
                                                     np.int32(m_28082),
                                                     np.int64(i32_res_28084),
                                                     defunc_3_map_res_mem_43546,
                                                     mem_43574)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31272_var,
                                   ((np.long(segmap_usable_groups_31317) * np.long(segmap_group_sizze_31316)),),
                                   (np.long(segmap_group_sizze_31316),))
        if synchronous:
          sync(self)
      ctx_param_ext_43575 = m_27932
      ctx_param_ext_43576 = i32_res_28084
      ctx_param_ext_43577 = np.int64(0)
      ctx_param_ext_43578 = i32_res_28084
      ctx_param_ext_43579 = m_27932
      ctx_param_ext_43580 = np.int64(1)
      ctx_param_ext_43581 = i32_res_28084
      mem_param_43582 = mem_43574
      i_31333 = np.int32(0)
      one_45816 = np.int32(1)
      for counter_45815 in range(k2p2zq_27949):
        i32_res_31335 = sext_i32_i64(i_31333)
        local_memory_capacity_44816 = self.max_local_memory
        if intra_suff_and_fits_31344:
          gauss_jordan_res_ixfn_43604 = m_27932
        else:
          gauss_jordan_res_ixfn_43604 = ctx_param_ext_43579
        local_memory_capacity_44817 = self.max_local_memory
        if intra_suff_and_fits_31344:
          gauss_jordan_res_ixfn_43605 = i32_res_28084
        else:
          gauss_jordan_res_ixfn_43605 = ctx_param_ext_43581
        local_memory_capacity_44818 = self.max_local_memory
        if intra_suff_and_fits_31344:
          gauss_jordan_res_ixfn_43606 = m_27932
        else:
          gauss_jordan_res_ixfn_43606 = ctx_param_ext_43575
        local_memory_capacity_44819 = self.max_local_memory
        if intra_suff_and_fits_31344:
          gauss_jordan_res_ixfn_43607 = i32_res_28084
        else:
          gauss_jordan_res_ixfn_43607 = ctx_param_ext_43576
        local_memory_capacity_44820 = self.max_local_memory
        if intra_suff_and_fits_31344:
          gauss_jordan_res_ixfn_43608 = i32_res_28084
        else:
          gauss_jordan_res_ixfn_43608 = ctx_param_ext_43578
        local_memory_capacity_44821 = self.max_local_memory
        if intra_suff_and_fits_31344:
          gauss_jordan_res_ixfn_43609 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43609 = ctx_param_ext_43580
        local_memory_capacity_44822 = self.max_local_memory
        if intra_suff_and_fits_31344:
          gauss_jordan_res_ixfn_43610 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43610 = ctx_param_ext_43577
        local_memory_capacity_44850 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44850)) and sle64(bytes_43549,
                                                                        sext_i32_i64(local_memory_capacity_44850))) and intra_suff_and_fits_31344):
          mem_43587 = opencl_alloc(self, bytes_43572, "mem_43587")
          group_sizze_44826 = self.sizes["mainDetailed.group_size_44826"]
          num_groups_44827 = sdiv_up64((m_27932 * i32_res_28084),
                                       group_sizze_44826)
          if ((1 * (np.long(num_groups_44827) * np.long(group_sizze_44826))) != 0):
            self.mainDetailedzicopy_44823_var.set_args(np.int64(m_27932),
                                                       np.int64(i32_res_28084),
                                                       np.int64(ctx_param_ext_43577),
                                                       np.int64(ctx_param_ext_43578),
                                                       np.int64(ctx_param_ext_43580),
                                                       mem_param_43582,
                                                       mem_43587)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_44823_var,
                                       ((np.long(num_groups_44827) * np.long(group_sizze_44826)),),
                                       (np.long(group_sizze_44826),))
            if synchronous:
              sync(self)
          mem_43595 = opencl_alloc(self, bytes_43572, "mem_43595")
          if ((1 * (np.long(m_27932) * np.long(i32_res_28084))) != 0):
            self.mainDetailedzisegmap_intragroup_30938_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_43549)),
                                                                    np.int64(m_27932),
                                                                    np.int32(k2p2zq_27949),
                                                                    np.int32(m_28082),
                                                                    np.int64(i32_res_28084),
                                                                    np.int32(i_31333),
                                                                    np.int64(i32_res_31335),
                                                                    np.int64(ctx_param_ext_43577),
                                                                    np.int64(ctx_param_ext_43578),
                                                                    np.int64(ctx_param_ext_43580),
                                                                    mem_param_43582,
                                                                    mem_43587,
                                                                    mem_43595)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_30938_var,
                                       ((np.long(m_27932) * np.long(i32_res_28084)),),
                                       (np.long(i32_res_28084),))
            if synchronous:
              sync(self)
          mem_43587 = None
          gauss_jordan_res_mem_43611 = mem_43595
        else:
          mem_43598 = opencl_alloc(self, m_27932, "mem_43598")
          if ((1 * (np.long(segmap_usable_groups_31381) * np.long(segmap_group_sizze_31380))) != 0):
            self.mainDetailedzisegmap_31179_var.set_args(self.global_failure,
                                                         np.int64(m_27932),
                                                         np.int64(i32_res_31335),
                                                         np.int64(ctx_param_ext_43577),
                                                         np.int64(ctx_param_ext_43578),
                                                         np.int64(ctx_param_ext_43580),
                                                         mem_param_43582,
                                                         mem_43598)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_31179_var,
                                       ((np.long(segmap_usable_groups_31381) * np.long(segmap_group_sizze_31380)),),
                                       (np.long(segmap_group_sizze_31380),))
            if synchronous:
              sync(self)
          mem_43602 = opencl_alloc(self, bytes_43572, "mem_43602")
          if ((1 * (np.long(segmap_usable_groups_31397) * np.long(segmap_group_sizze_31396))) != 0):
            self.mainDetailedzisegmap_31111_var.set_args(self.global_failure,
                                                         np.int64(m_27932),
                                                         np.int32(k2p2zq_27949),
                                                         np.int32(m_28082),
                                                         np.int64(i32_res_28084),
                                                         np.int32(i_31333),
                                                         np.int64(i32_res_31335),
                                                         np.int64(ctx_param_ext_43577),
                                                         np.int64(ctx_param_ext_43578),
                                                         np.int64(ctx_param_ext_43580),
                                                         mem_param_43582,
                                                         mem_43598, mem_43602)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_31111_var,
                                       ((np.long(segmap_usable_groups_31397) * np.long(segmap_group_sizze_31396)),),
                                       (np.long(segmap_group_sizze_31396),))
            if synchronous:
              sync(self)
          mem_43598 = None
          if ((1 * (np.long(segmap_usable_groups_31431) * np.long(segmap_group_sizze_31430))) != 0):
            self.mainDetailedzisegmap_31057_var.set_args(self.global_failure,
                                                         np.int64(m_27932),
                                                         np.int64(i32_res_28084),
                                                         np.int64(ctx_param_ext_43577),
                                                         np.int64(ctx_param_ext_43578),
                                                         np.int64(ctx_param_ext_43580),
                                                         mem_param_43582,
                                                         mem_43602)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_31057_var,
                                       ((np.long(segmap_usable_groups_31431) * np.long(segmap_group_sizze_31430)),),
                                       (np.long(segmap_group_sizze_31430),))
            if synchronous:
              sync(self)
          mem_43602 = None
          gauss_jordan_res_mem_43611 = mem_param_43582
        ctx_param_ext_tmp_44807 = gauss_jordan_res_ixfn_43606
        ctx_param_ext_tmp_44808 = gauss_jordan_res_ixfn_43607
        ctx_param_ext_tmp_44809 = gauss_jordan_res_ixfn_43610
        ctx_param_ext_tmp_44810 = gauss_jordan_res_ixfn_43608
        ctx_param_ext_tmp_44811 = gauss_jordan_res_ixfn_43604
        ctx_param_ext_tmp_44812 = gauss_jordan_res_ixfn_43609
        ctx_param_ext_tmp_44813 = gauss_jordan_res_ixfn_43605
        mem_param_tmp_44814 = gauss_jordan_res_mem_43611
        ctx_param_ext_43575 = ctx_param_ext_tmp_44807
        ctx_param_ext_43576 = ctx_param_ext_tmp_44808
        ctx_param_ext_43577 = ctx_param_ext_tmp_44809
        ctx_param_ext_43578 = ctx_param_ext_tmp_44810
        ctx_param_ext_43579 = ctx_param_ext_tmp_44811
        ctx_param_ext_43580 = ctx_param_ext_tmp_44812
        ctx_param_ext_43581 = ctx_param_ext_tmp_44813
        mem_param_43582 = mem_param_tmp_44814
        i_31333 += one_45816
      gauss_jordan_res_r_ixfn_43612 = ctx_param_ext_43575
      gauss_jordan_res_r_ixfn_43613 = ctx_param_ext_43576
      gauss_jordan_res_r_ixfn_43614 = ctx_param_ext_43577
      gauss_jordan_res_r_ixfn_43615 = ctx_param_ext_43578
      gauss_jordan_res_r_ixfn_43616 = ctx_param_ext_43579
      gauss_jordan_res_r_ixfn_43617 = ctx_param_ext_43580
      gauss_jordan_res_r_ixfn_43618 = ctx_param_ext_43581
      gauss_jordan_res_r_mem_43619 = mem_param_43582
      mem_43574 = None
      segmap_usable_groups_31443 = sdiv_up64(nest_sizze_31441,
                                             segmap_group_sizze_31442)
      mem_43624 = opencl_alloc(self, bytes_43621, "mem_43624")
      if ((1 * (np.long(segmap_usable_groups_31443) * np.long(segmap_group_sizze_31442))) != 0):
        self.mainDetailedzisegmap_30891_var.set_args(self.global_failure,
                                                     np.int64(m_27932),
                                                     np.int64(i32_res_27951),
                                                     np.int64(i32_res_28084),
                                                     np.int64(i32_res_28099),
                                                     np.int64(x_28100),
                                                     np.int64(j_m_i_28103),
                                                     np.int64(gauss_jordan_res_r_ixfn_43614),
                                                     np.int64(gauss_jordan_res_r_ixfn_43615),
                                                     np.int64(gauss_jordan_res_r_ixfn_43617),
                                                     gauss_jordan_res_r_mem_43619,
                                                     mem_43624)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30891_var,
                                   ((np.long(segmap_usable_groups_31443) * np.long(segmap_group_sizze_31442)),),
                                   (np.long(segmap_group_sizze_31442),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43619 = None
      defunc_3_map_res_mem_43625 = mem_43624
    defunc_3_map_res_mem_43546 = None
    suff_outer_par_31451 = (self.sizes["mainDetailed.suff_outer_par_16"] <= m_27932)
    segmap_group_sizze_31473 = self.sizes["mainDetailed.segmap_group_size_31455"]
    max_num_groups_44857 = self.sizes["mainDetailed.segmap_num_groups_31457"]
    num_groups_31474 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27932,
                                                            segmap_group_sizze_31473),
                                                  sext_i32_i64(max_num_groups_44857))))
    suff_outer_par_31558 = (self.sizes["mainDetailed.suff_outer_par_17"] <= nest_sizze_30561)
    nest_sizze_31574 = (i32_res_27945 * nest_sizze_30561)
    segred_group_sizze_31575 = self.sizes["mainDetailed.segred_group_size_31517"]
    max_num_groups_44858 = self.sizes["mainDetailed.segred_num_groups_31519"]
    num_groups_31576 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31574,
                                                            segred_group_sizze_31575),
                                                  sext_i32_i64(max_num_groups_44858))))
    Ty_41683 = self.sizes["mainDetailed.Ty_41680"]
    Ry_41684 = self.sizes["mainDetailed.Ry_41682"]
    Tx_41685 = self.sizes["mainDetailed.Tx_41679"]
    Rx_41686 = self.sizes["mainDetailed.Rx_41681"]
    Tk_41687 = self.sizes["mainDetailed.Tk_41678"]
    TxRx_41690 = (Tx_41685 * Rx_41686)
    TyRy_41691 = (Ty_41683 * Ry_41684)
    a_loc_szz_41693 = (Tk_41687 * TyRy_41691)
    binop_x_41694 = (Tx_41685 * Tk_41687)
    b_loc_szz_41695 = (Rx_41686 * binop_x_41694)
    group_sizze_41699 = (Ty_41683 * Tx_41685)
    bytes_43644 = (np.int64(4) * nest_sizze_30561)
    binop_x_43658 = (Ry_41684 * group_sizze_41699)
    binop_x_43659 = (Rx_41686 * binop_x_43658)
    bytes_43656 = (np.int64(4) * binop_x_43659)
    binop_x_43650 = (Ry_41684 * Rx_41686)
    bytes_43649 = (np.int64(4) * binop_x_43650)
    bytes_43661 = (np.int64(4) * a_loc_szz_41693)
    bytes_43663 = (np.int64(4) * b_loc_szz_41695)
    bytes_43732 = (np.int64(4) * binop_x_43658)
    binop_x_43738 = (Rx_41686 * group_sizze_41699)
    bytes_43736 = (np.int64(4) * binop_x_43738)
    bytes_43724 = (np.int64(4) * Ry_41684)
    bytes_43726 = (np.int64(4) * Rx_41686)
    binop_x_44420 = (np.int64(4) * Ty_41683)
    binop_x_44421 = (Tx_41685 * binop_x_44420)
    binop_x_44422 = (Ry_41684 * binop_x_44421)
    sizze_44423 = (Rx_41686 * binop_x_44422)
    num_threads_44496 = (segmap_group_sizze_31473 * num_groups_31474)
    total_sizze_44497 = (bytes_43445 * num_threads_44496)
    local_memory_capacity_44988 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44988)) and suff_outer_par_31451):
      mem_43628 = opencl_alloc(self, bytes_43395, "mem_43628")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43628, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_27933, m_27932)
      mem_43646 = opencl_alloc(self, bytes_43644, "mem_43646")
      mem_43631 = opencl_alloc(self, total_sizze_44497, "mem_43631")
      if ((1 * (np.long(num_groups_31474) * np.long(segmap_group_sizze_31473))) != 0):
        self.mainDetailedzisegmap_31453_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     np.int32(n_27936),
                                                     np.int32(k2p2zq_27949),
                                                     np.int64(i32_res_27951),
                                                     np.int64(num_groups_31474),
                                                     binop_p_mem_43387,
                                                     mem_43628, mem_43631,
                                                     mem_43646)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31453_var,
                                   ((np.long(num_groups_31474) * np.long(segmap_group_sizze_31473)),),
                                   (np.long(segmap_group_sizze_31473),))
        if synchronous:
          sync(self)
      mem_43628 = None
      mem_43631 = None
      mem_43844 = opencl_alloc(self, bytes_43644, "mem_43844")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43844, np.int64(0),
                                                  mem_43646, np.int64(0),
                                                  np.int64(1), m_27932,
                                                  i32_res_27951)
      mem_43646 = None
      defunc_3_map_res_mem_43846 = mem_43844
    else:
      local_memory_capacity_44987 = self.max_local_memory
      if (sle64((bytes_43661 + bytes_43663),
                sext_i32_i64(local_memory_capacity_44987)) and suff_outer_par_31558):
        tk_div_tx_41688 = sdiv_up64(Tk_41687, Tx_41685)
        tk_div_ty_41689 = sdiv_up64(Tk_41687, Ty_41683)
        gridDim_x_41696 = sdiv_up64(i32_res_27951, TxRx_41690)
        gridDim_y_41697 = sdiv_up64(m_27932, TyRy_41691)
        grid_sizze_41698 = (gridDim_x_41696 * gridDim_y_41697)
        full_tiles_41727 = squot64(i32_res_27945, Tk_41687)
        kk_41934 = (Tk_41687 * full_tiles_41727)
        mem_43836 = opencl_alloc(self, bytes_43644, "mem_43836")
        if ((1 * (np.long(grid_sizze_41698) * np.long(group_sizze_41699))) != 0):
          self.mainDetailedzisegmap_intragroup_41702_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43663)),
                                                                  cl.LocalMemory(np.long(bytes_43661)),
                                                                  np.int64(m_27932),
                                                                  np.int64(N_27933),
                                                                  np.int64(i32_res_27945),
                                                                  np.int64(i32_res_27951),
                                                                  np.int64(gridDim_x_41696),
                                                                  np.int64(full_tiles_41727),
                                                                  np.int64(kk_41934),
                                                                  images_mem_43378,
                                                                  mem_43390,
                                                                  mem_43836)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41702_var,
                                     ((np.long(grid_sizze_41698) * np.long(group_sizze_41699)),),
                                     (np.long(group_sizze_41699),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43841 = mem_43836
      else:
        mem_43840 = opencl_alloc(self, bytes_43644, "mem_43840")
        if slt64((i32_res_27945 * np.int64(2)), segred_group_sizze_31575):
          segment_sizze_nonzzero_44927 = smax64(np.int64(1), i32_res_27945)
          num_threads_44928 = (num_groups_31576 * segred_group_sizze_31575)
          if ((1 * (np.long(num_groups_31576) * np.long(segred_group_sizze_31575))) != 0):
            self.mainDetailedzisegred_small_31523_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31575))),
                                                               np.int64(N_27931),
                                                               np.int64(m_27932),
                                                               np.int64(N_27933),
                                                               np.int64(i32_res_27945),
                                                               np.int64(i32_res_27951),
                                                               np.int64(num_groups_31576),
                                                               images_mem_43378,
                                                               binop_p_mem_43387,
                                                               mem_43840,
                                                               np.int64(segment_sizze_nonzzero_44927))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31523_var,
                                       ((np.long(num_groups_31576) * np.long(segred_group_sizze_31575)),),
                                       (np.long(segred_group_sizze_31575),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44948 = sdiv_up64(num_groups_31576,
                                               smax64(np.int64(1),
                                                      (m_27932 * i32_res_27951)))
          elements_per_thread_44949 = sdiv_up64(i32_res_27945,
                                                (segred_group_sizze_31575 * groups_per_segment_44948))
          virt_num_groups_44950 = (groups_per_segment_44948 * (m_27932 * i32_res_27951))
          num_threads_44951 = (num_groups_31576 * segred_group_sizze_31575)
          threads_per_segment_44952 = (groups_per_segment_44948 * segred_group_sizze_31575)
          group_res_arr_mem_44953 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31575 * virt_num_groups_44950)),
                                                 "group_res_arr_mem_44953")
          mainDetailedzicounter_mem_44955 = self.mainDetailedzicounter_mem_44955
          if ((1 * (np.long(num_groups_31576) * np.long(segred_group_sizze_31575))) != 0):
            self.mainDetailedzisegred_large_31523_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31575))),
                                                               np.int64(N_27931),
                                                               np.int64(N_27933),
                                                               np.int64(i32_res_27945),
                                                               np.int64(i32_res_27951),
                                                               np.int64(num_groups_31576),
                                                               images_mem_43378,
                                                               binop_p_mem_43387,
                                                               mem_43840,
                                                               np.int64(groups_per_segment_44948),
                                                               np.int64(elements_per_thread_44949),
                                                               np.int64(virt_num_groups_44950),
                                                               np.int64(threads_per_segment_44952),
                                                               group_res_arr_mem_44953,
                                                               mainDetailedzicounter_mem_44955)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31523_var,
                                       ((np.long(num_groups_31576) * np.long(segred_group_sizze_31575)),),
                                       (np.long(segred_group_sizze_31575),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43841 = mem_43840
      defunc_3_map_res_mem_43846 = defunc_3_map_res_mem_43841
    binop_p_mem_43387 = None
    mem_43390 = None
    suff_outer_par_31592 = (self.sizes["mainDetailed.suff_outer_par_18"] <= m_27932)
    segmap_group_sizze_31613 = self.sizes["mainDetailed.segmap_group_size_31596"]
    max_num_groups_44989 = self.sizes["mainDetailed.segmap_num_groups_31598"]
    num_groups_31614 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27932,
                                                            segmap_group_sizze_31613),
                                                  sext_i32_i64(max_num_groups_44989))))
    suff_outer_par_31693 = (self.sizes["mainDetailed.suff_outer_par_19"] <= nest_sizze_30561)
    segred_group_sizze_31708 = self.sizes["mainDetailed.segred_group_size_31654"]
    max_num_groups_44990 = self.sizes["mainDetailed.segred_num_groups_31656"]
    num_groups_31709 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43543,
                                                            segred_group_sizze_31708),
                                                  sext_i32_i64(max_num_groups_44990))))
    tile_sizze_42146 = self.sizes["mainDetailed.tile_size_42145"]
    group_sizze_42147 = (tile_sizze_42146 * tile_sizze_42146)
    bytes_43878 = (np.int64(4) * group_sizze_42147)
    binop_x_44436 = (np.int64(4) * tile_sizze_42146)
    sizze_44437 = (tile_sizze_42146 * binop_x_44436)
    num_threads_44500 = (segmap_group_sizze_31613 * num_groups_31614)
    total_sizze_44501 = (bytes_43445 * num_threads_44500)
    local_memory_capacity_45076 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45076)) and suff_outer_par_31592):
      mem_43850 = opencl_alloc(self, bytes_43440, "mem_43850")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43850, np.int64(0),
                                                  defunc_3_map_res_mem_43625,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27951 * i32_res_27951),
                                                  m_27932)
      mem_43853 = opencl_alloc(self, bytes_43644, "mem_43853")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43853, np.int64(0),
                                                  defunc_3_map_res_mem_43846,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27951, m_27932)
      mem_43871 = opencl_alloc(self, bytes_43644, "mem_43871")
      mem_43856 = opencl_alloc(self, total_sizze_44501, "mem_43856")
      if ((1 * (np.long(num_groups_31614) * np.long(segmap_group_sizze_31613))) != 0):
        self.mainDetailedzisegmap_31594_var.set_args(self.global_failure,
                                                     np.int64(m_27932),
                                                     np.int32(k2p2zq_27949),
                                                     np.int64(i32_res_27951),
                                                     np.int64(num_groups_31614),
                                                     mem_43850, mem_43853,
                                                     mem_43856, mem_43871)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31594_var,
                                   ((np.long(num_groups_31614) * np.long(segmap_group_sizze_31613)),),
                                   (np.long(segmap_group_sizze_31613),))
        if synchronous:
          sync(self)
      mem_43850 = None
      mem_43853 = None
      mem_43856 = None
      mem_43910 = opencl_alloc(self, bytes_43644, "mem_43910")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43910, np.int64(0),
                                                  mem_43871, np.int64(0),
                                                  np.int64(1), m_27932,
                                                  i32_res_27951)
      mem_43871 = None
      defunc_4_map_res_mem_43912 = mem_43910
    else:
      local_memory_capacity_45075 = self.max_local_memory
      if (sle64((bytes_43878 + bytes_43878),
                sext_i32_i64(local_memory_capacity_45075)) and suff_outer_par_31693):
        mem_43875 = opencl_alloc(self, bytes_43541, "mem_43875")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43875, np.int64(0),
                                                    defunc_3_map_res_mem_43625,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27951,
                                                    (m_27932 * i32_res_27951))
        num_groups_x_42148 = sdiv_up64(m_27932, tile_sizze_42146)
        num_groups_y_42149 = sdiv_up64(i32_res_27951, tile_sizze_42146)
        num_groups_top_42150 = (num_groups_x_42148 * num_groups_y_42149)
        num_whole_tiles_42167 = squot64(i32_res_27951, tile_sizze_42146)
        residual_input_42294 = srem64(i32_res_27951, tile_sizze_42146)
        cond_42295 = (residual_input_42294 == np.int64(0))
        mem_43902 = opencl_alloc(self, bytes_43644, "mem_43902")
        if ((1 * (np.long(num_groups_top_42150) * np.long(group_sizze_42147))) != 0):
          self.mainDetailedzisegmap_intragroup_42151_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43878)),
                                                                  cl.LocalMemory(np.long(bytes_43878)),
                                                                  np.int64(m_27932),
                                                                  np.int64(i32_res_27951),
                                                                  np.int64(num_groups_y_42149),
                                                                  np.int64(num_whole_tiles_42167),
                                                                  np.int64(residual_input_42294),
                                                                  np.byte(cond_42295),
                                                                  defunc_3_map_res_mem_43846,
                                                                  mem_43875,
                                                                  mem_43902)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42151_var,
                                     ((np.long(num_groups_top_42150) * np.long(group_sizze_42147)),),
                                     (np.long(group_sizze_42147),))
          if synchronous:
            sync(self)
        mem_43875 = None
        defunc_4_map_res_mem_43907 = mem_43902
      else:
        mem_43906 = opencl_alloc(self, bytes_43644, "mem_43906")
        if slt64((i32_res_27951 * np.int64(2)), segred_group_sizze_31708):
          segment_sizze_nonzzero_45015 = smax64(np.int64(1), i32_res_27951)
          num_threads_45016 = (num_groups_31709 * segred_group_sizze_31708)
          if ((1 * (np.long(num_groups_31709) * np.long(segred_group_sizze_31708))) != 0):
            self.mainDetailedzisegred_small_31660_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31708))),
                                                               np.int64(m_27932),
                                                               np.int64(i32_res_27951),
                                                               np.int64(num_groups_31709),
                                                               defunc_3_map_res_mem_43625,
                                                               defunc_3_map_res_mem_43846,
                                                               mem_43906,
                                                               np.int64(segment_sizze_nonzzero_45015))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31660_var,
                                       ((np.long(num_groups_31709) * np.long(segred_group_sizze_31708)),),
                                       (np.long(segred_group_sizze_31708),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45036 = sdiv_up64(num_groups_31709,
                                               smax64(np.int64(1),
                                                      (m_27932 * i32_res_27951)))
          elements_per_thread_45037 = sdiv_up64(i32_res_27951,
                                                (segred_group_sizze_31708 * groups_per_segment_45036))
          virt_num_groups_45038 = (groups_per_segment_45036 * (m_27932 * i32_res_27951))
          num_threads_45039 = (num_groups_31709 * segred_group_sizze_31708)
          threads_per_segment_45040 = (groups_per_segment_45036 * segred_group_sizze_31708)
          group_res_arr_mem_45041 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31708 * virt_num_groups_45038)),
                                                 "group_res_arr_mem_45041")
          mainDetailedzicounter_mem_45043 = self.mainDetailedzicounter_mem_45043
          if ((1 * (np.long(num_groups_31709) * np.long(segred_group_sizze_31708))) != 0):
            self.mainDetailedzisegred_large_31660_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31708))),
                                                               np.int64(i32_res_27951),
                                                               np.int64(num_groups_31709),
                                                               defunc_3_map_res_mem_43625,
                                                               defunc_3_map_res_mem_43846,
                                                               mem_43906,
                                                               np.int64(groups_per_segment_45036),
                                                               np.int64(elements_per_thread_45037),
                                                               np.int64(virt_num_groups_45038),
                                                               np.int64(threads_per_segment_45040),
                                                               group_res_arr_mem_45041,
                                                               mainDetailedzicounter_mem_45043)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31660_var,
                                       ((np.long(num_groups_31709) * np.long(segred_group_sizze_31708)),),
                                       (np.long(segred_group_sizze_31708),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43907 = mem_43906
      defunc_4_map_res_mem_43912 = defunc_4_map_res_mem_43907
    defunc_3_map_res_mem_43625 = None
    defunc_3_map_res_mem_43846 = None
    suff_outer_par_31724 = (self.sizes["mainDetailed.suff_outer_par_20"] <= m_27932)
    segmap_group_sizze_31744 = self.sizes["mainDetailed.segmap_group_size_31728"]
    max_num_groups_45077 = self.sizes["mainDetailed.segmap_num_groups_31730"]
    num_groups_31745 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27932,
                                                            segmap_group_sizze_31744),
                                                  sext_i32_i64(max_num_groups_45077))))
    comparatee_31820 = (N_27931 * m_27932)
    suff_outer_par_31821 = (self.sizes["mainDetailed.suff_outer_par_21"] <= comparatee_31820)
    nest_sizze_31835 = (i32_res_27951 * comparatee_31820)
    segred_group_sizze_31836 = self.sizes["mainDetailed.segred_group_size_31784"]
    max_num_groups_45078 = self.sizes["mainDetailed.segred_num_groups_31786"]
    num_groups_31837 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31835,
                                                            segred_group_sizze_31836),
                                                  sext_i32_i64(max_num_groups_45078))))
    Ty_42424 = self.sizes["mainDetailed.Ty_42421"]
    Ry_42425 = self.sizes["mainDetailed.Ry_42423"]
    Tx_42426 = self.sizes["mainDetailed.Tx_42420"]
    Rx_42427 = self.sizes["mainDetailed.Rx_42422"]
    Tk_42428 = self.sizes["mainDetailed.Tk_42419"]
    TxRx_42431 = (Tx_42426 * Rx_42427)
    TyRy_42432 = (Ty_42424 * Ry_42425)
    a_loc_szz_42434 = (Tk_42428 * TyRy_42432)
    binop_x_42435 = (Tx_42426 * Tk_42428)
    b_loc_szz_42436 = (Rx_42427 * binop_x_42435)
    group_sizze_42440 = (Ty_42424 * Tx_42426)
    bytes_43931 = (np.int64(4) * comparatee_31820)
    bytes_43917 = (np.int64(4) * N_27931)
    binop_x_43948 = (Ry_42425 * group_sizze_42440)
    binop_x_43949 = (Rx_42427 * binop_x_43948)
    bytes_43946 = (np.int64(4) * binop_x_43949)
    binop_x_43940 = (Ry_42425 * Rx_42427)
    bytes_43939 = (np.int64(4) * binop_x_43940)
    bytes_43951 = (np.int64(4) * a_loc_szz_42434)
    bytes_43953 = (np.int64(4) * b_loc_szz_42436)
    bytes_44022 = (np.int64(4) * binop_x_43948)
    binop_x_44028 = (Rx_42427 * group_sizze_42440)
    bytes_44026 = (np.int64(4) * binop_x_44028)
    bytes_44014 = (np.int64(4) * Ry_42425)
    bytes_44016 = (np.int64(4) * Rx_42427)
    binop_x_44450 = (np.int64(4) * Ty_42424)
    binop_x_44451 = (Tx_42426 * binop_x_44450)
    binop_x_44452 = (Ry_42425 * binop_x_44451)
    sizze_44453 = (Rx_42427 * binop_x_44452)
    num_threads_44504 = (segmap_group_sizze_31744 * num_groups_31745)
    total_sizze_44505 = (bytes_43917 * num_threads_44504)
    local_memory_capacity_45208 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45208)) and suff_outer_par_31724):
      mem_43915 = opencl_alloc(self, bytes_43644, "mem_43915")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43915, np.int64(0),
                                                  defunc_4_map_res_mem_43912,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27951, m_27932)
      mem_43933 = opencl_alloc(self, bytes_43931, "mem_43933")
      mem_43918 = opencl_alloc(self, total_sizze_44505, "mem_43918")
      if ((1 * (np.long(num_groups_31745) * np.long(segmap_group_sizze_31744))) != 0):
        self.mainDetailedzisegmap_31726_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     np.int32(k2p2zq_27949),
                                                     np.int64(i32_res_27951),
                                                     np.int64(num_groups_31745),
                                                     mem_43394, mem_43915,
                                                     mem_43918, mem_43933)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31726_var,
                                   ((np.long(num_groups_31745) * np.long(segmap_group_sizze_31744)),),
                                   (np.long(segmap_group_sizze_31744),))
        if synchronous:
          sync(self)
      mem_43915 = None
      mem_43918 = None
      mem_44134 = opencl_alloc(self, bytes_43931, "mem_44134")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44134, np.int64(0),
                                                  mem_43933, np.int64(0),
                                                  np.int64(1), m_27932, N_27931)
      mem_43933 = None
      defunc_3_map_res_mem_44136 = mem_44134
    else:
      local_memory_capacity_45207 = self.max_local_memory
      if (sle64((bytes_43951 + bytes_43953),
                sext_i32_i64(local_memory_capacity_45207)) and suff_outer_par_31821):
        mem_43936 = opencl_alloc(self, bytes_43380, "mem_43936")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43936, np.int64(0),
                                                    mem_43394, np.int64(0),
                                                    np.int64(1), i32_res_27951,
                                                    N_27931)
        tk_div_tx_42429 = sdiv_up64(Tk_42428, Tx_42426)
        tk_div_ty_42430 = sdiv_up64(Tk_42428, Ty_42424)
        gridDim_x_42437 = sdiv_up64(N_27931, TxRx_42431)
        gridDim_y_42438 = sdiv_up64(m_27932, TyRy_42432)
        grid_sizze_42439 = (gridDim_x_42437 * gridDim_y_42438)
        full_tiles_42468 = squot64(i32_res_27951, Tk_42428)
        kk_42671 = (Tk_42428 * full_tiles_42468)
        mem_44126 = opencl_alloc(self, bytes_43931, "mem_44126")
        if ((1 * (np.long(grid_sizze_42439) * np.long(group_sizze_42440))) != 0):
          self.mainDetailedzisegmap_intragroup_42443_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43953)),
                                                                  cl.LocalMemory(np.long(bytes_43951)),
                                                                  np.int64(N_27931),
                                                                  np.int64(m_27932),
                                                                  np.int64(i32_res_27951),
                                                                  np.int64(gridDim_x_42437),
                                                                  np.int64(full_tiles_42468),
                                                                  np.int64(kk_42671),
                                                                  defunc_4_map_res_mem_43912,
                                                                  mem_43936,
                                                                  mem_44126)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42443_var,
                                     ((np.long(grid_sizze_42439) * np.long(group_sizze_42440)),),
                                     (np.long(group_sizze_42440),))
          if synchronous:
            sync(self)
        mem_43936 = None
        defunc_3_map_res_mem_44131 = mem_44126
      else:
        mem_44130 = opencl_alloc(self, bytes_43931, "mem_44130")
        if slt64((i32_res_27951 * np.int64(2)), segred_group_sizze_31836):
          segment_sizze_nonzzero_45147 = smax64(np.int64(1), i32_res_27951)
          num_threads_45148 = (num_groups_31837 * segred_group_sizze_31836)
          if ((1 * (np.long(num_groups_31837) * np.long(segred_group_sizze_31836))) != 0):
            self.mainDetailedzisegred_small_31790_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31836))),
                                                               np.int64(N_27931),
                                                               np.int64(m_27932),
                                                               np.int64(i32_res_27951),
                                                               np.int64(num_groups_31837),
                                                               mem_43394,
                                                               defunc_4_map_res_mem_43912,
                                                               mem_44130,
                                                               np.int64(segment_sizze_nonzzero_45147))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31790_var,
                                       ((np.long(num_groups_31837) * np.long(segred_group_sizze_31836)),),
                                       (np.long(segred_group_sizze_31836),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45168 = sdiv_up64(num_groups_31837,
                                               smax64(np.int64(1),
                                                      (m_27932 * N_27931)))
          elements_per_thread_45169 = sdiv_up64(i32_res_27951,
                                                (segred_group_sizze_31836 * groups_per_segment_45168))
          virt_num_groups_45170 = (groups_per_segment_45168 * (m_27932 * N_27931))
          num_threads_45171 = (num_groups_31837 * segred_group_sizze_31836)
          threads_per_segment_45172 = (groups_per_segment_45168 * segred_group_sizze_31836)
          group_res_arr_mem_45173 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31836 * virt_num_groups_45170)),
                                                 "group_res_arr_mem_45173")
          mainDetailedzicounter_mem_45175 = self.mainDetailedzicounter_mem_45175
          if ((1 * (np.long(num_groups_31837) * np.long(segred_group_sizze_31836))) != 0):
            self.mainDetailedzisegred_large_31790_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31836))),
                                                               np.int64(N_27931),
                                                               np.int64(i32_res_27951),
                                                               np.int64(num_groups_31837),
                                                               mem_43394,
                                                               defunc_4_map_res_mem_43912,
                                                               mem_44130,
                                                               np.int64(groups_per_segment_45168),
                                                               np.int64(elements_per_thread_45169),
                                                               np.int64(virt_num_groups_45170),
                                                               np.int64(threads_per_segment_45172),
                                                               group_res_arr_mem_45173,
                                                               mainDetailedzicounter_mem_45175)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31790_var,
                                       ((np.long(num_groups_31837) * np.long(segred_group_sizze_31836)),),
                                       (np.long(segred_group_sizze_31836),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44131 = mem_44130
      defunc_3_map_res_mem_44136 = defunc_3_map_res_mem_44131
    mem_43394 = None
    defunc_4_map_res_mem_43912 = None
    i_28211 = (N_27931 - np.int64(1))
    x_28212 = sle64(np.int64(0), i_28211)
    y_28213 = slt64(i_28211, N_27931)
    bounds_check_28214 = (x_28212 and y_28213)
    index_certs_28215 = True
    assert bounds_check_28214, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:82:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:76:5-85:25\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28211,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27931,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_31966 = sle64(N_27931, max_group_sizze_30829)
    suff_intra_par_31964 = (self.sizes["mainDetailed.suff_intra_par_24"] <= N_27931)
    intra_suff_and_fits_31967 = (suff_intra_par_31964 and fits_31966)
    segscan_group_sizze_32116 = self.sizes["mainDetailed.segscan_group_size_32093"]
    max_num_groups_45209 = self.sizes["mainDetailed.segscan_num_groups_32095"]
    num_groups_32117 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_31820,
                                                            segscan_group_sizze_32116),
                                                  sext_i32_i64(max_num_groups_45209))))
    segmap_group_sizze_32136 = self.sizes["mainDetailed.segmap_group_size_32084"]
    mem_44139 = opencl_alloc(self, bytes_43931, "mem_44139")
    self.futhark_builtinzhreplicate_f32(mem_44139, (m_27932 * N_27931), np.nan)
    mem_44142 = opencl_alloc(self, bytes_43931, "mem_44142")
    self.futhark_builtinzhreplicate_i32(mem_44142, (m_27932 * N_27931),
                                        np.int32(0))
    segmap_group_sizze_32172 = self.sizes["mainDetailed.segmap_group_size_32009"]
    bytes_44154 = (np.int64(4) * m_27932)
    bytes_44145 = (np.int64(8) * N_27931)
    bytes_44163 = (np.int64(8) * comparatee_31820)
    local_memory_capacity_45311 = self.max_local_memory
    if (sle64((((bytes_44145 + bytes_43917) + bytes_43917) + bytes_43917),
              sext_i32_i64(local_memory_capacity_45311)) and intra_suff_and_fits_31967):
      mem_44155 = opencl_alloc(self, bytes_44154, "mem_44155")
      mem_44158 = opencl_alloc(self, bytes_43931, "mem_44158")
      mem_44161 = opencl_alloc(self, bytes_43931, "mem_44161")
      if ((1 * (np.long(m_27932) * np.long(N_27931))) != 0):
        self.mainDetailedzisegmap_intragroup_31889_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43917)),
                                                                cl.LocalMemory(np.long(bytes_43917)),
                                                                cl.LocalMemory(np.long(bytes_43917)),
                                                                cl.LocalMemory(np.long(bytes_44145)),
                                                                np.int64(N_27931),
                                                                np.int64(N_27933),
                                                                np.int64(i_28211),
                                                                images_mem_43378,
                                                                defunc_3_map_res_mem_44136,
                                                                mem_44155,
                                                                mem_44158,
                                                                mem_44161)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_31889_var,
                                   ((np.long(m_27932) * np.long(N_27931)),),
                                   (np.long(N_27931),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_44173 = mem_44155
      defunc_4_map_res_mem_44174 = mem_44158
      defunc_4_map_res_mem_44175 = mem_44161
    else:
      mem_44165 = opencl_alloc(self, bytes_44163, "mem_44165")
      mem_44168 = opencl_alloc(self, bytes_43931, "mem_44168")
      if slt64(np.int64(0), (m_27932 * N_27931)):
        stage1_max_num_groups_45245 = self.max_group_size
        stage1_num_groups_45246 = smin64(stage1_max_num_groups_45245,
                                         num_groups_32117)
        num_threads_45247 = sext_i64_i32((stage1_num_groups_45246 * segscan_group_sizze_32116))
        if ((1 * (np.long(stage1_num_groups_45246) * np.long(segscan_group_sizze_32116))) != 0):
          self.mainDetailedziscan_stage1_32099_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_32116)))),
                                                            np.int64(N_27931),
                                                            np.int64(m_27932),
                                                            np.int64(N_27933),
                                                            images_mem_43378,
                                                            defunc_3_map_res_mem_44136,
                                                            mem_44165,
                                                            mem_44168,
                                                            np.int32(num_threads_45247))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_32099_var,
                                     ((np.long(stage1_num_groups_45246) * np.long(segscan_group_sizze_32116)),),
                                     (np.long(segscan_group_sizze_32116),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45246))) != 0):
          self.mainDetailedziscan_stage2_32099_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_45246)))),
                                                            np.int64(N_27931),
                                                            np.int64(m_27932),
                                                            mem_44165,
                                                            np.int64(stage1_num_groups_45246),
                                                            np.int32(num_threads_45247))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_32099_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45246)),),
                                     (np.long(stage1_num_groups_45246),))
          if synchronous:
            sync(self)
        required_groups_45289 = sext_i64_i32(sdiv_up64((m_27932 * N_27931),
                                                       segscan_group_sizze_32116))
        if ((1 * (np.long(num_groups_32117) * np.long(segscan_group_sizze_32116))) != 0):
          self.mainDetailedziscan_stage3_32099_var.set_args(self.global_failure,
                                                            np.int64(N_27931),
                                                            np.int64(m_27932),
                                                            np.int64(num_groups_32117),
                                                            mem_44165,
                                                            np.int32(num_threads_45247),
                                                            np.int32(required_groups_45289))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_32099_var,
                                     ((np.long(num_groups_32117) * np.long(segscan_group_sizze_32116)),),
                                     (np.long(segscan_group_sizze_32116),))
          if synchronous:
            sync(self)
      segmap_usable_groups_32137 = sdiv_up64(m_27932, segmap_group_sizze_32136)
      mem_44171 = opencl_alloc(self, bytes_44154, "mem_44171")
      if ((1 * (np.long(segmap_usable_groups_32137) * np.long(segmap_group_sizze_32136))) != 0):
        self.mainDetailedzisegmap_32082_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     np.int64(i_28211),
                                                     mem_44165, mem_44171)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32082_var,
                                   ((np.long(segmap_usable_groups_32137) * np.long(segmap_group_sizze_32136)),),
                                   (np.long(segmap_group_sizze_32136),))
        if synchronous:
          sync(self)
      segmap_usable_groups_32173 = sdiv_up64(comparatee_31820,
                                             segmap_group_sizze_32172)
      if ((1 * (np.long(segmap_usable_groups_32173) * np.long(segmap_group_sizze_32172))) != 0):
        self.mainDetailedzisegmap_32006_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     mem_44139, mem_44142,
                                                     mem_44165, mem_44168)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32006_var,
                                   ((np.long(segmap_usable_groups_32173) * np.long(segmap_group_sizze_32172)),),
                                   (np.long(segmap_group_sizze_32172),))
        if synchronous:
          sync(self)
      mem_44165 = None
      mem_44168 = None
      defunc_4_map_res_mem_44173 = mem_44171
      defunc_4_map_res_mem_44174 = mem_44139
      defunc_4_map_res_mem_44175 = mem_44142
    mem_44139 = None
    mem_44142 = None
    suff_outer_par_32221 = (self.sizes["mainDetailed.suff_outer_par_28"] <= m_27932)
    fits_32299 = sle64(i32_res_27945, max_group_sizze_30829)
    suff_intra_par_32297 = (self.sizes["mainDetailed.suff_intra_par_29"] <= i32_res_27945)
    intra_suff_and_fits_32300 = (suff_intra_par_32297 and fits_32299)
    segmap_group_sizze_32264 = self.sizes["mainDetailed.segmap_group_size_32233"]
    nest_sizze_32387 = (m_27932 * i32_res_27945)
    segred_group_sizze_32388 = self.sizes["mainDetailed.segred_group_size_32371"]
    max_num_groups_45312 = self.sizes["mainDetailed.segred_num_groups_32373"]
    num_groups_32389 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32387,
                                                            segred_group_sizze_32388),
                                                  sext_i32_i64(max_num_groups_45312))))
    segred_group_sizze_32402 = self.sizes["mainDetailed.segred_group_size_32350"]
    max_num_groups_45313 = self.sizes["mainDetailed.segred_num_groups_32352"]
    num_groups_32403 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32387,
                                                            segred_group_sizze_32402),
                                                  sext_i32_i64(max_num_groups_45313))))
    segmap_group_sizze_32418 = self.sizes["mainDetailed.segmap_group_size_32335"]
    bytes_44184 = (np.int64(4) * segmap_group_sizze_32264)
    local_memory_capacity_45467 = self.max_local_memory
    if (sle64((bytes_44184 + bytes_44184),
              sext_i32_i64(local_memory_capacity_45467)) and suff_outer_par_32221):
      segmap_usable_groups_32265 = sdiv_up64(m_27932, segmap_group_sizze_32264)
      mem_44178 = opencl_alloc(self, bytes_43395, "mem_44178")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44178, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_27933, m_27932)
      mem_44181 = opencl_alloc(self, bytes_43931, "mem_44181")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44181, np.int64(0),
                                                  defunc_4_map_res_mem_44174,
                                                  np.int64(0), np.int64(1),
                                                  N_27931, m_27932)
      num_whole_tiles_42885 = squot64(i32_res_27945, segmap_group_sizze_32264)
      residual_input_43006 = srem64(i32_res_27945, segmap_group_sizze_32264)
      cond_43007 = (residual_input_43006 == np.int64(0))
      mem_44209 = opencl_alloc(self, bytes_44154, "mem_44209")
      mem_44211 = opencl_alloc(self, bytes_44154, "mem_44211")
      mem_44213 = opencl_alloc(self, bytes_44154, "mem_44213")
      if ((1 * (np.long(segmap_usable_groups_32265) * np.long(segmap_group_sizze_32264))) != 0):
        self.mainDetailedzisegmap_intragroup_42877_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44184)),
                                                                cl.LocalMemory(np.long(bytes_44184)),
                                                                np.int64(m_27932),
                                                                np.int32(n_27936),
                                                                np.float32(hfrac_27938),
                                                                np.int64(i32_res_27945),
                                                                np.int32(k2p2_27947),
                                                                np.int64(num_whole_tiles_42885),
                                                                np.int64(residual_input_43006),
                                                                np.byte(cond_43007),
                                                                mem_44178,
                                                                mem_44181,
                                                                mem_44209,
                                                                mem_44211,
                                                                mem_44213)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42877_var,
                                   ((np.long(segmap_usable_groups_32265) * np.long(segmap_group_sizze_32264)),),
                                   (np.long(segmap_group_sizze_32264),))
        if synchronous:
          sync(self)
      mem_44178 = None
      mem_44181 = None
      defunc_3_map_res_mem_44237 = mem_44209
      defunc_3_map_res_mem_44238 = mem_44211
      defunc_3_map_res_mem_44239 = mem_44213
    else:
      local_memory_capacity_45466 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_27945) + (np.int32(4) * i32_res_27945)),
                sext_i32_i64(local_memory_capacity_45466)) and intra_suff_and_fits_32300):
        mem_44218 = opencl_alloc(self, bytes_44154, "mem_44218")
        mem_44220 = opencl_alloc(self, bytes_44154, "mem_44220")
        mem_44222 = opencl_alloc(self, bytes_44154, "mem_44222")
        if ((1 * (np.long(m_27932) * np.long(i32_res_27945))) != 0):
          self.mainDetailedzisegmap_intragroup_32229_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27945))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27945))),
                                                                  np.int64(N_27931),
                                                                  np.int64(N_27933),
                                                                  np.float32(hfrac_27938),
                                                                  np.int64(i32_res_27945),
                                                                  np.int32(k2p2_27947),
                                                                  images_mem_43378,
                                                                  defunc_4_map_res_mem_44174,
                                                                  mem_44218,
                                                                  mem_44220,
                                                                  mem_44222)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_32229_var,
                                     ((np.long(m_27932) * np.long(i32_res_27945)),),
                                     (np.long(i32_res_27945),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44234 = mem_44218
        defunc_3_map_res_mem_44235 = mem_44220
        defunc_3_map_res_mem_44236 = mem_44222
      else:
        mem_44225 = opencl_alloc(self, bytes_44154, "mem_44225")
        if slt64((i32_res_27945 * np.int64(2)), segred_group_sizze_32388):
          segment_sizze_nonzzero_45341 = smax64(np.int64(1), i32_res_27945)
          num_threads_45342 = (num_groups_32389 * segred_group_sizze_32388)
          if ((1 * (np.long(num_groups_32389) * np.long(segred_group_sizze_32388))) != 0):
            self.mainDetailedzisegred_small_32377_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32388))),
                                                               np.int64(m_27932),
                                                               np.int64(N_27933),
                                                               np.int64(i32_res_27945),
                                                               np.int64(num_groups_32389),
                                                               images_mem_43378,
                                                               mem_44225,
                                                               np.int64(segment_sizze_nonzzero_45341))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32377_var,
                                       ((np.long(num_groups_32389) * np.long(segred_group_sizze_32388)),),
                                       (np.long(segred_group_sizze_32388),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45362 = sdiv_up64(num_groups_32389,
                                               smax64(np.int64(1), m_27932))
          elements_per_thread_45363 = sdiv_up64(i32_res_27945,
                                                (segred_group_sizze_32388 * groups_per_segment_45362))
          virt_num_groups_45364 = (groups_per_segment_45362 * m_27932)
          num_threads_45365 = (num_groups_32389 * segred_group_sizze_32388)
          threads_per_segment_45366 = (groups_per_segment_45362 * segred_group_sizze_32388)
          group_res_arr_mem_45367 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32388 * virt_num_groups_45364)),
                                                 "group_res_arr_mem_45367")
          mainDetailedzicounter_mem_45369 = self.mainDetailedzicounter_mem_45369
          if ((1 * (np.long(num_groups_32389) * np.long(segred_group_sizze_32388))) != 0):
            self.mainDetailedzisegred_large_32377_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32388))),
                                                               np.int64(N_27933),
                                                               np.int64(i32_res_27945),
                                                               np.int64(num_groups_32389),
                                                               images_mem_43378,
                                                               mem_44225,
                                                               np.int64(groups_per_segment_45362),
                                                               np.int64(elements_per_thread_45363),
                                                               np.int64(virt_num_groups_45364),
                                                               np.int64(threads_per_segment_45366),
                                                               group_res_arr_mem_45367,
                                                               mainDetailedzicounter_mem_45369)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32377_var,
                                       ((np.long(num_groups_32389) * np.long(segred_group_sizze_32388)),),
                                       (np.long(segred_group_sizze_32388),))
            if synchronous:
              sync(self)
        mem_44228 = opencl_alloc(self, bytes_44154, "mem_44228")
        if slt64((i32_res_27945 * np.int64(2)), segred_group_sizze_32402):
          segment_sizze_nonzzero_45401 = smax64(np.int64(1), i32_res_27945)
          num_threads_45402 = (num_groups_32403 * segred_group_sizze_32402)
          if ((1 * (np.long(num_groups_32403) * np.long(segred_group_sizze_32402))) != 0):
            self.mainDetailedzisegred_small_32356_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32402))),
                                                               np.int64(N_27931),
                                                               np.int64(m_27932),
                                                               np.int64(i32_res_27945),
                                                               np.int64(num_groups_32403),
                                                               defunc_4_map_res_mem_44174,
                                                               mem_44225,
                                                               mem_44228,
                                                               np.int64(segment_sizze_nonzzero_45401))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32356_var,
                                       ((np.long(num_groups_32403) * np.long(segred_group_sizze_32402)),),
                                       (np.long(segred_group_sizze_32402),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45422 = sdiv_up64(num_groups_32403,
                                               smax64(np.int64(1), m_27932))
          elements_per_thread_45423 = sdiv_up64(i32_res_27945,
                                                (segred_group_sizze_32402 * groups_per_segment_45422))
          virt_num_groups_45424 = (groups_per_segment_45422 * m_27932)
          num_threads_45425 = (num_groups_32403 * segred_group_sizze_32402)
          threads_per_segment_45426 = (groups_per_segment_45422 * segred_group_sizze_32402)
          group_res_arr_mem_45427 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32402 * virt_num_groups_45424)),
                                                 "group_res_arr_mem_45427")
          mainDetailedzicounter_mem_45429 = self.mainDetailedzicounter_mem_45429
          if ((1 * (np.long(num_groups_32403) * np.long(segred_group_sizze_32402))) != 0):
            self.mainDetailedzisegred_large_32356_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32402))),
                                                               np.int64(N_27931),
                                                               np.int64(i32_res_27945),
                                                               np.int64(num_groups_32403),
                                                               defunc_4_map_res_mem_44174,
                                                               mem_44225,
                                                               mem_44228,
                                                               np.int64(groups_per_segment_45422),
                                                               np.int64(elements_per_thread_45423),
                                                               np.int64(virt_num_groups_45424),
                                                               np.int64(threads_per_segment_45426),
                                                               group_res_arr_mem_45427,
                                                               mainDetailedzicounter_mem_45429)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32356_var,
                                       ((np.long(num_groups_32403) * np.long(segred_group_sizze_32402)),),
                                       (np.long(segred_group_sizze_32402),))
            if synchronous:
              sync(self)
        segmap_usable_groups_32419 = sdiv_up64(m_27932,
                                               segmap_group_sizze_32418)
        mem_44231 = opencl_alloc(self, bytes_44154, "mem_44231")
        mem_44233 = opencl_alloc(self, bytes_44154, "mem_44233")
        if ((1 * (np.long(segmap_usable_groups_32419) * np.long(segmap_group_sizze_32418))) != 0):
          self.mainDetailedzisegmap_32333_var.set_args(self.global_failure,
                                                       np.int64(m_27932),
                                                       np.float32(hfrac_27938),
                                                       np.int32(k2p2_27947),
                                                       mem_44225, mem_44228,
                                                       mem_44231, mem_44233)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32333_var,
                                     ((np.long(segmap_usable_groups_32419) * np.long(segmap_group_sizze_32418)),),
                                     (np.long(segmap_group_sizze_32418),))
          if synchronous:
            sync(self)
        mem_44228 = None
        defunc_3_map_res_mem_44234 = mem_44231
        defunc_3_map_res_mem_44235 = mem_44225
        defunc_3_map_res_mem_44236 = mem_44233
      defunc_3_map_res_mem_44237 = defunc_3_map_res_mem_44234
      defunc_3_map_res_mem_44238 = defunc_3_map_res_mem_44235
      defunc_3_map_res_mem_44239 = defunc_3_map_res_mem_44236
    segred_group_sizze_32439 = self.sizes["mainDetailed.segred_group_size_32438"]
    max_num_groups_45468 = self.sizes["mainDetailed.segred_num_groups_32440"]
    num_groups_32441 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27932,
                                                            segred_group_sizze_32439),
                                                  sext_i32_i64(max_num_groups_45468))))
    mem_44242 = opencl_alloc(self, np.int64(4), "mem_44242")
    mainDetailedzicounter_mem_45469 = self.mainDetailedzicounter_mem_45469
    group_res_arr_mem_45471 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_32439 * num_groups_32441)),
                                           "group_res_arr_mem_45471")
    num_threads_45473 = (num_groups_32441 * segred_group_sizze_32439)
    if ((1 * (np.long(num_groups_32441) * np.long(segred_group_sizze_32439))) != 0):
      self.mainDetailedzisegred_nonseg_32446_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32439))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_27932),
                                                          np.int64(num_groups_32441),
                                                          defunc_3_map_res_mem_44237,
                                                          mem_44242,
                                                          mainDetailedzicounter_mem_45469,
                                                          group_res_arr_mem_45471,
                                                          np.int64(num_threads_45473))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_32446_var,
                                 ((np.long(num_groups_32441) * np.long(segred_group_sizze_32439)),),
                                 (np.long(segred_group_sizze_32439),))
      if synchronous:
        sync(self)
    read_res_45823 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45823, mem_44242,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28301 = read_res_45823[0]
    mem_44242 = None
    i32_res_28306 = sext_i32_i64(defunc_2_reduce_comm_res_28301)
    bounds_invalid_upwards_28307 = slt64(i32_res_28306, np.int64(0))
    valid_28308 = not(bounds_invalid_upwards_28307)
    range_valid_c_28309 = True
    assert valid_28308, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:110:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:105:17-112:24\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_28306,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_32478 = (self.sizes["mainDetailed.suff_outer_par_31"] <= m_27932)
    segmap_group_sizze_32501 = self.sizes["mainDetailed.segmap_group_size_32482"]
    nest_sizze_32544 = (m_27932 * i32_res_28306)
    segred_group_sizze_32545 = self.sizes["mainDetailed.segred_group_size_32522"]
    max_num_groups_45499 = self.sizes["mainDetailed.segred_num_groups_32524"]
    num_groups_32546 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32544,
                                                            segred_group_sizze_32545),
                                                  sext_i32_i64(max_num_groups_45499))))
    bytes_44245 = (np.int64(4) * segmap_group_sizze_32501)
    local_memory_capacity_45570 = self.max_local_memory
    if (sle64((bytes_44245 + bytes_44245),
              sext_i32_i64(local_memory_capacity_45570)) and suff_outer_par_32478):
      segmap_usable_groups_32502 = sdiv_up64(m_27932, segmap_group_sizze_32501)
      num_whole_tiles_43129 = squot64(i32_res_28306, segmap_group_sizze_32501)
      residual_input_43228 = srem64(i32_res_28306, segmap_group_sizze_32501)
      cond_43229 = (residual_input_43228 == np.int64(0))
      mem_44268 = opencl_alloc(self, bytes_44154, "mem_44268")
      if ((1 * (np.long(segmap_usable_groups_32502) * np.long(segmap_group_sizze_32501))) != 0):
        self.mainDetailedzisegmap_intragroup_43109_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44245)),
                                                                cl.LocalMemory(np.long(bytes_44245)),
                                                                np.int64(N_27931),
                                                                np.int64(m_27932),
                                                                np.int64(i32_res_28306),
                                                                np.int64(num_whole_tiles_43129),
                                                                np.int64(residual_input_43228),
                                                                np.byte(cond_43229),
                                                                defunc_4_map_res_mem_44174,
                                                                defunc_3_map_res_mem_44237,
                                                                defunc_3_map_res_mem_44238,
                                                                mem_44268)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_43109_var,
                                   ((np.long(segmap_usable_groups_32502) * np.long(segmap_group_sizze_32501)),),
                                   (np.long(segmap_group_sizze_32501),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44272 = mem_44268
    else:
      mem_44271 = opencl_alloc(self, bytes_44154, "mem_44271")
      if slt64((i32_res_28306 * np.int64(2)), segred_group_sizze_32545):
        segment_sizze_nonzzero_45510 = smax64(np.int64(1), i32_res_28306)
        num_threads_45511 = (num_groups_32546 * segred_group_sizze_32545)
        if ((1 * (np.long(num_groups_32546) * np.long(segred_group_sizze_32545))) != 0):
          self.mainDetailedzisegred_small_32528_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32545))),
                                                             np.int64(N_27931),
                                                             np.int64(m_27932),
                                                             np.int64(i32_res_28306),
                                                             np.int64(num_groups_32546),
                                                             defunc_4_map_res_mem_44174,
                                                             defunc_3_map_res_mem_44237,
                                                             defunc_3_map_res_mem_44238,
                                                             mem_44271,
                                                             np.int64(segment_sizze_nonzzero_45510))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_32528_var,
                                     ((np.long(num_groups_32546) * np.long(segred_group_sizze_32545)),),
                                     (np.long(segred_group_sizze_32545),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45531 = sdiv_up64(num_groups_32546,
                                             smax64(np.int64(1), m_27932))
        elements_per_thread_45532 = sdiv_up64(i32_res_28306,
                                              (segred_group_sizze_32545 * groups_per_segment_45531))
        virt_num_groups_45533 = (groups_per_segment_45531 * m_27932)
        num_threads_45534 = (num_groups_32546 * segred_group_sizze_32545)
        threads_per_segment_45535 = (groups_per_segment_45531 * segred_group_sizze_32545)
        group_res_arr_mem_45536 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_32545 * virt_num_groups_45533)),
                                               "group_res_arr_mem_45536")
        mainDetailedzicounter_mem_45538 = self.mainDetailedzicounter_mem_45538
        if ((1 * (np.long(num_groups_32546) * np.long(segred_group_sizze_32545))) != 0):
          self.mainDetailedzisegred_large_32528_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32545))),
                                                             np.int64(N_27931),
                                                             np.int64(i32_res_28306),
                                                             np.int64(num_groups_32546),
                                                             defunc_4_map_res_mem_44174,
                                                             defunc_3_map_res_mem_44237,
                                                             defunc_3_map_res_mem_44238,
                                                             mem_44271,
                                                             np.int64(groups_per_segment_45531),
                                                             np.int64(elements_per_thread_45532),
                                                             np.int64(virt_num_groups_45533),
                                                             np.int64(threads_per_segment_45535),
                                                             group_res_arr_mem_45536,
                                                             mainDetailedzicounter_mem_45538)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_32528_var,
                                     ((np.long(num_groups_32546) * np.long(segred_group_sizze_32545)),),
                                     (np.long(segred_group_sizze_32545),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44272 = mem_44271
    iota32_arg_28331 = (N_27931 - i32_res_27945)
    bounds_invalid_upwards_28332 = slt64(iota32_arg_28331, np.int64(0))
    valid_28333 = not(bounds_invalid_upwards_28332)
    range_valid_c_28334 = True
    assert valid_28333, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:118:22-35\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28331,
                                                                                                                                                                                                                                      " is invalid."))
    x_28336 = (np.int32(1) + n_27936)
    i_28337 = (n_27936 - np.int32(1))
    i_28338 = sext_i32_i64(i_28337)
    x_28339 = sle64(np.int64(0), i_28338)
    y_28340 = slt64(i_28338, N_27931)
    bounds_check_28341 = (x_28339 and y_28340)
    index_certs_28342 = True
    assert bounds_check_28341, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:116:64-84\n   #1  bfastfinal.fut:114:15-118:36\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                 i_28338,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27931,
                                                                                                                                                                                                                 "]."))
    read_res_45825 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45825, mappingindices_mem_43377,
                    device_offset=(np.long(i_28338) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28343 = read_res_45825[0]
    i32_res_28344 = sitofp_i32_f32(r32_arg_28343)
    range_valid_c_28345 = True
    assert valid_28333, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:130:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28331,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_32623 = self.sizes["mainDetailed.segmap_group_size_32606"]
    segmap_usable_groups_32624 = sdiv_up64(iota32_arg_28331,
                                           segmap_group_sizze_32623)
    bytes_44274 = (np.int64(4) * iota32_arg_28331)
    mem_44275 = opencl_alloc(self, bytes_44274, "mem_44275")
    mem_44277 = opencl_alloc(self, bytes_44274, "mem_44277")
    if ((1 * (np.long(segmap_usable_groups_32624) * np.long(segmap_group_sizze_32623))) != 0):
      self.mainDetailedzisegmap_32604_var.set_args(self.global_failure,
                                                   np.float32(lam_27939),
                                                   np.int64(iota32_arg_28331),
                                                   np.int32(x_28336),
                                                   np.float32(i32_res_28344),
                                                   mappingindices_mem_43377,
                                                   mem_44275, mem_44277)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32604_var,
                                 ((np.long(segmap_usable_groups_32624) * np.long(segmap_group_sizze_32623)),),
                                 (np.long(segmap_group_sizze_32623),))
      if synchronous:
        sync(self)
    mem_44275 = None
    max_res_28361 = smax64(np.int64(1), iota32_arg_28331)
    bounds_invalid_upwards_28362 = slt64(max_res_28361, np.int64(1))
    distance_28363 = (max_res_28361 - np.int64(1))
    valid_28364 = not(bounds_invalid_upwards_28362)
    range_valid_c_28365 = True
    assert valid_28364, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28361,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    fits_33112 = sle64(iota32_arg_28331, max_group_sizze_30829)
    suff_intra_par_33110 = (self.sizes["mainDetailed.suff_intra_par_34"] <= iota32_arg_28331)
    intra_suff_and_fits_33113 = (suff_intra_par_33110 and fits_33112)
    segmap_group_sizze_33742 = self.sizes["mainDetailed.segmap_group_size_33722"]
    max_num_groups_45576 = self.sizes["mainDetailed.segmap_num_groups_33724"]
    num_groups_33743 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27932,
                                                            segmap_group_sizze_33742),
                                                  sext_i32_i64(max_num_groups_45576))))
    nest_sizze_33764 = (m_27932 * iota32_arg_28331)
    segscan_group_sizze_33765 = self.sizes["mainDetailed.segscan_group_size_33681"]
    max_num_groups_45577 = self.sizes["mainDetailed.segscan_num_groups_33683"]
    num_groups_33766 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33764,
                                                            segscan_group_sizze_33765),
                                                  sext_i32_i64(max_num_groups_45577))))
    segred_group_sizze_33803 = self.sizes["mainDetailed.segred_group_size_33627"]
    max_num_groups_45578 = self.sizes["mainDetailed.segred_num_groups_33629"]
    num_groups_33804 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33764,
                                                            segred_group_sizze_33803),
                                                  sext_i32_i64(max_num_groups_45578))))
    segmap_group_sizze_33843 = self.sizes["mainDetailed.segmap_group_size_33601"]
    segmap_group_sizze_33866 = self.sizes["mainDetailed.segmap_group_size_33584"]
    segmap_group_sizze_33884 = self.sizes["mainDetailed.segmap_group_size_33526"]
    segmap_group_sizze_33913 = self.sizes["mainDetailed.segmap_group_size_33387"]
    bytes_44278 = (np.int64(4) * nest_sizze_33764)
    mem_44280 = opencl_alloc(self, bytes_44278, "mem_44280")
    self.futhark_builtinzhreplicate_f32(mem_44280, (m_27932 * iota32_arg_28331),
                                        np.nan)
    segmap_group_sizze_34028 = self.sizes["mainDetailed.segmap_group_size_33335"]
    local_memory_capacity_45800 = self.max_local_memory
    if (sle64((((((((bytes_44274 + bytes_44274) + (np.int32(1) * iota32_arg_28331)) + (np.int32(4) * iota32_arg_28331)) + (np.int32(4) * iota32_arg_28331)) + bytes_44274) + bytes_44274) + bytes_44274),
              sext_i32_i64(local_memory_capacity_45800)) and intra_suff_and_fits_33113):
      mem_44320 = opencl_alloc(self, bytes_44278, "mem_44320")
      mem_44323 = opencl_alloc(self, bytes_44278, "mem_44323")
      mem_44325 = opencl_alloc(self, bytes_44154, "mem_44325")
      mem_44327 = opencl_alloc(self, bytes_44154, "mem_44327")
      mem_44329 = opencl_alloc(self, bytes_44154, "mem_44329")
      if ((1 * (np.long(m_27932) * np.long(iota32_arg_28331))) != 0):
        self.mainDetailedzisegmap_intragroup_32673_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(bytes_44274)),
                                                                cl.LocalMemory(np.long(bytes_44274)),
                                                                cl.LocalMemory(np.long(bytes_44274)),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28331))),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28331))),
                                                                cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28331))),
                                                                cl.LocalMemory(np.long(bytes_44274)),
                                                                cl.LocalMemory(np.long(bytes_44274)),
                                                                np.int64(N_27931),
                                                                np.int32(n_27936),
                                                                np.int64(iota32_arg_28331),
                                                                np.int64(distance_28363),
                                                                defunc_4_map_res_mem_44173,
                                                                defunc_4_map_res_mem_44174,
                                                                defunc_4_map_res_mem_44175,
                                                                defunc_3_map_res_mem_44237,
                                                                defunc_3_map_res_mem_44238,
                                                                defunc_3_map_res_mem_44239,
                                                                defunc_0_f_res_mem_44272,
                                                                mem_44277,
                                                                mem_44320,
                                                                mem_44323,
                                                                mem_44325,
                                                                mem_44327,
                                                                mem_44329)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_32673_var,
                                   ((np.long(m_27932) * np.long(iota32_arg_28331)),),
                                   (np.long(iota32_arg_28331),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_44398 = mem_44320
      defunc_0_f_res_mem_44399 = mem_44323
      defunc_0_f_res_mem_44400 = mem_44325
      defunc_0_f_res_mem_44401 = mem_44327
      defunc_0_f_res_mem_44402 = mem_44329
    else:
      mem_44332 = opencl_alloc(self, bytes_44154, "mem_44332")
      mem_44334 = opencl_alloc(self, bytes_44154, "mem_44334")
      if ((1 * (np.long(num_groups_33743) * np.long(segmap_group_sizze_33742))) != 0):
        self.mainDetailedzisegmap_33720_var.set_args(self.global_failure,
                                                     np.int64(m_27932),
                                                     np.int64(num_groups_33743),
                                                     defunc_4_map_res_mem_44173,
                                                     defunc_3_map_res_mem_44238,
                                                     defunc_3_map_res_mem_44239,
                                                     mem_44332, mem_44334)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33720_var,
                                   ((np.long(num_groups_33743) * np.long(segmap_group_sizze_33742)),),
                                   (np.long(segmap_group_sizze_33742),))
        if synchronous:
          sync(self)
      mem_44338 = opencl_alloc(self, bytes_44278, "mem_44338")
      if slt64(np.int64(0), (m_27932 * iota32_arg_28331)):
        stage1_max_num_groups_45616 = self.max_group_size
        stage1_num_groups_45617 = smin64(stage1_max_num_groups_45616,
                                         num_groups_33766)
        num_threads_45618 = sext_i64_i32((stage1_num_groups_45617 * segscan_group_sizze_33765))
        if ((1 * (np.long(stage1_num_groups_45617) * np.long(segscan_group_sizze_33765))) != 0):
          self.mainDetailedziscan_stage1_33687_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * segscan_group_sizze_33765)))),
                                                            np.int64(N_27931),
                                                            np.int64(m_27932),
                                                            np.int64(iota32_arg_28331),
                                                            defunc_4_map_res_mem_44174,
                                                            defunc_3_map_res_mem_44237,
                                                            defunc_3_map_res_mem_44238,
                                                            defunc_0_f_res_mem_44272,
                                                            mem_44334,
                                                            mem_44338,
                                                            np.int32(num_threads_45618))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_33687_var,
                                     ((np.long(stage1_num_groups_45617) * np.long(segscan_group_sizze_33765)),),
                                     (np.long(segscan_group_sizze_33765),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45617))) != 0):
          self.mainDetailedziscan_stage2_33687_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * stage1_num_groups_45617)))),
                                                            np.int64(m_27932),
                                                            np.int64(iota32_arg_28331),
                                                            mem_44338,
                                                            np.int64(stage1_num_groups_45617),
                                                            np.int32(num_threads_45618))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_33687_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45617)),),
                                     (np.long(stage1_num_groups_45617),))
          if synchronous:
            sync(self)
        required_groups_45660 = sext_i64_i32(sdiv_up64((m_27932 * iota32_arg_28331),
                                                       segscan_group_sizze_33765))
        if ((1 * (np.long(num_groups_33766) * np.long(segscan_group_sizze_33765))) != 0):
          self.mainDetailedziscan_stage3_33687_var.set_args(self.global_failure,
                                                            np.int64(m_27932),
                                                            np.int64(iota32_arg_28331),
                                                            np.int64(num_groups_33766),
                                                            mem_44338,
                                                            np.int32(num_threads_45618),
                                                            np.int32(required_groups_45660))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_33687_var,
                                     ((np.long(num_groups_33766) * np.long(segscan_group_sizze_33765)),),
                                     (np.long(segscan_group_sizze_33765),))
          if synchronous:
            sync(self)
      mem_44341 = opencl_alloc(self, m_27932, "mem_44341")
      mem_44343 = opencl_alloc(self, bytes_44154, "mem_44343")
      mem_44345 = opencl_alloc(self, bytes_44154, "mem_44345")
      mem_44348 = opencl_alloc(self, bytes_44278, "mem_44348")
      if slt64((iota32_arg_28331 * np.int64(2)), segred_group_sizze_33803):
        segment_sizze_nonzzero_45672 = smax64(np.int64(1), iota32_arg_28331)
        num_threads_45673 = (num_groups_33804 * segred_group_sizze_33803)
        if ((1 * (np.long(num_groups_33804) * np.long(segred_group_sizze_33803))) != 0):
          self.mainDetailedzisegred_small_33633_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33803))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33803))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33803))),
                                                             np.int64(m_27932),
                                                             np.int64(iota32_arg_28331),
                                                             np.int64(num_groups_33804),
                                                             mem_44277,
                                                             mem_44332,
                                                             mem_44334,
                                                             mem_44338,
                                                             mem_44341,
                                                             mem_44343,
                                                             mem_44345,
                                                             mem_44348,
                                                             np.int64(segment_sizze_nonzzero_45672))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_33633_var,
                                     ((np.long(num_groups_33804) * np.long(segred_group_sizze_33803)),),
                                     (np.long(segred_group_sizze_33803),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45708 = sdiv_up64(num_groups_33804,
                                             smax64(np.int64(1), m_27932))
        elements_per_thread_45709 = sdiv_up64(iota32_arg_28331,
                                              (segred_group_sizze_33803 * groups_per_segment_45708))
        virt_num_groups_45710 = (groups_per_segment_45708 * m_27932)
        num_threads_45711 = (num_groups_33804 * segred_group_sizze_33803)
        threads_per_segment_45712 = (groups_per_segment_45708 * segred_group_sizze_33803)
        group_res_arr_mem_45713 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_33803 * virt_num_groups_45710)),
                                               "group_res_arr_mem_45713")
        group_res_arr_mem_45715 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_33803 * virt_num_groups_45710)),
                                               "group_res_arr_mem_45715")
        group_res_arr_mem_45717 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_33803 * virt_num_groups_45710)),
                                               "group_res_arr_mem_45717")
        mainDetailedzicounter_mem_45719 = self.mainDetailedzicounter_mem_45719
        if ((1 * (np.long(num_groups_33804) * np.long(segred_group_sizze_33803))) != 0):
          self.mainDetailedzisegred_large_33633_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33803))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33803))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33803))),
                                                             np.int64(iota32_arg_28331),
                                                             np.int64(num_groups_33804),
                                                             mem_44277,
                                                             mem_44332,
                                                             mem_44334,
                                                             mem_44338,
                                                             mem_44341,
                                                             mem_44343,
                                                             mem_44345,
                                                             mem_44348,
                                                             np.int64(groups_per_segment_45708),
                                                             np.int64(elements_per_thread_45709),
                                                             np.int64(virt_num_groups_45710),
                                                             group_res_arr_mem_45713,
                                                             group_res_arr_mem_45715,
                                                             group_res_arr_mem_45717,
                                                             mainDetailedzicounter_mem_45719)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_33633_var,
                                     ((np.long(num_groups_33804) * np.long(segred_group_sizze_33803)),),
                                     (np.long(segred_group_sizze_33803),))
          if synchronous:
            sync(self)
      mem_44332 = None
      mem_44338 = None
      segmap_usable_groups_33844 = sdiv_up64(m_27932, segmap_group_sizze_33843)
      mem_44351 = opencl_alloc(self, m_27932, "mem_44351")
      mem_44353 = opencl_alloc(self, bytes_44154, "mem_44353")
      if ((1 * (np.long(segmap_usable_groups_33844) * np.long(segmap_group_sizze_33843))) != 0):
        self.mainDetailedzisegmap_33599_var.set_args(self.global_failure,
                                                     np.int64(m_27932),
                                                     mem_44341, mem_44343,
                                                     mem_44351, mem_44353)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33599_var,
                                   ((np.long(segmap_usable_groups_33844) * np.long(segmap_group_sizze_33843)),),
                                   (np.long(segmap_group_sizze_33843),))
        if synchronous:
          sync(self)
      mem_44341 = None
      mem_44343 = None
      segmap_usable_groups_33867 = sdiv_up64(m_27932, segmap_group_sizze_33866)
      mem_44356 = opencl_alloc(self, bytes_44154, "mem_44356")
      if ((1 * (np.long(segmap_usable_groups_33867) * np.long(segmap_group_sizze_33866))) != 0):
        self.mainDetailedzisegmap_33582_var.set_args(self.global_failure,
                                                     np.int64(m_27932),
                                                     mem_44334, mem_44345,
                                                     mem_44356)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33582_var,
                                   ((np.long(segmap_usable_groups_33867) * np.long(segmap_group_sizze_33866)),),
                                   (np.long(segmap_group_sizze_33866),))
        if synchronous:
          sync(self)
      mem_44345 = None
      segmap_usable_groups_33885 = sdiv_up64(nest_sizze_33764,
                                             segmap_group_sizze_33884)
      mem_44360 = opencl_alloc(self, bytes_44278, "mem_44360")
      if ((1 * (np.long(segmap_usable_groups_33885) * np.long(segmap_group_sizze_33884))) != 0):
        self.mainDetailedzisegmap_33523_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     np.int64(iota32_arg_28331),
                                                     defunc_4_map_res_mem_44174,
                                                     defunc_3_map_res_mem_44238,
                                                     mem_44334, mem_44360)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33523_var,
                                   ((np.long(segmap_usable_groups_33885) * np.long(segmap_group_sizze_33884)),),
                                   (np.long(segmap_group_sizze_33884),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      segmap_usable_groups_33914 = sdiv_up64(m_27932, segmap_group_sizze_33913)
      mem_44363 = opencl_alloc(self, bytes_44278, "mem_44363")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44363, np.int64(0),
                                                  mem_44360, np.int64(0),
                                                  np.int64(1), iota32_arg_28331,
                                                  m_27932)
      mem_44360 = None
      mem_44394 = opencl_alloc(self, bytes_44154, "mem_44394")
      mem_44396 = opencl_alloc(self, bytes_44154, "mem_44396")
      num_threads_44528 = (segmap_group_sizze_33913 * segmap_usable_groups_33914)
      total_sizze_44529 = (bytes_44274 * num_threads_44528)
      mem_44374 = opencl_alloc(self, total_sizze_44529, "mem_44374")
      if ((1 * (np.long(segmap_usable_groups_33914) * np.long(segmap_group_sizze_33913))) != 0):
        self.mainDetailedzisegmap_33385_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     np.int32(n_27936),
                                                     np.int64(iota32_arg_28331),
                                                     np.int64(distance_28363),
                                                     np.int64(segmap_usable_groups_33914),
                                                     defunc_4_map_res_mem_44173,
                                                     defunc_4_map_res_mem_44175,
                                                     defunc_3_map_res_mem_44238,
                                                     mem_44334, mem_44351,
                                                     mem_44353, mem_44363,
                                                     mem_44374, mem_44394,
                                                     mem_44396)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33385_var,
                                   ((np.long(segmap_usable_groups_33914) * np.long(segmap_group_sizze_33913)),),
                                   (np.long(segmap_group_sizze_33913),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_44351 = None
      mem_44353 = None
      mem_44363 = None
      mem_44374 = None
      segmap_usable_groups_34029 = sdiv_up64(nest_sizze_33764,
                                             segmap_group_sizze_34028)
      if ((1 * (np.long(segmap_usable_groups_34029) * np.long(segmap_group_sizze_34028))) != 0):
        self.mainDetailedzisegmap_33332_var.set_args(self.global_failure,
                                                     np.int64(N_27931),
                                                     np.int64(m_27932),
                                                     np.int32(n_27936),
                                                     np.int64(iota32_arg_28331),
                                                     defunc_4_map_res_mem_44175,
                                                     defunc_3_map_res_mem_44238,
                                                     mem_44280, mem_44334,
                                                     mem_44348)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33332_var,
                                   ((np.long(segmap_usable_groups_34029) * np.long(segmap_group_sizze_34028)),),
                                   (np.long(segmap_group_sizze_34028),))
        if synchronous:
          sync(self)
      mem_44334 = None
      defunc_0_f_res_mem_44398 = mem_44280
      defunc_0_f_res_mem_44399 = mem_44348
      defunc_0_f_res_mem_44400 = mem_44394
      defunc_0_f_res_mem_44401 = mem_44356
      defunc_0_f_res_mem_44402 = mem_44396
    defunc_4_map_res_mem_44175 = None
    defunc_3_map_res_mem_44237 = None
    mem_44280 = None
    out_arrsizze_44627 = m_27932
    out_arrsizze_44629 = m_27932
    out_arrsizze_44631 = m_27932
    out_arrsizze_44633 = m_27932
    out_arrsizze_44635 = m_27932
    out_arrsizze_44636 = iota32_arg_28331
    out_arrsizze_44638 = m_27932
    out_arrsizze_44639 = iota32_arg_28331
    out_arrsizze_44641 = iota32_arg_28331
    out_arrsizze_44643 = m_27932
    out_arrsizze_44645 = m_27932
    out_arrsizze_44647 = m_27932
    out_arrsizze_44649 = m_27932
    out_arrsizze_44650 = N_27931
    out_arrsizze_44652 = m_27932
    out_arrsizze_44653 = N_27931
    out_mem_44626 = defunc_0_f_res_mem_44272
    out_mem_44628 = defunc_4_map_res_mem_44173
    out_mem_44630 = defunc_3_map_res_mem_44238
    out_mem_44632 = defunc_3_map_res_mem_44239
    out_mem_44634 = defunc_0_f_res_mem_44398
    out_mem_44637 = defunc_0_f_res_mem_44399
    out_mem_44640 = mem_44277
    out_mem_44642 = defunc_0_f_res_mem_44400
    out_mem_44644 = defunc_0_f_res_mem_44401
    out_mem_44646 = defunc_0_f_res_mem_44402
    out_mem_44648 = defunc_4_map_res_mem_44174
    out_mem_44651 = defunc_3_map_res_mem_44136
    return (out_mem_44626, out_arrsizze_44627, out_mem_44628,
            out_arrsizze_44629, out_mem_44630, out_arrsizze_44631,
            out_mem_44632, out_arrsizze_44633, out_mem_44634,
            out_arrsizze_44635, out_arrsizze_44636, out_mem_44637,
            out_arrsizze_44638, out_arrsizze_44639, out_mem_44640,
            out_arrsizze_44641, out_mem_44642, out_arrsizze_44643,
            out_mem_44644, out_arrsizze_44645, out_mem_44646,
            out_arrsizze_44647, out_mem_44648, out_arrsizze_44649,
            out_arrsizze_44650, out_mem_44651, out_arrsizze_44652,
            out_arrsizze_44653)
  def futhark_mainMagnitude(self, mappingindices_mem_43377, images_mem_43378,
                            N_28624, m_28625, N_28626, trend_28627, k_28628,
                            n_28629, freq_28630, hfrac_28631, lam_28632):
    dim_match_28635 = (N_28624 == N_28626)
    empty_or_match_cert_28636 = True
    assert dim_match_28635, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:179:1-185:32\n" % ("function arguments of wrong shape",))
    i32_res_28638 = sext_i32_i64(n_28629)
    x_28639 = (np.int32(2) * k_28628)
    k2p2_28640 = (np.int32(2) + x_28639)
    cond_28641 = slt32(np.int32(0), trend_28627)
    if cond_28641:
      k2p2zq_28642 = k2p2_28640
    else:
      k2p2zq_f_res_28643 = (k2p2_28640 - np.int32(1))
      k2p2zq_28642 = k2p2zq_f_res_28643
    i32_res_28644 = sext_i32_i64(k2p2zq_28642)
    binop_x_43381 = (N_28624 * i32_res_28644)
    bytes_43380 = (np.int64(4) * binop_x_43381)
    if cond_28641:
      bounds_invalid_upwards_28646 = slt64(i32_res_28644, np.int64(0))
      valid_28647 = not(bounds_invalid_upwards_28646)
      range_valid_c_28648 = True
      assert valid_28647, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:33:17-66\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28644,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_34212 = self.sizes["mainMagnitude.segmap_group_size_34142"]
      segmap_usable_groups_34213 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_34212)
      mem_43382 = opencl_alloc(self, bytes_43380, "mem_43382")
      if ((1 * (np.long(segmap_usable_groups_34213) * np.long(segmap_group_sizze_34212))) != 0):
        self.mainMagnitudezisegmap_34139_var.set_args(self.global_failure,
                                                      np.int64(N_28624),
                                                      np.float32(freq_28630),
                                                      np.int64(i32_res_28644),
                                                      mappingindices_mem_43377,
                                                      mem_43382)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34139_var,
                                   ((np.long(segmap_usable_groups_34213) * np.long(segmap_group_sizze_34212)),),
                                   (np.long(segmap_group_sizze_34212),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43382
    else:
      bounds_invalid_upwards_28672 = slt64(i32_res_28644, np.int64(0))
      valid_28673 = not(bounds_invalid_upwards_28672)
      range_valid_c_28674 = True
      assert valid_28673, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:34:17-64\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28644,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_34386 = self.sizes["mainMagnitude.segmap_group_size_34320"]
      segmap_usable_groups_34387 = sdiv_up64(binop_x_43381,
                                             segmap_group_sizze_34386)
      mem_43386 = opencl_alloc(self, bytes_43380, "mem_43386")
      if ((1 * (np.long(segmap_usable_groups_34387) * np.long(segmap_group_sizze_34386))) != 0):
        self.mainMagnitudezisegmap_34317_var.set_args(self.global_failure,
                                                      np.int64(N_28624),
                                                      np.float32(freq_28630),
                                                      np.int64(i32_res_28644),
                                                      mappingindices_mem_43377,
                                                      mem_43386)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34317_var,
                                   ((np.long(segmap_usable_groups_34387) * np.long(segmap_group_sizze_34386)),),
                                   (np.long(segmap_group_sizze_34386),))
        if synchronous:
          sync(self)
      binop_p_mem_43387 = mem_43386
    x_28697 = (N_28624 * N_28624)
    y_28698 = (np.int64(2) * N_28624)
    x_28699 = (x_28697 + y_28698)
    x_28700 = (np.int64(1) + x_28699)
    y_28701 = (np.int64(1) + N_28624)
    zzero_28702 = (y_28701 == np.int64(0))
    nonzzero_28703 = not(zzero_28702)
    nonzzero_cert_28704 = True
    assert nonzzero_28703, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:32-60\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    x_28705 = sdiv64(x_28700, y_28701)
    x_28706 = (x_28705 - N_28624)
    binop_p_28707 = (x_28706 - np.int64(1))
    defunc_0_f_res_28708 = sext_i64_i32(binop_p_28707)
    i32_res_28709 = sitofp_i32_f32(defunc_0_f_res_28708)
    segmap_group_sizze_34469 = self.sizes["mainMagnitude.segmap_group_size_34448"]
    segmap_usable_groups_34470 = sdiv_up64(binop_x_43381,
                                           segmap_group_sizze_34469)
    mem_43390 = opencl_alloc(self, bytes_43380, "mem_43390")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43390, np.int64(0),
                                                binop_p_mem_43387, np.int64(0),
                                                np.int64(1), N_28624,
                                                i32_res_28644)
    mem_43394 = opencl_alloc(self, bytes_43380, "mem_43394")
    if ((1 * (np.long(segmap_usable_groups_34470) * np.long(segmap_group_sizze_34469))) != 0):
      self.mainMagnitudezisegmap_34445_var.set_args(self.global_failure,
                                                    np.int64(N_28624),
                                                    np.int64(i32_res_28644),
                                                    np.float32(i32_res_28709),
                                                    mem_43390, mem_43394)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_34445_var,
                                 ((np.long(segmap_usable_groups_34470) * np.long(segmap_group_sizze_34469)),),
                                 (np.long(segmap_group_sizze_34469),))
      if synchronous:
        sync(self)
    eq_x_y_28717 = (np.int64(0) == i32_res_28644)
    p_and_eq_x_y_28718 = (cond_28641 and eq_x_y_28717)
    not_p_28719 = not(cond_28641)
    p_and_eq_x_y_28720 = (eq_x_y_28717 and not_p_28719)
    empty_slice_28721 = (p_and_eq_x_y_28718 or p_and_eq_x_y_28720)
    m_28722 = (i32_res_28644 - np.int64(1))
    zzero_leq_i_p_m_t_s_28723 = sle64(np.int64(0), m_28722)
    i_p_m_t_s_leq_w_28724 = slt64(m_28722, i32_res_28644)
    i_lte_j_28725 = sle64(np.int64(0), i32_res_28644)
    y_28726 = (zzero_leq_i_p_m_t_s_28723 and i_p_m_t_s_leq_w_28724)
    y_28727 = (i_lte_j_28725 and y_28726)
    ok_or_empty_28728 = (empty_slice_28721 or y_28727)
    empty_slice_28729 = (i32_res_28638 == np.int64(0))
    m_28730 = (i32_res_28638 - np.int64(1))
    zzero_leq_i_p_m_t_s_28731 = sle64(np.int64(0), m_28730)
    i_p_m_t_s_leq_w_28732 = slt64(m_28730, N_28624)
    i_lte_j_28733 = sle64(np.int64(0), i32_res_28638)
    y_28734 = (zzero_leq_i_p_m_t_s_28731 and i_p_m_t_s_leq_w_28732)
    y_28735 = (i_lte_j_28733 and y_28734)
    ok_or_empty_28736 = (empty_slice_28729 or y_28735)
    index_ok_28737 = (ok_or_empty_28728 and ok_or_empty_28736)
    index_certs_28738 = True
    assert index_ok_28737, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:43:15-23\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28638,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28644,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28624,
                                                                                                                                                                               "]."))
    empty_slice_28740 = (i32_res_28644 == np.int64(0))
    ok_or_empty_28741 = (y_28727 or empty_slice_28740)
    index_ok_28742 = (ok_or_empty_28736 and ok_or_empty_28741)
    index_certs_28743 = True
    assert index_ok_28742, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:44:15-24\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [:",
                                                                                                                                                                               i32_res_28638,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28624,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28644,
                                                                                                                                                                               "]."))
    empty_slice_28745 = (m_28625 == np.int64(0))
    m_28746 = (m_28625 - np.int64(1))
    zzero_leq_i_p_m_t_s_28747 = sle64(np.int64(0), m_28746)
    i_p_m_t_s_leq_w_28748 = slt64(m_28746, m_28625)
    i_lte_j_28749 = sle64(np.int64(0), m_28625)
    y_28750 = (zzero_leq_i_p_m_t_s_28747 and i_p_m_t_s_leq_w_28748)
    y_28751 = (i_lte_j_28749 and y_28750)
    ok_or_empty_28752 = (empty_slice_28745 or y_28751)
    index_ok_28753 = (ok_or_empty_28736 and ok_or_empty_28752)
    index_certs_28754 = True
    assert index_ok_28753, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:45:15-28\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28638,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28625,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28624,
                                                                                                                                                                               "]."))
    suff_outer_par_34476 = (self.sizes["mainMagnitude.suff_outer_par_6"] <= m_28625)
    segmap_group_sizze_34502 = self.sizes["mainMagnitude.segmap_group_size_34480"]
    max_num_groups_44647 = self.sizes["mainMagnitude.segmap_num_groups_34482"]
    num_groups_34503 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28625,
                                                            segmap_group_sizze_34502),
                                                  sext_i32_i64(max_num_groups_44647))))
    nest_sizze_34678 = (m_28625 * i32_res_28644)
    segmap_group_sizze_34679 = self.sizes["mainMagnitude.segmap_group_size_34527"]
    max_num_groups_44648 = self.sizes["mainMagnitude.segmap_num_groups_34529"]
    num_groups_34680 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34678,
                                                            segmap_group_sizze_34679),
                                                  sext_i32_i64(max_num_groups_44648))))
    suff_outer_par_34684 = (self.sizes["mainMagnitude.suff_outer_par_7"] <= nest_sizze_34678)
    y_34708 = (i32_res_28644 * i32_res_28644)
    comparatee_34709 = (m_28625 * y_34708)
    suff_outer_par_34710 = (self.sizes["mainMagnitude.suff_outer_par_8"] <= comparatee_34709)
    nest_sizze_34730 = (i32_res_28638 * comparatee_34709)
    segred_group_sizze_34731 = self.sizes["mainMagnitude.segred_group_size_34587"]
    max_num_groups_44649 = self.sizes["mainMagnitude.segred_num_groups_34589"]
    num_groups_34732 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34730,
                                                            segred_group_sizze_34731),
                                                  sext_i32_i64(max_num_groups_44649))))
    Tx_41535 = self.sizes["mainMagnitude.Tx_41533"]
    Ty_41536 = self.sizes["mainMagnitude.Ty_41534"]
    Ty_41537 = smin64(i32_res_28644, Ty_41536)
    Tx_41538 = smin64(i32_res_28644, Tx_41535)
    gridDim_zz_41541 = sdiv_up64(m_28625, np.int64(30))
    group_sizze_41544 = (Ty_41537 * Tx_41538)
    binop_x_43396 = (m_28625 * N_28626)
    bytes_43395 = (np.int64(4) * binop_x_43396)
    bytes_43440 = (np.int64(4) * comparatee_34709)
    bytes_43399 = (np.int64(4) * y_34708)
    binop_x_43543 = (i32_res_28644 * nest_sizze_34678)
    bytes_43541 = (np.int64(4) * binop_x_43543)
    bytes_43445 = (np.int64(4) * i32_res_28644)
    binop_x_43474 = (np.int64(30) * group_sizze_41544)
    bytes_43472 = (np.int64(4) * binop_x_43474)
    binop_x_44403 = (np.int64(4) * Ty_41537)
    binop_x_44404 = (Tx_41538 * binop_x_44403)
    sizze_44405 = (np.int64(30) * binop_x_44404)
    num_threads_44534 = (segmap_group_sizze_34502 * num_groups_34503)
    total_sizze_44535 = (bytes_43399 * num_threads_44534)
    num_threads_44536 = (segmap_group_sizze_34679 * num_groups_34680)
    total_sizze_44537 = (bytes_43445 * num_threads_44536)
    local_memory_capacity_44771 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44771)) and suff_outer_par_34476):
      mem_43397 = opencl_alloc(self, bytes_43395, "mem_43397")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43397, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_28626, m_28625)
      mem_43443 = opencl_alloc(self, bytes_43440, "mem_43443")
      mem_43401 = opencl_alloc(self, total_sizze_44535, "mem_43401")
      if ((1 * (np.long(num_groups_34503) * np.long(segmap_group_sizze_34502))) != 0):
        self.mainMagnitudezisegmap_34478_var.set_args(self.global_failure,
                                                      np.int64(N_28624),
                                                      np.int64(m_28625),
                                                      np.int32(n_28629),
                                                      np.int32(k2p2zq_28642),
                                                      np.int64(i32_res_28644),
                                                      np.int64(num_groups_34503),
                                                      binop_p_mem_43387,
                                                      mem_43394, mem_43397,
                                                      mem_43401, mem_43443)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34478_var,
                                   ((np.long(num_groups_34503) * np.long(segmap_group_sizze_34502)),),
                                   (np.long(segmap_group_sizze_34502),))
        if synchronous:
          sync(self)
      mem_43397 = None
      mem_43401 = None
      mem_43544 = opencl_alloc(self, bytes_43541, "mem_43544")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43544, np.int64(0),
                                                  mem_43443, np.int64(0),
                                                  np.int64(1), m_28625,
                                                  (i32_res_28644 * i32_res_28644))
      mem_43443 = None
      defunc_3_map_res_mem_43546 = mem_43544
    else:
      local_memory_capacity_44770 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44770)) and suff_outer_par_34684):
        mem_43462 = opencl_alloc(self, bytes_43541, "mem_43462")
        mem_43446 = opencl_alloc(self, total_sizze_44537, "mem_43446")
        if ((1 * (np.long(num_groups_34680) * np.long(segmap_group_sizze_34679))) != 0):
          self.mainMagnitudezisegmap_34524_var.set_args(self.global_failure,
                                                        np.int64(m_28625),
                                                        np.int64(N_28626),
                                                        np.int32(n_28629),
                                                        np.int32(k2p2zq_28642),
                                                        np.int64(i32_res_28644),
                                                        np.int64(num_groups_34680),
                                                        images_mem_43378,
                                                        mem_43390, mem_43394,
                                                        mem_43446, mem_43462)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_34524_var,
                                     ((np.long(num_groups_34680) * np.long(segmap_group_sizze_34679)),),
                                     (np.long(segmap_group_sizze_34679),))
          if synchronous:
            sync(self)
        mem_43446 = None
        mem_43538 = opencl_alloc(self, bytes_43541, "mem_43538")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43538, np.int64(0),
                                                    mem_43462, np.int64(0),
                                                    np.int64(1),
                                                    (m_28625 * i32_res_28644),
                                                    i32_res_28644)
        mem_43462 = None
        defunc_3_map_res_mem_43540 = mem_43538
      else:
        local_memory_capacity_44769 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44769)) and suff_outer_par_34710):
          mem_43465 = opencl_alloc(self, bytes_43395, "mem_43465")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43465, np.int64(0),
                                                      images_mem_43378,
                                                      np.int64(0), np.int64(1),
                                                      N_28626, m_28625)
          gridDim_x_41539 = sdiv_up64(i32_res_28644, Tx_41538)
          gridDim_y_41540 = sdiv_up64(i32_res_28644, Ty_41537)
          binop_x_41542 = (gridDim_y_41540 * gridDim_zz_41541)
          grid_sizze_41543 = (gridDim_x_41539 * binop_x_41542)
          count_shmem_41545 = sdiv_up64(np.int64(30), group_sizze_41544)
          mem_43525 = opencl_alloc(self, bytes_43541, "mem_43525")
          if ((1 * (np.long(grid_sizze_41543) * np.long(group_sizze_41544))) != 0):
            self.mainMagnitudezisegmap_intragroup_41549_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(np.int64(120))),
                                                                     np.int64(m_28625),
                                                                     np.int32(n_28629),
                                                                     np.int64(i32_res_28644),
                                                                     np.int64(Ty_41537),
                                                                     np.int64(Tx_41538),
                                                                     np.int64(gridDim_x_41539),
                                                                     np.int64(gridDim_y_41540),
                                                                     np.int64(group_sizze_41544),
                                                                     np.int64(count_shmem_41545),
                                                                     mem_43390,
                                                                     mem_43394,
                                                                     mem_43465,
                                                                     mem_43525)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_41549_var,
                                       ((np.long(grid_sizze_41543) * np.long(group_sizze_41544)),),
                                       (np.long(group_sizze_41544),))
            if synchronous:
              sync(self)
          mem_43465 = None
          defunc_3_map_res_mem_43534 = mem_43525
        else:
          mem_43528 = opencl_alloc(self, bytes_43380, "mem_43528")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43528, np.int64(0),
                                                      mem_43394, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28644, N_28624)
          mem_43533 = opencl_alloc(self, bytes_43541, "mem_43533")
          if slt64((i32_res_28638 * np.int64(2)), segred_group_sizze_34731):
            segment_sizze_nonzzero_44709 = smax64(np.int64(1), i32_res_28638)
            num_threads_44710 = (num_groups_34732 * segred_group_sizze_34731)
            if ((1 * (np.long(num_groups_34732) * np.long(segred_group_sizze_34731))) != 0):
              self.mainMagnitudezisegred_small_34593_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34731))),
                                                                  np.int64(N_28624),
                                                                  np.int64(m_28625),
                                                                  np.int64(N_28626),
                                                                  np.int64(i32_res_28638),
                                                                  np.int64(i32_res_28644),
                                                                  np.int64(num_groups_34732),
                                                                  images_mem_43378,
                                                                  binop_p_mem_43387,
                                                                  mem_43528,
                                                                  mem_43533,
                                                                  np.int64(segment_sizze_nonzzero_44709))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_small_34593_var,
                                         ((np.long(num_groups_34732) * np.long(segred_group_sizze_34731)),),
                                         (np.long(segred_group_sizze_34731),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44730 = sdiv_up64(num_groups_34732,
                                                 smax64(np.int64(1),
                                                        ((m_28625 * i32_res_28644) * i32_res_28644)))
            elements_per_thread_44731 = sdiv_up64(i32_res_28638,
                                                  (segred_group_sizze_34731 * groups_per_segment_44730))
            virt_num_groups_44732 = (groups_per_segment_44730 * ((m_28625 * i32_res_28644) * i32_res_28644))
            num_threads_44733 = (num_groups_34732 * segred_group_sizze_34731)
            threads_per_segment_44734 = (groups_per_segment_44730 * segred_group_sizze_34731)
            group_res_arr_mem_44735 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_34731 * virt_num_groups_44732)),
                                                   "group_res_arr_mem_44735")
            mainMagnitudezicounter_mem_44737 = self.mainMagnitudezicounter_mem_44737
            if ((1 * (np.long(num_groups_34732) * np.long(segred_group_sizze_34731))) != 0):
              self.mainMagnitudezisegred_large_34593_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34731))),
                                                                  np.int64(N_28624),
                                                                  np.int64(N_28626),
                                                                  np.int64(i32_res_28638),
                                                                  np.int64(i32_res_28644),
                                                                  np.int64(num_groups_34732),
                                                                  images_mem_43378,
                                                                  binop_p_mem_43387,
                                                                  mem_43528,
                                                                  mem_43533,
                                                                  np.int64(groups_per_segment_44730),
                                                                  np.int64(elements_per_thread_44731),
                                                                  np.int64(virt_num_groups_44732),
                                                                  np.int64(threads_per_segment_44734),
                                                                  group_res_arr_mem_44735,
                                                                  mainMagnitudezicounter_mem_44737)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_large_34593_var,
                                         ((np.long(num_groups_34732) * np.long(segred_group_sizze_34731)),),
                                         (np.long(segred_group_sizze_34731),))
              if synchronous:
                sync(self)
          mem_43528 = None
          defunc_3_map_res_mem_43534 = mem_43533
        defunc_3_map_res_mem_43540 = defunc_3_map_res_mem_43534
      defunc_3_map_res_mem_43546 = defunc_3_map_res_mem_43540
    m_28775 = (np.int32(2) * k2p2zq_28642)
    nm_28776 = (k2p2zq_28642 * m_28775)
    i32_res_28777 = sext_i32_i64(nm_28776)
    bounds_invalid_upwards_28778 = slt64(i32_res_28777, np.int64(0))
    valid_28779 = not(bounds_invalid_upwards_28778)
    range_valid_c_28780 = True
    assert valid_28779, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28777,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28785 = (m_28775 == np.int32(0))
    nonzzero_28786 = not(zzero_28785)
    nonzzero_cert_28787 = True
    assert nonzzero_28786, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    loop_nonempty_28788 = slt32(np.int32(0), k2p2zq_28642)
    loop_not_taken_28789 = not(loop_nonempty_28788)
    protect_assert_disj_28790 = (nonzzero_28786 or loop_not_taken_28789)
    nonzzero_cert_28791 = True
    assert protect_assert_disj_28790, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:55:35-50\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    i32_res_28792 = sext_i32_i64(m_28775)
    x_28793 = (i32_res_28644 * i32_res_28792)
    dim_ok_28794 = (x_28793 == i32_res_28777)
    dim_ok_cert_28795 = True
    assert dim_ok_28794, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:55:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28796 = (i32_res_28792 - i32_res_28644)
    empty_slice_28797 = (j_m_i_28796 == np.int64(0))
    m_28798 = (j_m_i_28796 - np.int64(1))
    i_p_m_t_s_28799 = (i32_res_28644 + m_28798)
    zzero_leq_i_p_m_t_s_28800 = sle64(np.int64(0), i_p_m_t_s_28799)
    i_p_m_t_s_leq_w_28801 = slt64(i_p_m_t_s_28799, i32_res_28792)
    i_lte_j_28802 = sle64(i32_res_28644, i32_res_28792)
    y_28803 = (i_lte_j_28725 and i_p_m_t_s_leq_w_28801)
    y_28804 = (zzero_leq_i_p_m_t_s_28800 and y_28803)
    y_28805 = (i_lte_j_28802 and y_28804)
    forwards_ok_28806 = (i_lte_j_28725 and y_28805)
    ok_or_empty_28807 = (empty_slice_28797 or forwards_ok_28806)
    index_ok_28808 = (ok_or_empty_28741 and ok_or_empty_28807)
    index_certs_28809 = True
    assert index_ok_28808, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:55:35-50\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28644,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28644,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28792,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28644,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28792,
                                                                                                                                                                                                                   "]."))
    dim_match_28810 = (i32_res_28644 == j_m_i_28796)
    empty_or_match_cert_28811 = True
    assert dim_match_28810, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:55:35-50\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:32\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28644,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28796,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28644,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28644,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_34946 = self.max_group_size
    fits_34947 = sle64(i32_res_28777, max_group_sizze_34946)
    suff_intra_par_34945 = (self.sizes["mainMagnitude.suff_intra_par_11"] <= i32_res_28777)
    intra_suff_and_fits_34948 = (suff_intra_par_34945 and fits_34947)
    nest_sizze_35432 = (m_28625 * i32_res_28777)
    segmap_group_sizze_35433 = self.sizes["mainMagnitude.segmap_group_size_35392"]
    suff_intra_par_35460 = (self.sizes["mainMagnitude.suff_intra_par_13"] <= i32_res_28777)
    intra_suff_and_fits_35461 = (fits_34947 and suff_intra_par_35460)
    segmap_group_sizze_35497 = self.sizes["mainMagnitude.segmap_group_size_35298"]
    segmap_group_sizze_35513 = self.sizes["mainMagnitude.segmap_group_size_35231"]
    segmap_group_sizze_35547 = self.sizes["mainMagnitude.segmap_group_size_35177"]
    y_35557 = (i32_res_28644 * j_m_i_28796)
    nest_sizze_35558 = (m_28625 * y_35557)
    segmap_group_sizze_35559 = self.sizes["mainMagnitude.segmap_group_size_35012"]
    segmap_usable_groups_35498 = sdiv_up_safe64(m_28625,
                                                segmap_group_sizze_35497)
    segmap_usable_groups_35514 = sdiv_up_safe64(nest_sizze_35432,
                                                segmap_group_sizze_35513)
    segmap_usable_groups_35548 = sdiv_up_safe64(nest_sizze_35432,
                                                segmap_group_sizze_35547)
    bytes_43549 = (np.int64(4) * i32_res_28777)
    bytes_43572 = (np.int64(4) * nest_sizze_35432)
    binop_x_43623 = (j_m_i_28796 * nest_sizze_34678)
    bytes_43621 = (np.int64(4) * binop_x_43623)
    local_memory_capacity_44834 = self.max_local_memory
    if (sle64((bytes_43549 + bytes_43549),
              sext_i32_i64(local_memory_capacity_44834)) and intra_suff_and_fits_34948):
      mem_43570 = opencl_alloc(self, bytes_43541, "mem_43570")
      if ((1 * (np.long(m_28625) * np.long(i32_res_28777))) != 0):
        self.mainMagnitudezisegmap_intragroup_34828_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43549)),
                                                                 cl.LocalMemory(np.long(bytes_43549)),
                                                                 np.int32(k2p2zq_28642),
                                                                 np.int64(i32_res_28644),
                                                                 np.int32(m_28775),
                                                                 np.int64(i32_res_28777),
                                                                 np.int64(i32_res_28792),
                                                                 defunc_3_map_res_mem_43546,
                                                                 mem_43570)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_34828_var,
                                   ((np.long(m_28625) * np.long(i32_res_28777)),),
                                   (np.long(i32_res_28777),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43625 = mem_43570
    else:
      segmap_usable_groups_35434 = sdiv_up64(nest_sizze_35432,
                                             segmap_group_sizze_35433)
      mem_43574 = opencl_alloc(self, bytes_43572, "mem_43574")
      if ((1 * (np.long(segmap_usable_groups_35434) * np.long(segmap_group_sizze_35433))) != 0):
        self.mainMagnitudezisegmap_35389_var.set_args(self.global_failure,
                                                      np.int64(m_28625),
                                                      np.int32(k2p2zq_28642),
                                                      np.int64(i32_res_28644),
                                                      np.int32(m_28775),
                                                      np.int64(i32_res_28777),
                                                      defunc_3_map_res_mem_43546,
                                                      mem_43574)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35389_var,
                                   ((np.long(segmap_usable_groups_35434) * np.long(segmap_group_sizze_35433)),),
                                   (np.long(segmap_group_sizze_35433),))
        if synchronous:
          sync(self)
      ctx_param_ext_43575 = m_28625
      ctx_param_ext_43576 = i32_res_28777
      ctx_param_ext_43577 = np.int64(0)
      ctx_param_ext_43578 = i32_res_28777
      ctx_param_ext_43579 = m_28625
      ctx_param_ext_43580 = np.int64(1)
      ctx_param_ext_43581 = i32_res_28777
      mem_param_43582 = mem_43574
      i_35450 = np.int32(0)
      one_45829 = np.int32(1)
      for counter_45828 in range(k2p2zq_28642):
        i32_res_35452 = sext_i32_i64(i_35450)
        local_memory_capacity_44794 = self.max_local_memory
        if intra_suff_and_fits_35461:
          gauss_jordan_res_ixfn_43604 = m_28625
        else:
          gauss_jordan_res_ixfn_43604 = ctx_param_ext_43579
        local_memory_capacity_44795 = self.max_local_memory
        if intra_suff_and_fits_35461:
          gauss_jordan_res_ixfn_43605 = i32_res_28777
        else:
          gauss_jordan_res_ixfn_43605 = ctx_param_ext_43581
        local_memory_capacity_44796 = self.max_local_memory
        if intra_suff_and_fits_35461:
          gauss_jordan_res_ixfn_43606 = m_28625
        else:
          gauss_jordan_res_ixfn_43606 = ctx_param_ext_43575
        local_memory_capacity_44797 = self.max_local_memory
        if intra_suff_and_fits_35461:
          gauss_jordan_res_ixfn_43607 = i32_res_28777
        else:
          gauss_jordan_res_ixfn_43607 = ctx_param_ext_43576
        local_memory_capacity_44798 = self.max_local_memory
        if intra_suff_and_fits_35461:
          gauss_jordan_res_ixfn_43608 = i32_res_28777
        else:
          gauss_jordan_res_ixfn_43608 = ctx_param_ext_43578
        local_memory_capacity_44799 = self.max_local_memory
        if intra_suff_and_fits_35461:
          gauss_jordan_res_ixfn_43609 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43609 = ctx_param_ext_43580
        local_memory_capacity_44800 = self.max_local_memory
        if intra_suff_and_fits_35461:
          gauss_jordan_res_ixfn_43610 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43610 = ctx_param_ext_43577
        local_memory_capacity_44828 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44828)) and sle64(bytes_43549,
                                                                        sext_i32_i64(local_memory_capacity_44828))) and intra_suff_and_fits_35461):
          mem_43587 = opencl_alloc(self, bytes_43572, "mem_43587")
          group_sizze_44804 = self.sizes["mainMagnitude.group_size_44804"]
          num_groups_44805 = sdiv_up64((m_28625 * i32_res_28777),
                                       group_sizze_44804)
          if ((1 * (np.long(num_groups_44805) * np.long(group_sizze_44804))) != 0):
            self.mainMagnitudezicopy_44801_var.set_args(np.int64(m_28625),
                                                        np.int64(i32_res_28777),
                                                        np.int64(ctx_param_ext_43577),
                                                        np.int64(ctx_param_ext_43578),
                                                        np.int64(ctx_param_ext_43580),
                                                        mem_param_43582,
                                                        mem_43587)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezicopy_44801_var,
                                       ((np.long(num_groups_44805) * np.long(group_sizze_44804)),),
                                       (np.long(group_sizze_44804),))
            if synchronous:
              sync(self)
          mem_43595 = opencl_alloc(self, bytes_43572, "mem_43595")
          if ((1 * (np.long(m_28625) * np.long(i32_res_28777))) != 0):
            self.mainMagnitudezisegmap_intragroup_35055_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(bytes_43549)),
                                                                     np.int64(m_28625),
                                                                     np.int32(k2p2zq_28642),
                                                                     np.int32(m_28775),
                                                                     np.int64(i32_res_28777),
                                                                     np.int32(i_35450),
                                                                     np.int64(i32_res_35452),
                                                                     np.int64(ctx_param_ext_43577),
                                                                     np.int64(ctx_param_ext_43578),
                                                                     np.int64(ctx_param_ext_43580),
                                                                     mem_param_43582,
                                                                     mem_43587,
                                                                     mem_43595)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_35055_var,
                                       ((np.long(m_28625) * np.long(i32_res_28777)),),
                                       (np.long(i32_res_28777),))
            if synchronous:
              sync(self)
          mem_43587 = None
          gauss_jordan_res_mem_43611 = mem_43595
        else:
          mem_43598 = opencl_alloc(self, m_28625, "mem_43598")
          if ((1 * (np.long(segmap_usable_groups_35498) * np.long(segmap_group_sizze_35497))) != 0):
            self.mainMagnitudezisegmap_35296_var.set_args(self.global_failure,
                                                          np.int64(m_28625),
                                                          np.int64(i32_res_35452),
                                                          np.int64(ctx_param_ext_43577),
                                                          np.int64(ctx_param_ext_43578),
                                                          np.int64(ctx_param_ext_43580),
                                                          mem_param_43582,
                                                          mem_43598)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35296_var,
                                       ((np.long(segmap_usable_groups_35498) * np.long(segmap_group_sizze_35497)),),
                                       (np.long(segmap_group_sizze_35497),))
            if synchronous:
              sync(self)
          mem_43602 = opencl_alloc(self, bytes_43572, "mem_43602")
          if ((1 * (np.long(segmap_usable_groups_35514) * np.long(segmap_group_sizze_35513))) != 0):
            self.mainMagnitudezisegmap_35228_var.set_args(self.global_failure,
                                                          np.int64(m_28625),
                                                          np.int32(k2p2zq_28642),
                                                          np.int32(m_28775),
                                                          np.int64(i32_res_28777),
                                                          np.int32(i_35450),
                                                          np.int64(i32_res_35452),
                                                          np.int64(ctx_param_ext_43577),
                                                          np.int64(ctx_param_ext_43578),
                                                          np.int64(ctx_param_ext_43580),
                                                          mem_param_43582,
                                                          mem_43598, mem_43602)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35228_var,
                                       ((np.long(segmap_usable_groups_35514) * np.long(segmap_group_sizze_35513)),),
                                       (np.long(segmap_group_sizze_35513),))
            if synchronous:
              sync(self)
          mem_43598 = None
          if ((1 * (np.long(segmap_usable_groups_35548) * np.long(segmap_group_sizze_35547))) != 0):
            self.mainMagnitudezisegmap_35174_var.set_args(self.global_failure,
                                                          np.int64(m_28625),
                                                          np.int64(i32_res_28777),
                                                          np.int64(ctx_param_ext_43577),
                                                          np.int64(ctx_param_ext_43578),
                                                          np.int64(ctx_param_ext_43580),
                                                          mem_param_43582,
                                                          mem_43602)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35174_var,
                                       ((np.long(segmap_usable_groups_35548) * np.long(segmap_group_sizze_35547)),),
                                       (np.long(segmap_group_sizze_35547),))
            if synchronous:
              sync(self)
          mem_43602 = None
          gauss_jordan_res_mem_43611 = mem_param_43582
        ctx_param_ext_tmp_44785 = gauss_jordan_res_ixfn_43606
        ctx_param_ext_tmp_44786 = gauss_jordan_res_ixfn_43607
        ctx_param_ext_tmp_44787 = gauss_jordan_res_ixfn_43610
        ctx_param_ext_tmp_44788 = gauss_jordan_res_ixfn_43608
        ctx_param_ext_tmp_44789 = gauss_jordan_res_ixfn_43604
        ctx_param_ext_tmp_44790 = gauss_jordan_res_ixfn_43609
        ctx_param_ext_tmp_44791 = gauss_jordan_res_ixfn_43605
        mem_param_tmp_44792 = gauss_jordan_res_mem_43611
        ctx_param_ext_43575 = ctx_param_ext_tmp_44785
        ctx_param_ext_43576 = ctx_param_ext_tmp_44786
        ctx_param_ext_43577 = ctx_param_ext_tmp_44787
        ctx_param_ext_43578 = ctx_param_ext_tmp_44788
        ctx_param_ext_43579 = ctx_param_ext_tmp_44789
        ctx_param_ext_43580 = ctx_param_ext_tmp_44790
        ctx_param_ext_43581 = ctx_param_ext_tmp_44791
        mem_param_43582 = mem_param_tmp_44792
        i_35450 += one_45829
      gauss_jordan_res_r_ixfn_43612 = ctx_param_ext_43575
      gauss_jordan_res_r_ixfn_43613 = ctx_param_ext_43576
      gauss_jordan_res_r_ixfn_43614 = ctx_param_ext_43577
      gauss_jordan_res_r_ixfn_43615 = ctx_param_ext_43578
      gauss_jordan_res_r_ixfn_43616 = ctx_param_ext_43579
      gauss_jordan_res_r_ixfn_43617 = ctx_param_ext_43580
      gauss_jordan_res_r_ixfn_43618 = ctx_param_ext_43581
      gauss_jordan_res_r_mem_43619 = mem_param_43582
      mem_43574 = None
      segmap_usable_groups_35560 = sdiv_up64(nest_sizze_35558,
                                             segmap_group_sizze_35559)
      mem_43624 = opencl_alloc(self, bytes_43621, "mem_43624")
      if ((1 * (np.long(segmap_usable_groups_35560) * np.long(segmap_group_sizze_35559))) != 0):
        self.mainMagnitudezisegmap_35008_var.set_args(self.global_failure,
                                                      np.int64(m_28625),
                                                      np.int64(i32_res_28644),
                                                      np.int64(i32_res_28777),
                                                      np.int64(i32_res_28792),
                                                      np.int64(x_28793),
                                                      np.int64(j_m_i_28796),
                                                      np.int64(gauss_jordan_res_r_ixfn_43614),
                                                      np.int64(gauss_jordan_res_r_ixfn_43615),
                                                      np.int64(gauss_jordan_res_r_ixfn_43617),
                                                      gauss_jordan_res_r_mem_43619,
                                                      mem_43624)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35008_var,
                                   ((np.long(segmap_usable_groups_35560) * np.long(segmap_group_sizze_35559)),),
                                   (np.long(segmap_group_sizze_35559),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43619 = None
      defunc_3_map_res_mem_43625 = mem_43624
    defunc_3_map_res_mem_43546 = None
    suff_outer_par_35568 = (self.sizes["mainMagnitude.suff_outer_par_16"] <= m_28625)
    segmap_group_sizze_35590 = self.sizes["mainMagnitude.segmap_group_size_35572"]
    max_num_groups_44835 = self.sizes["mainMagnitude.segmap_num_groups_35574"]
    num_groups_35591 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28625,
                                                            segmap_group_sizze_35590),
                                                  sext_i32_i64(max_num_groups_44835))))
    suff_outer_par_35675 = (self.sizes["mainMagnitude.suff_outer_par_17"] <= nest_sizze_34678)
    nest_sizze_35691 = (i32_res_28638 * nest_sizze_34678)
    segred_group_sizze_35692 = self.sizes["mainMagnitude.segred_group_size_35634"]
    max_num_groups_44836 = self.sizes["mainMagnitude.segred_num_groups_35636"]
    num_groups_35693 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35691,
                                                            segred_group_sizze_35692),
                                                  sext_i32_i64(max_num_groups_44836))))
    Ty_41683 = self.sizes["mainMagnitude.Ty_41680"]
    Ry_41684 = self.sizes["mainMagnitude.Ry_41682"]
    Tx_41685 = self.sizes["mainMagnitude.Tx_41679"]
    Rx_41686 = self.sizes["mainMagnitude.Rx_41681"]
    Tk_41687 = self.sizes["mainMagnitude.Tk_41678"]
    TxRx_41690 = (Tx_41685 * Rx_41686)
    TyRy_41691 = (Ty_41683 * Ry_41684)
    a_loc_szz_41693 = (Tk_41687 * TyRy_41691)
    binop_x_41694 = (Tx_41685 * Tk_41687)
    b_loc_szz_41695 = (Rx_41686 * binop_x_41694)
    group_sizze_41699 = (Ty_41683 * Tx_41685)
    bytes_43644 = (np.int64(4) * nest_sizze_34678)
    binop_x_43658 = (Ry_41684 * group_sizze_41699)
    binop_x_43659 = (Rx_41686 * binop_x_43658)
    bytes_43656 = (np.int64(4) * binop_x_43659)
    binop_x_43650 = (Ry_41684 * Rx_41686)
    bytes_43649 = (np.int64(4) * binop_x_43650)
    bytes_43661 = (np.int64(4) * a_loc_szz_41693)
    bytes_43663 = (np.int64(4) * b_loc_szz_41695)
    bytes_43732 = (np.int64(4) * binop_x_43658)
    binop_x_43738 = (Rx_41686 * group_sizze_41699)
    bytes_43736 = (np.int64(4) * binop_x_43738)
    bytes_43724 = (np.int64(4) * Ry_41684)
    bytes_43726 = (np.int64(4) * Rx_41686)
    binop_x_44420 = (np.int64(4) * Ty_41683)
    binop_x_44421 = (Tx_41685 * binop_x_44420)
    binop_x_44422 = (Ry_41684 * binop_x_44421)
    sizze_44423 = (Rx_41686 * binop_x_44422)
    num_threads_44547 = (segmap_group_sizze_35590 * num_groups_35591)
    total_sizze_44548 = (bytes_43445 * num_threads_44547)
    local_memory_capacity_44966 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44966)) and suff_outer_par_35568):
      mem_43628 = opencl_alloc(self, bytes_43395, "mem_43628")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43628, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_28626, m_28625)
      mem_43646 = opencl_alloc(self, bytes_43644, "mem_43646")
      mem_43631 = opencl_alloc(self, total_sizze_44548, "mem_43631")
      if ((1 * (np.long(num_groups_35591) * np.long(segmap_group_sizze_35590))) != 0):
        self.mainMagnitudezisegmap_35570_var.set_args(self.global_failure,
                                                      np.int64(N_28624),
                                                      np.int64(m_28625),
                                                      np.int32(n_28629),
                                                      np.int32(k2p2zq_28642),
                                                      np.int64(i32_res_28644),
                                                      np.int64(num_groups_35591),
                                                      binop_p_mem_43387,
                                                      mem_43628, mem_43631,
                                                      mem_43646)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35570_var,
                                   ((np.long(num_groups_35591) * np.long(segmap_group_sizze_35590)),),
                                   (np.long(segmap_group_sizze_35590),))
        if synchronous:
          sync(self)
      mem_43628 = None
      mem_43631 = None
      mem_43844 = opencl_alloc(self, bytes_43644, "mem_43844")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43844, np.int64(0),
                                                  mem_43646, np.int64(0),
                                                  np.int64(1), m_28625,
                                                  i32_res_28644)
      mem_43646 = None
      defunc_3_map_res_mem_43846 = mem_43844
    else:
      local_memory_capacity_44965 = self.max_local_memory
      if (sle64((bytes_43661 + bytes_43663),
                sext_i32_i64(local_memory_capacity_44965)) and suff_outer_par_35675):
        tk_div_tx_41688 = sdiv_up64(Tk_41687, Tx_41685)
        tk_div_ty_41689 = sdiv_up64(Tk_41687, Ty_41683)
        gridDim_x_41696 = sdiv_up64(i32_res_28644, TxRx_41690)
        gridDim_y_41697 = sdiv_up64(m_28625, TyRy_41691)
        grid_sizze_41698 = (gridDim_x_41696 * gridDim_y_41697)
        full_tiles_41727 = squot64(i32_res_28638, Tk_41687)
        kk_41934 = (Tk_41687 * full_tiles_41727)
        mem_43836 = opencl_alloc(self, bytes_43644, "mem_43836")
        if ((1 * (np.long(grid_sizze_41698) * np.long(group_sizze_41699))) != 0):
          self.mainMagnitudezisegmap_intragroup_41702_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43663)),
                                                                   cl.LocalMemory(np.long(bytes_43661)),
                                                                   np.int64(m_28625),
                                                                   np.int64(N_28626),
                                                                   np.int64(i32_res_28638),
                                                                   np.int64(i32_res_28644),
                                                                   np.int64(gridDim_x_41696),
                                                                   np.int64(full_tiles_41727),
                                                                   np.int64(kk_41934),
                                                                   images_mem_43378,
                                                                   mem_43390,
                                                                   mem_43836)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41702_var,
                                     ((np.long(grid_sizze_41698) * np.long(group_sizze_41699)),),
                                     (np.long(group_sizze_41699),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43841 = mem_43836
      else:
        mem_43840 = opencl_alloc(self, bytes_43644, "mem_43840")
        if slt64((i32_res_28638 * np.int64(2)), segred_group_sizze_35692):
          segment_sizze_nonzzero_44905 = smax64(np.int64(1), i32_res_28638)
          num_threads_44906 = (num_groups_35693 * segred_group_sizze_35692)
          if ((1 * (np.long(num_groups_35693) * np.long(segred_group_sizze_35692))) != 0):
            self.mainMagnitudezisegred_small_35640_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35692))),
                                                                np.int64(N_28624),
                                                                np.int64(m_28625),
                                                                np.int64(N_28626),
                                                                np.int64(i32_res_28638),
                                                                np.int64(i32_res_28644),
                                                                np.int64(num_groups_35693),
                                                                images_mem_43378,
                                                                binop_p_mem_43387,
                                                                mem_43840,
                                                                np.int64(segment_sizze_nonzzero_44905))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35640_var,
                                       ((np.long(num_groups_35693) * np.long(segred_group_sizze_35692)),),
                                       (np.long(segred_group_sizze_35692),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44926 = sdiv_up64(num_groups_35693,
                                               smax64(np.int64(1),
                                                      (m_28625 * i32_res_28644)))
          elements_per_thread_44927 = sdiv_up64(i32_res_28638,
                                                (segred_group_sizze_35692 * groups_per_segment_44926))
          virt_num_groups_44928 = (groups_per_segment_44926 * (m_28625 * i32_res_28644))
          num_threads_44929 = (num_groups_35693 * segred_group_sizze_35692)
          threads_per_segment_44930 = (groups_per_segment_44926 * segred_group_sizze_35692)
          group_res_arr_mem_44931 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35692 * virt_num_groups_44928)),
                                                 "group_res_arr_mem_44931")
          mainMagnitudezicounter_mem_44933 = self.mainMagnitudezicounter_mem_44933
          if ((1 * (np.long(num_groups_35693) * np.long(segred_group_sizze_35692))) != 0):
            self.mainMagnitudezisegred_large_35640_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35692))),
                                                                np.int64(N_28624),
                                                                np.int64(N_28626),
                                                                np.int64(i32_res_28638),
                                                                np.int64(i32_res_28644),
                                                                np.int64(num_groups_35693),
                                                                images_mem_43378,
                                                                binop_p_mem_43387,
                                                                mem_43840,
                                                                np.int64(groups_per_segment_44926),
                                                                np.int64(elements_per_thread_44927),
                                                                np.int64(virt_num_groups_44928),
                                                                np.int64(threads_per_segment_44930),
                                                                group_res_arr_mem_44931,
                                                                mainMagnitudezicounter_mem_44933)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35640_var,
                                       ((np.long(num_groups_35693) * np.long(segred_group_sizze_35692)),),
                                       (np.long(segred_group_sizze_35692),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43841 = mem_43840
      defunc_3_map_res_mem_43846 = defunc_3_map_res_mem_43841
    binop_p_mem_43387 = None
    mem_43390 = None
    suff_outer_par_35709 = (self.sizes["mainMagnitude.suff_outer_par_18"] <= m_28625)
    segmap_group_sizze_35730 = self.sizes["mainMagnitude.segmap_group_size_35713"]
    max_num_groups_44967 = self.sizes["mainMagnitude.segmap_num_groups_35715"]
    num_groups_35731 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28625,
                                                            segmap_group_sizze_35730),
                                                  sext_i32_i64(max_num_groups_44967))))
    suff_outer_par_35810 = (self.sizes["mainMagnitude.suff_outer_par_19"] <= nest_sizze_34678)
    segred_group_sizze_35825 = self.sizes["mainMagnitude.segred_group_size_35771"]
    max_num_groups_44968 = self.sizes["mainMagnitude.segred_num_groups_35773"]
    num_groups_35826 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43543,
                                                            segred_group_sizze_35825),
                                                  sext_i32_i64(max_num_groups_44968))))
    tile_sizze_42146 = self.sizes["mainMagnitude.tile_size_42145"]
    group_sizze_42147 = (tile_sizze_42146 * tile_sizze_42146)
    bytes_43878 = (np.int64(4) * group_sizze_42147)
    binop_x_44436 = (np.int64(4) * tile_sizze_42146)
    sizze_44437 = (tile_sizze_42146 * binop_x_44436)
    num_threads_44551 = (segmap_group_sizze_35730 * num_groups_35731)
    total_sizze_44552 = (bytes_43445 * num_threads_44551)
    local_memory_capacity_45054 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45054)) and suff_outer_par_35709):
      mem_43850 = opencl_alloc(self, bytes_43440, "mem_43850")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43850, np.int64(0),
                                                  defunc_3_map_res_mem_43625,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28644 * i32_res_28644),
                                                  m_28625)
      mem_43853 = opencl_alloc(self, bytes_43644, "mem_43853")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43853, np.int64(0),
                                                  defunc_3_map_res_mem_43846,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28644, m_28625)
      mem_43871 = opencl_alloc(self, bytes_43644, "mem_43871")
      mem_43856 = opencl_alloc(self, total_sizze_44552, "mem_43856")
      if ((1 * (np.long(num_groups_35731) * np.long(segmap_group_sizze_35730))) != 0):
        self.mainMagnitudezisegmap_35711_var.set_args(self.global_failure,
                                                      np.int64(m_28625),
                                                      np.int32(k2p2zq_28642),
                                                      np.int64(i32_res_28644),
                                                      np.int64(num_groups_35731),
                                                      mem_43850, mem_43853,
                                                      mem_43856, mem_43871)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35711_var,
                                   ((np.long(num_groups_35731) * np.long(segmap_group_sizze_35730)),),
                                   (np.long(segmap_group_sizze_35730),))
        if synchronous:
          sync(self)
      mem_43850 = None
      mem_43853 = None
      mem_43856 = None
      mem_43910 = opencl_alloc(self, bytes_43644, "mem_43910")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43910, np.int64(0),
                                                  mem_43871, np.int64(0),
                                                  np.int64(1), m_28625,
                                                  i32_res_28644)
      mem_43871 = None
      defunc_4_map_res_mem_43912 = mem_43910
    else:
      local_memory_capacity_45053 = self.max_local_memory
      if (sle64((bytes_43878 + bytes_43878),
                sext_i32_i64(local_memory_capacity_45053)) and suff_outer_par_35810):
        mem_43875 = opencl_alloc(self, bytes_43541, "mem_43875")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43875, np.int64(0),
                                                    defunc_3_map_res_mem_43625,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28644,
                                                    (m_28625 * i32_res_28644))
        num_groups_x_42148 = sdiv_up64(m_28625, tile_sizze_42146)
        num_groups_y_42149 = sdiv_up64(i32_res_28644, tile_sizze_42146)
        num_groups_top_42150 = (num_groups_x_42148 * num_groups_y_42149)
        num_whole_tiles_42167 = squot64(i32_res_28644, tile_sizze_42146)
        residual_input_42294 = srem64(i32_res_28644, tile_sizze_42146)
        cond_42295 = (residual_input_42294 == np.int64(0))
        mem_43902 = opencl_alloc(self, bytes_43644, "mem_43902")
        if ((1 * (np.long(num_groups_top_42150) * np.long(group_sizze_42147))) != 0):
          self.mainMagnitudezisegmap_intragroup_42151_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43878)),
                                                                   cl.LocalMemory(np.long(bytes_43878)),
                                                                   np.int64(m_28625),
                                                                   np.int64(i32_res_28644),
                                                                   np.int64(num_groups_y_42149),
                                                                   np.int64(num_whole_tiles_42167),
                                                                   np.int64(residual_input_42294),
                                                                   np.byte(cond_42295),
                                                                   defunc_3_map_res_mem_43846,
                                                                   mem_43875,
                                                                   mem_43902)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_42151_var,
                                     ((np.long(num_groups_top_42150) * np.long(group_sizze_42147)),),
                                     (np.long(group_sizze_42147),))
          if synchronous:
            sync(self)
        mem_43875 = None
        defunc_4_map_res_mem_43907 = mem_43902
      else:
        mem_43906 = opencl_alloc(self, bytes_43644, "mem_43906")
        if slt64((i32_res_28644 * np.int64(2)), segred_group_sizze_35825):
          segment_sizze_nonzzero_44993 = smax64(np.int64(1), i32_res_28644)
          num_threads_44994 = (num_groups_35826 * segred_group_sizze_35825)
          if ((1 * (np.long(num_groups_35826) * np.long(segred_group_sizze_35825))) != 0):
            self.mainMagnitudezisegred_small_35777_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35825))),
                                                                np.int64(m_28625),
                                                                np.int64(i32_res_28644),
                                                                np.int64(num_groups_35826),
                                                                defunc_3_map_res_mem_43625,
                                                                defunc_3_map_res_mem_43846,
                                                                mem_43906,
                                                                np.int64(segment_sizze_nonzzero_44993))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35777_var,
                                       ((np.long(num_groups_35826) * np.long(segred_group_sizze_35825)),),
                                       (np.long(segred_group_sizze_35825),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45014 = sdiv_up64(num_groups_35826,
                                               smax64(np.int64(1),
                                                      (m_28625 * i32_res_28644)))
          elements_per_thread_45015 = sdiv_up64(i32_res_28644,
                                                (segred_group_sizze_35825 * groups_per_segment_45014))
          virt_num_groups_45016 = (groups_per_segment_45014 * (m_28625 * i32_res_28644))
          num_threads_45017 = (num_groups_35826 * segred_group_sizze_35825)
          threads_per_segment_45018 = (groups_per_segment_45014 * segred_group_sizze_35825)
          group_res_arr_mem_45019 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35825 * virt_num_groups_45016)),
                                                 "group_res_arr_mem_45019")
          mainMagnitudezicounter_mem_45021 = self.mainMagnitudezicounter_mem_45021
          if ((1 * (np.long(num_groups_35826) * np.long(segred_group_sizze_35825))) != 0):
            self.mainMagnitudezisegred_large_35777_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35825))),
                                                                np.int64(i32_res_28644),
                                                                np.int64(num_groups_35826),
                                                                defunc_3_map_res_mem_43625,
                                                                defunc_3_map_res_mem_43846,
                                                                mem_43906,
                                                                np.int64(groups_per_segment_45014),
                                                                np.int64(elements_per_thread_45015),
                                                                np.int64(virt_num_groups_45016),
                                                                np.int64(threads_per_segment_45018),
                                                                group_res_arr_mem_45019,
                                                                mainMagnitudezicounter_mem_45021)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35777_var,
                                       ((np.long(num_groups_35826) * np.long(segred_group_sizze_35825)),),
                                       (np.long(segred_group_sizze_35825),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43907 = mem_43906
      defunc_4_map_res_mem_43912 = defunc_4_map_res_mem_43907
    defunc_3_map_res_mem_43625 = None
    defunc_3_map_res_mem_43846 = None
    suff_outer_par_35841 = (self.sizes["mainMagnitude.suff_outer_par_20"] <= m_28625)
    segmap_group_sizze_35861 = self.sizes["mainMagnitude.segmap_group_size_35845"]
    max_num_groups_45055 = self.sizes["mainMagnitude.segmap_num_groups_35847"]
    num_groups_35862 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28625,
                                                            segmap_group_sizze_35861),
                                                  sext_i32_i64(max_num_groups_45055))))
    comparatee_35937 = (N_28624 * m_28625)
    suff_outer_par_35938 = (self.sizes["mainMagnitude.suff_outer_par_21"] <= comparatee_35937)
    nest_sizze_35952 = (i32_res_28644 * comparatee_35937)
    segred_group_sizze_35953 = self.sizes["mainMagnitude.segred_group_size_35901"]
    max_num_groups_45056 = self.sizes["mainMagnitude.segred_num_groups_35903"]
    num_groups_35954 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35952,
                                                            segred_group_sizze_35953),
                                                  sext_i32_i64(max_num_groups_45056))))
    Ty_42424 = self.sizes["mainMagnitude.Ty_42421"]
    Ry_42425 = self.sizes["mainMagnitude.Ry_42423"]
    Tx_42426 = self.sizes["mainMagnitude.Tx_42420"]
    Rx_42427 = self.sizes["mainMagnitude.Rx_42422"]
    Tk_42428 = self.sizes["mainMagnitude.Tk_42419"]
    TxRx_42431 = (Tx_42426 * Rx_42427)
    TyRy_42432 = (Ty_42424 * Ry_42425)
    a_loc_szz_42434 = (Tk_42428 * TyRy_42432)
    binop_x_42435 = (Tx_42426 * Tk_42428)
    b_loc_szz_42436 = (Rx_42427 * binop_x_42435)
    group_sizze_42440 = (Ty_42424 * Tx_42426)
    bytes_43931 = (np.int64(4) * comparatee_35937)
    bytes_43917 = (np.int64(4) * N_28624)
    binop_x_43948 = (Ry_42425 * group_sizze_42440)
    binop_x_43949 = (Rx_42427 * binop_x_43948)
    bytes_43946 = (np.int64(4) * binop_x_43949)
    binop_x_43940 = (Ry_42425 * Rx_42427)
    bytes_43939 = (np.int64(4) * binop_x_43940)
    bytes_43951 = (np.int64(4) * a_loc_szz_42434)
    bytes_43953 = (np.int64(4) * b_loc_szz_42436)
    bytes_44022 = (np.int64(4) * binop_x_43948)
    binop_x_44028 = (Rx_42427 * group_sizze_42440)
    bytes_44026 = (np.int64(4) * binop_x_44028)
    bytes_44014 = (np.int64(4) * Ry_42425)
    bytes_44016 = (np.int64(4) * Rx_42427)
    binop_x_44450 = (np.int64(4) * Ty_42424)
    binop_x_44451 = (Tx_42426 * binop_x_44450)
    binop_x_44452 = (Ry_42425 * binop_x_44451)
    sizze_44453 = (Rx_42427 * binop_x_44452)
    num_threads_44555 = (segmap_group_sizze_35861 * num_groups_35862)
    total_sizze_44556 = (bytes_43917 * num_threads_44555)
    local_memory_capacity_45186 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45186)) and suff_outer_par_35841):
      mem_43915 = opencl_alloc(self, bytes_43644, "mem_43915")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43915, np.int64(0),
                                                  defunc_4_map_res_mem_43912,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28644, m_28625)
      mem_43933 = opencl_alloc(self, bytes_43931, "mem_43933")
      mem_43918 = opencl_alloc(self, total_sizze_44556, "mem_43918")
      if ((1 * (np.long(num_groups_35862) * np.long(segmap_group_sizze_35861))) != 0):
        self.mainMagnitudezisegmap_35843_var.set_args(self.global_failure,
                                                      np.int64(N_28624),
                                                      np.int64(m_28625),
                                                      np.int32(k2p2zq_28642),
                                                      np.int64(i32_res_28644),
                                                      np.int64(num_groups_35862),
                                                      mem_43394, mem_43915,
                                                      mem_43918, mem_43933)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35843_var,
                                   ((np.long(num_groups_35862) * np.long(segmap_group_sizze_35861)),),
                                   (np.long(segmap_group_sizze_35861),))
        if synchronous:
          sync(self)
      mem_43915 = None
      mem_43918 = None
      mem_44134 = opencl_alloc(self, bytes_43931, "mem_44134")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44134, np.int64(0),
                                                  mem_43933, np.int64(0),
                                                  np.int64(1), m_28625, N_28624)
      mem_43933 = None
      defunc_3_map_res_mem_44136 = mem_44134
    else:
      local_memory_capacity_45185 = self.max_local_memory
      if (sle64((bytes_43951 + bytes_43953),
                sext_i32_i64(local_memory_capacity_45185)) and suff_outer_par_35938):
        mem_43936 = opencl_alloc(self, bytes_43380, "mem_43936")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43936, np.int64(0),
                                                    mem_43394, np.int64(0),
                                                    np.int64(1), i32_res_28644,
                                                    N_28624)
        tk_div_tx_42429 = sdiv_up64(Tk_42428, Tx_42426)
        tk_div_ty_42430 = sdiv_up64(Tk_42428, Ty_42424)
        gridDim_x_42437 = sdiv_up64(N_28624, TxRx_42431)
        gridDim_y_42438 = sdiv_up64(m_28625, TyRy_42432)
        grid_sizze_42439 = (gridDim_x_42437 * gridDim_y_42438)
        full_tiles_42468 = squot64(i32_res_28644, Tk_42428)
        kk_42671 = (Tk_42428 * full_tiles_42468)
        mem_44126 = opencl_alloc(self, bytes_43931, "mem_44126")
        if ((1 * (np.long(grid_sizze_42439) * np.long(group_sizze_42440))) != 0):
          self.mainMagnitudezisegmap_intragroup_42443_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43953)),
                                                                   cl.LocalMemory(np.long(bytes_43951)),
                                                                   np.int64(N_28624),
                                                                   np.int64(m_28625),
                                                                   np.int64(i32_res_28644),
                                                                   np.int64(gridDim_x_42437),
                                                                   np.int64(full_tiles_42468),
                                                                   np.int64(kk_42671),
                                                                   defunc_4_map_res_mem_43912,
                                                                   mem_43936,
                                                                   mem_44126)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_42443_var,
                                     ((np.long(grid_sizze_42439) * np.long(group_sizze_42440)),),
                                     (np.long(group_sizze_42440),))
          if synchronous:
            sync(self)
        mem_43936 = None
        defunc_3_map_res_mem_44131 = mem_44126
      else:
        mem_44130 = opencl_alloc(self, bytes_43931, "mem_44130")
        if slt64((i32_res_28644 * np.int64(2)), segred_group_sizze_35953):
          segment_sizze_nonzzero_45125 = smax64(np.int64(1), i32_res_28644)
          num_threads_45126 = (num_groups_35954 * segred_group_sizze_35953)
          if ((1 * (np.long(num_groups_35954) * np.long(segred_group_sizze_35953))) != 0):
            self.mainMagnitudezisegred_small_35907_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35953))),
                                                                np.int64(N_28624),
                                                                np.int64(m_28625),
                                                                np.int64(i32_res_28644),
                                                                np.int64(num_groups_35954),
                                                                mem_43394,
                                                                defunc_4_map_res_mem_43912,
                                                                mem_44130,
                                                                np.int64(segment_sizze_nonzzero_45125))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35907_var,
                                       ((np.long(num_groups_35954) * np.long(segred_group_sizze_35953)),),
                                       (np.long(segred_group_sizze_35953),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45146 = sdiv_up64(num_groups_35954,
                                               smax64(np.int64(1),
                                                      (m_28625 * N_28624)))
          elements_per_thread_45147 = sdiv_up64(i32_res_28644,
                                                (segred_group_sizze_35953 * groups_per_segment_45146))
          virt_num_groups_45148 = (groups_per_segment_45146 * (m_28625 * N_28624))
          num_threads_45149 = (num_groups_35954 * segred_group_sizze_35953)
          threads_per_segment_45150 = (groups_per_segment_45146 * segred_group_sizze_35953)
          group_res_arr_mem_45151 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35953 * virt_num_groups_45148)),
                                                 "group_res_arr_mem_45151")
          mainMagnitudezicounter_mem_45153 = self.mainMagnitudezicounter_mem_45153
          if ((1 * (np.long(num_groups_35954) * np.long(segred_group_sizze_35953))) != 0):
            self.mainMagnitudezisegred_large_35907_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35953))),
                                                                np.int64(N_28624),
                                                                np.int64(i32_res_28644),
                                                                np.int64(num_groups_35954),
                                                                mem_43394,
                                                                defunc_4_map_res_mem_43912,
                                                                mem_44130,
                                                                np.int64(groups_per_segment_45146),
                                                                np.int64(elements_per_thread_45147),
                                                                np.int64(virt_num_groups_45148),
                                                                np.int64(threads_per_segment_45150),
                                                                group_res_arr_mem_45151,
                                                                mainMagnitudezicounter_mem_45153)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35907_var,
                                       ((np.long(num_groups_35954) * np.long(segred_group_sizze_35953)),),
                                       (np.long(segred_group_sizze_35953),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44131 = mem_44130
      defunc_3_map_res_mem_44136 = defunc_3_map_res_mem_44131
    mem_43394 = None
    defunc_4_map_res_mem_43912 = None
    i_28904 = (N_28624 - np.int64(1))
    x_28905 = sle64(np.int64(0), i_28904)
    y_28906 = slt64(i_28904, N_28624)
    bounds_check_28907 = (x_28905 and y_28906)
    index_certs_28908 = True
    assert bounds_check_28907, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:82:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:76:5-85:25\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28904,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28624,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_36083 = sle64(N_28624, max_group_sizze_34946)
    suff_intra_par_36081 = (self.sizes["mainMagnitude.suff_intra_par_24"] <= N_28624)
    intra_suff_and_fits_36084 = (suff_intra_par_36081 and fits_36083)
    segscan_group_sizze_36233 = self.sizes["mainMagnitude.segscan_group_size_36210"]
    max_num_groups_45187 = self.sizes["mainMagnitude.segscan_num_groups_36212"]
    num_groups_36234 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_35937,
                                                            segscan_group_sizze_36233),
                                                  sext_i32_i64(max_num_groups_45187))))
    segmap_group_sizze_36253 = self.sizes["mainMagnitude.segmap_group_size_36201"]
    mem_44139 = opencl_alloc(self, bytes_43931, "mem_44139")
    self.futhark_builtinzhreplicate_f32(mem_44139, (m_28625 * N_28624), np.nan)
    mem_44142 = opencl_alloc(self, bytes_43931, "mem_44142")
    self.futhark_builtinzhreplicate_i32(mem_44142, (m_28625 * N_28624),
                                        np.int32(0))
    segmap_group_sizze_36289 = self.sizes["mainMagnitude.segmap_group_size_36126"]
    bytes_44154 = (np.int64(4) * m_28625)
    bytes_44145 = (np.int64(8) * N_28624)
    bytes_44163 = (np.int64(8) * comparatee_35937)
    local_memory_capacity_45289 = self.max_local_memory
    if (sle64((((bytes_44145 + bytes_43917) + bytes_43917) + bytes_43917),
              sext_i32_i64(local_memory_capacity_45289)) and intra_suff_and_fits_36084):
      mem_44155 = opencl_alloc(self, bytes_44154, "mem_44155")
      mem_44158 = opencl_alloc(self, bytes_43931, "mem_44158")
      mem_44161 = opencl_alloc(self, bytes_43931, "mem_44161")
      if ((1 * (np.long(m_28625) * np.long(N_28624))) != 0):
        self.mainMagnitudezisegmap_intragroup_36006_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43917)),
                                                                 cl.LocalMemory(np.long(bytes_43917)),
                                                                 cl.LocalMemory(np.long(bytes_43917)),
                                                                 cl.LocalMemory(np.long(bytes_44145)),
                                                                 np.int64(N_28624),
                                                                 np.int64(N_28626),
                                                                 np.int64(i_28904),
                                                                 images_mem_43378,
                                                                 defunc_3_map_res_mem_44136,
                                                                 mem_44155,
                                                                 mem_44158,
                                                                 mem_44161)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_36006_var,
                                   ((np.long(m_28625) * np.long(N_28624)),),
                                   (np.long(N_28624),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_44173 = mem_44155
      defunc_4_map_res_mem_44174 = mem_44158
      defunc_4_map_res_mem_44175 = mem_44161
    else:
      mem_44165 = opencl_alloc(self, bytes_44163, "mem_44165")
      mem_44168 = opencl_alloc(self, bytes_43931, "mem_44168")
      if slt64(np.int64(0), (m_28625 * N_28624)):
        stage1_max_num_groups_45223 = self.max_group_size
        stage1_num_groups_45224 = smin64(stage1_max_num_groups_45223,
                                         num_groups_36234)
        num_threads_45225 = sext_i64_i32((stage1_num_groups_45224 * segscan_group_sizze_36233))
        if ((1 * (np.long(stage1_num_groups_45224) * np.long(segscan_group_sizze_36233))) != 0):
          self.mainMagnitudeziscan_stage1_36216_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * segscan_group_sizze_36233)))),
                                                             np.int64(N_28624),
                                                             np.int64(m_28625),
                                                             np.int64(N_28626),
                                                             images_mem_43378,
                                                             defunc_3_map_res_mem_44136,
                                                             mem_44165,
                                                             mem_44168,
                                                             np.int32(num_threads_45225))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_36216_var,
                                     ((np.long(stage1_num_groups_45224) * np.long(segscan_group_sizze_36233)),),
                                     (np.long(segscan_group_sizze_36233),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45224))) != 0):
          self.mainMagnitudeziscan_stage2_36216_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * stage1_num_groups_45224)))),
                                                             np.int64(N_28624),
                                                             np.int64(m_28625),
                                                             mem_44165,
                                                             np.int64(stage1_num_groups_45224),
                                                             np.int32(num_threads_45225))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_36216_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45224)),),
                                     (np.long(stage1_num_groups_45224),))
          if synchronous:
            sync(self)
        required_groups_45267 = sext_i64_i32(sdiv_up64((m_28625 * N_28624),
                                                       segscan_group_sizze_36233))
        if ((1 * (np.long(num_groups_36234) * np.long(segscan_group_sizze_36233))) != 0):
          self.mainMagnitudeziscan_stage3_36216_var.set_args(self.global_failure,
                                                             np.int64(N_28624),
                                                             np.int64(m_28625),
                                                             np.int64(num_groups_36234),
                                                             mem_44165,
                                                             np.int32(num_threads_45225),
                                                             np.int32(required_groups_45267))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_36216_var,
                                     ((np.long(num_groups_36234) * np.long(segscan_group_sizze_36233)),),
                                     (np.long(segscan_group_sizze_36233),))
          if synchronous:
            sync(self)
      segmap_usable_groups_36254 = sdiv_up64(m_28625, segmap_group_sizze_36253)
      mem_44171 = opencl_alloc(self, bytes_44154, "mem_44171")
      if ((1 * (np.long(segmap_usable_groups_36254) * np.long(segmap_group_sizze_36253))) != 0):
        self.mainMagnitudezisegmap_36199_var.set_args(self.global_failure,
                                                      np.int64(N_28624),
                                                      np.int64(m_28625),
                                                      np.int64(i_28904),
                                                      mem_44165, mem_44171)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36199_var,
                                   ((np.long(segmap_usable_groups_36254) * np.long(segmap_group_sizze_36253)),),
                                   (np.long(segmap_group_sizze_36253),))
        if synchronous:
          sync(self)
      segmap_usable_groups_36290 = sdiv_up64(comparatee_35937,
                                             segmap_group_sizze_36289)
      if ((1 * (np.long(segmap_usable_groups_36290) * np.long(segmap_group_sizze_36289))) != 0):
        self.mainMagnitudezisegmap_36123_var.set_args(self.global_failure,
                                                      np.int64(N_28624),
                                                      np.int64(m_28625),
                                                      mem_44139, mem_44142,
                                                      mem_44165, mem_44168)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36123_var,
                                   ((np.long(segmap_usable_groups_36290) * np.long(segmap_group_sizze_36289)),),
                                   (np.long(segmap_group_sizze_36289),))
        if synchronous:
          sync(self)
      mem_44165 = None
      mem_44168 = None
      defunc_4_map_res_mem_44173 = mem_44171
      defunc_4_map_res_mem_44174 = mem_44139
      defunc_4_map_res_mem_44175 = mem_44142
    defunc_3_map_res_mem_44136 = None
    mem_44139 = None
    mem_44142 = None
    suff_outer_par_36338 = (self.sizes["mainMagnitude.suff_outer_par_28"] <= m_28625)
    fits_36416 = sle64(i32_res_28638, max_group_sizze_34946)
    suff_intra_par_36414 = (self.sizes["mainMagnitude.suff_intra_par_29"] <= i32_res_28638)
    intra_suff_and_fits_36417 = (suff_intra_par_36414 and fits_36416)
    segmap_group_sizze_36381 = self.sizes["mainMagnitude.segmap_group_size_36350"]
    nest_sizze_36504 = (m_28625 * i32_res_28638)
    segred_group_sizze_36505 = self.sizes["mainMagnitude.segred_group_size_36488"]
    max_num_groups_45290 = self.sizes["mainMagnitude.segred_num_groups_36490"]
    num_groups_36506 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36504,
                                                            segred_group_sizze_36505),
                                                  sext_i32_i64(max_num_groups_45290))))
    segred_group_sizze_36519 = self.sizes["mainMagnitude.segred_group_size_36467"]
    max_num_groups_45291 = self.sizes["mainMagnitude.segred_num_groups_36469"]
    num_groups_36520 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36504,
                                                            segred_group_sizze_36519),
                                                  sext_i32_i64(max_num_groups_45291))))
    segmap_group_sizze_36535 = self.sizes["mainMagnitude.segmap_group_size_36452"]
    bytes_44184 = (np.int64(4) * segmap_group_sizze_36381)
    local_memory_capacity_45445 = self.max_local_memory
    if (sle64((bytes_44184 + bytes_44184),
              sext_i32_i64(local_memory_capacity_45445)) and suff_outer_par_36338):
      segmap_usable_groups_36382 = sdiv_up64(m_28625, segmap_group_sizze_36381)
      mem_44178 = opencl_alloc(self, bytes_43395, "mem_44178")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44178, np.int64(0),
                                                  images_mem_43378, np.int64(0),
                                                  np.int64(1), N_28626, m_28625)
      mem_44181 = opencl_alloc(self, bytes_43931, "mem_44181")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44181, np.int64(0),
                                                  defunc_4_map_res_mem_44174,
                                                  np.int64(0), np.int64(1),
                                                  N_28624, m_28625)
      num_whole_tiles_42885 = squot64(i32_res_28638, segmap_group_sizze_36381)
      residual_input_43006 = srem64(i32_res_28638, segmap_group_sizze_36381)
      cond_43007 = (residual_input_43006 == np.int64(0))
      mem_44209 = opencl_alloc(self, bytes_44154, "mem_44209")
      mem_44211 = opencl_alloc(self, bytes_44154, "mem_44211")
      mem_44213 = opencl_alloc(self, bytes_44154, "mem_44213")
      if ((1 * (np.long(segmap_usable_groups_36382) * np.long(segmap_group_sizze_36381))) != 0):
        self.mainMagnitudezisegmap_intragroup_42877_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_44184)),
                                                                 cl.LocalMemory(np.long(bytes_44184)),
                                                                 np.int64(m_28625),
                                                                 np.int32(n_28629),
                                                                 np.float32(hfrac_28631),
                                                                 np.int64(i32_res_28638),
                                                                 np.int32(k2p2_28640),
                                                                 np.int64(num_whole_tiles_42885),
                                                                 np.int64(residual_input_43006),
                                                                 np.byte(cond_43007),
                                                                 mem_44178,
                                                                 mem_44181,
                                                                 mem_44209,
                                                                 mem_44211,
                                                                 mem_44213)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42877_var,
                                   ((np.long(segmap_usable_groups_36382) * np.long(segmap_group_sizze_36381)),),
                                   (np.long(segmap_group_sizze_36381),))
        if synchronous:
          sync(self)
      mem_44178 = None
      mem_44181 = None
      defunc_3_map_res_mem_44237 = mem_44209
      defunc_3_map_res_mem_44238 = mem_44211
      defunc_3_map_res_mem_44239 = mem_44213
    else:
      local_memory_capacity_45444 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_28638) + (np.int32(4) * i32_res_28638)),
                sext_i32_i64(local_memory_capacity_45444)) and intra_suff_and_fits_36417):
        mem_44218 = opencl_alloc(self, bytes_44154, "mem_44218")
        mem_44220 = opencl_alloc(self, bytes_44154, "mem_44220")
        mem_44222 = opencl_alloc(self, bytes_44154, "mem_44222")
        if ((1 * (np.long(m_28625) * np.long(i32_res_28638))) != 0):
          self.mainMagnitudezisegmap_intragroup_36346_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28638))),
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28638))),
                                                                   np.int64(N_28624),
                                                                   np.int64(N_28626),
                                                                   np.float32(hfrac_28631),
                                                                   np.int64(i32_res_28638),
                                                                   np.int32(k2p2_28640),
                                                                   images_mem_43378,
                                                                   defunc_4_map_res_mem_44174,
                                                                   mem_44218,
                                                                   mem_44220,
                                                                   mem_44222)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_36346_var,
                                     ((np.long(m_28625) * np.long(i32_res_28638)),),
                                     (np.long(i32_res_28638),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44234 = mem_44218
        defunc_3_map_res_mem_44235 = mem_44220
        defunc_3_map_res_mem_44236 = mem_44222
      else:
        mem_44225 = opencl_alloc(self, bytes_44154, "mem_44225")
        if slt64((i32_res_28638 * np.int64(2)), segred_group_sizze_36505):
          segment_sizze_nonzzero_45319 = smax64(np.int64(1), i32_res_28638)
          num_threads_45320 = (num_groups_36506 * segred_group_sizze_36505)
          if ((1 * (np.long(num_groups_36506) * np.long(segred_group_sizze_36505))) != 0):
            self.mainMagnitudezisegred_small_36494_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36505))),
                                                                np.int64(m_28625),
                                                                np.int64(N_28626),
                                                                np.int64(i32_res_28638),
                                                                np.int64(num_groups_36506),
                                                                images_mem_43378,
                                                                mem_44225,
                                                                np.int64(segment_sizze_nonzzero_45319))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36494_var,
                                       ((np.long(num_groups_36506) * np.long(segred_group_sizze_36505)),),
                                       (np.long(segred_group_sizze_36505),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45340 = sdiv_up64(num_groups_36506,
                                               smax64(np.int64(1), m_28625))
          elements_per_thread_45341 = sdiv_up64(i32_res_28638,
                                                (segred_group_sizze_36505 * groups_per_segment_45340))
          virt_num_groups_45342 = (groups_per_segment_45340 * m_28625)
          num_threads_45343 = (num_groups_36506 * segred_group_sizze_36505)
          threads_per_segment_45344 = (groups_per_segment_45340 * segred_group_sizze_36505)
          group_res_arr_mem_45345 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36505 * virt_num_groups_45342)),
                                                 "group_res_arr_mem_45345")
          mainMagnitudezicounter_mem_45347 = self.mainMagnitudezicounter_mem_45347
          if ((1 * (np.long(num_groups_36506) * np.long(segred_group_sizze_36505))) != 0):
            self.mainMagnitudezisegred_large_36494_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36505))),
                                                                np.int64(N_28626),
                                                                np.int64(i32_res_28638),
                                                                np.int64(num_groups_36506),
                                                                images_mem_43378,
                                                                mem_44225,
                                                                np.int64(groups_per_segment_45340),
                                                                np.int64(elements_per_thread_45341),
                                                                np.int64(virt_num_groups_45342),
                                                                np.int64(threads_per_segment_45344),
                                                                group_res_arr_mem_45345,
                                                                mainMagnitudezicounter_mem_45347)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36494_var,
                                       ((np.long(num_groups_36506) * np.long(segred_group_sizze_36505)),),
                                       (np.long(segred_group_sizze_36505),))
            if synchronous:
              sync(self)
        mem_44228 = opencl_alloc(self, bytes_44154, "mem_44228")
        if slt64((i32_res_28638 * np.int64(2)), segred_group_sizze_36519):
          segment_sizze_nonzzero_45379 = smax64(np.int64(1), i32_res_28638)
          num_threads_45380 = (num_groups_36520 * segred_group_sizze_36519)
          if ((1 * (np.long(num_groups_36520) * np.long(segred_group_sizze_36519))) != 0):
            self.mainMagnitudezisegred_small_36473_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36519))),
                                                                np.int64(N_28624),
                                                                np.int64(m_28625),
                                                                np.int64(i32_res_28638),
                                                                np.int64(num_groups_36520),
                                                                defunc_4_map_res_mem_44174,
                                                                mem_44225,
                                                                mem_44228,
                                                                np.int64(segment_sizze_nonzzero_45379))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36473_var,
                                       ((np.long(num_groups_36520) * np.long(segred_group_sizze_36519)),),
                                       (np.long(segred_group_sizze_36519),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45400 = sdiv_up64(num_groups_36520,
                                               smax64(np.int64(1), m_28625))
          elements_per_thread_45401 = sdiv_up64(i32_res_28638,
                                                (segred_group_sizze_36519 * groups_per_segment_45400))
          virt_num_groups_45402 = (groups_per_segment_45400 * m_28625)
          num_threads_45403 = (num_groups_36520 * segred_group_sizze_36519)
          threads_per_segment_45404 = (groups_per_segment_45400 * segred_group_sizze_36519)
          group_res_arr_mem_45405 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36519 * virt_num_groups_45402)),
                                                 "group_res_arr_mem_45405")
          mainMagnitudezicounter_mem_45407 = self.mainMagnitudezicounter_mem_45407
          if ((1 * (np.long(num_groups_36520) * np.long(segred_group_sizze_36519))) != 0):
            self.mainMagnitudezisegred_large_36473_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36519))),
                                                                np.int64(N_28624),
                                                                np.int64(i32_res_28638),
                                                                np.int64(num_groups_36520),
                                                                defunc_4_map_res_mem_44174,
                                                                mem_44225,
                                                                mem_44228,
                                                                np.int64(groups_per_segment_45400),
                                                                np.int64(elements_per_thread_45401),
                                                                np.int64(virt_num_groups_45402),
                                                                np.int64(threads_per_segment_45404),
                                                                group_res_arr_mem_45405,
                                                                mainMagnitudezicounter_mem_45407)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36473_var,
                                       ((np.long(num_groups_36520) * np.long(segred_group_sizze_36519)),),
                                       (np.long(segred_group_sizze_36519),))
            if synchronous:
              sync(self)
        segmap_usable_groups_36536 = sdiv_up64(m_28625,
                                               segmap_group_sizze_36535)
        mem_44231 = opencl_alloc(self, bytes_44154, "mem_44231")
        mem_44233 = opencl_alloc(self, bytes_44154, "mem_44233")
        if ((1 * (np.long(segmap_usable_groups_36536) * np.long(segmap_group_sizze_36535))) != 0):
          self.mainMagnitudezisegmap_36450_var.set_args(self.global_failure,
                                                        np.int64(m_28625),
                                                        np.float32(hfrac_28631),
                                                        np.int32(k2p2_28640),
                                                        mem_44225, mem_44228,
                                                        mem_44231, mem_44233)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_36450_var,
                                     ((np.long(segmap_usable_groups_36536) * np.long(segmap_group_sizze_36535)),),
                                     (np.long(segmap_group_sizze_36535),))
          if synchronous:
            sync(self)
        mem_44228 = None
        defunc_3_map_res_mem_44234 = mem_44231
        defunc_3_map_res_mem_44235 = mem_44225
        defunc_3_map_res_mem_44236 = mem_44233
      defunc_3_map_res_mem_44237 = defunc_3_map_res_mem_44234
      defunc_3_map_res_mem_44238 = defunc_3_map_res_mem_44235
      defunc_3_map_res_mem_44239 = defunc_3_map_res_mem_44236
    segred_group_sizze_36556 = self.sizes["mainMagnitude.segred_group_size_36555"]
    max_num_groups_45446 = self.sizes["mainMagnitude.segred_num_groups_36557"]
    num_groups_36558 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28625,
                                                            segred_group_sizze_36556),
                                                  sext_i32_i64(max_num_groups_45446))))
    mem_44242 = opencl_alloc(self, np.int64(4), "mem_44242")
    mainMagnitudezicounter_mem_45447 = self.mainMagnitudezicounter_mem_45447
    group_res_arr_mem_45449 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_36556 * num_groups_36558)),
                                           "group_res_arr_mem_45449")
    num_threads_45451 = (num_groups_36558 * segred_group_sizze_36556)
    if ((1 * (np.long(num_groups_36558) * np.long(segred_group_sizze_36556))) != 0):
      self.mainMagnitudezisegred_nonseg_36563_var.set_args(self.global_failure,
                                                           cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36556))),
                                                           cl.LocalMemory(np.long(np.int32(1))),
                                                           np.int64(m_28625),
                                                           np.int64(num_groups_36558),
                                                           defunc_3_map_res_mem_44237,
                                                           mem_44242,
                                                           mainMagnitudezicounter_mem_45447,
                                                           group_res_arr_mem_45449,
                                                           np.int64(num_threads_45451))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegred_nonseg_36563_var,
                                 ((np.long(num_groups_36558) * np.long(segred_group_sizze_36556)),),
                                 (np.long(segred_group_sizze_36556),))
      if synchronous:
        sync(self)
    read_res_45836 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45836, mem_44242,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28994 = read_res_45836[0]
    mem_44242 = None
    i32_res_28999 = sext_i32_i64(defunc_2_reduce_comm_res_28994)
    bounds_invalid_upwards_29000 = slt64(i32_res_28999, np.int64(0))
    valid_29001 = not(bounds_invalid_upwards_29000)
    range_valid_c_29002 = True
    assert valid_29001, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:110:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:105:17-112:24\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_28999,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_36595 = (self.sizes["mainMagnitude.suff_outer_par_31"] <= m_28625)
    segmap_group_sizze_36618 = self.sizes["mainMagnitude.segmap_group_size_36599"]
    nest_sizze_36661 = (m_28625 * i32_res_28999)
    segred_group_sizze_36662 = self.sizes["mainMagnitude.segred_group_size_36639"]
    max_num_groups_45477 = self.sizes["mainMagnitude.segred_num_groups_36641"]
    num_groups_36663 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36661,
                                                            segred_group_sizze_36662),
                                                  sext_i32_i64(max_num_groups_45477))))
    bytes_44245 = (np.int64(4) * segmap_group_sizze_36618)
    local_memory_capacity_45548 = self.max_local_memory
    if (sle64((bytes_44245 + bytes_44245),
              sext_i32_i64(local_memory_capacity_45548)) and suff_outer_par_36595):
      segmap_usable_groups_36619 = sdiv_up64(m_28625, segmap_group_sizze_36618)
      num_whole_tiles_43129 = squot64(i32_res_28999, segmap_group_sizze_36618)
      residual_input_43228 = srem64(i32_res_28999, segmap_group_sizze_36618)
      cond_43229 = (residual_input_43228 == np.int64(0))
      mem_44268 = opencl_alloc(self, bytes_44154, "mem_44268")
      if ((1 * (np.long(segmap_usable_groups_36619) * np.long(segmap_group_sizze_36618))) != 0):
        self.mainMagnitudezisegmap_intragroup_43109_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_44245)),
                                                                 cl.LocalMemory(np.long(bytes_44245)),
                                                                 np.int64(N_28624),
                                                                 np.int64(m_28625),
                                                                 np.int64(i32_res_28999),
                                                                 np.int64(num_whole_tiles_43129),
                                                                 np.int64(residual_input_43228),
                                                                 np.byte(cond_43229),
                                                                 defunc_4_map_res_mem_44174,
                                                                 defunc_3_map_res_mem_44237,
                                                                 defunc_3_map_res_mem_44238,
                                                                 mem_44268)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_43109_var,
                                   ((np.long(segmap_usable_groups_36619) * np.long(segmap_group_sizze_36618)),),
                                   (np.long(segmap_group_sizze_36618),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44272 = mem_44268
    else:
      mem_44271 = opencl_alloc(self, bytes_44154, "mem_44271")
      if slt64((i32_res_28999 * np.int64(2)), segred_group_sizze_36662):
        segment_sizze_nonzzero_45488 = smax64(np.int64(1), i32_res_28999)
        num_threads_45489 = (num_groups_36663 * segred_group_sizze_36662)
        if ((1 * (np.long(num_groups_36663) * np.long(segred_group_sizze_36662))) != 0):
          self.mainMagnitudezisegred_small_36645_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36662))),
                                                              np.int64(N_28624),
                                                              np.int64(m_28625),
                                                              np.int64(i32_res_28999),
                                                              np.int64(num_groups_36663),
                                                              defunc_4_map_res_mem_44174,
                                                              defunc_3_map_res_mem_44237,
                                                              defunc_3_map_res_mem_44238,
                                                              mem_44271,
                                                              np.int64(segment_sizze_nonzzero_45488))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_36645_var,
                                     ((np.long(num_groups_36663) * np.long(segred_group_sizze_36662)),),
                                     (np.long(segred_group_sizze_36662),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45509 = sdiv_up64(num_groups_36663,
                                             smax64(np.int64(1), m_28625))
        elements_per_thread_45510 = sdiv_up64(i32_res_28999,
                                              (segred_group_sizze_36662 * groups_per_segment_45509))
        virt_num_groups_45511 = (groups_per_segment_45509 * m_28625)
        num_threads_45512 = (num_groups_36663 * segred_group_sizze_36662)
        threads_per_segment_45513 = (groups_per_segment_45509 * segred_group_sizze_36662)
        group_res_arr_mem_45514 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_36662 * virt_num_groups_45511)),
                                               "group_res_arr_mem_45514")
        mainMagnitudezicounter_mem_45516 = self.mainMagnitudezicounter_mem_45516
        if ((1 * (np.long(num_groups_36663) * np.long(segred_group_sizze_36662))) != 0):
          self.mainMagnitudezisegred_large_36645_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36662))),
                                                              np.int64(N_28624),
                                                              np.int64(i32_res_28999),
                                                              np.int64(num_groups_36663),
                                                              defunc_4_map_res_mem_44174,
                                                              defunc_3_map_res_mem_44237,
                                                              defunc_3_map_res_mem_44238,
                                                              mem_44271,
                                                              np.int64(groups_per_segment_45509),
                                                              np.int64(elements_per_thread_45510),
                                                              np.int64(virt_num_groups_45511),
                                                              np.int64(threads_per_segment_45513),
                                                              group_res_arr_mem_45514,
                                                              mainMagnitudezicounter_mem_45516)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_36645_var,
                                     ((np.long(num_groups_36663) * np.long(segred_group_sizze_36662)),),
                                     (np.long(segred_group_sizze_36662),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44272 = mem_44271
    iota32_arg_29024 = (N_28624 - i32_res_28638)
    bounds_invalid_upwards_29025 = slt64(iota32_arg_29024, np.int64(0))
    valid_29026 = not(bounds_invalid_upwards_29025)
    range_valid_c_29027 = True
    assert valid_29026, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:118:22-35\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_29024,
                                                                                                                                                                                                                                      " is invalid."))
    x_29029 = (np.int32(1) + n_28629)
    i_29030 = (n_28629 - np.int32(1))
    i_29031 = sext_i32_i64(i_29030)
    x_29032 = sle64(np.int64(0), i_29031)
    y_29033 = slt64(i_29031, N_28624)
    bounds_check_29034 = (x_29032 and y_29033)
    index_certs_29035 = True
    assert bounds_check_29034, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:116:64-84\n   #1  bfastfinal.fut:114:15-118:36\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                 i_29031,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28624,
                                                                                                                                                                                                                 "]."))
    read_res_45838 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45838, mappingindices_mem_43377,
                    device_offset=(np.long(i_29031) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_29036 = read_res_45838[0]
    i32_res_29037 = sitofp_i32_f32(r32_arg_29036)
    range_valid_c_29038 = True
    assert valid_29026, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:130:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_29024,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_36740 = self.sizes["mainMagnitude.segmap_group_size_36723"]
    segmap_usable_groups_36741 = sdiv_up64(iota32_arg_29024,
                                           segmap_group_sizze_36740)
    bytes_44274 = (np.int64(4) * iota32_arg_29024)
    mem_44275 = opencl_alloc(self, bytes_44274, "mem_44275")
    mem_44277 = opencl_alloc(self, bytes_44274, "mem_44277")
    if ((1 * (np.long(segmap_usable_groups_36741) * np.long(segmap_group_sizze_36740))) != 0):
      self.mainMagnitudezisegmap_36721_var.set_args(self.global_failure,
                                                    np.float32(lam_28632),
                                                    np.int64(iota32_arg_29024),
                                                    np.int32(x_29029),
                                                    np.float32(i32_res_29037),
                                                    mappingindices_mem_43377,
                                                    mem_44275, mem_44277)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36721_var,
                                 ((np.long(segmap_usable_groups_36741) * np.long(segmap_group_sizze_36740)),),
                                 (np.long(segmap_group_sizze_36740),))
      if synchronous:
        sync(self)
    mem_44275 = None
    max_res_29054 = smax64(np.int64(1), iota32_arg_29024)
    bounds_invalid_upwards_29055 = slt64(max_res_29054, np.int64(1))
    distance_29056 = (max_res_29054 - np.int64(1))
    valid_29057 = not(bounds_invalid_upwards_29055)
    range_valid_c_29058 = True
    assert valid_29057, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:145:29-151:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:123:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_29054,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    fits_37196 = sle64(iota32_arg_29024, max_group_sizze_34946)
    suff_intra_par_37194 = (self.sizes["mainMagnitude.suff_intra_par_34"] <= iota32_arg_29024)
    intra_suff_and_fits_37197 = (suff_intra_par_37194 and fits_37196)
    segmap_group_sizze_37750 = self.sizes["mainMagnitude.segmap_group_size_37730"]
    max_num_groups_45554 = self.sizes["mainMagnitude.segmap_num_groups_37732"]
    num_groups_37751 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28625,
                                                            segmap_group_sizze_37750),
                                                  sext_i32_i64(max_num_groups_45554))))
    nest_sizze_37772 = (m_28625 * iota32_arg_29024)
    segscan_group_sizze_37773 = self.sizes["mainMagnitude.segscan_group_size_37689"]
    max_num_groups_45555 = self.sizes["mainMagnitude.segscan_num_groups_37691"]
    num_groups_37774 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37772,
                                                            segscan_group_sizze_37773),
                                                  sext_i32_i64(max_num_groups_45555))))
    segred_group_sizze_37811 = self.sizes["mainMagnitude.segred_group_size_37635"]
    max_num_groups_45556 = self.sizes["mainMagnitude.segred_num_groups_37637"]
    num_groups_37812 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37772,
                                                            segred_group_sizze_37811),
                                                  sext_i32_i64(max_num_groups_45556))))
    segmap_group_sizze_37850 = self.sizes["mainMagnitude.segmap_group_size_37604"]
    segmap_group_sizze_37885 = self.sizes["mainMagnitude.segmap_group_size_37543"]
    segmap_group_sizze_37914 = self.sizes["mainMagnitude.segmap_group_size_37404"]
    bytes_44322 = (np.int64(4) * nest_sizze_37772)
    local_memory_capacity_45768 = self.max_local_memory
    if (sle64((((((bytes_44274 + (np.int32(1) * iota32_arg_29024)) + (np.int32(4) * iota32_arg_29024)) + (np.int32(4) * iota32_arg_29024)) + bytes_44274) + bytes_44274),
              sext_i32_i64(local_memory_capacity_45768)) and intra_suff_and_fits_37197):
      mem_44311 = opencl_alloc(self, bytes_44154, "mem_44311")
      mem_44313 = opencl_alloc(self, bytes_44154, "mem_44313")
      mem_44315 = opencl_alloc(self, bytes_44154, "mem_44315")
      if ((1 * (np.long(m_28625) * np.long(iota32_arg_29024))) != 0):
        self.mainMagnitudezisegmap_intragroup_36788_var.set_args(self.global_failure,
                                                                 self.failure_is_an_option,
                                                                 self.global_failure_args,
                                                                 cl.LocalMemory(np.long(bytes_44274)),
                                                                 cl.LocalMemory(np.long(bytes_44274)),
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29024))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29024))),
                                                                 cl.LocalMemory(np.long((np.int32(1) * iota32_arg_29024))),
                                                                 cl.LocalMemory(np.long(bytes_44274)),
                                                                 np.int64(N_28624),
                                                                 np.int32(n_28629),
                                                                 np.int64(iota32_arg_29024),
                                                                 np.int64(distance_29056),
                                                                 defunc_4_map_res_mem_44173,
                                                                 defunc_4_map_res_mem_44174,
                                                                 defunc_4_map_res_mem_44175,
                                                                 defunc_3_map_res_mem_44237,
                                                                 defunc_3_map_res_mem_44238,
                                                                 defunc_3_map_res_mem_44239,
                                                                 defunc_0_f_res_mem_44272,
                                                                 mem_44277,
                                                                 mem_44311,
                                                                 mem_44313,
                                                                 mem_44315)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_36788_var,
                                   ((np.long(m_28625) * np.long(iota32_arg_29024)),),
                                   (np.long(iota32_arg_29024),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_44379 = mem_44311
      defunc_0_f_res_mem_44380 = mem_44313
      defunc_0_f_res_mem_44381 = mem_44315
    else:
      mem_44318 = opencl_alloc(self, bytes_44154, "mem_44318")
      mem_44320 = opencl_alloc(self, bytes_44154, "mem_44320")
      if ((1 * (np.long(num_groups_37751) * np.long(segmap_group_sizze_37750))) != 0):
        self.mainMagnitudezisegmap_37728_var.set_args(self.global_failure,
                                                      np.int64(m_28625),
                                                      np.int64(num_groups_37751),
                                                      defunc_4_map_res_mem_44173,
                                                      defunc_3_map_res_mem_44238,
                                                      defunc_3_map_res_mem_44239,
                                                      mem_44318, mem_44320)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37728_var,
                                   ((np.long(num_groups_37751) * np.long(segmap_group_sizze_37750)),),
                                   (np.long(segmap_group_sizze_37750),))
        if synchronous:
          sync(self)
      mem_44324 = opencl_alloc(self, bytes_44322, "mem_44324")
      if slt64(np.int64(0), (m_28625 * iota32_arg_29024)):
        stage1_max_num_groups_45594 = self.max_group_size
        stage1_num_groups_45595 = smin64(stage1_max_num_groups_45594,
                                         num_groups_37774)
        num_threads_45596 = sext_i64_i32((stage1_num_groups_45595 * segscan_group_sizze_37773))
        if ((1 * (np.long(stage1_num_groups_45595) * np.long(segscan_group_sizze_37773))) != 0):
          self.mainMagnitudeziscan_stage1_37695_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * segscan_group_sizze_37773)))),
                                                             np.int64(N_28624),
                                                             np.int64(m_28625),
                                                             np.int64(iota32_arg_29024),
                                                             defunc_4_map_res_mem_44174,
                                                             defunc_3_map_res_mem_44237,
                                                             defunc_3_map_res_mem_44238,
                                                             defunc_0_f_res_mem_44272,
                                                             mem_44320,
                                                             mem_44324,
                                                             np.int32(num_threads_45596))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_37695_var,
                                     ((np.long(stage1_num_groups_45595) * np.long(segscan_group_sizze_37773)),),
                                     (np.long(segscan_group_sizze_37773),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45595))) != 0):
          self.mainMagnitudeziscan_stage2_37695_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * stage1_num_groups_45595)))),
                                                             np.int64(m_28625),
                                                             np.int64(iota32_arg_29024),
                                                             mem_44324,
                                                             np.int64(stage1_num_groups_45595),
                                                             np.int32(num_threads_45596))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_37695_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45595)),),
                                     (np.long(stage1_num_groups_45595),))
          if synchronous:
            sync(self)
        required_groups_45638 = sext_i64_i32(sdiv_up64((m_28625 * iota32_arg_29024),
                                                       segscan_group_sizze_37773))
        if ((1 * (np.long(num_groups_37774) * np.long(segscan_group_sizze_37773))) != 0):
          self.mainMagnitudeziscan_stage3_37695_var.set_args(self.global_failure,
                                                             np.int64(m_28625),
                                                             np.int64(iota32_arg_29024),
                                                             np.int64(num_groups_37774),
                                                             mem_44324,
                                                             np.int32(num_threads_45596),
                                                             np.int32(required_groups_45638))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_37695_var,
                                     ((np.long(num_groups_37774) * np.long(segscan_group_sizze_37773)),),
                                     (np.long(segscan_group_sizze_37773),))
          if synchronous:
            sync(self)
      mem_44327 = opencl_alloc(self, m_28625, "mem_44327")
      mem_44329 = opencl_alloc(self, bytes_44154, "mem_44329")
      mem_44331 = opencl_alloc(self, bytes_44154, "mem_44331")
      if slt64((iota32_arg_29024 * np.int64(2)), segred_group_sizze_37811):
        segment_sizze_nonzzero_45650 = smax64(np.int64(1), iota32_arg_29024)
        num_threads_45651 = (num_groups_37812 * segred_group_sizze_37811)
        if ((1 * (np.long(num_groups_37812) * np.long(segred_group_sizze_37811))) != 0):
          self.mainMagnitudezisegred_small_37641_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37811))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37811))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37811))),
                                                              np.int64(m_28625),
                                                              np.int64(iota32_arg_29024),
                                                              np.int64(num_groups_37812),
                                                              mem_44277,
                                                              mem_44318,
                                                              mem_44320,
                                                              mem_44324,
                                                              mem_44327,
                                                              mem_44329,
                                                              mem_44331,
                                                              np.int64(segment_sizze_nonzzero_45650))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_37641_var,
                                     ((np.long(num_groups_37812) * np.long(segred_group_sizze_37811)),),
                                     (np.long(segred_group_sizze_37811),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45686 = sdiv_up64(num_groups_37812,
                                             smax64(np.int64(1), m_28625))
        elements_per_thread_45687 = sdiv_up64(iota32_arg_29024,
                                              (segred_group_sizze_37811 * groups_per_segment_45686))
        virt_num_groups_45688 = (groups_per_segment_45686 * m_28625)
        num_threads_45689 = (num_groups_37812 * segred_group_sizze_37811)
        threads_per_segment_45690 = (groups_per_segment_45686 * segred_group_sizze_37811)
        group_res_arr_mem_45691 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_37811 * virt_num_groups_45688)),
                                               "group_res_arr_mem_45691")
        group_res_arr_mem_45693 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37811 * virt_num_groups_45688)),
                                               "group_res_arr_mem_45693")
        group_res_arr_mem_45695 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37811 * virt_num_groups_45688)),
                                               "group_res_arr_mem_45695")
        mainMagnitudezicounter_mem_45697 = self.mainMagnitudezicounter_mem_45697
        if ((1 * (np.long(num_groups_37812) * np.long(segred_group_sizze_37811))) != 0):
          self.mainMagnitudezisegred_large_37641_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37811))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37811))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37811))),
                                                              np.int64(iota32_arg_29024),
                                                              np.int64(num_groups_37812),
                                                              mem_44277,
                                                              mem_44318,
                                                              mem_44320,
                                                              mem_44324,
                                                              mem_44327,
                                                              mem_44329,
                                                              mem_44331,
                                                              np.int64(groups_per_segment_45686),
                                                              np.int64(elements_per_thread_45687),
                                                              np.int64(virt_num_groups_45688),
                                                              group_res_arr_mem_45691,
                                                              group_res_arr_mem_45693,
                                                              group_res_arr_mem_45695,
                                                              mainMagnitudezicounter_mem_45697)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_37641_var,
                                     ((np.long(num_groups_37812) * np.long(segred_group_sizze_37811)),),
                                     (np.long(segred_group_sizze_37811),))
          if synchronous:
            sync(self)
      mem_44318 = None
      mem_44324 = None
      segmap_usable_groups_37851 = sdiv_up64(m_28625, segmap_group_sizze_37850)
      mem_44334 = opencl_alloc(self, m_28625, "mem_44334")
      mem_44336 = opencl_alloc(self, bytes_44154, "mem_44336")
      mem_44338 = opencl_alloc(self, bytes_44154, "mem_44338")
      if ((1 * (np.long(segmap_usable_groups_37851) * np.long(segmap_group_sizze_37850))) != 0):
        self.mainMagnitudezisegmap_37602_var.set_args(self.global_failure,
                                                      np.int64(m_28625),
                                                      mem_44320, mem_44327,
                                                      mem_44329, mem_44331,
                                                      mem_44334, mem_44336,
                                                      mem_44338)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37602_var,
                                   ((np.long(segmap_usable_groups_37851) * np.long(segmap_group_sizze_37850)),),
                                   (np.long(segmap_group_sizze_37850),))
        if synchronous:
          sync(self)
      mem_44327 = None
      mem_44329 = None
      mem_44331 = None
      segmap_usable_groups_37886 = sdiv_up64(nest_sizze_37772,
                                             segmap_group_sizze_37885)
      mem_44342 = opencl_alloc(self, bytes_44322, "mem_44342")
      if ((1 * (np.long(segmap_usable_groups_37886) * np.long(segmap_group_sizze_37885))) != 0):
        self.mainMagnitudezisegmap_37540_var.set_args(self.global_failure,
                                                      self.failure_is_an_option,
                                                      self.global_failure_args,
                                                      np.int64(N_28624),
                                                      np.int64(m_28625),
                                                      np.int64(iota32_arg_29024),
                                                      defunc_4_map_res_mem_44174,
                                                      defunc_3_map_res_mem_44238,
                                                      mem_44320, mem_44342)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37540_var,
                                   ((np.long(segmap_usable_groups_37886) * np.long(segmap_group_sizze_37885)),),
                                   (np.long(segmap_group_sizze_37885),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      segmap_usable_groups_37915 = sdiv_up64(m_28625, segmap_group_sizze_37914)
      mem_44345 = opencl_alloc(self, bytes_44322, "mem_44345")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44345, np.int64(0),
                                                  mem_44342, np.int64(0),
                                                  np.int64(1), iota32_arg_29024,
                                                  m_28625)
      mem_44342 = None
      mem_44376 = opencl_alloc(self, bytes_44154, "mem_44376")
      mem_44378 = opencl_alloc(self, bytes_44154, "mem_44378")
      num_threads_44578 = (segmap_group_sizze_37914 * segmap_usable_groups_37915)
      total_sizze_44579 = (bytes_44274 * num_threads_44578)
      mem_44356 = opencl_alloc(self, total_sizze_44579, "mem_44356")
      if ((1 * (np.long(segmap_usable_groups_37915) * np.long(segmap_group_sizze_37914))) != 0):
        self.mainMagnitudezisegmap_37402_var.set_args(self.global_failure,
                                                      self.failure_is_an_option,
                                                      self.global_failure_args,
                                                      np.int64(N_28624),
                                                      np.int64(m_28625),
                                                      np.int32(n_28629),
                                                      np.int64(iota32_arg_29024),
                                                      np.int64(distance_29056),
                                                      np.int64(segmap_usable_groups_37915),
                                                      defunc_4_map_res_mem_44173,
                                                      defunc_4_map_res_mem_44175,
                                                      defunc_3_map_res_mem_44238,
                                                      mem_44320, mem_44334,
                                                      mem_44336, mem_44345,
                                                      mem_44356, mem_44376,
                                                      mem_44378)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37402_var,
                                   ((np.long(segmap_usable_groups_37915) * np.long(segmap_group_sizze_37914)),),
                                   (np.long(segmap_group_sizze_37914),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_44320 = None
      mem_44334 = None
      mem_44336 = None
      mem_44345 = None
      mem_44356 = None
      defunc_0_f_res_mem_44379 = mem_44376
      defunc_0_f_res_mem_44380 = mem_44338
      defunc_0_f_res_mem_44381 = mem_44378
    defunc_4_map_res_mem_44173 = None
    defunc_4_map_res_mem_44174 = None
    defunc_4_map_res_mem_44175 = None
    defunc_3_map_res_mem_44237 = None
    defunc_3_map_res_mem_44238 = None
    defunc_3_map_res_mem_44239 = None
    defunc_0_f_res_mem_44272 = None
    mem_44277 = None
    out_arrsizze_44627 = m_28625
    out_arrsizze_44629 = m_28625
    out_arrsizze_44631 = m_28625
    out_mem_44626 = defunc_0_f_res_mem_44379
    out_mem_44628 = defunc_0_f_res_mem_44380
    out_mem_44630 = defunc_0_f_res_mem_44381
    return (out_mem_44626, out_arrsizze_44627, out_mem_44628,
            out_arrsizze_44629, out_mem_44630, out_arrsizze_44631)
  def futhark_remove_nans(self, images_mem_43377, m_27917, n_27918, p_27919,
                          nan_value_27920):
    y_29922 = (n_27918 * p_27919)
    nest_sizze_29923 = (m_27917 * y_29922)
    segmap_group_sizze_29924 = self.sizes["remove_nans.segmap_group_size_29867"]
    segmap_usable_groups_29925 = sdiv_up64(nest_sizze_29923,
                                           segmap_group_sizze_29924)
    binop_x_43380 = (m_27917 * n_27918)
    binop_x_43381 = (p_27919 * binop_x_43380)
    bytes_43379 = (np.int64(4) * binop_x_43381)
    mem_43382 = opencl_alloc(self, bytes_43379, "mem_43382")
    if ((1 * (np.long(segmap_usable_groups_29925) * np.long(segmap_group_sizze_29924))) != 0):
      self.remove_nanszisegmap_29863_var.set_args(self.global_failure,
                                                  np.int64(m_27917),
                                                  np.int64(n_27918),
                                                  np.int64(p_27919),
                                                  np.int16(nan_value_27920),
                                                  images_mem_43377, mem_43382)
      cl.enqueue_nd_range_kernel(self.queue, self.remove_nanszisegmap_29863_var,
                                 ((np.long(segmap_usable_groups_29925) * np.long(segmap_group_sizze_29924)),),
                                 (np.long(segmap_group_sizze_29924),))
      if synchronous:
        sync(self)
    out_arrsizze_44627 = m_27917
    out_arrsizze_44628 = n_27918
    out_arrsizze_44629 = p_27919
    out_mem_44626 = mem_43382
    return (out_mem_44626, out_arrsizze_44627, out_arrsizze_44628,
            out_arrsizze_44629)
  def futhark_reshapeTransp(self, images_mem_43377, m_27910, n_27911, p_27912):
    flatten_to_arg_27914 = (n_27911 * p_27912)
    binop_x_43379 = (m_27910 * flatten_to_arg_27914)
    bytes_43378 = (np.int64(4) * binop_x_43379)
    mem_43380 = opencl_alloc(self, bytes_43378, "mem_43380")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43380, np.int64(0),
                                                images_mem_43377, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_27914, m_27910)
    out_arrsizze_44627 = flatten_to_arg_27914
    out_arrsizze_44628 = m_27910
    out_mem_44626 = mem_43380
    return (out_mem_44626, out_arrsizze_44627, out_arrsizze_44628)
  def main(self, trend_29261_ext, k_29262_ext, n_29263_ext, freq_29264_ext,
           hfrac_29265_ext, lam_29266_ext, mappingindices_mem_43377_ext,
           images_mem_43378_ext):
    try:
      trend_29261 = np.int32(ct.c_int32(trend_29261_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_29261_ext),
                                                                                                                            trend_29261_ext))
    try:
      k_29262 = np.int32(ct.c_int32(k_29262_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_29262_ext),
                                                                                                                            k_29262_ext))
    try:
      n_29263 = np.int32(ct.c_int32(n_29263_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_29263_ext),
                                                                                                                            n_29263_ext))
    try:
      freq_29264 = np.float32(ct.c_float(freq_29264_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_29264_ext),
                                                                                                                            freq_29264_ext))
    try:
      hfrac_29265 = np.float32(ct.c_float(hfrac_29265_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_29265_ext),
                                                                                                                            hfrac_29265_ext))
    try:
      lam_29266 = np.float32(ct.c_float(lam_29266_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_29266_ext),
                                                                                                                            lam_29266_ext))
    try:
      assert ((type(mappingindices_mem_43377_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43377_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_29258 = np.int64(mappingindices_mem_43377_ext.shape[0])
      if (type(mappingindices_mem_43377_ext) == cl.array.Array):
        mappingindices_mem_43377 = mappingindices_mem_43377_ext.data
      else:
        mappingindices_mem_43377 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43377_ext.nbytes),
                                                "mappingindices_mem_43377")
        if (np.int64(mappingindices_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43377,
                          normaliseArray(mappingindices_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43377_ext),
                                                                                                                            mappingindices_mem_43377_ext))
    try:
      assert ((type(images_mem_43378_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43378_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_29259 = np.int64(images_mem_43378_ext.shape[0])
      N_29260 = np.int64(images_mem_43378_ext.shape[1])
      if (type(images_mem_43378_ext) == cl.array.Array):
        images_mem_43378 = images_mem_43378_ext.data
      else:
        images_mem_43378 = opencl_alloc(self,
                                        np.int64(images_mem_43378_ext.nbytes),
                                        "images_mem_43378")
        if (np.int64(images_mem_43378_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43378,
                          normaliseArray(images_mem_43378_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43378_ext),
                                                                                                                            images_mem_43378_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44626, out_arrsizze_44627, out_mem_44628,
       out_arrsizze_44629) = self.futhark_main(mappingindices_mem_43377,
                                               images_mem_43378, N_29258,
                                               m_29259, N_29260, trend_29261,
                                               k_29262, n_29263, freq_29264,
                                               hfrac_29265, lam_29266)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44627,), ct.c_int32,
                           data=out_mem_44626), cl.array.Array(self.queue,
                                                               (out_arrsizze_44629,),
                                                               ct.c_float,
                                                               data=out_mem_44628))
  def mainDetailed(self, trend_27934_ext, k_27935_ext, n_27936_ext,
                   freq_27937_ext, hfrac_27938_ext, lam_27939_ext,
                   mappingindices_mem_43377_ext, images_mem_43378_ext):
    try:
      trend_27934 = np.int32(ct.c_int32(trend_27934_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27934_ext),
                                                                                                                            trend_27934_ext))
    try:
      k_27935 = np.int32(ct.c_int32(k_27935_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27935_ext),
                                                                                                                            k_27935_ext))
    try:
      n_27936 = np.int32(ct.c_int32(n_27936_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27936_ext),
                                                                                                                            n_27936_ext))
    try:
      freq_27937 = np.float32(ct.c_float(freq_27937_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27937_ext),
                                                                                                                            freq_27937_ext))
    try:
      hfrac_27938 = np.float32(ct.c_float(hfrac_27938_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27938_ext),
                                                                                                                            hfrac_27938_ext))
    try:
      lam_27939 = np.float32(ct.c_float(lam_27939_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27939_ext),
                                                                                                                            lam_27939_ext))
    try:
      assert ((type(mappingindices_mem_43377_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43377_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_27931 = np.int64(mappingindices_mem_43377_ext.shape[0])
      if (type(mappingindices_mem_43377_ext) == cl.array.Array):
        mappingindices_mem_43377 = mappingindices_mem_43377_ext.data
      else:
        mappingindices_mem_43377 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43377_ext.nbytes),
                                                "mappingindices_mem_43377")
        if (np.int64(mappingindices_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43377,
                          normaliseArray(mappingindices_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43377_ext),
                                                                                                                            mappingindices_mem_43377_ext))
    try:
      assert ((type(images_mem_43378_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43378_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_27932 = np.int64(images_mem_43378_ext.shape[0])
      N_27933 = np.int64(images_mem_43378_ext.shape[1])
      if (type(images_mem_43378_ext) == cl.array.Array):
        images_mem_43378 = images_mem_43378_ext.data
      else:
        images_mem_43378 = opencl_alloc(self,
                                        np.int64(images_mem_43378_ext.nbytes),
                                        "images_mem_43378")
        if (np.int64(images_mem_43378_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43378,
                          normaliseArray(images_mem_43378_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43378_ext),
                                                                                                                            images_mem_43378_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44626, out_arrsizze_44627, out_mem_44628, out_arrsizze_44629,
       out_mem_44630, out_arrsizze_44631, out_mem_44632, out_arrsizze_44633,
       out_mem_44634, out_arrsizze_44635, out_arrsizze_44636, out_mem_44637,
       out_arrsizze_44638, out_arrsizze_44639, out_mem_44640,
       out_arrsizze_44641, out_mem_44642, out_arrsizze_44643, out_mem_44644,
       out_arrsizze_44645, out_mem_44646, out_arrsizze_44647, out_mem_44648,
       out_arrsizze_44649, out_arrsizze_44650, out_mem_44651,
       out_arrsizze_44652,
       out_arrsizze_44653) = self.futhark_mainDetailed(mappingindices_mem_43377,
                                                       images_mem_43378,
                                                       N_27931, m_27932,
                                                       N_27933, trend_27934,
                                                       k_27935, n_27936,
                                                       freq_27937, hfrac_27938,
                                                       lam_27939)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44627,), ct.c_float,
                           data=out_mem_44626), cl.array.Array(self.queue,
                                                               (out_arrsizze_44629,),
                                                               ct.c_int32,
                                                               data=out_mem_44628),
            cl.array.Array(self.queue, (out_arrsizze_44631,), ct.c_int32,
                           data=out_mem_44630), cl.array.Array(self.queue,
                                                               (out_arrsizze_44633,),
                                                               ct.c_float,
                                                               data=out_mem_44632),
            cl.array.Array(self.queue, (out_arrsizze_44635, out_arrsizze_44636),
                           ct.c_float, data=out_mem_44634),
            cl.array.Array(self.queue, (out_arrsizze_44638, out_arrsizze_44639),
                           ct.c_float, data=out_mem_44637),
            cl.array.Array(self.queue, (out_arrsizze_44641,), ct.c_float,
                           data=out_mem_44640), cl.array.Array(self.queue,
                                                               (out_arrsizze_44643,),
                                                               ct.c_int32,
                                                               data=out_mem_44642),
            cl.array.Array(self.queue, (out_arrsizze_44645,), ct.c_float,
                           data=out_mem_44644), cl.array.Array(self.queue,
                                                               (out_arrsizze_44647,),
                                                               ct.c_float,
                                                               data=out_mem_44646),
            cl.array.Array(self.queue, (out_arrsizze_44649, out_arrsizze_44650),
                           ct.c_float, data=out_mem_44648),
            cl.array.Array(self.queue, (out_arrsizze_44652, out_arrsizze_44653),
                           ct.c_float, data=out_mem_44651))
  def mainMagnitude(self, trend_28627_ext, k_28628_ext, n_28629_ext,
                    freq_28630_ext, hfrac_28631_ext, lam_28632_ext,
                    mappingindices_mem_43377_ext, images_mem_43378_ext):
    try:
      trend_28627 = np.int32(ct.c_int32(trend_28627_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28627_ext),
                                                                                                                            trend_28627_ext))
    try:
      k_28628 = np.int32(ct.c_int32(k_28628_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28628_ext),
                                                                                                                            k_28628_ext))
    try:
      n_28629 = np.int32(ct.c_int32(n_28629_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28629_ext),
                                                                                                                            n_28629_ext))
    try:
      freq_28630 = np.float32(ct.c_float(freq_28630_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28630_ext),
                                                                                                                            freq_28630_ext))
    try:
      hfrac_28631 = np.float32(ct.c_float(hfrac_28631_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28631_ext),
                                                                                                                            hfrac_28631_ext))
    try:
      lam_28632 = np.float32(ct.c_float(lam_28632_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28632_ext),
                                                                                                                            lam_28632_ext))
    try:
      assert ((type(mappingindices_mem_43377_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43377_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_28624 = np.int64(mappingindices_mem_43377_ext.shape[0])
      if (type(mappingindices_mem_43377_ext) == cl.array.Array):
        mappingindices_mem_43377 = mappingindices_mem_43377_ext.data
      else:
        mappingindices_mem_43377 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43377_ext.nbytes),
                                                "mappingindices_mem_43377")
        if (np.int64(mappingindices_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43377,
                          normaliseArray(mappingindices_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43377_ext),
                                                                                                                            mappingindices_mem_43377_ext))
    try:
      assert ((type(images_mem_43378_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43378_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_28625 = np.int64(images_mem_43378_ext.shape[0])
      N_28626 = np.int64(images_mem_43378_ext.shape[1])
      if (type(images_mem_43378_ext) == cl.array.Array):
        images_mem_43378 = images_mem_43378_ext.data
      else:
        images_mem_43378 = opencl_alloc(self,
                                        np.int64(images_mem_43378_ext.nbytes),
                                        "images_mem_43378")
        if (np.int64(images_mem_43378_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43378,
                          normaliseArray(images_mem_43378_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43378_ext),
                                                                                                                            images_mem_43378_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44626, out_arrsizze_44627, out_mem_44628, out_arrsizze_44629,
       out_mem_44630,
       out_arrsizze_44631) = self.futhark_mainMagnitude(mappingindices_mem_43377,
                                                        images_mem_43378,
                                                        N_28624, m_28625,
                                                        N_28626, trend_28627,
                                                        k_28628, n_28629,
                                                        freq_28630, hfrac_28631,
                                                        lam_28632)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44627,), ct.c_int32,
                           data=out_mem_44626), cl.array.Array(self.queue,
                                                               (out_arrsizze_44629,),
                                                               ct.c_float,
                                                               data=out_mem_44628),
            cl.array.Array(self.queue, (out_arrsizze_44631,), ct.c_float,
                           data=out_mem_44630))
  def remove_nans(self, nan_value_27920_ext, images_mem_43377_ext):
    try:
      nan_value_27920 = np.int16(ct.c_int16(nan_value_27920_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_27920_ext),
                                                                                                                            nan_value_27920_ext))
    try:
      assert ((type(images_mem_43377_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43377_ext.dtype == np.int16)), "Parameter has unexpected type"
      m_27917 = np.int64(images_mem_43377_ext.shape[0])
      n_27918 = np.int64(images_mem_43377_ext.shape[1])
      p_27919 = np.int64(images_mem_43377_ext.shape[2])
      if (type(images_mem_43377_ext) == cl.array.Array):
        images_mem_43377 = images_mem_43377_ext.data
      else:
        images_mem_43377 = opencl_alloc(self,
                                        np.int64(images_mem_43377_ext.nbytes),
                                        "images_mem_43377")
        if (np.int64(images_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43377,
                          normaliseArray(images_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_43377_ext),
                                                                                                                            images_mem_43377_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44626, out_arrsizze_44627, out_arrsizze_44628,
       out_arrsizze_44629) = self.futhark_remove_nans(images_mem_43377, m_27917,
                                                      n_27918, p_27919,
                                                      nan_value_27920)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44627, out_arrsizze_44628,
                                       out_arrsizze_44629), ct.c_float,
                          data=out_mem_44626)
  def reshapeTransp(self, images_mem_43377_ext):
    try:
      assert ((type(images_mem_43377_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43377_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_27910 = np.int64(images_mem_43377_ext.shape[0])
      n_27911 = np.int64(images_mem_43377_ext.shape[1])
      p_27912 = np.int64(images_mem_43377_ext.shape[2])
      if (type(images_mem_43377_ext) == cl.array.Array):
        images_mem_43377 = images_mem_43377_ext.data
      else:
        images_mem_43377 = opencl_alloc(self,
                                        np.int64(images_mem_43377_ext.nbytes),
                                        "images_mem_43377")
        if (np.int64(images_mem_43377_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43377,
                          normaliseArray(images_mem_43377_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_43377_ext),
                                                                                                                            images_mem_43377_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44626, out_arrsizze_44627,
       out_arrsizze_44628) = self.futhark_reshapeTransp(images_mem_43377,
                                                        m_27910, n_27911,
                                                        p_27912)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44627, out_arrsizze_44628),
                          ct.c_float, data=out_mem_44626)
