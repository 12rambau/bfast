import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_reg_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_reg_tile_size' in sizes:
        default_reg_tile_size = sizes['default_reg_tile_size']
        del sizes['default_reg_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'reg_tile_size': default_reg_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    default_reg_tile_size = default_sizes['reg_tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'] == 'reg_tile_size':
            max_value = None
            default_value = default_reg_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
#pragma OPENCL EXTENSION cl_khr_int64_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_int64_extended_atomics : enable
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzll(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline double fsignum32(double x)
{
    return futrts_isnan32(x) ? x : (x > 0) - (x < 0);
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                        int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_global((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_local((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

// Start of 64 bit atomics

inline int64_t atomic_xchg_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xchg_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_cmpxchg_i64_global(volatile __global int64_t *p,
                                         int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_cmpxchg_i64_local(volatile __local int64_t *p,
                                        int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_add_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

inline int64_t atomic_add_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

inline double atomic_fadd_f64_global(volatile __global double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_global((volatile __global int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline double atomic_fadd_f64_local(volatile __local double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_local((volatile __local int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int64_t atomic_smax_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smax_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smin_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_smin_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umax_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umax_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umin_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umin_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_and_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_and_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_or_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_or_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_xor_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xor_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_44475(int32_t num_elems_44472,
                                                      float val_44473, __global
                                                      unsigned char *mem_44471)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44475;
    int32_t replicate_ltid_44476;
    int32_t replicate_gid_44477;
    
    replicate_gtid_44475 = get_global_id(0);
    replicate_ltid_44476 = get_local_id(0);
    replicate_gid_44477 = get_group_id(0);
    if (slt64(replicate_gtid_44475, num_elems_44472)) {
        ((__global float *) mem_44471)[sext_i32_i64(replicate_gtid_44475)] =
            val_44473;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_44484(int32_t num_elems_44481,
                                                      int32_t val_44482,
                                                      __global
                                                      unsigned char *mem_44480)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44484;
    int32_t replicate_ltid_44485;
    int32_t replicate_gid_44486;
    
    replicate_gtid_44484 = get_global_id(0);
    replicate_ltid_44485 = get_local_id(0);
    replicate_gid_44486 = get_group_id(0);
    if (slt64(replicate_gtid_44484, num_elems_44481)) {
        ((__global int32_t *) mem_44480)[sext_i32_i64(replicate_gtid_44484)] =
            val_44482;
    }
    
  error_0:
    return;
}
__kernel void convertToFloatzisegmap_29261(__global int *global_failure,
                                           int64_t m_27356, int64_t n_27357,
                                           int64_t p_27358,
                                           int16_t nan_value_27359, __global
                                           unsigned char *images_mem_42537,
                                           __global unsigned char *mem_42542)
{
    #define segmap_group_sizze_29322 (convertToFloatzisegmap_group_sizze_29265)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43834;
    int32_t local_tid_43835;
    int64_t group_sizze_43838;
    int32_t wave_sizze_43837;
    int32_t group_tid_43836;
    
    global_tid_43834 = get_global_id(0);
    local_tid_43835 = get_local_id(0);
    group_sizze_43838 = get_local_size(0);
    wave_sizze_43837 = LOCKSTEP_WIDTH;
    group_tid_43836 = get_group_id(0);
    
    int32_t phys_tid_29261;
    
    phys_tid_29261 = global_tid_43834;
    
    int64_t gtid_29258;
    
    gtid_29258 = squot64(sext_i32_i64(group_tid_43836) *
                         segmap_group_sizze_29322 +
                         sext_i32_i64(local_tid_43835), n_27357 * p_27358);
    
    int64_t gtid_29259;
    
    gtid_29259 = squot64(sext_i32_i64(group_tid_43836) *
                         segmap_group_sizze_29322 +
                         sext_i32_i64(local_tid_43835) -
                         squot64(sext_i32_i64(group_tid_43836) *
                                 segmap_group_sizze_29322 +
                                 sext_i32_i64(local_tid_43835), n_27357 *
                                 p_27358) * (n_27357 * p_27358), p_27358);
    
    int64_t gtid_29260;
    
    gtid_29260 = sext_i32_i64(group_tid_43836) * segmap_group_sizze_29322 +
        sext_i32_i64(local_tid_43835) - squot64(sext_i32_i64(group_tid_43836) *
                                                segmap_group_sizze_29322 +
                                                sext_i32_i64(local_tid_43835),
                                                n_27357 * p_27358) * (n_27357 *
                                                                      p_27358) -
        squot64(sext_i32_i64(group_tid_43836) * segmap_group_sizze_29322 +
                sext_i32_i64(local_tid_43835) -
                squot64(sext_i32_i64(group_tid_43836) *
                        segmap_group_sizze_29322 +
                        sext_i32_i64(local_tid_43835), n_27357 * p_27358) *
                (n_27357 * p_27358), p_27358) * p_27358;
    if ((slt64(gtid_29258, m_27356) && slt64(gtid_29259, n_27357)) &&
        slt64(gtid_29260, p_27358)) {
        int16_t x_29325 = ((__global int16_t *) images_mem_42537)[gtid_29258 *
                                                                  (p_27358 *
                                                                   n_27357) +
                                                                  gtid_29259 *
                                                                  p_27358 +
                                                                  gtid_29260];
        bool cond_29326 = x_29325 == nan_value_27359;
        float defunc_0_f_res_29327;
        
        if (cond_29326) {
            defunc_0_f_res_29327 = NAN;
        } else {
            float i16_res_29328 = sitofp_i16_f32(x_29325);
            
            defunc_0_f_res_29327 = i16_res_29328;
        }
        ((__global float *) mem_42542)[gtid_29258 * (p_27358 * n_27357) +
                                       gtid_29259 * p_27358 + gtid_29260] =
            defunc_0_f_res_29327;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29322
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_44006(int64_t m_28661, int64_t i32_res_28809,
                               int64_t ctx_param_ext_42737,
                               int64_t ctx_param_ext_42738,
                               int64_t ctx_param_ext_42740, __global
                               unsigned char *mem_param_42742, __global
                               unsigned char *mem_42747)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44006;
    int32_t copy_ltid_44007;
    int32_t copy_gid_44008;
    
    copy_gtid_44006 = get_global_id(0);
    copy_ltid_44007 = get_local_id(0);
    copy_gid_44008 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44006), m_28661 * i32_res_28809)) {
        ((__global float *) mem_42747)[(sext_i32_i64(copy_gtid_44006) -
                                        squot64(sext_i32_i64(copy_gtid_44006),
                                                i32_res_28809) *
                                        i32_res_28809) * m_28661 +
                                       squot64(sext_i32_i64(copy_gtid_44006),
                                               i32_res_28809)] = ((__global
                                                                   float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44006),
                                                                                                      i32_res_28809) *
                                                                                              ctx_param_ext_42738 +
                                                                                              (sext_i32_i64(copy_gtid_44006) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44006),
                                                                                                       i32_res_28809) *
                                                                                               i32_res_28809) *
                                                                                              ctx_param_ext_42740)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_39339(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44418_backing_aligned_0,
                                      int64_t N_28660, int64_t m_28661,
                                      int32_t num_threads_44412, __global
                                      unsigned char *images_mem_42538, __global
                                      unsigned char *defunc_3_map_res_mem_43297,
                                      __global unsigned char *mem_43320,
                                      __global unsigned char *mem_43323)
{
    #define segscan_group_sizze_39356 (mainzisegscan_group_sizze_39333)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44418_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44418_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44413;
    int32_t local_tid_44414;
    int64_t group_sizze_44417;
    int32_t wave_sizze_44416;
    int32_t group_tid_44415;
    
    global_tid_44413 = get_global_id(0);
    local_tid_44414 = get_local_id(0);
    group_sizze_44417 = get_local_size(0);
    wave_sizze_44416 = LOCKSTEP_WIDTH;
    group_tid_44415 = get_group_id(0);
    
    int32_t phys_tid_39339;
    
    phys_tid_39339 = global_tid_44413;
    
    __local char *scan_arr_mem_44418;
    
    scan_arr_mem_44418 = (__local char *) scan_arr_mem_44418_backing_0;
    
    int64_t x_39361;
    int64_t x_39362;
    
    x_39361 = (int64_t) 0;
    for (int64_t j_44420 = 0; j_44420 < sdiv_up64(m_28661 * N_28660,
                                                  sext_i32_i64(num_threads_44412));
         j_44420++) {
        int64_t chunk_offset_44421 = segscan_group_sizze_39356 * j_44420 +
                sext_i32_i64(group_tid_44415) * (segscan_group_sizze_39356 *
                                                 sdiv_up64(m_28661 * N_28660,
                                                           sext_i32_i64(num_threads_44412)));
        int64_t flat_idx_44422 = chunk_offset_44421 +
                sext_i32_i64(local_tid_44414);
        int64_t gtid_39330 = squot64(flat_idx_44422, N_28660);
        int64_t gtid_39338 = flat_idx_44422 - squot64(flat_idx_44422, N_28660) *
                N_28660;
        
        // threads in bounds read input
        {
            if (slt64(gtid_39330, m_28661) && slt64(gtid_39338, N_28660)) {
                float x_39366 = ((__global
                                  float *) images_mem_42538)[gtid_39330 *
                                                             N_28660 +
                                                             gtid_39338];
                bool isnan_res_39368;
                
                isnan_res_39368 = futrts_isnan32(x_39366);
                
                bool cond_39369 = !isnan_res_39368;
                float defunc_1_f_res_39370;
                
                if (cond_39369) {
                    float x_39367 = ((__global
                                      float *) defunc_3_map_res_mem_43297)[gtid_39330 *
                                                                           N_28660 +
                                                                           gtid_39338];
                    float defunc_1_f_res_t_res_39371 = x_39366 - x_39367;
                    
                    defunc_1_f_res_39370 = defunc_1_f_res_t_res_39371;
                } else {
                    defunc_1_f_res_39370 = NAN;
                }
                
                bool isnan_res_39372;
                
                isnan_res_39372 = futrts_isnan32(defunc_1_f_res_39370);
                
                bool defunc_0_p_res_39373 = !isnan_res_39372;
                int64_t defunc_0_f_res_39374 =
                        btoi_bool_i64(defunc_0_p_res_39373);
                
                // write to-scan values to parameters
                {
                    x_39362 = defunc_0_f_res_39374;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43323)[gtid_39330 * N_28660 +
                                                   gtid_39338] =
                        defunc_1_f_res_39370;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_39330, m_28661) && slt64(gtid_39338,
                                                          N_28660))) {
                    x_39362 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_39363 = add64(x_39361, x_39362);
                
                ((__local
                  int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)] =
                    defunc_1_op_res_39363;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44423;
            int64_t x_44424;
            int64_t x_44426;
            int64_t x_44427;
            bool ltid_in_bounds_44429;
            
            ltid_in_bounds_44429 = slt64(sext_i32_i64(local_tid_44414),
                                         segscan_group_sizze_39356);
            
            int32_t skip_threads_44430;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44429) {
                    x_44424 = ((volatile __local
                                int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)];
                    if ((local_tid_44414 - squot32(local_tid_44414, 32) * 32) ==
                        0) {
                        x_44423 = x_44424;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44430 = 1;
                while (slt32(skip_threads_44430, 32)) {
                    if (sle32(skip_threads_44430, local_tid_44414 -
                              squot32(local_tid_44414, 32) * 32) &&
                        ltid_in_bounds_44429) {
                        // read operands
                        {
                            x_44423 = ((volatile __local
                                        int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414) -
                                                                       sext_i32_i64(skip_threads_44430)];
                        }
                        // perform operation
                        {
                            bool inactive_44431 =
                                 slt64(srem64(sext_i32_i64(local_tid_44414) +
                                              chunk_offset_44421, N_28660),
                                       sext_i32_i64(local_tid_44414) +
                                       chunk_offset_44421 -
                                       (sext_i32_i64(local_tid_44414 -
                                        skip_threads_44430) +
                                        chunk_offset_44421));
                            
                            if (inactive_44431) {
                                x_44423 = x_44424;
                            }
                            if (!inactive_44431) {
                                int64_t defunc_1_op_res_44425 = add64(x_44423,
                                                                      x_44424);
                                
                                x_44423 = defunc_1_op_res_44425;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44416, skip_threads_44430)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44430, local_tid_44414 -
                              squot32(local_tid_44414, 32) * 32) &&
                        ltid_in_bounds_44429) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)] =
                                x_44423;
                            x_44424 = x_44423;
                        }
                    }
                    if (sle32(wave_sizze_44416, skip_threads_44430)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44430 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44414 - squot32(local_tid_44414, 32) * 32) ==
                    31 && ltid_in_bounds_44429) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44418)[sext_i32_i64(squot32(local_tid_44414,
                                                                          32))] =
                        x_44423;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44432;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44414, 32) == 0 &&
                        ltid_in_bounds_44429) {
                        x_44427 = ((volatile __local
                                    int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)];
                        if ((local_tid_44414 - squot32(local_tid_44414, 32) *
                             32) == 0) {
                            x_44426 = x_44427;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44432 = 1;
                    while (slt32(skip_threads_44432, 32)) {
                        if (sle32(skip_threads_44432, local_tid_44414 -
                                  squot32(local_tid_44414, 32) * 32) &&
                            (squot32(local_tid_44414, 32) == 0 &&
                             ltid_in_bounds_44429)) {
                            // read operands
                            {
                                x_44426 = ((volatile __local
                                            int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414) -
                                                                           sext_i32_i64(skip_threads_44432)];
                            }
                            // perform operation
                            {
                                bool inactive_44433 =
                                     slt64(srem64(sext_i32_i64(local_tid_44414 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44421, N_28660),
                                           sext_i32_i64(local_tid_44414 * 32 +
                                           32 - 1) + chunk_offset_44421 -
                                           (sext_i32_i64((local_tid_44414 -
                                                          skip_threads_44432) *
                                            32 + 32 - 1) + chunk_offset_44421));
                                
                                if (inactive_44433) {
                                    x_44426 = x_44427;
                                }
                                if (!inactive_44433) {
                                    int64_t defunc_1_op_res_44428 =
                                            add64(x_44426, x_44427);
                                    
                                    x_44426 = defunc_1_op_res_44428;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44416, skip_threads_44432)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44432, local_tid_44414 -
                                  squot32(local_tid_44414, 32) * 32) &&
                            (squot32(local_tid_44414, 32) == 0 &&
                             ltid_in_bounds_44429)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)] =
                                    x_44426;
                                x_44427 = x_44426;
                            }
                        }
                        if (sle32(wave_sizze_44416, skip_threads_44432)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44432 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44414, 32) == 0 ||
                      !ltid_in_bounds_44429)) {
                    // read operands
                    {
                        x_44424 = x_44423;
                        x_44423 = ((__local
                                    int64_t *) scan_arr_mem_44418)[sext_i32_i64(squot32(local_tid_44414,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44434 =
                             slt64(srem64(sext_i32_i64(local_tid_44414) +
                                          chunk_offset_44421, N_28660),
                                   sext_i32_i64(local_tid_44414) +
                                   chunk_offset_44421 -
                                   (sext_i32_i64(squot32(local_tid_44414, 32) *
                                    32 - 1) + chunk_offset_44421));
                        
                        if (inactive_44434) {
                            x_44423 = x_44424;
                        }
                        if (!inactive_44434) {
                            int64_t defunc_1_op_res_44425 = add64(x_44423,
                                                                  x_44424);
                            
                            x_44423 = defunc_1_op_res_44425;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)] =
                            x_44423;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44414, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)] =
                        x_44424;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_39330, m_28661) && slt64(gtid_39338, N_28660)) {
                    ((__global int64_t *) mem_43320)[gtid_39330 * N_28660 +
                                                     gtid_39338] = ((__local
                                                                     int64_t *) scan_arr_mem_44418)[sext_i32_i64(local_tid_44414)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44435 = slt64(srem64(chunk_offset_44421 +
                                                          segscan_group_sizze_39356,
                                                          N_28660),
                                                   chunk_offset_44421 +
                                                   segscan_group_sizze_39356 -
                                                   (chunk_offset_44421 +
                                                    segscan_group_sizze_39356 -
                                                    (int64_t) 1));
                bool should_load_carry_44436 = local_tid_44414 == 0 &&
                     !crosses_segment_44435;
                
                if (should_load_carry_44436) {
                    x_39361 = ((__local
                                int64_t *) scan_arr_mem_44418)[segscan_group_sizze_39356 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44436) {
                    x_39361 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_39356
}
__kernel void mainziscan_stage1_40323(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44801_backing_aligned_0,
                                      int64_t N_28660, int64_t m_28661,
                                      int64_t iota32_arg_29056,
                                      int32_t num_threads_44795, __global
                                      unsigned char *defunc_4_map_res_mem_43335,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43401,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43402,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_43436,
                                      __global unsigned char *mem_43455,
                                      __global unsigned char *mem_43459)
{
    #define segscan_group_sizze_40401 (mainzisegscan_group_sizze_40317)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44801_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44801_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44796;
    int32_t local_tid_44797;
    int64_t group_sizze_44800;
    int32_t wave_sizze_44799;
    int32_t group_tid_44798;
    
    global_tid_44796 = get_global_id(0);
    local_tid_44797 = get_local_id(0);
    group_sizze_44800 = get_local_size(0);
    wave_sizze_44799 = LOCKSTEP_WIDTH;
    group_tid_44798 = get_group_id(0);
    
    int32_t phys_tid_40323;
    
    phys_tid_40323 = global_tid_44796;
    
    __local char *scan_arr_mem_44801;
    
    scan_arr_mem_44801 = (__local char *) scan_arr_mem_44801_backing_0;
    
    float x_40405;
    float x_40406;
    
    x_40405 = 0.0F;
    for (int64_t j_44803 = 0; j_44803 < sdiv_up64(m_28661 * iota32_arg_29056,
                                                  sext_i32_i64(num_threads_44795));
         j_44803++) {
        int64_t chunk_offset_44804 = segscan_group_sizze_40401 * j_44803 +
                sext_i32_i64(group_tid_44798) * (segscan_group_sizze_40401 *
                                                 sdiv_up64(m_28661 *
                                                           iota32_arg_29056,
                                                           sext_i32_i64(num_threads_44795)));
        int64_t flat_idx_44805 = chunk_offset_44804 +
                sext_i32_i64(local_tid_44797);
        int64_t gtid_40314 = squot64(flat_idx_44805, iota32_arg_29056);
        int64_t gtid_40322 = flat_idx_44805 - squot64(flat_idx_44805,
                                                      iota32_arg_29056) *
                iota32_arg_29056;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40314, m_28661) && slt64(gtid_40322,
                                                    iota32_arg_29056)) {
                int32_t y_40412 = ((__global int32_t *) mem_43455)[gtid_40314];
                int32_t index_primexp_40590 = sext_i64_i32(gtid_40322);
                bool cond_40415 = sle32(y_40412, index_primexp_40590);
                float defunc_0_f_res_40416;
                
                if (cond_40415) {
                    defunc_0_f_res_40416 = 0.0F;
                } else {
                    int32_t x_40408 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_40314];
                    int32_t x_40409 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43401)[gtid_40314];
                    float x_40410 = ((__global
                                      float *) defunc_0_f_res_mem_43436)[gtid_40314];
                    bool cond_40417 = index_primexp_40590 == 0;
                    float defunc_0_f_res_f_res_40418;
                    
                    if (cond_40417) {
                        defunc_0_f_res_f_res_40418 = x_40410;
                    } else {
                        int32_t i_40419 = add32(x_40408, index_primexp_40590);
                        int64_t i_40420 = sext_i32_i64(i_40419);
                        float x_40421 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_40314 *
                                                                               N_28660 +
                                                                               i_40420];
                        int32_t x_40422 = sub32(x_40408, x_40409);
                        int32_t i_40423 = add32(x_40422, index_primexp_40590);
                        int64_t i_40424 = sext_i32_i64(i_40423);
                        float y_40425 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_40314 *
                                                                               N_28660 +
                                                                               i_40424];
                        float defunc_0_f_res_f_res_f_res_40426 = x_40421 -
                              y_40425;
                        
                        defunc_0_f_res_f_res_40418 =
                            defunc_0_f_res_f_res_f_res_40426;
                    }
                    defunc_0_f_res_40416 = defunc_0_f_res_f_res_40418;
                }
                // write to-scan values to parameters
                {
                    x_40406 = defunc_0_f_res_40416;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40314, m_28661) && slt64(gtid_40322,
                                                          iota32_arg_29056))) {
                    x_40406 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_40407 = x_40405 + x_40406;
                
                ((__local
                  float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)] =
                    defunc_1_op_res_40407;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_44806;
            float x_44807;
            float x_44809;
            float x_44810;
            bool ltid_in_bounds_44812;
            
            ltid_in_bounds_44812 = slt64(sext_i32_i64(local_tid_44797),
                                         segscan_group_sizze_40401);
            
            int32_t skip_threads_44813;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44812) {
                    x_44807 = ((volatile __local
                                float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)];
                    if ((local_tid_44797 - squot32(local_tid_44797, 32) * 32) ==
                        0) {
                        x_44806 = x_44807;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44813 = 1;
                while (slt32(skip_threads_44813, 32)) {
                    if (sle32(skip_threads_44813, local_tid_44797 -
                              squot32(local_tid_44797, 32) * 32) &&
                        ltid_in_bounds_44812) {
                        // read operands
                        {
                            x_44806 = ((volatile __local
                                        float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797) -
                                                                     sext_i32_i64(skip_threads_44813)];
                        }
                        // perform operation
                        {
                            bool inactive_44814 =
                                 slt64(srem64(sext_i32_i64(local_tid_44797) +
                                              chunk_offset_44804,
                                              iota32_arg_29056),
                                       sext_i32_i64(local_tid_44797) +
                                       chunk_offset_44804 -
                                       (sext_i32_i64(local_tid_44797 -
                                        skip_threads_44813) +
                                        chunk_offset_44804));
                            
                            if (inactive_44814) {
                                x_44806 = x_44807;
                            }
                            if (!inactive_44814) {
                                float defunc_1_op_res_44808 = x_44806 + x_44807;
                                
                                x_44806 = defunc_1_op_res_44808;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44799, skip_threads_44813)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44813, local_tid_44797 -
                              squot32(local_tid_44797, 32) * 32) &&
                        ltid_in_bounds_44812) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)] =
                                x_44806;
                            x_44807 = x_44806;
                        }
                    }
                    if (sle32(wave_sizze_44799, skip_threads_44813)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44813 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44797 - squot32(local_tid_44797, 32) * 32) ==
                    31 && ltid_in_bounds_44812) {
                    ((volatile __local
                      float *) scan_arr_mem_44801)[sext_i32_i64(squot32(local_tid_44797,
                                                                        32))] =
                        x_44806;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44815;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44797, 32) == 0 &&
                        ltid_in_bounds_44812) {
                        x_44810 = ((volatile __local
                                    float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)];
                        if ((local_tid_44797 - squot32(local_tid_44797, 32) *
                             32) == 0) {
                            x_44809 = x_44810;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44815 = 1;
                    while (slt32(skip_threads_44815, 32)) {
                        if (sle32(skip_threads_44815, local_tid_44797 -
                                  squot32(local_tid_44797, 32) * 32) &&
                            (squot32(local_tid_44797, 32) == 0 &&
                             ltid_in_bounds_44812)) {
                            // read operands
                            {
                                x_44809 = ((volatile __local
                                            float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797) -
                                                                         sext_i32_i64(skip_threads_44815)];
                            }
                            // perform operation
                            {
                                bool inactive_44816 =
                                     slt64(srem64(sext_i32_i64(local_tid_44797 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44804,
                                                  iota32_arg_29056),
                                           sext_i32_i64(local_tid_44797 * 32 +
                                           32 - 1) + chunk_offset_44804 -
                                           (sext_i32_i64((local_tid_44797 -
                                                          skip_threads_44815) *
                                            32 + 32 - 1) + chunk_offset_44804));
                                
                                if (inactive_44816) {
                                    x_44809 = x_44810;
                                }
                                if (!inactive_44816) {
                                    float defunc_1_op_res_44811 = x_44809 +
                                          x_44810;
                                    
                                    x_44809 = defunc_1_op_res_44811;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44799, skip_threads_44815)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44815, local_tid_44797 -
                                  squot32(local_tid_44797, 32) * 32) &&
                            (squot32(local_tid_44797, 32) == 0 &&
                             ltid_in_bounds_44812)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)] =
                                    x_44809;
                                x_44810 = x_44809;
                            }
                        }
                        if (sle32(wave_sizze_44799, skip_threads_44815)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44815 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44797, 32) == 0 ||
                      !ltid_in_bounds_44812)) {
                    // read operands
                    {
                        x_44807 = x_44806;
                        x_44806 = ((__local
                                    float *) scan_arr_mem_44801)[sext_i32_i64(squot32(local_tid_44797,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44817 =
                             slt64(srem64(sext_i32_i64(local_tid_44797) +
                                          chunk_offset_44804, iota32_arg_29056),
                                   sext_i32_i64(local_tid_44797) +
                                   chunk_offset_44804 -
                                   (sext_i32_i64(squot32(local_tid_44797, 32) *
                                    32 - 1) + chunk_offset_44804));
                        
                        if (inactive_44817) {
                            x_44806 = x_44807;
                        }
                        if (!inactive_44817) {
                            float defunc_1_op_res_44808 = x_44806 + x_44807;
                            
                            x_44806 = defunc_1_op_res_44808;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)] =
                            x_44806;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44797, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)] =
                        x_44807;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40314, m_28661) && slt64(gtid_40322,
                                                        iota32_arg_29056)) {
                    ((__global float *) mem_43459)[gtid_40314 *
                                                   iota32_arg_29056 +
                                                   gtid_40322] = ((__local
                                                                   float *) scan_arr_mem_44801)[sext_i32_i64(local_tid_44797)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44818 = slt64(srem64(chunk_offset_44804 +
                                                          segscan_group_sizze_40401,
                                                          iota32_arg_29056),
                                                   chunk_offset_44804 +
                                                   segscan_group_sizze_40401 -
                                                   (chunk_offset_44804 +
                                                    segscan_group_sizze_40401 -
                                                    (int64_t) 1));
                bool should_load_carry_44819 = local_tid_44797 == 0 &&
                     !crosses_segment_44818;
                
                if (should_load_carry_44819) {
                    x_40405 = ((__local
                                float *) scan_arr_mem_44801)[segscan_group_sizze_40401 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_44819) {
                    x_40405 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_40401
}
__kernel void mainziscan_stage2_39339(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44442_backing_aligned_0,
                                      int64_t N_28660, int64_t m_28661,
                                      int64_t stage1_num_groups_44411,
                                      int32_t num_threads_44412, __global
                                      unsigned char *mem_43320)
{
    #define segscan_group_sizze_39356 (mainzisegscan_group_sizze_39333)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44442_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44442_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44437;
    int32_t local_tid_44438;
    int64_t group_sizze_44441;
    int32_t wave_sizze_44440;
    int32_t group_tid_44439;
    
    global_tid_44437 = get_global_id(0);
    local_tid_44438 = get_local_id(0);
    group_sizze_44441 = get_local_size(0);
    wave_sizze_44440 = LOCKSTEP_WIDTH;
    group_tid_44439 = get_group_id(0);
    
    int32_t phys_tid_39339;
    
    phys_tid_39339 = global_tid_44437;
    
    __local char *scan_arr_mem_44442;
    
    scan_arr_mem_44442 = (__local char *) scan_arr_mem_44442_backing_0;
    
    int64_t flat_idx_44444;
    
    flat_idx_44444 = (sext_i32_i64(local_tid_44438) + (int64_t) 1) *
        (segscan_group_sizze_39356 * sdiv_up64(m_28661 * N_28660,
                                               sext_i32_i64(num_threads_44412))) -
        (int64_t) 1;
    
    int64_t gtid_39330;
    
    gtid_39330 = squot64(flat_idx_44444, N_28660);
    
    int64_t gtid_39338;
    
    gtid_39338 = flat_idx_44444 - squot64(flat_idx_44444, N_28660) * N_28660;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_39330, m_28661) && slt64(gtid_39338, N_28660)) {
            ((__local
              int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)] =
                ((__global int64_t *) mem_43320)[gtid_39330 * N_28660 +
                                                 gtid_39338];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_39361;
    int64_t x_39362;
    int64_t x_44445;
    int64_t x_44446;
    bool ltid_in_bounds_44448;
    
    ltid_in_bounds_44448 = slt64(sext_i32_i64(local_tid_44438),
                                 stage1_num_groups_44411);
    
    int32_t skip_threads_44449;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44448) {
            x_39362 = ((volatile __local
                        int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)];
            if ((local_tid_44438 - squot32(local_tid_44438, 32) * 32) == 0) {
                x_39361 = x_39362;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44449 = 1;
        while (slt32(skip_threads_44449, 32)) {
            if (sle32(skip_threads_44449, local_tid_44438 -
                      squot32(local_tid_44438, 32) * 32) &&
                ltid_in_bounds_44448) {
                // read operands
                {
                    x_39361 = ((volatile __local
                                int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438) -
                                                               sext_i32_i64(skip_threads_44449)];
                }
                // perform operation
                {
                    bool inactive_44450 =
                         slt64(srem64((sext_i32_i64(local_tid_44438) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_39356 *
                                       sdiv_up64(m_28661 * N_28660,
                                                 sext_i32_i64(num_threads_44412))) -
                                      (int64_t) 1, N_28660),
                               (sext_i32_i64(local_tid_44438) + (int64_t) 1) *
                               (segscan_group_sizze_39356 * sdiv_up64(m_28661 *
                                                                      N_28660,
                                                                      sext_i32_i64(num_threads_44412))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44438 -
                                               skip_threads_44449) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_39356 *
                                               sdiv_up64(m_28661 * N_28660,
                                                         sext_i32_i64(num_threads_44412))) -
                                              (int64_t) 1));
                    
                    if (inactive_44450) {
                        x_39361 = x_39362;
                    }
                    if (!inactive_44450) {
                        int64_t defunc_1_op_res_39363 = add64(x_39361, x_39362);
                        
                        x_39361 = defunc_1_op_res_39363;
                    }
                }
            }
            if (sle32(wave_sizze_44440, skip_threads_44449)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44449, local_tid_44438 -
                      squot32(local_tid_44438, 32) * 32) &&
                ltid_in_bounds_44448) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)] =
                        x_39361;
                    x_39362 = x_39361;
                }
            }
            if (sle32(wave_sizze_44440, skip_threads_44449)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44449 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44438 - squot32(local_tid_44438, 32) * 32) == 31 &&
            ltid_in_bounds_44448) {
            ((volatile __local
              int64_t *) scan_arr_mem_44442)[sext_i32_i64(squot32(local_tid_44438,
                                                                  32))] =
                x_39361;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44451;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44438, 32) == 0 && ltid_in_bounds_44448) {
                x_44446 = ((volatile __local
                            int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)];
                if ((local_tid_44438 - squot32(local_tid_44438, 32) * 32) ==
                    0) {
                    x_44445 = x_44446;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44451 = 1;
            while (slt32(skip_threads_44451, 32)) {
                if (sle32(skip_threads_44451, local_tid_44438 -
                          squot32(local_tid_44438, 32) * 32) &&
                    (squot32(local_tid_44438, 32) == 0 &&
                     ltid_in_bounds_44448)) {
                    // read operands
                    {
                        x_44445 = ((volatile __local
                                    int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438) -
                                                                   sext_i32_i64(skip_threads_44451)];
                    }
                    // perform operation
                    {
                        bool inactive_44452 =
                             slt64(srem64((sext_i32_i64(local_tid_44438 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_39356 *
                                           sdiv_up64(m_28661 * N_28660,
                                                     sext_i32_i64(num_threads_44412))) -
                                          (int64_t) 1, N_28660),
                                   (sext_i32_i64(local_tid_44438 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_39356 *
                                    sdiv_up64(m_28661 * N_28660,
                                              sext_i32_i64(num_threads_44412))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44438 -
                                                   skip_threads_44451) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_39356 *
                                     sdiv_up64(m_28661 * N_28660,
                                               sext_i32_i64(num_threads_44412))) -
                                    (int64_t) 1));
                        
                        if (inactive_44452) {
                            x_44445 = x_44446;
                        }
                        if (!inactive_44452) {
                            int64_t defunc_1_op_res_44447 = add64(x_44445,
                                                                  x_44446);
                            
                            x_44445 = defunc_1_op_res_44447;
                        }
                    }
                }
                if (sle32(wave_sizze_44440, skip_threads_44451)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44451, local_tid_44438 -
                          squot32(local_tid_44438, 32) * 32) &&
                    (squot32(local_tid_44438, 32) == 0 &&
                     ltid_in_bounds_44448)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)] =
                            x_44445;
                        x_44446 = x_44445;
                    }
                }
                if (sle32(wave_sizze_44440, skip_threads_44451)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44451 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44438, 32) == 0 || !ltid_in_bounds_44448)) {
            // read operands
            {
                x_39362 = x_39361;
                x_39361 = ((__local
                            int64_t *) scan_arr_mem_44442)[sext_i32_i64(squot32(local_tid_44438,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44453 =
                     slt64(srem64((sext_i32_i64(local_tid_44438) +
                                   (int64_t) 1) * (segscan_group_sizze_39356 *
                                                   sdiv_up64(m_28661 * N_28660,
                                                             sext_i32_i64(num_threads_44412))) -
                                  (int64_t) 1, N_28660),
                           (sext_i32_i64(local_tid_44438) + (int64_t) 1) *
                           (segscan_group_sizze_39356 * sdiv_up64(m_28661 *
                                                                  N_28660,
                                                                  sext_i32_i64(num_threads_44412))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44438,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_39356 *
                                           sdiv_up64(m_28661 * N_28660,
                                                     sext_i32_i64(num_threads_44412))) -
                                          (int64_t) 1));
                
                if (inactive_44453) {
                    x_39361 = x_39362;
                }
                if (!inactive_44453) {
                    int64_t defunc_1_op_res_39363 = add64(x_39361, x_39362);
                    
                    x_39361 = defunc_1_op_res_39363;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)] =
                    x_39361;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44438, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)] =
                x_39362;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_39330, m_28661) && slt64(gtid_39338, N_28660)) {
            ((__global int64_t *) mem_43320)[gtid_39330 * N_28660 +
                                             gtid_39338] = ((__local
                                                             int64_t *) scan_arr_mem_44442)[sext_i32_i64(local_tid_44438)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39356
}
__kernel void mainziscan_stage2_40323(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44825_backing_aligned_0,
                                      int64_t m_28661, int64_t iota32_arg_29056,
                                      int64_t stage1_num_groups_44794,
                                      int32_t num_threads_44795, __global
                                      unsigned char *mem_43459)
{
    #define segscan_group_sizze_40401 (mainzisegscan_group_sizze_40317)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44825_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44825_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44820;
    int32_t local_tid_44821;
    int64_t group_sizze_44824;
    int32_t wave_sizze_44823;
    int32_t group_tid_44822;
    
    global_tid_44820 = get_global_id(0);
    local_tid_44821 = get_local_id(0);
    group_sizze_44824 = get_local_size(0);
    wave_sizze_44823 = LOCKSTEP_WIDTH;
    group_tid_44822 = get_group_id(0);
    
    int32_t phys_tid_40323;
    
    phys_tid_40323 = global_tid_44820;
    
    __local char *scan_arr_mem_44825;
    
    scan_arr_mem_44825 = (__local char *) scan_arr_mem_44825_backing_0;
    
    int64_t flat_idx_44827;
    
    flat_idx_44827 = (sext_i32_i64(local_tid_44821) + (int64_t) 1) *
        (segscan_group_sizze_40401 * sdiv_up64(m_28661 * iota32_arg_29056,
                                               sext_i32_i64(num_threads_44795))) -
        (int64_t) 1;
    
    int64_t gtid_40314;
    
    gtid_40314 = squot64(flat_idx_44827, iota32_arg_29056);
    
    int64_t gtid_40322;
    
    gtid_40322 = flat_idx_44827 - squot64(flat_idx_44827, iota32_arg_29056) *
        iota32_arg_29056;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40314, m_28661) && slt64(gtid_40322, iota32_arg_29056)) {
            ((__local
              float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)] =
                ((__global float *) mem_43459)[gtid_40314 * iota32_arg_29056 +
                                               gtid_40322];
        } else {
            ((__local
              float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_40405;
    float x_40406;
    float x_44828;
    float x_44829;
    bool ltid_in_bounds_44831;
    
    ltid_in_bounds_44831 = slt64(sext_i32_i64(local_tid_44821),
                                 stage1_num_groups_44794);
    
    int32_t skip_threads_44832;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44831) {
            x_40406 = ((volatile __local
                        float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)];
            if ((local_tid_44821 - squot32(local_tid_44821, 32) * 32) == 0) {
                x_40405 = x_40406;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44832 = 1;
        while (slt32(skip_threads_44832, 32)) {
            if (sle32(skip_threads_44832, local_tid_44821 -
                      squot32(local_tid_44821, 32) * 32) &&
                ltid_in_bounds_44831) {
                // read operands
                {
                    x_40405 = ((volatile __local
                                float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821) -
                                                             sext_i32_i64(skip_threads_44832)];
                }
                // perform operation
                {
                    bool inactive_44833 =
                         slt64(srem64((sext_i32_i64(local_tid_44821) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_40401 *
                                       sdiv_up64(m_28661 * iota32_arg_29056,
                                                 sext_i32_i64(num_threads_44795))) -
                                      (int64_t) 1, iota32_arg_29056),
                               (sext_i32_i64(local_tid_44821) + (int64_t) 1) *
                               (segscan_group_sizze_40401 * sdiv_up64(m_28661 *
                                                                      iota32_arg_29056,
                                                                      sext_i32_i64(num_threads_44795))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44821 -
                                               skip_threads_44832) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_40401 *
                                               sdiv_up64(m_28661 *
                                                         iota32_arg_29056,
                                                         sext_i32_i64(num_threads_44795))) -
                                              (int64_t) 1));
                    
                    if (inactive_44833) {
                        x_40405 = x_40406;
                    }
                    if (!inactive_44833) {
                        float defunc_1_op_res_40407 = x_40405 + x_40406;
                        
                        x_40405 = defunc_1_op_res_40407;
                    }
                }
            }
            if (sle32(wave_sizze_44823, skip_threads_44832)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44832, local_tid_44821 -
                      squot32(local_tid_44821, 32) * 32) &&
                ltid_in_bounds_44831) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)] =
                        x_40405;
                    x_40406 = x_40405;
                }
            }
            if (sle32(wave_sizze_44823, skip_threads_44832)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44832 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44821 - squot32(local_tid_44821, 32) * 32) == 31 &&
            ltid_in_bounds_44831) {
            ((volatile __local
              float *) scan_arr_mem_44825)[sext_i32_i64(squot32(local_tid_44821,
                                                                32))] = x_40405;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44834;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44821, 32) == 0 && ltid_in_bounds_44831) {
                x_44829 = ((volatile __local
                            float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)];
                if ((local_tid_44821 - squot32(local_tid_44821, 32) * 32) ==
                    0) {
                    x_44828 = x_44829;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44834 = 1;
            while (slt32(skip_threads_44834, 32)) {
                if (sle32(skip_threads_44834, local_tid_44821 -
                          squot32(local_tid_44821, 32) * 32) &&
                    (squot32(local_tid_44821, 32) == 0 &&
                     ltid_in_bounds_44831)) {
                    // read operands
                    {
                        x_44828 = ((volatile __local
                                    float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821) -
                                                                 sext_i32_i64(skip_threads_44834)];
                    }
                    // perform operation
                    {
                        bool inactive_44835 =
                             slt64(srem64((sext_i32_i64(local_tid_44821 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_40401 *
                                           sdiv_up64(m_28661 * iota32_arg_29056,
                                                     sext_i32_i64(num_threads_44795))) -
                                          (int64_t) 1, iota32_arg_29056),
                                   (sext_i32_i64(local_tid_44821 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_40401 *
                                    sdiv_up64(m_28661 * iota32_arg_29056,
                                              sext_i32_i64(num_threads_44795))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44821 -
                                                   skip_threads_44834) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_40401 *
                                     sdiv_up64(m_28661 * iota32_arg_29056,
                                               sext_i32_i64(num_threads_44795))) -
                                    (int64_t) 1));
                        
                        if (inactive_44835) {
                            x_44828 = x_44829;
                        }
                        if (!inactive_44835) {
                            float defunc_1_op_res_44830 = x_44828 + x_44829;
                            
                            x_44828 = defunc_1_op_res_44830;
                        }
                    }
                }
                if (sle32(wave_sizze_44823, skip_threads_44834)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44834, local_tid_44821 -
                          squot32(local_tid_44821, 32) * 32) &&
                    (squot32(local_tid_44821, 32) == 0 &&
                     ltid_in_bounds_44831)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)] =
                            x_44828;
                        x_44829 = x_44828;
                    }
                }
                if (sle32(wave_sizze_44823, skip_threads_44834)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44834 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44821, 32) == 0 || !ltid_in_bounds_44831)) {
            // read operands
            {
                x_40406 = x_40405;
                x_40405 = ((__local
                            float *) scan_arr_mem_44825)[sext_i32_i64(squot32(local_tid_44821,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44836 =
                     slt64(srem64((sext_i32_i64(local_tid_44821) +
                                   (int64_t) 1) * (segscan_group_sizze_40401 *
                                                   sdiv_up64(m_28661 *
                                                             iota32_arg_29056,
                                                             sext_i32_i64(num_threads_44795))) -
                                  (int64_t) 1, iota32_arg_29056),
                           (sext_i32_i64(local_tid_44821) + (int64_t) 1) *
                           (segscan_group_sizze_40401 * sdiv_up64(m_28661 *
                                                                  iota32_arg_29056,
                                                                  sext_i32_i64(num_threads_44795))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44821,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_40401 *
                                           sdiv_up64(m_28661 * iota32_arg_29056,
                                                     sext_i32_i64(num_threads_44795))) -
                                          (int64_t) 1));
                
                if (inactive_44836) {
                    x_40405 = x_40406;
                }
                if (!inactive_44836) {
                    float defunc_1_op_res_40407 = x_40405 + x_40406;
                    
                    x_40405 = defunc_1_op_res_40407;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)] =
                    x_40405;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44821, 32) == 0) {
            ((__local
              float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)] =
                x_40406;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40314, m_28661) && slt64(gtid_40322, iota32_arg_29056)) {
            ((__global float *) mem_43459)[gtid_40314 * iota32_arg_29056 +
                                           gtid_40322] = ((__local
                                                           float *) scan_arr_mem_44825)[sext_i32_i64(local_tid_44821)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40401
}
__kernel void mainziscan_stage3_39339(__global int *global_failure,
                                      int64_t N_28660, int64_t m_28661,
                                      int64_t num_groups_39357,
                                      int32_t num_threads_44412,
                                      int32_t required_groups_44454, __global
                                      unsigned char *mem_43320)
{
    #define segscan_group_sizze_39356 (mainzisegscan_group_sizze_39333)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44455;
    int32_t local_tid_44456;
    int64_t group_sizze_44459;
    int32_t wave_sizze_44458;
    int32_t group_tid_44457;
    
    global_tid_44455 = get_global_id(0);
    local_tid_44456 = get_local_id(0);
    group_sizze_44459 = get_local_size(0);
    wave_sizze_44458 = LOCKSTEP_WIDTH;
    group_tid_44457 = get_group_id(0);
    
    int32_t phys_tid_39339;
    
    phys_tid_39339 = global_tid_44455;
    
    int32_t phys_group_id_44460;
    
    phys_group_id_44460 = get_group_id(0);
    for (int32_t i_44461 = 0; i_44461 < sdiv_up32(required_groups_44454 -
                                                  phys_group_id_44460,
                                                  sext_i64_i32(num_groups_39357));
         i_44461++) {
        int32_t virt_group_id_44462 = phys_group_id_44460 + i_44461 *
                sext_i64_i32(num_groups_39357);
        int64_t flat_idx_44463 = sext_i32_i64(virt_group_id_44462) *
                segscan_group_sizze_39356 + sext_i32_i64(local_tid_44456);
        int64_t gtid_39330 = squot64(flat_idx_44463, N_28660);
        int64_t gtid_39338 = flat_idx_44463 - squot64(flat_idx_44463, N_28660) *
                N_28660;
        int64_t orig_group_44464 = squot64(flat_idx_44463,
                                           segscan_group_sizze_39356 *
                                           sdiv_up64(m_28661 * N_28660,
                                                     sext_i32_i64(num_threads_44412)));
        int64_t carry_in_flat_idx_44465 = orig_group_44464 *
                (segscan_group_sizze_39356 * sdiv_up64(m_28661 * N_28660,
                                                       sext_i32_i64(num_threads_44412))) -
                (int64_t) 1;
        
        if (slt64(gtid_39330, m_28661) && slt64(gtid_39338, N_28660)) {
            if (!(orig_group_44464 == (int64_t) 0 || (flat_idx_44463 ==
                                                      (orig_group_44464 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_39356 *
                                                       sdiv_up64(m_28661 *
                                                                 N_28660,
                                                                 sext_i32_i64(num_threads_44412))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44463,
                                                                   N_28660),
                                                            flat_idx_44463 -
                                                            carry_in_flat_idx_44465)))) {
                int64_t x_39361;
                int64_t x_39362;
                
                x_39361 = ((__global
                            int64_t *) mem_43320)[squot64(carry_in_flat_idx_44465,
                                                          N_28660) * N_28660 +
                                                  (carry_in_flat_idx_44465 -
                                                   squot64(carry_in_flat_idx_44465,
                                                           N_28660) * N_28660)];
                x_39362 = ((__global int64_t *) mem_43320)[gtid_39330 *
                                                           N_28660 +
                                                           gtid_39338];
                
                int64_t defunc_1_op_res_39363;
                
                defunc_1_op_res_39363 = add64(x_39361, x_39362);
                x_39361 = defunc_1_op_res_39363;
                ((__global int64_t *) mem_43320)[gtid_39330 * N_28660 +
                                                 gtid_39338] = x_39361;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39356
}
__kernel void mainziscan_stage3_40323(__global int *global_failure,
                                      int64_t m_28661, int64_t iota32_arg_29056,
                                      int64_t num_groups_40402,
                                      int32_t num_threads_44795,
                                      int32_t required_groups_44837, __global
                                      unsigned char *mem_43459)
{
    #define segscan_group_sizze_40401 (mainzisegscan_group_sizze_40317)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44838;
    int32_t local_tid_44839;
    int64_t group_sizze_44842;
    int32_t wave_sizze_44841;
    int32_t group_tid_44840;
    
    global_tid_44838 = get_global_id(0);
    local_tid_44839 = get_local_id(0);
    group_sizze_44842 = get_local_size(0);
    wave_sizze_44841 = LOCKSTEP_WIDTH;
    group_tid_44840 = get_group_id(0);
    
    int32_t phys_tid_40323;
    
    phys_tid_40323 = global_tid_44838;
    
    int32_t phys_group_id_44843;
    
    phys_group_id_44843 = get_group_id(0);
    for (int32_t i_44844 = 0; i_44844 < sdiv_up32(required_groups_44837 -
                                                  phys_group_id_44843,
                                                  sext_i64_i32(num_groups_40402));
         i_44844++) {
        int32_t virt_group_id_44845 = phys_group_id_44843 + i_44844 *
                sext_i64_i32(num_groups_40402);
        int64_t flat_idx_44846 = sext_i32_i64(virt_group_id_44845) *
                segscan_group_sizze_40401 + sext_i32_i64(local_tid_44839);
        int64_t gtid_40314 = squot64(flat_idx_44846, iota32_arg_29056);
        int64_t gtid_40322 = flat_idx_44846 - squot64(flat_idx_44846,
                                                      iota32_arg_29056) *
                iota32_arg_29056;
        int64_t orig_group_44847 = squot64(flat_idx_44846,
                                           segscan_group_sizze_40401 *
                                           sdiv_up64(m_28661 * iota32_arg_29056,
                                                     sext_i32_i64(num_threads_44795)));
        int64_t carry_in_flat_idx_44848 = orig_group_44847 *
                (segscan_group_sizze_40401 * sdiv_up64(m_28661 *
                                                       iota32_arg_29056,
                                                       sext_i32_i64(num_threads_44795))) -
                (int64_t) 1;
        
        if (slt64(gtid_40314, m_28661) && slt64(gtid_40322, iota32_arg_29056)) {
            if (!(orig_group_44847 == (int64_t) 0 || (flat_idx_44846 ==
                                                      (orig_group_44847 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_40401 *
                                                       sdiv_up64(m_28661 *
                                                                 iota32_arg_29056,
                                                                 sext_i32_i64(num_threads_44795))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44846,
                                                                   iota32_arg_29056),
                                                            flat_idx_44846 -
                                                            carry_in_flat_idx_44848)))) {
                float x_40405;
                float x_40406;
                
                x_40405 = ((__global
                            float *) mem_43459)[squot64(carry_in_flat_idx_44848,
                                                        iota32_arg_29056) *
                                                iota32_arg_29056 +
                                                (carry_in_flat_idx_44848 -
                                                 squot64(carry_in_flat_idx_44848,
                                                         iota32_arg_29056) *
                                                 iota32_arg_29056)];
                x_40406 = ((__global float *) mem_43459)[gtid_40314 *
                                                         iota32_arg_29056 +
                                                         gtid_40322];
                
                float defunc_1_op_res_40407;
                
                defunc_1_op_res_40407 = x_40405 + x_40406;
                x_40405 = defunc_1_op_res_40407;
                ((__global float *) mem_43459)[gtid_40314 * iota32_arg_29056 +
                                               gtid_40322] = x_40405;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40401
}
__kernel void mainzisegmap_37262(__global int *global_failure, int64_t N_28660,
                                 float freq_28665, int64_t i32_res_28676,
                                 __global
                                 unsigned char *mappingindices_mem_42537,
                                 __global unsigned char *mem_42542)
{
    #define segmap_group_sizze_37335 (mainzisegmap_group_sizze_37265)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43836;
    int32_t local_tid_43837;
    int64_t group_sizze_43840;
    int32_t wave_sizze_43839;
    int32_t group_tid_43838;
    
    global_tid_43836 = get_global_id(0);
    local_tid_43837 = get_local_id(0);
    group_sizze_43840 = get_local_size(0);
    wave_sizze_43839 = LOCKSTEP_WIDTH;
    group_tid_43838 = get_group_id(0);
    
    int32_t phys_tid_37262;
    
    phys_tid_37262 = global_tid_43836;
    
    int64_t gtid_37260;
    
    gtid_37260 = squot64(sext_i32_i64(group_tid_43838) *
                         segmap_group_sizze_37335 +
                         sext_i32_i64(local_tid_43837), N_28660);
    
    int64_t gtid_37261;
    
    gtid_37261 = sext_i32_i64(group_tid_43838) * segmap_group_sizze_37335 +
        sext_i32_i64(local_tid_43837) - squot64(sext_i32_i64(group_tid_43838) *
                                                segmap_group_sizze_37335 +
                                                sext_i32_i64(local_tid_43837),
                                                N_28660) * N_28660;
    if (slt64(gtid_37260, i32_res_28676) && slt64(gtid_37261, N_28660)) {
        int32_t index_primexp_40529 = sext_i64_i32(gtid_37260);
        bool index_primexp_40526 = index_primexp_40529 == 0;
        float defunc_0_f_res_37341;
        
        if (index_primexp_40526) {
            defunc_0_f_res_37341 = 1.0F;
        } else {
            int32_t x_37340 = ((__global
                                int32_t *) mappingindices_mem_42537)[gtid_37261];
            bool cond_37342 = index_primexp_40529 == 1;
            float defunc_0_f_res_f_res_37343;
            
            if (cond_37342) {
                float i32_res_37344 = sitofp_i32_f32(x_37340);
                
                defunc_0_f_res_f_res_37343 = i32_res_37344;
            } else {
                int32_t r32_arg_37345 = sdiv32(index_primexp_40529, 2);
                float i32_res_37346 = sitofp_i32_f32(r32_arg_37345);
                float i32_res_37347 = sitofp_i32_f32(x_37340);
                float x_37348 = 6.2831855F * i32_res_37346;
                float x_37349 = i32_res_37347 * x_37348;
                float angle_37350 = x_37349 / freq_28665;
                int32_t x_37351 = smod32(index_primexp_40529, 2);
                bool cond_37352 = x_37351 == 0;
                float defunc_0_f_res_f_res_f_res_37353;
                
                if (cond_37352) {
                    float sin_res_37354;
                    
                    sin_res_37354 = futrts_sin32(angle_37350);
                    defunc_0_f_res_f_res_f_res_37353 = sin_res_37354;
                } else {
                    float cos_res_37355;
                    
                    cos_res_37355 = futrts_cos32(angle_37350);
                    defunc_0_f_res_f_res_f_res_37353 = cos_res_37355;
                }
                defunc_0_f_res_f_res_37343 = defunc_0_f_res_f_res_f_res_37353;
            }
            defunc_0_f_res_37341 = defunc_0_f_res_f_res_37343;
        }
        ((__global float *) mem_42542)[gtid_37260 * N_28660 + gtid_37261] =
            defunc_0_f_res_37341;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37335
}
__kernel void mainzisegmap_37440(__global int *global_failure, int64_t N_28660,
                                 float freq_28665, int64_t i32_res_28676,
                                 __global
                                 unsigned char *mappingindices_mem_42537,
                                 __global unsigned char *mem_42546)
{
    #define segmap_group_sizze_37509 (mainzisegmap_group_sizze_37443)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43841;
    int32_t local_tid_43842;
    int64_t group_sizze_43845;
    int32_t wave_sizze_43844;
    int32_t group_tid_43843;
    
    global_tid_43841 = get_global_id(0);
    local_tid_43842 = get_local_id(0);
    group_sizze_43845 = get_local_size(0);
    wave_sizze_43844 = LOCKSTEP_WIDTH;
    group_tid_43843 = get_group_id(0);
    
    int32_t phys_tid_37440;
    
    phys_tid_37440 = global_tid_43841;
    
    int64_t gtid_37438;
    
    gtid_37438 = squot64(sext_i32_i64(group_tid_43843) *
                         segmap_group_sizze_37509 +
                         sext_i32_i64(local_tid_43842), N_28660);
    
    int64_t gtid_37439;
    
    gtid_37439 = sext_i32_i64(group_tid_43843) * segmap_group_sizze_37509 +
        sext_i32_i64(local_tid_43842) - squot64(sext_i32_i64(group_tid_43843) *
                                                segmap_group_sizze_37509 +
                                                sext_i32_i64(local_tid_43842),
                                                N_28660) * N_28660;
    if (slt64(gtid_37438, i32_res_28676) && slt64(gtid_37439, N_28660)) {
        int32_t index_primexp_40538 = sext_i64_i32(gtid_37438);
        bool index_primexp_40535 = index_primexp_40538 == 0;
        float defunc_0_f_res_37515;
        
        if (index_primexp_40535) {
            defunc_0_f_res_37515 = 1.0F;
        } else {
            int32_t x_37514 = ((__global
                                int32_t *) mappingindices_mem_42537)[gtid_37439];
            int32_t i_37516 = add32(1, index_primexp_40538);
            int32_t r32_arg_37517 = sdiv32(i_37516, 2);
            float i32_res_37518 = sitofp_i32_f32(r32_arg_37517);
            float i32_res_37519 = sitofp_i32_f32(x_37514);
            float x_37520 = 6.2831855F * i32_res_37518;
            float x_37521 = i32_res_37519 * x_37520;
            float angle_37522 = x_37521 / freq_28665;
            int32_t x_37523 = smod32(i_37516, 2);
            bool cond_37524 = x_37523 == 0;
            float defunc_0_f_res_f_res_37525;
            
            if (cond_37524) {
                float sin_res_37526;
                
                sin_res_37526 = futrts_sin32(angle_37522);
                defunc_0_f_res_f_res_37525 = sin_res_37526;
            } else {
                float cos_res_37527;
                
                cos_res_37527 = futrts_cos32(angle_37522);
                defunc_0_f_res_f_res_37525 = cos_res_37527;
            }
            defunc_0_f_res_37515 = defunc_0_f_res_f_res_37525;
        }
        ((__global float *) mem_42546)[gtid_37438 * N_28660 + gtid_37439] =
            defunc_0_f_res_37515;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37509
}
__kernel void mainzisegmap_37568(__global int *global_failure, int64_t N_28660,
                                 int64_t i32_res_28676, float i32_res_28741,
                                 __global unsigned char *mem_42550, __global
                                 unsigned char *mem_42554)
{
    #define segmap_group_sizze_37592 (mainzisegmap_group_sizze_37571)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43846;
    int32_t local_tid_43847;
    int64_t group_sizze_43850;
    int32_t wave_sizze_43849;
    int32_t group_tid_43848;
    
    global_tid_43846 = get_global_id(0);
    local_tid_43847 = get_local_id(0);
    group_sizze_43850 = get_local_size(0);
    wave_sizze_43849 = LOCKSTEP_WIDTH;
    group_tid_43848 = get_group_id(0);
    
    int32_t phys_tid_37568;
    
    phys_tid_37568 = global_tid_43846;
    
    int64_t gtid_37566;
    
    gtid_37566 = squot64(sext_i32_i64(group_tid_43848) *
                         segmap_group_sizze_37592 +
                         sext_i32_i64(local_tid_43847), i32_res_28676);
    
    int64_t gtid_37567;
    
    gtid_37567 = sext_i32_i64(group_tid_43848) * segmap_group_sizze_37592 +
        sext_i32_i64(local_tid_43847) - squot64(sext_i32_i64(group_tid_43848) *
                                                segmap_group_sizze_37592 +
                                                sext_i32_i64(local_tid_43847),
                                                i32_res_28676) * i32_res_28676;
    if (slt64(gtid_37566, N_28660) && slt64(gtid_37567, i32_res_28676)) {
        float x_37595 = ((__global float *) mem_42550)[gtid_37566 *
                                                       i32_res_28676 +
                                                       gtid_37567];
        float defunc_0_f_res_37596 = i32_res_28741 + x_37595;
        
        ((__global float *) mem_42554)[gtid_37566 * i32_res_28676 +
                                       gtid_37567] = defunc_0_f_res_37596;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37592
}
__kernel void mainzisegmap_37601(__global int *global_failure, int64_t N_28660,
                                 int64_t m_28661, int32_t n_28664,
                                 int32_t k2p2zq_28674, int64_t i32_res_28676,
                                 int64_t num_groups_37626, __global
                                 unsigned char *binop_p_mem_42547, __global
                                 unsigned char *mem_42554, __global
                                 unsigned char *mem_42557, __global
                                 unsigned char *mem_42561, __global
                                 unsigned char *mem_42603)
{
    #define segmap_group_sizze_37625 (mainzisegmap_group_sizze_37603)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43854;
    int32_t local_tid_43855;
    int64_t group_sizze_43858;
    int32_t wave_sizze_43857;
    int32_t group_tid_43856;
    
    global_tid_43854 = get_global_id(0);
    local_tid_43855 = get_local_id(0);
    group_sizze_43858 = get_local_size(0);
    wave_sizze_43857 = LOCKSTEP_WIDTH;
    group_tid_43856 = get_group_id(0);
    
    int32_t phys_tid_37601;
    
    phys_tid_37601 = global_tid_43854;
    
    int32_t phys_group_id_43859;
    
    phys_group_id_43859 = get_group_id(0);
    for (int32_t i_43860 = 0; i_43860 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661, segmap_group_sizze_37625)) -
                   phys_group_id_43859, sext_i64_i32(num_groups_37626));
         i_43860++) {
        int32_t virt_group_id_43861 = phys_group_id_43859 + i_43860 *
                sext_i64_i32(num_groups_37626);
        int64_t gtid_37600 = sext_i32_i64(virt_group_id_43861) *
                segmap_group_sizze_37625 + sext_i32_i64(local_tid_43855);
        
        if (slt64(gtid_37600, m_28661)) {
            for (int32_t i_42517 = 0; i_42517 < k2p2zq_28674; i_42517++) {
                int64_t i_42446 = sext_i32_i64(i_42517);
                
                for (int32_t i_42516 = 0; i_42516 < k2p2zq_28674; i_42516++) {
                    int64_t i_42450 = sext_i32_i64(i_42516);
                    float defunc_2_reduce_res_37634;
                    float redout_42452 = 0.0F;
                    
                    for (int32_t i_42515 = 0; i_42515 < n_28664; i_42515++) {
                        int64_t i_42453 = sext_i32_i64(i_42515);
                        float x_37638 = ((__global float *) mem_42557)[i_42453 *
                                                                       m_28661 +
                                                                       gtid_37600];
                        float x_37639 = ((__global
                                          float *) binop_p_mem_42547)[i_42446 *
                                                                      N_28660 +
                                                                      i_42453];
                        float x_37640 = ((__global float *) mem_42554)[i_42453 *
                                                                       i32_res_28676 +
                                                                       i_42450];
                        float x_37641 = x_37639 * x_37640;
                        bool isnan_res_37642;
                        
                        isnan_res_37642 = futrts_isnan32(x_37638);
                        
                        float y_37643;
                        
                        if (isnan_res_37642) {
                            y_37643 = 0.0F;
                        } else {
                            y_37643 = 1.0F;
                        }
                        
                        float defunc_2_f_res_37644 = x_37641 * y_37643;
                        float defunc_1_op_res_37637 = defunc_2_f_res_37644 +
                              redout_42452;
                        float redout_tmp_43864 = defunc_1_op_res_37637;
                        
                        redout_42452 = redout_tmp_43864;
                    }
                    defunc_2_reduce_res_37634 = redout_42452;
                    ((__global float *) mem_42561)[phys_tid_37601 + (i_42446 *
                                                                     (num_groups_37626 *
                                                                      segmap_group_sizze_37625 *
                                                                      i32_res_28676) +
                                                                     i_42450 *
                                                                     (num_groups_37626 *
                                                                      segmap_group_sizze_37625))] =
                        defunc_2_reduce_res_37634;
                }
            }
            for (int64_t i_43865 = 0; i_43865 < i32_res_28676; i_43865++) {
                for (int64_t i_43866 = 0; i_43866 < i32_res_28676; i_43866++) {
                    ((__global float *) mem_42603)[i_43865 * (m_28661 *
                                                              i32_res_28676) +
                                                   i_43866 * m_28661 +
                                                   gtid_37600] = ((__global
                                                                   float *) mem_42561)[phys_tid_37601 +
                                                                                       (i_43865 *
                                                                                        (num_groups_37626 *
                                                                                         segmap_group_sizze_37625 *
                                                                                         i32_res_28676) +
                                                                                        i_43866 *
                                                                                        (num_groups_37626 *
                                                                                         segmap_group_sizze_37625))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37625
}
__kernel void mainzisegmap_37647(__global int *global_failure, int64_t N_28660,
                                 int64_t m_28661, int32_t n_28664,
                                 int32_t k2p2zq_28674, int64_t i32_res_28676,
                                 int64_t num_groups_37803, __global
                                 unsigned char *images_mem_42538, __global
                                 unsigned char *mem_42550, __global
                                 unsigned char *mem_42554, __global
                                 unsigned char *mem_42606, __global
                                 unsigned char *mem_42622)
{
    #define segmap_group_sizze_37802 (mainzisegmap_group_sizze_37650)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43867;
    int32_t local_tid_43868;
    int64_t group_sizze_43871;
    int32_t wave_sizze_43870;
    int32_t group_tid_43869;
    
    global_tid_43867 = get_global_id(0);
    local_tid_43868 = get_local_id(0);
    group_sizze_43871 = get_local_size(0);
    wave_sizze_43870 = LOCKSTEP_WIDTH;
    group_tid_43869 = get_group_id(0);
    
    int32_t phys_tid_37647;
    
    phys_tid_37647 = global_tid_43867;
    
    int32_t phys_group_id_43872;
    
    phys_group_id_43872 = get_group_id(0);
    for (int32_t i_43873 = 0; i_43873 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661 * i32_res_28676,
                                          segmap_group_sizze_37802)) -
                   phys_group_id_43872, sext_i64_i32(num_groups_37803));
         i_43873++) {
        int32_t virt_group_id_43874 = phys_group_id_43872 + i_43873 *
                sext_i64_i32(num_groups_37803);
        int64_t gtid_37645 = squot64(sext_i32_i64(virt_group_id_43874) *
                                     segmap_group_sizze_37802 +
                                     sext_i32_i64(local_tid_43868),
                                     i32_res_28676);
        int64_t gtid_37646 = sext_i32_i64(virt_group_id_43874) *
                segmap_group_sizze_37802 + sext_i32_i64(local_tid_43868) -
                squot64(sext_i32_i64(virt_group_id_43874) *
                        segmap_group_sizze_37802 +
                        sext_i32_i64(local_tid_43868), i32_res_28676) *
                i32_res_28676;
        
        if (slt64(gtid_37645, m_28661) && slt64(gtid_37646, i32_res_28676)) {
            for (int32_t i_42519 = 0; i_42519 < k2p2zq_28674; i_42519++) {
                int64_t i_42456 = sext_i32_i64(i_42519);
                float defunc_2_reduce_res_37814;
                float redout_42458 = 0.0F;
                
                for (int32_t i_42518 = 0; i_42518 < n_28664; i_42518++) {
                    int64_t i_42459 = sext_i32_i64(i_42518);
                    float x_37818 = ((__global
                                      float *) images_mem_42538)[gtid_37645 *
                                                                 N_28660 +
                                                                 i_42459];
                    float x_37819 = ((__global float *) mem_42550)[i_42459 *
                                                                   i32_res_28676 +
                                                                   gtid_37646];
                    float x_37820 = ((__global float *) mem_42554)[i_42459 *
                                                                   i32_res_28676 +
                                                                   i_42456];
                    float x_37821 = x_37819 * x_37820;
                    bool isnan_res_37822;
                    
                    isnan_res_37822 = futrts_isnan32(x_37818);
                    
                    float y_37823;
                    
                    if (isnan_res_37822) {
                        y_37823 = 0.0F;
                    } else {
                        y_37823 = 1.0F;
                    }
                    
                    float defunc_2_f_res_37824 = x_37821 * y_37823;
                    float defunc_1_op_res_37817 = defunc_2_f_res_37824 +
                          redout_42458;
                    float redout_tmp_43876 = defunc_1_op_res_37817;
                    
                    redout_42458 = redout_tmp_43876;
                }
                defunc_2_reduce_res_37814 = redout_42458;
                ((__global float *) mem_42606)[phys_tid_37647 + i_42456 *
                                               (num_groups_37803 *
                                                segmap_group_sizze_37802)] =
                    defunc_2_reduce_res_37814;
            }
            for (int64_t i_43877 = 0; i_43877 < i32_res_28676; i_43877++) {
                ((__global float *) mem_42622)[i_43877 * (i32_res_28676 *
                                                          m_28661) +
                                               gtid_37645 * i32_res_28676 +
                                               gtid_37646] = ((__global
                                                               float *) mem_42606)[phys_tid_37647 +
                                                                                   i_43877 *
                                                                                   (num_groups_37803 *
                                                                                    segmap_group_sizze_37802)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37802
}
__kernel void mainzisegmap_38131(__global int *global_failure, int64_t m_28661,
                                 int64_t i32_res_28676, int64_t i32_res_28809,
                                 int64_t i32_res_28824, int64_t x_28825,
                                 int64_t j_m_i_28828,
                                 int64_t gauss_jordan_res_r_ixfn_42774,
                                 int64_t gauss_jordan_res_r_ixfn_42775,
                                 int64_t gauss_jordan_res_r_ixfn_42777, __global
                                 unsigned char *gauss_jordan_res_r_mem_42779,
                                 __global unsigned char *mem_42784)
{
    #define segmap_group_sizze_38682 (mainzisegmap_group_sizze_38135)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44034;
    int32_t local_tid_44035;
    int64_t group_sizze_44038;
    int32_t wave_sizze_44037;
    int32_t group_tid_44036;
    
    global_tid_44034 = get_global_id(0);
    local_tid_44035 = get_local_id(0);
    group_sizze_44038 = get_local_size(0);
    wave_sizze_44037 = LOCKSTEP_WIDTH;
    group_tid_44036 = get_group_id(0);
    
    int32_t phys_tid_38131;
    
    phys_tid_38131 = global_tid_44034;
    
    int64_t gtid_38128;
    
    gtid_38128 = squot64(sext_i32_i64(group_tid_44036) *
                         segmap_group_sizze_38682 +
                         sext_i32_i64(local_tid_44035), i32_res_28676 *
                         j_m_i_28828);
    
    int64_t gtid_slice_38126;
    
    gtid_slice_38126 = squot64(sext_i32_i64(group_tid_44036) *
                               segmap_group_sizze_38682 +
                               sext_i32_i64(local_tid_44035) -
                               squot64(sext_i32_i64(group_tid_44036) *
                                       segmap_group_sizze_38682 +
                                       sext_i32_i64(local_tid_44035),
                                       i32_res_28676 * j_m_i_28828) *
                               (i32_res_28676 * j_m_i_28828), j_m_i_28828);
    
    int64_t gtid_slice_38127;
    
    gtid_slice_38127 = sext_i32_i64(group_tid_44036) *
        segmap_group_sizze_38682 + sext_i32_i64(local_tid_44035) -
        squot64(sext_i32_i64(group_tid_44036) * segmap_group_sizze_38682 +
                sext_i32_i64(local_tid_44035), i32_res_28676 * j_m_i_28828) *
        (i32_res_28676 * j_m_i_28828) - squot64(sext_i32_i64(group_tid_44036) *
                                                segmap_group_sizze_38682 +
                                                sext_i32_i64(local_tid_44035) -
                                                squot64(sext_i32_i64(group_tid_44036) *
                                                        segmap_group_sizze_38682 +
                                                        sext_i32_i64(local_tid_44035),
                                                        i32_res_28676 *
                                                        j_m_i_28828) *
                                                (i32_res_28676 * j_m_i_28828),
                                                j_m_i_28828) * j_m_i_28828;
    if ((slt64(gtid_38128, m_28661) && slt64(gtid_slice_38126,
                                             i32_res_28676)) &&
        slt64(gtid_slice_38127, j_m_i_28828)) {
        int64_t slice_38686 = i32_res_28676 + gtid_slice_38127;
        int64_t binop_x_40596 = x_28825 * gtid_38128;
        int64_t binop_y_40597 = i32_res_28824 * gtid_slice_38126;
        int64_t binop_x_40598 = binop_x_40596 + binop_y_40597;
        int64_t binop_x_40599 = slice_38686 + binop_x_40598;
        int64_t new_index_40600 = squot64(binop_x_40599, i32_res_28809);
        int64_t binop_y_40612 = i32_res_28809 * new_index_40600;
        int64_t new_index_40613 = binop_x_40599 - binop_y_40612;
        float v_38687 = ((__global
                          float *) gauss_jordan_res_r_mem_42779)[gauss_jordan_res_r_ixfn_42774 +
                                                                 (new_index_40600 *
                                                                  gauss_jordan_res_r_ixfn_42775 +
                                                                  new_index_40613 *
                                                                  gauss_jordan_res_r_ixfn_42777)];
        
        ((__global float *) mem_42784)[gtid_38128 * (j_m_i_28828 *
                                                     i32_res_28676) +
                                       gtid_slice_38126 * j_m_i_28828 +
                                       gtid_slice_38127] = v_38687;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38682
}
__kernel void mainzisegmap_38297(__global int *global_failure, int64_t m_28661,
                                 int64_t i32_res_28809,
                                 int64_t ctx_param_ext_42737,
                                 int64_t ctx_param_ext_42738,
                                 int64_t ctx_param_ext_42740, __global
                                 unsigned char *mem_param_42742, __global
                                 unsigned char *mem_42762)
{
    #define segmap_group_sizze_38670 (mainzisegmap_group_sizze_38300)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44028;
    int32_t local_tid_44029;
    int64_t group_sizze_44032;
    int32_t wave_sizze_44031;
    int32_t group_tid_44030;
    
    global_tid_44028 = get_global_id(0);
    local_tid_44029 = get_local_id(0);
    group_sizze_44032 = get_local_size(0);
    wave_sizze_44031 = LOCKSTEP_WIDTH;
    group_tid_44030 = get_group_id(0);
    
    int32_t phys_tid_38297;
    
    phys_tid_38297 = global_tid_44028;
    
    int64_t gtid_38295;
    
    gtid_38295 = squot64(sext_i32_i64(group_tid_44030) *
                         segmap_group_sizze_38670 +
                         sext_i32_i64(local_tid_44029), i32_res_28809);
    
    int64_t gtid_38296;
    
    gtid_38296 = sext_i32_i64(group_tid_44030) * segmap_group_sizze_38670 +
        sext_i32_i64(local_tid_44029) - squot64(sext_i32_i64(group_tid_44030) *
                                                segmap_group_sizze_38670 +
                                                sext_i32_i64(local_tid_44029),
                                                i32_res_28809) * i32_res_28809;
    if (slt64(gtid_38295, m_28661) && slt64(gtid_38296, i32_res_28809)) {
        float write_value_38676 = ((__global float *) mem_42762)[gtid_38295 *
                                                                 i32_res_28809 +
                                                                 gtid_38296];
        
        if ((sle64((int64_t) 0, gtid_38295) && slt64(gtid_38295, m_28661)) &&
            (sle64((int64_t) 0, gtid_38296) && slt64(gtid_38296,
                                                     i32_res_28809))) {
            ((__global float *) mem_param_42742)[ctx_param_ext_42737 +
                                                 (gtid_38295 *
                                                  ctx_param_ext_42738 +
                                                  gtid_38296 *
                                                  ctx_param_ext_42740)] =
                write_value_38676;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38670
}
__kernel void mainzisegmap_38351(__global int *global_failure, int64_t m_28661,
                                 int32_t k2p2zq_28674, int32_t m_28807,
                                 int64_t i32_res_28809, int32_t i_38573,
                                 int64_t i32_res_38575,
                                 int64_t ctx_param_ext_42737,
                                 int64_t ctx_param_ext_42738,
                                 int64_t ctx_param_ext_42740, __global
                                 unsigned char *mem_param_42742, __global
                                 unsigned char *mem_42758, __global
                                 unsigned char *mem_42762)
{
    #define segmap_group_sizze_38636 (mainzisegmap_group_sizze_38354)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44023;
    int32_t local_tid_44024;
    int64_t group_sizze_44027;
    int32_t wave_sizze_44026;
    int32_t group_tid_44025;
    
    global_tid_44023 = get_global_id(0);
    local_tid_44024 = get_local_id(0);
    group_sizze_44027 = get_local_size(0);
    wave_sizze_44026 = LOCKSTEP_WIDTH;
    group_tid_44025 = get_group_id(0);
    
    int32_t phys_tid_38351;
    
    phys_tid_38351 = global_tid_44023;
    
    int64_t gtid_38349;
    
    gtid_38349 = squot64(sext_i32_i64(group_tid_44025) *
                         segmap_group_sizze_38636 +
                         sext_i32_i64(local_tid_44024), i32_res_28809);
    
    int64_t gtid_38350;
    
    gtid_38350 = sext_i32_i64(group_tid_44025) * segmap_group_sizze_38636 +
        sext_i32_i64(local_tid_44024) - squot64(sext_i32_i64(group_tid_44025) *
                                                segmap_group_sizze_38636 +
                                                sext_i32_i64(local_tid_44024),
                                                i32_res_28809) * i32_res_28809;
    if (slt64(gtid_38349, m_28661) && slt64(gtid_38350, i32_res_28809)) {
        bool cond_38641 = ((__global bool *) mem_42758)[gtid_38349];
        int32_t defunc_0_f_res_38643 = sext_i64_i32(gtid_38350);
        int32_t defunc_0_f_res_38644 = sdiv32(defunc_0_f_res_38643, m_28807);
        int32_t defunc_0_f_res_38645 = smod32(defunc_0_f_res_38643, m_28807);
        float defunc_0_f_res_38646;
        
        if (cond_38641) {
            int32_t x_38647 = mul32(m_28807, defunc_0_f_res_38644);
            int32_t i32_arg_38648 = add32(defunc_0_f_res_38645, x_38647);
            int64_t i32_res_38649 = sext_i32_i64(i32_arg_38648);
            float defunc_0_f_res_t_res_38650 = ((__global
                                                 float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                           (gtid_38349 *
                                                                            ctx_param_ext_42738 +
                                                                            i32_res_38649 *
                                                                            ctx_param_ext_42740)];
            
            defunc_0_f_res_38646 = defunc_0_f_res_t_res_38650;
        } else {
            float v1_38640 = ((__global
                               float *) mem_param_42742)[ctx_param_ext_42737 +
                                                         (gtid_38349 *
                                                          ctx_param_ext_42738 +
                                                          i32_res_38575 *
                                                          ctx_param_ext_42740)];
            int64_t i32_res_38651 = sext_i32_i64(defunc_0_f_res_38645);
            float x_38652 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_38349 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_38651 *
                                                         ctx_param_ext_42740)];
            float x_38653 = x_38652 / v1_38640;
            int32_t y_38654 = sub32(k2p2zq_28674, 1);
            bool cond_38655 = slt32(defunc_0_f_res_38644, y_38654);
            float defunc_0_f_res_f_res_38656;
            
            if (cond_38655) {
                int32_t x_38657 = add32(1, defunc_0_f_res_38644);
                int32_t x_38658 = mul32(m_28807, x_38657);
                int32_t i32_arg_38659 = add32(defunc_0_f_res_38645, x_38658);
                int64_t i32_res_38660 = sext_i32_i64(i32_arg_38659);
                float x_38661 = ((__global
                                  float *) mem_param_42742)[ctx_param_ext_42737 +
                                                            (gtid_38349 *
                                                             ctx_param_ext_42738 +
                                                             i32_res_38660 *
                                                             ctx_param_ext_42740)];
                int32_t i32_arg_38662 = add32(i_38573, x_38658);
                int64_t i32_res_38663 = sext_i32_i64(i32_arg_38662);
                float x_38664 = ((__global
                                  float *) mem_param_42742)[ctx_param_ext_42737 +
                                                            (gtid_38349 *
                                                             ctx_param_ext_42738 +
                                                             i32_res_38663 *
                                                             ctx_param_ext_42740)];
                float y_38665 = x_38653 * x_38664;
                float defunc_0_f_res_f_res_t_res_38666 = x_38661 - y_38665;
                
                defunc_0_f_res_f_res_38656 = defunc_0_f_res_f_res_t_res_38666;
            } else {
                defunc_0_f_res_f_res_38656 = x_38653;
            }
            defunc_0_f_res_38646 = defunc_0_f_res_f_res_38656;
        }
        ((__global float *) mem_42762)[gtid_38349 * i32_res_28809 +
                                       gtid_38350] = defunc_0_f_res_38646;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38636
}
__kernel void mainzisegmap_38419(__global int *global_failure, int64_t m_28661,
                                 int64_t i32_res_38575,
                                 int64_t ctx_param_ext_42737,
                                 int64_t ctx_param_ext_42738,
                                 int64_t ctx_param_ext_42740, __global
                                 unsigned char *mem_param_42742, __global
                                 unsigned char *mem_42758)
{
    #define segmap_group_sizze_38620 (mainzisegmap_group_sizze_38421)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44018;
    int32_t local_tid_44019;
    int64_t group_sizze_44022;
    int32_t wave_sizze_44021;
    int32_t group_tid_44020;
    
    global_tid_44018 = get_global_id(0);
    local_tid_44019 = get_local_id(0);
    group_sizze_44022 = get_local_size(0);
    wave_sizze_44021 = LOCKSTEP_WIDTH;
    group_tid_44020 = get_group_id(0);
    
    int32_t phys_tid_38419;
    
    phys_tid_38419 = global_tid_44018;
    
    int64_t gtid_38418;
    
    gtid_38418 = sext_i32_i64(group_tid_44020) * segmap_group_sizze_38620 +
        sext_i32_i64(local_tid_44019);
    if (slt64(gtid_38418, m_28661)) {
        float v1_38625 = ((__global
                           float *) mem_param_42742)[ctx_param_ext_42737 +
                                                     (gtid_38418 *
                                                      ctx_param_ext_42738 +
                                                      i32_res_38575 *
                                                      ctx_param_ext_42740)];
        bool cond_38626 = v1_38625 == 0.0F;
        
        ((__global bool *) mem_42758)[gtid_38418] = cond_38626;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38620
}
__kernel void mainzisegmap_38512(__global int *global_failure, int64_t m_28661,
                                 int32_t k2p2zq_28674, int64_t i32_res_28676,
                                 int32_t m_28807, int64_t i32_res_28809,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_42706,
                                 __global unsigned char *mem_42734)
{
    #define segmap_group_sizze_38556 (mainzisegmap_group_sizze_38515)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43985;
    int32_t local_tid_43986;
    int64_t group_sizze_43989;
    int32_t wave_sizze_43988;
    int32_t group_tid_43987;
    
    global_tid_43985 = get_global_id(0);
    local_tid_43986 = get_local_id(0);
    group_sizze_43989 = get_local_size(0);
    wave_sizze_43988 = LOCKSTEP_WIDTH;
    group_tid_43987 = get_group_id(0);
    
    int32_t phys_tid_38512;
    
    phys_tid_38512 = global_tid_43985;
    
    int64_t gtid_38510;
    
    gtid_38510 = squot64(sext_i32_i64(group_tid_43987) *
                         segmap_group_sizze_38556 +
                         sext_i32_i64(local_tid_43986), i32_res_28809);
    
    int64_t gtid_38511;
    
    gtid_38511 = sext_i32_i64(group_tid_43987) * segmap_group_sizze_38556 +
        sext_i32_i64(local_tid_43986) - squot64(sext_i32_i64(group_tid_43987) *
                                                segmap_group_sizze_38556 +
                                                sext_i32_i64(local_tid_43986),
                                                i32_res_28809) * i32_res_28809;
    if (slt64(gtid_38510, m_28661) && slt64(gtid_38511, i32_res_28809)) {
        int32_t index_primexp_40550 = sext_i64_i32(gtid_38511);
        int32_t defunc_0_f_res_38561 = sdiv32(index_primexp_40550, m_28807);
        int32_t defunc_0_f_res_38562 = smod32(index_primexp_40550, m_28807);
        bool cond_38563 = slt32(defunc_0_f_res_38562, k2p2zq_28674);
        float defunc_0_f_res_38564;
        
        if (cond_38563) {
            int64_t i_38565 = sext_i32_i64(defunc_0_f_res_38561);
            int64_t j_38566 = sext_i32_i64(defunc_0_f_res_38562);
            float defunc_0_f_res_t_res_38567 = ((__global
                                                 float *) defunc_3_map_res_mem_42706)[gtid_38510 *
                                                                                      (i32_res_28676 *
                                                                                       i32_res_28676) +
                                                                                      i_38565 *
                                                                                      i32_res_28676 +
                                                                                      j_38566];
            
            defunc_0_f_res_38564 = defunc_0_f_res_t_res_38567;
        } else {
            int32_t y_38568 = add32(k2p2zq_28674, defunc_0_f_res_38561);
            bool cond_38569 = defunc_0_f_res_38562 == y_38568;
            float defunc_0_f_res_f_res_38570;
            
            if (cond_38569) {
                defunc_0_f_res_f_res_38570 = 1.0F;
            } else {
                defunc_0_f_res_f_res_38570 = 0.0F;
            }
            defunc_0_f_res_38564 = defunc_0_f_res_f_res_38570;
        }
        ((__global float *) mem_42734)[gtid_38510 * i32_res_28809 +
                                       gtid_38511] = defunc_0_f_res_38564;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38556
}
__kernel void mainzisegmap_38693(__global int *global_failure, int64_t N_28660,
                                 int64_t m_28661, int32_t n_28664,
                                 int32_t k2p2zq_28674, int64_t i32_res_28676,
                                 int64_t num_groups_38714, __global
                                 unsigned char *binop_p_mem_42547, __global
                                 unsigned char *mem_42789, __global
                                 unsigned char *mem_42792, __global
                                 unsigned char *mem_42807)
{
    #define segmap_group_sizze_38713 (mainzisegmap_group_sizze_38695)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44042;
    int32_t local_tid_44043;
    int64_t group_sizze_44046;
    int32_t wave_sizze_44045;
    int32_t group_tid_44044;
    
    global_tid_44042 = get_global_id(0);
    local_tid_44043 = get_local_id(0);
    group_sizze_44046 = get_local_size(0);
    wave_sizze_44045 = LOCKSTEP_WIDTH;
    group_tid_44044 = get_group_id(0);
    
    int32_t phys_tid_38693;
    
    phys_tid_38693 = global_tid_44042;
    
    int32_t phys_group_id_44047;
    
    phys_group_id_44047 = get_group_id(0);
    for (int32_t i_44048 = 0; i_44048 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661, segmap_group_sizze_38713)) -
                   phys_group_id_44047, sext_i64_i32(num_groups_38714));
         i_44048++) {
        int32_t virt_group_id_44049 = phys_group_id_44047 + i_44048 *
                sext_i64_i32(num_groups_38714);
        int64_t gtid_38692 = sext_i32_i64(virt_group_id_44049) *
                segmap_group_sizze_38713 + sext_i32_i64(local_tid_44043);
        
        if (slt64(gtid_38692, m_28661)) {
            for (int32_t i_42521 = 0; i_42521 < k2p2zq_28674; i_42521++) {
                int64_t i_42462 = sext_i32_i64(i_42521);
                float defunc_2_reduce_res_38720;
                float redout_42464 = 0.0F;
                
                for (int32_t i_42520 = 0; i_42520 < n_28664; i_42520++) {
                    int64_t i_42465 = sext_i32_i64(i_42520);
                    float x_38725 = ((__global float *) mem_42789)[i_42465 *
                                                                   m_28661 +
                                                                   gtid_38692];
                    bool isnan_res_38726;
                    
                    isnan_res_38726 = futrts_isnan32(x_38725);
                    
                    float defunc_1_f_res_38727;
                    
                    if (isnan_res_38726) {
                        defunc_1_f_res_38727 = 0.0F;
                    } else {
                        float x_38724 = ((__global
                                          float *) binop_p_mem_42547)[i_42462 *
                                                                      N_28660 +
                                                                      i_42465];
                        float defunc_1_f_res_f_res_38728 = x_38724 * x_38725;
                        
                        defunc_1_f_res_38727 = defunc_1_f_res_f_res_38728;
                    }
                    
                    float defunc_1_op_res_38723 = defunc_1_f_res_38727 +
                          redout_42464;
                    float redout_tmp_44051 = defunc_1_op_res_38723;
                    
                    redout_42464 = redout_tmp_44051;
                }
                defunc_2_reduce_res_38720 = redout_42464;
                ((__global float *) mem_42792)[phys_tid_38693 + i_42462 *
                                               (num_groups_38714 *
                                                segmap_group_sizze_38713)] =
                    defunc_2_reduce_res_38720;
            }
            for (int64_t i_44052 = 0; i_44052 < i32_res_28676; i_44052++) {
                ((__global float *) mem_42807)[i_44052 * m_28661 + gtid_38692] =
                    ((__global float *) mem_42792)[phys_tid_38693 + i_44052 *
                                                   (num_groups_38714 *
                                                    segmap_group_sizze_38713)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38713
}
__kernel void mainzisegmap_38834(__global int *global_failure, int64_t m_28661,
                                 int32_t k2p2zq_28674, int64_t i32_res_28676,
                                 int64_t num_groups_38854, __global
                                 unsigned char *mem_43011, __global
                                 unsigned char *mem_43014, __global
                                 unsigned char *mem_43017, __global
                                 unsigned char *mem_43032)
{
    #define segmap_group_sizze_38853 (mainzisegmap_group_sizze_38836)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44174;
    int32_t local_tid_44175;
    int64_t group_sizze_44178;
    int32_t wave_sizze_44177;
    int32_t group_tid_44176;
    
    global_tid_44174 = get_global_id(0);
    local_tid_44175 = get_local_id(0);
    group_sizze_44178 = get_local_size(0);
    wave_sizze_44177 = LOCKSTEP_WIDTH;
    group_tid_44176 = get_group_id(0);
    
    int32_t phys_tid_38834;
    
    phys_tid_38834 = global_tid_44174;
    
    int32_t phys_group_id_44179;
    
    phys_group_id_44179 = get_group_id(0);
    for (int32_t i_44180 = 0; i_44180 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661, segmap_group_sizze_38853)) -
                   phys_group_id_44179, sext_i64_i32(num_groups_38854));
         i_44180++) {
        int32_t virt_group_id_44181 = phys_group_id_44179 + i_44180 *
                sext_i64_i32(num_groups_38854);
        int64_t gtid_38833 = sext_i32_i64(virt_group_id_44181) *
                segmap_group_sizze_38853 + sext_i32_i64(local_tid_44175);
        
        if (slt64(gtid_38833, m_28661)) {
            for (int32_t i_42523 = 0; i_42523 < k2p2zq_28674; i_42523++) {
                int64_t i_42468 = sext_i32_i64(i_42523);
                float defunc_0_f_res_38861;
                float redout_42470 = 0.0F;
                
                for (int32_t i_42522 = 0; i_42522 < k2p2zq_28674; i_42522++) {
                    int64_t i_42471 = sext_i32_i64(i_42522);
                    float x_38865 = ((__global float *) mem_43014)[i_42471 *
                                                                   m_28661 +
                                                                   gtid_38833];
                    float x_38866 = ((__global float *) mem_43011)[i_42468 *
                                                                   (m_28661 *
                                                                    i32_res_28676) +
                                                                   i_42471 *
                                                                   m_28661 +
                                                                   gtid_38833];
                    float defunc_1_f_res_38867 = x_38865 * x_38866;
                    float defunc_1_op_res_38864 = defunc_1_f_res_38867 +
                          redout_42470;
                    float redout_tmp_44183 = defunc_1_op_res_38864;
                    
                    redout_42470 = redout_tmp_44183;
                }
                defunc_0_f_res_38861 = redout_42470;
                ((__global float *) mem_43017)[phys_tid_38834 + i_42468 *
                                               (num_groups_38854 *
                                                segmap_group_sizze_38853)] =
                    defunc_0_f_res_38861;
            }
            for (int64_t i_44184 = 0; i_44184 < i32_res_28676; i_44184++) {
                ((__global float *) mem_43032)[i_44184 * m_28661 + gtid_38833] =
                    ((__global float *) mem_43017)[phys_tid_38834 + i_44184 *
                                                   (num_groups_38854 *
                                                    segmap_group_sizze_38853)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38853
}
__kernel void mainzisegmap_38966(__global int *global_failure, int64_t N_28660,
                                 int64_t m_28661, int32_t k2p2zq_28674,
                                 int64_t i32_res_28676,
                                 int64_t num_groups_38985, __global
                                 unsigned char *mem_42554, __global
                                 unsigned char *mem_43076, __global
                                 unsigned char *mem_43079, __global
                                 unsigned char *mem_43094)
{
    #define segmap_group_sizze_38984 (mainzisegmap_group_sizze_38968)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44262;
    int32_t local_tid_44263;
    int64_t group_sizze_44266;
    int32_t wave_sizze_44265;
    int32_t group_tid_44264;
    
    global_tid_44262 = get_global_id(0);
    local_tid_44263 = get_local_id(0);
    group_sizze_44266 = get_local_size(0);
    wave_sizze_44265 = LOCKSTEP_WIDTH;
    group_tid_44264 = get_group_id(0);
    
    int32_t phys_tid_38966;
    
    phys_tid_38966 = global_tid_44262;
    
    int32_t phys_group_id_44267;
    
    phys_group_id_44267 = get_group_id(0);
    for (int32_t i_44268 = 0; i_44268 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661, segmap_group_sizze_38984)) -
                   phys_group_id_44267, sext_i64_i32(num_groups_38985));
         i_44268++) {
        int32_t virt_group_id_44269 = phys_group_id_44267 + i_44268 *
                sext_i64_i32(num_groups_38985);
        int64_t gtid_38965 = sext_i32_i64(virt_group_id_44269) *
                segmap_group_sizze_38984 + sext_i32_i64(local_tid_44263);
        
        if (slt64(gtid_38965, m_28661)) {
            for (int64_t i_42478 = 0; i_42478 < N_28660; i_42478++) {
                float defunc_0_f_res_38991;
                float redout_42480 = 0.0F;
                
                for (int32_t i_42526 = 0; i_42526 < k2p2zq_28674; i_42526++) {
                    int64_t i_42481 = sext_i32_i64(i_42526);
                    float x_38995 = ((__global float *) mem_43076)[i_42481 *
                                                                   m_28661 +
                                                                   gtid_38965];
                    float x_38996 = ((__global float *) mem_42554)[i_42478 *
                                                                   i32_res_28676 +
                                                                   i_42481];
                    float defunc_1_f_res_38997 = x_38995 * x_38996;
                    float defunc_1_op_res_38994 = defunc_1_f_res_38997 +
                          redout_42480;
                    float redout_tmp_44271 = defunc_1_op_res_38994;
                    
                    redout_42480 = redout_tmp_44271;
                }
                defunc_0_f_res_38991 = redout_42480;
                ((__global float *) mem_43079)[phys_tid_38966 + i_42478 *
                                               (num_groups_38985 *
                                                segmap_group_sizze_38984)] =
                    defunc_0_f_res_38991;
            }
            for (int64_t i_44272 = 0; i_44272 < N_28660; i_44272++) {
                ((__global float *) mem_43094)[i_44272 * m_28661 + gtid_38965] =
                    ((__global float *) mem_43079)[phys_tid_38966 + i_44272 *
                                                   (num_groups_38985 *
                                                    segmap_group_sizze_38984)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38984
}
__kernel void mainzisegmap_39246(__global int *global_failure, int64_t N_28660,
                                 int64_t m_28661, __global
                                 unsigned char *mem_43320, __global
                                 unsigned char *mem_43323, __global
                                 unsigned char *mem_43329, __global
                                 unsigned char *mem_43332)
{
    #define segmap_group_sizze_39412 (mainzisegmap_group_sizze_39249)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44489;
    int32_t local_tid_44490;
    int64_t group_sizze_44493;
    int32_t wave_sizze_44492;
    int32_t group_tid_44491;
    
    global_tid_44489 = get_global_id(0);
    local_tid_44490 = get_local_id(0);
    group_sizze_44493 = get_local_size(0);
    wave_sizze_44492 = LOCKSTEP_WIDTH;
    group_tid_44491 = get_group_id(0);
    
    int32_t phys_tid_39246;
    
    phys_tid_39246 = global_tid_44489;
    
    int64_t gtid_39244;
    
    gtid_39244 = squot64(sext_i32_i64(group_tid_44491) *
                         segmap_group_sizze_39412 +
                         sext_i32_i64(local_tid_44490), N_28660);
    
    int64_t gtid_39245;
    
    gtid_39245 = sext_i32_i64(group_tid_44491) * segmap_group_sizze_39412 +
        sext_i32_i64(local_tid_44490) - squot64(sext_i32_i64(group_tid_44491) *
                                                segmap_group_sizze_39412 +
                                                sext_i32_i64(local_tid_44490),
                                                N_28660) * N_28660;
    if (slt64(gtid_39244, m_28661) && slt64(gtid_39245, N_28660)) {
        float x_39420 = ((__global float *) mem_43323)[gtid_39244 * N_28660 +
                                                       gtid_39245];
        int32_t index_primexp_40566 = sext_i64_i32(gtid_39245);
        bool isnan_res_39423;
        
        isnan_res_39423 = futrts_isnan32(x_39420);
        
        bool defunc_0_p_res_39424 = !isnan_res_39423;
        int64_t defunc_1_f_res_39425;
        
        if (defunc_0_p_res_39424) {
            int64_t x_39421 = ((__global int64_t *) mem_43320)[gtid_39244 *
                                                               N_28660 +
                                                               gtid_39245];
            int64_t defunc_1_f_res_t_res_39426 = sub64(x_39421, (int64_t) 1);
            
            defunc_1_f_res_39425 = defunc_1_f_res_t_res_39426;
        } else {
            defunc_1_f_res_39425 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_39244) && slt64(gtid_39244, m_28661)) &&
            (sle64((int64_t) 0, defunc_1_f_res_39425) &&
             slt64(defunc_1_f_res_39425, N_28660))) {
            ((__global int32_t *) mem_43332)[gtid_39244 * N_28660 +
                                             defunc_1_f_res_39425] =
                index_primexp_40566;
        }
        if ((sle64((int64_t) 0, gtid_39244) && slt64(gtid_39244, m_28661)) &&
            (sle64((int64_t) 0, defunc_1_f_res_39425) &&
             slt64(defunc_1_f_res_39425, N_28660))) {
            ((__global float *) mem_43329)[gtid_39244 * N_28660 +
                                           defunc_1_f_res_39425] = x_39420;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39412
}
__kernel void mainzisegmap_39322(__global int *global_failure, int64_t N_28660,
                                 int64_t m_28661, int64_t i_28936, __global
                                 unsigned char *mem_43320, __global
                                 unsigned char *mem_43326)
{
    #define segmap_group_sizze_39376 (mainzisegmap_group_sizze_39324)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44466;
    int32_t local_tid_44467;
    int64_t group_sizze_44470;
    int32_t wave_sizze_44469;
    int32_t group_tid_44468;
    
    global_tid_44466 = get_global_id(0);
    local_tid_44467 = get_local_id(0);
    group_sizze_44470 = get_local_size(0);
    wave_sizze_44469 = LOCKSTEP_WIDTH;
    group_tid_44468 = get_group_id(0);
    
    int32_t phys_tid_39322;
    
    phys_tid_39322 = global_tid_44466;
    
    int64_t gtid_39321;
    
    gtid_39321 = sext_i32_i64(group_tid_44468) * segmap_group_sizze_39376 +
        sext_i32_i64(local_tid_44467);
    if (slt64(gtid_39321, m_28661)) {
        int64_t last_res_39380 = ((__global int64_t *) mem_43320)[gtid_39321 *
                                                                  N_28660 +
                                                                  i_28936];
        int32_t defunc_0_f_res_39381 = sext_i64_i32(last_res_39380);
        
        ((__global int32_t *) mem_43326)[gtid_39321] = defunc_0_f_res_39381;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39376
}
__kernel void mainzisegmap_39573(__global int *global_failure, int64_t m_28661,
                                 float hfrac_28666, int32_t k2p2_28672, __global
                                 unsigned char *mem_43389, __global
                                 unsigned char *mem_43392, __global
                                 unsigned char *mem_43395, __global
                                 unsigned char *mem_43397)
{
    #define segmap_group_sizze_39658 (mainzisegmap_group_sizze_39575)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44642;
    int32_t local_tid_44643;
    int64_t group_sizze_44646;
    int32_t wave_sizze_44645;
    int32_t group_tid_44644;
    
    global_tid_44642 = get_global_id(0);
    local_tid_44643 = get_local_id(0);
    group_sizze_44646 = get_local_size(0);
    wave_sizze_44645 = LOCKSTEP_WIDTH;
    group_tid_44644 = get_group_id(0);
    
    int32_t phys_tid_39573;
    
    phys_tid_39573 = global_tid_44642;
    
    int64_t gtid_39572;
    
    gtid_39572 = sext_i32_i64(group_tid_44644) * segmap_group_sizze_39658 +
        sext_i32_i64(local_tid_44643);
    if (slt64(gtid_39572, m_28661)) {
        int32_t defunc_0_f_res_39662 = ((__global
                                         int32_t *) mem_43389)[gtid_39572];
        float defunc_0_f_res_39663 = ((__global float *) mem_43392)[gtid_39572];
        int32_t r32_arg_39664 = sub32(defunc_0_f_res_39662, k2p2_28672);
        float i32_res_39665 = sitofp_i32_f32(r32_arg_39664);
        float sqrt_arg_39666 = defunc_0_f_res_39663 / i32_res_39665;
        float sqrt_res_39667;
        
        sqrt_res_39667 = futrts_sqrt32(sqrt_arg_39666);
        
        float i32_res_39668 = sitofp_i32_f32(defunc_0_f_res_39662);
        float t32_arg_39669 = hfrac_28666 * i32_res_39668;
        int32_t f32_res_39670 = fptosi_f32_i32(t32_arg_39669);
        
        ((__global int32_t *) mem_43395)[gtid_39572] = f32_res_39670;
        ((__global float *) mem_43397)[gtid_39572] = sqrt_res_39667;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39658
}
__kernel void mainzisegmap_39844(__global int *global_failure, float lam_28667,
                                 int64_t iota32_arg_29056, int32_t x_29061,
                                 float i32_res_29069, __global
                                 unsigned char *mappingindices_mem_42537,
                                 __global unsigned char *mem_43439, __global
                                 unsigned char *mem_43441)
{
    #define segmap_group_sizze_39863 (mainzisegmap_group_sizze_39846)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44752;
    int32_t local_tid_44753;
    int64_t group_sizze_44756;
    int32_t wave_sizze_44755;
    int32_t group_tid_44754;
    
    global_tid_44752 = get_global_id(0);
    local_tid_44753 = get_local_id(0);
    group_sizze_44756 = get_local_size(0);
    wave_sizze_44755 = LOCKSTEP_WIDTH;
    group_tid_44754 = get_group_id(0);
    
    int32_t phys_tid_39844;
    
    phys_tid_39844 = global_tid_44752;
    
    int64_t gtid_39843;
    
    gtid_39843 = sext_i32_i64(group_tid_44754) * segmap_group_sizze_39863 +
        sext_i32_i64(local_tid_44753);
    if (slt64(gtid_39843, iota32_arg_29056)) {
        int32_t defunc_0_f_res_39868 = sext_i64_i32(gtid_39843);
        int32_t t_39869 = add32(x_29061, defunc_0_f_res_39868);
        int32_t i_39870 = sub32(t_39869, 1);
        int64_t i_39871 = sext_i32_i64(i_39870);
        int32_t time_39872 = ((__global
                               int32_t *) mappingindices_mem_42537)[i_39871];
        float i32_res_39873 = sitofp_i32_f32(time_39872);
        float logplus_arg_39874 = i32_res_39873 / i32_res_29069;
        bool cond_39875 = 2.7182817F < logplus_arg_39874;
        float logplus_res_39876;
        
        if (cond_39875) {
            float log_res_39877;
            
            log_res_39877 = futrts_log32(logplus_arg_39874);
            logplus_res_39876 = log_res_39877;
        } else {
            logplus_res_39876 = 1.0F;
        }
        
        float sqrt_res_39878;
        
        sqrt_res_39878 = futrts_sqrt32(logplus_res_39876);
        
        float defunc_0_f_res_39879 = lam_28667 * sqrt_res_39878;
        
        ((__global int32_t *) mem_43439)[gtid_39843] = defunc_0_f_res_39868;
        ((__global float *) mem_43441)[gtid_39843] = defunc_0_f_res_39879;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39863
}
__kernel void mainzisegmap_40214(__global int *global_failure, int64_t N_28660,
                                 int64_t m_28661, int32_t n_28664, __global
                                 unsigned char *defunc_4_map_res_mem_43336,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43402,
                                 __global unsigned char *mem_43455, __global
                                 unsigned char *mem_43462, __global
                                 unsigned char *mem_43464, __global
                                 unsigned char *mem_43466, __global
                                 unsigned char *mem_43469, __global
                                 unsigned char *mem_43471)
{
    #define segmap_group_sizze_40478 (mainzisegmap_group_sizze_40216)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44947;
    int32_t local_tid_44948;
    int64_t group_sizze_44951;
    int32_t wave_sizze_44950;
    int32_t group_tid_44949;
    
    global_tid_44947 = get_global_id(0);
    local_tid_44948 = get_local_id(0);
    group_sizze_44951 = get_local_size(0);
    wave_sizze_44950 = LOCKSTEP_WIDTH;
    group_tid_44949 = get_group_id(0);
    
    int32_t phys_tid_40214;
    
    phys_tid_40214 = global_tid_44947;
    
    int64_t gtid_40213;
    
    gtid_40213 = sext_i32_i64(group_tid_44949) * segmap_group_sizze_40478 +
        sext_i32_i64(local_tid_44948);
    if (slt64(gtid_40213, m_28661)) {
        int32_t x_40482 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_40213];
        int32_t y_40484 = ((__global int32_t *) mem_43455)[gtid_40213];
        bool acc0_40486 = ((__global bool *) mem_43462)[gtid_40213];
        bool x_40491 = acc0_40486 && acc0_40486;
        int32_t defunc_1_op_res_f_res_40495;
        
        if (acc0_40486) {
            int32_t acc0_40487 = ((__global int32_t *) mem_43464)[gtid_40213];
            
            defunc_1_op_res_f_res_40495 = acc0_40487;
        } else {
            defunc_1_op_res_f_res_40495 = -1;
        }
        
        bool cond_40501 = y_40484 == 0;
        float defunc_0_f_res_40502;
        
        if (cond_40501) {
            defunc_0_f_res_40502 = 0.0F;
        } else {
            float acc0_40488 = ((__global float *) mem_43466)[gtid_40213];
            float i32_res_40503 = sitofp_i32_f32(y_40484);
            float defunc_0_f_res_f_res_40504 = acc0_40488 / i32_res_40503;
            
            defunc_0_f_res_40502 = defunc_0_f_res_f_res_40504;
        }
        
        bool cond_40505 = !x_40491;
        int32_t fst_breakzq_40506;
        
        if (cond_40505) {
            fst_breakzq_40506 = -1;
        } else {
            bool cond_40507 = slt32(defunc_1_op_res_f_res_40495, y_40484);
            int32_t adjustValInds_res_40508;
            
            if (cond_40507) {
                int32_t i_40509 = add32(x_40482, defunc_1_op_res_f_res_40495);
                int64_t i_40510 = sext_i32_i64(i_40509);
                int32_t x_40511 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43336)[gtid_40213 *
                                                                           N_28660 +
                                                                           i_40510];
                int32_t adjustValInds_res_t_res_40512 = sub32(x_40511, n_28664);
                
                adjustValInds_res_40508 = adjustValInds_res_t_res_40512;
            } else {
                adjustValInds_res_40508 = -1;
            }
            fst_breakzq_40506 = adjustValInds_res_40508;
        }
        
        bool cond_40513 = sle32(x_40482, 5);
        bool cond_f_res_40514 = sle32(y_40484, 5);
        bool x_40515 = !cond_40513;
        bool y_40516 = cond_f_res_40514 && x_40515;
        bool cond_40517 = cond_40513 || y_40516;
        int32_t fst_breakzq_40518;
        
        if (cond_40517) {
            fst_breakzq_40518 = -2;
        } else {
            fst_breakzq_40518 = fst_breakzq_40506;
        }
        ((__global int32_t *) mem_43469)[gtid_40213] = fst_breakzq_40518;
        ((__global float *) mem_43471)[gtid_40213] = defunc_0_f_res_40502;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40478
}
__kernel void mainzisegmap_40356(__global int *global_failure, int64_t m_28661,
                                 int64_t num_groups_40379, __global
                                 unsigned char *defunc_4_map_res_mem_43334,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43402,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43403,
                                 __global unsigned char *mem_43453, __global
                                 unsigned char *mem_43455)
{
    #define segmap_group_sizze_40378 (mainzisegmap_group_sizze_40358)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44785;
    int32_t local_tid_44786;
    int64_t group_sizze_44789;
    int32_t wave_sizze_44788;
    int32_t group_tid_44787;
    
    global_tid_44785 = get_global_id(0);
    local_tid_44786 = get_local_id(0);
    group_sizze_44789 = get_local_size(0);
    wave_sizze_44788 = LOCKSTEP_WIDTH;
    group_tid_44787 = get_group_id(0);
    
    int32_t phys_tid_40356;
    
    phys_tid_40356 = global_tid_44785;
    
    int32_t phys_group_id_44790;
    
    phys_group_id_44790 = get_group_id(0);
    for (int32_t i_44791 = 0; i_44791 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661, segmap_group_sizze_40378)) -
                   phys_group_id_44790, sext_i64_i32(num_groups_40379));
         i_44791++) {
        int32_t virt_group_id_44792 = phys_group_id_44790 + i_44791 *
                sext_i64_i32(num_groups_40379);
        int64_t gtid_40355 = sext_i32_i64(virt_group_id_44792) *
                segmap_group_sizze_40378 + sext_i32_i64(local_tid_44786);
        
        if (slt64(gtid_40355, m_28661)) {
            int32_t x_40385 = ((__global
                                int32_t *) defunc_4_map_res_mem_43334)[gtid_40355];
            int32_t x_40386 = ((__global
                                int32_t *) defunc_3_map_res_mem_43402)[gtid_40355];
            float x_40387 = ((__global
                              float *) defunc_3_map_res_mem_43403)[gtid_40355];
            int32_t y_40388 = sub32(x_40385, x_40386);
            float i32_res_40389 = sitofp_i32_f32(x_40386);
            float sqrt_res_40390;
            
            sqrt_res_40390 = futrts_sqrt32(i32_res_40389);
            
            float y_40391 = x_40387 * sqrt_res_40390;
            
            ((__global float *) mem_43453)[gtid_40355] = y_40391;
            ((__global int32_t *) mem_43455)[gtid_40355] = y_40388;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40378
}
__kernel void mainzisegmap_intragroup_37951(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42720_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_42710_backing_aligned_1,
                                            int32_t k2p2zq_28674,
                                            int64_t i32_res_28676,
                                            int32_t m_28807,
                                            int64_t i32_res_28809,
                                            int64_t i32_res_28824, __global
                                            unsigned char *defunc_3_map_res_mem_42706,
                                            __global unsigned char *mem_42730)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42720_backing_1 = (__local volatile
                                                           char *) mem_42720_backing_aligned_0;
    __local volatile char *restrict mem_42710_backing_0 = (__local volatile
                                                           char *) mem_42710_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43977;
    int32_t local_tid_43978;
    int64_t group_sizze_43981;
    int32_t wave_sizze_43980;
    int32_t group_tid_43979;
    
    global_tid_43977 = get_global_id(0);
    local_tid_43978 = get_local_id(0);
    group_sizze_43981 = get_local_size(0);
    wave_sizze_43980 = LOCKSTEP_WIDTH;
    group_tid_43979 = get_group_id(0);
    
    int32_t phys_tid_37951;
    
    phys_tid_37951 = group_tid_43979;
    
    int32_t ltid_pre_43982;
    
    ltid_pre_43982 = local_tid_43978;
    
    int64_t gtid_37906;
    
    gtid_37906 = sext_i32_i64(group_tid_43979);
    
    __local char *mem_42710;
    
    mem_42710 = (__local char *) mem_42710_backing_0;
    
    int64_t gtid_37909 = sext_i32_i64(ltid_pre_43982);
    int32_t phys_tid_37910 = local_tid_43978;
    int32_t index_primexp_40543 = sext_i64_i32(gtid_37909);
    int32_t defunc_0_f_res_38076 = sdiv32(index_primexp_40543, m_28807);
    int32_t defunc_0_f_res_38077 = smod32(index_primexp_40543, m_28807);
    bool cond_38078 = slt32(defunc_0_f_res_38077, k2p2zq_28674);
    float defunc_0_f_res_38079;
    
    if (cond_38078) {
        int64_t i_38080 = sext_i32_i64(defunc_0_f_res_38076);
        int64_t j_38081 = sext_i32_i64(defunc_0_f_res_38077);
        float defunc_0_f_res_t_res_38082 = ((__global
                                             float *) defunc_3_map_res_mem_42706)[gtid_37906 *
                                                                                  (i32_res_28676 *
                                                                                   i32_res_28676) +
                                                                                  i_38080 *
                                                                                  i32_res_28676 +
                                                                                  j_38081];
        
        defunc_0_f_res_38079 = defunc_0_f_res_t_res_38082;
    } else {
        int32_t y_38083 = add32(k2p2zq_28674, defunc_0_f_res_38076);
        bool cond_38084 = defunc_0_f_res_38077 == y_38083;
        float defunc_0_f_res_f_res_38085;
        
        if (cond_38084) {
            defunc_0_f_res_f_res_38085 = 1.0F;
        } else {
            defunc_0_f_res_f_res_38085 = 0.0F;
        }
        defunc_0_f_res_38079 = defunc_0_f_res_f_res_38085;
    }
    ((__local float *) mem_42710)[gtid_37909] = defunc_0_f_res_38079;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42720;
    
    mem_42720 = (__local char *) mem_42720_backing_1;
    for (int32_t i_38087 = 0; i_38087 < k2p2zq_28674; i_38087++) {
        int64_t i32_res_38089 = sext_i32_i64(i_38087);
        float v1_38090 = ((__local float *) mem_42710)[i32_res_38089];
        bool cond_38091 = v1_38090 == 0.0F;
        int64_t gtid_37922 = sext_i32_i64(ltid_pre_43982);
        int32_t phys_tid_37923 = local_tid_43978;
        int32_t defunc_0_f_res_38094 = sext_i64_i32(gtid_37922);
        int32_t defunc_0_f_res_38095 = sdiv32(defunc_0_f_res_38094, m_28807);
        int32_t defunc_0_f_res_38096 = smod32(defunc_0_f_res_38094, m_28807);
        float defunc_0_f_res_38097;
        
        if (cond_38091) {
            int32_t x_38098 = mul32(m_28807, defunc_0_f_res_38095);
            int32_t i32_arg_38099 = add32(defunc_0_f_res_38096, x_38098);
            int64_t i32_res_38100 = sext_i32_i64(i32_arg_38099);
            float defunc_0_f_res_t_res_38101 = ((__local
                                                 float *) mem_42710)[i32_res_38100];
            
            defunc_0_f_res_38097 = defunc_0_f_res_t_res_38101;
        } else {
            int64_t i32_res_38102 = sext_i32_i64(defunc_0_f_res_38096);
            float x_38103 = ((__local float *) mem_42710)[i32_res_38102];
            float x_38104 = x_38103 / v1_38090;
            int32_t y_38105 = sub32(k2p2zq_28674, 1);
            bool cond_38106 = slt32(defunc_0_f_res_38095, y_38105);
            float defunc_0_f_res_f_res_38107;
            
            if (cond_38106) {
                int32_t x_38108 = add32(1, defunc_0_f_res_38095);
                int32_t x_38109 = mul32(m_28807, x_38108);
                int32_t i32_arg_38110 = add32(defunc_0_f_res_38096, x_38109);
                int64_t i32_res_38111 = sext_i32_i64(i32_arg_38110);
                float x_38112 = ((__local float *) mem_42710)[i32_res_38111];
                int32_t i32_arg_38113 = add32(i_38087, x_38109);
                int64_t i32_res_38114 = sext_i32_i64(i32_arg_38113);
                float x_38115 = ((__local float *) mem_42710)[i32_res_38114];
                float y_38116 = x_38104 * x_38115;
                float defunc_0_f_res_f_res_t_res_38117 = x_38112 - y_38116;
                
                defunc_0_f_res_f_res_38107 = defunc_0_f_res_f_res_t_res_38117;
            } else {
                defunc_0_f_res_f_res_38107 = x_38104;
            }
            defunc_0_f_res_38097 = defunc_0_f_res_f_res_38107;
        }
        ((__local float *) mem_42720)[gtid_37922] = defunc_0_f_res_38097;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_37949 = sext_i32_i64(ltid_pre_43982);
        int32_t phys_tid_37950 = local_tid_43978;
        float write_value_38120 = ((__local float *) mem_42720)[write_i_37949];
        
        if (sle64((int64_t) 0, write_i_37949) && slt64(write_i_37949,
                                                       i32_res_28809)) {
            ((__local float *) mem_42710)[write_i_37949] = write_value_38120;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_43984 = 0; i_43984 < sdiv_up64(i32_res_28676 *
                                                  i32_res_28676 -
                                                  sext_i32_i64(local_tid_43978),
                                                  i32_res_28809); i_43984++) {
        ((__global float *) mem_42730)[gtid_37906 * (i32_res_28676 *
                                                     i32_res_28676) +
                                       squot64(i_43984 * i32_res_28809 +
                                               sext_i32_i64(local_tid_43978),
                                               i32_res_28676) * i32_res_28676 +
                                       (i_43984 * i32_res_28809 +
                                        sext_i32_i64(local_tid_43978) -
                                        squot64(i_43984 * i32_res_28809 +
                                                sext_i32_i64(local_tid_43978),
                                                i32_res_28676) *
                                        i32_res_28676)] = ((__local
                                                            float *) mem_42710)[i32_res_28676 +
                                                                                (squot64(i_43984 *
                                                                                         i32_res_28809 +
                                                                                         sext_i32_i64(local_tid_43978),
                                                                                         i32_res_28676) *
                                                                                 i32_res_28824 +
                                                                                 (i_43984 *
                                                                                  i32_res_28809 +
                                                                                  sext_i32_i64(local_tid_43978) -
                                                                                  squot64(i_43984 *
                                                                                          i32_res_28809 +
                                                                                          sext_i32_i64(local_tid_43978),
                                                                                          i32_res_28676) *
                                                                                  i32_res_28676))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_38178(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42751_backing_aligned_0,
                                            int64_t m_28661,
                                            int32_t k2p2zq_28674,
                                            int32_t m_28807,
                                            int64_t i32_res_28809,
                                            int32_t i_38573,
                                            int64_t i32_res_38575,
                                            int64_t ctx_param_ext_42737,
                                            int64_t ctx_param_ext_42738,
                                            int64_t ctx_param_ext_42740,
                                            __global
                                            unsigned char *mem_param_42742,
                                            __global unsigned char *mem_42747,
                                            __global unsigned char *mem_42755)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42751_backing_0 = (__local volatile
                                                           char *) mem_42751_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44011;
    int32_t local_tid_44012;
    int64_t group_sizze_44015;
    int32_t wave_sizze_44014;
    int32_t group_tid_44013;
    
    global_tid_44011 = get_global_id(0);
    local_tid_44012 = get_local_id(0);
    group_sizze_44015 = get_local_size(0);
    wave_sizze_44014 = LOCKSTEP_WIDTH;
    group_tid_44013 = get_group_id(0);
    
    int32_t phys_tid_38178;
    
    phys_tid_38178 = group_tid_44013;
    
    int32_t ltid_pre_44016;
    
    ltid_pre_44016 = local_tid_44012;
    
    int64_t gtid_38146;
    
    gtid_38146 = sext_i32_i64(group_tid_44013);
    
    float v1_38588 = ((__global float *) mem_param_42742)[ctx_param_ext_42737 +
                                                          (gtid_38146 *
                                                           ctx_param_ext_42738 +
                                                           i32_res_38575 *
                                                           ctx_param_ext_42740)];
    bool cond_38589 = v1_38588 == 0.0F;
    __local char *mem_42751;
    
    mem_42751 = (__local char *) mem_42751_backing_0;
    
    int64_t gtid_38149 = sext_i32_i64(ltid_pre_44016);
    int32_t phys_tid_38150 = local_tid_44012;
    int32_t defunc_0_f_res_38592 = sext_i64_i32(gtid_38149);
    int32_t defunc_0_f_res_38593 = sdiv32(defunc_0_f_res_38592, m_28807);
    int32_t defunc_0_f_res_38594 = smod32(defunc_0_f_res_38592, m_28807);
    float defunc_0_f_res_38595;
    
    if (cond_38589) {
        int32_t x_38596 = mul32(m_28807, defunc_0_f_res_38593);
        int32_t i32_arg_38597 = add32(defunc_0_f_res_38594, x_38596);
        int64_t i32_res_38598 = sext_i32_i64(i32_arg_38597);
        float defunc_0_f_res_t_res_38599 = ((__global
                                             float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                       (gtid_38146 *
                                                                        ctx_param_ext_42738 +
                                                                        i32_res_38598 *
                                                                        ctx_param_ext_42740)];
        
        defunc_0_f_res_38595 = defunc_0_f_res_t_res_38599;
    } else {
        int64_t i32_res_38600 = sext_i32_i64(defunc_0_f_res_38594);
        float x_38601 = ((__global
                          float *) mem_param_42742)[ctx_param_ext_42737 +
                                                    (gtid_38146 *
                                                     ctx_param_ext_42738 +
                                                     i32_res_38600 *
                                                     ctx_param_ext_42740)];
        float x_38602 = x_38601 / v1_38588;
        int32_t y_38603 = sub32(k2p2zq_28674, 1);
        bool cond_38604 = slt32(defunc_0_f_res_38593, y_38603);
        float defunc_0_f_res_f_res_38605;
        
        if (cond_38604) {
            int32_t x_38606 = add32(1, defunc_0_f_res_38593);
            int32_t x_38607 = mul32(m_28807, x_38606);
            int32_t i32_arg_38608 = add32(defunc_0_f_res_38594, x_38607);
            int64_t i32_res_38609 = sext_i32_i64(i32_arg_38608);
            float x_38610 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_38146 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_38609 *
                                                         ctx_param_ext_42740)];
            int32_t i32_arg_38611 = add32(i_38573, x_38607);
            int64_t i32_res_38612 = sext_i32_i64(i32_arg_38611);
            float x_38613 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_38146 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_38612 *
                                                         ctx_param_ext_42740)];
            float y_38614 = x_38602 * x_38613;
            float defunc_0_f_res_f_res_t_res_38615 = x_38610 - y_38614;
            
            defunc_0_f_res_f_res_38605 = defunc_0_f_res_f_res_t_res_38615;
        } else {
            defunc_0_f_res_f_res_38605 = x_38602;
        }
        defunc_0_f_res_38595 = defunc_0_f_res_f_res_38605;
    }
    ((__local float *) mem_42751)[gtid_38149] = defunc_0_f_res_38595;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_38176 = sext_i32_i64(ltid_pre_44016);
    int32_t phys_tid_38177 = local_tid_44012;
    float write_value_38618 = ((__local float *) mem_42751)[write_i_38176];
    
    if (sle64((int64_t) 0, write_i_38176) && slt64(write_i_38176,
                                                   i32_res_28809)) {
        ((__global float *) mem_42747)[gtid_38146 + write_i_38176 * m_28661] =
            write_value_38618;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44012 == 0) {
        for (int64_t i_44017 = 0; i_44017 < i32_res_28809; i_44017++) {
            ((__global float *) mem_42755)[gtid_38146 * i32_res_28809 +
                                           i_44017] = ((__global
                                                        float *) mem_42747)[gtid_38146 +
                                                                            i_44017 *
                                                                            m_28661];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39129(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43307_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43305_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43303_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43301_backing_aligned_3,
                                            int64_t N_28660, int64_t i_28936,
                                            __global
                                            unsigned char *images_mem_42538,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43297,
                                            __global unsigned char *mem_43310,
                                            __global unsigned char *mem_43313,
                                            __global unsigned char *mem_43316)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43307_backing_3 = (__local volatile
                                                           char *) mem_43307_backing_aligned_0;
    __local volatile char *restrict mem_43305_backing_2 = (__local volatile
                                                           char *) mem_43305_backing_aligned_1;
    __local volatile char *restrict mem_43303_backing_1 = (__local volatile
                                                           char *) mem_43303_backing_aligned_2;
    __local volatile char *restrict mem_43301_backing_0 = (__local volatile
                                                           char *) mem_43301_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44393;
    int32_t local_tid_44394;
    int64_t group_sizze_44397;
    int32_t wave_sizze_44396;
    int32_t group_tid_44395;
    
    global_tid_44393 = get_global_id(0);
    local_tid_44394 = get_local_id(0);
    group_sizze_44397 = get_local_size(0);
    wave_sizze_44396 = LOCKSTEP_WIDTH;
    group_tid_44395 = get_group_id(0);
    
    int32_t phys_tid_39129;
    
    phys_tid_39129 = group_tid_44395;
    
    int32_t ltid_pre_44398;
    
    ltid_pre_44398 = local_tid_44394;
    
    int64_t gtid_39122;
    
    gtid_39122 = sext_i32_i64(group_tid_44395);
    
    __local char *mem_43301;
    
    mem_43301 = (__local char *) mem_43301_backing_0;
    
    __local char *mem_43303;
    
    mem_43303 = (__local char *) mem_43303_backing_1;
    
    int64_t gtid_39125 = sext_i32_i64(ltid_pre_44398);
    int32_t phys_tid_39126 = local_tid_44394;
    float x_39218 = ((__global float *) images_mem_42538)[gtid_39122 * N_28660 +
                                                          gtid_39125];
    bool isnan_res_39220;
    
    isnan_res_39220 = futrts_isnan32(x_39218);
    
    bool cond_39221 = !isnan_res_39220;
    float defunc_1_f_res_39222;
    
    if (cond_39221) {
        float x_39219 = ((__global
                          float *) defunc_3_map_res_mem_43297)[gtid_39122 *
                                                               N_28660 +
                                                               gtid_39125];
        float defunc_1_f_res_t_res_39223 = x_39218 - x_39219;
        
        defunc_1_f_res_39222 = defunc_1_f_res_t_res_39223;
    } else {
        defunc_1_f_res_39222 = NAN;
    }
    
    bool isnan_res_39224;
    
    isnan_res_39224 = futrts_isnan32(defunc_1_f_res_39222);
    
    bool defunc_0_p_res_39225 = !isnan_res_39224;
    int64_t defunc_0_f_res_39226 = btoi_bool_i64(defunc_0_p_res_39225);
    
    ((__local int64_t *) mem_43301)[gtid_39125] = defunc_0_f_res_39226;
    ((__local float *) mem_43303)[gtid_39125] = defunc_1_f_res_39222;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44399;
    
    dims_flat_44399 = N_28660;
    
    int64_t x_39215;
    int64_t x_39216;
    int64_t x_44401;
    int64_t x_44402;
    bool ltid_in_bounds_44404;
    
    ltid_in_bounds_44404 = slt64(sext_i32_i64(local_tid_44394), N_28660);
    
    int32_t skip_threads_44405;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44404) {
            x_39216 = ((volatile __local
                        int64_t *) mem_43301)[sext_i32_i64(local_tid_44394)];
            if ((local_tid_44394 - squot32(local_tid_44394, 32) * 32) == 0) {
                x_39215 = x_39216;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44405 = 1;
        while (slt32(skip_threads_44405, 32)) {
            if (sle32(skip_threads_44405, local_tid_44394 -
                      squot32(local_tid_44394, 32) * 32) &&
                ltid_in_bounds_44404) {
                // read operands
                {
                    x_39215 = ((volatile __local
                                int64_t *) mem_43301)[sext_i32_i64(local_tid_44394) -
                                                      sext_i32_i64(skip_threads_44405)];
                }
                // perform operation
                {
                    bool inactive_44406 =
                         slt64(srem64(sext_i32_i64(local_tid_44394), N_28660),
                               sext_i32_i64(local_tid_44394) -
                               sext_i32_i64(local_tid_44394 -
                               skip_threads_44405));
                    
                    if (inactive_44406) {
                        x_39215 = x_39216;
                    }
                    if (!inactive_44406) {
                        int64_t defunc_1_op_res_39217 = add64(x_39215, x_39216);
                        
                        x_39215 = defunc_1_op_res_39217;
                    }
                }
            }
            if (sle32(wave_sizze_44396, skip_threads_44405)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44405, local_tid_44394 -
                      squot32(local_tid_44394, 32) * 32) &&
                ltid_in_bounds_44404) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43301)[sext_i32_i64(local_tid_44394)] =
                        x_39215;
                    x_39216 = x_39215;
                }
            }
            if (sle32(wave_sizze_44396, skip_threads_44405)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44405 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44394 - squot32(local_tid_44394, 32) * 32) == 31 &&
            ltid_in_bounds_44404) {
            ((volatile __local
              int64_t *) mem_43301)[sext_i32_i64(squot32(local_tid_44394,
                                                         32))] = x_39215;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44407;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44394, 32) == 0 && ltid_in_bounds_44404) {
                x_44402 = ((volatile __local
                            int64_t *) mem_43301)[sext_i32_i64(local_tid_44394)];
                if ((local_tid_44394 - squot32(local_tid_44394, 32) * 32) ==
                    0) {
                    x_44401 = x_44402;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44407 = 1;
            while (slt32(skip_threads_44407, 32)) {
                if (sle32(skip_threads_44407, local_tid_44394 -
                          squot32(local_tid_44394, 32) * 32) &&
                    (squot32(local_tid_44394, 32) == 0 &&
                     ltid_in_bounds_44404)) {
                    // read operands
                    {
                        x_44401 = ((volatile __local
                                    int64_t *) mem_43301)[sext_i32_i64(local_tid_44394) -
                                                          sext_i32_i64(skip_threads_44407)];
                    }
                    // perform operation
                    {
                        bool inactive_44408 =
                             slt64(srem64(sext_i32_i64(local_tid_44394 * 32 +
                                          32 - 1), N_28660),
                                   sext_i32_i64(local_tid_44394 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44394 -
                                                 skip_threads_44407) * 32 + 32 -
                                   1));
                        
                        if (inactive_44408) {
                            x_44401 = x_44402;
                        }
                        if (!inactive_44408) {
                            int64_t defunc_1_op_res_44403 = add64(x_44401,
                                                                  x_44402);
                            
                            x_44401 = defunc_1_op_res_44403;
                        }
                    }
                }
                if (sle32(wave_sizze_44396, skip_threads_44407)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44407, local_tid_44394 -
                          squot32(local_tid_44394, 32) * 32) &&
                    (squot32(local_tid_44394, 32) == 0 &&
                     ltid_in_bounds_44404)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43301)[sext_i32_i64(local_tid_44394)] =
                            x_44401;
                        x_44402 = x_44401;
                    }
                }
                if (sle32(wave_sizze_44396, skip_threads_44407)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44407 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44394, 32) == 0 || !ltid_in_bounds_44404)) {
            // read operands
            {
                x_39216 = x_39215;
                x_39215 = ((__local
                            int64_t *) mem_43301)[sext_i32_i64(squot32(local_tid_44394,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44409 =
                     slt64(srem64(sext_i32_i64(local_tid_44394), N_28660),
                           sext_i32_i64(local_tid_44394) -
                           sext_i32_i64(squot32(local_tid_44394, 32) * 32 - 1));
                
                if (inactive_44409) {
                    x_39215 = x_39216;
                }
                if (!inactive_44409) {
                    int64_t defunc_1_op_res_39217 = add64(x_39215, x_39216);
                    
                    x_39215 = defunc_1_op_res_39217;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43301)[sext_i32_i64(local_tid_44394)] =
                    x_39215;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44394, 32) == 0) {
            ((__local int64_t *) mem_43301)[sext_i32_i64(local_tid_44394)] =
                x_39216;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_39227 = ((__local int64_t *) mem_43301)[i_28936];
    int32_t defunc_0_f_res_39228 = sext_i64_i32(last_res_39227);
    __local char *mem_43305;
    
    mem_43305 = (__local char *) mem_43305_backing_2;
    ((__local float *) mem_43305)[sext_i32_i64(local_tid_44394)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43307;
    
    mem_43307 = (__local char *) mem_43307_backing_3;
    ((__local int32_t *) mem_43307)[sext_i32_i64(local_tid_44394)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_39127 = sext_i32_i64(ltid_pre_44398);
    int32_t phys_tid_39128 = local_tid_44394;
    float x_39233 = ((__local float *) mem_43303)[write_i_39127];
    int32_t index_primexp_40563 = sext_i64_i32(write_i_39127);
    bool isnan_res_39236;
    
    isnan_res_39236 = futrts_isnan32(x_39233);
    
    bool defunc_0_p_res_39237 = !isnan_res_39236;
    int64_t defunc_1_f_res_39238;
    
    if (defunc_0_p_res_39237) {
        int64_t x_39234 = ((__local int64_t *) mem_43301)[write_i_39127];
        int64_t defunc_1_f_res_t_res_39239 = sub64(x_39234, (int64_t) 1);
        
        defunc_1_f_res_39238 = defunc_1_f_res_t_res_39239;
    } else {
        defunc_1_f_res_39238 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_39238) && slt64(defunc_1_f_res_39238,
                                                          N_28660)) {
        ((__local int32_t *) mem_43307)[defunc_1_f_res_39238] =
            index_primexp_40563;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_39238) && slt64(defunc_1_f_res_39238,
                                                          N_28660)) {
        ((__local float *) mem_43305)[defunc_1_f_res_39238] = x_39233;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44394 == 0) {
        ((__global int32_t *) mem_43310)[gtid_39122] = defunc_0_f_res_39228;
    }
    ((__global float *) mem_43313)[gtid_39122 * N_28660 +
                                   sext_i32_i64(local_tid_44394)] = ((__local
                                                                      float *) mem_43305)[sext_i32_i64(local_tid_44394)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43316)[gtid_39122 * N_28660 +
                                     sext_i32_i64(local_tid_44394)] = ((__local
                                                                        int32_t *) mem_43307)[sext_i32_i64(local_tid_44394)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39469(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_44518_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_44514_backing_aligned_1,
                                            int64_t N_28660, float hfrac_28666,
                                            int64_t i32_res_28670,
                                            int32_t k2p2_28672, __global
                                            unsigned char *images_mem_42538,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43335,
                                            __global unsigned char *mem_43382,
                                            __global unsigned char *mem_43384,
                                            __global unsigned char *mem_43386)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44518_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44518_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44514_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44514_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44508;
    int32_t local_tid_44509;
    int64_t group_sizze_44512;
    int32_t wave_sizze_44511;
    int32_t group_tid_44510;
    
    global_tid_44508 = get_global_id(0);
    local_tid_44509 = get_local_id(0);
    group_sizze_44512 = get_local_size(0);
    wave_sizze_44511 = LOCKSTEP_WIDTH;
    group_tid_44510 = get_group_id(0);
    
    int32_t phys_tid_39469;
    
    phys_tid_39469 = group_tid_44510;
    
    int32_t ltid_pre_44513;
    
    ltid_pre_44513 = local_tid_44509;
    
    int64_t gtid_39462;
    
    gtid_39462 = sext_i32_i64(group_tid_44510);
    
    int32_t defunc_0_f_res_39546;
    int64_t gtid_39465 = sext_i32_i64(ltid_pre_44513);
    int32_t phys_tid_39466 = local_tid_44509;
    __local char *red_arr_mem_44514;
    
    red_arr_mem_44514 = (__local char *) red_arr_mem_44514_backing_0;
    
    float x_39550;
    
    x_39550 = ((__global float *) images_mem_42538)[gtid_39462 * N_28660 +
                                                    gtid_39465];
    
    bool isnan_res_39551;
    
    isnan_res_39551 = futrts_isnan32(x_39550);
    
    bool cond_39552 = !isnan_res_39551;
    int32_t defunc_0_f_res_39553 = btoi_bool_i32(cond_39552);
    
    ((__local int32_t *) red_arr_mem_44514)[gtid_39465] = defunc_0_f_res_39553;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44516;
    int32_t skip_waves_44517;
    
    skip_waves_44517 = 1;
    
    int32_t x_39547;
    int32_t x_39548;
    
    offset_44516 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44509, sext_i64_i32(i32_res_28670))) {
            x_39547 = ((__local
                        int32_t *) red_arr_mem_44514)[sext_i32_i64(local_tid_44509 +
                                                      offset_44516)];
        }
    }
    offset_44516 = 1;
    while (slt32(offset_44516, wave_sizze_44511)) {
        if (slt32(local_tid_44509 + offset_44516,
                  sext_i64_i32(i32_res_28670)) && ((local_tid_44509 -
                                                    squot32(local_tid_44509,
                                                            wave_sizze_44511) *
                                                    wave_sizze_44511) & (2 *
                                                                         offset_44516 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39548 = ((volatile __local
                            int32_t *) red_arr_mem_44514)[sext_i32_i64(local_tid_44509 +
                                                          offset_44516)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39549 = add32(x_39547, x_39548);
                
                x_39547 = defunc_1_op_res_39549;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44514)[sext_i32_i64(local_tid_44509)] =
                    x_39547;
            }
        }
        offset_44516 *= 2;
    }
    while (slt32(skip_waves_44517, squot32(sext_i64_i32(i32_res_28670) +
                                           wave_sizze_44511 - 1,
                                           wave_sizze_44511))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44516 = skip_waves_44517 * wave_sizze_44511;
        if (slt32(local_tid_44509 + offset_44516,
                  sext_i64_i32(i32_res_28670)) && ((local_tid_44509 -
                                                    squot32(local_tid_44509,
                                                            wave_sizze_44511) *
                                                    wave_sizze_44511) == 0 &&
                                                   (squot32(local_tid_44509,
                                                            wave_sizze_44511) &
                                                    (2 * skip_waves_44517 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39548 = ((__local
                            int32_t *) red_arr_mem_44514)[sext_i32_i64(local_tid_44509 +
                                                          offset_44516)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39549 = add32(x_39547, x_39548);
                
                x_39547 = defunc_1_op_res_39549;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44514)[sext_i32_i64(local_tid_44509)] =
                    x_39547;
            }
        }
        skip_waves_44517 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39546 = ((__local int32_t *) red_arr_mem_44514)[(int64_t) 0];
    
    float defunc_0_f_res_39554;
    int64_t gtid_39467 = sext_i32_i64(ltid_pre_44513);
    int32_t phys_tid_39468 = local_tid_44509;
    __local char *red_arr_mem_44518;
    
    red_arr_mem_44518 = (__local char *) red_arr_mem_44518_backing_1;
    
    int32_t index_primexp_40571;
    
    index_primexp_40571 = sext_i64_i32(gtid_39467);
    
    bool cond_39559 = slt32(index_primexp_40571, defunc_0_f_res_39546);
    float defunc_0_f_res_39560;
    
    if (cond_39559) {
        int64_t i_39561 = sext_i32_i64(index_primexp_40571);
        float defunc_0_f_res_t_res_39562 = ((__global
                                             float *) defunc_4_map_res_mem_43335)[gtid_39462 *
                                                                                  N_28660 +
                                                                                  i_39561];
        
        defunc_0_f_res_39560 = defunc_0_f_res_t_res_39562;
    } else {
        defunc_0_f_res_39560 = 0.0F;
    }
    
    float defunc_0_f_res_39563 = defunc_0_f_res_39560 * defunc_0_f_res_39560;
    
    ((__local float *) red_arr_mem_44518)[gtid_39467] = defunc_0_f_res_39563;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44520;
    int32_t skip_waves_44521;
    
    skip_waves_44521 = 1;
    
    float x_39555;
    float x_39556;
    
    offset_44520 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44509, sext_i64_i32(i32_res_28670))) {
            x_39555 = ((__local
                        float *) red_arr_mem_44518)[sext_i32_i64(local_tid_44509 +
                                                    offset_44520)];
        }
    }
    offset_44520 = 1;
    while (slt32(offset_44520, wave_sizze_44511)) {
        if (slt32(local_tid_44509 + offset_44520,
                  sext_i64_i32(i32_res_28670)) && ((local_tid_44509 -
                                                    squot32(local_tid_44509,
                                                            wave_sizze_44511) *
                                                    wave_sizze_44511) & (2 *
                                                                         offset_44520 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39556 = ((volatile __local
                            float *) red_arr_mem_44518)[sext_i32_i64(local_tid_44509 +
                                                        offset_44520)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39557 = x_39555 + x_39556;
                
                x_39555 = defunc_1_op_res_39557;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44518)[sext_i32_i64(local_tid_44509)] =
                    x_39555;
            }
        }
        offset_44520 *= 2;
    }
    while (slt32(skip_waves_44521, squot32(sext_i64_i32(i32_res_28670) +
                                           wave_sizze_44511 - 1,
                                           wave_sizze_44511))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44520 = skip_waves_44521 * wave_sizze_44511;
        if (slt32(local_tid_44509 + offset_44520,
                  sext_i64_i32(i32_res_28670)) && ((local_tid_44509 -
                                                    squot32(local_tid_44509,
                                                            wave_sizze_44511) *
                                                    wave_sizze_44511) == 0 &&
                                                   (squot32(local_tid_44509,
                                                            wave_sizze_44511) &
                                                    (2 * skip_waves_44521 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39556 = ((__local
                            float *) red_arr_mem_44518)[sext_i32_i64(local_tid_44509 +
                                                        offset_44520)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39557 = x_39555 + x_39556;
                
                x_39555 = defunc_1_op_res_39557;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44518)[sext_i32_i64(local_tid_44509)] =
                    x_39555;
            }
        }
        skip_waves_44521 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39554 = ((__local float *) red_arr_mem_44518)[(int64_t) 0];
    
    int32_t r32_arg_39564 = sub32(defunc_0_f_res_39546, k2p2_28672);
    float i32_res_39565 = sitofp_i32_f32(r32_arg_39564);
    float sqrt_arg_39566 = defunc_0_f_res_39554 / i32_res_39565;
    float sqrt_res_39567;
    
    sqrt_res_39567 = futrts_sqrt32(sqrt_arg_39566);
    
    float i32_res_39568 = sitofp_i32_f32(defunc_0_f_res_39546);
    float t32_arg_39569 = hfrac_28666 * i32_res_39568;
    int32_t f32_res_39570 = fptosi_f32_i32(t32_arg_39569);
    
    if (local_tid_44509 == 0) {
        ((__global int32_t *) mem_43382)[gtid_39462] = f32_res_39570;
    }
    if (local_tid_44509 == 0) {
        ((__global int32_t *) mem_43384)[gtid_39462] = defunc_0_f_res_39546;
    }
    if (local_tid_44509 == 0) {
        ((__global float *) mem_43386)[gtid_39462] = sqrt_res_39567;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_39889(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_44781_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_44779_backing_aligned_1,
                                            __local volatile
                                            int64_t *red_arr_mem_44777_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43445_backing_aligned_3,
                                            int64_t N_28660, int32_t n_28664,
                                            int64_t iota32_arg_29056, __global
                                            unsigned char *defunc_4_map_res_mem_43334,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43335,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43336,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43401,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43402,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43403,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_43436,
                                            __global unsigned char *mem_43441,
                                            __global unsigned char *mem_43448,
                                            __global unsigned char *mem_43450)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44781_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_44781_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44779_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44779_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44777_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44777_backing_aligned_2;
    __local volatile char *restrict mem_43445_backing_0 = (__local volatile
                                                           char *) mem_43445_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44760;
    int32_t local_tid_44761;
    int64_t group_sizze_44764;
    int32_t wave_sizze_44763;
    int32_t group_tid_44762;
    
    global_tid_44760 = get_global_id(0);
    local_tid_44761 = get_local_id(0);
    group_sizze_44764 = get_local_size(0);
    wave_sizze_44763 = LOCKSTEP_WIDTH;
    group_tid_44762 = get_group_id(0);
    
    int32_t phys_tid_39889;
    
    phys_tid_39889 = group_tid_44762;
    
    int32_t ltid_pre_44765;
    
    ltid_pre_44765 = local_tid_44761;
    
    int64_t gtid_39882;
    
    gtid_39882 = sext_i32_i64(group_tid_44762);
    
    int32_t x_40108;
    
    x_40108 = ((__global int32_t *) defunc_4_map_res_mem_43334)[gtid_39882];
    
    int32_t x_40109 = ((__global
                        int32_t *) defunc_3_map_res_mem_43402)[gtid_39882];
    float x_40110 = ((__global float *) defunc_3_map_res_mem_43403)[gtid_39882];
    int32_t x_40111 = ((__global
                        int32_t *) defunc_3_map_res_mem_43401)[gtid_39882];
    float x_40112 = ((__global float *) defunc_0_f_res_mem_43436)[gtid_39882];
    int32_t y_40115 = sub32(x_40108, x_40109);
    float i32_res_40116 = sitofp_i32_f32(x_40109);
    float sqrt_res_40117;
    
    sqrt_res_40117 = futrts_sqrt32(i32_res_40116);
    
    float y_40118 = x_40110 * sqrt_res_40117;
    __local char *mem_43445;
    
    mem_43445 = (__local char *) mem_43445_backing_0;
    
    int64_t gtid_39885 = sext_i32_i64(ltid_pre_44765);
    int32_t phys_tid_39886 = local_tid_44761;
    int32_t index_primexp_40584 = sext_i64_i32(gtid_39885);
    bool cond_40131 = sle32(y_40115, index_primexp_40584);
    float defunc_0_f_res_40132;
    
    if (cond_40131) {
        defunc_0_f_res_40132 = 0.0F;
    } else {
        bool cond_40133 = index_primexp_40584 == 0;
        float defunc_0_f_res_f_res_40134;
        
        if (cond_40133) {
            defunc_0_f_res_f_res_40134 = x_40112;
        } else {
            int32_t i_40135 = add32(x_40109, index_primexp_40584);
            int64_t i_40136 = sext_i32_i64(i_40135);
            float x_40137 = ((__global
                              float *) defunc_4_map_res_mem_43335)[gtid_39882 *
                                                                   N_28660 +
                                                                   i_40136];
            int32_t x_40138 = sub32(x_40109, x_40111);
            int32_t i_40139 = add32(x_40138, index_primexp_40584);
            int64_t i_40140 = sext_i32_i64(i_40139);
            float y_40141 = ((__global
                              float *) defunc_4_map_res_mem_43335)[gtid_39882 *
                                                                   N_28660 +
                                                                   i_40140];
            float defunc_0_f_res_f_res_f_res_40142 = x_40137 - y_40141;
            
            defunc_0_f_res_f_res_40134 = defunc_0_f_res_f_res_f_res_40142;
        }
        defunc_0_f_res_40132 = defunc_0_f_res_f_res_40134;
    }
    ((__local float *) mem_43445)[gtid_39885] = defunc_0_f_res_40132;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44766;
    
    dims_flat_44766 = iota32_arg_29056;
    
    float x_40127;
    float x_40128;
    float x_44768;
    float x_44769;
    bool ltid_in_bounds_44771;
    
    ltid_in_bounds_44771 = slt64(sext_i32_i64(local_tid_44761),
                                 iota32_arg_29056);
    
    int32_t skip_threads_44772;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44771) {
            x_40128 = ((volatile __local
                        float *) mem_43445)[sext_i32_i64(local_tid_44761)];
            if ((local_tid_44761 - squot32(local_tid_44761, 32) * 32) == 0) {
                x_40127 = x_40128;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44772 = 1;
        while (slt32(skip_threads_44772, 32)) {
            if (sle32(skip_threads_44772, local_tid_44761 -
                      squot32(local_tid_44761, 32) * 32) &&
                ltid_in_bounds_44771) {
                // read operands
                {
                    x_40127 = ((volatile __local
                                float *) mem_43445)[sext_i32_i64(local_tid_44761) -
                                                    sext_i32_i64(skip_threads_44772)];
                }
                // perform operation
                {
                    bool inactive_44773 =
                         slt64(srem64(sext_i32_i64(local_tid_44761),
                                      iota32_arg_29056),
                               sext_i32_i64(local_tid_44761) -
                               sext_i32_i64(local_tid_44761 -
                               skip_threads_44772));
                    
                    if (inactive_44773) {
                        x_40127 = x_40128;
                    }
                    if (!inactive_44773) {
                        float defunc_1_op_res_40129 = x_40127 + x_40128;
                        
                        x_40127 = defunc_1_op_res_40129;
                    }
                }
            }
            if (sle32(wave_sizze_44763, skip_threads_44772)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44772, local_tid_44761 -
                      squot32(local_tid_44761, 32) * 32) &&
                ltid_in_bounds_44771) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43445)[sext_i32_i64(local_tid_44761)] =
                        x_40127;
                    x_40128 = x_40127;
                }
            }
            if (sle32(wave_sizze_44763, skip_threads_44772)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44772 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44761 - squot32(local_tid_44761, 32) * 32) == 31 &&
            ltid_in_bounds_44771) {
            ((volatile __local
              float *) mem_43445)[sext_i32_i64(squot32(local_tid_44761, 32))] =
                x_40127;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44774;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44761, 32) == 0 && ltid_in_bounds_44771) {
                x_44769 = ((volatile __local
                            float *) mem_43445)[sext_i32_i64(local_tid_44761)];
                if ((local_tid_44761 - squot32(local_tid_44761, 32) * 32) ==
                    0) {
                    x_44768 = x_44769;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44774 = 1;
            while (slt32(skip_threads_44774, 32)) {
                if (sle32(skip_threads_44774, local_tid_44761 -
                          squot32(local_tid_44761, 32) * 32) &&
                    (squot32(local_tid_44761, 32) == 0 &&
                     ltid_in_bounds_44771)) {
                    // read operands
                    {
                        x_44768 = ((volatile __local
                                    float *) mem_43445)[sext_i32_i64(local_tid_44761) -
                                                        sext_i32_i64(skip_threads_44774)];
                    }
                    // perform operation
                    {
                        bool inactive_44775 =
                             slt64(srem64(sext_i32_i64(local_tid_44761 * 32 +
                                          32 - 1), iota32_arg_29056),
                                   sext_i32_i64(local_tid_44761 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44761 -
                                                 skip_threads_44774) * 32 + 32 -
                                   1));
                        
                        if (inactive_44775) {
                            x_44768 = x_44769;
                        }
                        if (!inactive_44775) {
                            float defunc_1_op_res_44770 = x_44768 + x_44769;
                            
                            x_44768 = defunc_1_op_res_44770;
                        }
                    }
                }
                if (sle32(wave_sizze_44763, skip_threads_44774)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44774, local_tid_44761 -
                          squot32(local_tid_44761, 32) * 32) &&
                    (squot32(local_tid_44761, 32) == 0 &&
                     ltid_in_bounds_44771)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43445)[sext_i32_i64(local_tid_44761)] =
                            x_44768;
                        x_44769 = x_44768;
                    }
                }
                if (sle32(wave_sizze_44763, skip_threads_44774)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44774 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44761, 32) == 0 || !ltid_in_bounds_44771)) {
            // read operands
            {
                x_40128 = x_40127;
                x_40127 = ((__local
                            float *) mem_43445)[sext_i32_i64(squot32(local_tid_44761,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44776 =
                     slt64(srem64(sext_i32_i64(local_tid_44761),
                                  iota32_arg_29056),
                           sext_i32_i64(local_tid_44761) -
                           sext_i32_i64(squot32(local_tid_44761, 32) * 32 - 1));
                
                if (inactive_44776) {
                    x_40127 = x_40128;
                }
                if (!inactive_44776) {
                    float defunc_1_op_res_40129 = x_40127 + x_40128;
                    
                    x_40127 = defunc_1_op_res_40129;
                }
            }
            // write final result
            {
                ((__local float *) mem_43445)[sext_i32_i64(local_tid_44761)] =
                    x_40127;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44761, 32) == 0) {
            ((__local float *) mem_43445)[sext_i32_i64(local_tid_44761)] =
                x_40128;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_40148;
    int32_t acc0_40149;
    float acc0_40150;
    int64_t gtid_39887 = sext_i32_i64(ltid_pre_44765);
    int32_t phys_tid_39888 = local_tid_44761;
    __local char *red_arr_mem_44777;
    
    red_arr_mem_44777 = (__local char *) red_arr_mem_44777_backing_1;
    
    __local char *red_arr_mem_44779;
    
    red_arr_mem_44779 = (__local char *) red_arr_mem_44779_backing_2;
    
    __local char *red_arr_mem_44781;
    
    red_arr_mem_44781 = (__local char *) red_arr_mem_44781_backing_3;
    
    float x_40165;
    
    x_40165 = ((__local float *) mem_43445)[gtid_39887];
    
    float x_40166 = ((__global float *) mem_43441)[gtid_39887];
    int32_t index_primexp_40587 = sext_i64_i32(gtid_39887);
    float defunc_0_f_res_40169 = x_40165 / y_40118;
    bool cond_40170 = slt32(index_primexp_40587, y_40115);
    bool isnan_res_40171;
    
    isnan_res_40171 = futrts_isnan32(defunc_0_f_res_40169);
    
    bool cond_t_res_40172 = !isnan_res_40171;
    bool x_40173 = cond_40170 && cond_t_res_40172;
    float abs_res_40174 = (float) fabs(defunc_0_f_res_40169);
    bool defunc_2_f_res_t_res_40175 = x_40166 < abs_res_40174;
    bool x_40176 = x_40173 && defunc_2_f_res_t_res_40175;
    float defunc_1_f_res_40177;
    
    if (cond_40170) {
        defunc_1_f_res_40177 = defunc_0_f_res_40169;
    } else {
        defunc_1_f_res_40177 = 0.0F;
    }
    ((__local bool *) red_arr_mem_44777)[gtid_39887] = x_40176;
    ((__local int32_t *) red_arr_mem_44779)[gtid_39887] = index_primexp_40587;
    ((__local float *) red_arr_mem_44781)[gtid_39887] = defunc_1_f_res_40177;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44783;
    int32_t skip_waves_44784;
    
    skip_waves_44784 = 1;
    
    bool x_40151;
    int32_t x_40152;
    float x_40153;
    bool x_40154;
    int32_t x_40155;
    float x_40156;
    
    offset_44783 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44761, sext_i64_i32(iota32_arg_29056))) {
            x_40151 = ((__local
                        bool *) red_arr_mem_44777)[sext_i32_i64(local_tid_44761 +
                                                   offset_44783)];
            x_40152 = ((__local
                        int32_t *) red_arr_mem_44779)[sext_i32_i64(local_tid_44761 +
                                                      offset_44783)];
            x_40153 = ((__local
                        float *) red_arr_mem_44781)[sext_i32_i64(local_tid_44761 +
                                                    offset_44783)];
        }
    }
    offset_44783 = 1;
    while (slt32(offset_44783, wave_sizze_44763)) {
        if (slt32(local_tid_44761 + offset_44783,
                  sext_i64_i32(iota32_arg_29056)) && ((local_tid_44761 -
                                                       squot32(local_tid_44761,
                                                               wave_sizze_44763) *
                                                       wave_sizze_44763) & (2 *
                                                                            offset_44783 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_40154 = ((volatile __local
                            bool *) red_arr_mem_44777)[sext_i32_i64(local_tid_44761 +
                                                       offset_44783)];
                x_40155 = ((volatile __local
                            int32_t *) red_arr_mem_44779)[sext_i32_i64(local_tid_44761 +
                                                          offset_44783)];
                x_40156 = ((volatile __local
                            float *) red_arr_mem_44781)[sext_i32_i64(local_tid_44761 +
                                                        offset_44783)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40157;
                int32_t defunc_1_op_res_40158;
                
                if (x_40151) {
                    defunc_1_op_res_40157 = x_40151;
                    defunc_1_op_res_40158 = x_40152;
                } else {
                    bool x_40159 = x_40154 && x_40154;
                    bool x_40160 = !x_40154;
                    bool y_40161 = x_40151 && x_40160;
                    bool defunc_1_op_res_f_res_40162 = x_40159 || y_40161;
                    int32_t defunc_1_op_res_f_res_40163;
                    
                    if (x_40154) {
                        defunc_1_op_res_f_res_40163 = x_40155;
                    } else {
                        defunc_1_op_res_f_res_40163 = x_40152;
                    }
                    defunc_1_op_res_40157 = defunc_1_op_res_f_res_40162;
                    defunc_1_op_res_40158 = defunc_1_op_res_f_res_40163;
                }
                
                float defunc_1_op_res_40164 = x_40153 + x_40156;
                
                x_40151 = defunc_1_op_res_40157;
                x_40152 = defunc_1_op_res_40158;
                x_40153 = defunc_1_op_res_40164;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_44777)[sext_i32_i64(local_tid_44761)] =
                    x_40151;
                ((volatile __local
                  int32_t *) red_arr_mem_44779)[sext_i32_i64(local_tid_44761)] =
                    x_40152;
                ((volatile __local
                  float *) red_arr_mem_44781)[sext_i32_i64(local_tid_44761)] =
                    x_40153;
            }
        }
        offset_44783 *= 2;
    }
    while (slt32(skip_waves_44784, squot32(sext_i64_i32(iota32_arg_29056) +
                                           wave_sizze_44763 - 1,
                                           wave_sizze_44763))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44783 = skip_waves_44784 * wave_sizze_44763;
        if (slt32(local_tid_44761 + offset_44783,
                  sext_i64_i32(iota32_arg_29056)) && ((local_tid_44761 -
                                                       squot32(local_tid_44761,
                                                               wave_sizze_44763) *
                                                       wave_sizze_44763) == 0 &&
                                                      (squot32(local_tid_44761,
                                                               wave_sizze_44763) &
                                                       (2 * skip_waves_44784 -
                                                        1)) == 0)) {
            // read array element
            {
                x_40154 = ((__local
                            bool *) red_arr_mem_44777)[sext_i32_i64(local_tid_44761 +
                                                       offset_44783)];
                x_40155 = ((__local
                            int32_t *) red_arr_mem_44779)[sext_i32_i64(local_tid_44761 +
                                                          offset_44783)];
                x_40156 = ((__local
                            float *) red_arr_mem_44781)[sext_i32_i64(local_tid_44761 +
                                                        offset_44783)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40157;
                int32_t defunc_1_op_res_40158;
                
                if (x_40151) {
                    defunc_1_op_res_40157 = x_40151;
                    defunc_1_op_res_40158 = x_40152;
                } else {
                    bool x_40159 = x_40154 && x_40154;
                    bool x_40160 = !x_40154;
                    bool y_40161 = x_40151 && x_40160;
                    bool defunc_1_op_res_f_res_40162 = x_40159 || y_40161;
                    int32_t defunc_1_op_res_f_res_40163;
                    
                    if (x_40154) {
                        defunc_1_op_res_f_res_40163 = x_40155;
                    } else {
                        defunc_1_op_res_f_res_40163 = x_40152;
                    }
                    defunc_1_op_res_40157 = defunc_1_op_res_f_res_40162;
                    defunc_1_op_res_40158 = defunc_1_op_res_f_res_40163;
                }
                
                float defunc_1_op_res_40164 = x_40153 + x_40156;
                
                x_40151 = defunc_1_op_res_40157;
                x_40152 = defunc_1_op_res_40158;
                x_40153 = defunc_1_op_res_40164;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_44777)[sext_i32_i64(local_tid_44761)] =
                    x_40151;
                ((__local
                  int32_t *) red_arr_mem_44779)[sext_i32_i64(local_tid_44761)] =
                    x_40152;
                ((__local
                  float *) red_arr_mem_44781)[sext_i32_i64(local_tid_44761)] =
                    x_40153;
            }
        }
        skip_waves_44784 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_40148 = ((__local bool *) red_arr_mem_44777)[(int64_t) 0];
    acc0_40149 = ((__local int32_t *) red_arr_mem_44779)[(int64_t) 0];
    acc0_40150 = ((__local float *) red_arr_mem_44781)[(int64_t) 0];
    
    bool x_40180 = acc0_40148 && acc0_40148;
    int32_t defunc_1_op_res_f_res_40184;
    
    if (acc0_40148) {
        defunc_1_op_res_f_res_40184 = acc0_40149;
    } else {
        defunc_1_op_res_f_res_40184 = -1;
    }
    
    bool cond_40190 = y_40115 == 0;
    float defunc_0_f_res_40191;
    
    if (cond_40190) {
        defunc_0_f_res_40191 = 0.0F;
    } else {
        float i32_res_40192 = sitofp_i32_f32(y_40115);
        float defunc_0_f_res_f_res_40193 = acc0_40150 / i32_res_40192;
        
        defunc_0_f_res_40191 = defunc_0_f_res_f_res_40193;
    }
    
    bool cond_40194 = !x_40180;
    int32_t fst_breakzq_40195;
    
    if (cond_40194) {
        fst_breakzq_40195 = -1;
    } else {
        bool cond_40196 = slt32(defunc_1_op_res_f_res_40184, y_40115);
        int32_t adjustValInds_res_40197;
        
        if (cond_40196) {
            int32_t i_40198 = add32(x_40109, defunc_1_op_res_f_res_40184);
            int64_t i_40199 = sext_i32_i64(i_40198);
            int32_t x_40200 = ((__global
                                int32_t *) defunc_4_map_res_mem_43336)[gtid_39882 *
                                                                       N_28660 +
                                                                       i_40199];
            int32_t adjustValInds_res_t_res_40201 = sub32(x_40200, n_28664);
            
            adjustValInds_res_40197 = adjustValInds_res_t_res_40201;
        } else {
            adjustValInds_res_40197 = -1;
        }
        fst_breakzq_40195 = adjustValInds_res_40197;
    }
    
    bool cond_40202 = sle32(x_40109, 5);
    bool cond_f_res_40203 = sle32(y_40115, 5);
    bool x_40204 = !cond_40202;
    bool y_40205 = cond_f_res_40203 && x_40204;
    bool cond_40206 = cond_40202 || y_40205;
    int32_t fst_breakzq_40207;
    
    if (cond_40206) {
        fst_breakzq_40207 = -2;
    } else {
        fst_breakzq_40207 = fst_breakzq_40195;
    }
    if (local_tid_44761 == 0) {
        ((__global int32_t *) mem_43448)[gtid_39882] = fst_breakzq_40207;
    }
    if (local_tid_44761 == 0) {
        ((__global float *) mem_43450)[gtid_39882] = defunc_0_f_res_40191;
    }
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_40730(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42637_backing_aligned_0,
                                            int64_t m_28661, int32_t n_28664,
                                            int64_t i32_res_28676,
                                            int64_t Ty_40718, int64_t Tx_40719,
                                            int64_t gridDim_x_40720,
                                            int64_t gridDim_y_40721,
                                            int64_t group_sizze_tile3d_40725,
                                            int64_t count_shmem_40726, __global
                                            unsigned char *mem_42550, __global
                                            unsigned char *mem_42554, __global
                                            unsigned char *mem_42625, __global
                                            unsigned char *mem_42685)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42637_backing_0 = (__local volatile
                                                           char *) mem_42637_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43878;
    int32_t local_tid_43879;
    int64_t group_sizze_43882;
    int32_t wave_sizze_43881;
    int32_t group_tid_43880;
    
    global_tid_43878 = get_global_id(0);
    local_tid_43879 = get_local_id(0);
    group_sizze_43882 = get_local_size(0);
    wave_sizze_43881 = LOCKSTEP_WIDTH;
    group_tid_43880 = get_group_id(0);
    
    int32_t gid_flat_40730;
    
    gid_flat_40730 = group_tid_43880;
    
    int32_t ltid_pre_43883;
    
    ltid_pre_43883 = squot32(local_tid_43879, sext_i64_i32(Ty_40718) *
                             sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43884;
    
    ltid_pre_43884 = squot32(local_tid_43879 - squot32(local_tid_43879,
                                                       sext_i64_i32(Ty_40718) *
                                                       sext_i64_i32(Tx_40719)) *
                             (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)),
                             sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43885;
    
    ltid_pre_43885 = local_tid_43879 - squot32(local_tid_43879,
                                               sext_i64_i32(Ty_40718) *
                                               sext_i64_i32(Tx_40719)) *
        (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)) -
        squot32(local_tid_43879 - squot32(local_tid_43879,
                                          sext_i64_i32(Ty_40718) *
                                          sext_i64_i32(Tx_40719)) *
                (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)),
                sext_i64_i32(Tx_40719)) * sext_i64_i32(Tx_40719);
    
    int32_t ltid_pre_43886;
    
    ltid_pre_43886 = squot32(local_tid_43879, sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43887;
    
    ltid_pre_43887 = local_tid_43879 - squot32(local_tid_43879,
                                               sext_i64_i32(Tx_40719)) *
        sext_i64_i32(Tx_40719);
    
    int32_t ltid_pre_43888;
    
    ltid_pre_43888 = local_tid_43879;
    
    int64_t gid_zz_40729;
    
    gid_zz_40729 = squot64(sext_i32_i64(group_tid_43880), gridDim_y_40721 *
                           gridDim_x_40720);
    
    int64_t gid_y_40728;
    
    gid_y_40728 = squot64(sext_i32_i64(group_tid_43880) -
                          squot64(sext_i32_i64(group_tid_43880),
                                  gridDim_y_40721 * gridDim_x_40720) *
                          (gridDim_y_40721 * gridDim_x_40720), gridDim_x_40720);
    
    int64_t gid_x_40727;
    
    gid_x_40727 = sext_i32_i64(group_tid_43880) -
        squot64(sext_i32_i64(group_tid_43880), gridDim_y_40721 *
                gridDim_x_40720) * (gridDim_y_40721 * gridDim_x_40720) -
        squot64(sext_i32_i64(group_tid_43880) -
                squot64(sext_i32_i64(group_tid_43880), gridDim_y_40721 *
                        gridDim_x_40720) * (gridDim_y_40721 * gridDim_x_40720),
                gridDim_x_40720) * gridDim_x_40720;
    
    int64_t ii_40731;
    
    ii_40731 = (int64_t) 30 * gid_zz_40729;
    
    int64_t jj1_40732 = Ty_40718 * gid_y_40728;
    int64_t jj2_40733 = Tx_40719 * gid_x_40727;
    float mem_42635[30];
    int64_t ltid_y_40736 = sext_i32_i64(ltid_pre_43886);
    int64_t ltid_x_40734 = sext_i32_i64(ltid_pre_43887);
    int32_t ltid_flat_40735 = local_tid_43879;
    float mem_42629[30];
    
    for (int32_t i_42427 = 0; i_42427 < 30; i_42427++) {
        int64_t i_40744 = sext_i32_i64(i_42427);
        
        mem_42629[i_40744] = 0.0F;
    }
    for (int64_t i_43890 = 0; i_43890 < (int64_t) 30; i_43890++) {
        mem_42635[i_43890] = mem_42629[i_43890];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42637;
    
    mem_42637 = (__local char *) mem_42637_backing_0;
    
    float loop_mem_42667[30];
    float mem_param_42638[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42638[i_1] = mem_42635[i_1];
    for (int32_t i_42429 = 0; i_42429 < n_28664; i_42429++) {
        int64_t i_40749 = sext_i32_i64(i_42429);
        
        for (int64_t i_40752 = 0; i_40752 < count_shmem_40726; i_40752++) {
            int64_t offs_40765 = group_sizze_tile3d_40725 * i_40752;
            int64_t ltid_40755 = sext_i32_i64(ltid_pre_43888);
            int32_t ltid_flat_40754 = local_tid_43879;
            int64_t loc_ind_40766 = ltid_40755 + offs_40765;
            int64_t gtid_40767 = ii_40731 + loc_ind_40766;
            bool cond_40768 = slt64(gtid_40767, m_28661);
            float y_elem_40769;
            
            if (cond_40768) {
                float Y_elem_40771 = ((__global float *) mem_42625)[i_40749 *
                                                                    m_28661 +
                                                                    gtid_40767];
                
                y_elem_40769 = Y_elem_40771;
            } else {
                y_elem_40769 = 0.0F;
            }
            
            bool cond_40773 = slt64(loc_ind_40766, (int64_t) 30);
            int64_t y_loc_ind_40774;
            
            if (cond_40773) {
                y_loc_ind_40774 = loc_ind_40766;
            } else {
                y_loc_ind_40774 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_40774) && slt64(y_loc_ind_40774,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42637)[y_loc_ind_40774] = y_elem_40769;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42666[30];
        int64_t ltid_y_40780 = sext_i32_i64(ltid_pre_43886);
        int64_t ltid_x_40778 = sext_i32_i64(ltid_pre_43887);
        int32_t ltid_flat_40779 = local_tid_43879;
        int64_t gtid_40807 = jj1_40732 + ltid_y_40780;
        int64_t gtid_40808 = jj2_40733 + ltid_x_40778;
        bool binop_x_40810 = slt64(gtid_40807, i32_res_28676);
        bool binop_y_40811 = slt64(gtid_40808, i32_res_28676);
        bool cond_40812 = binop_x_40810 && binop_y_40811;
        float mem_43607[30];
        
        if (cond_40812) {
            float x_40815 = ((__global float *) mem_42550)[i_40749 *
                                                           i32_res_28676 +
                                                           gtid_40807];
            float x_40817 = ((__global float *) mem_42554)[i_40749 *
                                                           i32_res_28676 +
                                                           gtid_40808];
            
            for (int32_t i_42428 = 0; i_42428 < 30; i_42428++) {
                int64_t i_40819 = sext_i32_i64(i_42428);
                int64_t gtid_40821 = ii_40731 + i_40819;
                bool cond_40822 = slt64(gtid_40821, m_28661);
                
                if (cond_40822) {
                    float inp_reg_var2zz_40824 = ((__local
                                                   float *) mem_42637)[i_40819];
                    float res_reg_var2zz_40825 = mem_param_42638[i_40819];
                    float x_40829 = x_40815 * x_40817;
                    bool isnan_res_40830;
                    
                    isnan_res_40830 = futrts_isnan32(inp_reg_var2zz_40824);
                    
                    float y_40831;
                    
                    if (isnan_res_40830) {
                        y_40831 = 0.0F;
                    } else {
                        y_40831 = 1.0F;
                    }
                    
                    float defunc_2_f_res_40832 = x_40829 * y_40831;
                    float defunc_1_op_res_40836 = res_reg_var2zz_40825 +
                          defunc_2_f_res_40832;
                    
                    mem_param_42638[i_40819] = defunc_1_op_res_40836;
                }
            }
            for (int64_t i_43896 = 0; i_43896 < (int64_t) 30; i_43896++) {
                mem_43607[i_43896] = mem_param_42638[i_43896];
            }
        } else {
            for (int64_t i_43897 = 0; i_43897 < (int64_t) 30; i_43897++) {
                mem_43607[i_43897] = mem_param_42638[i_43897];
            }
        }
        for (int64_t i_43898 = 0; i_43898 < (int64_t) 30; i_43898++) {
            mem_42666[i_43898] = mem_43607[i_43898];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_43891[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_43891[i_2] = mem_42666[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42638[i_3] = mem_param_tmp_43891[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42667[i_4] = mem_param_42638[i_4];
    
    float mem_42681[30 * 1 * 1];
    int64_t ltid_zz_40845 = sext_i32_i64(ltid_pre_43883);
    int64_t ltid_y_40844 = sext_i32_i64(ltid_pre_43884);
    int64_t ltid_x_40842 = sext_i32_i64(ltid_pre_43885);
    int32_t ltid_flat_40843 = local_tid_43879;
    float mem_42675[30 * 1 * 1];
    
    for (int32_t i_42431 = 0; i_42431 < 30; i_42431++) {
        int64_t i_40854 = sext_i32_i64(i_42431);
        
        for (int64_t i_43900 = 0; i_43900 < (int64_t) 1; i_43900++) {
            mem_42675[i_40854 + i_43900] = loop_mem_42667[i_40854 + i_43900];
        }
    }
    for (int64_t i_43901 = 0; i_43901 < (int64_t) 30; i_43901++) {
        for (int64_t i_43902 = 0; i_43902 < (int64_t) 1; i_43902++) {
            for (int64_t i_43903 = 0; i_43903 < (int64_t) 1; i_43903++) {
                mem_42681[i_43901 + i_43902 + i_43903] = mem_42675[i_43901 +
                                                                   i_43902 +
                                                                   i_43903];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_43904 = squot64(sext_i32_i64(local_tid_43879), Ty_40718 *
                                       Tx_40719);
    int64_t reg_tile_i_43905 = squot64(sext_i32_i64(local_tid_43879) -
                                       squot64(sext_i32_i64(local_tid_43879),
                                               Ty_40718 * Tx_40719) *
                                       (Ty_40718 * Tx_40719), Tx_40719);
    int64_t reg_tile_i_43906 = sext_i32_i64(local_tid_43879) -
            squot64(sext_i32_i64(local_tid_43879), Ty_40718 * Tx_40719) *
            (Ty_40718 * Tx_40719) - squot64(sext_i32_i64(local_tid_43879) -
                                            squot64(sext_i32_i64(local_tid_43879),
                                                    Ty_40718 * Tx_40719) *
                                            (Ty_40718 * Tx_40719), Tx_40719) *
            Tx_40719;
    int64_t tile_dim_start_43907 = (int64_t) 30 * (gid_zz_40729 +
                                                   reg_tile_i_43904);
    int64_t tile_dim_start_43908 = Ty_40718 * gid_y_40728 + reg_tile_i_43905;
    int64_t tile_dim_start_43909 = Tx_40719 * gid_x_40727 + reg_tile_i_43906;
    
    for (int64_t nest_i_43910 = 0; nest_i_43910 < (int64_t) 30;
         nest_i_43910++) {
        for (int64_t nest_i_43911 = 0; nest_i_43911 < (int64_t) 1;
             nest_i_43911++) {
            for (int64_t nest_i_43912 = 0; nest_i_43912 < (int64_t) 1;
                 nest_i_43912++) {
                if ((slt64(tile_dim_start_43907 + nest_i_43910, m_28661) &&
                     slt64(tile_dim_start_43908 + nest_i_43911,
                           i32_res_28676)) && slt64(tile_dim_start_43909 +
                                                    nest_i_43912,
                                                    i32_res_28676)) {
                    ((__global float *) mem_42685)[(tile_dim_start_43907 +
                                                    nest_i_43910) *
                                                   (i32_res_28676 *
                                                    i32_res_28676) +
                                                   (tile_dim_start_43908 +
                                                    nest_i_43911) *
                                                   i32_res_28676 +
                                                   (tile_dim_start_43909 +
                                                    nest_i_43912)] =
                        mem_42681[nest_i_43910 + nest_i_43911 + nest_i_43912];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_40883(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42825_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_42823_backing_aligned_1,
                                            int64_t N_28660, int64_t m_28661,
                                            int64_t i32_res_28670,
                                            int64_t i32_res_28676,
                                            int64_t gridDim_x_40877,
                                            int64_t full_tiles_40908,
                                            int64_t kk_41115, __global
                                            unsigned char *images_mem_42538,
                                            __global unsigned char *mem_42550,
                                            __global unsigned char *mem_42997)
{
    #define Ty_40864 (mainziTy_40861)
    #define Ry_40865 (mainziRy_40863)
    #define Tx_40866 (mainziTx_40860)
    #define Rx_40867 (mainziRx_40862)
    #define Tk_40868 (mainziTk_40859)
    #define tk_div_tx_40869 (sdiv_up64(mainziTk_40859, mainziTx_40860))
    #define tk_div_ty_40870 (sdiv_up64(mainziTk_40859, mainziTy_40861))
    #define TxRx_40871 (mainziTx_40860 * mainziRx_40862)
    #define TyRy_40872 (mainziTy_40861 * mainziRy_40863)
    #define a_loc_szz_40874 (mainziTk_40859 * (mainziTy_40861 * mainziRy_40863))
    #define b_loc_szz_40876 (mainziRx_40862 * (mainziTx_40860 * mainziTk_40859))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42825_backing_1 = (__local volatile
                                                           char *) mem_42825_backing_aligned_0;
    __local volatile char *restrict mem_42823_backing_0 = (__local volatile
                                                           char *) mem_42823_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44053;
    int32_t local_tid_44054;
    int64_t group_sizze_44057;
    int32_t wave_sizze_44056;
    int32_t group_tid_44055;
    
    global_tid_44053 = get_global_id(0);
    local_tid_44054 = get_local_id(0);
    group_sizze_44057 = get_local_size(0);
    wave_sizze_44056 = LOCKSTEP_WIDTH;
    group_tid_44055 = get_group_id(0);
    
    int32_t gid_flat_40883;
    
    gid_flat_40883 = group_tid_44055;
    
    int32_t ltid_pre_44058;
    
    ltid_pre_44058 = squot32(local_tid_44054, sext_i64_i32(Tx_40866));
    
    int32_t ltid_pre_44059;
    
    ltid_pre_44059 = local_tid_44054 - squot32(local_tid_44054,
                                               sext_i64_i32(Tx_40866)) *
        sext_i64_i32(Tx_40866);
    
    int64_t gid_y_40882;
    
    gid_y_40882 = squot64(sext_i32_i64(group_tid_44055), gridDim_x_40877);
    
    int64_t gid_x_40881;
    
    gid_x_40881 = sext_i32_i64(group_tid_44055) -
        squot64(sext_i32_i64(group_tid_44055), gridDim_x_40877) *
        gridDim_x_40877;
    
    int64_t iii_40884;
    
    iii_40884 = TyRy_40872 * gid_y_40882;
    
    int64_t jjj_40885 = TxRx_40871 * gid_x_40881;
    float mem_42821[Ry_40865 * Rx_40867];
    int64_t ltid_y_40888 = sext_i32_i64(ltid_pre_44058);
    int64_t ltid_x_40886 = sext_i32_i64(ltid_pre_44059);
    int32_t ltid_flat_40887 = local_tid_44054;
    float mem_42812[Ry_40865 * Rx_40867];
    
    for (int64_t i_40899 = 0; i_40899 < Ry_40865; i_40899++) {
        for (int64_t i_40902 = 0; i_40902 < Rx_40867; i_40902++) {
            mem_42812[i_40899 * Rx_40867 + i_40902] = 0.0F;
        }
    }
    for (int64_t i_44062 = 0; i_44062 < Ry_40865; i_44062++) {
        for (int64_t i_44063 = 0; i_44063 < Rx_40867; i_44063++) {
            mem_42821[i_44062 * Rx_40867 + i_44063] = mem_42812[i_44062 *
                                                                Rx_40867 +
                                                                i_44063];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42823;
    
    mem_42823 = (__local char *) mem_42823_backing_0;
    
    __local char *mem_42825;
    
    mem_42825 = (__local char *) mem_42825_backing_1;
    
    float mem_42896[Ry_40865];
    float mem_42900[Rx_40867];
    float loop_mem_42912[Ry_40865 * Rx_40867];
    float mem_param_42826[Ry_40865 * Rx_40867];
    
    for (int32_t i_2 = 0; i_2 < Ry_40865 * Rx_40867; i_2++)
        mem_param_42826[i_2] = mem_42821[i_2];
    for (int64_t i_40909 = 0; i_40909 < full_tiles_40908; i_40909++) {
        int64_t kk_40913 = Tk_40868 * i_40909;
        
        for (int64_t i_40914 = 0; i_40914 < Ry_40865; i_40914++) {
            int64_t binop_y_40937 = Ty_40864 * i_40914;
            
            for (int64_t i_40916 = 0; i_40916 < tk_div_tx_40869; i_40916++) {
                int64_t binop_y_40935 = Tx_40866 * i_40916;
                int64_t ltid_x_40918 = sext_i32_i64(ltid_pre_44058);
                int64_t ltid_y_40919 = sext_i32_i64(ltid_pre_44059);
                int32_t ltid_flat_40920 = local_tid_44054;
                int64_t k_40936 = ltid_y_40919 + binop_y_40935;
                int64_t i_40938 = ltid_x_40918 + binop_y_40937;
                int64_t gtid_40939 = iii_40884 + i_40938;
                int64_t A_col_idx_40940 = kk_40913 + k_40936;
                bool cond_40941 = slt64(gtid_40939, m_28661);
                float A_elem_40942;
                
                if (cond_40941) {
                    float A_elem_40944 = ((__global
                                           float *) images_mem_42538)[gtid_40939 *
                                                                      N_28660 +
                                                                      A_col_idx_40940];
                    
                    A_elem_40942 = A_elem_40944;
                } else {
                    A_elem_40942 = 0.0F;
                }
                
                bool cond_40946 = slt64(k_40936, Tk_40868);
                int64_t a_loc_ind_40947;
                
                if (cond_40946) {
                    int64_t binop_y_40948 = Tk_40868 * i_40938;
                    int64_t loc_fi_40949 = k_40936 + binop_y_40948;
                    
                    a_loc_ind_40947 = loc_fi_40949;
                } else {
                    a_loc_ind_40947 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_40947) &&
                    slt64(a_loc_ind_40947, a_loc_szz_40874)) {
                    ((__local float *) mem_42823)[a_loc_ind_40947] =
                        A_elem_40942;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_40954 = 0; i_40954 < tk_div_ty_40870; i_40954++) {
            int64_t binop_y_40975 = Ty_40864 * i_40954;
            
            for (int64_t i_40956 = 0; i_40956 < Rx_40867; i_40956++) {
                int64_t binop_y_40977 = Tx_40866 * i_40956;
                int64_t ltid_x_40958 = sext_i32_i64(ltid_pre_44058);
                int64_t ltid_y_40959 = sext_i32_i64(ltid_pre_44059);
                int32_t ltid_flat_40960 = local_tid_44054;
                int64_t k_40976 = ltid_x_40958 + binop_y_40975;
                int64_t j_40978 = ltid_y_40959 + binop_y_40977;
                int64_t gtid_40979 = jjj_40885 + j_40978;
                int64_t B_row_idx_40980 = kk_40913 + k_40976;
                bool cond_40981 = slt64(gtid_40979, i32_res_28676);
                float B_elem_40982;
                
                if (cond_40981) {
                    float B_elem_40984 = ((__global
                                           float *) mem_42550)[B_row_idx_40980 *
                                                               i32_res_28676 +
                                                               gtid_40979];
                    
                    B_elem_40982 = B_elem_40984;
                } else {
                    B_elem_40982 = 0.0F;
                }
                
                bool cond_40986 = slt64(k_40976, Tk_40868);
                int64_t b_loc_ind_40987;
                
                if (cond_40986) {
                    int64_t binop_y_40988 = TxRx_40871 * k_40976;
                    int64_t loc_fi_40989 = j_40978 + binop_y_40988;
                    
                    b_loc_ind_40987 = loc_fi_40989;
                } else {
                    b_loc_ind_40987 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_40987) &&
                    slt64(b_loc_ind_40987, b_loc_szz_40876)) {
                    ((__local float *) mem_42825)[b_loc_ind_40987] =
                        B_elem_40982;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_42911[Ry_40865 * Rx_40867];
        float mem_param_42883[Ry_40865 * Rx_40867];
        
        for (int32_t i_3 = 0; i_3 < Ry_40865 * Rx_40867; i_3++)
            mem_param_42883[i_3] = mem_param_42826[i_3];
        for (int64_t i_40994 = 0; i_40994 < Tk_40868; i_40994++) {
            int64_t binop_y_41033 = TxRx_40871 * i_40994;
            int64_t ltid_y_40998 = sext_i32_i64(ltid_pre_44058);
            int64_t ltid_x_40996 = sext_i32_i64(ltid_pre_44059);
            int32_t ltid_flat_40997 = local_tid_44054;
            float mem_42886[Ry_40865];
            float mem_42888[Rx_40867];
            int64_t binop_x_41024 = Ry_40865 * ltid_y_40998;
            
            for (int64_t i_41022 = 0; i_41022 < Ry_40865; i_41022++) {
                int64_t binop_x_41025 = i_41022 + binop_x_41024;
                int64_t binop_y_41026 = Tk_40868 * binop_x_41025;
                int64_t a_loc_ind_41027 = i_40994 + binop_y_41026;
                
                for (int64_t i_44075 = 0; i_44075 < (int64_t) 1; i_44075++) {
                    mem_42886[i_41022 + i_44075] = ((__local
                                                     float *) mem_42823)[a_loc_ind_41027 +
                                                                         i_44075];
                }
            }
            
            int64_t binop_y_41035 = Rx_40867 * ltid_x_40996;
            
            for (int64_t i_41031 = 0; i_41031 < Rx_40867; i_41031++) {
                int64_t binop_x_41034 = i_41031 + binop_y_41033;
                int64_t b_loc_ind_41036 = binop_x_41034 + binop_y_41035;
                
                for (int64_t i_44077 = 0; i_44077 < (int64_t) 1; i_44077++) {
                    mem_42888[i_41031 + i_44077] = ((__local
                                                     float *) mem_42825)[b_loc_ind_41036 +
                                                                         i_44077];
                }
            }
            for (int64_t i_44078 = 0; i_44078 < Ry_40865; i_44078++) {
                mem_42896[i_44078] = mem_42886[i_44078];
            }
            for (int64_t i_44079 = 0; i_44079 < Rx_40867; i_44079++) {
                mem_42900[i_44079] = mem_42888[i_44079];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_42910[Ry_40865 * Rx_40867];
            int64_t ltid_y_41043 = sext_i32_i64(ltid_pre_44058);
            int64_t ltid_x_41041 = sext_i32_i64(ltid_pre_44059);
            int32_t ltid_flat_41042 = local_tid_44054;
            int64_t binop_y_41086 = Ry_40865 * ltid_y_41043;
            int64_t binop_y_41090 = Rx_40867 * ltid_x_41041;
            
            for (int64_t i_41080 = 0; i_41080 < Ry_40865; i_41080++) {
                int64_t binop_x_41085 = iii_40884 + i_41080;
                int64_t cmpop_x_41087 = binop_x_41085 + binop_y_41086;
                bool binop_x_41088 = slt64(cmpop_x_41087, m_28661);
                
                for (int64_t i_41083 = 0; i_41083 < Rx_40867; i_41083++) {
                    int64_t binop_x_41089 = jjj_40885 + i_41083;
                    int64_t cmpop_x_41091 = binop_x_41089 + binop_y_41090;
                    bool binop_y_41092 = slt64(cmpop_x_41091, i32_res_28676);
                    bool cond_41093 = binop_x_41088 && binop_y_41092;
                    
                    if (cond_41093) {
                        float a_41095 = mem_42896[i_41080];
                        float c_41097 = mem_param_42883[i_41080 * Rx_40867 +
                                                        i_41083];
                        bool isnan_res_41100;
                        
                        isnan_res_41100 = futrts_isnan32(a_41095);
                        
                        float defunc_1_f_res_41101;
                        
                        if (isnan_res_41100) {
                            defunc_1_f_res_41101 = 0.0F;
                        } else {
                            float b_41096 = mem_42900[i_41083];
                            float defunc_1_f_res_f_res_41102 = a_41095 *
                                  b_41096;
                            
                            defunc_1_f_res_41101 = defunc_1_f_res_f_res_41102;
                        }
                        
                        float defunc_1_op_res_41106 = c_41097 +
                              defunc_1_f_res_41101;
                        
                        mem_param_42883[i_41080 * Rx_40867 + i_41083] =
                            defunc_1_op_res_41106;
                    }
                }
            }
            for (int64_t i_44082 = 0; i_44082 < Ry_40865; i_44082++) {
                for (int64_t i_44083 = 0; i_44083 < Rx_40867; i_44083++) {
                    mem_42910[i_44082 * Rx_40867 + i_44083] =
                        mem_param_42883[i_44082 * Rx_40867 + i_44083];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44072[Ry_40865 * Rx_40867];
            
            for (int32_t i_4 = 0; i_4 < Ry_40865 * Rx_40867; i_4++)
                mem_param_tmp_44072[i_4] = mem_42910[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_40865 * Rx_40867; i_5++)
                mem_param_42883[i_5] = mem_param_tmp_44072[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_40865 * Rx_40867; i_6++)
            loop_mem_42911[i_6] = mem_param_42883[i_6];
        
        float mem_param_tmp_44064[Ry_40865 * Rx_40867];
        
        for (int32_t i_7 = 0; i_7 < Ry_40865 * Rx_40867; i_7++)
            mem_param_tmp_44064[i_7] = loop_mem_42911[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_40865 * Rx_40867; i_8++)
            mem_param_42826[i_8] = mem_param_tmp_44064[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_40865 * Rx_40867; i_9++)
        loop_mem_42912[i_9] = mem_param_42826[i_9];
    for (int64_t i_41116 = 0; i_41116 < Ry_40865; i_41116++) {
        int64_t binop_y_41141 = Ty_40864 * i_41116;
        
        for (int64_t i_41118 = 0; i_41118 < tk_div_tx_40869; i_41118++) {
            int64_t binop_y_41139 = Tx_40866 * i_41118;
            int64_t ltid_x_41120 = sext_i32_i64(ltid_pre_44058);
            int64_t ltid_y_41121 = sext_i32_i64(ltid_pre_44059);
            int32_t ltid_flat_41122 = local_tid_44054;
            int64_t k_41140 = ltid_y_41121 + binop_y_41139;
            int64_t i_41142 = ltid_x_41120 + binop_y_41141;
            int64_t gtid_41143 = iii_40884 + i_41142;
            int64_t A_col_idx_41144 = kk_41115 + k_41140;
            bool binop_x_41145 = slt64(gtid_41143, m_28661);
            bool binop_y_41146 = slt64(A_col_idx_41144, i32_res_28670);
            bool cond_41147 = binop_x_41145 && binop_y_41146;
            float A_elem_41148;
            
            if (cond_41147) {
                float A_elem_41150 = ((__global
                                       float *) images_mem_42538)[gtid_41143 *
                                                                  N_28660 +
                                                                  A_col_idx_41144];
                
                A_elem_41148 = A_elem_41150;
            } else {
                A_elem_41148 = 0.0F;
            }
            
            bool cond_41152 = slt64(k_41140, Tk_40868);
            int64_t a_loc_ind_41153;
            
            if (cond_41152) {
                int64_t binop_y_41154 = Tk_40868 * i_41142;
                int64_t loc_fi_41155 = k_41140 + binop_y_41154;
                
                a_loc_ind_41153 = loc_fi_41155;
            } else {
                a_loc_ind_41153 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41153) && slt64(a_loc_ind_41153,
                                                             a_loc_szz_40874)) {
                ((__local float *) mem_42823)[a_loc_ind_41153] = A_elem_41148;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41160 = 0; i_41160 < tk_div_ty_40870; i_41160++) {
        int64_t binop_y_41183 = Ty_40864 * i_41160;
        
        for (int64_t i_41162 = 0; i_41162 < Rx_40867; i_41162++) {
            int64_t binop_y_41185 = Tx_40866 * i_41162;
            int64_t ltid_x_41164 = sext_i32_i64(ltid_pre_44058);
            int64_t ltid_y_41165 = sext_i32_i64(ltid_pre_44059);
            int32_t ltid_flat_41166 = local_tid_44054;
            int64_t k_41184 = ltid_x_41164 + binop_y_41183;
            int64_t j_41186 = ltid_y_41165 + binop_y_41185;
            int64_t gtid_41187 = jjj_40885 + j_41186;
            int64_t B_row_idx_41188 = kk_41115 + k_41184;
            bool binop_x_41189 = slt64(gtid_41187, i32_res_28676);
            bool binop_y_41190 = slt64(B_row_idx_41188, i32_res_28670);
            bool cond_41191 = binop_x_41189 && binop_y_41190;
            float B_elem_41192;
            
            if (cond_41191) {
                float B_elem_41194 = ((__global
                                       float *) mem_42550)[B_row_idx_41188 *
                                                           i32_res_28676 +
                                                           gtid_41187];
                
                B_elem_41192 = B_elem_41194;
            } else {
                B_elem_41192 = 0.0F;
            }
            
            bool cond_41196 = slt64(k_41184, Tk_40868);
            int64_t b_loc_ind_41197;
            
            if (cond_41196) {
                int64_t binop_y_41198 = TxRx_40871 * k_41184;
                int64_t loc_fi_41199 = j_41186 + binop_y_41198;
                
                b_loc_ind_41197 = loc_fi_41199;
            } else {
                b_loc_ind_41197 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41197) && slt64(b_loc_ind_41197,
                                                             b_loc_szz_40876)) {
                ((__local float *) mem_42825)[b_loc_ind_41197] = B_elem_41192;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_42978[Ry_40865];
    float mem_42982[Rx_40867];
    float mem_42992[Ry_40865 * Rx_40867];
    float loop_mem_42994[Ry_40865 * Rx_40867];
    float mem_param_42965[Ry_40865 * Rx_40867];
    
    for (int32_t i_10 = 0; i_10 < Ry_40865 * Rx_40867; i_10++)
        mem_param_42965[i_10] = loop_mem_42912[i_10];
    for (int64_t i_41204 = 0; i_41204 < Tk_40868; i_41204++) {
        int64_t cmpop_x_41206 = kk_41115 + i_41204;
        bool cond_41207 = slt64(cmpop_x_41206, i32_res_28670);
        float mem_43625[Ry_40865 * Rx_40867];
        
        if (cond_41207) {
            int64_t binop_y_41245 = TxRx_40871 * i_41204;
            int64_t bytes_42967 = (int64_t) 4 * Ry_40865;
            int64_t bytes_42969 = (int64_t) 4 * Rx_40867;
            int64_t ltid_y_41210 = sext_i32_i64(ltid_pre_44058);
            int64_t ltid_x_41208 = sext_i32_i64(ltid_pre_44059);
            int32_t ltid_flat_41209 = local_tid_44054;
            float mem_42968[Ry_40865];
            float mem_42970[Rx_40867];
            int64_t binop_x_41236 = Ry_40865 * ltid_y_41210;
            
            for (int64_t i_41234 = 0; i_41234 < Ry_40865; i_41234++) {
                int64_t binop_x_41237 = i_41234 + binop_x_41236;
                int64_t binop_y_41238 = Tk_40868 * binop_x_41237;
                int64_t a_loc_ind_41239 = i_41204 + binop_y_41238;
                
                for (int64_t i_44091 = 0; i_44091 < (int64_t) 1; i_44091++) {
                    mem_42968[i_41234 + i_44091] = ((__local
                                                     float *) mem_42823)[a_loc_ind_41239 +
                                                                         i_44091];
                }
            }
            
            int64_t binop_y_41247 = Rx_40867 * ltid_x_41208;
            
            for (int64_t i_41243 = 0; i_41243 < Rx_40867; i_41243++) {
                int64_t binop_x_41246 = i_41243 + binop_y_41245;
                int64_t b_loc_ind_41248 = binop_x_41246 + binop_y_41247;
                
                for (int64_t i_44093 = 0; i_44093 < (int64_t) 1; i_44093++) {
                    mem_42970[i_41243 + i_44093] = ((__local
                                                     float *) mem_42825)[b_loc_ind_41248 +
                                                                         i_44093];
                }
            }
            for (int64_t i_44094 = 0; i_44094 < Ry_40865; i_44094++) {
                mem_42978[i_44094] = mem_42968[i_44094];
            }
            for (int64_t i_44095 = 0; i_44095 < Rx_40867; i_44095++) {
                mem_42982[i_44095] = mem_42970[i_44095];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41255 = sext_i32_i64(ltid_pre_44058);
            int64_t ltid_x_41253 = sext_i32_i64(ltid_pre_44059);
            int32_t ltid_flat_41254 = local_tid_44054;
            int64_t binop_y_41298 = Ry_40865 * ltid_y_41255;
            int64_t binop_y_41302 = Rx_40867 * ltid_x_41253;
            
            for (int64_t i_41292 = 0; i_41292 < Ry_40865; i_41292++) {
                int64_t binop_x_41297 = iii_40884 + i_41292;
                int64_t cmpop_x_41299 = binop_x_41297 + binop_y_41298;
                bool binop_x_41300 = slt64(cmpop_x_41299, m_28661);
                
                for (int64_t i_41295 = 0; i_41295 < Rx_40867; i_41295++) {
                    int64_t binop_x_41301 = jjj_40885 + i_41295;
                    int64_t cmpop_x_41303 = binop_x_41301 + binop_y_41302;
                    bool binop_y_41304 = slt64(cmpop_x_41303, i32_res_28676);
                    bool cond_41305 = binop_x_41300 && binop_y_41304;
                    
                    if (cond_41305) {
                        float a_41307 = mem_42978[i_41292];
                        float c_41309 = mem_param_42965[i_41292 * Rx_40867 +
                                                        i_41295];
                        bool isnan_res_41312;
                        
                        isnan_res_41312 = futrts_isnan32(a_41307);
                        
                        float defunc_1_f_res_41313;
                        
                        if (isnan_res_41312) {
                            defunc_1_f_res_41313 = 0.0F;
                        } else {
                            float b_41308 = mem_42982[i_41295];
                            float defunc_1_f_res_f_res_41314 = a_41307 *
                                  b_41308;
                            
                            defunc_1_f_res_41313 = defunc_1_f_res_f_res_41314;
                        }
                        
                        float defunc_1_op_res_41318 = c_41309 +
                              defunc_1_f_res_41313;
                        
                        mem_param_42965[i_41292 * Rx_40867 + i_41295] =
                            defunc_1_op_res_41318;
                    }
                }
            }
            for (int64_t i_44098 = 0; i_44098 < Ry_40865; i_44098++) {
                for (int64_t i_44099 = 0; i_44099 < Rx_40867; i_44099++) {
                    mem_42992[i_44098 * Rx_40867 + i_44099] =
                        mem_param_42965[i_44098 * Rx_40867 + i_44099];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44100 = 0; i_44100 < Ry_40865; i_44100++) {
                for (int64_t i_44101 = 0; i_44101 < Rx_40867; i_44101++) {
                    mem_43625[i_44100 * Rx_40867 + i_44101] =
                        mem_42992[i_44100 * Rx_40867 + i_44101];
                }
            }
        } else {
            for (int64_t i_44102 = 0; i_44102 < Ry_40865; i_44102++) {
                for (int64_t i_44103 = 0; i_44103 < Rx_40867; i_44103++) {
                    mem_43625[i_44102 * Rx_40867 + i_44103] =
                        mem_param_42965[i_44102 * Rx_40867 + i_44103];
                }
            }
        }
        
        float mem_param_tmp_44088[Ry_40865 * Rx_40867];
        
        for (int32_t i_11 = 0; i_11 < Ry_40865 * Rx_40867; i_11++)
            mem_param_tmp_44088[i_11] = mem_43625[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_40865 * Rx_40867; i_12++)
            mem_param_42965[i_12] = mem_param_tmp_44088[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_40865 * Rx_40867; i_13++)
        loop_mem_42994[i_13] = mem_param_42965[i_13];
    
    int64_t reg_tile_i_44104 = squot64(sext_i32_i64(local_tid_44054), Tx_40866);
    int64_t reg_tile_i_44105 = sext_i32_i64(local_tid_44054) -
            squot64(sext_i32_i64(local_tid_44054), Tx_40866) * Tx_40866;
    int64_t tile_dim_start_44106 = Ry_40865 * (Ty_40864 * gid_y_40882 +
                                               reg_tile_i_44104);
    int64_t tile_dim_start_44107 = Rx_40867 * (Tx_40866 * gid_x_40881 +
                                               reg_tile_i_44105);
    
    for (int64_t nest_i_44108 = 0; nest_i_44108 < Ry_40865; nest_i_44108++) {
        for (int64_t nest_i_44109 = 0; nest_i_44109 < Rx_40867;
             nest_i_44109++) {
            if (slt64(tile_dim_start_44106 + nest_i_44108, m_28661) &&
                slt64(tile_dim_start_44107 + nest_i_44109, i32_res_28676)) {
                ((__global float *) mem_42997)[(tile_dim_start_44106 +
                                                nest_i_44108) * i32_res_28676 +
                                               (tile_dim_start_44107 +
                                                nest_i_44109)] =
                    loop_mem_42994[nest_i_44108 * Rx_40867 + nest_i_44109];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_40864
    #undef Ry_40865
    #undef Tx_40866
    #undef Rx_40867
    #undef Tk_40868
    #undef tk_div_tx_40869
    #undef tk_div_ty_40870
    #undef TxRx_40871
    #undef TyRy_40872
    #undef a_loc_szz_40874
    #undef b_loc_szz_40876
}
__kernel void mainzisegmap_intragroup_41332(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43055_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43046_backing_aligned_1,
                                            int64_t m_28661,
                                            int64_t i32_res_28676,
                                            int64_t num_groups_y_41330,
                                            int64_t num_whole_tiles_41348,
                                            int64_t residual_input_41475,
                                            unsigned char cond_41476, __global
                                            unsigned char *defunc_3_map_res_mem_43007,
                                            __global unsigned char *mem_43036,
                                            __global unsigned char *mem_43063)
{
    #define tile_sizze_41327 (mainzitile_sizze_41326)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43055_backing_5 = (__local volatile
                                                           char *) mem_43055_backing_aligned_0;
    __local volatile char *restrict mem_43046_backing_0 = (__local volatile
                                                           char *) mem_43046_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44185;
    int32_t local_tid_44186;
    int64_t group_sizze_44189;
    int32_t wave_sizze_44188;
    int32_t group_tid_44187;
    
    global_tid_44185 = get_global_id(0);
    local_tid_44186 = get_local_id(0);
    group_sizze_44189 = get_local_size(0);
    wave_sizze_44188 = LOCKSTEP_WIDTH;
    group_tid_44187 = get_group_id(0);
    
    int32_t gid_flat_41332;
    
    gid_flat_41332 = group_tid_44187;
    
    int32_t ltid_pre_44190;
    
    ltid_pre_44190 = squot32(local_tid_44186, sext_i64_i32(tile_sizze_41327));
    
    int32_t ltid_pre_44191;
    
    ltid_pre_44191 = local_tid_44186 - squot32(local_tid_44186,
                                               sext_i64_i32(tile_sizze_41327)) *
        sext_i64_i32(tile_sizze_41327);
    
    int64_t gid_x_41324;
    
    gid_x_41324 = squot64(sext_i32_i64(group_tid_44187), num_groups_y_41330);
    
    int64_t gid_y_41325;
    
    gid_y_41325 = sext_i32_i64(group_tid_44187) -
        squot64(sext_i32_i64(group_tid_44187), num_groups_y_41330) *
        num_groups_y_41330;
    
    float mem_43041[1];
    int64_t ltid_y_41351 = sext_i32_i64(ltid_pre_44190);
    int64_t ltid_x_41349 = sext_i32_i64(ltid_pre_44191);
    int32_t ltid_flat_41350 = local_tid_44186;
    
    if (slt64(ltid_y_41351, tile_sizze_41327) && slt64(ltid_x_41349,
                                                       tile_sizze_41327)) {
        mem_43041[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41434 = gid_x_41324 * tile_sizze_41327;
    int64_t binop_x_41449 = gid_y_41325 * tile_sizze_41327;
    __local char *mem_43046;
    
    mem_43046 = (__local char *) mem_43046_backing_0;
    
    float accs_mem_43051[1];
    float mem_param_43042[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43042[i_1] = mem_43041[i_1];
    for (int64_t tile_id_41360 = 0; tile_id_41360 < num_whole_tiles_41348;
         tile_id_41360++) {
        int64_t binop_x_41432 = tile_sizze_41327 * tile_id_41360;
        int64_t ltid_y_41363 = sext_i32_i64(ltid_pre_44190);
        int64_t ltid_x_41361 = sext_i32_i64(ltid_pre_44191);
        int32_t ltid_flat_41362 = local_tid_44186;
        int64_t j_41433 = ltid_x_41361 + binop_x_41432;
        int64_t gtid_41435 = ltid_y_41363 + binop_x_41434;
        bool binop_x_41440 = slt64(j_41433, i32_res_28676);
        bool binop_y_41441 = slt64(gtid_41435, m_28661);
        bool cond_41442 = binop_x_41440 && binop_y_41441;
        float pre_41443;
        
        if (cond_41442) {
            float x_41444 = ((__global
                              float *) defunc_3_map_res_mem_43007)[gtid_41435 *
                                                                   i32_res_28676 +
                                                                   j_41433];
            
            pre_41443 = x_41444;
        } else {
            pre_41443 = 0.0F;
        }
        ((__local float *) mem_43046)[ltid_y_41363 * tile_sizze_41327 +
                                      ltid_x_41361] = pre_41443;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43050[1];
        int64_t ltid_y_41395 = sext_i32_i64(ltid_pre_44190);
        int64_t ltid_x_41393 = sext_i32_i64(ltid_pre_44191);
        int32_t ltid_flat_41394 = local_tid_44186;
        int64_t gtid_41448 = ltid_y_41395 + binop_x_41434;
        int64_t gtid_41450 = ltid_x_41393 + binop_x_41449;
        float acc_41453 = mem_param_43042[(int64_t) 0];
        bool binop_x_41457 = slt64(gtid_41448, m_28661);
        bool binop_y_41458 = slt64(gtid_41450, i32_res_28676);
        bool cond_41459 = binop_x_41457 && binop_y_41458;
        float acc_41460;
        
        if (cond_41459) {
            float x_41461;
            float redout_42472 = acc_41453;
            
            for (int64_t i_42473 = 0; i_42473 < tile_sizze_41327; i_42473++) {
                float x_41465 = ((__local float *) mem_43046)[ltid_y_41395 *
                                                              tile_sizze_41327 +
                                                              i_42473];
                int64_t slice_42524 = binop_x_41432 + i_42473;
                float x_41466 = ((__global float *) mem_43036)[slice_42524 *
                                                               (i32_res_28676 *
                                                                m_28661) +
                                                               gtid_41448 *
                                                               i32_res_28676 +
                                                               gtid_41450];
                float defunc_1_f_res_41467 = x_41465 * x_41466;
                float defunc_1_op_res_41464 = defunc_1_f_res_41467 +
                      redout_42472;
                float redout_tmp_44194 = defunc_1_op_res_41464;
                
                redout_42472 = redout_tmp_44194;
            }
            x_41461 = redout_42472;
            acc_41460 = x_41461;
        } else {
            acc_41460 = acc_41453;
        }
        mem_43050[(int64_t) 0] = acc_41460;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44192[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44192[i_2] = mem_43050[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43042[i_3] = mem_param_tmp_44192[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43051[i_4] = mem_param_43042[i_4];
    
    __local char *mem_43055;
    
    mem_43055 = (__local char *) mem_43055_backing_5;
    
    float mem_43059[1];
    float mem_43639[1];
    
    if (cond_41476) {
        mem_43639[(int64_t) 0] = accs_mem_43051[(int64_t) 0];
    } else {
        int64_t binop_x_41549 = tile_sizze_41327 * num_whole_tiles_41348;
        int64_t ltid_y_41479 = sext_i32_i64(ltid_pre_44190);
        int64_t ltid_x_41477 = sext_i32_i64(ltid_pre_44191);
        int32_t ltid_flat_41478 = local_tid_44186;
        int64_t j_41550 = ltid_x_41477 + binop_x_41549;
        int64_t gtid_41552 = binop_x_41434 + ltid_y_41479;
        bool binop_x_41557 = slt64(j_41550, i32_res_28676);
        bool binop_y_41558 = slt64(gtid_41552, m_28661);
        bool cond_41559 = binop_x_41557 && binop_y_41558;
        float pre_41560;
        
        if (cond_41559) {
            float x_41561 = ((__global
                              float *) defunc_3_map_res_mem_43007)[gtid_41552 *
                                                                   i32_res_28676 +
                                                                   j_41550];
            
            pre_41560 = x_41561;
        } else {
            pre_41560 = 0.0F;
        }
        ((__local float *) mem_43055)[ltid_y_41479 * tile_sizze_41327 +
                                      ltid_x_41477] = pre_41560;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41512 = sext_i32_i64(ltid_pre_44190);
        int64_t ltid_x_41510 = sext_i32_i64(ltid_pre_44191);
        int32_t ltid_flat_41511 = local_tid_44186;
        int64_t gtid_41566 = binop_x_41434 + ltid_y_41512;
        int64_t gtid_41568 = binop_x_41449 + ltid_x_41510;
        float acc_41571 = accs_mem_43051[(int64_t) 0];
        bool binop_x_41575 = slt64(gtid_41566, m_28661);
        bool binop_y_41576 = slt64(gtid_41568, i32_res_28676);
        bool cond_41577 = binop_x_41575 && binop_y_41576;
        float acc_41578;
        
        if (cond_41577) {
            float x_41579;
            float redout_42474 = acc_41571;
            
            for (int64_t i_42475 = 0; i_42475 < residual_input_41475;
                 i_42475++) {
                float x_41583 = ((__local float *) mem_43055)[ltid_y_41512 *
                                                              tile_sizze_41327 +
                                                              i_42475];
                int64_t slice_42525 = binop_x_41549 + i_42475;
                float x_41584 = ((__global float *) mem_43036)[slice_42525 *
                                                               (i32_res_28676 *
                                                                m_28661) +
                                                               gtid_41566 *
                                                               i32_res_28676 +
                                                               gtid_41568];
                float defunc_1_f_res_41585 = x_41583 * x_41584;
                float defunc_1_op_res_41582 = defunc_1_f_res_41585 +
                      redout_42474;
                float redout_tmp_44195 = defunc_1_op_res_41582;
                
                redout_42474 = redout_tmp_44195;
            }
            x_41579 = redout_42474;
            acc_41578 = x_41579;
        } else {
            acc_41578 = acc_41571;
        }
        mem_43059[(int64_t) 0] = acc_41578;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43639[(int64_t) 0] = mem_43059[(int64_t) 0];
    }
    
    int64_t thread_out_index_44196 = gid_x_41324 * tile_sizze_41327 +
            sext_i32_i64(ltid_pre_44190);
    int64_t thread_out_index_44197 = gid_y_41325 * tile_sizze_41327 +
            sext_i32_i64(ltid_pre_44191);
    
    if (slt64(thread_out_index_44196, m_28661) && slt64(thread_out_index_44197,
                                                        i32_res_28676)) {
        ((__global float *) mem_43063)[thread_out_index_44196 * i32_res_28676 +
                                       thread_out_index_44197] =
            mem_43639[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41327
}
__kernel void mainzisegmap_intragroup_41624(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43115_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43113_backing_aligned_1,
                                            int64_t N_28660, int64_t m_28661,
                                            int64_t i32_res_28676,
                                            int64_t gridDim_x_41618,
                                            int64_t full_tiles_41649,
                                            int64_t kk_41852, __global
                                            unsigned char *defunc_4_map_res_mem_43073,
                                            __global unsigned char *mem_43097,
                                            __global unsigned char *mem_43287)
{
    #define Ty_41605 (mainziTy_41602)
    #define Ry_41606 (mainziRy_41604)
    #define Tx_41607 (mainziTx_41601)
    #define Rx_41608 (mainziRx_41603)
    #define Tk_41609 (mainziTk_41600)
    #define tk_div_tx_41610 (sdiv_up64(mainziTk_41600, mainziTx_41601))
    #define tk_div_ty_41611 (sdiv_up64(mainziTk_41600, mainziTy_41602))
    #define TxRx_41612 (mainziTx_41601 * mainziRx_41603)
    #define TyRy_41613 (mainziTy_41602 * mainziRy_41604)
    #define a_loc_szz_41615 (mainziTk_41600 * (mainziTy_41602 * mainziRy_41604))
    #define b_loc_szz_41617 (mainziRx_41603 * (mainziTx_41601 * mainziTk_41600))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43115_backing_1 = (__local volatile
                                                           char *) mem_43115_backing_aligned_0;
    __local volatile char *restrict mem_43113_backing_0 = (__local volatile
                                                           char *) mem_43113_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44273;
    int32_t local_tid_44274;
    int64_t group_sizze_44277;
    int32_t wave_sizze_44276;
    int32_t group_tid_44275;
    
    global_tid_44273 = get_global_id(0);
    local_tid_44274 = get_local_id(0);
    group_sizze_44277 = get_local_size(0);
    wave_sizze_44276 = LOCKSTEP_WIDTH;
    group_tid_44275 = get_group_id(0);
    
    int32_t gid_flat_41624;
    
    gid_flat_41624 = group_tid_44275;
    
    int32_t ltid_pre_44278;
    
    ltid_pre_44278 = squot32(local_tid_44274, sext_i64_i32(Tx_41607));
    
    int32_t ltid_pre_44279;
    
    ltid_pre_44279 = local_tid_44274 - squot32(local_tid_44274,
                                               sext_i64_i32(Tx_41607)) *
        sext_i64_i32(Tx_41607);
    
    int64_t gid_y_41623;
    
    gid_y_41623 = squot64(sext_i32_i64(group_tid_44275), gridDim_x_41618);
    
    int64_t gid_x_41622;
    
    gid_x_41622 = sext_i32_i64(group_tid_44275) -
        squot64(sext_i32_i64(group_tid_44275), gridDim_x_41618) *
        gridDim_x_41618;
    
    int64_t iii_41625;
    
    iii_41625 = TyRy_41613 * gid_y_41623;
    
    int64_t jjj_41626 = TxRx_41612 * gid_x_41622;
    float mem_43111[Ry_41606 * Rx_41608];
    int64_t ltid_y_41629 = sext_i32_i64(ltid_pre_44278);
    int64_t ltid_x_41627 = sext_i32_i64(ltid_pre_44279);
    int32_t ltid_flat_41628 = local_tid_44274;
    float mem_43102[Ry_41606 * Rx_41608];
    
    for (int64_t i_41640 = 0; i_41640 < Ry_41606; i_41640++) {
        for (int64_t i_41643 = 0; i_41643 < Rx_41608; i_41643++) {
            mem_43102[i_41640 * Rx_41608 + i_41643] = 0.0F;
        }
    }
    for (int64_t i_44282 = 0; i_44282 < Ry_41606; i_44282++) {
        for (int64_t i_44283 = 0; i_44283 < Rx_41608; i_44283++) {
            mem_43111[i_44282 * Rx_41608 + i_44283] = mem_43102[i_44282 *
                                                                Rx_41608 +
                                                                i_44283];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43113;
    
    mem_43113 = (__local char *) mem_43113_backing_0;
    
    __local char *mem_43115;
    
    mem_43115 = (__local char *) mem_43115_backing_1;
    
    float mem_43186[Ry_41606];
    float mem_43190[Rx_41608];
    float loop_mem_43202[Ry_41606 * Rx_41608];
    float mem_param_43116[Ry_41606 * Rx_41608];
    
    for (int32_t i_2 = 0; i_2 < Ry_41606 * Rx_41608; i_2++)
        mem_param_43116[i_2] = mem_43111[i_2];
    for (int64_t i_41650 = 0; i_41650 < full_tiles_41649; i_41650++) {
        int64_t kk_41654 = Tk_41609 * i_41650;
        
        for (int64_t i_41655 = 0; i_41655 < Ry_41606; i_41655++) {
            int64_t binop_y_41678 = Ty_41605 * i_41655;
            
            for (int64_t i_41657 = 0; i_41657 < tk_div_tx_41610; i_41657++) {
                int64_t binop_y_41676 = Tx_41607 * i_41657;
                int64_t ltid_x_41659 = sext_i32_i64(ltid_pre_44278);
                int64_t ltid_y_41660 = sext_i32_i64(ltid_pre_44279);
                int32_t ltid_flat_41661 = local_tid_44274;
                int64_t k_41677 = ltid_y_41660 + binop_y_41676;
                int64_t i_41679 = ltid_x_41659 + binop_y_41678;
                int64_t gtid_41680 = iii_41625 + i_41679;
                int64_t A_col_idx_41681 = kk_41654 + k_41677;
                bool cond_41682 = slt64(gtid_41680, m_28661);
                float A_elem_41683;
                
                if (cond_41682) {
                    float A_elem_41685 = ((__global
                                           float *) defunc_4_map_res_mem_43073)[gtid_41680 *
                                                                                i32_res_28676 +
                                                                                A_col_idx_41681];
                    
                    A_elem_41683 = A_elem_41685;
                } else {
                    A_elem_41683 = 0.0F;
                }
                
                bool cond_41687 = slt64(k_41677, Tk_41609);
                int64_t a_loc_ind_41688;
                
                if (cond_41687) {
                    int64_t binop_y_41689 = Tk_41609 * i_41679;
                    int64_t loc_fi_41690 = k_41677 + binop_y_41689;
                    
                    a_loc_ind_41688 = loc_fi_41690;
                } else {
                    a_loc_ind_41688 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41688) &&
                    slt64(a_loc_ind_41688, a_loc_szz_41615)) {
                    ((__local float *) mem_43113)[a_loc_ind_41688] =
                        A_elem_41683;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41695 = 0; i_41695 < tk_div_ty_41611; i_41695++) {
            int64_t binop_y_41716 = Ty_41605 * i_41695;
            
            for (int64_t i_41697 = 0; i_41697 < Rx_41608; i_41697++) {
                int64_t binop_y_41718 = Tx_41607 * i_41697;
                int64_t ltid_x_41699 = sext_i32_i64(ltid_pre_44278);
                int64_t ltid_y_41700 = sext_i32_i64(ltid_pre_44279);
                int32_t ltid_flat_41701 = local_tid_44274;
                int64_t k_41717 = ltid_x_41699 + binop_y_41716;
                int64_t j_41719 = ltid_y_41700 + binop_y_41718;
                int64_t gtid_41720 = jjj_41626 + j_41719;
                int64_t B_row_idx_41721 = kk_41654 + k_41717;
                bool cond_41722 = slt64(gtid_41720, N_28660);
                float B_elem_41723;
                
                if (cond_41722) {
                    float B_elem_41725 = ((__global
                                           float *) mem_43097)[B_row_idx_41721 *
                                                               N_28660 +
                                                               gtid_41720];
                    
                    B_elem_41723 = B_elem_41725;
                } else {
                    B_elem_41723 = 0.0F;
                }
                
                bool cond_41727 = slt64(k_41717, Tk_41609);
                int64_t b_loc_ind_41728;
                
                if (cond_41727) {
                    int64_t binop_y_41729 = TxRx_41612 * k_41717;
                    int64_t loc_fi_41730 = j_41719 + binop_y_41729;
                    
                    b_loc_ind_41728 = loc_fi_41730;
                } else {
                    b_loc_ind_41728 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41728) &&
                    slt64(b_loc_ind_41728, b_loc_szz_41617)) {
                    ((__local float *) mem_43115)[b_loc_ind_41728] =
                        B_elem_41723;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43201[Ry_41606 * Rx_41608];
        float mem_param_43173[Ry_41606 * Rx_41608];
        
        for (int32_t i_3 = 0; i_3 < Ry_41606 * Rx_41608; i_3++)
            mem_param_43173[i_3] = mem_param_43116[i_3];
        for (int64_t i_41735 = 0; i_41735 < Tk_41609; i_41735++) {
            int64_t binop_y_41774 = TxRx_41612 * i_41735;
            int64_t ltid_y_41739 = sext_i32_i64(ltid_pre_44278);
            int64_t ltid_x_41737 = sext_i32_i64(ltid_pre_44279);
            int32_t ltid_flat_41738 = local_tid_44274;
            float mem_43176[Ry_41606];
            float mem_43178[Rx_41608];
            int64_t binop_x_41765 = Ry_41606 * ltid_y_41739;
            
            for (int64_t i_41763 = 0; i_41763 < Ry_41606; i_41763++) {
                int64_t binop_x_41766 = i_41763 + binop_x_41765;
                int64_t binop_y_41767 = Tk_41609 * binop_x_41766;
                int64_t a_loc_ind_41768 = i_41735 + binop_y_41767;
                
                for (int64_t i_44295 = 0; i_44295 < (int64_t) 1; i_44295++) {
                    mem_43176[i_41763 + i_44295] = ((__local
                                                     float *) mem_43113)[a_loc_ind_41768 +
                                                                         i_44295];
                }
            }
            
            int64_t binop_y_41776 = Rx_41608 * ltid_x_41737;
            
            for (int64_t i_41772 = 0; i_41772 < Rx_41608; i_41772++) {
                int64_t binop_x_41775 = i_41772 + binop_y_41774;
                int64_t b_loc_ind_41777 = binop_x_41775 + binop_y_41776;
                
                for (int64_t i_44297 = 0; i_44297 < (int64_t) 1; i_44297++) {
                    mem_43178[i_41772 + i_44297] = ((__local
                                                     float *) mem_43115)[b_loc_ind_41777 +
                                                                         i_44297];
                }
            }
            for (int64_t i_44298 = 0; i_44298 < Ry_41606; i_44298++) {
                mem_43186[i_44298] = mem_43176[i_44298];
            }
            for (int64_t i_44299 = 0; i_44299 < Rx_41608; i_44299++) {
                mem_43190[i_44299] = mem_43178[i_44299];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43200[Ry_41606 * Rx_41608];
            int64_t ltid_y_41784 = sext_i32_i64(ltid_pre_44278);
            int64_t ltid_x_41782 = sext_i32_i64(ltid_pre_44279);
            int32_t ltid_flat_41783 = local_tid_44274;
            int64_t binop_y_41825 = Ry_41606 * ltid_y_41784;
            int64_t binop_y_41829 = Rx_41608 * ltid_x_41782;
            
            for (int64_t i_41819 = 0; i_41819 < Ry_41606; i_41819++) {
                int64_t binop_x_41824 = iii_41625 + i_41819;
                int64_t cmpop_x_41826 = binop_x_41824 + binop_y_41825;
                bool binop_x_41827 = slt64(cmpop_x_41826, m_28661);
                
                for (int64_t i_41822 = 0; i_41822 < Rx_41608; i_41822++) {
                    int64_t binop_x_41828 = jjj_41626 + i_41822;
                    int64_t cmpop_x_41830 = binop_x_41828 + binop_y_41829;
                    bool binop_y_41831 = slt64(cmpop_x_41830, N_28660);
                    bool cond_41832 = binop_x_41827 && binop_y_41831;
                    
                    if (cond_41832) {
                        float a_41834 = mem_43186[i_41819];
                        float b_41835 = mem_43190[i_41822];
                        float c_41836 = mem_param_43173[i_41819 * Rx_41608 +
                                                        i_41822];
                        float defunc_1_f_res_41839 = a_41834 * b_41835;
                        float defunc_1_op_res_41843 = c_41836 +
                              defunc_1_f_res_41839;
                        
                        mem_param_43173[i_41819 * Rx_41608 + i_41822] =
                            defunc_1_op_res_41843;
                    }
                }
            }
            for (int64_t i_44302 = 0; i_44302 < Ry_41606; i_44302++) {
                for (int64_t i_44303 = 0; i_44303 < Rx_41608; i_44303++) {
                    mem_43200[i_44302 * Rx_41608 + i_44303] =
                        mem_param_43173[i_44302 * Rx_41608 + i_44303];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44292[Ry_41606 * Rx_41608];
            
            for (int32_t i_4 = 0; i_4 < Ry_41606 * Rx_41608; i_4++)
                mem_param_tmp_44292[i_4] = mem_43200[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41606 * Rx_41608; i_5++)
                mem_param_43173[i_5] = mem_param_tmp_44292[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41606 * Rx_41608; i_6++)
            loop_mem_43201[i_6] = mem_param_43173[i_6];
        
        float mem_param_tmp_44284[Ry_41606 * Rx_41608];
        
        for (int32_t i_7 = 0; i_7 < Ry_41606 * Rx_41608; i_7++)
            mem_param_tmp_44284[i_7] = loop_mem_43201[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41606 * Rx_41608; i_8++)
            mem_param_43116[i_8] = mem_param_tmp_44284[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41606 * Rx_41608; i_9++)
        loop_mem_43202[i_9] = mem_param_43116[i_9];
    for (int64_t i_41853 = 0; i_41853 < Ry_41606; i_41853++) {
        int64_t binop_y_41878 = Ty_41605 * i_41853;
        
        for (int64_t i_41855 = 0; i_41855 < tk_div_tx_41610; i_41855++) {
            int64_t binop_y_41876 = Tx_41607 * i_41855;
            int64_t ltid_x_41857 = sext_i32_i64(ltid_pre_44278);
            int64_t ltid_y_41858 = sext_i32_i64(ltid_pre_44279);
            int32_t ltid_flat_41859 = local_tid_44274;
            int64_t k_41877 = ltid_y_41858 + binop_y_41876;
            int64_t i_41879 = ltid_x_41857 + binop_y_41878;
            int64_t gtid_41880 = iii_41625 + i_41879;
            int64_t A_col_idx_41881 = kk_41852 + k_41877;
            bool binop_x_41882 = slt64(gtid_41880, m_28661);
            bool binop_y_41883 = slt64(A_col_idx_41881, i32_res_28676);
            bool cond_41884 = binop_x_41882 && binop_y_41883;
            float A_elem_41885;
            
            if (cond_41884) {
                float A_elem_41887 = ((__global
                                       float *) defunc_4_map_res_mem_43073)[gtid_41880 *
                                                                            i32_res_28676 +
                                                                            A_col_idx_41881];
                
                A_elem_41885 = A_elem_41887;
            } else {
                A_elem_41885 = 0.0F;
            }
            
            bool cond_41889 = slt64(k_41877, Tk_41609);
            int64_t a_loc_ind_41890;
            
            if (cond_41889) {
                int64_t binop_y_41891 = Tk_41609 * i_41879;
                int64_t loc_fi_41892 = k_41877 + binop_y_41891;
                
                a_loc_ind_41890 = loc_fi_41892;
            } else {
                a_loc_ind_41890 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41890) && slt64(a_loc_ind_41890,
                                                             a_loc_szz_41615)) {
                ((__local float *) mem_43113)[a_loc_ind_41890] = A_elem_41885;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41897 = 0; i_41897 < tk_div_ty_41611; i_41897++) {
        int64_t binop_y_41920 = Ty_41605 * i_41897;
        
        for (int64_t i_41899 = 0; i_41899 < Rx_41608; i_41899++) {
            int64_t binop_y_41922 = Tx_41607 * i_41899;
            int64_t ltid_x_41901 = sext_i32_i64(ltid_pre_44278);
            int64_t ltid_y_41902 = sext_i32_i64(ltid_pre_44279);
            int32_t ltid_flat_41903 = local_tid_44274;
            int64_t k_41921 = ltid_x_41901 + binop_y_41920;
            int64_t j_41923 = ltid_y_41902 + binop_y_41922;
            int64_t gtid_41924 = jjj_41626 + j_41923;
            int64_t B_row_idx_41925 = kk_41852 + k_41921;
            bool binop_x_41926 = slt64(gtid_41924, N_28660);
            bool binop_y_41927 = slt64(B_row_idx_41925, i32_res_28676);
            bool cond_41928 = binop_x_41926 && binop_y_41927;
            float B_elem_41929;
            
            if (cond_41928) {
                float B_elem_41931 = ((__global
                                       float *) mem_43097)[B_row_idx_41925 *
                                                           N_28660 +
                                                           gtid_41924];
                
                B_elem_41929 = B_elem_41931;
            } else {
                B_elem_41929 = 0.0F;
            }
            
            bool cond_41933 = slt64(k_41921, Tk_41609);
            int64_t b_loc_ind_41934;
            
            if (cond_41933) {
                int64_t binop_y_41935 = TxRx_41612 * k_41921;
                int64_t loc_fi_41936 = j_41923 + binop_y_41935;
                
                b_loc_ind_41934 = loc_fi_41936;
            } else {
                b_loc_ind_41934 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41934) && slt64(b_loc_ind_41934,
                                                             b_loc_szz_41617)) {
                ((__local float *) mem_43115)[b_loc_ind_41934] = B_elem_41929;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43268[Ry_41606];
    float mem_43272[Rx_41608];
    float mem_43282[Ry_41606 * Rx_41608];
    float loop_mem_43284[Ry_41606 * Rx_41608];
    float mem_param_43255[Ry_41606 * Rx_41608];
    
    for (int32_t i_10 = 0; i_10 < Ry_41606 * Rx_41608; i_10++)
        mem_param_43255[i_10] = loop_mem_43202[i_10];
    for (int64_t i_41941 = 0; i_41941 < Tk_41609; i_41941++) {
        int64_t cmpop_x_41943 = kk_41852 + i_41941;
        bool cond_41944 = slt64(cmpop_x_41943, i32_res_28676);
        float mem_43655[Ry_41606 * Rx_41608];
        
        if (cond_41944) {
            int64_t binop_y_41982 = TxRx_41612 * i_41941;
            int64_t bytes_43257 = (int64_t) 4 * Ry_41606;
            int64_t bytes_43259 = (int64_t) 4 * Rx_41608;
            int64_t ltid_y_41947 = sext_i32_i64(ltid_pre_44278);
            int64_t ltid_x_41945 = sext_i32_i64(ltid_pre_44279);
            int32_t ltid_flat_41946 = local_tid_44274;
            float mem_43258[Ry_41606];
            float mem_43260[Rx_41608];
            int64_t binop_x_41973 = Ry_41606 * ltid_y_41947;
            
            for (int64_t i_41971 = 0; i_41971 < Ry_41606; i_41971++) {
                int64_t binop_x_41974 = i_41971 + binop_x_41973;
                int64_t binop_y_41975 = Tk_41609 * binop_x_41974;
                int64_t a_loc_ind_41976 = i_41941 + binop_y_41975;
                
                for (int64_t i_44311 = 0; i_44311 < (int64_t) 1; i_44311++) {
                    mem_43258[i_41971 + i_44311] = ((__local
                                                     float *) mem_43113)[a_loc_ind_41976 +
                                                                         i_44311];
                }
            }
            
            int64_t binop_y_41984 = Rx_41608 * ltid_x_41945;
            
            for (int64_t i_41980 = 0; i_41980 < Rx_41608; i_41980++) {
                int64_t binop_x_41983 = i_41980 + binop_y_41982;
                int64_t b_loc_ind_41985 = binop_x_41983 + binop_y_41984;
                
                for (int64_t i_44313 = 0; i_44313 < (int64_t) 1; i_44313++) {
                    mem_43260[i_41980 + i_44313] = ((__local
                                                     float *) mem_43115)[b_loc_ind_41985 +
                                                                         i_44313];
                }
            }
            for (int64_t i_44314 = 0; i_44314 < Ry_41606; i_44314++) {
                mem_43268[i_44314] = mem_43258[i_44314];
            }
            for (int64_t i_44315 = 0; i_44315 < Rx_41608; i_44315++) {
                mem_43272[i_44315] = mem_43260[i_44315];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41992 = sext_i32_i64(ltid_pre_44278);
            int64_t ltid_x_41990 = sext_i32_i64(ltid_pre_44279);
            int32_t ltid_flat_41991 = local_tid_44274;
            int64_t binop_y_42033 = Ry_41606 * ltid_y_41992;
            int64_t binop_y_42037 = Rx_41608 * ltid_x_41990;
            
            for (int64_t i_42027 = 0; i_42027 < Ry_41606; i_42027++) {
                int64_t binop_x_42032 = iii_41625 + i_42027;
                int64_t cmpop_x_42034 = binop_x_42032 + binop_y_42033;
                bool binop_x_42035 = slt64(cmpop_x_42034, m_28661);
                
                for (int64_t i_42030 = 0; i_42030 < Rx_41608; i_42030++) {
                    int64_t binop_x_42036 = jjj_41626 + i_42030;
                    int64_t cmpop_x_42038 = binop_x_42036 + binop_y_42037;
                    bool binop_y_42039 = slt64(cmpop_x_42038, N_28660);
                    bool cond_42040 = binop_x_42035 && binop_y_42039;
                    
                    if (cond_42040) {
                        float a_42042 = mem_43268[i_42027];
                        float b_42043 = mem_43272[i_42030];
                        float c_42044 = mem_param_43255[i_42027 * Rx_41608 +
                                                        i_42030];
                        float defunc_1_f_res_42047 = a_42042 * b_42043;
                        float defunc_1_op_res_42051 = c_42044 +
                              defunc_1_f_res_42047;
                        
                        mem_param_43255[i_42027 * Rx_41608 + i_42030] =
                            defunc_1_op_res_42051;
                    }
                }
            }
            for (int64_t i_44318 = 0; i_44318 < Ry_41606; i_44318++) {
                for (int64_t i_44319 = 0; i_44319 < Rx_41608; i_44319++) {
                    mem_43282[i_44318 * Rx_41608 + i_44319] =
                        mem_param_43255[i_44318 * Rx_41608 + i_44319];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44320 = 0; i_44320 < Ry_41606; i_44320++) {
                for (int64_t i_44321 = 0; i_44321 < Rx_41608; i_44321++) {
                    mem_43655[i_44320 * Rx_41608 + i_44321] =
                        mem_43282[i_44320 * Rx_41608 + i_44321];
                }
            }
        } else {
            for (int64_t i_44322 = 0; i_44322 < Ry_41606; i_44322++) {
                for (int64_t i_44323 = 0; i_44323 < Rx_41608; i_44323++) {
                    mem_43655[i_44322 * Rx_41608 + i_44323] =
                        mem_param_43255[i_44322 * Rx_41608 + i_44323];
                }
            }
        }
        
        float mem_param_tmp_44308[Ry_41606 * Rx_41608];
        
        for (int32_t i_11 = 0; i_11 < Ry_41606 * Rx_41608; i_11++)
            mem_param_tmp_44308[i_11] = mem_43655[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41606 * Rx_41608; i_12++)
            mem_param_43255[i_12] = mem_param_tmp_44308[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41606 * Rx_41608; i_13++)
        loop_mem_43284[i_13] = mem_param_43255[i_13];
    
    int64_t reg_tile_i_44324 = squot64(sext_i32_i64(local_tid_44274), Tx_41607);
    int64_t reg_tile_i_44325 = sext_i32_i64(local_tid_44274) -
            squot64(sext_i32_i64(local_tid_44274), Tx_41607) * Tx_41607;
    int64_t tile_dim_start_44326 = Ry_41606 * (Ty_41605 * gid_y_41623 +
                                               reg_tile_i_44324);
    int64_t tile_dim_start_44327 = Rx_41608 * (Tx_41607 * gid_x_41622 +
                                               reg_tile_i_44325);
    
    for (int64_t nest_i_44328 = 0; nest_i_44328 < Ry_41606; nest_i_44328++) {
        for (int64_t nest_i_44329 = 0; nest_i_44329 < Rx_41608;
             nest_i_44329++) {
            if (slt64(tile_dim_start_44326 + nest_i_44328, m_28661) &&
                slt64(tile_dim_start_44327 + nest_i_44329, N_28660)) {
                ((__global float *) mem_43287)[(tile_dim_start_44326 +
                                                nest_i_44328) * N_28660 +
                                               (tile_dim_start_44327 +
                                                nest_i_44329)] =
                    loop_mem_43284[nest_i_44328 * Rx_41608 + nest_i_44329];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41605
    #undef Ry_41606
    #undef Tx_41607
    #undef Rx_41608
    #undef Tk_41609
    #undef tk_div_tx_41610
    #undef tk_div_ty_41611
    #undef TxRx_41612
    #undef TyRy_41613
    #undef a_loc_szz_41615
    #undef b_loc_szz_41617
}
__kernel void mainzisegmap_intragroup_42058(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43360_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43353_backing_aligned_1,
                                            int64_t m_28661, int32_t n_28664,
                                            float hfrac_28666,
                                            int64_t i32_res_28670,
                                            int32_t k2p2_28672,
                                            int64_t num_whole_tiles_42080,
                                            int64_t residual_input_42169,
                                            unsigned char cond_42170, __global
                                            unsigned char *mem_43339, __global
                                            unsigned char *mem_43342, __global
                                            unsigned char *mem_43373, __global
                                            unsigned char *mem_43375, __global
                                            unsigned char *mem_43377)
{
    #define segmap_group_sizze_39504 (mainzisegmap_group_sizze_39473)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43360_backing_5 = (__local volatile
                                                           char *) mem_43360_backing_aligned_0;
    __local volatile char *restrict mem_43353_backing_0 = (__local volatile
                                                           char *) mem_43353_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44497;
    int32_t local_tid_44498;
    int64_t group_sizze_44501;
    int32_t wave_sizze_44500;
    int32_t group_tid_44499;
    
    global_tid_44497 = get_global_id(0);
    local_tid_44498 = get_local_id(0);
    group_sizze_44501 = get_local_size(0);
    wave_sizze_44500 = LOCKSTEP_WIDTH;
    group_tid_44499 = get_group_id(0);
    
    int32_t gid_flat_42058;
    
    gid_flat_42058 = group_tid_44499;
    
    int32_t ltid_pre_44502;
    
    ltid_pre_44502 = local_tid_44498;
    
    int64_t gid_42057;
    
    gid_42057 = sext_i32_i64(group_tid_44499);
    
    int64_t binop_x_42065;
    
    binop_x_42065 = segmap_group_sizze_39504 * gid_42057;
    
    int32_t mem_43346[1];
    int64_t ltid_42059 = sext_i32_i64(ltid_pre_44502);
    int32_t ltid_flat_42060 = local_tid_44498;
    int64_t gtid_42066 = ltid_42059 + binop_x_42065;
    bool cond_42067 = slt64(gtid_42066, m_28661);
    int32_t pre_42068;
    
    if (cond_42067) {
        int32_t defunc_0_f_res_42070;
        int32_t redout_42482 = 0;
        
        for (int32_t i_42527 = 0; i_42527 < n_28664; i_42527++) {
            int64_t i_42483 = sext_i32_i64(i_42527);
            float x_42074 = ((__global float *) mem_43339)[i_42483 * m_28661 +
                                                           gtid_42066];
            bool isnan_res_42075;
            
            isnan_res_42075 = futrts_isnan32(x_42074);
            
            bool cond_42076 = !isnan_res_42075;
            int32_t defunc_0_f_res_42077 = btoi_bool_i32(cond_42076);
            int32_t defunc_1_op_res_42073 = add32(defunc_0_f_res_42077,
                                                  redout_42482);
            int32_t redout_tmp_44503 = defunc_1_op_res_42073;
            
            redout_42482 = redout_tmp_44503;
        }
        defunc_0_f_res_42070 = redout_42482;
        pre_42068 = defunc_0_f_res_42070;
    } else {
        pre_42068 = 0;
    }
    mem_43346[(int64_t) 0] = pre_42068;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43349[1];
    int64_t ltid_42081 = sext_i32_i64(ltid_pre_44502);
    int32_t ltid_flat_42082 = local_tid_44498;
    
    mem_43349[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43353;
    
    mem_43353 = (__local char *) mem_43353_backing_0;
    
    float accs_mem_43357[1];
    float mem_param_43350[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43350[i_1] = mem_43349[i_1];
    for (int64_t tile_id_42088 = 0; tile_id_42088 < num_whole_tiles_42080;
         tile_id_42088++) {
        int64_t binop_x_42133 = segmap_group_sizze_39504 * tile_id_42088;
        int64_t ltid_42089 = sext_i32_i64(ltid_pre_44502);
        int32_t ltid_flat_42090 = local_tid_44498;
        int64_t j_42134 = ltid_42089 + binop_x_42133;
        bool cond_42138 = slt64(j_42134, i32_res_28670);
        int32_t pre_42139;
        
        if (cond_42138) {
            int32_t index_primexp_42440 = sext_i64_i32(j_42134);
            
            pre_42139 = index_primexp_42440;
        } else {
            pre_42139 = 0;
        }
        ((__local int32_t *) mem_43353)[ltid_42089] = pre_42139;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43356[1];
        int64_t ltid_42108 = sext_i32_i64(ltid_pre_44502);
        int32_t ltid_flat_42109 = local_tid_44498;
        int64_t gtid_42144 = binop_x_42065 + ltid_42108;
        float acc_42146 = mem_param_43350[(int64_t) 0];
        bool cond_42147 = slt64(gtid_42144, m_28661);
        float acc_42148;
        
        if (cond_42147) {
            int32_t defunc_0_f_res_42145 = mem_43346[(int64_t) 0];
            float x_42149;
            float redout_42484 = acc_42146;
            
            for (int64_t i_42485 = 0; i_42485 < segmap_group_sizze_39504;
                 i_42485++) {
                int32_t x_42153 = ((__local int32_t *) mem_43353)[i_42485];
                bool cond_42154 = slt32(x_42153, defunc_0_f_res_42145);
                float defunc_0_f_res_42155;
                
                if (cond_42154) {
                    int64_t i_42156 = sext_i32_i64(x_42153);
                    float defunc_0_f_res_t_res_42157 = ((__global
                                                         float *) mem_43342)[i_42156 *
                                                                             m_28661 +
                                                                             gtid_42144];
                    
                    defunc_0_f_res_42155 = defunc_0_f_res_t_res_42157;
                } else {
                    defunc_0_f_res_42155 = 0.0F;
                }
                
                float defunc_0_f_res_42158 = defunc_0_f_res_42155 *
                      defunc_0_f_res_42155;
                float defunc_1_op_res_42152 = defunc_0_f_res_42158 +
                      redout_42484;
                float redout_tmp_44506 = defunc_1_op_res_42152;
                
                redout_42484 = redout_tmp_44506;
            }
            x_42149 = redout_42484;
            acc_42148 = x_42149;
        } else {
            acc_42148 = acc_42146;
        }
        mem_43356[(int64_t) 0] = acc_42148;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44504[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44504[i_2] = mem_43356[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43350[i_3] = mem_param_tmp_44504[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43357[i_4] = mem_param_43350[i_4];
    
    __local char *mem_43360;
    
    mem_43360 = (__local char *) mem_43360_backing_5;
    
    float mem_43363[1];
    float mem_43668[1];
    
    if (cond_42170) {
        mem_43668[(int64_t) 0] = accs_mem_43357[(int64_t) 0];
    } else {
        int64_t binop_x_42180 = segmap_group_sizze_39504 *
                num_whole_tiles_42080;
        int64_t ltid_42171 = sext_i32_i64(ltid_pre_44502);
        int32_t ltid_flat_42172 = local_tid_44498;
        int64_t j_42181 = ltid_42171 + binop_x_42180;
        bool cond_42185 = slt64(j_42181, i32_res_28670);
        int32_t pre_42186;
        
        if (cond_42185) {
            int32_t index_primexp_42441 = sext_i64_i32(j_42181);
            
            pre_42186 = index_primexp_42441;
        } else {
            pre_42186 = 0;
        }
        ((__local int32_t *) mem_43360)[ltid_42171] = pre_42186;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42191 = sext_i32_i64(ltid_pre_44502);
        int32_t ltid_flat_42192 = local_tid_44498;
        int64_t gtid_42199 = binop_x_42065 + ltid_42191;
        float acc_42201 = accs_mem_43357[(int64_t) 0];
        bool cond_42202 = slt64(gtid_42199, m_28661);
        float acc_42203;
        
        if (cond_42202) {
            int32_t defunc_0_f_res_42200 = mem_43346[(int64_t) 0];
            float x_42204;
            float redout_42486 = acc_42201;
            
            for (int64_t i_42487 = 0; i_42487 < residual_input_42169;
                 i_42487++) {
                int32_t x_42208 = ((__local int32_t *) mem_43360)[i_42487];
                bool cond_42209 = slt32(x_42208, defunc_0_f_res_42200);
                float defunc_0_f_res_42210;
                
                if (cond_42209) {
                    int64_t i_42211 = sext_i32_i64(x_42208);
                    float defunc_0_f_res_t_res_42212 = ((__global
                                                         float *) mem_43342)[i_42211 *
                                                                             m_28661 +
                                                                             gtid_42199];
                    
                    defunc_0_f_res_42210 = defunc_0_f_res_t_res_42212;
                } else {
                    defunc_0_f_res_42210 = 0.0F;
                }
                
                float defunc_0_f_res_42213 = defunc_0_f_res_42210 *
                      defunc_0_f_res_42210;
                float defunc_1_op_res_42207 = defunc_0_f_res_42213 +
                      redout_42486;
                float redout_tmp_44507 = defunc_1_op_res_42207;
                
                redout_42486 = redout_tmp_44507;
            }
            x_42204 = redout_42486;
            acc_42203 = x_42204;
        } else {
            acc_42203 = acc_42201;
        }
        mem_43363[(int64_t) 0] = acc_42203;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43668[(int64_t) 0] = mem_43363[(int64_t) 0];
    }
    
    int32_t mem_43367[1];
    int32_t mem_43369[1];
    float mem_43371[1];
    int64_t ltid_42216 = sext_i32_i64(ltid_pre_44502);
    int32_t ltid_flat_42217 = local_tid_44498;
    int64_t gtid_42227 = binop_x_42065 + ltid_42216;
    bool cond_42229 = slt64(gtid_42227, m_28661);
    int32_t postlude_42230;
    int32_t postlude_42231;
    float postlude_42232;
    
    if (cond_42229) {
        float defunc_0_f_res_42228 = mem_43668[(int64_t) 0];
        int32_t defunc_0_f_res_42233 = mem_43346[(int64_t) 0];
        int32_t r32_arg_42234 = sub32(defunc_0_f_res_42233, k2p2_28672);
        float i32_res_42235 = sitofp_i32_f32(r32_arg_42234);
        float sqrt_arg_42236 = defunc_0_f_res_42228 / i32_res_42235;
        float sqrt_res_42237;
        
        sqrt_res_42237 = futrts_sqrt32(sqrt_arg_42236);
        
        float i32_res_42238 = sitofp_i32_f32(defunc_0_f_res_42233);
        float t32_arg_42239 = hfrac_28666 * i32_res_42238;
        int32_t f32_res_42240 = fptosi_f32_i32(t32_arg_42239);
        
        postlude_42230 = f32_res_42240;
        postlude_42231 = defunc_0_f_res_42233;
        postlude_42232 = sqrt_res_42237;
    } else {
        postlude_42230 = 0;
        postlude_42231 = 0;
        postlude_42232 = 0.0F;
    }
    mem_43367[(int64_t) 0] = postlude_42230;
    mem_43369[(int64_t) 0] = postlude_42231;
    mem_43371[(int64_t) 0] = postlude_42232;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44498) + segmap_group_sizze_39504 *
              sext_i32_i64(group_tid_44499), m_28661)) {
        ((__global int32_t *) mem_43373)[sext_i32_i64(local_tid_44498) +
                                         segmap_group_sizze_39504 *
                                         sext_i32_i64(group_tid_44499)] =
            mem_43367[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44498) + segmap_group_sizze_39504 *
              sext_i32_i64(group_tid_44499), m_28661)) {
        ((__global int32_t *) mem_43375)[sext_i32_i64(local_tid_44498) +
                                         segmap_group_sizze_39504 *
                                         sext_i32_i64(group_tid_44499)] =
            mem_43369[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44498) + segmap_group_sizze_39504 *
              sext_i32_i64(group_tid_44499), m_28661)) {
        ((__global float *) mem_43377)[sext_i32_i64(local_tid_44498) +
                                       segmap_group_sizze_39504 *
                                       sext_i32_i64(group_tid_44499)] =
            mem_43371[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_39504
}
__kernel void mainzisegmap_intragroup_42248(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43426_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43419_backing_aligned_1,
                                            int64_t N_28660, int64_t m_28661,
                                            int64_t i32_res_29031,
                                            int64_t num_whole_tiles_42268,
                                            int64_t residual_input_42367,
                                            unsigned char cond_42368, __global
                                            unsigned char *defunc_4_map_res_mem_43335,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43401,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43402,
                                            __global unsigned char *mem_43432)
{
    #define segmap_group_sizze_39741 (mainzisegmap_group_sizze_39722)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43426_backing_5 = (__local volatile
                                                           char *) mem_43426_backing_aligned_0;
    __local volatile char *restrict mem_43419_backing_0 = (__local volatile
                                                           char *) mem_43419_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44681;
    int32_t local_tid_44682;
    int64_t group_sizze_44685;
    int32_t wave_sizze_44684;
    int32_t group_tid_44683;
    
    global_tid_44681 = get_global_id(0);
    local_tid_44682 = get_local_id(0);
    group_sizze_44685 = get_local_size(0);
    wave_sizze_44684 = LOCKSTEP_WIDTH;
    group_tid_44683 = get_group_id(0);
    
    int32_t gid_flat_42248;
    
    gid_flat_42248 = group_tid_44683;
    
    int32_t ltid_pre_44686;
    
    ltid_pre_44686 = local_tid_44682;
    
    int64_t gid_42247;
    
    gid_42247 = sext_i32_i64(group_tid_44683);
    
    int64_t binop_x_42257;
    
    binop_x_42257 = segmap_group_sizze_39741 * gid_42247;
    
    int32_t mem_43410[1];
    int32_t mem_43412[1];
    int64_t ltid_42249 = sext_i32_i64(ltid_pre_44686);
    int32_t ltid_flat_42250 = local_tid_44682;
    int64_t gtid_42258 = ltid_42249 + binop_x_42257;
    bool cond_42259 = slt64(gtid_42258, m_28661);
    int32_t pre_42260;
    int32_t pre_42261;
    
    if (cond_42259) {
        int32_t x_42262 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_42258];
        int32_t x_42263 = ((__global
                            int32_t *) defunc_3_map_res_mem_43401)[gtid_42258];
        
        pre_42260 = x_42262;
        pre_42261 = x_42263;
    } else {
        pre_42260 = 0;
        pre_42261 = 0;
    }
    mem_43410[(int64_t) 0] = pre_42260;
    mem_43412[(int64_t) 0] = pre_42261;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43415[1];
    int64_t ltid_42269 = sext_i32_i64(ltid_pre_44686);
    int32_t ltid_flat_42270 = local_tid_44682;
    
    mem_43415[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43419;
    
    mem_43419 = (__local char *) mem_43419_backing_0;
    
    float accs_mem_43423[1];
    float mem_param_43416[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43416[i_1] = mem_43415[i_1];
    for (int64_t tile_id_42276 = 0; tile_id_42276 < num_whole_tiles_42268;
         tile_id_42276++) {
        int64_t binop_x_42325 = segmap_group_sizze_39741 * tile_id_42276;
        int64_t ltid_42277 = sext_i32_i64(ltid_pre_44686);
        int32_t ltid_flat_42278 = local_tid_44682;
        int64_t j_42326 = ltid_42277 + binop_x_42325;
        bool cond_42331 = slt64(j_42326, i32_res_29031);
        int32_t pre_42332;
        
        if (cond_42331) {
            int32_t index_primexp_42442 = sext_i64_i32(j_42326);
            int32_t tile_elem_42333 = index_primexp_42442;
            
            pre_42332 = tile_elem_42333;
        } else {
            pre_42332 = 0;
        }
        ((__local int32_t *) mem_43419)[ltid_42277] = pre_42332;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43422[1];
        int64_t ltid_42297 = sext_i32_i64(ltid_pre_44686);
        int32_t ltid_flat_42298 = local_tid_44682;
        int64_t gtid_42337 = binop_x_42257 + ltid_42297;
        float acc_42340 = mem_param_43416[(int64_t) 0];
        bool cond_42341 = slt64(gtid_42337, m_28661);
        float acc_42342;
        
        if (cond_42341) {
            int32_t x_42338 = mem_43410[(int64_t) 0];
            int32_t x_42339 = mem_43412[(int64_t) 0];
            float x_42343;
            float redout_42488 = acc_42340;
            
            for (int64_t i_42489 = 0; i_42489 < segmap_group_sizze_39741;
                 i_42489++) {
                int32_t x_42347 = ((__local int32_t *) mem_43419)[i_42489];
                bool cond_42348 = slt32(x_42347, x_42339);
                float defunc_0_f_res_42349;
                
                if (cond_42348) {
                    int32_t x_42350 = add32(x_42338, x_42347);
                    int32_t x_42351 = sub32(x_42350, x_42339);
                    int32_t i_42352 = add32(1, x_42351);
                    int64_t i_42353 = sext_i32_i64(i_42352);
                    float defunc_0_f_res_t_res_42354 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_42337 *
                                                                                              N_28660 +
                                                                                              i_42353];
                    
                    defunc_0_f_res_42349 = defunc_0_f_res_t_res_42354;
                } else {
                    defunc_0_f_res_42349 = 0.0F;
                }
                
                float defunc_1_op_res_42346 = defunc_0_f_res_42349 +
                      redout_42488;
                float redout_tmp_44689 = defunc_1_op_res_42346;
                
                redout_42488 = redout_tmp_44689;
            }
            x_42343 = redout_42488;
            acc_42342 = x_42343;
        } else {
            acc_42342 = acc_42340;
        }
        mem_43422[(int64_t) 0] = acc_42342;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44687[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44687[i_2] = mem_43422[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43416[i_3] = mem_param_tmp_44687[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43423[i_4] = mem_param_43416[i_4];
    
    __local char *mem_43426;
    
    mem_43426 = (__local char *) mem_43426_backing_5;
    
    float mem_43429[1];
    float mem_43677[1];
    
    if (cond_42368) {
        mem_43677[(int64_t) 0] = accs_mem_43423[(int64_t) 0];
    } else {
        int64_t binop_x_42378 = segmap_group_sizze_39741 *
                num_whole_tiles_42268;
        int64_t ltid_42369 = sext_i32_i64(ltid_pre_44686);
        int32_t ltid_flat_42370 = local_tid_44682;
        int64_t j_42379 = ltid_42369 + binop_x_42378;
        bool cond_42384 = slt64(j_42379, i32_res_29031);
        int32_t pre_42385;
        
        if (cond_42384) {
            int32_t index_primexp_42443 = sext_i64_i32(j_42379);
            int32_t tile_elem_42386 = index_primexp_42443;
            
            pre_42385 = tile_elem_42386;
        } else {
            pre_42385 = 0;
        }
        ((__local int32_t *) mem_43426)[ltid_42369] = pre_42385;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42390 = sext_i32_i64(ltid_pre_44686);
        int32_t ltid_flat_42391 = local_tid_44682;
        int64_t gtid_42398 = binop_x_42257 + ltid_42390;
        float acc_42401 = accs_mem_43423[(int64_t) 0];
        bool cond_42402 = slt64(gtid_42398, m_28661);
        float acc_42403;
        
        if (cond_42402) {
            int32_t x_42399 = mem_43410[(int64_t) 0];
            int32_t x_42400 = mem_43412[(int64_t) 0];
            float x_42404;
            float redout_42490 = acc_42401;
            
            for (int64_t i_42491 = 0; i_42491 < residual_input_42367;
                 i_42491++) {
                int32_t x_42408 = ((__local int32_t *) mem_43426)[i_42491];
                bool cond_42409 = slt32(x_42408, x_42400);
                float defunc_0_f_res_42410;
                
                if (cond_42409) {
                    int32_t x_42411 = add32(x_42399, x_42408);
                    int32_t x_42412 = sub32(x_42411, x_42400);
                    int32_t i_42413 = add32(1, x_42412);
                    int64_t i_42414 = sext_i32_i64(i_42413);
                    float defunc_0_f_res_t_res_42415 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_42398 *
                                                                                              N_28660 +
                                                                                              i_42414];
                    
                    defunc_0_f_res_42410 = defunc_0_f_res_t_res_42415;
                } else {
                    defunc_0_f_res_42410 = 0.0F;
                }
                
                float defunc_1_op_res_42407 = defunc_0_f_res_42410 +
                      redout_42490;
                float redout_tmp_44690 = defunc_1_op_res_42407;
                
                redout_42490 = redout_tmp_44690;
            }
            x_42404 = redout_42490;
            acc_42403 = x_42404;
        } else {
            acc_42403 = acc_42401;
        }
        mem_43429[(int64_t) 0] = acc_42403;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43677[(int64_t) 0] = mem_43429[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44682) + segmap_group_sizze_39741 *
              sext_i32_i64(group_tid_44683), m_28661)) {
        ((__global float *) mem_43432)[sext_i32_i64(local_tid_44682) +
                                       segmap_group_sizze_39741 *
                                       sext_i32_i64(group_tid_44683)] =
            mem_43677[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_39741
}
__kernel void mainzisegred_large_37716(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_43950_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_43948_backing_aligned_1,
                                       int64_t N_28660, int64_t i32_res_28670,
                                       int64_t i32_res_28676,
                                       int64_t num_groups_37855,
                                       int64_t groups_per_segment_43934,
                                       int64_t elements_per_thread_43935,
                                       int64_t virt_num_groups_43936,
                                       int64_t threads_per_segment_43938,
                                       __global unsigned char *images_mem_42538,
                                       __global
                                       unsigned char *binop_p_mem_42547,
                                       __global unsigned char *mem_42688,
                                       __global unsigned char *mem_42693,
                                       __global
                                       unsigned char *group_res_arr_mem_43939,
                                       __global
                                       unsigned char *mainzicounter_mem_43941)
{
    #define segred_group_sizze_37854 (mainzisegred_group_sizze_37710)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_43950_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_43950_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_43948_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43948_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43943;
    int32_t local_tid_43944;
    int64_t group_sizze_43947;
    int32_t wave_sizze_43946;
    int32_t group_tid_43945;
    
    global_tid_43943 = get_global_id(0);
    local_tid_43944 = get_local_id(0);
    group_sizze_43947 = get_local_size(0);
    wave_sizze_43946 = LOCKSTEP_WIDTH;
    group_tid_43945 = get_group_id(0);
    
    int32_t phys_tid_37716;
    
    phys_tid_37716 = global_tid_43943;
    
    __local char *red_arr_mem_43948;
    
    red_arr_mem_43948 = (__local char *) red_arr_mem_43948_backing_0;
    
    __local char *sync_arr_mem_43950;
    
    sync_arr_mem_43950 = (__local char *) sync_arr_mem_43950_backing_1;
    
    int32_t phys_group_id_43952;
    
    phys_group_id_43952 = get_group_id(0);
    for (int32_t i_43953 = 0; i_43953 <
         sdiv_up32(sext_i64_i32(virt_num_groups_43936) - phys_group_id_43952,
                   sext_i64_i32(num_groups_37855)); i_43953++) {
        int32_t virt_group_id_43954 = phys_group_id_43952 + i_43953 *
                sext_i64_i32(num_groups_37855);
        int32_t flat_segment_id_43955 = squot32(virt_group_id_43954,
                                                sext_i64_i32(groups_per_segment_43934));
        int64_t global_tid_43956 = srem64(sext_i32_i64(virt_group_id_43954) *
                                          segred_group_sizze_37854 +
                                          sext_i32_i64(local_tid_43944),
                                          segred_group_sizze_37854 *
                                          groups_per_segment_43934);
        int64_t gtid_37703 = squot64(sext_i32_i64(flat_segment_id_43955),
                                     i32_res_28676 * i32_res_28676);
        int64_t gtid_37704 = squot64(sext_i32_i64(flat_segment_id_43955) -
                                     squot64(sext_i32_i64(flat_segment_id_43955),
                                             i32_res_28676 * i32_res_28676) *
                                     (i32_res_28676 * i32_res_28676),
                                     i32_res_28676);
        int64_t gtid_37705 = sext_i32_i64(flat_segment_id_43955) -
                squot64(sext_i32_i64(flat_segment_id_43955), i32_res_28676 *
                        i32_res_28676) * (i32_res_28676 * i32_res_28676) -
                squot64(sext_i32_i64(flat_segment_id_43955) -
                        squot64(sext_i32_i64(flat_segment_id_43955),
                                i32_res_28676 * i32_res_28676) *
                        (i32_res_28676 * i32_res_28676), i32_res_28676) *
                i32_res_28676;
        int64_t gtid_37715;
        float x_acc_43957;
        int64_t chunk_sizze_43958;
        
        chunk_sizze_43958 = smin64(elements_per_thread_43935,
                                   sdiv_up64(i32_res_28670 -
                                             sext_i32_i64(sext_i64_i32(global_tid_43956)),
                                             threads_per_segment_43938));
        
        float x_37858;
        float x_37859;
        
        // neutral-initialise the accumulators
        {
            x_acc_43957 = 0.0F;
        }
        for (int64_t i_43962 = 0; i_43962 < chunk_sizze_43958; i_43962++) {
            gtid_37715 = sext_i32_i64(sext_i64_i32(global_tid_43956)) +
                threads_per_segment_43938 * i_43962;
            // apply map function
            {
                float x_37864 = ((__global
                                  float *) images_mem_42538)[gtid_37703 *
                                                             N_28660 +
                                                             gtid_37715];
                float x_37865 = ((__global
                                  float *) binop_p_mem_42547)[gtid_37704 *
                                                              N_28660 +
                                                              gtid_37715];
                float x_37866 = ((__global float *) mem_42688)[gtid_37705 *
                                                               N_28660 +
                                                               gtid_37715];
                float x_37867 = x_37865 * x_37866;
                bool isnan_res_37868;
                
                isnan_res_37868 = futrts_isnan32(x_37864);
                
                float y_37869;
                
                if (isnan_res_37868) {
                    y_37869 = 0.0F;
                } else {
                    y_37869 = 1.0F;
                }
                
                float defunc_2_f_res_37870 = x_37867 * y_37869;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_37858 = x_acc_43957;
                }
                // load new values
                {
                    x_37859 = defunc_2_f_res_37870;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_37860 = x_37858 + x_37859;
                    
                    // store in accumulator
                    {
                        x_acc_43957 = defunc_1_op_res_37860;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_37858 = x_acc_43957;
            ((__local
              float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944)] =
                x_37858;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_43963;
        int32_t skip_waves_43964;
        
        skip_waves_43964 = 1;
        
        float x_43959;
        float x_43960;
        
        offset_43963 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_43944,
                      sext_i64_i32(segred_group_sizze_37854))) {
                x_43959 = ((__local
                            float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944 +
                                                        offset_43963)];
            }
        }
        offset_43963 = 1;
        while (slt32(offset_43963, wave_sizze_43946)) {
            if (slt32(local_tid_43944 + offset_43963,
                      sext_i64_i32(segred_group_sizze_37854)) &&
                ((local_tid_43944 - squot32(local_tid_43944, wave_sizze_43946) *
                  wave_sizze_43946) & (2 * offset_43963 - 1)) == 0) {
                // read array element
                {
                    x_43960 = ((volatile __local
                                float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944 +
                                                            offset_43963)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43961 = x_43959 + x_43960;
                    
                    x_43959 = defunc_1_op_res_43961;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944)] =
                        x_43959;
                }
            }
            offset_43963 *= 2;
        }
        while (slt32(skip_waves_43964,
                     squot32(sext_i64_i32(segred_group_sizze_37854) +
                             wave_sizze_43946 - 1, wave_sizze_43946))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_43963 = skip_waves_43964 * wave_sizze_43946;
            if (slt32(local_tid_43944 + offset_43963,
                      sext_i64_i32(segred_group_sizze_37854)) &&
                ((local_tid_43944 - squot32(local_tid_43944, wave_sizze_43946) *
                  wave_sizze_43946) == 0 && (squot32(local_tid_43944,
                                                     wave_sizze_43946) & (2 *
                                                                          skip_waves_43964 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_43960 = ((__local
                                float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944 +
                                                            offset_43963)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43961 = x_43959 + x_43960;
                    
                    x_43959 = defunc_1_op_res_43961;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944)] =
                        x_43959;
                }
            }
            skip_waves_43964 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_43944) == (int64_t) 0) {
                x_acc_43957 = x_43959;
            }
        }
        if (groups_per_segment_43934 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_43944 == 0) {
                    ((__global float *) mem_42693)[gtid_37703 * (i32_res_28676 *
                                                                 i32_res_28676) +
                                                   gtid_37704 * i32_res_28676 +
                                                   gtid_37705] = x_acc_43957;
                }
            }
        } else {
            int32_t old_counter_43965;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_43944 == 0) {
                    ((__global
                      float *) group_res_arr_mem_43939)[sext_i32_i64(virt_group_id_43954) *
                                                        segred_group_sizze_37854] =
                        x_acc_43957;
                    mem_fence_global();
                    old_counter_43965 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_43941)[sext_i32_i64(srem32(flat_segment_id_43955,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_43950)[(int64_t) 0] =
                        old_counter_43965 == groups_per_segment_43934 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_43966;
            
            is_last_group_43966 = ((__local
                                    bool *) sync_arr_mem_43950)[(int64_t) 0];
            if (is_last_group_43966) {
                if (local_tid_43944 == 0) {
                    old_counter_43965 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_43941)[sext_i32_i64(srem32(flat_segment_id_43955,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_43934));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_43967 =
                            sdiv_up64(groups_per_segment_43934,
                                      segred_group_sizze_37854);
                    
                    x_37858 = 0.0F;
                    for (int64_t i_43968 = 0; i_43968 < read_per_thread_43967;
                         i_43968++) {
                        int64_t group_res_id_43969 =
                                sext_i32_i64(local_tid_43944) *
                                read_per_thread_43967 + i_43968;
                        int64_t index_of_group_res_43970 =
                                sext_i32_i64(flat_segment_id_43955) *
                                groups_per_segment_43934 + group_res_id_43969;
                        
                        if (slt64(group_res_id_43969,
                                  groups_per_segment_43934)) {
                            x_37859 = ((__global
                                        float *) group_res_arr_mem_43939)[index_of_group_res_43970 *
                                                                          segred_group_sizze_37854];
                            
                            float defunc_1_op_res_37860;
                            
                            defunc_1_op_res_37860 = x_37858 + x_37859;
                            x_37858 = defunc_1_op_res_37860;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944)] =
                    x_37858;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_43971;
                    int32_t skip_waves_43972;
                    
                    skip_waves_43972 = 1;
                    
                    float x_43959;
                    float x_43960;
                    
                    offset_43971 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_43944,
                                  sext_i64_i32(segred_group_sizze_37854))) {
                            x_43959 = ((__local
                                        float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944 +
                                                                    offset_43971)];
                        }
                    }
                    offset_43971 = 1;
                    while (slt32(offset_43971, wave_sizze_43946)) {
                        if (slt32(local_tid_43944 + offset_43971,
                                  sext_i64_i32(segred_group_sizze_37854)) &&
                            ((local_tid_43944 - squot32(local_tid_43944,
                                                        wave_sizze_43946) *
                              wave_sizze_43946) & (2 * offset_43971 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_43960 = ((volatile __local
                                            float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944 +
                                                                        offset_43971)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43961 = x_43959 + x_43960;
                                
                                x_43959 = defunc_1_op_res_43961;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944)] =
                                    x_43959;
                            }
                        }
                        offset_43971 *= 2;
                    }
                    while (slt32(skip_waves_43972,
                                 squot32(sext_i64_i32(segred_group_sizze_37854) +
                                         wave_sizze_43946 - 1,
                                         wave_sizze_43946))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_43971 = skip_waves_43972 * wave_sizze_43946;
                        if (slt32(local_tid_43944 + offset_43971,
                                  sext_i64_i32(segred_group_sizze_37854)) &&
                            ((local_tid_43944 - squot32(local_tid_43944,
                                                        wave_sizze_43946) *
                              wave_sizze_43946) == 0 &&
                             (squot32(local_tid_43944, wave_sizze_43946) & (2 *
                                                                            skip_waves_43972 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_43960 = ((__local
                                            float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944 +
                                                                        offset_43971)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43961 = x_43959 + x_43960;
                                
                                x_43959 = defunc_1_op_res_43961;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_43948)[sext_i32_i64(local_tid_43944)] =
                                    x_43959;
                            }
                        }
                        skip_waves_43972 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_43944 == 0) {
                            ((__global float *) mem_42693)[gtid_37703 *
                                                           (i32_res_28676 *
                                                            i32_res_28676) +
                                                           gtid_37704 *
                                                           i32_res_28676 +
                                                           gtid_37705] =
                                x_43959;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37854
}
__kernel void mainzisegred_large_38763(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44147_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44145_backing_aligned_1,
                                       int64_t N_28660, int64_t i32_res_28670,
                                       int64_t i32_res_28676,
                                       int64_t num_groups_38816,
                                       int64_t groups_per_segment_44131,
                                       int64_t elements_per_thread_44132,
                                       int64_t virt_num_groups_44133,
                                       int64_t threads_per_segment_44135,
                                       __global unsigned char *images_mem_42538,
                                       __global
                                       unsigned char *binop_p_mem_42547,
                                       __global unsigned char *mem_43001,
                                       __global
                                       unsigned char *group_res_arr_mem_44136,
                                       __global
                                       unsigned char *mainzicounter_mem_44138)
{
    #define segred_group_sizze_38815 (mainzisegred_group_sizze_38757)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44147_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44147_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44145_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44145_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44140;
    int32_t local_tid_44141;
    int64_t group_sizze_44144;
    int32_t wave_sizze_44143;
    int32_t group_tid_44142;
    
    global_tid_44140 = get_global_id(0);
    local_tid_44141 = get_local_id(0);
    group_sizze_44144 = get_local_size(0);
    wave_sizze_44143 = LOCKSTEP_WIDTH;
    group_tid_44142 = get_group_id(0);
    
    int32_t phys_tid_38763;
    
    phys_tid_38763 = global_tid_44140;
    
    __local char *red_arr_mem_44145;
    
    red_arr_mem_44145 = (__local char *) red_arr_mem_44145_backing_0;
    
    __local char *sync_arr_mem_44147;
    
    sync_arr_mem_44147 = (__local char *) sync_arr_mem_44147_backing_1;
    
    int32_t phys_group_id_44149;
    
    phys_group_id_44149 = get_group_id(0);
    for (int32_t i_44150 = 0; i_44150 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44133) - phys_group_id_44149,
                   sext_i64_i32(num_groups_38816)); i_44150++) {
        int32_t virt_group_id_44151 = phys_group_id_44149 + i_44150 *
                sext_i64_i32(num_groups_38816);
        int32_t flat_segment_id_44152 = squot32(virt_group_id_44151,
                                                sext_i64_i32(groups_per_segment_44131));
        int64_t global_tid_44153 = srem64(sext_i32_i64(virt_group_id_44151) *
                                          segred_group_sizze_38815 +
                                          sext_i32_i64(local_tid_44141),
                                          segred_group_sizze_38815 *
                                          groups_per_segment_44131);
        int64_t gtid_38752 = squot64(sext_i32_i64(flat_segment_id_44152),
                                     i32_res_28676);
        int64_t gtid_38753 = sext_i32_i64(flat_segment_id_44152) -
                squot64(sext_i32_i64(flat_segment_id_44152), i32_res_28676) *
                i32_res_28676;
        int64_t gtid_38762;
        float x_acc_44154;
        int64_t chunk_sizze_44155;
        
        chunk_sizze_44155 = smin64(elements_per_thread_44132,
                                   sdiv_up64(i32_res_28670 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44153)),
                                             threads_per_segment_44135));
        
        float x_38819;
        float x_38820;
        
        // neutral-initialise the accumulators
        {
            x_acc_44154 = 0.0F;
        }
        for (int64_t i_44159 = 0; i_44159 < chunk_sizze_44155; i_44159++) {
            gtid_38762 = sext_i32_i64(sext_i64_i32(global_tid_44153)) +
                threads_per_segment_44135 * i_44159;
            // apply map function
            {
                float x_38825 = ((__global
                                  float *) images_mem_42538)[gtid_38752 *
                                                             N_28660 +
                                                             gtid_38762];
                bool isnan_res_38826;
                
                isnan_res_38826 = futrts_isnan32(x_38825);
                
                float defunc_1_f_res_38827;
                
                if (isnan_res_38826) {
                    defunc_1_f_res_38827 = 0.0F;
                } else {
                    float x_38824 = ((__global
                                      float *) binop_p_mem_42547)[gtid_38753 *
                                                                  N_28660 +
                                                                  gtid_38762];
                    float defunc_1_f_res_f_res_38828 = x_38824 * x_38825;
                    
                    defunc_1_f_res_38827 = defunc_1_f_res_f_res_38828;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_38819 = x_acc_44154;
                }
                // load new values
                {
                    x_38820 = defunc_1_f_res_38827;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38821 = x_38819 + x_38820;
                    
                    // store in accumulator
                    {
                        x_acc_44154 = defunc_1_op_res_38821;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38819 = x_acc_44154;
            ((__local
              float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141)] =
                x_38819;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44160;
        int32_t skip_waves_44161;
        
        skip_waves_44161 = 1;
        
        float x_44156;
        float x_44157;
        
        offset_44160 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44141,
                      sext_i64_i32(segred_group_sizze_38815))) {
                x_44156 = ((__local
                            float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141 +
                                                        offset_44160)];
            }
        }
        offset_44160 = 1;
        while (slt32(offset_44160, wave_sizze_44143)) {
            if (slt32(local_tid_44141 + offset_44160,
                      sext_i64_i32(segred_group_sizze_38815)) &&
                ((local_tid_44141 - squot32(local_tid_44141, wave_sizze_44143) *
                  wave_sizze_44143) & (2 * offset_44160 - 1)) == 0) {
                // read array element
                {
                    x_44157 = ((volatile __local
                                float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141 +
                                                            offset_44160)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44158 = x_44156 + x_44157;
                    
                    x_44156 = defunc_1_op_res_44158;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141)] =
                        x_44156;
                }
            }
            offset_44160 *= 2;
        }
        while (slt32(skip_waves_44161,
                     squot32(sext_i64_i32(segred_group_sizze_38815) +
                             wave_sizze_44143 - 1, wave_sizze_44143))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44160 = skip_waves_44161 * wave_sizze_44143;
            if (slt32(local_tid_44141 + offset_44160,
                      sext_i64_i32(segred_group_sizze_38815)) &&
                ((local_tid_44141 - squot32(local_tid_44141, wave_sizze_44143) *
                  wave_sizze_44143) == 0 && (squot32(local_tid_44141,
                                                     wave_sizze_44143) & (2 *
                                                                          skip_waves_44161 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44157 = ((__local
                                float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141 +
                                                            offset_44160)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44158 = x_44156 + x_44157;
                    
                    x_44156 = defunc_1_op_res_44158;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141)] =
                        x_44156;
                }
            }
            skip_waves_44161 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44141) == (int64_t) 0) {
                x_acc_44154 = x_44156;
            }
        }
        if (groups_per_segment_44131 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44141 == 0) {
                    ((__global float *) mem_43001)[gtid_38752 * i32_res_28676 +
                                                   gtid_38753] = x_acc_44154;
                }
            }
        } else {
            int32_t old_counter_44162;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44141 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44136)[sext_i32_i64(virt_group_id_44151) *
                                                        segred_group_sizze_38815] =
                        x_acc_44154;
                    mem_fence_global();
                    old_counter_44162 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44138)[sext_i32_i64(srem32(flat_segment_id_44152,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44147)[(int64_t) 0] =
                        old_counter_44162 == groups_per_segment_44131 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44163;
            
            is_last_group_44163 = ((__local
                                    bool *) sync_arr_mem_44147)[(int64_t) 0];
            if (is_last_group_44163) {
                if (local_tid_44141 == 0) {
                    old_counter_44162 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44138)[sext_i32_i64(srem32(flat_segment_id_44152,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44131));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44164 =
                            sdiv_up64(groups_per_segment_44131,
                                      segred_group_sizze_38815);
                    
                    x_38819 = 0.0F;
                    for (int64_t i_44165 = 0; i_44165 < read_per_thread_44164;
                         i_44165++) {
                        int64_t group_res_id_44166 =
                                sext_i32_i64(local_tid_44141) *
                                read_per_thread_44164 + i_44165;
                        int64_t index_of_group_res_44167 =
                                sext_i32_i64(flat_segment_id_44152) *
                                groups_per_segment_44131 + group_res_id_44166;
                        
                        if (slt64(group_res_id_44166,
                                  groups_per_segment_44131)) {
                            x_38820 = ((__global
                                        float *) group_res_arr_mem_44136)[index_of_group_res_44167 *
                                                                          segred_group_sizze_38815];
                            
                            float defunc_1_op_res_38821;
                            
                            defunc_1_op_res_38821 = x_38819 + x_38820;
                            x_38819 = defunc_1_op_res_38821;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141)] =
                    x_38819;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44168;
                    int32_t skip_waves_44169;
                    
                    skip_waves_44169 = 1;
                    
                    float x_44156;
                    float x_44157;
                    
                    offset_44168 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44141,
                                  sext_i64_i32(segred_group_sizze_38815))) {
                            x_44156 = ((__local
                                        float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141 +
                                                                    offset_44168)];
                        }
                    }
                    offset_44168 = 1;
                    while (slt32(offset_44168, wave_sizze_44143)) {
                        if (slt32(local_tid_44141 + offset_44168,
                                  sext_i64_i32(segred_group_sizze_38815)) &&
                            ((local_tid_44141 - squot32(local_tid_44141,
                                                        wave_sizze_44143) *
                              wave_sizze_44143) & (2 * offset_44168 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44157 = ((volatile __local
                                            float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141 +
                                                                        offset_44168)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44158 = x_44156 + x_44157;
                                
                                x_44156 = defunc_1_op_res_44158;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141)] =
                                    x_44156;
                            }
                        }
                        offset_44168 *= 2;
                    }
                    while (slt32(skip_waves_44169,
                                 squot32(sext_i64_i32(segred_group_sizze_38815) +
                                         wave_sizze_44143 - 1,
                                         wave_sizze_44143))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44168 = skip_waves_44169 * wave_sizze_44143;
                        if (slt32(local_tid_44141 + offset_44168,
                                  sext_i64_i32(segred_group_sizze_38815)) &&
                            ((local_tid_44141 - squot32(local_tid_44141,
                                                        wave_sizze_44143) *
                              wave_sizze_44143) == 0 &&
                             (squot32(local_tid_44141, wave_sizze_44143) & (2 *
                                                                            skip_waves_44169 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44157 = ((__local
                                            float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141 +
                                                                        offset_44168)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44158 = x_44156 + x_44157;
                                
                                x_44156 = defunc_1_op_res_44158;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44145)[sext_i32_i64(local_tid_44141)] =
                                    x_44156;
                            }
                        }
                        skip_waves_44169 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44141 == 0) {
                            ((__global float *) mem_43001)[gtid_38752 *
                                                           i32_res_28676 +
                                                           gtid_38753] =
                                x_44156;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38815
}
__kernel void mainzisegred_large_38900(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44235_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44233_backing_aligned_1,
                                       int64_t i32_res_28676,
                                       int64_t num_groups_38949,
                                       int64_t groups_per_segment_44219,
                                       int64_t elements_per_thread_44220,
                                       int64_t virt_num_groups_44221,
                                       int64_t threads_per_segment_44223,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_42786,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43007,
                                       __global unsigned char *mem_43067,
                                       __global
                                       unsigned char *group_res_arr_mem_44224,
                                       __global
                                       unsigned char *mainzicounter_mem_44226)
{
    #define segred_group_sizze_38948 (mainzisegred_group_sizze_38894)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44235_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44235_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44233_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44233_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44228;
    int32_t local_tid_44229;
    int64_t group_sizze_44232;
    int32_t wave_sizze_44231;
    int32_t group_tid_44230;
    
    global_tid_44228 = get_global_id(0);
    local_tid_44229 = get_local_id(0);
    group_sizze_44232 = get_local_size(0);
    wave_sizze_44231 = LOCKSTEP_WIDTH;
    group_tid_44230 = get_group_id(0);
    
    int32_t phys_tid_38900;
    
    phys_tid_38900 = global_tid_44228;
    
    __local char *red_arr_mem_44233;
    
    red_arr_mem_44233 = (__local char *) red_arr_mem_44233_backing_0;
    
    __local char *sync_arr_mem_44235;
    
    sync_arr_mem_44235 = (__local char *) sync_arr_mem_44235_backing_1;
    
    int32_t phys_group_id_44237;
    
    phys_group_id_44237 = get_group_id(0);
    for (int32_t i_44238 = 0; i_44238 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44221) - phys_group_id_44237,
                   sext_i64_i32(num_groups_38949)); i_44238++) {
        int32_t virt_group_id_44239 = phys_group_id_44237 + i_44238 *
                sext_i64_i32(num_groups_38949);
        int32_t flat_segment_id_44240 = squot32(virt_group_id_44239,
                                                sext_i64_i32(groups_per_segment_44219));
        int64_t global_tid_44241 = srem64(sext_i32_i64(virt_group_id_44239) *
                                          segred_group_sizze_38948 +
                                          sext_i32_i64(local_tid_44229),
                                          segred_group_sizze_38948 *
                                          groups_per_segment_44219);
        int64_t gtid_38889 = squot64(sext_i32_i64(flat_segment_id_44240),
                                     i32_res_28676);
        int64_t gtid_38890 = sext_i32_i64(flat_segment_id_44240) -
                squot64(sext_i32_i64(flat_segment_id_44240), i32_res_28676) *
                i32_res_28676;
        int64_t gtid_38899;
        float x_acc_44242;
        int64_t chunk_sizze_44243;
        
        chunk_sizze_44243 = smin64(elements_per_thread_44220,
                                   sdiv_up64(i32_res_28676 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44241)),
                                             threads_per_segment_44223));
        
        float x_38952;
        float x_38953;
        
        // neutral-initialise the accumulators
        {
            x_acc_44242 = 0.0F;
        }
        for (int64_t i_44247 = 0; i_44247 < chunk_sizze_44243; i_44247++) {
            gtid_38899 = sext_i32_i64(sext_i64_i32(global_tid_44241)) +
                threads_per_segment_44223 * i_44247;
            // apply map function
            {
                float x_38958 = ((__global
                                  float *) defunc_3_map_res_mem_43007)[gtid_38889 *
                                                                       i32_res_28676 +
                                                                       gtid_38899];
                float x_38959 = ((__global
                                  float *) defunc_3_map_res_mem_42786)[gtid_38889 *
                                                                       (i32_res_28676 *
                                                                        i32_res_28676) +
                                                                       gtid_38890 *
                                                                       i32_res_28676 +
                                                                       gtid_38899];
                float defunc_1_f_res_38960 = x_38958 * x_38959;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38952 = x_acc_44242;
                }
                // load new values
                {
                    x_38953 = defunc_1_f_res_38960;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38954 = x_38952 + x_38953;
                    
                    // store in accumulator
                    {
                        x_acc_44242 = defunc_1_op_res_38954;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38952 = x_acc_44242;
            ((__local
              float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229)] =
                x_38952;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44248;
        int32_t skip_waves_44249;
        
        skip_waves_44249 = 1;
        
        float x_44244;
        float x_44245;
        
        offset_44248 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44229,
                      sext_i64_i32(segred_group_sizze_38948))) {
                x_44244 = ((__local
                            float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229 +
                                                        offset_44248)];
            }
        }
        offset_44248 = 1;
        while (slt32(offset_44248, wave_sizze_44231)) {
            if (slt32(local_tid_44229 + offset_44248,
                      sext_i64_i32(segred_group_sizze_38948)) &&
                ((local_tid_44229 - squot32(local_tid_44229, wave_sizze_44231) *
                  wave_sizze_44231) & (2 * offset_44248 - 1)) == 0) {
                // read array element
                {
                    x_44245 = ((volatile __local
                                float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229 +
                                                            offset_44248)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44246 = x_44244 + x_44245;
                    
                    x_44244 = defunc_1_op_res_44246;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229)] =
                        x_44244;
                }
            }
            offset_44248 *= 2;
        }
        while (slt32(skip_waves_44249,
                     squot32(sext_i64_i32(segred_group_sizze_38948) +
                             wave_sizze_44231 - 1, wave_sizze_44231))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44248 = skip_waves_44249 * wave_sizze_44231;
            if (slt32(local_tid_44229 + offset_44248,
                      sext_i64_i32(segred_group_sizze_38948)) &&
                ((local_tid_44229 - squot32(local_tid_44229, wave_sizze_44231) *
                  wave_sizze_44231) == 0 && (squot32(local_tid_44229,
                                                     wave_sizze_44231) & (2 *
                                                                          skip_waves_44249 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44245 = ((__local
                                float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229 +
                                                            offset_44248)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44246 = x_44244 + x_44245;
                    
                    x_44244 = defunc_1_op_res_44246;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229)] =
                        x_44244;
                }
            }
            skip_waves_44249 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44229) == (int64_t) 0) {
                x_acc_44242 = x_44244;
            }
        }
        if (groups_per_segment_44219 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44229 == 0) {
                    ((__global float *) mem_43067)[gtid_38889 * i32_res_28676 +
                                                   gtid_38890] = x_acc_44242;
                }
            }
        } else {
            int32_t old_counter_44250;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44229 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44224)[sext_i32_i64(virt_group_id_44239) *
                                                        segred_group_sizze_38948] =
                        x_acc_44242;
                    mem_fence_global();
                    old_counter_44250 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44226)[sext_i32_i64(srem32(flat_segment_id_44240,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44235)[(int64_t) 0] =
                        old_counter_44250 == groups_per_segment_44219 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44251;
            
            is_last_group_44251 = ((__local
                                    bool *) sync_arr_mem_44235)[(int64_t) 0];
            if (is_last_group_44251) {
                if (local_tid_44229 == 0) {
                    old_counter_44250 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44226)[sext_i32_i64(srem32(flat_segment_id_44240,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44219));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44252 =
                            sdiv_up64(groups_per_segment_44219,
                                      segred_group_sizze_38948);
                    
                    x_38952 = 0.0F;
                    for (int64_t i_44253 = 0; i_44253 < read_per_thread_44252;
                         i_44253++) {
                        int64_t group_res_id_44254 =
                                sext_i32_i64(local_tid_44229) *
                                read_per_thread_44252 + i_44253;
                        int64_t index_of_group_res_44255 =
                                sext_i32_i64(flat_segment_id_44240) *
                                groups_per_segment_44219 + group_res_id_44254;
                        
                        if (slt64(group_res_id_44254,
                                  groups_per_segment_44219)) {
                            x_38953 = ((__global
                                        float *) group_res_arr_mem_44224)[index_of_group_res_44255 *
                                                                          segred_group_sizze_38948];
                            
                            float defunc_1_op_res_38954;
                            
                            defunc_1_op_res_38954 = x_38952 + x_38953;
                            x_38952 = defunc_1_op_res_38954;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229)] =
                    x_38952;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44256;
                    int32_t skip_waves_44257;
                    
                    skip_waves_44257 = 1;
                    
                    float x_44244;
                    float x_44245;
                    
                    offset_44256 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44229,
                                  sext_i64_i32(segred_group_sizze_38948))) {
                            x_44244 = ((__local
                                        float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229 +
                                                                    offset_44256)];
                        }
                    }
                    offset_44256 = 1;
                    while (slt32(offset_44256, wave_sizze_44231)) {
                        if (slt32(local_tid_44229 + offset_44256,
                                  sext_i64_i32(segred_group_sizze_38948)) &&
                            ((local_tid_44229 - squot32(local_tid_44229,
                                                        wave_sizze_44231) *
                              wave_sizze_44231) & (2 * offset_44256 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44245 = ((volatile __local
                                            float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229 +
                                                                        offset_44256)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44246 = x_44244 + x_44245;
                                
                                x_44244 = defunc_1_op_res_44246;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229)] =
                                    x_44244;
                            }
                        }
                        offset_44256 *= 2;
                    }
                    while (slt32(skip_waves_44257,
                                 squot32(sext_i64_i32(segred_group_sizze_38948) +
                                         wave_sizze_44231 - 1,
                                         wave_sizze_44231))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44256 = skip_waves_44257 * wave_sizze_44231;
                        if (slt32(local_tid_44229 + offset_44256,
                                  sext_i64_i32(segred_group_sizze_38948)) &&
                            ((local_tid_44229 - squot32(local_tid_44229,
                                                        wave_sizze_44231) *
                              wave_sizze_44231) == 0 &&
                             (squot32(local_tid_44229, wave_sizze_44231) & (2 *
                                                                            skip_waves_44257 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44245 = ((__local
                                            float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229 +
                                                                        offset_44256)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44246 = x_44244 + x_44245;
                                
                                x_44244 = defunc_1_op_res_44246;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44233)[sext_i32_i64(local_tid_44229)] =
                                    x_44244;
                            }
                        }
                        skip_waves_44257 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44229 == 0) {
                            ((__global float *) mem_43067)[gtid_38889 *
                                                           i32_res_28676 +
                                                           gtid_38890] =
                                x_44244;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38948
}
__kernel void mainzisegred_large_39030(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44367_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44365_backing_aligned_1,
                                       int64_t N_28660, int64_t i32_res_28676,
                                       int64_t num_groups_39077,
                                       int64_t groups_per_segment_44351,
                                       int64_t elements_per_thread_44352,
                                       int64_t virt_num_groups_44353,
                                       int64_t threads_per_segment_44355,
                                       __global unsigned char *mem_42554,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43073,
                                       __global unsigned char *mem_43291,
                                       __global
                                       unsigned char *group_res_arr_mem_44356,
                                       __global
                                       unsigned char *mainzicounter_mem_44358)
{
    #define segred_group_sizze_39076 (mainzisegred_group_sizze_39024)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44367_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44367_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44365_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44365_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44360;
    int32_t local_tid_44361;
    int64_t group_sizze_44364;
    int32_t wave_sizze_44363;
    int32_t group_tid_44362;
    
    global_tid_44360 = get_global_id(0);
    local_tid_44361 = get_local_id(0);
    group_sizze_44364 = get_local_size(0);
    wave_sizze_44363 = LOCKSTEP_WIDTH;
    group_tid_44362 = get_group_id(0);
    
    int32_t phys_tid_39030;
    
    phys_tid_39030 = global_tid_44360;
    
    __local char *red_arr_mem_44365;
    
    red_arr_mem_44365 = (__local char *) red_arr_mem_44365_backing_0;
    
    __local char *sync_arr_mem_44367;
    
    sync_arr_mem_44367 = (__local char *) sync_arr_mem_44367_backing_1;
    
    int32_t phys_group_id_44369;
    
    phys_group_id_44369 = get_group_id(0);
    for (int32_t i_44370 = 0; i_44370 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44353) - phys_group_id_44369,
                   sext_i64_i32(num_groups_39077)); i_44370++) {
        int32_t virt_group_id_44371 = phys_group_id_44369 + i_44370 *
                sext_i64_i32(num_groups_39077);
        int32_t flat_segment_id_44372 = squot32(virt_group_id_44371,
                                                sext_i64_i32(groups_per_segment_44351));
        int64_t global_tid_44373 = srem64(sext_i32_i64(virt_group_id_44371) *
                                          segred_group_sizze_39076 +
                                          sext_i32_i64(local_tid_44361),
                                          segred_group_sizze_39076 *
                                          groups_per_segment_44351);
        int64_t gtid_39019 = squot64(sext_i32_i64(flat_segment_id_44372),
                                     N_28660);
        int64_t gtid_39020 = sext_i32_i64(flat_segment_id_44372) -
                squot64(sext_i32_i64(flat_segment_id_44372), N_28660) * N_28660;
        int64_t gtid_39029;
        float x_acc_44374;
        int64_t chunk_sizze_44375;
        
        chunk_sizze_44375 = smin64(elements_per_thread_44352,
                                   sdiv_up64(i32_res_28676 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44373)),
                                             threads_per_segment_44355));
        
        float x_39080;
        float x_39081;
        
        // neutral-initialise the accumulators
        {
            x_acc_44374 = 0.0F;
        }
        for (int64_t i_44379 = 0; i_44379 < chunk_sizze_44375; i_44379++) {
            gtid_39029 = sext_i32_i64(sext_i64_i32(global_tid_44373)) +
                threads_per_segment_44355 * i_44379;
            // apply map function
            {
                float x_39085 = ((__global
                                  float *) defunc_4_map_res_mem_43073)[gtid_39019 *
                                                                       i32_res_28676 +
                                                                       gtid_39029];
                float x_39086 = ((__global float *) mem_42554)[gtid_39020 *
                                                               i32_res_28676 +
                                                               gtid_39029];
                float defunc_1_f_res_39087 = x_39085 * x_39086;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39080 = x_acc_44374;
                }
                // load new values
                {
                    x_39081 = defunc_1_f_res_39087;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39082 = x_39080 + x_39081;
                    
                    // store in accumulator
                    {
                        x_acc_44374 = defunc_1_op_res_39082;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39080 = x_acc_44374;
            ((__local
              float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361)] =
                x_39080;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44380;
        int32_t skip_waves_44381;
        
        skip_waves_44381 = 1;
        
        float x_44376;
        float x_44377;
        
        offset_44380 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44361,
                      sext_i64_i32(segred_group_sizze_39076))) {
                x_44376 = ((__local
                            float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361 +
                                                        offset_44380)];
            }
        }
        offset_44380 = 1;
        while (slt32(offset_44380, wave_sizze_44363)) {
            if (slt32(local_tid_44361 + offset_44380,
                      sext_i64_i32(segred_group_sizze_39076)) &&
                ((local_tid_44361 - squot32(local_tid_44361, wave_sizze_44363) *
                  wave_sizze_44363) & (2 * offset_44380 - 1)) == 0) {
                // read array element
                {
                    x_44377 = ((volatile __local
                                float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361 +
                                                            offset_44380)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44378 = x_44376 + x_44377;
                    
                    x_44376 = defunc_1_op_res_44378;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361)] =
                        x_44376;
                }
            }
            offset_44380 *= 2;
        }
        while (slt32(skip_waves_44381,
                     squot32(sext_i64_i32(segred_group_sizze_39076) +
                             wave_sizze_44363 - 1, wave_sizze_44363))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44380 = skip_waves_44381 * wave_sizze_44363;
            if (slt32(local_tid_44361 + offset_44380,
                      sext_i64_i32(segred_group_sizze_39076)) &&
                ((local_tid_44361 - squot32(local_tid_44361, wave_sizze_44363) *
                  wave_sizze_44363) == 0 && (squot32(local_tid_44361,
                                                     wave_sizze_44363) & (2 *
                                                                          skip_waves_44381 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44377 = ((__local
                                float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361 +
                                                            offset_44380)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44378 = x_44376 + x_44377;
                    
                    x_44376 = defunc_1_op_res_44378;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361)] =
                        x_44376;
                }
            }
            skip_waves_44381 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44361) == (int64_t) 0) {
                x_acc_44374 = x_44376;
            }
        }
        if (groups_per_segment_44351 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44361 == 0) {
                    ((__global float *) mem_43291)[gtid_39019 * N_28660 +
                                                   gtid_39020] = x_acc_44374;
                }
            }
        } else {
            int32_t old_counter_44382;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44361 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44356)[sext_i32_i64(virt_group_id_44371) *
                                                        segred_group_sizze_39076] =
                        x_acc_44374;
                    mem_fence_global();
                    old_counter_44382 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44358)[sext_i32_i64(srem32(flat_segment_id_44372,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44367)[(int64_t) 0] =
                        old_counter_44382 == groups_per_segment_44351 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44383;
            
            is_last_group_44383 = ((__local
                                    bool *) sync_arr_mem_44367)[(int64_t) 0];
            if (is_last_group_44383) {
                if (local_tid_44361 == 0) {
                    old_counter_44382 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44358)[sext_i32_i64(srem32(flat_segment_id_44372,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44351));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44384 =
                            sdiv_up64(groups_per_segment_44351,
                                      segred_group_sizze_39076);
                    
                    x_39080 = 0.0F;
                    for (int64_t i_44385 = 0; i_44385 < read_per_thread_44384;
                         i_44385++) {
                        int64_t group_res_id_44386 =
                                sext_i32_i64(local_tid_44361) *
                                read_per_thread_44384 + i_44385;
                        int64_t index_of_group_res_44387 =
                                sext_i32_i64(flat_segment_id_44372) *
                                groups_per_segment_44351 + group_res_id_44386;
                        
                        if (slt64(group_res_id_44386,
                                  groups_per_segment_44351)) {
                            x_39081 = ((__global
                                        float *) group_res_arr_mem_44356)[index_of_group_res_44387 *
                                                                          segred_group_sizze_39076];
                            
                            float defunc_1_op_res_39082;
                            
                            defunc_1_op_res_39082 = x_39080 + x_39081;
                            x_39080 = defunc_1_op_res_39082;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361)] =
                    x_39080;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44388;
                    int32_t skip_waves_44389;
                    
                    skip_waves_44389 = 1;
                    
                    float x_44376;
                    float x_44377;
                    
                    offset_44388 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44361,
                                  sext_i64_i32(segred_group_sizze_39076))) {
                            x_44376 = ((__local
                                        float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361 +
                                                                    offset_44388)];
                        }
                    }
                    offset_44388 = 1;
                    while (slt32(offset_44388, wave_sizze_44363)) {
                        if (slt32(local_tid_44361 + offset_44388,
                                  sext_i64_i32(segred_group_sizze_39076)) &&
                            ((local_tid_44361 - squot32(local_tid_44361,
                                                        wave_sizze_44363) *
                              wave_sizze_44363) & (2 * offset_44388 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44377 = ((volatile __local
                                            float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361 +
                                                                        offset_44388)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44378 = x_44376 + x_44377;
                                
                                x_44376 = defunc_1_op_res_44378;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361)] =
                                    x_44376;
                            }
                        }
                        offset_44388 *= 2;
                    }
                    while (slt32(skip_waves_44389,
                                 squot32(sext_i64_i32(segred_group_sizze_39076) +
                                         wave_sizze_44363 - 1,
                                         wave_sizze_44363))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44388 = skip_waves_44389 * wave_sizze_44363;
                        if (slt32(local_tid_44361 + offset_44388,
                                  sext_i64_i32(segred_group_sizze_39076)) &&
                            ((local_tid_44361 - squot32(local_tid_44361,
                                                        wave_sizze_44363) *
                              wave_sizze_44363) == 0 &&
                             (squot32(local_tid_44361, wave_sizze_44363) & (2 *
                                                                            skip_waves_44389 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44377 = ((__local
                                            float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361 +
                                                                        offset_44388)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44378 = x_44376 + x_44377;
                                
                                x_44376 = defunc_1_op_res_44378;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44365)[sext_i32_i64(local_tid_44361)] =
                                    x_44376;
                            }
                        }
                        skip_waves_44389 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44361 == 0) {
                            ((__global float *) mem_43291)[gtid_39019 *
                                                           N_28660 +
                                                           gtid_39020] =
                                x_44376;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39076
}
__kernel void mainzisegred_large_39596(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44619_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44617_backing_aligned_1,
                                       int64_t N_28660, int64_t i32_res_28670,
                                       int64_t num_groups_39643,
                                       int64_t groups_per_segment_44603,
                                       int64_t elements_per_thread_44604,
                                       int64_t virt_num_groups_44605,
                                       int64_t threads_per_segment_44607,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43335,
                                       __global unsigned char *mem_43389,
                                       __global unsigned char *mem_43392,
                                       __global
                                       unsigned char *group_res_arr_mem_44608,
                                       __global
                                       unsigned char *mainzicounter_mem_44610)
{
    #define segred_group_sizze_39642 (mainzisegred_group_sizze_39590)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44619_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44619_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44617_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44617_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44612;
    int32_t local_tid_44613;
    int64_t group_sizze_44616;
    int32_t wave_sizze_44615;
    int32_t group_tid_44614;
    
    global_tid_44612 = get_global_id(0);
    local_tid_44613 = get_local_id(0);
    group_sizze_44616 = get_local_size(0);
    wave_sizze_44615 = LOCKSTEP_WIDTH;
    group_tid_44614 = get_group_id(0);
    
    int32_t phys_tid_39596;
    
    phys_tid_39596 = global_tid_44612;
    
    __local char *red_arr_mem_44617;
    
    red_arr_mem_44617 = (__local char *) red_arr_mem_44617_backing_0;
    
    __local char *sync_arr_mem_44619;
    
    sync_arr_mem_44619 = (__local char *) sync_arr_mem_44619_backing_1;
    
    int32_t phys_group_id_44621;
    
    phys_group_id_44621 = get_group_id(0);
    for (int32_t i_44622 = 0; i_44622 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44605) - phys_group_id_44621,
                   sext_i64_i32(num_groups_39643)); i_44622++) {
        int32_t virt_group_id_44623 = phys_group_id_44621 + i_44622 *
                sext_i64_i32(num_groups_39643);
        int32_t flat_segment_id_44624 = squot32(virt_group_id_44623,
                                                sext_i64_i32(groups_per_segment_44603));
        int64_t global_tid_44625 = srem64(sext_i32_i64(virt_group_id_44623) *
                                          segred_group_sizze_39642 +
                                          sext_i32_i64(local_tid_44613),
                                          segred_group_sizze_39642 *
                                          groups_per_segment_44603);
        int64_t gtid_39587 = sext_i32_i64(flat_segment_id_44624);
        int64_t gtid_39595;
        float x_acc_44626;
        int64_t chunk_sizze_44627;
        
        chunk_sizze_44627 = smin64(elements_per_thread_44604,
                                   sdiv_up64(i32_res_28670 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44625)),
                                             threads_per_segment_44607));
        
        float x_39646;
        float x_39647;
        
        // neutral-initialise the accumulators
        {
            x_acc_44626 = 0.0F;
        }
        for (int64_t i_44631 = 0; i_44631 < chunk_sizze_44627; i_44631++) {
            gtid_39595 = sext_i32_i64(sext_i64_i32(global_tid_44625)) +
                threads_per_segment_44607 * i_44631;
            // apply map function
            {
                int32_t defunc_0_f_res_39650 = ((__global
                                                 int32_t *) mem_43389)[gtid_39587];
                int32_t index_primexp_40574 = sext_i64_i32(gtid_39595);
                bool cond_39652 = slt32(index_primexp_40574,
                                        defunc_0_f_res_39650);
                float defunc_0_f_res_39653;
                
                if (cond_39652) {
                    int64_t i_39654 = sext_i32_i64(index_primexp_40574);
                    float defunc_0_f_res_t_res_39655 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_39587 *
                                                                                              N_28660 +
                                                                                              i_39654];
                    
                    defunc_0_f_res_39653 = defunc_0_f_res_t_res_39655;
                } else {
                    defunc_0_f_res_39653 = 0.0F;
                }
                
                float defunc_0_f_res_39656 = defunc_0_f_res_39653 *
                      defunc_0_f_res_39653;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39646 = x_acc_44626;
                }
                // load new values
                {
                    x_39647 = defunc_0_f_res_39656;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39648 = x_39646 + x_39647;
                    
                    // store in accumulator
                    {
                        x_acc_44626 = defunc_1_op_res_39648;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39646 = x_acc_44626;
            ((__local
              float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613)] =
                x_39646;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44632;
        int32_t skip_waves_44633;
        
        skip_waves_44633 = 1;
        
        float x_44628;
        float x_44629;
        
        offset_44632 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44613,
                      sext_i64_i32(segred_group_sizze_39642))) {
                x_44628 = ((__local
                            float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613 +
                                                        offset_44632)];
            }
        }
        offset_44632 = 1;
        while (slt32(offset_44632, wave_sizze_44615)) {
            if (slt32(local_tid_44613 + offset_44632,
                      sext_i64_i32(segred_group_sizze_39642)) &&
                ((local_tid_44613 - squot32(local_tid_44613, wave_sizze_44615) *
                  wave_sizze_44615) & (2 * offset_44632 - 1)) == 0) {
                // read array element
                {
                    x_44629 = ((volatile __local
                                float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613 +
                                                            offset_44632)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44630 = x_44628 + x_44629;
                    
                    x_44628 = defunc_1_op_res_44630;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613)] =
                        x_44628;
                }
            }
            offset_44632 *= 2;
        }
        while (slt32(skip_waves_44633,
                     squot32(sext_i64_i32(segred_group_sizze_39642) +
                             wave_sizze_44615 - 1, wave_sizze_44615))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44632 = skip_waves_44633 * wave_sizze_44615;
            if (slt32(local_tid_44613 + offset_44632,
                      sext_i64_i32(segred_group_sizze_39642)) &&
                ((local_tid_44613 - squot32(local_tid_44613, wave_sizze_44615) *
                  wave_sizze_44615) == 0 && (squot32(local_tid_44613,
                                                     wave_sizze_44615) & (2 *
                                                                          skip_waves_44633 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44629 = ((__local
                                float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613 +
                                                            offset_44632)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44630 = x_44628 + x_44629;
                    
                    x_44628 = defunc_1_op_res_44630;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613)] =
                        x_44628;
                }
            }
            skip_waves_44633 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44613) == (int64_t) 0) {
                x_acc_44626 = x_44628;
            }
        }
        if (groups_per_segment_44603 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44613 == 0) {
                    ((__global float *) mem_43392)[gtid_39587] = x_acc_44626;
                }
            }
        } else {
            int32_t old_counter_44634;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44613 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44608)[sext_i32_i64(virt_group_id_44623) *
                                                        segred_group_sizze_39642] =
                        x_acc_44626;
                    mem_fence_global();
                    old_counter_44634 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44610)[sext_i32_i64(srem32(flat_segment_id_44624,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44619)[(int64_t) 0] =
                        old_counter_44634 == groups_per_segment_44603 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44635;
            
            is_last_group_44635 = ((__local
                                    bool *) sync_arr_mem_44619)[(int64_t) 0];
            if (is_last_group_44635) {
                if (local_tid_44613 == 0) {
                    old_counter_44634 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44610)[sext_i32_i64(srem32(flat_segment_id_44624,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44603));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44636 =
                            sdiv_up64(groups_per_segment_44603,
                                      segred_group_sizze_39642);
                    
                    x_39646 = 0.0F;
                    for (int64_t i_44637 = 0; i_44637 < read_per_thread_44636;
                         i_44637++) {
                        int64_t group_res_id_44638 =
                                sext_i32_i64(local_tid_44613) *
                                read_per_thread_44636 + i_44637;
                        int64_t index_of_group_res_44639 =
                                sext_i32_i64(flat_segment_id_44624) *
                                groups_per_segment_44603 + group_res_id_44638;
                        
                        if (slt64(group_res_id_44638,
                                  groups_per_segment_44603)) {
                            x_39647 = ((__global
                                        float *) group_res_arr_mem_44608)[index_of_group_res_44639 *
                                                                          segred_group_sizze_39642];
                            
                            float defunc_1_op_res_39648;
                            
                            defunc_1_op_res_39648 = x_39646 + x_39647;
                            x_39646 = defunc_1_op_res_39648;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613)] =
                    x_39646;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44640;
                    int32_t skip_waves_44641;
                    
                    skip_waves_44641 = 1;
                    
                    float x_44628;
                    float x_44629;
                    
                    offset_44640 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44613,
                                  sext_i64_i32(segred_group_sizze_39642))) {
                            x_44628 = ((__local
                                        float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613 +
                                                                    offset_44640)];
                        }
                    }
                    offset_44640 = 1;
                    while (slt32(offset_44640, wave_sizze_44615)) {
                        if (slt32(local_tid_44613 + offset_44640,
                                  sext_i64_i32(segred_group_sizze_39642)) &&
                            ((local_tid_44613 - squot32(local_tid_44613,
                                                        wave_sizze_44615) *
                              wave_sizze_44615) & (2 * offset_44640 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44629 = ((volatile __local
                                            float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613 +
                                                                        offset_44640)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44630 = x_44628 + x_44629;
                                
                                x_44628 = defunc_1_op_res_44630;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613)] =
                                    x_44628;
                            }
                        }
                        offset_44640 *= 2;
                    }
                    while (slt32(skip_waves_44641,
                                 squot32(sext_i64_i32(segred_group_sizze_39642) +
                                         wave_sizze_44615 - 1,
                                         wave_sizze_44615))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44640 = skip_waves_44641 * wave_sizze_44615;
                        if (slt32(local_tid_44613 + offset_44640,
                                  sext_i64_i32(segred_group_sizze_39642)) &&
                            ((local_tid_44613 - squot32(local_tid_44613,
                                                        wave_sizze_44615) *
                              wave_sizze_44615) == 0 &&
                             (squot32(local_tid_44613, wave_sizze_44615) & (2 *
                                                                            skip_waves_44641 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44629 = ((__local
                                            float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613 +
                                                                        offset_44640)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44630 = x_44628 + x_44629;
                                
                                x_44628 = defunc_1_op_res_44630;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44617)[sext_i32_i64(local_tid_44613)] =
                                    x_44628;
                            }
                        }
                        skip_waves_44641 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44613 == 0) {
                            ((__global float *) mem_43392)[gtid_39587] =
                                x_44628;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39642
}
__kernel void mainzisegred_large_39617(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44559_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44557_backing_aligned_1,
                                       int64_t N_28660, int64_t i32_res_28670,
                                       int64_t num_groups_39629,
                                       int64_t groups_per_segment_44543,
                                       int64_t elements_per_thread_44544,
                                       int64_t virt_num_groups_44545,
                                       int64_t threads_per_segment_44547,
                                       __global unsigned char *images_mem_42538,
                                       __global unsigned char *mem_43389,
                                       __global
                                       unsigned char *group_res_arr_mem_44548,
                                       __global
                                       unsigned char *mainzicounter_mem_44550)
{
    #define segred_group_sizze_39628 (mainzisegred_group_sizze_39611)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44559_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44559_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44557_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44557_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44552;
    int32_t local_tid_44553;
    int64_t group_sizze_44556;
    int32_t wave_sizze_44555;
    int32_t group_tid_44554;
    
    global_tid_44552 = get_global_id(0);
    local_tid_44553 = get_local_id(0);
    group_sizze_44556 = get_local_size(0);
    wave_sizze_44555 = LOCKSTEP_WIDTH;
    group_tid_44554 = get_group_id(0);
    
    int32_t phys_tid_39617;
    
    phys_tid_39617 = global_tid_44552;
    
    __local char *red_arr_mem_44557;
    
    red_arr_mem_44557 = (__local char *) red_arr_mem_44557_backing_0;
    
    __local char *sync_arr_mem_44559;
    
    sync_arr_mem_44559 = (__local char *) sync_arr_mem_44559_backing_1;
    
    int32_t phys_group_id_44561;
    
    phys_group_id_44561 = get_group_id(0);
    for (int32_t i_44562 = 0; i_44562 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44545) - phys_group_id_44561,
                   sext_i64_i32(num_groups_39629)); i_44562++) {
        int32_t virt_group_id_44563 = phys_group_id_44561 + i_44562 *
                sext_i64_i32(num_groups_39629);
        int32_t flat_segment_id_44564 = squot32(virt_group_id_44563,
                                                sext_i64_i32(groups_per_segment_44543));
        int64_t global_tid_44565 = srem64(sext_i32_i64(virt_group_id_44563) *
                                          segred_group_sizze_39628 +
                                          sext_i32_i64(local_tid_44553),
                                          segred_group_sizze_39628 *
                                          groups_per_segment_44543);
        int64_t gtid_39608 = sext_i32_i64(flat_segment_id_44564);
        int64_t gtid_39616;
        int32_t x_acc_44566;
        int64_t chunk_sizze_44567;
        
        chunk_sizze_44567 = smin64(elements_per_thread_44544,
                                   sdiv_up64(i32_res_28670 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44565)),
                                             threads_per_segment_44547));
        
        int32_t x_39632;
        int32_t x_39633;
        
        // neutral-initialise the accumulators
        {
            x_acc_44566 = 0;
        }
        for (int64_t i_44571 = 0; i_44571 < chunk_sizze_44567; i_44571++) {
            gtid_39616 = sext_i32_i64(sext_i64_i32(global_tid_44565)) +
                threads_per_segment_44547 * i_44571;
            // apply map function
            {
                float x_39636 = ((__global
                                  float *) images_mem_42538)[gtid_39608 *
                                                             N_28660 +
                                                             gtid_39616];
                bool isnan_res_39637;
                
                isnan_res_39637 = futrts_isnan32(x_39636);
                
                bool cond_39638 = !isnan_res_39637;
                int32_t defunc_0_f_res_39639 = btoi_bool_i32(cond_39638);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39632 = x_acc_44566;
                }
                // load new values
                {
                    x_39633 = defunc_0_f_res_39639;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_39634 = add32(x_39632, x_39633);
                    
                    // store in accumulator
                    {
                        x_acc_44566 = defunc_1_op_res_39634;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39632 = x_acc_44566;
            ((__local
              int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553)] =
                x_39632;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44572;
        int32_t skip_waves_44573;
        
        skip_waves_44573 = 1;
        
        int32_t x_44568;
        int32_t x_44569;
        
        offset_44572 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44553,
                      sext_i64_i32(segred_group_sizze_39628))) {
                x_44568 = ((__local
                            int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553 +
                                                          offset_44572)];
            }
        }
        offset_44572 = 1;
        while (slt32(offset_44572, wave_sizze_44555)) {
            if (slt32(local_tid_44553 + offset_44572,
                      sext_i64_i32(segred_group_sizze_39628)) &&
                ((local_tid_44553 - squot32(local_tid_44553, wave_sizze_44555) *
                  wave_sizze_44555) & (2 * offset_44572 - 1)) == 0) {
                // read array element
                {
                    x_44569 = ((volatile __local
                                int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553 +
                                                              offset_44572)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44570 = add32(x_44568, x_44569);
                    
                    x_44568 = defunc_1_op_res_44570;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553)] =
                        x_44568;
                }
            }
            offset_44572 *= 2;
        }
        while (slt32(skip_waves_44573,
                     squot32(sext_i64_i32(segred_group_sizze_39628) +
                             wave_sizze_44555 - 1, wave_sizze_44555))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44572 = skip_waves_44573 * wave_sizze_44555;
            if (slt32(local_tid_44553 + offset_44572,
                      sext_i64_i32(segred_group_sizze_39628)) &&
                ((local_tid_44553 - squot32(local_tid_44553, wave_sizze_44555) *
                  wave_sizze_44555) == 0 && (squot32(local_tid_44553,
                                                     wave_sizze_44555) & (2 *
                                                                          skip_waves_44573 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44569 = ((__local
                                int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553 +
                                                              offset_44572)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44570 = add32(x_44568, x_44569);
                    
                    x_44568 = defunc_1_op_res_44570;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553)] =
                        x_44568;
                }
            }
            skip_waves_44573 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44553) == (int64_t) 0) {
                x_acc_44566 = x_44568;
            }
        }
        if (groups_per_segment_44543 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44553 == 0) {
                    ((__global int32_t *) mem_43389)[gtid_39608] = x_acc_44566;
                }
            }
        } else {
            int32_t old_counter_44574;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44553 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44548)[sext_i32_i64(virt_group_id_44563) *
                                                          segred_group_sizze_39628] =
                        x_acc_44566;
                    mem_fence_global();
                    old_counter_44574 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44550)[sext_i32_i64(srem32(flat_segment_id_44564,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44559)[(int64_t) 0] =
                        old_counter_44574 == groups_per_segment_44543 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44575;
            
            is_last_group_44575 = ((__local
                                    bool *) sync_arr_mem_44559)[(int64_t) 0];
            if (is_last_group_44575) {
                if (local_tid_44553 == 0) {
                    old_counter_44574 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44550)[sext_i32_i64(srem32(flat_segment_id_44564,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44543));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44576 =
                            sdiv_up64(groups_per_segment_44543,
                                      segred_group_sizze_39628);
                    
                    x_39632 = 0;
                    for (int64_t i_44577 = 0; i_44577 < read_per_thread_44576;
                         i_44577++) {
                        int64_t group_res_id_44578 =
                                sext_i32_i64(local_tid_44553) *
                                read_per_thread_44576 + i_44577;
                        int64_t index_of_group_res_44579 =
                                sext_i32_i64(flat_segment_id_44564) *
                                groups_per_segment_44543 + group_res_id_44578;
                        
                        if (slt64(group_res_id_44578,
                                  groups_per_segment_44543)) {
                            x_39633 = ((__global
                                        int32_t *) group_res_arr_mem_44548)[index_of_group_res_44579 *
                                                                            segred_group_sizze_39628];
                            
                            int32_t defunc_1_op_res_39634;
                            
                            defunc_1_op_res_39634 = add32(x_39632, x_39633);
                            x_39632 = defunc_1_op_res_39634;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553)] =
                    x_39632;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44580;
                    int32_t skip_waves_44581;
                    
                    skip_waves_44581 = 1;
                    
                    int32_t x_44568;
                    int32_t x_44569;
                    
                    offset_44580 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44553,
                                  sext_i64_i32(segred_group_sizze_39628))) {
                            x_44568 = ((__local
                                        int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553 +
                                                                      offset_44580)];
                        }
                    }
                    offset_44580 = 1;
                    while (slt32(offset_44580, wave_sizze_44555)) {
                        if (slt32(local_tid_44553 + offset_44580,
                                  sext_i64_i32(segred_group_sizze_39628)) &&
                            ((local_tid_44553 - squot32(local_tid_44553,
                                                        wave_sizze_44555) *
                              wave_sizze_44555) & (2 * offset_44580 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44569 = ((volatile __local
                                            int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553 +
                                                                          offset_44580)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44570 = add32(x_44568,
                                                                      x_44569);
                                
                                x_44568 = defunc_1_op_res_44570;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553)] =
                                    x_44568;
                            }
                        }
                        offset_44580 *= 2;
                    }
                    while (slt32(skip_waves_44581,
                                 squot32(sext_i64_i32(segred_group_sizze_39628) +
                                         wave_sizze_44555 - 1,
                                         wave_sizze_44555))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44580 = skip_waves_44581 * wave_sizze_44555;
                        if (slt32(local_tid_44553 + offset_44580,
                                  sext_i64_i32(segred_group_sizze_39628)) &&
                            ((local_tid_44553 - squot32(local_tid_44553,
                                                        wave_sizze_44555) *
                              wave_sizze_44555) == 0 &&
                             (squot32(local_tid_44553, wave_sizze_44555) & (2 *
                                                                            skip_waves_44581 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44569 = ((__local
                                            int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553 +
                                                                          offset_44580)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44570 = add32(x_44568,
                                                                      x_44569);
                                
                                x_44568 = defunc_1_op_res_44570;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44557)[sext_i32_i64(local_tid_44553)] =
                                    x_44568;
                            }
                        }
                        skip_waves_44581 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44553 == 0) {
                            ((__global int32_t *) mem_43389)[gtid_39608] =
                                x_44568;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39628
}
__kernel void mainzisegred_large_39768(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44728_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44726_backing_aligned_1,
                                       int64_t N_28660, int64_t i32_res_29031,
                                       int64_t num_groups_39786,
                                       int64_t groups_per_segment_44712,
                                       int64_t elements_per_thread_44713,
                                       int64_t virt_num_groups_44714,
                                       int64_t threads_per_segment_44716,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43335,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43401,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43402,
                                       __global unsigned char *mem_43435,
                                       __global
                                       unsigned char *group_res_arr_mem_44717,
                                       __global
                                       unsigned char *mainzicounter_mem_44719)
{
    #define segred_group_sizze_39785 (mainzisegred_group_sizze_39762)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44728_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44728_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44726_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44726_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44721;
    int32_t local_tid_44722;
    int64_t group_sizze_44725;
    int32_t wave_sizze_44724;
    int32_t group_tid_44723;
    
    global_tid_44721 = get_global_id(0);
    local_tid_44722 = get_local_id(0);
    group_sizze_44725 = get_local_size(0);
    wave_sizze_44724 = LOCKSTEP_WIDTH;
    group_tid_44723 = get_group_id(0);
    
    int32_t phys_tid_39768;
    
    phys_tid_39768 = global_tid_44721;
    
    __local char *red_arr_mem_44726;
    
    red_arr_mem_44726 = (__local char *) red_arr_mem_44726_backing_0;
    
    __local char *sync_arr_mem_44728;
    
    sync_arr_mem_44728 = (__local char *) sync_arr_mem_44728_backing_1;
    
    int32_t phys_group_id_44730;
    
    phys_group_id_44730 = get_group_id(0);
    for (int32_t i_44731 = 0; i_44731 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44714) - phys_group_id_44730,
                   sext_i64_i32(num_groups_39786)); i_44731++) {
        int32_t virt_group_id_44732 = phys_group_id_44730 + i_44731 *
                sext_i64_i32(num_groups_39786);
        int32_t flat_segment_id_44733 = squot32(virt_group_id_44732,
                                                sext_i64_i32(groups_per_segment_44712));
        int64_t global_tid_44734 = srem64(sext_i32_i64(virt_group_id_44732) *
                                          segred_group_sizze_39785 +
                                          sext_i32_i64(local_tid_44722),
                                          segred_group_sizze_39785 *
                                          groups_per_segment_44712);
        int64_t gtid_39759 = sext_i32_i64(flat_segment_id_44733);
        int64_t gtid_39767;
        float x_acc_44735;
        int64_t chunk_sizze_44736;
        
        chunk_sizze_44736 = smin64(elements_per_thread_44713,
                                   sdiv_up64(i32_res_29031 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44734)),
                                             threads_per_segment_44716));
        
        float x_39789;
        float x_39790;
        
        // neutral-initialise the accumulators
        {
            x_acc_44735 = 0.0F;
        }
        for (int64_t i_44740 = 0; i_44740 < chunk_sizze_44736; i_44740++) {
            gtid_39767 = sext_i32_i64(sext_i64_i32(global_tid_44734)) +
                threads_per_segment_44716 * i_44740;
            // apply map function
            {
                int32_t x_39794 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43401)[gtid_39759];
                int32_t index_primexp_40579 = sext_i64_i32(gtid_39767);
                bool cond_39796 = slt32(index_primexp_40579, x_39794);
                float defunc_0_f_res_39797;
                
                if (cond_39796) {
                    int32_t x_39793 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_39759];
                    int32_t x_39798 = add32(x_39793, index_primexp_40579);
                    int32_t x_39799 = sub32(x_39798, x_39794);
                    int32_t i_39800 = add32(1, x_39799);
                    int64_t i_39801 = sext_i32_i64(i_39800);
                    float defunc_0_f_res_t_res_39802 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_39759 *
                                                                                              N_28660 +
                                                                                              i_39801];
                    
                    defunc_0_f_res_39797 = defunc_0_f_res_t_res_39802;
                } else {
                    defunc_0_f_res_39797 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_39789 = x_acc_44735;
                }
                // load new values
                {
                    x_39790 = defunc_0_f_res_39797;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39791 = x_39789 + x_39790;
                    
                    // store in accumulator
                    {
                        x_acc_44735 = defunc_1_op_res_39791;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39789 = x_acc_44735;
            ((__local
              float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722)] =
                x_39789;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44741;
        int32_t skip_waves_44742;
        
        skip_waves_44742 = 1;
        
        float x_44737;
        float x_44738;
        
        offset_44741 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44722,
                      sext_i64_i32(segred_group_sizze_39785))) {
                x_44737 = ((__local
                            float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722 +
                                                        offset_44741)];
            }
        }
        offset_44741 = 1;
        while (slt32(offset_44741, wave_sizze_44724)) {
            if (slt32(local_tid_44722 + offset_44741,
                      sext_i64_i32(segred_group_sizze_39785)) &&
                ((local_tid_44722 - squot32(local_tid_44722, wave_sizze_44724) *
                  wave_sizze_44724) & (2 * offset_44741 - 1)) == 0) {
                // read array element
                {
                    x_44738 = ((volatile __local
                                float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722 +
                                                            offset_44741)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44739 = x_44737 + x_44738;
                    
                    x_44737 = defunc_1_op_res_44739;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722)] =
                        x_44737;
                }
            }
            offset_44741 *= 2;
        }
        while (slt32(skip_waves_44742,
                     squot32(sext_i64_i32(segred_group_sizze_39785) +
                             wave_sizze_44724 - 1, wave_sizze_44724))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44741 = skip_waves_44742 * wave_sizze_44724;
            if (slt32(local_tid_44722 + offset_44741,
                      sext_i64_i32(segred_group_sizze_39785)) &&
                ((local_tid_44722 - squot32(local_tid_44722, wave_sizze_44724) *
                  wave_sizze_44724) == 0 && (squot32(local_tid_44722,
                                                     wave_sizze_44724) & (2 *
                                                                          skip_waves_44742 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44738 = ((__local
                                float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722 +
                                                            offset_44741)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44739 = x_44737 + x_44738;
                    
                    x_44737 = defunc_1_op_res_44739;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722)] =
                        x_44737;
                }
            }
            skip_waves_44742 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44722) == (int64_t) 0) {
                x_acc_44735 = x_44737;
            }
        }
        if (groups_per_segment_44712 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44722 == 0) {
                    ((__global float *) mem_43435)[gtid_39759] = x_acc_44735;
                }
            }
        } else {
            int32_t old_counter_44743;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44722 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44717)[sext_i32_i64(virt_group_id_44732) *
                                                        segred_group_sizze_39785] =
                        x_acc_44735;
                    mem_fence_global();
                    old_counter_44743 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44719)[sext_i32_i64(srem32(flat_segment_id_44733,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44728)[(int64_t) 0] =
                        old_counter_44743 == groups_per_segment_44712 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44744;
            
            is_last_group_44744 = ((__local
                                    bool *) sync_arr_mem_44728)[(int64_t) 0];
            if (is_last_group_44744) {
                if (local_tid_44722 == 0) {
                    old_counter_44743 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44719)[sext_i32_i64(srem32(flat_segment_id_44733,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44712));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44745 =
                            sdiv_up64(groups_per_segment_44712,
                                      segred_group_sizze_39785);
                    
                    x_39789 = 0.0F;
                    for (int64_t i_44746 = 0; i_44746 < read_per_thread_44745;
                         i_44746++) {
                        int64_t group_res_id_44747 =
                                sext_i32_i64(local_tid_44722) *
                                read_per_thread_44745 + i_44746;
                        int64_t index_of_group_res_44748 =
                                sext_i32_i64(flat_segment_id_44733) *
                                groups_per_segment_44712 + group_res_id_44747;
                        
                        if (slt64(group_res_id_44747,
                                  groups_per_segment_44712)) {
                            x_39790 = ((__global
                                        float *) group_res_arr_mem_44717)[index_of_group_res_44748 *
                                                                          segred_group_sizze_39785];
                            
                            float defunc_1_op_res_39791;
                            
                            defunc_1_op_res_39791 = x_39789 + x_39790;
                            x_39789 = defunc_1_op_res_39791;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722)] =
                    x_39789;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44749;
                    int32_t skip_waves_44750;
                    
                    skip_waves_44750 = 1;
                    
                    float x_44737;
                    float x_44738;
                    
                    offset_44749 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44722,
                                  sext_i64_i32(segred_group_sizze_39785))) {
                            x_44737 = ((__local
                                        float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722 +
                                                                    offset_44749)];
                        }
                    }
                    offset_44749 = 1;
                    while (slt32(offset_44749, wave_sizze_44724)) {
                        if (slt32(local_tid_44722 + offset_44749,
                                  sext_i64_i32(segred_group_sizze_39785)) &&
                            ((local_tid_44722 - squot32(local_tid_44722,
                                                        wave_sizze_44724) *
                              wave_sizze_44724) & (2 * offset_44749 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44738 = ((volatile __local
                                            float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722 +
                                                                        offset_44749)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44739 = x_44737 + x_44738;
                                
                                x_44737 = defunc_1_op_res_44739;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722)] =
                                    x_44737;
                            }
                        }
                        offset_44749 *= 2;
                    }
                    while (slt32(skip_waves_44750,
                                 squot32(sext_i64_i32(segred_group_sizze_39785) +
                                         wave_sizze_44724 - 1,
                                         wave_sizze_44724))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44749 = skip_waves_44750 * wave_sizze_44724;
                        if (slt32(local_tid_44722 + offset_44749,
                                  sext_i64_i32(segred_group_sizze_39785)) &&
                            ((local_tid_44722 - squot32(local_tid_44722,
                                                        wave_sizze_44724) *
                              wave_sizze_44724) == 0 &&
                             (squot32(local_tid_44722, wave_sizze_44724) & (2 *
                                                                            skip_waves_44750 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44738 = ((__local
                                            float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722 +
                                                                        offset_44749)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44739 = x_44737 + x_44738;
                                
                                x_44737 = defunc_1_op_res_44739;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44726)[sext_i32_i64(local_tid_44722)] =
                                    x_44737;
                            }
                        }
                        skip_waves_44750 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44722 == 0) {
                            ((__global float *) mem_43435)[gtid_39759] =
                                x_44737;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39785
}
__kernel void mainzisegred_large_40269(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44909_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44907_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_44905_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_44903_backing_aligned_3,
                                       int64_t iota32_arg_29056,
                                       int64_t num_groups_40440,
                                       int64_t groups_per_segment_44885,
                                       int64_t elements_per_thread_44886,
                                       int64_t virt_num_groups_44887, __global
                                       unsigned char *mem_43441, __global
                                       unsigned char *mem_43453, __global
                                       unsigned char *mem_43455, __global
                                       unsigned char *mem_43459, __global
                                       unsigned char *mem_43462, __global
                                       unsigned char *mem_43464, __global
                                       unsigned char *mem_43466, __global
                                       unsigned char *group_res_arr_mem_44890,
                                       __global
                                       unsigned char *group_res_arr_mem_44892,
                                       __global
                                       unsigned char *group_res_arr_mem_44894,
                                       __global
                                       unsigned char *mainzicounter_mem_44896)
{
    #define segred_group_sizze_40439 (mainzisegred_group_sizze_40263)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44909_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_44909_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44907_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44907_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44905_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44905_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44903_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44903_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44898;
    int32_t local_tid_44899;
    int64_t group_sizze_44902;
    int32_t wave_sizze_44901;
    int32_t group_tid_44900;
    
    global_tid_44898 = get_global_id(0);
    local_tid_44899 = get_local_id(0);
    group_sizze_44902 = get_local_size(0);
    wave_sizze_44901 = LOCKSTEP_WIDTH;
    group_tid_44900 = get_group_id(0);
    
    int32_t phys_tid_40269;
    
    phys_tid_40269 = global_tid_44898;
    
    __local char *red_arr_mem_44903;
    
    red_arr_mem_44903 = (__local char *) red_arr_mem_44903_backing_0;
    
    __local char *red_arr_mem_44905;
    
    red_arr_mem_44905 = (__local char *) red_arr_mem_44905_backing_1;
    
    __local char *red_arr_mem_44907;
    
    red_arr_mem_44907 = (__local char *) red_arr_mem_44907_backing_2;
    
    __local char *sync_arr_mem_44909;
    
    sync_arr_mem_44909 = (__local char *) sync_arr_mem_44909_backing_3;
    
    int32_t phys_group_id_44911;
    
    phys_group_id_44911 = get_group_id(0);
    for (int32_t i_44912 = 0; i_44912 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44887) - phys_group_id_44911,
                   sext_i64_i32(num_groups_40440)); i_44912++) {
        int32_t virt_group_id_44913 = phys_group_id_44911 + i_44912 *
                sext_i64_i32(num_groups_40440);
        int32_t flat_segment_id_44914 = squot32(virt_group_id_44913,
                                                sext_i64_i32(groups_per_segment_44885));
        int64_t global_tid_44915 = srem64(sext_i32_i64(virt_group_id_44913) *
                                          segred_group_sizze_40439 +
                                          sext_i32_i64(local_tid_44899),
                                          segred_group_sizze_40439 *
                                          groups_per_segment_44885);
        int64_t gtid_40260 = sext_i32_i64(flat_segment_id_44914);
        int64_t gtid_40268;
        bool x_acc_44916;
        int32_t x_acc_44917;
        float x_acc_44918;
        int64_t chunk_sizze_44919;
        int64_t starting_point_44920;
        
        starting_point_44920 = sext_i32_i64(sext_i64_i32(global_tid_44915)) *
            elements_per_thread_44886;
        
        int64_t remaining_elements_44921;
        
        remaining_elements_44921 = iota32_arg_29056 - starting_point_44920;
        if (sle64(remaining_elements_44921, (int64_t) 0) ||
            sle64(iota32_arg_29056, starting_point_44920)) {
            chunk_sizze_44919 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_29056,
                      (sext_i32_i64(sext_i64_i32(global_tid_44915)) +
                       (int64_t) 1) * elements_per_thread_44886)) {
                chunk_sizze_44919 = iota32_arg_29056 -
                    sext_i32_i64(sext_i64_i32(global_tid_44915)) *
                    elements_per_thread_44886;
            } else {
                chunk_sizze_44919 = elements_per_thread_44886;
            }
        }
        
        bool x_40445;
        int32_t x_40446;
        float x_40447;
        bool x_40448;
        int32_t x_40449;
        float x_40450;
        
        // neutral-initialise the accumulators
        {
            x_acc_44916 = 0;
            x_acc_44917 = -1;
            x_acc_44918 = 0.0F;
        }
        for (int64_t i_44936 = 0; i_44936 < elements_per_thread_44886;
             i_44936++) {
            gtid_40268 = sext_i32_i64(local_tid_44899) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_44915),
                                      sext_i64_i32(segred_group_sizze_40439))) *
                 elements_per_thread_44886 + i_44936) *
                segred_group_sizze_40439;
            if (slt64(gtid_40268, iota32_arg_29056)) {
                // apply map function
                {
                    int32_t y_40459 = ((__global
                                        int32_t *) mem_43455)[gtid_40260];
                    float y_40460 = ((__global float *) mem_43453)[gtid_40260];
                    float x_40464 = ((__global float *) mem_43459)[gtid_40260 *
                                                                   iota32_arg_29056 +
                                                                   gtid_40268];
                    float x_40465 = ((__global float *) mem_43441)[gtid_40268];
                    int32_t index_primexp_40593 = sext_i64_i32(gtid_40268);
                    float defunc_0_f_res_40468 = x_40464 / y_40460;
                    bool cond_40469 = slt32(index_primexp_40593, y_40459);
                    bool isnan_res_40470;
                    
                    isnan_res_40470 = futrts_isnan32(defunc_0_f_res_40468);
                    
                    bool cond_t_res_40471 = !isnan_res_40470;
                    bool x_40472 = cond_40469 && cond_t_res_40471;
                    float abs_res_40473 = (float) fabs(defunc_0_f_res_40468);
                    bool defunc_2_f_res_t_res_40474 = x_40465 < abs_res_40473;
                    bool x_40475 = x_40472 && defunc_2_f_res_t_res_40474;
                    float defunc_1_f_res_40476;
                    
                    if (cond_40469) {
                        defunc_1_f_res_40476 = defunc_0_f_res_40468;
                    } else {
                        defunc_1_f_res_40476 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_40445 = x_acc_44916;
                        x_40446 = x_acc_44917;
                        x_40447 = x_acc_44918;
                    }
                    // load new values
                    {
                        x_40448 = x_40475;
                        x_40449 = index_primexp_40593;
                        x_40450 = defunc_1_f_res_40476;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_40451;
                        int32_t defunc_1_op_res_40452;
                        
                        if (x_40445) {
                            defunc_1_op_res_40451 = x_40445;
                            defunc_1_op_res_40452 = x_40446;
                        } else {
                            bool x_40453 = x_40448 && x_40448;
                            bool x_40454 = !x_40448;
                            bool y_40455 = x_40445 && x_40454;
                            bool defunc_1_op_res_f_res_40456 = x_40453 ||
                                 y_40455;
                            int32_t defunc_1_op_res_f_res_40457;
                            
                            if (x_40448) {
                                defunc_1_op_res_f_res_40457 = x_40449;
                            } else {
                                defunc_1_op_res_f_res_40457 = x_40446;
                            }
                            defunc_1_op_res_40451 = defunc_1_op_res_f_res_40456;
                            defunc_1_op_res_40452 = defunc_1_op_res_f_res_40457;
                        }
                        
                        float defunc_1_op_res_40458 = x_40447 + x_40450;
                        
                        // store in accumulator
                        {
                            x_acc_44916 = defunc_1_op_res_40451;
                            x_acc_44917 = defunc_1_op_res_40452;
                            x_acc_44918 = defunc_1_op_res_40458;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_40445 = x_acc_44916;
                x_40446 = x_acc_44917;
                x_40447 = x_acc_44918;
                ((__local
                  bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899)] =
                    x_40445;
                ((__local
                  int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899)] =
                    x_40446;
                ((__local
                  float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899)] =
                    x_40447;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_44937;
            int32_t skip_waves_44938;
            
            skip_waves_44938 = 1;
            
            bool x_44922;
            int32_t x_44923;
            float x_44924;
            bool x_44925;
            int32_t x_44926;
            float x_44927;
            
            offset_44937 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44899,
                          sext_i64_i32(segred_group_sizze_40439))) {
                    x_44922 = ((__local
                                bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899 +
                                                           offset_44937)];
                    x_44923 = ((__local
                                int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899 +
                                                              offset_44937)];
                    x_44924 = ((__local
                                float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899 +
                                                            offset_44937)];
                }
            }
            offset_44937 = 1;
            while (slt32(offset_44937, wave_sizze_44901)) {
                if (slt32(local_tid_44899 + offset_44937,
                          sext_i64_i32(segred_group_sizze_40439)) &&
                    ((local_tid_44899 - squot32(local_tid_44899,
                                                wave_sizze_44901) *
                      wave_sizze_44901) & (2 * offset_44937 - 1)) == 0) {
                    // read array element
                    {
                        x_44925 = ((volatile __local
                                    bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899 +
                                                               offset_44937)];
                        x_44926 = ((volatile __local
                                    int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899 +
                                                                  offset_44937)];
                        x_44927 = ((volatile __local
                                    float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899 +
                                                                offset_44937)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44928;
                        int32_t defunc_1_op_res_44929;
                        
                        if (x_44922) {
                            defunc_1_op_res_44928 = x_44922;
                            defunc_1_op_res_44929 = x_44923;
                        } else {
                            bool x_44930 = x_44925 && x_44925;
                            bool x_44931 = !x_44925;
                            bool y_44932 = x_44922 && x_44931;
                            bool defunc_1_op_res_f_res_44933 = x_44930 ||
                                 y_44932;
                            int32_t defunc_1_op_res_f_res_44934;
                            
                            if (x_44925) {
                                defunc_1_op_res_f_res_44934 = x_44926;
                            } else {
                                defunc_1_op_res_f_res_44934 = x_44923;
                            }
                            defunc_1_op_res_44928 = defunc_1_op_res_f_res_44933;
                            defunc_1_op_res_44929 = defunc_1_op_res_f_res_44934;
                        }
                        
                        float defunc_1_op_res_44935 = x_44924 + x_44927;
                        
                        x_44922 = defunc_1_op_res_44928;
                        x_44923 = defunc_1_op_res_44929;
                        x_44924 = defunc_1_op_res_44935;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899)] =
                            x_44922;
                        ((volatile __local
                          int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899)] =
                            x_44923;
                        ((volatile __local
                          float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899)] =
                            x_44924;
                    }
                }
                offset_44937 *= 2;
            }
            while (slt32(skip_waves_44938,
                         squot32(sext_i64_i32(segred_group_sizze_40439) +
                                 wave_sizze_44901 - 1, wave_sizze_44901))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44937 = skip_waves_44938 * wave_sizze_44901;
                if (slt32(local_tid_44899 + offset_44937,
                          sext_i64_i32(segred_group_sizze_40439)) &&
                    ((local_tid_44899 - squot32(local_tid_44899,
                                                wave_sizze_44901) *
                      wave_sizze_44901) == 0 && (squot32(local_tid_44899,
                                                         wave_sizze_44901) &
                                                 (2 * skip_waves_44938 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44925 = ((__local
                                    bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899 +
                                                               offset_44937)];
                        x_44926 = ((__local
                                    int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899 +
                                                                  offset_44937)];
                        x_44927 = ((__local
                                    float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899 +
                                                                offset_44937)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44928;
                        int32_t defunc_1_op_res_44929;
                        
                        if (x_44922) {
                            defunc_1_op_res_44928 = x_44922;
                            defunc_1_op_res_44929 = x_44923;
                        } else {
                            bool x_44930 = x_44925 && x_44925;
                            bool x_44931 = !x_44925;
                            bool y_44932 = x_44922 && x_44931;
                            bool defunc_1_op_res_f_res_44933 = x_44930 ||
                                 y_44932;
                            int32_t defunc_1_op_res_f_res_44934;
                            
                            if (x_44925) {
                                defunc_1_op_res_f_res_44934 = x_44926;
                            } else {
                                defunc_1_op_res_f_res_44934 = x_44923;
                            }
                            defunc_1_op_res_44928 = defunc_1_op_res_f_res_44933;
                            defunc_1_op_res_44929 = defunc_1_op_res_f_res_44934;
                        }
                        
                        float defunc_1_op_res_44935 = x_44924 + x_44927;
                        
                        x_44922 = defunc_1_op_res_44928;
                        x_44923 = defunc_1_op_res_44929;
                        x_44924 = defunc_1_op_res_44935;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899)] =
                            x_44922;
                        ((__local
                          int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899)] =
                            x_44923;
                        ((__local
                          float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899)] =
                            x_44924;
                    }
                }
                skip_waves_44938 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_44899) == (int64_t) 0) {
                    x_acc_44916 = x_44922;
                    x_acc_44917 = x_44923;
                    x_acc_44918 = x_44924;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_44899) == (int64_t) 0)) {
                    x_acc_44916 = 0;
                    x_acc_44917 = -1;
                    x_acc_44918 = 0.0F;
                }
            }
        }
        x_40445 = x_acc_44916;
        x_40446 = x_acc_44917;
        x_40447 = x_acc_44918;
        if (groups_per_segment_44885 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44899 == 0) {
                    ((__global bool *) mem_43462)[gtid_40260] = x_acc_44916;
                    ((__global int32_t *) mem_43464)[gtid_40260] = x_acc_44917;
                    ((__global float *) mem_43466)[gtid_40260] = x_acc_44918;
                }
            }
        } else {
            int32_t old_counter_44939;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44899 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_44890)[sext_i32_i64(virt_group_id_44913) *
                                                       segred_group_sizze_40439] =
                        x_acc_44916;
                    ((__global
                      int32_t *) group_res_arr_mem_44892)[sext_i32_i64(virt_group_id_44913) *
                                                          segred_group_sizze_40439] =
                        x_acc_44917;
                    ((__global
                      float *) group_res_arr_mem_44894)[sext_i32_i64(virt_group_id_44913) *
                                                        segred_group_sizze_40439] =
                        x_acc_44918;
                    mem_fence_global();
                    old_counter_44939 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44896)[sext_i32_i64(srem32(flat_segment_id_44914,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44909)[(int64_t) 0] =
                        old_counter_44939 == groups_per_segment_44885 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44940;
            
            is_last_group_44940 = ((__local
                                    bool *) sync_arr_mem_44909)[(int64_t) 0];
            if (is_last_group_44940) {
                if (local_tid_44899 == 0) {
                    old_counter_44939 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44896)[sext_i32_i64(srem32(flat_segment_id_44914,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44885));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44941 =
                            sdiv_up64(groups_per_segment_44885,
                                      segred_group_sizze_40439);
                    
                    x_40445 = 0;
                    x_40446 = -1;
                    x_40447 = 0.0F;
                    for (int64_t i_44942 = 0; i_44942 < read_per_thread_44941;
                         i_44942++) {
                        int64_t group_res_id_44943 =
                                sext_i32_i64(local_tid_44899) *
                                read_per_thread_44941 + i_44942;
                        int64_t index_of_group_res_44944 =
                                sext_i32_i64(flat_segment_id_44914) *
                                groups_per_segment_44885 + group_res_id_44943;
                        
                        if (slt64(group_res_id_44943,
                                  groups_per_segment_44885)) {
                            x_40448 = ((__global
                                        bool *) group_res_arr_mem_44890)[index_of_group_res_44944 *
                                                                         segred_group_sizze_40439];
                            x_40449 = ((__global
                                        int32_t *) group_res_arr_mem_44892)[index_of_group_res_44944 *
                                                                            segred_group_sizze_40439];
                            x_40450 = ((__global
                                        float *) group_res_arr_mem_44894)[index_of_group_res_44944 *
                                                                          segred_group_sizze_40439];
                            
                            bool defunc_1_op_res_40451;
                            int32_t defunc_1_op_res_40452;
                            
                            if (x_40445) {
                                defunc_1_op_res_40451 = x_40445;
                                defunc_1_op_res_40452 = x_40446;
                            } else {
                                bool x_40453 = x_40448 && x_40448;
                                bool x_40454 = !x_40448;
                                bool y_40455 = x_40445 && x_40454;
                                bool defunc_1_op_res_f_res_40456 = x_40453 ||
                                     y_40455;
                                int32_t defunc_1_op_res_f_res_40457;
                                
                                if (x_40448) {
                                    defunc_1_op_res_f_res_40457 = x_40449;
                                } else {
                                    defunc_1_op_res_f_res_40457 = x_40446;
                                }
                                defunc_1_op_res_40451 =
                                    defunc_1_op_res_f_res_40456;
                                defunc_1_op_res_40452 =
                                    defunc_1_op_res_f_res_40457;
                            }
                            
                            float defunc_1_op_res_40458 = x_40447 + x_40450;
                            
                            x_40445 = defunc_1_op_res_40451;
                            x_40446 = defunc_1_op_res_40452;
                            x_40447 = defunc_1_op_res_40458;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899)] =
                    x_40445;
                ((__local
                  int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899)] =
                    x_40446;
                ((__local
                  float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899)] =
                    x_40447;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44945;
                    int32_t skip_waves_44946;
                    
                    skip_waves_44946 = 1;
                    
                    bool x_44922;
                    int32_t x_44923;
                    float x_44924;
                    bool x_44925;
                    int32_t x_44926;
                    float x_44927;
                    
                    offset_44945 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44899,
                                  sext_i64_i32(segred_group_sizze_40439))) {
                            x_44922 = ((__local
                                        bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899 +
                                                                   offset_44945)];
                            x_44923 = ((__local
                                        int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899 +
                                                                      offset_44945)];
                            x_44924 = ((__local
                                        float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899 +
                                                                    offset_44945)];
                        }
                    }
                    offset_44945 = 1;
                    while (slt32(offset_44945, wave_sizze_44901)) {
                        if (slt32(local_tid_44899 + offset_44945,
                                  sext_i64_i32(segred_group_sizze_40439)) &&
                            ((local_tid_44899 - squot32(local_tid_44899,
                                                        wave_sizze_44901) *
                              wave_sizze_44901) & (2 * offset_44945 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44925 = ((volatile __local
                                            bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899 +
                                                                       offset_44945)];
                                x_44926 = ((volatile __local
                                            int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899 +
                                                                          offset_44945)];
                                x_44927 = ((volatile __local
                                            float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899 +
                                                                        offset_44945)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44928;
                                int32_t defunc_1_op_res_44929;
                                
                                if (x_44922) {
                                    defunc_1_op_res_44928 = x_44922;
                                    defunc_1_op_res_44929 = x_44923;
                                } else {
                                    bool x_44930 = x_44925 && x_44925;
                                    bool x_44931 = !x_44925;
                                    bool y_44932 = x_44922 && x_44931;
                                    bool defunc_1_op_res_f_res_44933 =
                                         x_44930 || y_44932;
                                    int32_t defunc_1_op_res_f_res_44934;
                                    
                                    if (x_44925) {
                                        defunc_1_op_res_f_res_44934 = x_44926;
                                    } else {
                                        defunc_1_op_res_f_res_44934 = x_44923;
                                    }
                                    defunc_1_op_res_44928 =
                                        defunc_1_op_res_f_res_44933;
                                    defunc_1_op_res_44929 =
                                        defunc_1_op_res_f_res_44934;
                                }
                                
                                float defunc_1_op_res_44935 = x_44924 + x_44927;
                                
                                x_44922 = defunc_1_op_res_44928;
                                x_44923 = defunc_1_op_res_44929;
                                x_44924 = defunc_1_op_res_44935;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899)] =
                                    x_44922;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899)] =
                                    x_44923;
                                ((volatile __local
                                  float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899)] =
                                    x_44924;
                            }
                        }
                        offset_44945 *= 2;
                    }
                    while (slt32(skip_waves_44946,
                                 squot32(sext_i64_i32(segred_group_sizze_40439) +
                                         wave_sizze_44901 - 1,
                                         wave_sizze_44901))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44945 = skip_waves_44946 * wave_sizze_44901;
                        if (slt32(local_tid_44899 + offset_44945,
                                  sext_i64_i32(segred_group_sizze_40439)) &&
                            ((local_tid_44899 - squot32(local_tid_44899,
                                                        wave_sizze_44901) *
                              wave_sizze_44901) == 0 &&
                             (squot32(local_tid_44899, wave_sizze_44901) & (2 *
                                                                            skip_waves_44946 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44925 = ((__local
                                            bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899 +
                                                                       offset_44945)];
                                x_44926 = ((__local
                                            int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899 +
                                                                          offset_44945)];
                                x_44927 = ((__local
                                            float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899 +
                                                                        offset_44945)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44928;
                                int32_t defunc_1_op_res_44929;
                                
                                if (x_44922) {
                                    defunc_1_op_res_44928 = x_44922;
                                    defunc_1_op_res_44929 = x_44923;
                                } else {
                                    bool x_44930 = x_44925 && x_44925;
                                    bool x_44931 = !x_44925;
                                    bool y_44932 = x_44922 && x_44931;
                                    bool defunc_1_op_res_f_res_44933 =
                                         x_44930 || y_44932;
                                    int32_t defunc_1_op_res_f_res_44934;
                                    
                                    if (x_44925) {
                                        defunc_1_op_res_f_res_44934 = x_44926;
                                    } else {
                                        defunc_1_op_res_f_res_44934 = x_44923;
                                    }
                                    defunc_1_op_res_44928 =
                                        defunc_1_op_res_f_res_44933;
                                    defunc_1_op_res_44929 =
                                        defunc_1_op_res_f_res_44934;
                                }
                                
                                float defunc_1_op_res_44935 = x_44924 + x_44927;
                                
                                x_44922 = defunc_1_op_res_44928;
                                x_44923 = defunc_1_op_res_44929;
                                x_44924 = defunc_1_op_res_44935;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_44903)[sext_i32_i64(local_tid_44899)] =
                                    x_44922;
                                ((__local
                                  int32_t *) red_arr_mem_44905)[sext_i32_i64(local_tid_44899)] =
                                    x_44923;
                                ((__local
                                  float *) red_arr_mem_44907)[sext_i32_i64(local_tid_44899)] =
                                    x_44924;
                            }
                        }
                        skip_waves_44946 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44899 == 0) {
                            ((__global bool *) mem_43462)[gtid_40260] = x_44922;
                            ((__global int32_t *) mem_43464)[gtid_40260] =
                                x_44923;
                            ((__global float *) mem_43466)[gtid_40260] =
                                x_44924;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40439
}
__kernel void mainzisegred_nonseg_39686(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_44662_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_44660_backing_aligned_1,
                                        int64_t m_28661,
                                        int64_t num_groups_39681,
                                        int64_t num_threads_44654, __global
                                        unsigned char *defunc_3_map_res_mem_43401,
                                        __global unsigned char *mem_43406,
                                        __global
                                        unsigned char *mainzicounter_mem_44650,
                                        __global
                                        unsigned char *group_res_arr_mem_44652)
{
    #define segred_group_sizze_39679 (mainzisegred_group_sizze_39678)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44662_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44662_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44660_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44660_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44655;
    int32_t local_tid_44656;
    int64_t group_sizze_44659;
    int32_t wave_sizze_44658;
    int32_t group_tid_44657;
    
    global_tid_44655 = get_global_id(0);
    local_tid_44656 = get_local_id(0);
    group_sizze_44659 = get_local_size(0);
    wave_sizze_44658 = LOCKSTEP_WIDTH;
    group_tid_44657 = get_group_id(0);
    
    int32_t phys_tid_39686;
    
    phys_tid_39686 = global_tid_44655;
    
    __local char *sync_arr_mem_44660;
    
    sync_arr_mem_44660 = (__local char *) sync_arr_mem_44660_backing_0;
    
    __local char *red_arr_mem_44662;
    
    red_arr_mem_44662 = (__local char *) red_arr_mem_44662_backing_1;
    
    int64_t dummy_39684;
    
    dummy_39684 = (int64_t) 0;
    
    int64_t gtid_39685;
    
    gtid_39685 = (int64_t) 0;
    
    int32_t x_acc_44664;
    int64_t chunk_sizze_44665;
    
    chunk_sizze_44665 = smin64(sdiv_up64(m_28661,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_39679 *
                                         num_groups_39681))),
                               sdiv_up64(m_28661 - sext_i32_i64(phys_tid_39686),
                                         num_threads_44654));
    
    int32_t x_29027;
    int32_t x_29028;
    
    // neutral-initialise the accumulators
    {
        x_acc_44664 = 0;
    }
    for (int64_t i_44669 = 0; i_44669 < chunk_sizze_44665; i_44669++) {
        gtid_39685 = sext_i32_i64(phys_tid_39686) + num_threads_44654 * i_44669;
        // apply map function
        {
            int32_t x_29030 = ((__global
                                int32_t *) defunc_3_map_res_mem_43401)[gtid_39685];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_29027 = x_acc_44664;
            }
            // load new values
            {
                x_29028 = x_29030;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_29029 = smax32(x_29027, x_29028);
                
                // store in accumulator
                {
                    x_acc_44664 = defunc_1_op_res_29029;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_29027 = x_acc_44664;
        ((__local int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656)] =
            x_29027;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44670;
    int32_t skip_waves_44671;
    
    skip_waves_44671 = 1;
    
    int32_t x_44666;
    int32_t x_44667;
    
    offset_44670 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44656, sext_i64_i32(segred_group_sizze_39679))) {
            x_44666 = ((__local
                        int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656 +
                                                      offset_44670)];
        }
    }
    offset_44670 = 1;
    while (slt32(offset_44670, wave_sizze_44658)) {
        if (slt32(local_tid_44656 + offset_44670,
                  sext_i64_i32(segred_group_sizze_39679)) && ((local_tid_44656 -
                                                               squot32(local_tid_44656,
                                                                       wave_sizze_44658) *
                                                               wave_sizze_44658) &
                                                              (2 *
                                                               offset_44670 -
                                                               1)) == 0) {
            // read array element
            {
                x_44667 = ((volatile __local
                            int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656 +
                                                          offset_44670)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44668 = smax32(x_44666, x_44667);
                
                x_44666 = defunc_1_op_res_44668;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656)] =
                    x_44666;
            }
        }
        offset_44670 *= 2;
    }
    while (slt32(skip_waves_44671,
                 squot32(sext_i64_i32(segred_group_sizze_39679) +
                         wave_sizze_44658 - 1, wave_sizze_44658))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44670 = skip_waves_44671 * wave_sizze_44658;
        if (slt32(local_tid_44656 + offset_44670,
                  sext_i64_i32(segred_group_sizze_39679)) && ((local_tid_44656 -
                                                               squot32(local_tid_44656,
                                                                       wave_sizze_44658) *
                                                               wave_sizze_44658) ==
                                                              0 &&
                                                              (squot32(local_tid_44656,
                                                                       wave_sizze_44658) &
                                                               (2 *
                                                                skip_waves_44671 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44667 = ((__local
                            int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656 +
                                                          offset_44670)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44668 = smax32(x_44666, x_44667);
                
                x_44666 = defunc_1_op_res_44668;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656)] =
                    x_44666;
            }
        }
        skip_waves_44671 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44656) == (int64_t) 0) {
            x_acc_44664 = x_44666;
        }
    }
    
    int32_t old_counter_44672;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44656 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44652)[sext_i32_i64(group_tid_44657) *
                                                  segred_group_sizze_39679] =
                x_acc_44664;
            mem_fence_global();
            old_counter_44672 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_44650)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44660)[(int64_t) 0] =
                old_counter_44672 == num_groups_39681 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44673;
    
    is_last_group_44673 = ((__local bool *) sync_arr_mem_44660)[(int64_t) 0];
    if (is_last_group_44673) {
        if (local_tid_44656 == 0) {
            old_counter_44672 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_44650)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_39681));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44674 = sdiv_up64(num_groups_39681,
                                                      segred_group_sizze_39679);
            
            x_29027 = 0;
            for (int64_t i_44675 = 0; i_44675 < read_per_thread_44674;
                 i_44675++) {
                int64_t group_res_id_44676 = sext_i32_i64(local_tid_44656) *
                        read_per_thread_44674 + i_44675;
                int64_t index_of_group_res_44677 = group_res_id_44676;
                
                if (slt64(group_res_id_44676, num_groups_39681)) {
                    x_29028 = ((__global
                                int32_t *) group_res_arr_mem_44652)[index_of_group_res_44677 *
                                                                    segred_group_sizze_39679];
                    
                    int32_t defunc_1_op_res_29029;
                    
                    defunc_1_op_res_29029 = smax32(x_29027, x_29028);
                    x_29027 = defunc_1_op_res_29029;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656)] =
            x_29027;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44678;
            int32_t skip_waves_44679;
            
            skip_waves_44679 = 1;
            
            int32_t x_44666;
            int32_t x_44667;
            
            offset_44678 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44656,
                          sext_i64_i32(segred_group_sizze_39679))) {
                    x_44666 = ((__local
                                int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656 +
                                                              offset_44678)];
                }
            }
            offset_44678 = 1;
            while (slt32(offset_44678, wave_sizze_44658)) {
                if (slt32(local_tid_44656 + offset_44678,
                          sext_i64_i32(segred_group_sizze_39679)) &&
                    ((local_tid_44656 - squot32(local_tid_44656,
                                                wave_sizze_44658) *
                      wave_sizze_44658) & (2 * offset_44678 - 1)) == 0) {
                    // read array element
                    {
                        x_44667 = ((volatile __local
                                    int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656 +
                                                                  offset_44678)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44668 = smax32(x_44666,
                                                               x_44667);
                        
                        x_44666 = defunc_1_op_res_44668;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656)] =
                            x_44666;
                    }
                }
                offset_44678 *= 2;
            }
            while (slt32(skip_waves_44679,
                         squot32(sext_i64_i32(segred_group_sizze_39679) +
                                 wave_sizze_44658 - 1, wave_sizze_44658))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44678 = skip_waves_44679 * wave_sizze_44658;
                if (slt32(local_tid_44656 + offset_44678,
                          sext_i64_i32(segred_group_sizze_39679)) &&
                    ((local_tid_44656 - squot32(local_tid_44656,
                                                wave_sizze_44658) *
                      wave_sizze_44658) == 0 && (squot32(local_tid_44656,
                                                         wave_sizze_44658) &
                                                 (2 * skip_waves_44679 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44667 = ((__local
                                    int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656 +
                                                                  offset_44678)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44668 = smax32(x_44666,
                                                               x_44667);
                        
                        x_44666 = defunc_1_op_res_44668;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44662)[sext_i32_i64(local_tid_44656)] =
                            x_44666;
                    }
                }
                skip_waves_44679 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44656 == 0) {
                    ((__global int32_t *) mem_43406)[(int64_t) 0] = x_44666;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39679
}
__kernel void mainzisegred_small_37716(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_43920_backing_aligned_0,
                                       int64_t N_28660, int64_t m_28661,
                                       int64_t i32_res_28670,
                                       int64_t i32_res_28676,
                                       int64_t num_groups_37855,
                                       int64_t segment_sizze_nonzzero_43913,
                                       __global unsigned char *images_mem_42538,
                                       __global
                                       unsigned char *binop_p_mem_42547,
                                       __global unsigned char *mem_42688,
                                       __global unsigned char *mem_42693)
{
    #define segred_group_sizze_37854 (mainzisegred_group_sizze_37710)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_43920_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43920_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43915;
    int32_t local_tid_43916;
    int64_t group_sizze_43919;
    int32_t wave_sizze_43918;
    int32_t group_tid_43917;
    
    global_tid_43915 = get_global_id(0);
    local_tid_43916 = get_local_id(0);
    group_sizze_43919 = get_local_size(0);
    wave_sizze_43918 = LOCKSTEP_WIDTH;
    group_tid_43917 = get_group_id(0);
    
    int32_t phys_tid_37716;
    
    phys_tid_37716 = global_tid_43915;
    
    __local char *red_arr_mem_43920;
    
    red_arr_mem_43920 = (__local char *) red_arr_mem_43920_backing_0;
    
    int32_t phys_group_id_43922;
    
    phys_group_id_43922 = get_group_id(0);
    for (int32_t i_43923 = 0; i_43923 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661 * i32_res_28676 *
                                          i32_res_28676,
                                          squot64(segred_group_sizze_37854,
                                                  segment_sizze_nonzzero_43913))) -
                   phys_group_id_43922, sext_i64_i32(num_groups_37855));
         i_43923++) {
        int32_t virt_group_id_43924 = phys_group_id_43922 + i_43923 *
                sext_i64_i32(num_groups_37855);
        int64_t gtid_37703 = squot64(squot64(sext_i32_i64(local_tid_43916),
                                             segment_sizze_nonzzero_43913) +
                                     sext_i32_i64(virt_group_id_43924) *
                                     squot64(segred_group_sizze_37854,
                                             segment_sizze_nonzzero_43913),
                                     i32_res_28676 * i32_res_28676);
        int64_t gtid_37704 = squot64(squot64(sext_i32_i64(local_tid_43916),
                                             segment_sizze_nonzzero_43913) +
                                     sext_i32_i64(virt_group_id_43924) *
                                     squot64(segred_group_sizze_37854,
                                             segment_sizze_nonzzero_43913) -
                                     squot64(squot64(sext_i32_i64(local_tid_43916),
                                                     segment_sizze_nonzzero_43913) +
                                             sext_i32_i64(virt_group_id_43924) *
                                             squot64(segred_group_sizze_37854,
                                                     segment_sizze_nonzzero_43913),
                                             i32_res_28676 * i32_res_28676) *
                                     (i32_res_28676 * i32_res_28676),
                                     i32_res_28676);
        int64_t gtid_37705 = squot64(sext_i32_i64(local_tid_43916),
                                     segment_sizze_nonzzero_43913) +
                sext_i32_i64(virt_group_id_43924) *
                squot64(segred_group_sizze_37854,
                        segment_sizze_nonzzero_43913) -
                squot64(squot64(sext_i32_i64(local_tid_43916),
                                segment_sizze_nonzzero_43913) +
                        sext_i32_i64(virt_group_id_43924) *
                        squot64(segred_group_sizze_37854,
                                segment_sizze_nonzzero_43913), i32_res_28676 *
                        i32_res_28676) * (i32_res_28676 * i32_res_28676) -
                squot64(squot64(sext_i32_i64(local_tid_43916),
                                segment_sizze_nonzzero_43913) +
                        sext_i32_i64(virt_group_id_43924) *
                        squot64(segred_group_sizze_37854,
                                segment_sizze_nonzzero_43913) -
                        squot64(squot64(sext_i32_i64(local_tid_43916),
                                        segment_sizze_nonzzero_43913) +
                                sext_i32_i64(virt_group_id_43924) *
                                squot64(segred_group_sizze_37854,
                                        segment_sizze_nonzzero_43913),
                                i32_res_28676 * i32_res_28676) *
                        (i32_res_28676 * i32_res_28676), i32_res_28676) *
                i32_res_28676;
        int64_t gtid_37715 = srem64(sext_i32_i64(local_tid_43916),
                                    i32_res_28670);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28670) && (((slt64(gtid_37703,
                                                              m_28661) &&
                                                        slt64(gtid_37704,
                                                              i32_res_28676)) &&
                                                       slt64(gtid_37705,
                                                             i32_res_28676)) &&
                                                      slt64(sext_i32_i64(local_tid_43916),
                                                            i32_res_28670 *
                                                            squot64(segred_group_sizze_37854,
                                                                    segment_sizze_nonzzero_43913)))) {
                float x_37864 = ((__global
                                  float *) images_mem_42538)[gtid_37703 *
                                                             N_28660 +
                                                             gtid_37715];
                float x_37865 = ((__global
                                  float *) binop_p_mem_42547)[gtid_37704 *
                                                              N_28660 +
                                                              gtid_37715];
                float x_37866 = ((__global float *) mem_42688)[gtid_37705 *
                                                               N_28660 +
                                                               gtid_37715];
                float x_37867 = x_37865 * x_37866;
                bool isnan_res_37868;
                
                isnan_res_37868 = futrts_isnan32(x_37864);
                
                float y_37869;
                
                if (isnan_res_37868) {
                    y_37869 = 0.0F;
                } else {
                    y_37869 = 1.0F;
                }
                
                float defunc_2_f_res_37870 = x_37867 * y_37869;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)] =
                        defunc_2_f_res_37870;
                }
            } else {
                ((__local
                  float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28670)) {
            // perform segmented scan to imitate reduction
            {
                float x_37858;
                float x_37859;
                float x_43925;
                float x_43926;
                bool ltid_in_bounds_43928;
                
                ltid_in_bounds_43928 = slt64(sext_i32_i64(local_tid_43916),
                                             i32_res_28670 *
                                             squot64(segred_group_sizze_37854,
                                                     segment_sizze_nonzzero_43913));
                
                int32_t skip_threads_43929;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_43928) {
                        x_37859 = ((volatile __local
                                    float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)];
                        if ((local_tid_43916 - squot32(local_tid_43916, 32) *
                             32) == 0) {
                            x_37858 = x_37859;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_43929 = 1;
                    while (slt32(skip_threads_43929, 32)) {
                        if (sle32(skip_threads_43929, local_tid_43916 -
                                  squot32(local_tid_43916, 32) * 32) &&
                            ltid_in_bounds_43928) {
                            // read operands
                            {
                                x_37858 = ((volatile __local
                                            float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916) -
                                                                        sext_i32_i64(skip_threads_43929)];
                            }
                            // perform operation
                            {
                                bool inactive_43930 =
                                     slt64(srem64(sext_i32_i64(local_tid_43916),
                                                  i32_res_28670),
                                           sext_i32_i64(local_tid_43916) -
                                           sext_i32_i64(local_tid_43916 -
                                           skip_threads_43929));
                                
                                if (inactive_43930) {
                                    x_37858 = x_37859;
                                }
                                if (!inactive_43930) {
                                    float defunc_1_op_res_37860 = x_37858 +
                                          x_37859;
                                    
                                    x_37858 = defunc_1_op_res_37860;
                                }
                            }
                        }
                        if (sle32(wave_sizze_43918, skip_threads_43929)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_43929, local_tid_43916 -
                                  squot32(local_tid_43916, 32) * 32) &&
                            ltid_in_bounds_43928) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)] =
                                    x_37858;
                                x_37859 = x_37858;
                            }
                        }
                        if (sle32(wave_sizze_43918, skip_threads_43929)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_43929 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_43916 - squot32(local_tid_43916, 32) * 32) ==
                        31 && ltid_in_bounds_43928) {
                        ((volatile __local
                          float *) red_arr_mem_43920)[sext_i32_i64(squot32(local_tid_43916,
                                                                           32))] =
                            x_37858;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_43931;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_43916, 32) == 0 &&
                            ltid_in_bounds_43928) {
                            x_43926 = ((volatile __local
                                        float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)];
                            if ((local_tid_43916 - squot32(local_tid_43916,
                                                           32) * 32) == 0) {
                                x_43925 = x_43926;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_43931 = 1;
                        while (slt32(skip_threads_43931, 32)) {
                            if (sle32(skip_threads_43931, local_tid_43916 -
                                      squot32(local_tid_43916, 32) * 32) &&
                                (squot32(local_tid_43916, 32) == 0 &&
                                 ltid_in_bounds_43928)) {
                                // read operands
                                {
                                    x_43925 = ((volatile __local
                                                float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916) -
                                                                            sext_i32_i64(skip_threads_43931)];
                                }
                                // perform operation
                                {
                                    bool inactive_43932 =
                                         slt64(srem64(sext_i32_i64(local_tid_43916 *
                                                      32 + 32 - 1),
                                                      i32_res_28670),
                                               sext_i32_i64(local_tid_43916 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_43916 -
                                                             skip_threads_43931) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_43932) {
                                        x_43925 = x_43926;
                                    }
                                    if (!inactive_43932) {
                                        float defunc_1_op_res_43927 = x_43925 +
                                              x_43926;
                                        
                                        x_43925 = defunc_1_op_res_43927;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_43918, skip_threads_43931)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_43931, local_tid_43916 -
                                      squot32(local_tid_43916, 32) * 32) &&
                                (squot32(local_tid_43916, 32) == 0 &&
                                 ltid_in_bounds_43928)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)] =
                                        x_43925;
                                    x_43926 = x_43925;
                                }
                            }
                            if (sle32(wave_sizze_43918, skip_threads_43931)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_43931 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_43916, 32) == 0 ||
                          !ltid_in_bounds_43928)) {
                        // read operands
                        {
                            x_37859 = x_37858;
                            x_37858 = ((__local
                                        float *) red_arr_mem_43920)[sext_i32_i64(squot32(local_tid_43916,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_43933 =
                                 slt64(srem64(sext_i32_i64(local_tid_43916),
                                              i32_res_28670),
                                       sext_i32_i64(local_tid_43916) -
                                       sext_i32_i64(squot32(local_tid_43916,
                                                            32) * 32 - 1));
                            
                            if (inactive_43933) {
                                x_37858 = x_37859;
                            }
                            if (!inactive_43933) {
                                float defunc_1_op_res_37860 = x_37858 + x_37859;
                                
                                x_37858 = defunc_1_op_res_37860;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)] =
                                x_37858;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_43916, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_43920)[sext_i32_i64(local_tid_43916)] =
                            x_37859;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_43924) *
                      squot64(segred_group_sizze_37854,
                              segment_sizze_nonzzero_43913) +
                      sext_i32_i64(local_tid_43916), m_28661 * i32_res_28676 *
                      i32_res_28676) && slt64(sext_i32_i64(local_tid_43916),
                                              squot64(segred_group_sizze_37854,
                                                      segment_sizze_nonzzero_43913))) {
                ((__global
                  float *) mem_42693)[squot64(sext_i32_i64(virt_group_id_43924) *
                                              squot64(segred_group_sizze_37854,
                                                      segment_sizze_nonzzero_43913) +
                                              sext_i32_i64(local_tid_43916),
                                              i32_res_28676 * i32_res_28676) *
                                      (i32_res_28676 * i32_res_28676) +
                                      squot64(sext_i32_i64(virt_group_id_43924) *
                                              squot64(segred_group_sizze_37854,
                                                      segment_sizze_nonzzero_43913) +
                                              sext_i32_i64(local_tid_43916) -
                                              squot64(sext_i32_i64(virt_group_id_43924) *
                                                      squot64(segred_group_sizze_37854,
                                                              segment_sizze_nonzzero_43913) +
                                                      sext_i32_i64(local_tid_43916),
                                                      i32_res_28676 *
                                                      i32_res_28676) *
                                              (i32_res_28676 * i32_res_28676),
                                              i32_res_28676) * i32_res_28676 +
                                      (sext_i32_i64(virt_group_id_43924) *
                                       squot64(segred_group_sizze_37854,
                                               segment_sizze_nonzzero_43913) +
                                       sext_i32_i64(local_tid_43916) -
                                       squot64(sext_i32_i64(virt_group_id_43924) *
                                               squot64(segred_group_sizze_37854,
                                                       segment_sizze_nonzzero_43913) +
                                               sext_i32_i64(local_tid_43916),
                                               i32_res_28676 * i32_res_28676) *
                                       (i32_res_28676 * i32_res_28676) -
                                       squot64(sext_i32_i64(virt_group_id_43924) *
                                               squot64(segred_group_sizze_37854,
                                                       segment_sizze_nonzzero_43913) +
                                               sext_i32_i64(local_tid_43916) -
                                               squot64(sext_i32_i64(virt_group_id_43924) *
                                                       squot64(segred_group_sizze_37854,
                                                               segment_sizze_nonzzero_43913) +
                                                       sext_i32_i64(local_tid_43916),
                                                       i32_res_28676 *
                                                       i32_res_28676) *
                                               (i32_res_28676 * i32_res_28676),
                                               i32_res_28676) *
                                       i32_res_28676)] = ((__local
                                                           float *) red_arr_mem_43920)[(sext_i32_i64(local_tid_43916) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_43913 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37854
}
__kernel void mainzisegred_small_38763(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44117_backing_aligned_0,
                                       int64_t N_28660, int64_t m_28661,
                                       int64_t i32_res_28670,
                                       int64_t i32_res_28676,
                                       int64_t num_groups_38816,
                                       int64_t segment_sizze_nonzzero_44110,
                                       __global unsigned char *images_mem_42538,
                                       __global
                                       unsigned char *binop_p_mem_42547,
                                       __global unsigned char *mem_43001)
{
    #define segred_group_sizze_38815 (mainzisegred_group_sizze_38757)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44117_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44117_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44112;
    int32_t local_tid_44113;
    int64_t group_sizze_44116;
    int32_t wave_sizze_44115;
    int32_t group_tid_44114;
    
    global_tid_44112 = get_global_id(0);
    local_tid_44113 = get_local_id(0);
    group_sizze_44116 = get_local_size(0);
    wave_sizze_44115 = LOCKSTEP_WIDTH;
    group_tid_44114 = get_group_id(0);
    
    int32_t phys_tid_38763;
    
    phys_tid_38763 = global_tid_44112;
    
    __local char *red_arr_mem_44117;
    
    red_arr_mem_44117 = (__local char *) red_arr_mem_44117_backing_0;
    
    int32_t phys_group_id_44119;
    
    phys_group_id_44119 = get_group_id(0);
    for (int32_t i_44120 = 0; i_44120 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661 * i32_res_28676,
                                          squot64(segred_group_sizze_38815,
                                                  segment_sizze_nonzzero_44110))) -
                   phys_group_id_44119, sext_i64_i32(num_groups_38816));
         i_44120++) {
        int32_t virt_group_id_44121 = phys_group_id_44119 + i_44120 *
                sext_i64_i32(num_groups_38816);
        int64_t gtid_38752 = squot64(squot64(sext_i32_i64(local_tid_44113),
                                             segment_sizze_nonzzero_44110) +
                                     sext_i32_i64(virt_group_id_44121) *
                                     squot64(segred_group_sizze_38815,
                                             segment_sizze_nonzzero_44110),
                                     i32_res_28676);
        int64_t gtid_38753 = squot64(sext_i32_i64(local_tid_44113),
                                     segment_sizze_nonzzero_44110) +
                sext_i32_i64(virt_group_id_44121) *
                squot64(segred_group_sizze_38815,
                        segment_sizze_nonzzero_44110) -
                squot64(squot64(sext_i32_i64(local_tid_44113),
                                segment_sizze_nonzzero_44110) +
                        sext_i32_i64(virt_group_id_44121) *
                        squot64(segred_group_sizze_38815,
                                segment_sizze_nonzzero_44110), i32_res_28676) *
                i32_res_28676;
        int64_t gtid_38762 = srem64(sext_i32_i64(local_tid_44113),
                                    i32_res_28670);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28670) && ((slt64(gtid_38752,
                                                             m_28661) &&
                                                       slt64(gtid_38753,
                                                             i32_res_28676)) &&
                                                      slt64(sext_i32_i64(local_tid_44113),
                                                            i32_res_28670 *
                                                            squot64(segred_group_sizze_38815,
                                                                    segment_sizze_nonzzero_44110)))) {
                float x_38825 = ((__global
                                  float *) images_mem_42538)[gtid_38752 *
                                                             N_28660 +
                                                             gtid_38762];
                bool isnan_res_38826;
                
                isnan_res_38826 = futrts_isnan32(x_38825);
                
                float defunc_1_f_res_38827;
                
                if (isnan_res_38826) {
                    defunc_1_f_res_38827 = 0.0F;
                } else {
                    float x_38824 = ((__global
                                      float *) binop_p_mem_42547)[gtid_38753 *
                                                                  N_28660 +
                                                                  gtid_38762];
                    float defunc_1_f_res_f_res_38828 = x_38824 * x_38825;
                    
                    defunc_1_f_res_38827 = defunc_1_f_res_f_res_38828;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)] =
                        defunc_1_f_res_38827;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28670)) {
            // perform segmented scan to imitate reduction
            {
                float x_38819;
                float x_38820;
                float x_44122;
                float x_44123;
                bool ltid_in_bounds_44125;
                
                ltid_in_bounds_44125 = slt64(sext_i32_i64(local_tid_44113),
                                             i32_res_28670 *
                                             squot64(segred_group_sizze_38815,
                                                     segment_sizze_nonzzero_44110));
                
                int32_t skip_threads_44126;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44125) {
                        x_38820 = ((volatile __local
                                    float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)];
                        if ((local_tid_44113 - squot32(local_tid_44113, 32) *
                             32) == 0) {
                            x_38819 = x_38820;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44126 = 1;
                    while (slt32(skip_threads_44126, 32)) {
                        if (sle32(skip_threads_44126, local_tid_44113 -
                                  squot32(local_tid_44113, 32) * 32) &&
                            ltid_in_bounds_44125) {
                            // read operands
                            {
                                x_38819 = ((volatile __local
                                            float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113) -
                                                                        sext_i32_i64(skip_threads_44126)];
                            }
                            // perform operation
                            {
                                bool inactive_44127 =
                                     slt64(srem64(sext_i32_i64(local_tid_44113),
                                                  i32_res_28670),
                                           sext_i32_i64(local_tid_44113) -
                                           sext_i32_i64(local_tid_44113 -
                                           skip_threads_44126));
                                
                                if (inactive_44127) {
                                    x_38819 = x_38820;
                                }
                                if (!inactive_44127) {
                                    float defunc_1_op_res_38821 = x_38819 +
                                          x_38820;
                                    
                                    x_38819 = defunc_1_op_res_38821;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44115, skip_threads_44126)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44126, local_tid_44113 -
                                  squot32(local_tid_44113, 32) * 32) &&
                            ltid_in_bounds_44125) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)] =
                                    x_38819;
                                x_38820 = x_38819;
                            }
                        }
                        if (sle32(wave_sizze_44115, skip_threads_44126)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44126 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44113 - squot32(local_tid_44113, 32) * 32) ==
                        31 && ltid_in_bounds_44125) {
                        ((volatile __local
                          float *) red_arr_mem_44117)[sext_i32_i64(squot32(local_tid_44113,
                                                                           32))] =
                            x_38819;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44128;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44113, 32) == 0 &&
                            ltid_in_bounds_44125) {
                            x_44123 = ((volatile __local
                                        float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)];
                            if ((local_tid_44113 - squot32(local_tid_44113,
                                                           32) * 32) == 0) {
                                x_44122 = x_44123;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44128 = 1;
                        while (slt32(skip_threads_44128, 32)) {
                            if (sle32(skip_threads_44128, local_tid_44113 -
                                      squot32(local_tid_44113, 32) * 32) &&
                                (squot32(local_tid_44113, 32) == 0 &&
                                 ltid_in_bounds_44125)) {
                                // read operands
                                {
                                    x_44122 = ((volatile __local
                                                float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113) -
                                                                            sext_i32_i64(skip_threads_44128)];
                                }
                                // perform operation
                                {
                                    bool inactive_44129 =
                                         slt64(srem64(sext_i32_i64(local_tid_44113 *
                                                      32 + 32 - 1),
                                                      i32_res_28670),
                                               sext_i32_i64(local_tid_44113 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44113 -
                                                             skip_threads_44128) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44129) {
                                        x_44122 = x_44123;
                                    }
                                    if (!inactive_44129) {
                                        float defunc_1_op_res_44124 = x_44122 +
                                              x_44123;
                                        
                                        x_44122 = defunc_1_op_res_44124;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44115, skip_threads_44128)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44128, local_tid_44113 -
                                      squot32(local_tid_44113, 32) * 32) &&
                                (squot32(local_tid_44113, 32) == 0 &&
                                 ltid_in_bounds_44125)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)] =
                                        x_44122;
                                    x_44123 = x_44122;
                                }
                            }
                            if (sle32(wave_sizze_44115, skip_threads_44128)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44128 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44113, 32) == 0 ||
                          !ltid_in_bounds_44125)) {
                        // read operands
                        {
                            x_38820 = x_38819;
                            x_38819 = ((__local
                                        float *) red_arr_mem_44117)[sext_i32_i64(squot32(local_tid_44113,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44130 =
                                 slt64(srem64(sext_i32_i64(local_tid_44113),
                                              i32_res_28670),
                                       sext_i32_i64(local_tid_44113) -
                                       sext_i32_i64(squot32(local_tid_44113,
                                                            32) * 32 - 1));
                            
                            if (inactive_44130) {
                                x_38819 = x_38820;
                            }
                            if (!inactive_44130) {
                                float defunc_1_op_res_38821 = x_38819 + x_38820;
                                
                                x_38819 = defunc_1_op_res_38821;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)] =
                                x_38819;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44113, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44117)[sext_i32_i64(local_tid_44113)] =
                            x_38820;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44121) *
                      squot64(segred_group_sizze_38815,
                              segment_sizze_nonzzero_44110) +
                      sext_i32_i64(local_tid_44113), m_28661 * i32_res_28676) &&
                slt64(sext_i32_i64(local_tid_44113),
                      squot64(segred_group_sizze_38815,
                              segment_sizze_nonzzero_44110))) {
                ((__global
                  float *) mem_43001)[squot64(sext_i32_i64(virt_group_id_44121) *
                                              squot64(segred_group_sizze_38815,
                                                      segment_sizze_nonzzero_44110) +
                                              sext_i32_i64(local_tid_44113),
                                              i32_res_28676) * i32_res_28676 +
                                      (sext_i32_i64(virt_group_id_44121) *
                                       squot64(segred_group_sizze_38815,
                                               segment_sizze_nonzzero_44110) +
                                       sext_i32_i64(local_tid_44113) -
                                       squot64(sext_i32_i64(virt_group_id_44121) *
                                               squot64(segred_group_sizze_38815,
                                                       segment_sizze_nonzzero_44110) +
                                               sext_i32_i64(local_tid_44113),
                                               i32_res_28676) *
                                       i32_res_28676)] = ((__local
                                                           float *) red_arr_mem_44117)[(sext_i32_i64(local_tid_44113) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44110 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38815
}
__kernel void mainzisegred_small_38900(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44205_backing_aligned_0,
                                       int64_t m_28661, int64_t i32_res_28676,
                                       int64_t num_groups_38949,
                                       int64_t segment_sizze_nonzzero_44198,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_42786,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43007,
                                       __global unsigned char *mem_43067)
{
    #define segred_group_sizze_38948 (mainzisegred_group_sizze_38894)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44205_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44205_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44200;
    int32_t local_tid_44201;
    int64_t group_sizze_44204;
    int32_t wave_sizze_44203;
    int32_t group_tid_44202;
    
    global_tid_44200 = get_global_id(0);
    local_tid_44201 = get_local_id(0);
    group_sizze_44204 = get_local_size(0);
    wave_sizze_44203 = LOCKSTEP_WIDTH;
    group_tid_44202 = get_group_id(0);
    
    int32_t phys_tid_38900;
    
    phys_tid_38900 = global_tid_44200;
    
    __local char *red_arr_mem_44205;
    
    red_arr_mem_44205 = (__local char *) red_arr_mem_44205_backing_0;
    
    int32_t phys_group_id_44207;
    
    phys_group_id_44207 = get_group_id(0);
    for (int32_t i_44208 = 0; i_44208 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661 * i32_res_28676,
                                          squot64(segred_group_sizze_38948,
                                                  segment_sizze_nonzzero_44198))) -
                   phys_group_id_44207, sext_i64_i32(num_groups_38949));
         i_44208++) {
        int32_t virt_group_id_44209 = phys_group_id_44207 + i_44208 *
                sext_i64_i32(num_groups_38949);
        int64_t gtid_38889 = squot64(squot64(sext_i32_i64(local_tid_44201),
                                             segment_sizze_nonzzero_44198) +
                                     sext_i32_i64(virt_group_id_44209) *
                                     squot64(segred_group_sizze_38948,
                                             segment_sizze_nonzzero_44198),
                                     i32_res_28676);
        int64_t gtid_38890 = squot64(sext_i32_i64(local_tid_44201),
                                     segment_sizze_nonzzero_44198) +
                sext_i32_i64(virt_group_id_44209) *
                squot64(segred_group_sizze_38948,
                        segment_sizze_nonzzero_44198) -
                squot64(squot64(sext_i32_i64(local_tid_44201),
                                segment_sizze_nonzzero_44198) +
                        sext_i32_i64(virt_group_id_44209) *
                        squot64(segred_group_sizze_38948,
                                segment_sizze_nonzzero_44198), i32_res_28676) *
                i32_res_28676;
        int64_t gtid_38899 = srem64(sext_i32_i64(local_tid_44201),
                                    i32_res_28676);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28676) && ((slt64(gtid_38889,
                                                             m_28661) &&
                                                       slt64(gtid_38890,
                                                             i32_res_28676)) &&
                                                      slt64(sext_i32_i64(local_tid_44201),
                                                            i32_res_28676 *
                                                            squot64(segred_group_sizze_38948,
                                                                    segment_sizze_nonzzero_44198)))) {
                float x_38958 = ((__global
                                  float *) defunc_3_map_res_mem_43007)[gtid_38889 *
                                                                       i32_res_28676 +
                                                                       gtid_38899];
                float x_38959 = ((__global
                                  float *) defunc_3_map_res_mem_42786)[gtid_38889 *
                                                                       (i32_res_28676 *
                                                                        i32_res_28676) +
                                                                       gtid_38890 *
                                                                       i32_res_28676 +
                                                                       gtid_38899];
                float defunc_1_f_res_38960 = x_38958 * x_38959;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)] =
                        defunc_1_f_res_38960;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28676)) {
            // perform segmented scan to imitate reduction
            {
                float x_38952;
                float x_38953;
                float x_44210;
                float x_44211;
                bool ltid_in_bounds_44213;
                
                ltid_in_bounds_44213 = slt64(sext_i32_i64(local_tid_44201),
                                             i32_res_28676 *
                                             squot64(segred_group_sizze_38948,
                                                     segment_sizze_nonzzero_44198));
                
                int32_t skip_threads_44214;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44213) {
                        x_38953 = ((volatile __local
                                    float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)];
                        if ((local_tid_44201 - squot32(local_tid_44201, 32) *
                             32) == 0) {
                            x_38952 = x_38953;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44214 = 1;
                    while (slt32(skip_threads_44214, 32)) {
                        if (sle32(skip_threads_44214, local_tid_44201 -
                                  squot32(local_tid_44201, 32) * 32) &&
                            ltid_in_bounds_44213) {
                            // read operands
                            {
                                x_38952 = ((volatile __local
                                            float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201) -
                                                                        sext_i32_i64(skip_threads_44214)];
                            }
                            // perform operation
                            {
                                bool inactive_44215 =
                                     slt64(srem64(sext_i32_i64(local_tid_44201),
                                                  i32_res_28676),
                                           sext_i32_i64(local_tid_44201) -
                                           sext_i32_i64(local_tid_44201 -
                                           skip_threads_44214));
                                
                                if (inactive_44215) {
                                    x_38952 = x_38953;
                                }
                                if (!inactive_44215) {
                                    float defunc_1_op_res_38954 = x_38952 +
                                          x_38953;
                                    
                                    x_38952 = defunc_1_op_res_38954;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44203, skip_threads_44214)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44214, local_tid_44201 -
                                  squot32(local_tid_44201, 32) * 32) &&
                            ltid_in_bounds_44213) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)] =
                                    x_38952;
                                x_38953 = x_38952;
                            }
                        }
                        if (sle32(wave_sizze_44203, skip_threads_44214)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44214 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44201 - squot32(local_tid_44201, 32) * 32) ==
                        31 && ltid_in_bounds_44213) {
                        ((volatile __local
                          float *) red_arr_mem_44205)[sext_i32_i64(squot32(local_tid_44201,
                                                                           32))] =
                            x_38952;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44216;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44201, 32) == 0 &&
                            ltid_in_bounds_44213) {
                            x_44211 = ((volatile __local
                                        float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)];
                            if ((local_tid_44201 - squot32(local_tid_44201,
                                                           32) * 32) == 0) {
                                x_44210 = x_44211;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44216 = 1;
                        while (slt32(skip_threads_44216, 32)) {
                            if (sle32(skip_threads_44216, local_tid_44201 -
                                      squot32(local_tid_44201, 32) * 32) &&
                                (squot32(local_tid_44201, 32) == 0 &&
                                 ltid_in_bounds_44213)) {
                                // read operands
                                {
                                    x_44210 = ((volatile __local
                                                float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201) -
                                                                            sext_i32_i64(skip_threads_44216)];
                                }
                                // perform operation
                                {
                                    bool inactive_44217 =
                                         slt64(srem64(sext_i32_i64(local_tid_44201 *
                                                      32 + 32 - 1),
                                                      i32_res_28676),
                                               sext_i32_i64(local_tid_44201 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44201 -
                                                             skip_threads_44216) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44217) {
                                        x_44210 = x_44211;
                                    }
                                    if (!inactive_44217) {
                                        float defunc_1_op_res_44212 = x_44210 +
                                              x_44211;
                                        
                                        x_44210 = defunc_1_op_res_44212;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44203, skip_threads_44216)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44216, local_tid_44201 -
                                      squot32(local_tid_44201, 32) * 32) &&
                                (squot32(local_tid_44201, 32) == 0 &&
                                 ltid_in_bounds_44213)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)] =
                                        x_44210;
                                    x_44211 = x_44210;
                                }
                            }
                            if (sle32(wave_sizze_44203, skip_threads_44216)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44216 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44201, 32) == 0 ||
                          !ltid_in_bounds_44213)) {
                        // read operands
                        {
                            x_38953 = x_38952;
                            x_38952 = ((__local
                                        float *) red_arr_mem_44205)[sext_i32_i64(squot32(local_tid_44201,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44218 =
                                 slt64(srem64(sext_i32_i64(local_tid_44201),
                                              i32_res_28676),
                                       sext_i32_i64(local_tid_44201) -
                                       sext_i32_i64(squot32(local_tid_44201,
                                                            32) * 32 - 1));
                            
                            if (inactive_44218) {
                                x_38952 = x_38953;
                            }
                            if (!inactive_44218) {
                                float defunc_1_op_res_38954 = x_38952 + x_38953;
                                
                                x_38952 = defunc_1_op_res_38954;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)] =
                                x_38952;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44201, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44205)[sext_i32_i64(local_tid_44201)] =
                            x_38953;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44209) *
                      squot64(segred_group_sizze_38948,
                              segment_sizze_nonzzero_44198) +
                      sext_i32_i64(local_tid_44201), m_28661 * i32_res_28676) &&
                slt64(sext_i32_i64(local_tid_44201),
                      squot64(segred_group_sizze_38948,
                              segment_sizze_nonzzero_44198))) {
                ((__global
                  float *) mem_43067)[squot64(sext_i32_i64(virt_group_id_44209) *
                                              squot64(segred_group_sizze_38948,
                                                      segment_sizze_nonzzero_44198) +
                                              sext_i32_i64(local_tid_44201),
                                              i32_res_28676) * i32_res_28676 +
                                      (sext_i32_i64(virt_group_id_44209) *
                                       squot64(segred_group_sizze_38948,
                                               segment_sizze_nonzzero_44198) +
                                       sext_i32_i64(local_tid_44201) -
                                       squot64(sext_i32_i64(virt_group_id_44209) *
                                               squot64(segred_group_sizze_38948,
                                                       segment_sizze_nonzzero_44198) +
                                               sext_i32_i64(local_tid_44201),
                                               i32_res_28676) *
                                       i32_res_28676)] = ((__local
                                                           float *) red_arr_mem_44205)[(sext_i32_i64(local_tid_44201) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44198 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38948
}
__kernel void mainzisegred_small_39030(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44337_backing_aligned_0,
                                       int64_t N_28660, int64_t m_28661,
                                       int64_t i32_res_28676,
                                       int64_t num_groups_39077,
                                       int64_t segment_sizze_nonzzero_44330,
                                       __global unsigned char *mem_42554,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43073,
                                       __global unsigned char *mem_43291)
{
    #define segred_group_sizze_39076 (mainzisegred_group_sizze_39024)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44337_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44337_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44332;
    int32_t local_tid_44333;
    int64_t group_sizze_44336;
    int32_t wave_sizze_44335;
    int32_t group_tid_44334;
    
    global_tid_44332 = get_global_id(0);
    local_tid_44333 = get_local_id(0);
    group_sizze_44336 = get_local_size(0);
    wave_sizze_44335 = LOCKSTEP_WIDTH;
    group_tid_44334 = get_group_id(0);
    
    int32_t phys_tid_39030;
    
    phys_tid_39030 = global_tid_44332;
    
    __local char *red_arr_mem_44337;
    
    red_arr_mem_44337 = (__local char *) red_arr_mem_44337_backing_0;
    
    int32_t phys_group_id_44339;
    
    phys_group_id_44339 = get_group_id(0);
    for (int32_t i_44340 = 0; i_44340 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661 * N_28660,
                                          squot64(segred_group_sizze_39076,
                                                  segment_sizze_nonzzero_44330))) -
                   phys_group_id_44339, sext_i64_i32(num_groups_39077));
         i_44340++) {
        int32_t virt_group_id_44341 = phys_group_id_44339 + i_44340 *
                sext_i64_i32(num_groups_39077);
        int64_t gtid_39019 = squot64(squot64(sext_i32_i64(local_tid_44333),
                                             segment_sizze_nonzzero_44330) +
                                     sext_i32_i64(virt_group_id_44341) *
                                     squot64(segred_group_sizze_39076,
                                             segment_sizze_nonzzero_44330),
                                     N_28660);
        int64_t gtid_39020 = squot64(sext_i32_i64(local_tid_44333),
                                     segment_sizze_nonzzero_44330) +
                sext_i32_i64(virt_group_id_44341) *
                squot64(segred_group_sizze_39076,
                        segment_sizze_nonzzero_44330) -
                squot64(squot64(sext_i32_i64(local_tid_44333),
                                segment_sizze_nonzzero_44330) +
                        sext_i32_i64(virt_group_id_44341) *
                        squot64(segred_group_sizze_39076,
                                segment_sizze_nonzzero_44330), N_28660) *
                N_28660;
        int64_t gtid_39029 = srem64(sext_i32_i64(local_tid_44333),
                                    i32_res_28676);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28676) && ((slt64(gtid_39019,
                                                             m_28661) &&
                                                       slt64(gtid_39020,
                                                             N_28660)) &&
                                                      slt64(sext_i32_i64(local_tid_44333),
                                                            i32_res_28676 *
                                                            squot64(segred_group_sizze_39076,
                                                                    segment_sizze_nonzzero_44330)))) {
                float x_39085 = ((__global
                                  float *) defunc_4_map_res_mem_43073)[gtid_39019 *
                                                                       i32_res_28676 +
                                                                       gtid_39029];
                float x_39086 = ((__global float *) mem_42554)[gtid_39020 *
                                                               i32_res_28676 +
                                                               gtid_39029];
                float defunc_1_f_res_39087 = x_39085 * x_39086;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)] =
                        defunc_1_f_res_39087;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28676)) {
            // perform segmented scan to imitate reduction
            {
                float x_39080;
                float x_39081;
                float x_44342;
                float x_44343;
                bool ltid_in_bounds_44345;
                
                ltid_in_bounds_44345 = slt64(sext_i32_i64(local_tid_44333),
                                             i32_res_28676 *
                                             squot64(segred_group_sizze_39076,
                                                     segment_sizze_nonzzero_44330));
                
                int32_t skip_threads_44346;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44345) {
                        x_39081 = ((volatile __local
                                    float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)];
                        if ((local_tid_44333 - squot32(local_tid_44333, 32) *
                             32) == 0) {
                            x_39080 = x_39081;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44346 = 1;
                    while (slt32(skip_threads_44346, 32)) {
                        if (sle32(skip_threads_44346, local_tid_44333 -
                                  squot32(local_tid_44333, 32) * 32) &&
                            ltid_in_bounds_44345) {
                            // read operands
                            {
                                x_39080 = ((volatile __local
                                            float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333) -
                                                                        sext_i32_i64(skip_threads_44346)];
                            }
                            // perform operation
                            {
                                bool inactive_44347 =
                                     slt64(srem64(sext_i32_i64(local_tid_44333),
                                                  i32_res_28676),
                                           sext_i32_i64(local_tid_44333) -
                                           sext_i32_i64(local_tid_44333 -
                                           skip_threads_44346));
                                
                                if (inactive_44347) {
                                    x_39080 = x_39081;
                                }
                                if (!inactive_44347) {
                                    float defunc_1_op_res_39082 = x_39080 +
                                          x_39081;
                                    
                                    x_39080 = defunc_1_op_res_39082;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44335, skip_threads_44346)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44346, local_tid_44333 -
                                  squot32(local_tid_44333, 32) * 32) &&
                            ltid_in_bounds_44345) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)] =
                                    x_39080;
                                x_39081 = x_39080;
                            }
                        }
                        if (sle32(wave_sizze_44335, skip_threads_44346)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44346 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44333 - squot32(local_tid_44333, 32) * 32) ==
                        31 && ltid_in_bounds_44345) {
                        ((volatile __local
                          float *) red_arr_mem_44337)[sext_i32_i64(squot32(local_tid_44333,
                                                                           32))] =
                            x_39080;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44348;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44333, 32) == 0 &&
                            ltid_in_bounds_44345) {
                            x_44343 = ((volatile __local
                                        float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)];
                            if ((local_tid_44333 - squot32(local_tid_44333,
                                                           32) * 32) == 0) {
                                x_44342 = x_44343;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44348 = 1;
                        while (slt32(skip_threads_44348, 32)) {
                            if (sle32(skip_threads_44348, local_tid_44333 -
                                      squot32(local_tid_44333, 32) * 32) &&
                                (squot32(local_tid_44333, 32) == 0 &&
                                 ltid_in_bounds_44345)) {
                                // read operands
                                {
                                    x_44342 = ((volatile __local
                                                float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333) -
                                                                            sext_i32_i64(skip_threads_44348)];
                                }
                                // perform operation
                                {
                                    bool inactive_44349 =
                                         slt64(srem64(sext_i32_i64(local_tid_44333 *
                                                      32 + 32 - 1),
                                                      i32_res_28676),
                                               sext_i32_i64(local_tid_44333 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44333 -
                                                             skip_threads_44348) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44349) {
                                        x_44342 = x_44343;
                                    }
                                    if (!inactive_44349) {
                                        float defunc_1_op_res_44344 = x_44342 +
                                              x_44343;
                                        
                                        x_44342 = defunc_1_op_res_44344;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44335, skip_threads_44348)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44348, local_tid_44333 -
                                      squot32(local_tid_44333, 32) * 32) &&
                                (squot32(local_tid_44333, 32) == 0 &&
                                 ltid_in_bounds_44345)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)] =
                                        x_44342;
                                    x_44343 = x_44342;
                                }
                            }
                            if (sle32(wave_sizze_44335, skip_threads_44348)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44348 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44333, 32) == 0 ||
                          !ltid_in_bounds_44345)) {
                        // read operands
                        {
                            x_39081 = x_39080;
                            x_39080 = ((__local
                                        float *) red_arr_mem_44337)[sext_i32_i64(squot32(local_tid_44333,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44350 =
                                 slt64(srem64(sext_i32_i64(local_tid_44333),
                                              i32_res_28676),
                                       sext_i32_i64(local_tid_44333) -
                                       sext_i32_i64(squot32(local_tid_44333,
                                                            32) * 32 - 1));
                            
                            if (inactive_44350) {
                                x_39080 = x_39081;
                            }
                            if (!inactive_44350) {
                                float defunc_1_op_res_39082 = x_39080 + x_39081;
                                
                                x_39080 = defunc_1_op_res_39082;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)] =
                                x_39080;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44333, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44337)[sext_i32_i64(local_tid_44333)] =
                            x_39081;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44341) *
                      squot64(segred_group_sizze_39076,
                              segment_sizze_nonzzero_44330) +
                      sext_i32_i64(local_tid_44333), m_28661 * N_28660) &&
                slt64(sext_i32_i64(local_tid_44333),
                      squot64(segred_group_sizze_39076,
                              segment_sizze_nonzzero_44330))) {
                ((__global
                  float *) mem_43291)[squot64(sext_i32_i64(virt_group_id_44341) *
                                              squot64(segred_group_sizze_39076,
                                                      segment_sizze_nonzzero_44330) +
                                              sext_i32_i64(local_tid_44333),
                                              N_28660) * N_28660 +
                                      (sext_i32_i64(virt_group_id_44341) *
                                       squot64(segred_group_sizze_39076,
                                               segment_sizze_nonzzero_44330) +
                                       sext_i32_i64(local_tid_44333) -
                                       squot64(sext_i32_i64(virt_group_id_44341) *
                                               squot64(segred_group_sizze_39076,
                                                       segment_sizze_nonzzero_44330) +
                                               sext_i32_i64(local_tid_44333),
                                               N_28660) * N_28660)] = ((__local
                                                                        float *) red_arr_mem_44337)[(sext_i32_i64(local_tid_44333) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44330 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39076
}
__kernel void mainzisegred_small_39596(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44589_backing_aligned_0,
                                       int64_t N_28660, int64_t m_28661,
                                       int64_t i32_res_28670,
                                       int64_t num_groups_39643,
                                       int64_t segment_sizze_nonzzero_44582,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43335,
                                       __global unsigned char *mem_43389,
                                       __global unsigned char *mem_43392)
{
    #define segred_group_sizze_39642 (mainzisegred_group_sizze_39590)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44589_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44589_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44584;
    int32_t local_tid_44585;
    int64_t group_sizze_44588;
    int32_t wave_sizze_44587;
    int32_t group_tid_44586;
    
    global_tid_44584 = get_global_id(0);
    local_tid_44585 = get_local_id(0);
    group_sizze_44588 = get_local_size(0);
    wave_sizze_44587 = LOCKSTEP_WIDTH;
    group_tid_44586 = get_group_id(0);
    
    int32_t phys_tid_39596;
    
    phys_tid_39596 = global_tid_44584;
    
    __local char *red_arr_mem_44589;
    
    red_arr_mem_44589 = (__local char *) red_arr_mem_44589_backing_0;
    
    int32_t phys_group_id_44591;
    
    phys_group_id_44591 = get_group_id(0);
    for (int32_t i_44592 = 0; i_44592 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661,
                                          squot64(segred_group_sizze_39642,
                                                  segment_sizze_nonzzero_44582))) -
                   phys_group_id_44591, sext_i64_i32(num_groups_39643));
         i_44592++) {
        int32_t virt_group_id_44593 = phys_group_id_44591 + i_44592 *
                sext_i64_i32(num_groups_39643);
        int64_t gtid_39587 = squot64(sext_i32_i64(local_tid_44585),
                                     segment_sizze_nonzzero_44582) +
                sext_i32_i64(virt_group_id_44593) *
                squot64(segred_group_sizze_39642, segment_sizze_nonzzero_44582);
        int64_t gtid_39595 = srem64(sext_i32_i64(local_tid_44585),
                                    i32_res_28670);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28670) && (slt64(gtid_39587,
                                                            m_28661) &&
                                                      slt64(sext_i32_i64(local_tid_44585),
                                                            i32_res_28670 *
                                                            squot64(segred_group_sizze_39642,
                                                                    segment_sizze_nonzzero_44582)))) {
                int32_t defunc_0_f_res_39650 = ((__global
                                                 int32_t *) mem_43389)[gtid_39587];
                int32_t index_primexp_40574 = sext_i64_i32(gtid_39595);
                bool cond_39652 = slt32(index_primexp_40574,
                                        defunc_0_f_res_39650);
                float defunc_0_f_res_39653;
                
                if (cond_39652) {
                    int64_t i_39654 = sext_i32_i64(index_primexp_40574);
                    float defunc_0_f_res_t_res_39655 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_39587 *
                                                                                              N_28660 +
                                                                                              i_39654];
                    
                    defunc_0_f_res_39653 = defunc_0_f_res_t_res_39655;
                } else {
                    defunc_0_f_res_39653 = 0.0F;
                }
                
                float defunc_0_f_res_39656 = defunc_0_f_res_39653 *
                      defunc_0_f_res_39653;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)] =
                        defunc_0_f_res_39656;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28670)) {
            // perform segmented scan to imitate reduction
            {
                float x_39646;
                float x_39647;
                float x_44594;
                float x_44595;
                bool ltid_in_bounds_44597;
                
                ltid_in_bounds_44597 = slt64(sext_i32_i64(local_tid_44585),
                                             i32_res_28670 *
                                             squot64(segred_group_sizze_39642,
                                                     segment_sizze_nonzzero_44582));
                
                int32_t skip_threads_44598;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44597) {
                        x_39647 = ((volatile __local
                                    float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)];
                        if ((local_tid_44585 - squot32(local_tid_44585, 32) *
                             32) == 0) {
                            x_39646 = x_39647;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44598 = 1;
                    while (slt32(skip_threads_44598, 32)) {
                        if (sle32(skip_threads_44598, local_tid_44585 -
                                  squot32(local_tid_44585, 32) * 32) &&
                            ltid_in_bounds_44597) {
                            // read operands
                            {
                                x_39646 = ((volatile __local
                                            float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585) -
                                                                        sext_i32_i64(skip_threads_44598)];
                            }
                            // perform operation
                            {
                                bool inactive_44599 =
                                     slt64(srem64(sext_i32_i64(local_tid_44585),
                                                  i32_res_28670),
                                           sext_i32_i64(local_tid_44585) -
                                           sext_i32_i64(local_tid_44585 -
                                           skip_threads_44598));
                                
                                if (inactive_44599) {
                                    x_39646 = x_39647;
                                }
                                if (!inactive_44599) {
                                    float defunc_1_op_res_39648 = x_39646 +
                                          x_39647;
                                    
                                    x_39646 = defunc_1_op_res_39648;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44587, skip_threads_44598)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44598, local_tid_44585 -
                                  squot32(local_tid_44585, 32) * 32) &&
                            ltid_in_bounds_44597) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)] =
                                    x_39646;
                                x_39647 = x_39646;
                            }
                        }
                        if (sle32(wave_sizze_44587, skip_threads_44598)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44598 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44585 - squot32(local_tid_44585, 32) * 32) ==
                        31 && ltid_in_bounds_44597) {
                        ((volatile __local
                          float *) red_arr_mem_44589)[sext_i32_i64(squot32(local_tid_44585,
                                                                           32))] =
                            x_39646;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44600;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44585, 32) == 0 &&
                            ltid_in_bounds_44597) {
                            x_44595 = ((volatile __local
                                        float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)];
                            if ((local_tid_44585 - squot32(local_tid_44585,
                                                           32) * 32) == 0) {
                                x_44594 = x_44595;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44600 = 1;
                        while (slt32(skip_threads_44600, 32)) {
                            if (sle32(skip_threads_44600, local_tid_44585 -
                                      squot32(local_tid_44585, 32) * 32) &&
                                (squot32(local_tid_44585, 32) == 0 &&
                                 ltid_in_bounds_44597)) {
                                // read operands
                                {
                                    x_44594 = ((volatile __local
                                                float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585) -
                                                                            sext_i32_i64(skip_threads_44600)];
                                }
                                // perform operation
                                {
                                    bool inactive_44601 =
                                         slt64(srem64(sext_i32_i64(local_tid_44585 *
                                                      32 + 32 - 1),
                                                      i32_res_28670),
                                               sext_i32_i64(local_tid_44585 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44585 -
                                                             skip_threads_44600) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44601) {
                                        x_44594 = x_44595;
                                    }
                                    if (!inactive_44601) {
                                        float defunc_1_op_res_44596 = x_44594 +
                                              x_44595;
                                        
                                        x_44594 = defunc_1_op_res_44596;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44587, skip_threads_44600)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44600, local_tid_44585 -
                                      squot32(local_tid_44585, 32) * 32) &&
                                (squot32(local_tid_44585, 32) == 0 &&
                                 ltid_in_bounds_44597)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)] =
                                        x_44594;
                                    x_44595 = x_44594;
                                }
                            }
                            if (sle32(wave_sizze_44587, skip_threads_44600)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44600 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44585, 32) == 0 ||
                          !ltid_in_bounds_44597)) {
                        // read operands
                        {
                            x_39647 = x_39646;
                            x_39646 = ((__local
                                        float *) red_arr_mem_44589)[sext_i32_i64(squot32(local_tid_44585,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44602 =
                                 slt64(srem64(sext_i32_i64(local_tid_44585),
                                              i32_res_28670),
                                       sext_i32_i64(local_tid_44585) -
                                       sext_i32_i64(squot32(local_tid_44585,
                                                            32) * 32 - 1));
                            
                            if (inactive_44602) {
                                x_39646 = x_39647;
                            }
                            if (!inactive_44602) {
                                float defunc_1_op_res_39648 = x_39646 + x_39647;
                                
                                x_39646 = defunc_1_op_res_39648;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)] =
                                x_39646;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44585, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44589)[sext_i32_i64(local_tid_44585)] =
                            x_39647;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44593) *
                      squot64(segred_group_sizze_39642,
                              segment_sizze_nonzzero_44582) +
                      sext_i32_i64(local_tid_44585), m_28661) &&
                slt64(sext_i32_i64(local_tid_44585),
                      squot64(segred_group_sizze_39642,
                              segment_sizze_nonzzero_44582))) {
                ((__global
                  float *) mem_43392)[sext_i32_i64(virt_group_id_44593) *
                                      squot64(segred_group_sizze_39642,
                                              segment_sizze_nonzzero_44582) +
                                      sext_i32_i64(local_tid_44585)] = ((__local
                                                                         float *) red_arr_mem_44589)[(sext_i32_i64(local_tid_44585) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44582 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39642
}
__kernel void mainzisegred_small_39617(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44529_backing_aligned_0,
                                       int64_t N_28660, int64_t m_28661,
                                       int64_t i32_res_28670,
                                       int64_t num_groups_39629,
                                       int64_t segment_sizze_nonzzero_44522,
                                       __global unsigned char *images_mem_42538,
                                       __global unsigned char *mem_43389)
{
    #define segred_group_sizze_39628 (mainzisegred_group_sizze_39611)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44529_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44529_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44524;
    int32_t local_tid_44525;
    int64_t group_sizze_44528;
    int32_t wave_sizze_44527;
    int32_t group_tid_44526;
    
    global_tid_44524 = get_global_id(0);
    local_tid_44525 = get_local_id(0);
    group_sizze_44528 = get_local_size(0);
    wave_sizze_44527 = LOCKSTEP_WIDTH;
    group_tid_44526 = get_group_id(0);
    
    int32_t phys_tid_39617;
    
    phys_tid_39617 = global_tid_44524;
    
    __local char *red_arr_mem_44529;
    
    red_arr_mem_44529 = (__local char *) red_arr_mem_44529_backing_0;
    
    int32_t phys_group_id_44531;
    
    phys_group_id_44531 = get_group_id(0);
    for (int32_t i_44532 = 0; i_44532 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661,
                                          squot64(segred_group_sizze_39628,
                                                  segment_sizze_nonzzero_44522))) -
                   phys_group_id_44531, sext_i64_i32(num_groups_39629));
         i_44532++) {
        int32_t virt_group_id_44533 = phys_group_id_44531 + i_44532 *
                sext_i64_i32(num_groups_39629);
        int64_t gtid_39608 = squot64(sext_i32_i64(local_tid_44525),
                                     segment_sizze_nonzzero_44522) +
                sext_i32_i64(virt_group_id_44533) *
                squot64(segred_group_sizze_39628, segment_sizze_nonzzero_44522);
        int64_t gtid_39616 = srem64(sext_i32_i64(local_tid_44525),
                                    i32_res_28670);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28670) && (slt64(gtid_39608,
                                                            m_28661) &&
                                                      slt64(sext_i32_i64(local_tid_44525),
                                                            i32_res_28670 *
                                                            squot64(segred_group_sizze_39628,
                                                                    segment_sizze_nonzzero_44522)))) {
                float x_39636 = ((__global
                                  float *) images_mem_42538)[gtid_39608 *
                                                             N_28660 +
                                                             gtid_39616];
                bool isnan_res_39637;
                
                isnan_res_39637 = futrts_isnan32(x_39636);
                
                bool cond_39638 = !isnan_res_39637;
                int32_t defunc_0_f_res_39639 = btoi_bool_i32(cond_39638);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)] =
                        defunc_0_f_res_39639;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28670)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_39632;
                int32_t x_39633;
                int32_t x_44534;
                int32_t x_44535;
                bool ltid_in_bounds_44537;
                
                ltid_in_bounds_44537 = slt64(sext_i32_i64(local_tid_44525),
                                             i32_res_28670 *
                                             squot64(segred_group_sizze_39628,
                                                     segment_sizze_nonzzero_44522));
                
                int32_t skip_threads_44538;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44537) {
                        x_39633 = ((volatile __local
                                    int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)];
                        if ((local_tid_44525 - squot32(local_tid_44525, 32) *
                             32) == 0) {
                            x_39632 = x_39633;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44538 = 1;
                    while (slt32(skip_threads_44538, 32)) {
                        if (sle32(skip_threads_44538, local_tid_44525 -
                                  squot32(local_tid_44525, 32) * 32) &&
                            ltid_in_bounds_44537) {
                            // read operands
                            {
                                x_39632 = ((volatile __local
                                            int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525) -
                                                                          sext_i32_i64(skip_threads_44538)];
                            }
                            // perform operation
                            {
                                bool inactive_44539 =
                                     slt64(srem64(sext_i32_i64(local_tid_44525),
                                                  i32_res_28670),
                                           sext_i32_i64(local_tid_44525) -
                                           sext_i32_i64(local_tid_44525 -
                                           skip_threads_44538));
                                
                                if (inactive_44539) {
                                    x_39632 = x_39633;
                                }
                                if (!inactive_44539) {
                                    int32_t defunc_1_op_res_39634 =
                                            add32(x_39632, x_39633);
                                    
                                    x_39632 = defunc_1_op_res_39634;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44527, skip_threads_44538)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44538, local_tid_44525 -
                                  squot32(local_tid_44525, 32) * 32) &&
                            ltid_in_bounds_44537) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)] =
                                    x_39632;
                                x_39633 = x_39632;
                            }
                        }
                        if (sle32(wave_sizze_44527, skip_threads_44538)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44538 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44525 - squot32(local_tid_44525, 32) * 32) ==
                        31 && ltid_in_bounds_44537) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44529)[sext_i32_i64(squot32(local_tid_44525,
                                                                             32))] =
                            x_39632;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44540;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44525, 32) == 0 &&
                            ltid_in_bounds_44537) {
                            x_44535 = ((volatile __local
                                        int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)];
                            if ((local_tid_44525 - squot32(local_tid_44525,
                                                           32) * 32) == 0) {
                                x_44534 = x_44535;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44540 = 1;
                        while (slt32(skip_threads_44540, 32)) {
                            if (sle32(skip_threads_44540, local_tid_44525 -
                                      squot32(local_tid_44525, 32) * 32) &&
                                (squot32(local_tid_44525, 32) == 0 &&
                                 ltid_in_bounds_44537)) {
                                // read operands
                                {
                                    x_44534 = ((volatile __local
                                                int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525) -
                                                                              sext_i32_i64(skip_threads_44540)];
                                }
                                // perform operation
                                {
                                    bool inactive_44541 =
                                         slt64(srem64(sext_i32_i64(local_tid_44525 *
                                                      32 + 32 - 1),
                                                      i32_res_28670),
                                               sext_i32_i64(local_tid_44525 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44525 -
                                                             skip_threads_44540) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44541) {
                                        x_44534 = x_44535;
                                    }
                                    if (!inactive_44541) {
                                        int32_t defunc_1_op_res_44536 =
                                                add32(x_44534, x_44535);
                                        
                                        x_44534 = defunc_1_op_res_44536;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44527, skip_threads_44540)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44540, local_tid_44525 -
                                      squot32(local_tid_44525, 32) * 32) &&
                                (squot32(local_tid_44525, 32) == 0 &&
                                 ltid_in_bounds_44537)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)] =
                                        x_44534;
                                    x_44535 = x_44534;
                                }
                            }
                            if (sle32(wave_sizze_44527, skip_threads_44540)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44540 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44525, 32) == 0 ||
                          !ltid_in_bounds_44537)) {
                        // read operands
                        {
                            x_39633 = x_39632;
                            x_39632 = ((__local
                                        int32_t *) red_arr_mem_44529)[sext_i32_i64(squot32(local_tid_44525,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44542 =
                                 slt64(srem64(sext_i32_i64(local_tid_44525),
                                              i32_res_28670),
                                       sext_i32_i64(local_tid_44525) -
                                       sext_i32_i64(squot32(local_tid_44525,
                                                            32) * 32 - 1));
                            
                            if (inactive_44542) {
                                x_39632 = x_39633;
                            }
                            if (!inactive_44542) {
                                int32_t defunc_1_op_res_39634 = add32(x_39632,
                                                                      x_39633);
                                
                                x_39632 = defunc_1_op_res_39634;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)] =
                                x_39632;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44525, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44529)[sext_i32_i64(local_tid_44525)] =
                            x_39633;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44533) *
                      squot64(segred_group_sizze_39628,
                              segment_sizze_nonzzero_44522) +
                      sext_i32_i64(local_tid_44525), m_28661) &&
                slt64(sext_i32_i64(local_tid_44525),
                      squot64(segred_group_sizze_39628,
                              segment_sizze_nonzzero_44522))) {
                ((__global
                  int32_t *) mem_43389)[sext_i32_i64(virt_group_id_44533) *
                                        squot64(segred_group_sizze_39628,
                                                segment_sizze_nonzzero_44522) +
                                        sext_i32_i64(local_tid_44525)] =
                    ((__local
                      int32_t *) red_arr_mem_44529)[(sext_i32_i64(local_tid_44525) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44522 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39628
}
__kernel void mainzisegred_small_39768(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44698_backing_aligned_0,
                                       int64_t N_28660, int64_t m_28661,
                                       int64_t i32_res_29031,
                                       int64_t num_groups_39786,
                                       int64_t segment_sizze_nonzzero_44691,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43335,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43401,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43402,
                                       __global unsigned char *mem_43435)
{
    #define segred_group_sizze_39785 (mainzisegred_group_sizze_39762)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44698_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44698_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44693;
    int32_t local_tid_44694;
    int64_t group_sizze_44697;
    int32_t wave_sizze_44696;
    int32_t group_tid_44695;
    
    global_tid_44693 = get_global_id(0);
    local_tid_44694 = get_local_id(0);
    group_sizze_44697 = get_local_size(0);
    wave_sizze_44696 = LOCKSTEP_WIDTH;
    group_tid_44695 = get_group_id(0);
    
    int32_t phys_tid_39768;
    
    phys_tid_39768 = global_tid_44693;
    
    __local char *red_arr_mem_44698;
    
    red_arr_mem_44698 = (__local char *) red_arr_mem_44698_backing_0;
    
    int32_t phys_group_id_44700;
    
    phys_group_id_44700 = get_group_id(0);
    for (int32_t i_44701 = 0; i_44701 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661,
                                          squot64(segred_group_sizze_39785,
                                                  segment_sizze_nonzzero_44691))) -
                   phys_group_id_44700, sext_i64_i32(num_groups_39786));
         i_44701++) {
        int32_t virt_group_id_44702 = phys_group_id_44700 + i_44701 *
                sext_i64_i32(num_groups_39786);
        int64_t gtid_39759 = squot64(sext_i32_i64(local_tid_44694),
                                     segment_sizze_nonzzero_44691) +
                sext_i32_i64(virt_group_id_44702) *
                squot64(segred_group_sizze_39785, segment_sizze_nonzzero_44691);
        int64_t gtid_39767 = srem64(sext_i32_i64(local_tid_44694),
                                    i32_res_29031);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29031) && (slt64(gtid_39759,
                                                            m_28661) &&
                                                      slt64(sext_i32_i64(local_tid_44694),
                                                            i32_res_29031 *
                                                            squot64(segred_group_sizze_39785,
                                                                    segment_sizze_nonzzero_44691)))) {
                int32_t x_39794 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43401)[gtid_39759];
                int32_t index_primexp_40579 = sext_i64_i32(gtid_39767);
                bool cond_39796 = slt32(index_primexp_40579, x_39794);
                float defunc_0_f_res_39797;
                
                if (cond_39796) {
                    int32_t x_39793 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_39759];
                    int32_t x_39798 = add32(x_39793, index_primexp_40579);
                    int32_t x_39799 = sub32(x_39798, x_39794);
                    int32_t i_39800 = add32(1, x_39799);
                    int64_t i_39801 = sext_i32_i64(i_39800);
                    float defunc_0_f_res_t_res_39802 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_39759 *
                                                                                              N_28660 +
                                                                                              i_39801];
                    
                    defunc_0_f_res_39797 = defunc_0_f_res_t_res_39802;
                } else {
                    defunc_0_f_res_39797 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)] =
                        defunc_0_f_res_39797;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29031)) {
            // perform segmented scan to imitate reduction
            {
                float x_39789;
                float x_39790;
                float x_44703;
                float x_44704;
                bool ltid_in_bounds_44706;
                
                ltid_in_bounds_44706 = slt64(sext_i32_i64(local_tid_44694),
                                             i32_res_29031 *
                                             squot64(segred_group_sizze_39785,
                                                     segment_sizze_nonzzero_44691));
                
                int32_t skip_threads_44707;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44706) {
                        x_39790 = ((volatile __local
                                    float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)];
                        if ((local_tid_44694 - squot32(local_tid_44694, 32) *
                             32) == 0) {
                            x_39789 = x_39790;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44707 = 1;
                    while (slt32(skip_threads_44707, 32)) {
                        if (sle32(skip_threads_44707, local_tid_44694 -
                                  squot32(local_tid_44694, 32) * 32) &&
                            ltid_in_bounds_44706) {
                            // read operands
                            {
                                x_39789 = ((volatile __local
                                            float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694) -
                                                                        sext_i32_i64(skip_threads_44707)];
                            }
                            // perform operation
                            {
                                bool inactive_44708 =
                                     slt64(srem64(sext_i32_i64(local_tid_44694),
                                                  i32_res_29031),
                                           sext_i32_i64(local_tid_44694) -
                                           sext_i32_i64(local_tid_44694 -
                                           skip_threads_44707));
                                
                                if (inactive_44708) {
                                    x_39789 = x_39790;
                                }
                                if (!inactive_44708) {
                                    float defunc_1_op_res_39791 = x_39789 +
                                          x_39790;
                                    
                                    x_39789 = defunc_1_op_res_39791;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44696, skip_threads_44707)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44707, local_tid_44694 -
                                  squot32(local_tid_44694, 32) * 32) &&
                            ltid_in_bounds_44706) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)] =
                                    x_39789;
                                x_39790 = x_39789;
                            }
                        }
                        if (sle32(wave_sizze_44696, skip_threads_44707)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44707 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44694 - squot32(local_tid_44694, 32) * 32) ==
                        31 && ltid_in_bounds_44706) {
                        ((volatile __local
                          float *) red_arr_mem_44698)[sext_i32_i64(squot32(local_tid_44694,
                                                                           32))] =
                            x_39789;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44709;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44694, 32) == 0 &&
                            ltid_in_bounds_44706) {
                            x_44704 = ((volatile __local
                                        float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)];
                            if ((local_tid_44694 - squot32(local_tid_44694,
                                                           32) * 32) == 0) {
                                x_44703 = x_44704;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44709 = 1;
                        while (slt32(skip_threads_44709, 32)) {
                            if (sle32(skip_threads_44709, local_tid_44694 -
                                      squot32(local_tid_44694, 32) * 32) &&
                                (squot32(local_tid_44694, 32) == 0 &&
                                 ltid_in_bounds_44706)) {
                                // read operands
                                {
                                    x_44703 = ((volatile __local
                                                float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694) -
                                                                            sext_i32_i64(skip_threads_44709)];
                                }
                                // perform operation
                                {
                                    bool inactive_44710 =
                                         slt64(srem64(sext_i32_i64(local_tid_44694 *
                                                      32 + 32 - 1),
                                                      i32_res_29031),
                                               sext_i32_i64(local_tid_44694 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44694 -
                                                             skip_threads_44709) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44710) {
                                        x_44703 = x_44704;
                                    }
                                    if (!inactive_44710) {
                                        float defunc_1_op_res_44705 = x_44703 +
                                              x_44704;
                                        
                                        x_44703 = defunc_1_op_res_44705;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44696, skip_threads_44709)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44709, local_tid_44694 -
                                      squot32(local_tid_44694, 32) * 32) &&
                                (squot32(local_tid_44694, 32) == 0 &&
                                 ltid_in_bounds_44706)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)] =
                                        x_44703;
                                    x_44704 = x_44703;
                                }
                            }
                            if (sle32(wave_sizze_44696, skip_threads_44709)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44709 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44694, 32) == 0 ||
                          !ltid_in_bounds_44706)) {
                        // read operands
                        {
                            x_39790 = x_39789;
                            x_39789 = ((__local
                                        float *) red_arr_mem_44698)[sext_i32_i64(squot32(local_tid_44694,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44711 =
                                 slt64(srem64(sext_i32_i64(local_tid_44694),
                                              i32_res_29031),
                                       sext_i32_i64(local_tid_44694) -
                                       sext_i32_i64(squot32(local_tid_44694,
                                                            32) * 32 - 1));
                            
                            if (inactive_44711) {
                                x_39789 = x_39790;
                            }
                            if (!inactive_44711) {
                                float defunc_1_op_res_39791 = x_39789 + x_39790;
                                
                                x_39789 = defunc_1_op_res_39791;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)] =
                                x_39789;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44694, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44698)[sext_i32_i64(local_tid_44694)] =
                            x_39790;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44702) *
                      squot64(segred_group_sizze_39785,
                              segment_sizze_nonzzero_44691) +
                      sext_i32_i64(local_tid_44694), m_28661) &&
                slt64(sext_i32_i64(local_tid_44694),
                      squot64(segred_group_sizze_39785,
                              segment_sizze_nonzzero_44691))) {
                ((__global
                  float *) mem_43435)[sext_i32_i64(virt_group_id_44702) *
                                      squot64(segred_group_sizze_39785,
                                              segment_sizze_nonzzero_44691) +
                                      sext_i32_i64(local_tid_44694)] = ((__local
                                                                         float *) red_arr_mem_44698)[(sext_i32_i64(local_tid_44694) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44691 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39785
}
__kernel void mainzisegred_small_40269(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44860_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44858_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_44856_backing_aligned_2,
                                       int64_t m_28661,
                                       int64_t iota32_arg_29056,
                                       int64_t num_groups_40440,
                                       int64_t segment_sizze_nonzzero_44849,
                                       __global unsigned char *mem_43441,
                                       __global unsigned char *mem_43453,
                                       __global unsigned char *mem_43455,
                                       __global unsigned char *mem_43459,
                                       __global unsigned char *mem_43462,
                                       __global unsigned char *mem_43464,
                                       __global unsigned char *mem_43466)
{
    #define segred_group_sizze_40439 (mainzisegred_group_sizze_40263)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44860_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44860_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44858_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44858_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44856_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44856_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44851;
    int32_t local_tid_44852;
    int64_t group_sizze_44855;
    int32_t wave_sizze_44854;
    int32_t group_tid_44853;
    
    global_tid_44851 = get_global_id(0);
    local_tid_44852 = get_local_id(0);
    group_sizze_44855 = get_local_size(0);
    wave_sizze_44854 = LOCKSTEP_WIDTH;
    group_tid_44853 = get_group_id(0);
    
    int32_t phys_tid_40269;
    
    phys_tid_40269 = global_tid_44851;
    
    __local char *red_arr_mem_44856;
    
    red_arr_mem_44856 = (__local char *) red_arr_mem_44856_backing_0;
    
    __local char *red_arr_mem_44858;
    
    red_arr_mem_44858 = (__local char *) red_arr_mem_44858_backing_1;
    
    __local char *red_arr_mem_44860;
    
    red_arr_mem_44860 = (__local char *) red_arr_mem_44860_backing_2;
    
    int32_t phys_group_id_44862;
    
    phys_group_id_44862 = get_group_id(0);
    for (int32_t i_44863 = 0; i_44863 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28661,
                                          squot64(segred_group_sizze_40439,
                                                  segment_sizze_nonzzero_44849))) -
                   phys_group_id_44862, sext_i64_i32(num_groups_40440));
         i_44863++) {
        int32_t virt_group_id_44864 = phys_group_id_44862 + i_44863 *
                sext_i64_i32(num_groups_40440);
        int64_t gtid_40260 = squot64(sext_i32_i64(local_tid_44852),
                                     segment_sizze_nonzzero_44849) +
                sext_i32_i64(virt_group_id_44864) *
                squot64(segred_group_sizze_40439, segment_sizze_nonzzero_44849);
        int64_t gtid_40268 = srem64(sext_i32_i64(local_tid_44852),
                                    iota32_arg_29056);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_29056) && (slt64(gtid_40260,
                                                               m_28661) &&
                                                         slt64(sext_i32_i64(local_tid_44852),
                                                               iota32_arg_29056 *
                                                               squot64(segred_group_sizze_40439,
                                                                       segment_sizze_nonzzero_44849)))) {
                int32_t y_40459 = ((__global int32_t *) mem_43455)[gtid_40260];
                float y_40460 = ((__global float *) mem_43453)[gtid_40260];
                float x_40464 = ((__global float *) mem_43459)[gtid_40260 *
                                                               iota32_arg_29056 +
                                                               gtid_40268];
                float x_40465 = ((__global float *) mem_43441)[gtid_40268];
                int32_t index_primexp_40593 = sext_i64_i32(gtid_40268);
                float defunc_0_f_res_40468 = x_40464 / y_40460;
                bool cond_40469 = slt32(index_primexp_40593, y_40459);
                bool isnan_res_40470;
                
                isnan_res_40470 = futrts_isnan32(defunc_0_f_res_40468);
                
                bool cond_t_res_40471 = !isnan_res_40470;
                bool x_40472 = cond_40469 && cond_t_res_40471;
                float abs_res_40473 = (float) fabs(defunc_0_f_res_40468);
                bool defunc_2_f_res_t_res_40474 = x_40465 < abs_res_40473;
                bool x_40475 = x_40472 && defunc_2_f_res_t_res_40474;
                float defunc_1_f_res_40476;
                
                if (cond_40469) {
                    defunc_1_f_res_40476 = defunc_0_f_res_40468;
                } else {
                    defunc_1_f_res_40476 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)] =
                        x_40475;
                    ((__local
                      int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)] =
                        index_primexp_40593;
                    ((__local
                      float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)] =
                        defunc_1_f_res_40476;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)] = 0;
                ((__local
                  int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)] =
                    -1;
                ((__local
                  float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_29056)) {
            // perform segmented scan to imitate reduction
            {
                bool x_40445;
                int32_t x_40446;
                float x_40447;
                bool x_40448;
                int32_t x_40449;
                float x_40450;
                bool x_44865;
                int32_t x_44866;
                float x_44867;
                bool x_44868;
                int32_t x_44869;
                float x_44870;
                bool ltid_in_bounds_44879;
                
                ltid_in_bounds_44879 = slt64(sext_i32_i64(local_tid_44852),
                                             iota32_arg_29056 *
                                             squot64(segred_group_sizze_40439,
                                                     segment_sizze_nonzzero_44849));
                
                int32_t skip_threads_44880;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44879) {
                        x_40448 = ((volatile __local
                                    bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)];
                        x_40449 = ((volatile __local
                                    int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)];
                        x_40450 = ((volatile __local
                                    float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)];
                        if ((local_tid_44852 - squot32(local_tid_44852, 32) *
                             32) == 0) {
                            x_40445 = x_40448;
                            x_40446 = x_40449;
                            x_40447 = x_40450;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44880 = 1;
                    while (slt32(skip_threads_44880, 32)) {
                        if (sle32(skip_threads_44880, local_tid_44852 -
                                  squot32(local_tid_44852, 32) * 32) &&
                            ltid_in_bounds_44879) {
                            // read operands
                            {
                                x_40445 = ((volatile __local
                                            bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852) -
                                                                       sext_i32_i64(skip_threads_44880)];
                                x_40446 = ((volatile __local
                                            int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852) -
                                                                          sext_i32_i64(skip_threads_44880)];
                                x_40447 = ((volatile __local
                                            float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852) -
                                                                        sext_i32_i64(skip_threads_44880)];
                            }
                            // perform operation
                            {
                                bool inactive_44881 =
                                     slt64(srem64(sext_i32_i64(local_tid_44852),
                                                  iota32_arg_29056),
                                           sext_i32_i64(local_tid_44852) -
                                           sext_i32_i64(local_tid_44852 -
                                           skip_threads_44880));
                                
                                if (inactive_44881) {
                                    x_40445 = x_40448;
                                    x_40446 = x_40449;
                                    x_40447 = x_40450;
                                }
                                if (!inactive_44881) {
                                    bool defunc_1_op_res_40451;
                                    int32_t defunc_1_op_res_40452;
                                    
                                    if (x_40445) {
                                        defunc_1_op_res_40451 = x_40445;
                                        defunc_1_op_res_40452 = x_40446;
                                    } else {
                                        bool x_40453 = x_40448 && x_40448;
                                        bool x_40454 = !x_40448;
                                        bool y_40455 = x_40445 && x_40454;
                                        bool defunc_1_op_res_f_res_40456 =
                                             x_40453 || y_40455;
                                        int32_t defunc_1_op_res_f_res_40457;
                                        
                                        if (x_40448) {
                                            defunc_1_op_res_f_res_40457 =
                                                x_40449;
                                        } else {
                                            defunc_1_op_res_f_res_40457 =
                                                x_40446;
                                        }
                                        defunc_1_op_res_40451 =
                                            defunc_1_op_res_f_res_40456;
                                        defunc_1_op_res_40452 =
                                            defunc_1_op_res_f_res_40457;
                                    }
                                    
                                    float defunc_1_op_res_40458 = x_40447 +
                                          x_40450;
                                    
                                    x_40445 = defunc_1_op_res_40451;
                                    x_40446 = defunc_1_op_res_40452;
                                    x_40447 = defunc_1_op_res_40458;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44854, skip_threads_44880)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44880, local_tid_44852 -
                                  squot32(local_tid_44852, 32) * 32) &&
                            ltid_in_bounds_44879) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)] =
                                    x_40445;
                                x_40448 = x_40445;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)] =
                                    x_40446;
                                x_40449 = x_40446;
                                ((volatile __local
                                  float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)] =
                                    x_40447;
                                x_40450 = x_40447;
                            }
                        }
                        if (sle32(wave_sizze_44854, skip_threads_44880)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44880 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44852 - squot32(local_tid_44852, 32) * 32) ==
                        31 && ltid_in_bounds_44879) {
                        ((volatile __local
                          bool *) red_arr_mem_44856)[sext_i32_i64(squot32(local_tid_44852,
                                                                          32))] =
                            x_40445;
                        ((volatile __local
                          int32_t *) red_arr_mem_44858)[sext_i32_i64(squot32(local_tid_44852,
                                                                             32))] =
                            x_40446;
                        ((volatile __local
                          float *) red_arr_mem_44860)[sext_i32_i64(squot32(local_tid_44852,
                                                                           32))] =
                            x_40447;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44882;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44852, 32) == 0 &&
                            ltid_in_bounds_44879) {
                            x_44868 = ((volatile __local
                                        bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)];
                            x_44869 = ((volatile __local
                                        int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)];
                            x_44870 = ((volatile __local
                                        float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)];
                            if ((local_tid_44852 - squot32(local_tid_44852,
                                                           32) * 32) == 0) {
                                x_44865 = x_44868;
                                x_44866 = x_44869;
                                x_44867 = x_44870;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44882 = 1;
                        while (slt32(skip_threads_44882, 32)) {
                            if (sle32(skip_threads_44882, local_tid_44852 -
                                      squot32(local_tid_44852, 32) * 32) &&
                                (squot32(local_tid_44852, 32) == 0 &&
                                 ltid_in_bounds_44879)) {
                                // read operands
                                {
                                    x_44865 = ((volatile __local
                                                bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852) -
                                                                           sext_i32_i64(skip_threads_44882)];
                                    x_44866 = ((volatile __local
                                                int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852) -
                                                                              sext_i32_i64(skip_threads_44882)];
                                    x_44867 = ((volatile __local
                                                float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852) -
                                                                            sext_i32_i64(skip_threads_44882)];
                                }
                                // perform operation
                                {
                                    bool inactive_44883 =
                                         slt64(srem64(sext_i32_i64(local_tid_44852 *
                                                      32 + 32 - 1),
                                                      iota32_arg_29056),
                                               sext_i32_i64(local_tid_44852 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44852 -
                                                             skip_threads_44882) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44883) {
                                        x_44865 = x_44868;
                                        x_44866 = x_44869;
                                        x_44867 = x_44870;
                                    }
                                    if (!inactive_44883) {
                                        bool defunc_1_op_res_44871;
                                        int32_t defunc_1_op_res_44872;
                                        
                                        if (x_44865) {
                                            defunc_1_op_res_44871 = x_44865;
                                            defunc_1_op_res_44872 = x_44866;
                                        } else {
                                            bool x_44873 = x_44868 && x_44868;
                                            bool x_44874 = !x_44868;
                                            bool y_44875 = x_44865 && x_44874;
                                            bool defunc_1_op_res_f_res_44876 =
                                                 x_44873 || y_44875;
                                            int32_t defunc_1_op_res_f_res_44877;
                                            
                                            if (x_44868) {
                                                defunc_1_op_res_f_res_44877 =
                                                    x_44869;
                                            } else {
                                                defunc_1_op_res_f_res_44877 =
                                                    x_44866;
                                            }
                                            defunc_1_op_res_44871 =
                                                defunc_1_op_res_f_res_44876;
                                            defunc_1_op_res_44872 =
                                                defunc_1_op_res_f_res_44877;
                                        }
                                        
                                        float defunc_1_op_res_44878 = x_44867 +
                                              x_44870;
                                        
                                        x_44865 = defunc_1_op_res_44871;
                                        x_44866 = defunc_1_op_res_44872;
                                        x_44867 = defunc_1_op_res_44878;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44854, skip_threads_44882)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44882, local_tid_44852 -
                                      squot32(local_tid_44852, 32) * 32) &&
                                (squot32(local_tid_44852, 32) == 0 &&
                                 ltid_in_bounds_44879)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)] =
                                        x_44865;
                                    x_44868 = x_44865;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)] =
                                        x_44866;
                                    x_44869 = x_44866;
                                    ((volatile __local
                                      float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)] =
                                        x_44867;
                                    x_44870 = x_44867;
                                }
                            }
                            if (sle32(wave_sizze_44854, skip_threads_44882)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44882 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44852, 32) == 0 ||
                          !ltid_in_bounds_44879)) {
                        // read operands
                        {
                            x_40448 = x_40445;
                            x_40449 = x_40446;
                            x_40450 = x_40447;
                            x_40445 = ((__local
                                        bool *) red_arr_mem_44856)[sext_i32_i64(squot32(local_tid_44852,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_40446 = ((__local
                                        int32_t *) red_arr_mem_44858)[sext_i32_i64(squot32(local_tid_44852,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_40447 = ((__local
                                        float *) red_arr_mem_44860)[sext_i32_i64(squot32(local_tid_44852,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44884 =
                                 slt64(srem64(sext_i32_i64(local_tid_44852),
                                              iota32_arg_29056),
                                       sext_i32_i64(local_tid_44852) -
                                       sext_i32_i64(squot32(local_tid_44852,
                                                            32) * 32 - 1));
                            
                            if (inactive_44884) {
                                x_40445 = x_40448;
                                x_40446 = x_40449;
                                x_40447 = x_40450;
                            }
                            if (!inactive_44884) {
                                bool defunc_1_op_res_40451;
                                int32_t defunc_1_op_res_40452;
                                
                                if (x_40445) {
                                    defunc_1_op_res_40451 = x_40445;
                                    defunc_1_op_res_40452 = x_40446;
                                } else {
                                    bool x_40453 = x_40448 && x_40448;
                                    bool x_40454 = !x_40448;
                                    bool y_40455 = x_40445 && x_40454;
                                    bool defunc_1_op_res_f_res_40456 =
                                         x_40453 || y_40455;
                                    int32_t defunc_1_op_res_f_res_40457;
                                    
                                    if (x_40448) {
                                        defunc_1_op_res_f_res_40457 = x_40449;
                                    } else {
                                        defunc_1_op_res_f_res_40457 = x_40446;
                                    }
                                    defunc_1_op_res_40451 =
                                        defunc_1_op_res_f_res_40456;
                                    defunc_1_op_res_40452 =
                                        defunc_1_op_res_f_res_40457;
                                }
                                
                                float defunc_1_op_res_40458 = x_40447 + x_40450;
                                
                                x_40445 = defunc_1_op_res_40451;
                                x_40446 = defunc_1_op_res_40452;
                                x_40447 = defunc_1_op_res_40458;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)] =
                                x_40445;
                            ((__local
                              int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)] =
                                x_40446;
                            ((__local
                              float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)] =
                                x_40447;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44852, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_44856)[sext_i32_i64(local_tid_44852)] =
                            x_40448;
                        ((__local
                          int32_t *) red_arr_mem_44858)[sext_i32_i64(local_tid_44852)] =
                            x_40449;
                        ((__local
                          float *) red_arr_mem_44860)[sext_i32_i64(local_tid_44852)] =
                            x_40450;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44864) *
                      squot64(segred_group_sizze_40439,
                              segment_sizze_nonzzero_44849) +
                      sext_i32_i64(local_tid_44852), m_28661) &&
                slt64(sext_i32_i64(local_tid_44852),
                      squot64(segred_group_sizze_40439,
                              segment_sizze_nonzzero_44849))) {
                ((__global
                  bool *) mem_43462)[sext_i32_i64(virt_group_id_44864) *
                                     squot64(segred_group_sizze_40439,
                                             segment_sizze_nonzzero_44849) +
                                     sext_i32_i64(local_tid_44852)] = ((__local
                                                                        bool *) red_arr_mem_44856)[(sext_i32_i64(local_tid_44852) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_44849 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43464)[sext_i32_i64(virt_group_id_44864) *
                                        squot64(segred_group_sizze_40439,
                                                segment_sizze_nonzzero_44849) +
                                        sext_i32_i64(local_tid_44852)] =
                    ((__local
                      int32_t *) red_arr_mem_44858)[(sext_i32_i64(local_tid_44852) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44849 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43466)[sext_i32_i64(virt_group_id_44864) *
                                      squot64(segred_group_sizze_40439,
                                              segment_sizze_nonzzero_44849) +
                                      sext_i32_i64(local_tid_44852)] = ((__local
                                                                         float *) red_arr_mem_44860)[(sext_i32_i64(local_tid_44852) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44849 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40439
}
__kernel void mainDetailedzicopy_44018(int64_t m_27371, int64_t i32_res_27519,
                                       int64_t ctx_param_ext_42737,
                                       int64_t ctx_param_ext_42738,
                                       int64_t ctx_param_ext_42740, __global
                                       unsigned char *mem_param_42742, __global
                                       unsigned char *mem_42747)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44018;
    int32_t copy_ltid_44019;
    int32_t copy_gid_44020;
    
    copy_gtid_44018 = get_global_id(0);
    copy_ltid_44019 = get_local_id(0);
    copy_gid_44020 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44018), m_27371 * i32_res_27519)) {
        ((__global float *) mem_42747)[(sext_i32_i64(copy_gtid_44018) -
                                        squot64(sext_i32_i64(copy_gtid_44018),
                                                i32_res_27519) *
                                        i32_res_27519) * m_27371 +
                                       squot64(sext_i32_i64(copy_gtid_44018),
                                               i32_res_27519)] = ((__global
                                                                   float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44018),
                                                                                                      i32_res_27519) *
                                                                                              ctx_param_ext_42738 +
                                                                                              (sext_i32_i64(copy_gtid_44018) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44018),
                                                                                                       i32_res_27519) *
                                                                                               i32_res_27519) *
                                                                                              ctx_param_ext_42740)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_31497(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44430_backing_aligned_0,
                                              int64_t N_27370, int64_t m_27371,
                                              int32_t num_threads_44424,
                                              __global
                                              unsigned char *images_mem_42538,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43297,
                                              __global unsigned char *mem_43320,
                                              __global unsigned char *mem_43323)
{
    #define segscan_group_sizze_31514 (mainDetailedzisegscan_group_sizze_31491)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44430_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44430_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44425;
    int32_t local_tid_44426;
    int64_t group_sizze_44429;
    int32_t wave_sizze_44428;
    int32_t group_tid_44427;
    
    global_tid_44425 = get_global_id(0);
    local_tid_44426 = get_local_id(0);
    group_sizze_44429 = get_local_size(0);
    wave_sizze_44428 = LOCKSTEP_WIDTH;
    group_tid_44427 = get_group_id(0);
    
    int32_t phys_tid_31497;
    
    phys_tid_31497 = global_tid_44425;
    
    __local char *scan_arr_mem_44430;
    
    scan_arr_mem_44430 = (__local char *) scan_arr_mem_44430_backing_0;
    
    int64_t x_31519;
    int64_t x_31520;
    
    x_31519 = (int64_t) 0;
    for (int64_t j_44432 = 0; j_44432 < sdiv_up64(m_27371 * N_27370,
                                                  sext_i32_i64(num_threads_44424));
         j_44432++) {
        int64_t chunk_offset_44433 = segscan_group_sizze_31514 * j_44432 +
                sext_i32_i64(group_tid_44427) * (segscan_group_sizze_31514 *
                                                 sdiv_up64(m_27371 * N_27370,
                                                           sext_i32_i64(num_threads_44424)));
        int64_t flat_idx_44434 = chunk_offset_44433 +
                sext_i32_i64(local_tid_44426);
        int64_t gtid_31488 = squot64(flat_idx_44434, N_27370);
        int64_t gtid_31496 = flat_idx_44434 - squot64(flat_idx_44434, N_27370) *
                N_27370;
        
        // threads in bounds read input
        {
            if (slt64(gtid_31488, m_27371) && slt64(gtid_31496, N_27370)) {
                float x_31524 = ((__global
                                  float *) images_mem_42538)[gtid_31488 *
                                                             N_27370 +
                                                             gtid_31496];
                bool isnan_res_31526;
                
                isnan_res_31526 = futrts_isnan32(x_31524);
                
                bool cond_31527 = !isnan_res_31526;
                float defunc_1_f_res_31528;
                
                if (cond_31527) {
                    float x_31525 = ((__global
                                      float *) defunc_3_map_res_mem_43297)[gtid_31488 *
                                                                           N_27370 +
                                                                           gtid_31496];
                    float defunc_1_f_res_t_res_31529 = x_31524 - x_31525;
                    
                    defunc_1_f_res_31528 = defunc_1_f_res_t_res_31529;
                } else {
                    defunc_1_f_res_31528 = NAN;
                }
                
                bool isnan_res_31530;
                
                isnan_res_31530 = futrts_isnan32(defunc_1_f_res_31528);
                
                bool defunc_0_p_res_31531 = !isnan_res_31530;
                int64_t defunc_0_f_res_31532 =
                        btoi_bool_i64(defunc_0_p_res_31531);
                
                // write to-scan values to parameters
                {
                    x_31520 = defunc_0_f_res_31532;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43323)[gtid_31488 * N_27370 +
                                                   gtid_31496] =
                        defunc_1_f_res_31528;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_31488, m_27371) && slt64(gtid_31496,
                                                          N_27370))) {
                    x_31520 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_31521 = add64(x_31519, x_31520);
                
                ((__local
                  int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)] =
                    defunc_1_op_res_31521;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44435;
            int64_t x_44436;
            int64_t x_44438;
            int64_t x_44439;
            bool ltid_in_bounds_44441;
            
            ltid_in_bounds_44441 = slt64(sext_i32_i64(local_tid_44426),
                                         segscan_group_sizze_31514);
            
            int32_t skip_threads_44442;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44441) {
                    x_44436 = ((volatile __local
                                int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)];
                    if ((local_tid_44426 - squot32(local_tid_44426, 32) * 32) ==
                        0) {
                        x_44435 = x_44436;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44442 = 1;
                while (slt32(skip_threads_44442, 32)) {
                    if (sle32(skip_threads_44442, local_tid_44426 -
                              squot32(local_tid_44426, 32) * 32) &&
                        ltid_in_bounds_44441) {
                        // read operands
                        {
                            x_44435 = ((volatile __local
                                        int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426) -
                                                                       sext_i32_i64(skip_threads_44442)];
                        }
                        // perform operation
                        {
                            bool inactive_44443 =
                                 slt64(srem64(sext_i32_i64(local_tid_44426) +
                                              chunk_offset_44433, N_27370),
                                       sext_i32_i64(local_tid_44426) +
                                       chunk_offset_44433 -
                                       (sext_i32_i64(local_tid_44426 -
                                        skip_threads_44442) +
                                        chunk_offset_44433));
                            
                            if (inactive_44443) {
                                x_44435 = x_44436;
                            }
                            if (!inactive_44443) {
                                int64_t defunc_1_op_res_44437 = add64(x_44435,
                                                                      x_44436);
                                
                                x_44435 = defunc_1_op_res_44437;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44428, skip_threads_44442)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44442, local_tid_44426 -
                              squot32(local_tid_44426, 32) * 32) &&
                        ltid_in_bounds_44441) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)] =
                                x_44435;
                            x_44436 = x_44435;
                        }
                    }
                    if (sle32(wave_sizze_44428, skip_threads_44442)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44442 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44426 - squot32(local_tid_44426, 32) * 32) ==
                    31 && ltid_in_bounds_44441) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44430)[sext_i32_i64(squot32(local_tid_44426,
                                                                          32))] =
                        x_44435;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44444;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44426, 32) == 0 &&
                        ltid_in_bounds_44441) {
                        x_44439 = ((volatile __local
                                    int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)];
                        if ((local_tid_44426 - squot32(local_tid_44426, 32) *
                             32) == 0) {
                            x_44438 = x_44439;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44444 = 1;
                    while (slt32(skip_threads_44444, 32)) {
                        if (sle32(skip_threads_44444, local_tid_44426 -
                                  squot32(local_tid_44426, 32) * 32) &&
                            (squot32(local_tid_44426, 32) == 0 &&
                             ltid_in_bounds_44441)) {
                            // read operands
                            {
                                x_44438 = ((volatile __local
                                            int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426) -
                                                                           sext_i32_i64(skip_threads_44444)];
                            }
                            // perform operation
                            {
                                bool inactive_44445 =
                                     slt64(srem64(sext_i32_i64(local_tid_44426 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44433, N_27370),
                                           sext_i32_i64(local_tid_44426 * 32 +
                                           32 - 1) + chunk_offset_44433 -
                                           (sext_i32_i64((local_tid_44426 -
                                                          skip_threads_44444) *
                                            32 + 32 - 1) + chunk_offset_44433));
                                
                                if (inactive_44445) {
                                    x_44438 = x_44439;
                                }
                                if (!inactive_44445) {
                                    int64_t defunc_1_op_res_44440 =
                                            add64(x_44438, x_44439);
                                    
                                    x_44438 = defunc_1_op_res_44440;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44428, skip_threads_44444)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44444, local_tid_44426 -
                                  squot32(local_tid_44426, 32) * 32) &&
                            (squot32(local_tid_44426, 32) == 0 &&
                             ltid_in_bounds_44441)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)] =
                                    x_44438;
                                x_44439 = x_44438;
                            }
                        }
                        if (sle32(wave_sizze_44428, skip_threads_44444)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44444 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44426, 32) == 0 ||
                      !ltid_in_bounds_44441)) {
                    // read operands
                    {
                        x_44436 = x_44435;
                        x_44435 = ((__local
                                    int64_t *) scan_arr_mem_44430)[sext_i32_i64(squot32(local_tid_44426,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44446 =
                             slt64(srem64(sext_i32_i64(local_tid_44426) +
                                          chunk_offset_44433, N_27370),
                                   sext_i32_i64(local_tid_44426) +
                                   chunk_offset_44433 -
                                   (sext_i32_i64(squot32(local_tid_44426, 32) *
                                    32 - 1) + chunk_offset_44433));
                        
                        if (inactive_44446) {
                            x_44435 = x_44436;
                        }
                        if (!inactive_44446) {
                            int64_t defunc_1_op_res_44437 = add64(x_44435,
                                                                  x_44436);
                            
                            x_44435 = defunc_1_op_res_44437;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)] =
                            x_44435;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44426, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)] =
                        x_44436;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_31488, m_27371) && slt64(gtid_31496, N_27370)) {
                    ((__global int64_t *) mem_43320)[gtid_31488 * N_27370 +
                                                     gtid_31496] = ((__local
                                                                     int64_t *) scan_arr_mem_44430)[sext_i32_i64(local_tid_44426)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44447 = slt64(srem64(chunk_offset_44433 +
                                                          segscan_group_sizze_31514,
                                                          N_27370),
                                                   chunk_offset_44433 +
                                                   segscan_group_sizze_31514 -
                                                   (chunk_offset_44433 +
                                                    segscan_group_sizze_31514 -
                                                    (int64_t) 1));
                bool should_load_carry_44448 = local_tid_44426 == 0 &&
                     !crosses_segment_44447;
                
                if (should_load_carry_44448) {
                    x_31519 = ((__local
                                int64_t *) scan_arr_mem_44430)[segscan_group_sizze_31514 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44448) {
                    x_31519 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_31514
}
__kernel void mainDetailedziscan_stage1_33082(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44854_backing_aligned_0,
                                              int64_t N_27370, int64_t m_27371,
                                              int64_t iota32_arg_27794,
                                              int32_t num_threads_44848,
                                              __global
                                              unsigned char *defunc_4_map_res_mem_43335,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43401,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43402,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_43436,
                                              __global unsigned char *mem_43556,
                                              __global unsigned char *mem_43560)
{
    #define segscan_group_sizze_33122 (mainDetailedzisegscan_group_sizze_33076)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44854_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44854_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44849;
    int32_t local_tid_44850;
    int64_t group_sizze_44853;
    int32_t wave_sizze_44852;
    int32_t group_tid_44851;
    
    global_tid_44849 = get_global_id(0);
    local_tid_44850 = get_local_id(0);
    group_sizze_44853 = get_local_size(0);
    wave_sizze_44852 = LOCKSTEP_WIDTH;
    group_tid_44851 = get_group_id(0);
    
    int32_t phys_tid_33082;
    
    phys_tid_33082 = global_tid_44849;
    
    __local char *scan_arr_mem_44854;
    
    scan_arr_mem_44854 = (__local char *) scan_arr_mem_44854_backing_0;
    
    float x_33126;
    float x_33127;
    
    x_33126 = 0.0F;
    for (int64_t j_44856 = 0; j_44856 < sdiv_up64(m_27371 * iota32_arg_27794,
                                                  sext_i32_i64(num_threads_44848));
         j_44856++) {
        int64_t chunk_offset_44857 = segscan_group_sizze_33122 * j_44856 +
                sext_i32_i64(group_tid_44851) * (segscan_group_sizze_33122 *
                                                 sdiv_up64(m_27371 *
                                                           iota32_arg_27794,
                                                           sext_i32_i64(num_threads_44848)));
        int64_t flat_idx_44858 = chunk_offset_44857 +
                sext_i32_i64(local_tid_44850);
        int64_t gtid_33073 = squot64(flat_idx_44858, iota32_arg_27794);
        int64_t gtid_33081 = flat_idx_44858 - squot64(flat_idx_44858,
                                                      iota32_arg_27794) *
                iota32_arg_27794;
        
        // threads in bounds read input
        {
            if (slt64(gtid_33073, m_27371) && slt64(gtid_33081,
                                                    iota32_arg_27794)) {
                int32_t y_33133 = ((__global int32_t *) mem_43556)[gtid_33073];
                int32_t index_primexp_40600 = sext_i64_i32(gtid_33081);
                bool cond_33135 = sle32(y_33133, index_primexp_40600);
                float defunc_0_f_res_33136;
                
                if (cond_33135) {
                    defunc_0_f_res_33136 = 0.0F;
                } else {
                    int32_t x_33129 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_33073];
                    int32_t x_33130 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43401)[gtid_33073];
                    float x_33131 = ((__global
                                      float *) defunc_0_f_res_mem_43436)[gtid_33073];
                    bool cond_33137 = index_primexp_40600 == 0;
                    float defunc_0_f_res_f_res_33138;
                    
                    if (cond_33137) {
                        defunc_0_f_res_f_res_33138 = x_33131;
                    } else {
                        int32_t i_33139 = add32(x_33129, index_primexp_40600);
                        int64_t i_33140 = sext_i32_i64(i_33139);
                        float x_33141 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_33073 *
                                                                               N_27370 +
                                                                               i_33140];
                        int32_t x_33142 = sub32(x_33129, x_33130);
                        int32_t i_33143 = add32(x_33142, index_primexp_40600);
                        int64_t i_33144 = sext_i32_i64(i_33143);
                        float y_33145 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_33073 *
                                                                               N_27370 +
                                                                               i_33144];
                        float defunc_0_f_res_f_res_f_res_33146 = x_33141 -
                              y_33145;
                        
                        defunc_0_f_res_f_res_33138 =
                            defunc_0_f_res_f_res_f_res_33146;
                    }
                    defunc_0_f_res_33136 = defunc_0_f_res_f_res_33138;
                }
                // write to-scan values to parameters
                {
                    x_33127 = defunc_0_f_res_33136;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_33073, m_27371) && slt64(gtid_33081,
                                                          iota32_arg_27794))) {
                    x_33127 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_33128 = x_33126 + x_33127;
                
                ((__local
                  float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)] =
                    defunc_1_op_res_33128;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_44859;
            float x_44860;
            float x_44862;
            float x_44863;
            bool ltid_in_bounds_44865;
            
            ltid_in_bounds_44865 = slt64(sext_i32_i64(local_tid_44850),
                                         segscan_group_sizze_33122);
            
            int32_t skip_threads_44866;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44865) {
                    x_44860 = ((volatile __local
                                float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)];
                    if ((local_tid_44850 - squot32(local_tid_44850, 32) * 32) ==
                        0) {
                        x_44859 = x_44860;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44866 = 1;
                while (slt32(skip_threads_44866, 32)) {
                    if (sle32(skip_threads_44866, local_tid_44850 -
                              squot32(local_tid_44850, 32) * 32) &&
                        ltid_in_bounds_44865) {
                        // read operands
                        {
                            x_44859 = ((volatile __local
                                        float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850) -
                                                                     sext_i32_i64(skip_threads_44866)];
                        }
                        // perform operation
                        {
                            bool inactive_44867 =
                                 slt64(srem64(sext_i32_i64(local_tid_44850) +
                                              chunk_offset_44857,
                                              iota32_arg_27794),
                                       sext_i32_i64(local_tid_44850) +
                                       chunk_offset_44857 -
                                       (sext_i32_i64(local_tid_44850 -
                                        skip_threads_44866) +
                                        chunk_offset_44857));
                            
                            if (inactive_44867) {
                                x_44859 = x_44860;
                            }
                            if (!inactive_44867) {
                                float defunc_1_op_res_44861 = x_44859 + x_44860;
                                
                                x_44859 = defunc_1_op_res_44861;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44852, skip_threads_44866)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44866, local_tid_44850 -
                              squot32(local_tid_44850, 32) * 32) &&
                        ltid_in_bounds_44865) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)] =
                                x_44859;
                            x_44860 = x_44859;
                        }
                    }
                    if (sle32(wave_sizze_44852, skip_threads_44866)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44866 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44850 - squot32(local_tid_44850, 32) * 32) ==
                    31 && ltid_in_bounds_44865) {
                    ((volatile __local
                      float *) scan_arr_mem_44854)[sext_i32_i64(squot32(local_tid_44850,
                                                                        32))] =
                        x_44859;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44868;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44850, 32) == 0 &&
                        ltid_in_bounds_44865) {
                        x_44863 = ((volatile __local
                                    float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)];
                        if ((local_tid_44850 - squot32(local_tid_44850, 32) *
                             32) == 0) {
                            x_44862 = x_44863;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44868 = 1;
                    while (slt32(skip_threads_44868, 32)) {
                        if (sle32(skip_threads_44868, local_tid_44850 -
                                  squot32(local_tid_44850, 32) * 32) &&
                            (squot32(local_tid_44850, 32) == 0 &&
                             ltid_in_bounds_44865)) {
                            // read operands
                            {
                                x_44862 = ((volatile __local
                                            float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850) -
                                                                         sext_i32_i64(skip_threads_44868)];
                            }
                            // perform operation
                            {
                                bool inactive_44869 =
                                     slt64(srem64(sext_i32_i64(local_tid_44850 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44857,
                                                  iota32_arg_27794),
                                           sext_i32_i64(local_tid_44850 * 32 +
                                           32 - 1) + chunk_offset_44857 -
                                           (sext_i32_i64((local_tid_44850 -
                                                          skip_threads_44868) *
                                            32 + 32 - 1) + chunk_offset_44857));
                                
                                if (inactive_44869) {
                                    x_44862 = x_44863;
                                }
                                if (!inactive_44869) {
                                    float defunc_1_op_res_44864 = x_44862 +
                                          x_44863;
                                    
                                    x_44862 = defunc_1_op_res_44864;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44852, skip_threads_44868)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44868, local_tid_44850 -
                                  squot32(local_tid_44850, 32) * 32) &&
                            (squot32(local_tid_44850, 32) == 0 &&
                             ltid_in_bounds_44865)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)] =
                                    x_44862;
                                x_44863 = x_44862;
                            }
                        }
                        if (sle32(wave_sizze_44852, skip_threads_44868)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44868 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44850, 32) == 0 ||
                      !ltid_in_bounds_44865)) {
                    // read operands
                    {
                        x_44860 = x_44859;
                        x_44859 = ((__local
                                    float *) scan_arr_mem_44854)[sext_i32_i64(squot32(local_tid_44850,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44870 =
                             slt64(srem64(sext_i32_i64(local_tid_44850) +
                                          chunk_offset_44857, iota32_arg_27794),
                                   sext_i32_i64(local_tid_44850) +
                                   chunk_offset_44857 -
                                   (sext_i32_i64(squot32(local_tid_44850, 32) *
                                    32 - 1) + chunk_offset_44857));
                        
                        if (inactive_44870) {
                            x_44859 = x_44860;
                        }
                        if (!inactive_44870) {
                            float defunc_1_op_res_44861 = x_44859 + x_44860;
                            
                            x_44859 = defunc_1_op_res_44861;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)] =
                            x_44859;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44850, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)] =
                        x_44860;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_33073, m_27371) && slt64(gtid_33081,
                                                        iota32_arg_27794)) {
                    ((__global float *) mem_43560)[gtid_33073 *
                                                   iota32_arg_27794 +
                                                   gtid_33081] = ((__local
                                                                   float *) scan_arr_mem_44854)[sext_i32_i64(local_tid_44850)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44871 = slt64(srem64(chunk_offset_44857 +
                                                          segscan_group_sizze_33122,
                                                          iota32_arg_27794),
                                                   chunk_offset_44857 +
                                                   segscan_group_sizze_33122 -
                                                   (chunk_offset_44857 +
                                                    segscan_group_sizze_33122 -
                                                    (int64_t) 1));
                bool should_load_carry_44872 = local_tid_44850 == 0 &&
                     !crosses_segment_44871;
                
                if (should_load_carry_44872) {
                    x_33126 = ((__local
                                float *) scan_arr_mem_44854)[segscan_group_sizze_33122 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_44872) {
                    x_33126 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_33122
}
__kernel void mainDetailedziscan_stage2_31497(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44454_backing_aligned_0,
                                              int64_t N_27370, int64_t m_27371,
                                              int64_t stage1_num_groups_44423,
                                              int32_t num_threads_44424,
                                              __global unsigned char *mem_43320)
{
    #define segscan_group_sizze_31514 (mainDetailedzisegscan_group_sizze_31491)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44454_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44454_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44449;
    int32_t local_tid_44450;
    int64_t group_sizze_44453;
    int32_t wave_sizze_44452;
    int32_t group_tid_44451;
    
    global_tid_44449 = get_global_id(0);
    local_tid_44450 = get_local_id(0);
    group_sizze_44453 = get_local_size(0);
    wave_sizze_44452 = LOCKSTEP_WIDTH;
    group_tid_44451 = get_group_id(0);
    
    int32_t phys_tid_31497;
    
    phys_tid_31497 = global_tid_44449;
    
    __local char *scan_arr_mem_44454;
    
    scan_arr_mem_44454 = (__local char *) scan_arr_mem_44454_backing_0;
    
    int64_t flat_idx_44456;
    
    flat_idx_44456 = (sext_i32_i64(local_tid_44450) + (int64_t) 1) *
        (segscan_group_sizze_31514 * sdiv_up64(m_27371 * N_27370,
                                               sext_i32_i64(num_threads_44424))) -
        (int64_t) 1;
    
    int64_t gtid_31488;
    
    gtid_31488 = squot64(flat_idx_44456, N_27370);
    
    int64_t gtid_31496;
    
    gtid_31496 = flat_idx_44456 - squot64(flat_idx_44456, N_27370) * N_27370;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_31488, m_27371) && slt64(gtid_31496, N_27370)) {
            ((__local
              int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)] =
                ((__global int64_t *) mem_43320)[gtid_31488 * N_27370 +
                                                 gtid_31496];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_31519;
    int64_t x_31520;
    int64_t x_44457;
    int64_t x_44458;
    bool ltid_in_bounds_44460;
    
    ltid_in_bounds_44460 = slt64(sext_i32_i64(local_tid_44450),
                                 stage1_num_groups_44423);
    
    int32_t skip_threads_44461;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44460) {
            x_31520 = ((volatile __local
                        int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)];
            if ((local_tid_44450 - squot32(local_tid_44450, 32) * 32) == 0) {
                x_31519 = x_31520;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44461 = 1;
        while (slt32(skip_threads_44461, 32)) {
            if (sle32(skip_threads_44461, local_tid_44450 -
                      squot32(local_tid_44450, 32) * 32) &&
                ltid_in_bounds_44460) {
                // read operands
                {
                    x_31519 = ((volatile __local
                                int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450) -
                                                               sext_i32_i64(skip_threads_44461)];
                }
                // perform operation
                {
                    bool inactive_44462 =
                         slt64(srem64((sext_i32_i64(local_tid_44450) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_31514 *
                                       sdiv_up64(m_27371 * N_27370,
                                                 sext_i32_i64(num_threads_44424))) -
                                      (int64_t) 1, N_27370),
                               (sext_i32_i64(local_tid_44450) + (int64_t) 1) *
                               (segscan_group_sizze_31514 * sdiv_up64(m_27371 *
                                                                      N_27370,
                                                                      sext_i32_i64(num_threads_44424))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44450 -
                                               skip_threads_44461) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_31514 *
                                               sdiv_up64(m_27371 * N_27370,
                                                         sext_i32_i64(num_threads_44424))) -
                                              (int64_t) 1));
                    
                    if (inactive_44462) {
                        x_31519 = x_31520;
                    }
                    if (!inactive_44462) {
                        int64_t defunc_1_op_res_31521 = add64(x_31519, x_31520);
                        
                        x_31519 = defunc_1_op_res_31521;
                    }
                }
            }
            if (sle32(wave_sizze_44452, skip_threads_44461)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44461, local_tid_44450 -
                      squot32(local_tid_44450, 32) * 32) &&
                ltid_in_bounds_44460) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)] =
                        x_31519;
                    x_31520 = x_31519;
                }
            }
            if (sle32(wave_sizze_44452, skip_threads_44461)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44461 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44450 - squot32(local_tid_44450, 32) * 32) == 31 &&
            ltid_in_bounds_44460) {
            ((volatile __local
              int64_t *) scan_arr_mem_44454)[sext_i32_i64(squot32(local_tid_44450,
                                                                  32))] =
                x_31519;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44463;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44450, 32) == 0 && ltid_in_bounds_44460) {
                x_44458 = ((volatile __local
                            int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)];
                if ((local_tid_44450 - squot32(local_tid_44450, 32) * 32) ==
                    0) {
                    x_44457 = x_44458;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44463 = 1;
            while (slt32(skip_threads_44463, 32)) {
                if (sle32(skip_threads_44463, local_tid_44450 -
                          squot32(local_tid_44450, 32) * 32) &&
                    (squot32(local_tid_44450, 32) == 0 &&
                     ltid_in_bounds_44460)) {
                    // read operands
                    {
                        x_44457 = ((volatile __local
                                    int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450) -
                                                                   sext_i32_i64(skip_threads_44463)];
                    }
                    // perform operation
                    {
                        bool inactive_44464 =
                             slt64(srem64((sext_i32_i64(local_tid_44450 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_31514 *
                                           sdiv_up64(m_27371 * N_27370,
                                                     sext_i32_i64(num_threads_44424))) -
                                          (int64_t) 1, N_27370),
                                   (sext_i32_i64(local_tid_44450 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_31514 *
                                    sdiv_up64(m_27371 * N_27370,
                                              sext_i32_i64(num_threads_44424))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44450 -
                                                   skip_threads_44463) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_31514 *
                                     sdiv_up64(m_27371 * N_27370,
                                               sext_i32_i64(num_threads_44424))) -
                                    (int64_t) 1));
                        
                        if (inactive_44464) {
                            x_44457 = x_44458;
                        }
                        if (!inactive_44464) {
                            int64_t defunc_1_op_res_44459 = add64(x_44457,
                                                                  x_44458);
                            
                            x_44457 = defunc_1_op_res_44459;
                        }
                    }
                }
                if (sle32(wave_sizze_44452, skip_threads_44463)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44463, local_tid_44450 -
                          squot32(local_tid_44450, 32) * 32) &&
                    (squot32(local_tid_44450, 32) == 0 &&
                     ltid_in_bounds_44460)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)] =
                            x_44457;
                        x_44458 = x_44457;
                    }
                }
                if (sle32(wave_sizze_44452, skip_threads_44463)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44463 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44450, 32) == 0 || !ltid_in_bounds_44460)) {
            // read operands
            {
                x_31520 = x_31519;
                x_31519 = ((__local
                            int64_t *) scan_arr_mem_44454)[sext_i32_i64(squot32(local_tid_44450,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44465 =
                     slt64(srem64((sext_i32_i64(local_tid_44450) +
                                   (int64_t) 1) * (segscan_group_sizze_31514 *
                                                   sdiv_up64(m_27371 * N_27370,
                                                             sext_i32_i64(num_threads_44424))) -
                                  (int64_t) 1, N_27370),
                           (sext_i32_i64(local_tid_44450) + (int64_t) 1) *
                           (segscan_group_sizze_31514 * sdiv_up64(m_27371 *
                                                                  N_27370,
                                                                  sext_i32_i64(num_threads_44424))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44450,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_31514 *
                                           sdiv_up64(m_27371 * N_27370,
                                                     sext_i32_i64(num_threads_44424))) -
                                          (int64_t) 1));
                
                if (inactive_44465) {
                    x_31519 = x_31520;
                }
                if (!inactive_44465) {
                    int64_t defunc_1_op_res_31521 = add64(x_31519, x_31520);
                    
                    x_31519 = defunc_1_op_res_31521;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)] =
                    x_31519;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44450, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)] =
                x_31520;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_31488, m_27371) && slt64(gtid_31496, N_27370)) {
            ((__global int64_t *) mem_43320)[gtid_31488 * N_27370 +
                                             gtid_31496] = ((__local
                                                             int64_t *) scan_arr_mem_44454)[sext_i32_i64(local_tid_44450)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31514
}
__kernel void mainDetailedziscan_stage2_33082(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44878_backing_aligned_0,
                                              int64_t m_27371,
                                              int64_t iota32_arg_27794,
                                              int64_t stage1_num_groups_44847,
                                              int32_t num_threads_44848,
                                              __global unsigned char *mem_43560)
{
    #define segscan_group_sizze_33122 (mainDetailedzisegscan_group_sizze_33076)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44878_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44878_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44873;
    int32_t local_tid_44874;
    int64_t group_sizze_44877;
    int32_t wave_sizze_44876;
    int32_t group_tid_44875;
    
    global_tid_44873 = get_global_id(0);
    local_tid_44874 = get_local_id(0);
    group_sizze_44877 = get_local_size(0);
    wave_sizze_44876 = LOCKSTEP_WIDTH;
    group_tid_44875 = get_group_id(0);
    
    int32_t phys_tid_33082;
    
    phys_tid_33082 = global_tid_44873;
    
    __local char *scan_arr_mem_44878;
    
    scan_arr_mem_44878 = (__local char *) scan_arr_mem_44878_backing_0;
    
    int64_t flat_idx_44880;
    
    flat_idx_44880 = (sext_i32_i64(local_tid_44874) + (int64_t) 1) *
        (segscan_group_sizze_33122 * sdiv_up64(m_27371 * iota32_arg_27794,
                                               sext_i32_i64(num_threads_44848))) -
        (int64_t) 1;
    
    int64_t gtid_33073;
    
    gtid_33073 = squot64(flat_idx_44880, iota32_arg_27794);
    
    int64_t gtid_33081;
    
    gtid_33081 = flat_idx_44880 - squot64(flat_idx_44880, iota32_arg_27794) *
        iota32_arg_27794;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_33073, m_27371) && slt64(gtid_33081, iota32_arg_27794)) {
            ((__local
              float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                ((__global float *) mem_43560)[gtid_33073 * iota32_arg_27794 +
                                               gtid_33081];
        } else {
            ((__local
              float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_33126;
    float x_33127;
    float x_44881;
    float x_44882;
    bool ltid_in_bounds_44884;
    
    ltid_in_bounds_44884 = slt64(sext_i32_i64(local_tid_44874),
                                 stage1_num_groups_44847);
    
    int32_t skip_threads_44885;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44884) {
            x_33127 = ((volatile __local
                        float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)];
            if ((local_tid_44874 - squot32(local_tid_44874, 32) * 32) == 0) {
                x_33126 = x_33127;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44885 = 1;
        while (slt32(skip_threads_44885, 32)) {
            if (sle32(skip_threads_44885, local_tid_44874 -
                      squot32(local_tid_44874, 32) * 32) &&
                ltid_in_bounds_44884) {
                // read operands
                {
                    x_33126 = ((volatile __local
                                float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874) -
                                                             sext_i32_i64(skip_threads_44885)];
                }
                // perform operation
                {
                    bool inactive_44886 =
                         slt64(srem64((sext_i32_i64(local_tid_44874) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_33122 *
                                       sdiv_up64(m_27371 * iota32_arg_27794,
                                                 sext_i32_i64(num_threads_44848))) -
                                      (int64_t) 1, iota32_arg_27794),
                               (sext_i32_i64(local_tid_44874) + (int64_t) 1) *
                               (segscan_group_sizze_33122 * sdiv_up64(m_27371 *
                                                                      iota32_arg_27794,
                                                                      sext_i32_i64(num_threads_44848))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44874 -
                                               skip_threads_44885) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_33122 *
                                               sdiv_up64(m_27371 *
                                                         iota32_arg_27794,
                                                         sext_i32_i64(num_threads_44848))) -
                                              (int64_t) 1));
                    
                    if (inactive_44886) {
                        x_33126 = x_33127;
                    }
                    if (!inactive_44886) {
                        float defunc_1_op_res_33128 = x_33126 + x_33127;
                        
                        x_33126 = defunc_1_op_res_33128;
                    }
                }
            }
            if (sle32(wave_sizze_44876, skip_threads_44885)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44885, local_tid_44874 -
                      squot32(local_tid_44874, 32) * 32) &&
                ltid_in_bounds_44884) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                        x_33126;
                    x_33127 = x_33126;
                }
            }
            if (sle32(wave_sizze_44876, skip_threads_44885)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44885 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44874 - squot32(local_tid_44874, 32) * 32) == 31 &&
            ltid_in_bounds_44884) {
            ((volatile __local
              float *) scan_arr_mem_44878)[sext_i32_i64(squot32(local_tid_44874,
                                                                32))] = x_33126;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44887;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44874, 32) == 0 && ltid_in_bounds_44884) {
                x_44882 = ((volatile __local
                            float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)];
                if ((local_tid_44874 - squot32(local_tid_44874, 32) * 32) ==
                    0) {
                    x_44881 = x_44882;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44887 = 1;
            while (slt32(skip_threads_44887, 32)) {
                if (sle32(skip_threads_44887, local_tid_44874 -
                          squot32(local_tid_44874, 32) * 32) &&
                    (squot32(local_tid_44874, 32) == 0 &&
                     ltid_in_bounds_44884)) {
                    // read operands
                    {
                        x_44881 = ((volatile __local
                                    float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874) -
                                                                 sext_i32_i64(skip_threads_44887)];
                    }
                    // perform operation
                    {
                        bool inactive_44888 =
                             slt64(srem64((sext_i32_i64(local_tid_44874 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_33122 *
                                           sdiv_up64(m_27371 * iota32_arg_27794,
                                                     sext_i32_i64(num_threads_44848))) -
                                          (int64_t) 1, iota32_arg_27794),
                                   (sext_i32_i64(local_tid_44874 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_33122 *
                                    sdiv_up64(m_27371 * iota32_arg_27794,
                                              sext_i32_i64(num_threads_44848))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44874 -
                                                   skip_threads_44887) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_33122 *
                                     sdiv_up64(m_27371 * iota32_arg_27794,
                                               sext_i32_i64(num_threads_44848))) -
                                    (int64_t) 1));
                        
                        if (inactive_44888) {
                            x_44881 = x_44882;
                        }
                        if (!inactive_44888) {
                            float defunc_1_op_res_44883 = x_44881 + x_44882;
                            
                            x_44881 = defunc_1_op_res_44883;
                        }
                    }
                }
                if (sle32(wave_sizze_44876, skip_threads_44887)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44887, local_tid_44874 -
                          squot32(local_tid_44874, 32) * 32) &&
                    (squot32(local_tid_44874, 32) == 0 &&
                     ltid_in_bounds_44884)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                            x_44881;
                        x_44882 = x_44881;
                    }
                }
                if (sle32(wave_sizze_44876, skip_threads_44887)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44887 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44874, 32) == 0 || !ltid_in_bounds_44884)) {
            // read operands
            {
                x_33127 = x_33126;
                x_33126 = ((__local
                            float *) scan_arr_mem_44878)[sext_i32_i64(squot32(local_tid_44874,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44889 =
                     slt64(srem64((sext_i32_i64(local_tid_44874) +
                                   (int64_t) 1) * (segscan_group_sizze_33122 *
                                                   sdiv_up64(m_27371 *
                                                             iota32_arg_27794,
                                                             sext_i32_i64(num_threads_44848))) -
                                  (int64_t) 1, iota32_arg_27794),
                           (sext_i32_i64(local_tid_44874) + (int64_t) 1) *
                           (segscan_group_sizze_33122 * sdiv_up64(m_27371 *
                                                                  iota32_arg_27794,
                                                                  sext_i32_i64(num_threads_44848))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44874,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_33122 *
                                           sdiv_up64(m_27371 * iota32_arg_27794,
                                                     sext_i32_i64(num_threads_44848))) -
                                          (int64_t) 1));
                
                if (inactive_44889) {
                    x_33126 = x_33127;
                }
                if (!inactive_44889) {
                    float defunc_1_op_res_33128 = x_33126 + x_33127;
                    
                    x_33126 = defunc_1_op_res_33128;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                    x_33126;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44874, 32) == 0) {
            ((__local
              float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                x_33127;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_33073, m_27371) && slt64(gtid_33081, iota32_arg_27794)) {
            ((__global float *) mem_43560)[gtid_33073 * iota32_arg_27794 +
                                           gtid_33081] = ((__local
                                                           float *) scan_arr_mem_44878)[sext_i32_i64(local_tid_44874)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33122
}
__kernel void mainDetailedziscan_stage3_31497(__global int *global_failure,
                                              int64_t N_27370, int64_t m_27371,
                                              int64_t num_groups_31515,
                                              int32_t num_threads_44424,
                                              int32_t required_groups_44466,
                                              __global unsigned char *mem_43320)
{
    #define segscan_group_sizze_31514 (mainDetailedzisegscan_group_sizze_31491)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44467;
    int32_t local_tid_44468;
    int64_t group_sizze_44471;
    int32_t wave_sizze_44470;
    int32_t group_tid_44469;
    
    global_tid_44467 = get_global_id(0);
    local_tid_44468 = get_local_id(0);
    group_sizze_44471 = get_local_size(0);
    wave_sizze_44470 = LOCKSTEP_WIDTH;
    group_tid_44469 = get_group_id(0);
    
    int32_t phys_tid_31497;
    
    phys_tid_31497 = global_tid_44467;
    
    int32_t phys_group_id_44472;
    
    phys_group_id_44472 = get_group_id(0);
    for (int32_t i_44473 = 0; i_44473 < sdiv_up32(required_groups_44466 -
                                                  phys_group_id_44472,
                                                  sext_i64_i32(num_groups_31515));
         i_44473++) {
        int32_t virt_group_id_44474 = phys_group_id_44472 + i_44473 *
                sext_i64_i32(num_groups_31515);
        int64_t flat_idx_44475 = sext_i32_i64(virt_group_id_44474) *
                segscan_group_sizze_31514 + sext_i32_i64(local_tid_44468);
        int64_t gtid_31488 = squot64(flat_idx_44475, N_27370);
        int64_t gtid_31496 = flat_idx_44475 - squot64(flat_idx_44475, N_27370) *
                N_27370;
        int64_t orig_group_44476 = squot64(flat_idx_44475,
                                           segscan_group_sizze_31514 *
                                           sdiv_up64(m_27371 * N_27370,
                                                     sext_i32_i64(num_threads_44424)));
        int64_t carry_in_flat_idx_44477 = orig_group_44476 *
                (segscan_group_sizze_31514 * sdiv_up64(m_27371 * N_27370,
                                                       sext_i32_i64(num_threads_44424))) -
                (int64_t) 1;
        
        if (slt64(gtid_31488, m_27371) && slt64(gtid_31496, N_27370)) {
            if (!(orig_group_44476 == (int64_t) 0 || (flat_idx_44475 ==
                                                      (orig_group_44476 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_31514 *
                                                       sdiv_up64(m_27371 *
                                                                 N_27370,
                                                                 sext_i32_i64(num_threads_44424))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44475,
                                                                   N_27370),
                                                            flat_idx_44475 -
                                                            carry_in_flat_idx_44477)))) {
                int64_t x_31519;
                int64_t x_31520;
                
                x_31519 = ((__global
                            int64_t *) mem_43320)[squot64(carry_in_flat_idx_44477,
                                                          N_27370) * N_27370 +
                                                  (carry_in_flat_idx_44477 -
                                                   squot64(carry_in_flat_idx_44477,
                                                           N_27370) * N_27370)];
                x_31520 = ((__global int64_t *) mem_43320)[gtid_31488 *
                                                           N_27370 +
                                                           gtid_31496];
                
                int64_t defunc_1_op_res_31521;
                
                defunc_1_op_res_31521 = add64(x_31519, x_31520);
                x_31519 = defunc_1_op_res_31521;
                ((__global int64_t *) mem_43320)[gtid_31488 * N_27370 +
                                                 gtid_31496] = x_31519;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31514
}
__kernel void mainDetailedziscan_stage3_33082(__global int *global_failure,
                                              int64_t m_27371,
                                              int64_t iota32_arg_27794,
                                              int64_t num_groups_33123,
                                              int32_t num_threads_44848,
                                              int32_t required_groups_44890,
                                              __global unsigned char *mem_43560)
{
    #define segscan_group_sizze_33122 (mainDetailedzisegscan_group_sizze_33076)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44891;
    int32_t local_tid_44892;
    int64_t group_sizze_44895;
    int32_t wave_sizze_44894;
    int32_t group_tid_44893;
    
    global_tid_44891 = get_global_id(0);
    local_tid_44892 = get_local_id(0);
    group_sizze_44895 = get_local_size(0);
    wave_sizze_44894 = LOCKSTEP_WIDTH;
    group_tid_44893 = get_group_id(0);
    
    int32_t phys_tid_33082;
    
    phys_tid_33082 = global_tid_44891;
    
    int32_t phys_group_id_44896;
    
    phys_group_id_44896 = get_group_id(0);
    for (int32_t i_44897 = 0; i_44897 < sdiv_up32(required_groups_44890 -
                                                  phys_group_id_44896,
                                                  sext_i64_i32(num_groups_33123));
         i_44897++) {
        int32_t virt_group_id_44898 = phys_group_id_44896 + i_44897 *
                sext_i64_i32(num_groups_33123);
        int64_t flat_idx_44899 = sext_i32_i64(virt_group_id_44898) *
                segscan_group_sizze_33122 + sext_i32_i64(local_tid_44892);
        int64_t gtid_33073 = squot64(flat_idx_44899, iota32_arg_27794);
        int64_t gtid_33081 = flat_idx_44899 - squot64(flat_idx_44899,
                                                      iota32_arg_27794) *
                iota32_arg_27794;
        int64_t orig_group_44900 = squot64(flat_idx_44899,
                                           segscan_group_sizze_33122 *
                                           sdiv_up64(m_27371 * iota32_arg_27794,
                                                     sext_i32_i64(num_threads_44848)));
        int64_t carry_in_flat_idx_44901 = orig_group_44900 *
                (segscan_group_sizze_33122 * sdiv_up64(m_27371 *
                                                       iota32_arg_27794,
                                                       sext_i32_i64(num_threads_44848))) -
                (int64_t) 1;
        
        if (slt64(gtid_33073, m_27371) && slt64(gtid_33081, iota32_arg_27794)) {
            if (!(orig_group_44900 == (int64_t) 0 || (flat_idx_44899 ==
                                                      (orig_group_44900 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_33122 *
                                                       sdiv_up64(m_27371 *
                                                                 iota32_arg_27794,
                                                                 sext_i32_i64(num_threads_44848))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44899,
                                                                   iota32_arg_27794),
                                                            flat_idx_44899 -
                                                            carry_in_flat_idx_44901)))) {
                float x_33126;
                float x_33127;
                
                x_33126 = ((__global
                            float *) mem_43560)[squot64(carry_in_flat_idx_44901,
                                                        iota32_arg_27794) *
                                                iota32_arg_27794 +
                                                (carry_in_flat_idx_44901 -
                                                 squot64(carry_in_flat_idx_44901,
                                                         iota32_arg_27794) *
                                                 iota32_arg_27794)];
                x_33127 = ((__global float *) mem_43560)[gtid_33073 *
                                                         iota32_arg_27794 +
                                                         gtid_33081];
                
                float defunc_1_op_res_33128;
                
                defunc_1_op_res_33128 = x_33126 + x_33127;
                x_33126 = defunc_1_op_res_33128;
                ((__global float *) mem_43560)[gtid_33073 * iota32_arg_27794 +
                                               gtid_33081] = x_33126;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33122
}
__kernel void mainDetailedzisegmap_29420(__global int *global_failure,
                                         int64_t N_27370, float freq_27375,
                                         int64_t i32_res_27386, __global
                                         unsigned char *mappingindices_mem_42537,
                                         __global unsigned char *mem_42542)
{
    #define segmap_group_sizze_29493 (mainDetailedzisegmap_group_sizze_29423)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43848;
    int32_t local_tid_43849;
    int64_t group_sizze_43852;
    int32_t wave_sizze_43851;
    int32_t group_tid_43850;
    
    global_tid_43848 = get_global_id(0);
    local_tid_43849 = get_local_id(0);
    group_sizze_43852 = get_local_size(0);
    wave_sizze_43851 = LOCKSTEP_WIDTH;
    group_tid_43850 = get_group_id(0);
    
    int32_t phys_tid_29420;
    
    phys_tid_29420 = global_tid_43848;
    
    int64_t gtid_29418;
    
    gtid_29418 = squot64(sext_i32_i64(group_tid_43850) *
                         segmap_group_sizze_29493 +
                         sext_i32_i64(local_tid_43849), N_27370);
    
    int64_t gtid_29419;
    
    gtid_29419 = sext_i32_i64(group_tid_43850) * segmap_group_sizze_29493 +
        sext_i32_i64(local_tid_43849) - squot64(sext_i32_i64(group_tid_43850) *
                                                segmap_group_sizze_29493 +
                                                sext_i32_i64(local_tid_43849),
                                                N_27370) * N_27370;
    if (slt64(gtid_29418, i32_res_27386) && slt64(gtid_29419, N_27370)) {
        int32_t index_primexp_40529 = sext_i64_i32(gtid_29418);
        bool index_primexp_40526 = index_primexp_40529 == 0;
        float defunc_0_f_res_29499;
        
        if (index_primexp_40526) {
            defunc_0_f_res_29499 = 1.0F;
        } else {
            int32_t x_29498 = ((__global
                                int32_t *) mappingindices_mem_42537)[gtid_29419];
            bool cond_29500 = index_primexp_40529 == 1;
            float defunc_0_f_res_f_res_29501;
            
            if (cond_29500) {
                float i32_res_29502 = sitofp_i32_f32(x_29498);
                
                defunc_0_f_res_f_res_29501 = i32_res_29502;
            } else {
                int32_t r32_arg_29503 = sdiv32(index_primexp_40529, 2);
                float i32_res_29504 = sitofp_i32_f32(r32_arg_29503);
                float i32_res_29505 = sitofp_i32_f32(x_29498);
                float x_29506 = 6.2831855F * i32_res_29504;
                float x_29507 = i32_res_29505 * x_29506;
                float angle_29508 = x_29507 / freq_27375;
                int32_t x_29509 = smod32(index_primexp_40529, 2);
                bool cond_29510 = x_29509 == 0;
                float defunc_0_f_res_f_res_f_res_29511;
                
                if (cond_29510) {
                    float sin_res_29512;
                    
                    sin_res_29512 = futrts_sin32(angle_29508);
                    defunc_0_f_res_f_res_f_res_29511 = sin_res_29512;
                } else {
                    float cos_res_29513;
                    
                    cos_res_29513 = futrts_cos32(angle_29508);
                    defunc_0_f_res_f_res_f_res_29511 = cos_res_29513;
                }
                defunc_0_f_res_f_res_29501 = defunc_0_f_res_f_res_f_res_29511;
            }
            defunc_0_f_res_29499 = defunc_0_f_res_f_res_29501;
        }
        ((__global float *) mem_42542)[gtid_29418 * N_27370 + gtid_29419] =
            defunc_0_f_res_29499;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29493
}
__kernel void mainDetailedzisegmap_29598(__global int *global_failure,
                                         int64_t N_27370, float freq_27375,
                                         int64_t i32_res_27386, __global
                                         unsigned char *mappingindices_mem_42537,
                                         __global unsigned char *mem_42546)
{
    #define segmap_group_sizze_29667 (mainDetailedzisegmap_group_sizze_29601)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43853;
    int32_t local_tid_43854;
    int64_t group_sizze_43857;
    int32_t wave_sizze_43856;
    int32_t group_tid_43855;
    
    global_tid_43853 = get_global_id(0);
    local_tid_43854 = get_local_id(0);
    group_sizze_43857 = get_local_size(0);
    wave_sizze_43856 = LOCKSTEP_WIDTH;
    group_tid_43855 = get_group_id(0);
    
    int32_t phys_tid_29598;
    
    phys_tid_29598 = global_tid_43853;
    
    int64_t gtid_29596;
    
    gtid_29596 = squot64(sext_i32_i64(group_tid_43855) *
                         segmap_group_sizze_29667 +
                         sext_i32_i64(local_tid_43854), N_27370);
    
    int64_t gtid_29597;
    
    gtid_29597 = sext_i32_i64(group_tid_43855) * segmap_group_sizze_29667 +
        sext_i32_i64(local_tid_43854) - squot64(sext_i32_i64(group_tid_43855) *
                                                segmap_group_sizze_29667 +
                                                sext_i32_i64(local_tid_43854),
                                                N_27370) * N_27370;
    if (slt64(gtid_29596, i32_res_27386) && slt64(gtid_29597, N_27370)) {
        int32_t index_primexp_40538 = sext_i64_i32(gtid_29596);
        bool index_primexp_40535 = index_primexp_40538 == 0;
        float defunc_0_f_res_29673;
        
        if (index_primexp_40535) {
            defunc_0_f_res_29673 = 1.0F;
        } else {
            int32_t x_29672 = ((__global
                                int32_t *) mappingindices_mem_42537)[gtid_29597];
            int32_t i_29674 = add32(1, index_primexp_40538);
            int32_t r32_arg_29675 = sdiv32(i_29674, 2);
            float i32_res_29676 = sitofp_i32_f32(r32_arg_29675);
            float i32_res_29677 = sitofp_i32_f32(x_29672);
            float x_29678 = 6.2831855F * i32_res_29676;
            float x_29679 = i32_res_29677 * x_29678;
            float angle_29680 = x_29679 / freq_27375;
            int32_t x_29681 = smod32(i_29674, 2);
            bool cond_29682 = x_29681 == 0;
            float defunc_0_f_res_f_res_29683;
            
            if (cond_29682) {
                float sin_res_29684;
                
                sin_res_29684 = futrts_sin32(angle_29680);
                defunc_0_f_res_f_res_29683 = sin_res_29684;
            } else {
                float cos_res_29685;
                
                cos_res_29685 = futrts_cos32(angle_29680);
                defunc_0_f_res_f_res_29683 = cos_res_29685;
            }
            defunc_0_f_res_29673 = defunc_0_f_res_f_res_29683;
        }
        ((__global float *) mem_42546)[gtid_29596 * N_27370 + gtid_29597] =
            defunc_0_f_res_29673;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29667
}
__kernel void mainDetailedzisegmap_29726(__global int *global_failure,
                                         int64_t N_27370, int64_t i32_res_27386,
                                         float i32_res_27451, __global
                                         unsigned char *mem_42550, __global
                                         unsigned char *mem_42554)
{
    #define segmap_group_sizze_29750 (mainDetailedzisegmap_group_sizze_29729)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43858;
    int32_t local_tid_43859;
    int64_t group_sizze_43862;
    int32_t wave_sizze_43861;
    int32_t group_tid_43860;
    
    global_tid_43858 = get_global_id(0);
    local_tid_43859 = get_local_id(0);
    group_sizze_43862 = get_local_size(0);
    wave_sizze_43861 = LOCKSTEP_WIDTH;
    group_tid_43860 = get_group_id(0);
    
    int32_t phys_tid_29726;
    
    phys_tid_29726 = global_tid_43858;
    
    int64_t gtid_29724;
    
    gtid_29724 = squot64(sext_i32_i64(group_tid_43860) *
                         segmap_group_sizze_29750 +
                         sext_i32_i64(local_tid_43859), i32_res_27386);
    
    int64_t gtid_29725;
    
    gtid_29725 = sext_i32_i64(group_tid_43860) * segmap_group_sizze_29750 +
        sext_i32_i64(local_tid_43859) - squot64(sext_i32_i64(group_tid_43860) *
                                                segmap_group_sizze_29750 +
                                                sext_i32_i64(local_tid_43859),
                                                i32_res_27386) * i32_res_27386;
    if (slt64(gtid_29724, N_27370) && slt64(gtid_29725, i32_res_27386)) {
        float x_29753 = ((__global float *) mem_42550)[gtid_29724 *
                                                       i32_res_27386 +
                                                       gtid_29725];
        float defunc_0_f_res_29754 = i32_res_27451 + x_29753;
        
        ((__global float *) mem_42554)[gtid_29724 * i32_res_27386 +
                                       gtid_29725] = defunc_0_f_res_29754;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29750
}
__kernel void mainDetailedzisegmap_29759(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int32_t n_27374, int32_t k2p2zq_27384,
                                         int64_t i32_res_27386,
                                         int64_t num_groups_29784, __global
                                         unsigned char *binop_p_mem_42547,
                                         __global unsigned char *mem_42554,
                                         __global unsigned char *mem_42557,
                                         __global unsigned char *mem_42561,
                                         __global unsigned char *mem_42603)
{
    #define segmap_group_sizze_29783 (mainDetailedzisegmap_group_sizze_29761)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43866;
    int32_t local_tid_43867;
    int64_t group_sizze_43870;
    int32_t wave_sizze_43869;
    int32_t group_tid_43868;
    
    global_tid_43866 = get_global_id(0);
    local_tid_43867 = get_local_id(0);
    group_sizze_43870 = get_local_size(0);
    wave_sizze_43869 = LOCKSTEP_WIDTH;
    group_tid_43868 = get_group_id(0);
    
    int32_t phys_tid_29759;
    
    phys_tid_29759 = global_tid_43866;
    
    int32_t phys_group_id_43871;
    
    phys_group_id_43871 = get_group_id(0);
    for (int32_t i_43872 = 0; i_43872 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371, segmap_group_sizze_29783)) -
                   phys_group_id_43871, sext_i64_i32(num_groups_29784));
         i_43872++) {
        int32_t virt_group_id_43873 = phys_group_id_43871 + i_43872 *
                sext_i64_i32(num_groups_29784);
        int64_t gtid_29758 = sext_i32_i64(virt_group_id_43873) *
                segmap_group_sizze_29783 + sext_i32_i64(local_tid_43867);
        
        if (slt64(gtid_29758, m_27371)) {
            for (int32_t i_42517 = 0; i_42517 < k2p2zq_27384; i_42517++) {
                int64_t i_42446 = sext_i32_i64(i_42517);
                
                for (int32_t i_42516 = 0; i_42516 < k2p2zq_27384; i_42516++) {
                    int64_t i_42450 = sext_i32_i64(i_42516);
                    float defunc_2_reduce_res_29792;
                    float redout_42452 = 0.0F;
                    
                    for (int32_t i_42515 = 0; i_42515 < n_27374; i_42515++) {
                        int64_t i_42453 = sext_i32_i64(i_42515);
                        float x_29796 = ((__global float *) mem_42557)[i_42453 *
                                                                       m_27371 +
                                                                       gtid_29758];
                        float x_29797 = ((__global
                                          float *) binop_p_mem_42547)[i_42446 *
                                                                      N_27370 +
                                                                      i_42453];
                        float x_29798 = ((__global float *) mem_42554)[i_42453 *
                                                                       i32_res_27386 +
                                                                       i_42450];
                        float x_29799 = x_29797 * x_29798;
                        bool isnan_res_29800;
                        
                        isnan_res_29800 = futrts_isnan32(x_29796);
                        
                        float y_29801;
                        
                        if (isnan_res_29800) {
                            y_29801 = 0.0F;
                        } else {
                            y_29801 = 1.0F;
                        }
                        
                        float defunc_2_f_res_29802 = x_29799 * y_29801;
                        float defunc_1_op_res_29795 = defunc_2_f_res_29802 +
                              redout_42452;
                        float redout_tmp_43876 = defunc_1_op_res_29795;
                        
                        redout_42452 = redout_tmp_43876;
                    }
                    defunc_2_reduce_res_29792 = redout_42452;
                    ((__global float *) mem_42561)[phys_tid_29759 + (i_42446 *
                                                                     (num_groups_29784 *
                                                                      segmap_group_sizze_29783 *
                                                                      i32_res_27386) +
                                                                     i_42450 *
                                                                     (num_groups_29784 *
                                                                      segmap_group_sizze_29783))] =
                        defunc_2_reduce_res_29792;
                }
            }
            for (int64_t i_43877 = 0; i_43877 < i32_res_27386; i_43877++) {
                for (int64_t i_43878 = 0; i_43878 < i32_res_27386; i_43878++) {
                    ((__global float *) mem_42603)[i_43877 * (m_27371 *
                                                              i32_res_27386) +
                                                   i_43878 * m_27371 +
                                                   gtid_29758] = ((__global
                                                                   float *) mem_42561)[phys_tid_29759 +
                                                                                       (i_43877 *
                                                                                        (num_groups_29784 *
                                                                                         segmap_group_sizze_29783 *
                                                                                         i32_res_27386) +
                                                                                        i_43878 *
                                                                                        (num_groups_29784 *
                                                                                         segmap_group_sizze_29783))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29783
}
__kernel void mainDetailedzisegmap_29805(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int32_t n_27374, int32_t k2p2zq_27384,
                                         int64_t i32_res_27386,
                                         int64_t num_groups_29961, __global
                                         unsigned char *images_mem_42538,
                                         __global unsigned char *mem_42550,
                                         __global unsigned char *mem_42554,
                                         __global unsigned char *mem_42606,
                                         __global unsigned char *mem_42622)
{
    #define segmap_group_sizze_29960 (mainDetailedzisegmap_group_sizze_29808)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43879;
    int32_t local_tid_43880;
    int64_t group_sizze_43883;
    int32_t wave_sizze_43882;
    int32_t group_tid_43881;
    
    global_tid_43879 = get_global_id(0);
    local_tid_43880 = get_local_id(0);
    group_sizze_43883 = get_local_size(0);
    wave_sizze_43882 = LOCKSTEP_WIDTH;
    group_tid_43881 = get_group_id(0);
    
    int32_t phys_tid_29805;
    
    phys_tid_29805 = global_tid_43879;
    
    int32_t phys_group_id_43884;
    
    phys_group_id_43884 = get_group_id(0);
    for (int32_t i_43885 = 0; i_43885 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371 * i32_res_27386,
                                          segmap_group_sizze_29960)) -
                   phys_group_id_43884, sext_i64_i32(num_groups_29961));
         i_43885++) {
        int32_t virt_group_id_43886 = phys_group_id_43884 + i_43885 *
                sext_i64_i32(num_groups_29961);
        int64_t gtid_29803 = squot64(sext_i32_i64(virt_group_id_43886) *
                                     segmap_group_sizze_29960 +
                                     sext_i32_i64(local_tid_43880),
                                     i32_res_27386);
        int64_t gtid_29804 = sext_i32_i64(virt_group_id_43886) *
                segmap_group_sizze_29960 + sext_i32_i64(local_tid_43880) -
                squot64(sext_i32_i64(virt_group_id_43886) *
                        segmap_group_sizze_29960 +
                        sext_i32_i64(local_tid_43880), i32_res_27386) *
                i32_res_27386;
        
        if (slt64(gtid_29803, m_27371) && slt64(gtid_29804, i32_res_27386)) {
            for (int32_t i_42519 = 0; i_42519 < k2p2zq_27384; i_42519++) {
                int64_t i_42456 = sext_i32_i64(i_42519);
                float defunc_2_reduce_res_29972;
                float redout_42458 = 0.0F;
                
                for (int32_t i_42518 = 0; i_42518 < n_27374; i_42518++) {
                    int64_t i_42459 = sext_i32_i64(i_42518);
                    float x_29976 = ((__global
                                      float *) images_mem_42538)[gtid_29803 *
                                                                 N_27370 +
                                                                 i_42459];
                    float x_29977 = ((__global float *) mem_42550)[i_42459 *
                                                                   i32_res_27386 +
                                                                   gtid_29804];
                    float x_29978 = ((__global float *) mem_42554)[i_42459 *
                                                                   i32_res_27386 +
                                                                   i_42456];
                    float x_29979 = x_29977 * x_29978;
                    bool isnan_res_29980;
                    
                    isnan_res_29980 = futrts_isnan32(x_29976);
                    
                    float y_29981;
                    
                    if (isnan_res_29980) {
                        y_29981 = 0.0F;
                    } else {
                        y_29981 = 1.0F;
                    }
                    
                    float defunc_2_f_res_29982 = x_29979 * y_29981;
                    float defunc_1_op_res_29975 = defunc_2_f_res_29982 +
                          redout_42458;
                    float redout_tmp_43888 = defunc_1_op_res_29975;
                    
                    redout_42458 = redout_tmp_43888;
                }
                defunc_2_reduce_res_29972 = redout_42458;
                ((__global float *) mem_42606)[phys_tid_29805 + i_42456 *
                                               (num_groups_29961 *
                                                segmap_group_sizze_29960)] =
                    defunc_2_reduce_res_29972;
            }
            for (int64_t i_43889 = 0; i_43889 < i32_res_27386; i_43889++) {
                ((__global float *) mem_42622)[i_43889 * (i32_res_27386 *
                                                          m_27371) +
                                               gtid_29803 * i32_res_27386 +
                                               gtid_29804] = ((__global
                                                               float *) mem_42606)[phys_tid_29805 +
                                                                                   i_43889 *
                                                                                   (num_groups_29961 *
                                                                                    segmap_group_sizze_29960)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29960
}
__kernel void mainDetailedzisegmap_30289(__global int *global_failure,
                                         int64_t m_27371, int64_t i32_res_27386,
                                         int64_t i32_res_27519,
                                         int64_t i32_res_27534, int64_t x_27535,
                                         int64_t j_m_i_27538,
                                         int64_t gauss_jordan_res_r_ixfn_42774,
                                         int64_t gauss_jordan_res_r_ixfn_42775,
                                         int64_t gauss_jordan_res_r_ixfn_42777,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_42779,
                                         __global unsigned char *mem_42784)
{
    #define segmap_group_sizze_30840 (mainDetailedzisegmap_group_sizze_30293)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44046;
    int32_t local_tid_44047;
    int64_t group_sizze_44050;
    int32_t wave_sizze_44049;
    int32_t group_tid_44048;
    
    global_tid_44046 = get_global_id(0);
    local_tid_44047 = get_local_id(0);
    group_sizze_44050 = get_local_size(0);
    wave_sizze_44049 = LOCKSTEP_WIDTH;
    group_tid_44048 = get_group_id(0);
    
    int32_t phys_tid_30289;
    
    phys_tid_30289 = global_tid_44046;
    
    int64_t gtid_30286;
    
    gtid_30286 = squot64(sext_i32_i64(group_tid_44048) *
                         segmap_group_sizze_30840 +
                         sext_i32_i64(local_tid_44047), i32_res_27386 *
                         j_m_i_27538);
    
    int64_t gtid_slice_30284;
    
    gtid_slice_30284 = squot64(sext_i32_i64(group_tid_44048) *
                               segmap_group_sizze_30840 +
                               sext_i32_i64(local_tid_44047) -
                               squot64(sext_i32_i64(group_tid_44048) *
                                       segmap_group_sizze_30840 +
                                       sext_i32_i64(local_tid_44047),
                                       i32_res_27386 * j_m_i_27538) *
                               (i32_res_27386 * j_m_i_27538), j_m_i_27538);
    
    int64_t gtid_slice_30285;
    
    gtid_slice_30285 = sext_i32_i64(group_tid_44048) *
        segmap_group_sizze_30840 + sext_i32_i64(local_tid_44047) -
        squot64(sext_i32_i64(group_tid_44048) * segmap_group_sizze_30840 +
                sext_i32_i64(local_tid_44047), i32_res_27386 * j_m_i_27538) *
        (i32_res_27386 * j_m_i_27538) - squot64(sext_i32_i64(group_tid_44048) *
                                                segmap_group_sizze_30840 +
                                                sext_i32_i64(local_tid_44047) -
                                                squot64(sext_i32_i64(group_tid_44048) *
                                                        segmap_group_sizze_30840 +
                                                        sext_i32_i64(local_tid_44047),
                                                        i32_res_27386 *
                                                        j_m_i_27538) *
                                                (i32_res_27386 * j_m_i_27538),
                                                j_m_i_27538) * j_m_i_27538;
    if ((slt64(gtid_30286, m_27371) && slt64(gtid_slice_30284,
                                             i32_res_27386)) &&
        slt64(gtid_slice_30285, j_m_i_27538)) {
        int64_t slice_30844 = i32_res_27386 + gtid_slice_30285;
        int64_t binop_x_40619 = x_27535 * gtid_30286;
        int64_t binop_y_40620 = i32_res_27534 * gtid_slice_30284;
        int64_t binop_x_40621 = binop_x_40619 + binop_y_40620;
        int64_t binop_x_40622 = slice_30844 + binop_x_40621;
        int64_t new_index_40623 = squot64(binop_x_40622, i32_res_27519);
        int64_t binop_y_40635 = i32_res_27519 * new_index_40623;
        int64_t new_index_40636 = binop_x_40622 - binop_y_40635;
        float v_30845 = ((__global
                          float *) gauss_jordan_res_r_mem_42779)[gauss_jordan_res_r_ixfn_42774 +
                                                                 (new_index_40623 *
                                                                  gauss_jordan_res_r_ixfn_42775 +
                                                                  new_index_40636 *
                                                                  gauss_jordan_res_r_ixfn_42777)];
        
        ((__global float *) mem_42784)[gtid_30286 * (j_m_i_27538 *
                                                     i32_res_27386) +
                                       gtid_slice_30284 * j_m_i_27538 +
                                       gtid_slice_30285] = v_30845;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30840
}
__kernel void mainDetailedzisegmap_30455(__global int *global_failure,
                                         int64_t m_27371, int64_t i32_res_27519,
                                         int64_t ctx_param_ext_42737,
                                         int64_t ctx_param_ext_42738,
                                         int64_t ctx_param_ext_42740, __global
                                         unsigned char *mem_param_42742,
                                         __global unsigned char *mem_42762)
{
    #define segmap_group_sizze_30828 (mainDetailedzisegmap_group_sizze_30458)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44040;
    int32_t local_tid_44041;
    int64_t group_sizze_44044;
    int32_t wave_sizze_44043;
    int32_t group_tid_44042;
    
    global_tid_44040 = get_global_id(0);
    local_tid_44041 = get_local_id(0);
    group_sizze_44044 = get_local_size(0);
    wave_sizze_44043 = LOCKSTEP_WIDTH;
    group_tid_44042 = get_group_id(0);
    
    int32_t phys_tid_30455;
    
    phys_tid_30455 = global_tid_44040;
    
    int64_t gtid_30453;
    
    gtid_30453 = squot64(sext_i32_i64(group_tid_44042) *
                         segmap_group_sizze_30828 +
                         sext_i32_i64(local_tid_44041), i32_res_27519);
    
    int64_t gtid_30454;
    
    gtid_30454 = sext_i32_i64(group_tid_44042) * segmap_group_sizze_30828 +
        sext_i32_i64(local_tid_44041) - squot64(sext_i32_i64(group_tid_44042) *
                                                segmap_group_sizze_30828 +
                                                sext_i32_i64(local_tid_44041),
                                                i32_res_27519) * i32_res_27519;
    if (slt64(gtid_30453, m_27371) && slt64(gtid_30454, i32_res_27519)) {
        float write_value_30834 = ((__global float *) mem_42762)[gtid_30453 *
                                                                 i32_res_27519 +
                                                                 gtid_30454];
        
        if ((sle64((int64_t) 0, gtid_30453) && slt64(gtid_30453, m_27371)) &&
            (sle64((int64_t) 0, gtid_30454) && slt64(gtid_30454,
                                                     i32_res_27519))) {
            ((__global float *) mem_param_42742)[ctx_param_ext_42737 +
                                                 (gtid_30453 *
                                                  ctx_param_ext_42738 +
                                                  gtid_30454 *
                                                  ctx_param_ext_42740)] =
                write_value_30834;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30828
}
__kernel void mainDetailedzisegmap_30509(__global int *global_failure,
                                         int64_t m_27371, int32_t k2p2zq_27384,
                                         int32_t m_27517, int64_t i32_res_27519,
                                         int32_t i_30731, int64_t i32_res_30733,
                                         int64_t ctx_param_ext_42737,
                                         int64_t ctx_param_ext_42738,
                                         int64_t ctx_param_ext_42740, __global
                                         unsigned char *mem_param_42742,
                                         __global unsigned char *mem_42758,
                                         __global unsigned char *mem_42762)
{
    #define segmap_group_sizze_30794 (mainDetailedzisegmap_group_sizze_30512)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44035;
    int32_t local_tid_44036;
    int64_t group_sizze_44039;
    int32_t wave_sizze_44038;
    int32_t group_tid_44037;
    
    global_tid_44035 = get_global_id(0);
    local_tid_44036 = get_local_id(0);
    group_sizze_44039 = get_local_size(0);
    wave_sizze_44038 = LOCKSTEP_WIDTH;
    group_tid_44037 = get_group_id(0);
    
    int32_t phys_tid_30509;
    
    phys_tid_30509 = global_tid_44035;
    
    int64_t gtid_30507;
    
    gtid_30507 = squot64(sext_i32_i64(group_tid_44037) *
                         segmap_group_sizze_30794 +
                         sext_i32_i64(local_tid_44036), i32_res_27519);
    
    int64_t gtid_30508;
    
    gtid_30508 = sext_i32_i64(group_tid_44037) * segmap_group_sizze_30794 +
        sext_i32_i64(local_tid_44036) - squot64(sext_i32_i64(group_tid_44037) *
                                                segmap_group_sizze_30794 +
                                                sext_i32_i64(local_tid_44036),
                                                i32_res_27519) * i32_res_27519;
    if (slt64(gtid_30507, m_27371) && slt64(gtid_30508, i32_res_27519)) {
        bool cond_30799 = ((__global bool *) mem_42758)[gtid_30507];
        int32_t defunc_0_f_res_30801 = sext_i64_i32(gtid_30508);
        int32_t defunc_0_f_res_30802 = sdiv32(defunc_0_f_res_30801, m_27517);
        int32_t defunc_0_f_res_30803 = smod32(defunc_0_f_res_30801, m_27517);
        float defunc_0_f_res_30804;
        
        if (cond_30799) {
            int32_t x_30805 = mul32(m_27517, defunc_0_f_res_30802);
            int32_t i32_arg_30806 = add32(defunc_0_f_res_30803, x_30805);
            int64_t i32_res_30807 = sext_i32_i64(i32_arg_30806);
            float defunc_0_f_res_t_res_30808 = ((__global
                                                 float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                           (gtid_30507 *
                                                                            ctx_param_ext_42738 +
                                                                            i32_res_30807 *
                                                                            ctx_param_ext_42740)];
            
            defunc_0_f_res_30804 = defunc_0_f_res_t_res_30808;
        } else {
            float v1_30798 = ((__global
                               float *) mem_param_42742)[ctx_param_ext_42737 +
                                                         (gtid_30507 *
                                                          ctx_param_ext_42738 +
                                                          i32_res_30733 *
                                                          ctx_param_ext_42740)];
            int64_t i32_res_30809 = sext_i32_i64(defunc_0_f_res_30803);
            float x_30810 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_30507 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_30809 *
                                                         ctx_param_ext_42740)];
            float x_30811 = x_30810 / v1_30798;
            int32_t y_30812 = sub32(k2p2zq_27384, 1);
            bool cond_30813 = slt32(defunc_0_f_res_30802, y_30812);
            float defunc_0_f_res_f_res_30814;
            
            if (cond_30813) {
                int32_t x_30815 = add32(1, defunc_0_f_res_30802);
                int32_t x_30816 = mul32(m_27517, x_30815);
                int32_t i32_arg_30817 = add32(defunc_0_f_res_30803, x_30816);
                int64_t i32_res_30818 = sext_i32_i64(i32_arg_30817);
                float x_30819 = ((__global
                                  float *) mem_param_42742)[ctx_param_ext_42737 +
                                                            (gtid_30507 *
                                                             ctx_param_ext_42738 +
                                                             i32_res_30818 *
                                                             ctx_param_ext_42740)];
                int32_t i32_arg_30820 = add32(i_30731, x_30816);
                int64_t i32_res_30821 = sext_i32_i64(i32_arg_30820);
                float x_30822 = ((__global
                                  float *) mem_param_42742)[ctx_param_ext_42737 +
                                                            (gtid_30507 *
                                                             ctx_param_ext_42738 +
                                                             i32_res_30821 *
                                                             ctx_param_ext_42740)];
                float y_30823 = x_30811 * x_30822;
                float defunc_0_f_res_f_res_t_res_30824 = x_30819 - y_30823;
                
                defunc_0_f_res_f_res_30814 = defunc_0_f_res_f_res_t_res_30824;
            } else {
                defunc_0_f_res_f_res_30814 = x_30811;
            }
            defunc_0_f_res_30804 = defunc_0_f_res_f_res_30814;
        }
        ((__global float *) mem_42762)[gtid_30507 * i32_res_27519 +
                                       gtid_30508] = defunc_0_f_res_30804;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30794
}
__kernel void mainDetailedzisegmap_30577(__global int *global_failure,
                                         int64_t m_27371, int64_t i32_res_30733,
                                         int64_t ctx_param_ext_42737,
                                         int64_t ctx_param_ext_42738,
                                         int64_t ctx_param_ext_42740, __global
                                         unsigned char *mem_param_42742,
                                         __global unsigned char *mem_42758)
{
    #define segmap_group_sizze_30778 (mainDetailedzisegmap_group_sizze_30579)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44030;
    int32_t local_tid_44031;
    int64_t group_sizze_44034;
    int32_t wave_sizze_44033;
    int32_t group_tid_44032;
    
    global_tid_44030 = get_global_id(0);
    local_tid_44031 = get_local_id(0);
    group_sizze_44034 = get_local_size(0);
    wave_sizze_44033 = LOCKSTEP_WIDTH;
    group_tid_44032 = get_group_id(0);
    
    int32_t phys_tid_30577;
    
    phys_tid_30577 = global_tid_44030;
    
    int64_t gtid_30576;
    
    gtid_30576 = sext_i32_i64(group_tid_44032) * segmap_group_sizze_30778 +
        sext_i32_i64(local_tid_44031);
    if (slt64(gtid_30576, m_27371)) {
        float v1_30783 = ((__global
                           float *) mem_param_42742)[ctx_param_ext_42737 +
                                                     (gtid_30576 *
                                                      ctx_param_ext_42738 +
                                                      i32_res_30733 *
                                                      ctx_param_ext_42740)];
        bool cond_30784 = v1_30783 == 0.0F;
        
        ((__global bool *) mem_42758)[gtid_30576] = cond_30784;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30778
}
__kernel void mainDetailedzisegmap_30670(__global int *global_failure,
                                         int64_t m_27371, int32_t k2p2zq_27384,
                                         int64_t i32_res_27386, int32_t m_27517,
                                         int64_t i32_res_27519, __global
                                         unsigned char *defunc_3_map_res_mem_42706,
                                         __global unsigned char *mem_42734)
{
    #define segmap_group_sizze_30714 (mainDetailedzisegmap_group_sizze_30673)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43997;
    int32_t local_tid_43998;
    int64_t group_sizze_44001;
    int32_t wave_sizze_44000;
    int32_t group_tid_43999;
    
    global_tid_43997 = get_global_id(0);
    local_tid_43998 = get_local_id(0);
    group_sizze_44001 = get_local_size(0);
    wave_sizze_44000 = LOCKSTEP_WIDTH;
    group_tid_43999 = get_group_id(0);
    
    int32_t phys_tid_30670;
    
    phys_tid_30670 = global_tid_43997;
    
    int64_t gtid_30668;
    
    gtid_30668 = squot64(sext_i32_i64(group_tid_43999) *
                         segmap_group_sizze_30714 +
                         sext_i32_i64(local_tid_43998), i32_res_27519);
    
    int64_t gtid_30669;
    
    gtid_30669 = sext_i32_i64(group_tid_43999) * segmap_group_sizze_30714 +
        sext_i32_i64(local_tid_43998) - squot64(sext_i32_i64(group_tid_43999) *
                                                segmap_group_sizze_30714 +
                                                sext_i32_i64(local_tid_43998),
                                                i32_res_27519) * i32_res_27519;
    if (slt64(gtid_30668, m_27371) && slt64(gtid_30669, i32_res_27519)) {
        int32_t index_primexp_40550 = sext_i64_i32(gtid_30669);
        int32_t defunc_0_f_res_30719 = sdiv32(index_primexp_40550, m_27517);
        int32_t defunc_0_f_res_30720 = smod32(index_primexp_40550, m_27517);
        bool cond_30721 = slt32(defunc_0_f_res_30720, k2p2zq_27384);
        float defunc_0_f_res_30722;
        
        if (cond_30721) {
            int64_t i_30723 = sext_i32_i64(defunc_0_f_res_30719);
            int64_t j_30724 = sext_i32_i64(defunc_0_f_res_30720);
            float defunc_0_f_res_t_res_30725 = ((__global
                                                 float *) defunc_3_map_res_mem_42706)[gtid_30668 *
                                                                                      (i32_res_27386 *
                                                                                       i32_res_27386) +
                                                                                      i_30723 *
                                                                                      i32_res_27386 +
                                                                                      j_30724];
            
            defunc_0_f_res_30722 = defunc_0_f_res_t_res_30725;
        } else {
            int32_t y_30726 = add32(k2p2zq_27384, defunc_0_f_res_30719);
            bool cond_30727 = defunc_0_f_res_30720 == y_30726;
            float defunc_0_f_res_f_res_30728;
            
            if (cond_30727) {
                defunc_0_f_res_f_res_30728 = 1.0F;
            } else {
                defunc_0_f_res_f_res_30728 = 0.0F;
            }
            defunc_0_f_res_30722 = defunc_0_f_res_f_res_30728;
        }
        ((__global float *) mem_42734)[gtid_30668 * i32_res_27519 +
                                       gtid_30669] = defunc_0_f_res_30722;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30714
}
__kernel void mainDetailedzisegmap_30851(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int32_t n_27374, int32_t k2p2zq_27384,
                                         int64_t i32_res_27386,
                                         int64_t num_groups_30872, __global
                                         unsigned char *binop_p_mem_42547,
                                         __global unsigned char *mem_42789,
                                         __global unsigned char *mem_42792,
                                         __global unsigned char *mem_42807)
{
    #define segmap_group_sizze_30871 (mainDetailedzisegmap_group_sizze_30853)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44054;
    int32_t local_tid_44055;
    int64_t group_sizze_44058;
    int32_t wave_sizze_44057;
    int32_t group_tid_44056;
    
    global_tid_44054 = get_global_id(0);
    local_tid_44055 = get_local_id(0);
    group_sizze_44058 = get_local_size(0);
    wave_sizze_44057 = LOCKSTEP_WIDTH;
    group_tid_44056 = get_group_id(0);
    
    int32_t phys_tid_30851;
    
    phys_tid_30851 = global_tid_44054;
    
    int32_t phys_group_id_44059;
    
    phys_group_id_44059 = get_group_id(0);
    for (int32_t i_44060 = 0; i_44060 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371, segmap_group_sizze_30871)) -
                   phys_group_id_44059, sext_i64_i32(num_groups_30872));
         i_44060++) {
        int32_t virt_group_id_44061 = phys_group_id_44059 + i_44060 *
                sext_i64_i32(num_groups_30872);
        int64_t gtid_30850 = sext_i32_i64(virt_group_id_44061) *
                segmap_group_sizze_30871 + sext_i32_i64(local_tid_44055);
        
        if (slt64(gtid_30850, m_27371)) {
            for (int32_t i_42521 = 0; i_42521 < k2p2zq_27384; i_42521++) {
                int64_t i_42462 = sext_i32_i64(i_42521);
                float defunc_2_reduce_res_30878;
                float redout_42464 = 0.0F;
                
                for (int32_t i_42520 = 0; i_42520 < n_27374; i_42520++) {
                    int64_t i_42465 = sext_i32_i64(i_42520);
                    float x_30883 = ((__global float *) mem_42789)[i_42465 *
                                                                   m_27371 +
                                                                   gtid_30850];
                    bool isnan_res_30884;
                    
                    isnan_res_30884 = futrts_isnan32(x_30883);
                    
                    float defunc_1_f_res_30885;
                    
                    if (isnan_res_30884) {
                        defunc_1_f_res_30885 = 0.0F;
                    } else {
                        float x_30882 = ((__global
                                          float *) binop_p_mem_42547)[i_42462 *
                                                                      N_27370 +
                                                                      i_42465];
                        float defunc_1_f_res_f_res_30886 = x_30882 * x_30883;
                        
                        defunc_1_f_res_30885 = defunc_1_f_res_f_res_30886;
                    }
                    
                    float defunc_1_op_res_30881 = defunc_1_f_res_30885 +
                          redout_42464;
                    float redout_tmp_44063 = defunc_1_op_res_30881;
                    
                    redout_42464 = redout_tmp_44063;
                }
                defunc_2_reduce_res_30878 = redout_42464;
                ((__global float *) mem_42792)[phys_tid_30851 + i_42462 *
                                               (num_groups_30872 *
                                                segmap_group_sizze_30871)] =
                    defunc_2_reduce_res_30878;
            }
            for (int64_t i_44064 = 0; i_44064 < i32_res_27386; i_44064++) {
                ((__global float *) mem_42807)[i_44064 * m_27371 + gtid_30850] =
                    ((__global float *) mem_42792)[phys_tid_30851 + i_44064 *
                                                   (num_groups_30872 *
                                                    segmap_group_sizze_30871)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30871
}
__kernel void mainDetailedzisegmap_30992(__global int *global_failure,
                                         int64_t m_27371, int32_t k2p2zq_27384,
                                         int64_t i32_res_27386,
                                         int64_t num_groups_31012, __global
                                         unsigned char *mem_43011, __global
                                         unsigned char *mem_43014, __global
                                         unsigned char *mem_43017, __global
                                         unsigned char *mem_43032)
{
    #define segmap_group_sizze_31011 (mainDetailedzisegmap_group_sizze_30994)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44186;
    int32_t local_tid_44187;
    int64_t group_sizze_44190;
    int32_t wave_sizze_44189;
    int32_t group_tid_44188;
    
    global_tid_44186 = get_global_id(0);
    local_tid_44187 = get_local_id(0);
    group_sizze_44190 = get_local_size(0);
    wave_sizze_44189 = LOCKSTEP_WIDTH;
    group_tid_44188 = get_group_id(0);
    
    int32_t phys_tid_30992;
    
    phys_tid_30992 = global_tid_44186;
    
    int32_t phys_group_id_44191;
    
    phys_group_id_44191 = get_group_id(0);
    for (int32_t i_44192 = 0; i_44192 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371, segmap_group_sizze_31011)) -
                   phys_group_id_44191, sext_i64_i32(num_groups_31012));
         i_44192++) {
        int32_t virt_group_id_44193 = phys_group_id_44191 + i_44192 *
                sext_i64_i32(num_groups_31012);
        int64_t gtid_30991 = sext_i32_i64(virt_group_id_44193) *
                segmap_group_sizze_31011 + sext_i32_i64(local_tid_44187);
        
        if (slt64(gtid_30991, m_27371)) {
            for (int32_t i_42523 = 0; i_42523 < k2p2zq_27384; i_42523++) {
                int64_t i_42468 = sext_i32_i64(i_42523);
                float defunc_0_f_res_31019;
                float redout_42470 = 0.0F;
                
                for (int32_t i_42522 = 0; i_42522 < k2p2zq_27384; i_42522++) {
                    int64_t i_42471 = sext_i32_i64(i_42522);
                    float x_31023 = ((__global float *) mem_43014)[i_42471 *
                                                                   m_27371 +
                                                                   gtid_30991];
                    float x_31024 = ((__global float *) mem_43011)[i_42468 *
                                                                   (m_27371 *
                                                                    i32_res_27386) +
                                                                   i_42471 *
                                                                   m_27371 +
                                                                   gtid_30991];
                    float defunc_1_f_res_31025 = x_31023 * x_31024;
                    float defunc_1_op_res_31022 = defunc_1_f_res_31025 +
                          redout_42470;
                    float redout_tmp_44195 = defunc_1_op_res_31022;
                    
                    redout_42470 = redout_tmp_44195;
                }
                defunc_0_f_res_31019 = redout_42470;
                ((__global float *) mem_43017)[phys_tid_30992 + i_42468 *
                                               (num_groups_31012 *
                                                segmap_group_sizze_31011)] =
                    defunc_0_f_res_31019;
            }
            for (int64_t i_44196 = 0; i_44196 < i32_res_27386; i_44196++) {
                ((__global float *) mem_43032)[i_44196 * m_27371 + gtid_30991] =
                    ((__global float *) mem_43017)[phys_tid_30992 + i_44196 *
                                                   (num_groups_31012 *
                                                    segmap_group_sizze_31011)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31011
}
__kernel void mainDetailedzisegmap_31124(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int32_t k2p2zq_27384,
                                         int64_t i32_res_27386,
                                         int64_t num_groups_31143, __global
                                         unsigned char *mem_42554, __global
                                         unsigned char *mem_43076, __global
                                         unsigned char *mem_43079, __global
                                         unsigned char *mem_43094)
{
    #define segmap_group_sizze_31142 (mainDetailedzisegmap_group_sizze_31126)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44274;
    int32_t local_tid_44275;
    int64_t group_sizze_44278;
    int32_t wave_sizze_44277;
    int32_t group_tid_44276;
    
    global_tid_44274 = get_global_id(0);
    local_tid_44275 = get_local_id(0);
    group_sizze_44278 = get_local_size(0);
    wave_sizze_44277 = LOCKSTEP_WIDTH;
    group_tid_44276 = get_group_id(0);
    
    int32_t phys_tid_31124;
    
    phys_tid_31124 = global_tid_44274;
    
    int32_t phys_group_id_44279;
    
    phys_group_id_44279 = get_group_id(0);
    for (int32_t i_44280 = 0; i_44280 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371, segmap_group_sizze_31142)) -
                   phys_group_id_44279, sext_i64_i32(num_groups_31143));
         i_44280++) {
        int32_t virt_group_id_44281 = phys_group_id_44279 + i_44280 *
                sext_i64_i32(num_groups_31143);
        int64_t gtid_31123 = sext_i32_i64(virt_group_id_44281) *
                segmap_group_sizze_31142 + sext_i32_i64(local_tid_44275);
        
        if (slt64(gtid_31123, m_27371)) {
            for (int64_t i_42478 = 0; i_42478 < N_27370; i_42478++) {
                float defunc_0_f_res_31149;
                float redout_42480 = 0.0F;
                
                for (int32_t i_42526 = 0; i_42526 < k2p2zq_27384; i_42526++) {
                    int64_t i_42481 = sext_i32_i64(i_42526);
                    float x_31153 = ((__global float *) mem_43076)[i_42481 *
                                                                   m_27371 +
                                                                   gtid_31123];
                    float x_31154 = ((__global float *) mem_42554)[i_42478 *
                                                                   i32_res_27386 +
                                                                   i_42481];
                    float defunc_1_f_res_31155 = x_31153 * x_31154;
                    float defunc_1_op_res_31152 = defunc_1_f_res_31155 +
                          redout_42480;
                    float redout_tmp_44283 = defunc_1_op_res_31152;
                    
                    redout_42480 = redout_tmp_44283;
                }
                defunc_0_f_res_31149 = redout_42480;
                ((__global float *) mem_43079)[phys_tid_31124 + i_42478 *
                                               (num_groups_31143 *
                                                segmap_group_sizze_31142)] =
                    defunc_0_f_res_31149;
            }
            for (int64_t i_44284 = 0; i_44284 < N_27370; i_44284++) {
                ((__global float *) mem_43094)[i_44284 * m_27371 + gtid_31123] =
                    ((__global float *) mem_43079)[phys_tid_31124 + i_44284 *
                                                   (num_groups_31143 *
                                                    segmap_group_sizze_31142)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31142
}
__kernel void mainDetailedzisegmap_31404(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         __global unsigned char *mem_43320,
                                         __global unsigned char *mem_43323,
                                         __global unsigned char *mem_43329,
                                         __global unsigned char *mem_43332)
{
    #define segmap_group_sizze_31570 (mainDetailedzisegmap_group_sizze_31407)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44501;
    int32_t local_tid_44502;
    int64_t group_sizze_44505;
    int32_t wave_sizze_44504;
    int32_t group_tid_44503;
    
    global_tid_44501 = get_global_id(0);
    local_tid_44502 = get_local_id(0);
    group_sizze_44505 = get_local_size(0);
    wave_sizze_44504 = LOCKSTEP_WIDTH;
    group_tid_44503 = get_group_id(0);
    
    int32_t phys_tid_31404;
    
    phys_tid_31404 = global_tid_44501;
    
    int64_t gtid_31402;
    
    gtid_31402 = squot64(sext_i32_i64(group_tid_44503) *
                         segmap_group_sizze_31570 +
                         sext_i32_i64(local_tid_44502), N_27370);
    
    int64_t gtid_31403;
    
    gtid_31403 = sext_i32_i64(group_tid_44503) * segmap_group_sizze_31570 +
        sext_i32_i64(local_tid_44502) - squot64(sext_i32_i64(group_tid_44503) *
                                                segmap_group_sizze_31570 +
                                                sext_i32_i64(local_tid_44502),
                                                N_27370) * N_27370;
    if (slt64(gtid_31402, m_27371) && slt64(gtid_31403, N_27370)) {
        float x_31578 = ((__global float *) mem_43323)[gtid_31402 * N_27370 +
                                                       gtid_31403];
        int32_t index_primexp_40566 = sext_i64_i32(gtid_31403);
        bool isnan_res_31581;
        
        isnan_res_31581 = futrts_isnan32(x_31578);
        
        bool defunc_0_p_res_31582 = !isnan_res_31581;
        int64_t defunc_1_f_res_31583;
        
        if (defunc_0_p_res_31582) {
            int64_t x_31579 = ((__global int64_t *) mem_43320)[gtid_31402 *
                                                               N_27370 +
                                                               gtid_31403];
            int64_t defunc_1_f_res_t_res_31584 = sub64(x_31579, (int64_t) 1);
            
            defunc_1_f_res_31583 = defunc_1_f_res_t_res_31584;
        } else {
            defunc_1_f_res_31583 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_31402) && slt64(gtid_31402, m_27371)) &&
            (sle64((int64_t) 0, defunc_1_f_res_31583) &&
             slt64(defunc_1_f_res_31583, N_27370))) {
            ((__global int32_t *) mem_43332)[gtid_31402 * N_27370 +
                                             defunc_1_f_res_31583] =
                index_primexp_40566;
        }
        if ((sle64((int64_t) 0, gtid_31402) && slt64(gtid_31402, m_27371)) &&
            (sle64((int64_t) 0, defunc_1_f_res_31583) &&
             slt64(defunc_1_f_res_31583, N_27370))) {
            ((__global float *) mem_43329)[gtid_31402 * N_27370 +
                                           defunc_1_f_res_31583] = x_31578;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31570
}
__kernel void mainDetailedzisegmap_31480(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int64_t i_27646, __global
                                         unsigned char *mem_43320, __global
                                         unsigned char *mem_43326)
{
    #define segmap_group_sizze_31534 (mainDetailedzisegmap_group_sizze_31482)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44478;
    int32_t local_tid_44479;
    int64_t group_sizze_44482;
    int32_t wave_sizze_44481;
    int32_t group_tid_44480;
    
    global_tid_44478 = get_global_id(0);
    local_tid_44479 = get_local_id(0);
    group_sizze_44482 = get_local_size(0);
    wave_sizze_44481 = LOCKSTEP_WIDTH;
    group_tid_44480 = get_group_id(0);
    
    int32_t phys_tid_31480;
    
    phys_tid_31480 = global_tid_44478;
    
    int64_t gtid_31479;
    
    gtid_31479 = sext_i32_i64(group_tid_44480) * segmap_group_sizze_31534 +
        sext_i32_i64(local_tid_44479);
    if (slt64(gtid_31479, m_27371)) {
        int64_t last_res_31538 = ((__global int64_t *) mem_43320)[gtid_31479 *
                                                                  N_27370 +
                                                                  i_27646];
        int32_t defunc_0_f_res_31539 = sext_i64_i32(last_res_31538);
        
        ((__global int32_t *) mem_43326)[gtid_31479] = defunc_0_f_res_31539;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31534
}
__kernel void mainDetailedzisegmap_31731(__global int *global_failure,
                                         int64_t m_27371, float hfrac_27376,
                                         int32_t k2p2_27382, __global
                                         unsigned char *mem_43389, __global
                                         unsigned char *mem_43392, __global
                                         unsigned char *mem_43395, __global
                                         unsigned char *mem_43397)
{
    #define segmap_group_sizze_31816 (mainDetailedzisegmap_group_sizze_31733)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44654;
    int32_t local_tid_44655;
    int64_t group_sizze_44658;
    int32_t wave_sizze_44657;
    int32_t group_tid_44656;
    
    global_tid_44654 = get_global_id(0);
    local_tid_44655 = get_local_id(0);
    group_sizze_44658 = get_local_size(0);
    wave_sizze_44657 = LOCKSTEP_WIDTH;
    group_tid_44656 = get_group_id(0);
    
    int32_t phys_tid_31731;
    
    phys_tid_31731 = global_tid_44654;
    
    int64_t gtid_31730;
    
    gtid_31730 = sext_i32_i64(group_tid_44656) * segmap_group_sizze_31816 +
        sext_i32_i64(local_tid_44655);
    if (slt64(gtid_31730, m_27371)) {
        int32_t defunc_0_f_res_31820 = ((__global
                                         int32_t *) mem_43389)[gtid_31730];
        float defunc_0_f_res_31821 = ((__global float *) mem_43392)[gtid_31730];
        int32_t r32_arg_31822 = sub32(defunc_0_f_res_31820, k2p2_27382);
        float i32_res_31823 = sitofp_i32_f32(r32_arg_31822);
        float sqrt_arg_31824 = defunc_0_f_res_31821 / i32_res_31823;
        float sqrt_res_31825;
        
        sqrt_res_31825 = futrts_sqrt32(sqrt_arg_31824);
        
        float i32_res_31826 = sitofp_i32_f32(defunc_0_f_res_31820);
        float t32_arg_31827 = hfrac_27376 * i32_res_31826;
        int32_t f32_res_31828 = fptosi_f32_i32(t32_arg_31827);
        
        ((__global int32_t *) mem_43395)[gtid_31730] = f32_res_31828;
        ((__global float *) mem_43397)[gtid_31730] = sqrt_res_31825;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31816
}
__kernel void mainDetailedzisegmap_32001(__global int *global_failure,
                                         float lam_27377,
                                         int64_t iota32_arg_27766,
                                         int32_t x_27771, float i32_res_27779,
                                         __global
                                         unsigned char *mappingindices_mem_42537,
                                         __global unsigned char *mem_43439)
{
    #define segmap_group_sizze_32020 (mainDetailedzisegmap_group_sizze_32003)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44764;
    int32_t local_tid_44765;
    int64_t group_sizze_44768;
    int32_t wave_sizze_44767;
    int32_t group_tid_44766;
    
    global_tid_44764 = get_global_id(0);
    local_tid_44765 = get_local_id(0);
    group_sizze_44768 = get_local_size(0);
    wave_sizze_44767 = LOCKSTEP_WIDTH;
    group_tid_44766 = get_group_id(0);
    
    int32_t phys_tid_32001;
    
    phys_tid_32001 = global_tid_44764;
    
    int64_t gtid_32000;
    
    gtid_32000 = sext_i32_i64(group_tid_44766) * segmap_group_sizze_32020 +
        sext_i32_i64(local_tid_44765);
    if (slt64(gtid_32000, iota32_arg_27766)) {
        int32_t defunc_0_f_res_32024 = sext_i64_i32(gtid_32000);
        int32_t t_32025 = add32(x_27771, defunc_0_f_res_32024);
        int32_t i_32026 = sub32(t_32025, 1);
        int64_t i_32027 = sext_i32_i64(i_32026);
        int32_t time_32028 = ((__global
                               int32_t *) mappingindices_mem_42537)[i_32027];
        float i32_res_32029 = sitofp_i32_f32(time_32028);
        float logplus_arg_32030 = i32_res_32029 / i32_res_27779;
        bool cond_32031 = 2.7182817F < logplus_arg_32030;
        float logplus_res_32032;
        
        if (cond_32031) {
            float log_res_32033;
            
            log_res_32033 = futrts_log32(logplus_arg_32030);
            logplus_res_32032 = log_res_32033;
        } else {
            logplus_res_32032 = 1.0F;
        }
        
        float sqrt_res_32034;
        
        sqrt_res_32034 = futrts_sqrt32(logplus_res_32032);
        
        float defunc_0_f_res_32035 = lam_27377 * sqrt_res_32034;
        
        ((__global float *) mem_43439)[gtid_32000] = defunc_0_f_res_32035;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32020
}
__kernel void mainDetailedzisegmap_32281(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t m_27371,
                                         int64_t iota32_arg_27766,
                                         int64_t iota32_arg_27794,
                                         int64_t distance_27804,
                                         int64_t segmap_usable_groups_32514,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43334,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global unsigned char *mem_43442,
                                         __global unsigned char *mem_43449,
                                         __global unsigned char *mem_43460,
                                         __global unsigned char *mem_43480)
{
    #define segmap_group_sizze_32513 (mainDetailedzisegmap_group_sizze_32283)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44779;
    int32_t local_tid_44780;
    int64_t group_sizze_44783;
    int32_t wave_sizze_44782;
    int32_t group_tid_44781;
    
    global_tid_44779 = get_global_id(0);
    local_tid_44780 = get_local_id(0);
    group_sizze_44783 = get_local_size(0);
    wave_sizze_44782 = LOCKSTEP_WIDTH;
    group_tid_44781 = get_group_id(0);
    
    int32_t phys_tid_32281;
    
    phys_tid_32281 = global_tid_44779;
    
    int64_t gtid_32280;
    
    gtid_32280 = sext_i32_i64(group_tid_44781) * segmap_group_sizze_32513 +
        sext_i32_i64(local_tid_44780);
    if (slt64(gtid_32280, m_27371)) {
        int32_t x_32516 = ((__global
                            int32_t *) defunc_4_map_res_mem_43334)[gtid_32280];
        int32_t x_32517 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_32280];
        int32_t y_32518 = ((__global int32_t *) mem_43442)[gtid_32280];
        
        for (int64_t i_44784 = 0; i_44784 < iota32_arg_27794; i_44784++) {
            ((__global float *) mem_43460)[phys_tid_32281 + i_44784 *
                                           (segmap_usable_groups_32514 *
                                            segmap_group_sizze_32513)] =
                ((__global float *) mem_43449)[gtid_32280 + i_44784 * m_27371];
        }
        for (int64_t i_32521 = 0; i_32521 < distance_27804; i_32521++) {
            int64_t index_primexp_32523 = add64((int64_t) 1, i_32521);
            bool cond_32524 = slt64((int64_t) 0, index_primexp_32523);
            bool loop_cond_32525;
            
            if (cond_32524) {
                bool x_32526 = sle64((int64_t) 0, index_primexp_32523);
                bool y_32527 = slt64(index_primexp_32523, iota32_arg_27794);
                bool bounds_check_32528 = x_32526 && y_32527;
                bool index_certs_32529;
                
                if (!bounds_check_32528) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                            -1) {
                            global_failure_args[0] = index_primexp_32523;
                            global_failure_args[1] = iota32_arg_27794;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_32530 = ((__global
                                                       float *) mem_43460)[phys_tid_32281 +
                                                                           index_primexp_32523 *
                                                                           (segmap_usable_groups_32514 *
                                                                            segmap_group_sizze_32513)];
                bool y_32531 = slt64(i_32521, iota32_arg_27794);
                bool index_certs_32532;
                
                if (!y_32531) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                            -1) {
                            global_failure_args[0] = i_32521;
                            global_failure_args[1] = iota32_arg_27794;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_32533 = ((__global
                                                       float *) mem_43460)[phys_tid_32281 +
                                                                           i_32521 *
                                                                           (segmap_usable_groups_32514 *
                                                                            segmap_group_sizze_32513)];
                bool defunc_1_zlze_res_32534 = defunc_1_lifted_gt_arg_32533 <=
                     defunc_2_lifted_gt_arg_32530;
                bool defunc_2_lifted_gt_res_32535 = !defunc_1_zlze_res_32534;
                
                loop_cond_32525 = defunc_2_lifted_gt_res_32535;
            } else {
                loop_cond_32525 = 0;
            }
            
            bool xszq_32536;
            int64_t xszq_32537;
            bool loop_while_32539;
            int64_t j_32540;
            
            loop_while_32539 = loop_cond_32525;
            j_32540 = index_primexp_32523;
            while (loop_while_32539) {
                int64_t loopres_32542 = sub64(j_32540, (int64_t) 1);
                bool x_32543 = sle64((int64_t) 0, j_32540);
                bool y_32544 = slt64(j_32540, iota32_arg_27794);
                bool bounds_check_32545 = x_32543 && y_32544;
                bool index_certs_32546;
                
                if (!bounds_check_32545) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                            -1) {
                            global_failure_args[0] = j_32540;
                            global_failure_args[1] = iota32_arg_27794;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32547 = ((__global
                                         float *) mem_43460)[phys_tid_32281 +
                                                             j_32540 *
                                                             (segmap_usable_groups_32514 *
                                                              segmap_group_sizze_32513)];
                bool x_32548 = sle64((int64_t) 0, loopres_32542);
                bool y_32549 = slt64(loopres_32542, iota32_arg_27794);
                bool bounds_check_32550 = x_32548 && y_32549;
                bool index_certs_32551;
                
                if (!bounds_check_32550) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                            -1) {
                            global_failure_args[0] = loopres_32542;
                            global_failure_args[1] = iota32_arg_27794;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32552 = ((__global
                                         float *) mem_43460)[phys_tid_32281 +
                                                             loopres_32542 *
                                                             (segmap_usable_groups_32514 *
                                                              segmap_group_sizze_32513)];
                
                ((__global float *) mem_43460)[phys_tid_32281 + j_32540 *
                                               (segmap_usable_groups_32514 *
                                                segmap_group_sizze_32513)] =
                    copy_arg_32552;
                ((__global float *) mem_43460)[phys_tid_32281 + loopres_32542 *
                                               (segmap_usable_groups_32514 *
                                                segmap_group_sizze_32513)] =
                    copy_arg_32547;
                
                bool cond_32555 = slt64((int64_t) 0, loopres_32542);
                bool loop_cond_32556;
                
                if (cond_32555) {
                    bool index_certs_32557;
                    
                    if (!bounds_check_32550) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          6) == -1) {
                                global_failure_args[0] = loopres_32542;
                                global_failure_args[1] = iota32_arg_27794;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_32558 = ((__global
                                                           float *) mem_43460)[phys_tid_32281 +
                                                                               loopres_32542 *
                                                                               (segmap_usable_groups_32514 *
                                                                                segmap_group_sizze_32513)];
                    int64_t i_32559 = sub64(loopres_32542, (int64_t) 1);
                    bool x_32560 = sle64((int64_t) 0, i_32559);
                    bool y_32561 = slt64(i_32559, iota32_arg_27794);
                    bool bounds_check_32562 = x_32560 && y_32561;
                    bool index_certs_32563;
                    
                    if (!bounds_check_32562) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          7) == -1) {
                                global_failure_args[0] = i_32559;
                                global_failure_args[1] = iota32_arg_27794;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_32564 = ((__global
                                                           float *) mem_43460)[phys_tid_32281 +
                                                                               i_32559 *
                                                                               (segmap_usable_groups_32514 *
                                                                                segmap_group_sizze_32513)];
                    bool defunc_1_zlze_res_32565 =
                         defunc_1_lifted_gt_arg_32564 <=
                         defunc_2_lifted_gt_arg_32558;
                    bool defunc_2_lifted_gt_res_32566 =
                         !defunc_1_zlze_res_32565;
                    
                    loop_cond_32556 = defunc_2_lifted_gt_res_32566;
                } else {
                    loop_cond_32556 = 0;
                }
                
                bool loop_while_tmp_44786 = loop_cond_32556;
                int64_t j_tmp_44787 = loopres_32542;
                
                loop_while_32539 = loop_while_tmp_44786;
                j_32540 = j_tmp_44787;
            }
            xszq_32536 = loop_while_32539;
            xszq_32537 = j_32540;
        }
        
        int32_t i_32567 = sdiv32(y_32518, 2);
        int32_t j_32568 = sub32(i_32567, 1);
        bool cond_32569 = x_32516 == x_32517;
        float defunc_0_f_res_32570;
        
        if (cond_32569) {
            defunc_0_f_res_32570 = 0.0F;
        } else {
            int32_t x_32571 = smod32(y_32518, 2);
            bool cond_32572 = x_32571 == 0;
            float defunc_0_f_res_f_res_32573;
            
            if (cond_32572) {
                int64_t j_32574 = sext_i32_i64(j_32568);
                bool x_32575 = sle64((int64_t) 0, j_32574);
                bool y_32576 = slt64(j_32574, iota32_arg_27766);
                bool bounds_check_32577 = x_32575 && y_32576;
                bool index_certs_32578;
                
                if (!bounds_check_32577) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                            -1) {
                            global_failure_args[0] = j_32574;
                            global_failure_args[1] = iota32_arg_27766;
                            ;
                        }
                        return;
                    }
                }
                
                float x_32579 = ((__global float *) mem_43460)[phys_tid_32281 +
                                                               j_32574 *
                                                               (segmap_usable_groups_32514 *
                                                                segmap_group_sizze_32513)];
                int64_t i_32580 = sext_i32_i64(i_32567);
                bool x_32581 = sle64((int64_t) 0, i_32580);
                bool y_32582 = slt64(i_32580, iota32_arg_27766);
                bool bounds_check_32583 = x_32581 && y_32582;
                bool index_certs_32584;
                
                if (!bounds_check_32583) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                            -1) {
                            global_failure_args[0] = i_32580;
                            global_failure_args[1] = iota32_arg_27766;
                            ;
                        }
                        return;
                    }
                }
                
                float y_32585 = ((__global float *) mem_43460)[phys_tid_32281 +
                                                               i_32580 *
                                                               (segmap_usable_groups_32514 *
                                                                segmap_group_sizze_32513)];
                float x_32586 = x_32579 + y_32585;
                float defunc_0_f_res_f_res_t_res_32587 = x_32586 / 2.0F;
                
                defunc_0_f_res_f_res_32573 = defunc_0_f_res_f_res_t_res_32587;
            } else {
                int64_t i_32588 = sext_i32_i64(i_32567);
                bool x_32589 = sle64((int64_t) 0, i_32588);
                bool y_32590 = slt64(i_32588, iota32_arg_27766);
                bool bounds_check_32591 = x_32589 && y_32590;
                bool index_certs_32592;
                
                if (!bounds_check_32591) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                            -1) {
                            global_failure_args[0] = i_32588;
                            global_failure_args[1] = iota32_arg_27766;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_32593 = ((__global
                                                           float *) mem_43460)[phys_tid_32281 +
                                                                               i_32588 *
                                                                               (segmap_usable_groups_32514 *
                                                                                segmap_group_sizze_32513)];
                
                defunc_0_f_res_f_res_32573 = defunc_0_f_res_f_res_f_res_32593;
            }
            defunc_0_f_res_32570 = defunc_0_f_res_f_res_32573;
        }
        ((__global float *) mem_43480)[gtid_32280] = defunc_0_f_res_32570;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32513
}
__kernel void mainDetailedzisegmap_32402(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27370, int64_t m_27371,
                                         int64_t iota32_arg_27794, __global
                                         unsigned char *defunc_4_map_res_mem_43335,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global unsigned char *mem_43442,
                                         __global unsigned char *mem_43446)
{
    #define segmap_group_sizze_32484 (mainDetailedzisegmap_group_sizze_32405)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44774;
    int32_t local_tid_44775;
    int64_t group_sizze_44778;
    int32_t wave_sizze_44777;
    int32_t group_tid_44776;
    
    global_tid_44774 = get_global_id(0);
    local_tid_44775 = get_local_id(0);
    group_sizze_44778 = get_local_size(0);
    wave_sizze_44777 = LOCKSTEP_WIDTH;
    group_tid_44776 = get_group_id(0);
    
    int32_t phys_tid_32402;
    
    phys_tid_32402 = global_tid_44774;
    
    int64_t gtid_32400;
    
    gtid_32400 = squot64(sext_i32_i64(group_tid_44776) *
                         segmap_group_sizze_32484 +
                         sext_i32_i64(local_tid_44775), iota32_arg_27794);
    
    int64_t gtid_32401;
    
    gtid_32401 = sext_i32_i64(group_tid_44776) * segmap_group_sizze_32484 +
        sext_i32_i64(local_tid_44775) - squot64(sext_i32_i64(group_tid_44776) *
                                                segmap_group_sizze_32484 +
                                                sext_i32_i64(local_tid_44775),
                                                iota32_arg_27794) *
        iota32_arg_27794;
    if (slt64(gtid_32400, m_27371) && slt64(gtid_32401, iota32_arg_27794)) {
        int32_t x_32487 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_32400];
        int32_t y_32489 = ((__global int32_t *) mem_43442)[gtid_32400];
        int32_t index_primexp_40586 = sext_i64_i32(gtid_32401);
        bool cond_32491 = slt32(index_primexp_40586, y_32489);
        bool cond_32492;
        
        if (cond_32491) {
            int32_t i_32493 = add32(x_32487, index_primexp_40586);
            int64_t i_32494 = sext_i32_i64(i_32493);
            bool x_32495 = sle64((int64_t) 0, i_32494);
            bool y_32496 = slt64(i_32494, N_27370);
            bool bounds_check_32497 = x_32495 && y_32496;
            bool index_certs_32498;
            
            if (!bounds_check_32497) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 0) ==
                        -1) {
                        global_failure_args[0] = i_32494;
                        global_failure_args[1] = N_27370;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_32499 = ((__global
                                      float *) defunc_4_map_res_mem_43335)[gtid_32400 *
                                                                           N_27370 +
                                                                           i_32494];
            bool isnan_res_32500;
            
            isnan_res_32500 = futrts_isnan32(isnan_arg_32499);
            
            bool cond_t_res_32501 = !isnan_res_32500;
            
            cond_32492 = cond_t_res_32501;
        } else {
            cond_32492 = 0;
        }
        
        float defunc_0_f_res_32502;
        
        if (cond_32492) {
            int32_t i_32503 = add32(x_32487, index_primexp_40586);
            int64_t i_32504 = sext_i32_i64(i_32503);
            bool x_32505 = sle64((int64_t) 0, i_32504);
            bool y_32506 = slt64(i_32504, N_27370);
            bool bounds_check_32507 = x_32505 && y_32506;
            bool index_certs_32508;
            
            if (!bounds_check_32507) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 1) ==
                        -1) {
                        global_failure_args[0] = i_32504;
                        global_failure_args[1] = N_27370;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_32509 = ((__global
                                                 float *) defunc_4_map_res_mem_43335)[gtid_32400 *
                                                                                      N_27370 +
                                                                                      i_32504];
            
            defunc_0_f_res_32502 = defunc_0_f_res_t_res_32509;
        } else {
            defunc_0_f_res_32502 = INFINITY;
        }
        ((__global float *) mem_43446)[gtid_32400 * iota32_arg_27794 +
                                       gtid_32401] = defunc_0_f_res_32502;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32484
}
__kernel void mainDetailedzisegmap_32460(__global int *global_failure,
                                         int64_t m_27371, __global
                                         unsigned char *defunc_4_map_res_mem_43334,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global unsigned char *mem_43442)
{
    #define segmap_group_sizze_32469 (mainDetailedzisegmap_group_sizze_32462)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44769;
    int32_t local_tid_44770;
    int64_t group_sizze_44773;
    int32_t wave_sizze_44772;
    int32_t group_tid_44771;
    
    global_tid_44769 = get_global_id(0);
    local_tid_44770 = get_local_id(0);
    group_sizze_44773 = get_local_size(0);
    wave_sizze_44772 = LOCKSTEP_WIDTH;
    group_tid_44771 = get_group_id(0);
    
    int32_t phys_tid_32460;
    
    phys_tid_32460 = global_tid_44769;
    
    int64_t gtid_32459;
    
    gtid_32459 = sext_i32_i64(group_tid_44771) * segmap_group_sizze_32469 +
        sext_i32_i64(local_tid_44770);
    if (slt64(gtid_32459, m_27371)) {
        int32_t x_32472 = ((__global
                            int32_t *) defunc_4_map_res_mem_43334)[gtid_32459];
        int32_t x_32473 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_32459];
        int32_t y_32474 = sub32(x_32472, x_32473);
        
        ((__global int32_t *) mem_43442)[gtid_32459] = y_32474;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32469
}
__kernel void mainDetailedzisegmap_32638(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int32_t n_27374,
                                         int64_t iota32_arg_27766,
                                         int64_t iota32_arg_27794,
                                         int64_t num_groups_32737, __global
                                         unsigned char *defunc_4_map_res_mem_43334,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43335,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43336,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43401,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43403,
                                         __global
                                         unsigned char *defunc_0_f_res_mem_43436,
                                         __global unsigned char *mem_43439,
                                         __global unsigned char *mem_43483,
                                         __global unsigned char *mem_43497,
                                         __global unsigned char *mem_43511,
                                         __global unsigned char *mem_43526,
                                         __global unsigned char *mem_43529,
                                         __global unsigned char *mem_43531,
                                         __global unsigned char *mem_43533)
{
    #define segmap_group_sizze_32736 (mainDetailedzisegmap_group_sizze_32640)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44793;
    int32_t local_tid_44794;
    int64_t group_sizze_44797;
    int32_t wave_sizze_44796;
    int32_t group_tid_44795;
    
    global_tid_44793 = get_global_id(0);
    local_tid_44794 = get_local_id(0);
    group_sizze_44797 = get_local_size(0);
    wave_sizze_44796 = LOCKSTEP_WIDTH;
    group_tid_44795 = get_group_id(0);
    
    int32_t phys_tid_32638;
    
    phys_tid_32638 = global_tid_44793;
    
    int32_t phys_group_id_44798;
    
    phys_group_id_44798 = get_group_id(0);
    for (int32_t i_44799 = 0; i_44799 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371, segmap_group_sizze_32736)) -
                   phys_group_id_44798, sext_i64_i32(num_groups_32737));
         i_44799++) {
        int32_t virt_group_id_44800 = phys_group_id_44798 + i_44799 *
                sext_i64_i32(num_groups_32737);
        int64_t gtid_32637 = sext_i32_i64(virt_group_id_44800) *
                segmap_group_sizze_32736 + sext_i32_i64(local_tid_44794);
        
        if (slt64(gtid_32637, m_27371)) {
            int32_t x_32743 = ((__global
                                int32_t *) defunc_4_map_res_mem_43334)[gtid_32637];
            int32_t x_32744 = ((__global
                                int32_t *) defunc_3_map_res_mem_43402)[gtid_32637];
            float x_32745 = ((__global
                              float *) defunc_3_map_res_mem_43403)[gtid_32637];
            int32_t x_32746 = ((__global
                                int32_t *) defunc_3_map_res_mem_43401)[gtid_32637];
            float x_32747 = ((__global
                              float *) defunc_0_f_res_mem_43436)[gtid_32637];
            int32_t y_32750 = sub32(x_32743, x_32744);
            float discard_42497;
            float scanacc_42493 = 0.0F;
            
            for (int64_t i_42495 = 0; i_42495 < iota32_arg_27794; i_42495++) {
                int32_t index_primexp_42528 = sext_i64_i32(i_42495);
                bool cond_32756 = sle32(y_32750, index_primexp_42528);
                float defunc_0_f_res_32757;
                
                if (cond_32756) {
                    defunc_0_f_res_32757 = 0.0F;
                } else {
                    bool cond_32758 = index_primexp_42528 == 0;
                    float defunc_0_f_res_f_res_32759;
                    
                    if (cond_32758) {
                        defunc_0_f_res_f_res_32759 = x_32747;
                    } else {
                        int32_t i_32760 = add32(x_32744, index_primexp_42528);
                        int64_t i_32761 = sext_i32_i64(i_32760);
                        float x_32762 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_32637 *
                                                                               N_27370 +
                                                                               i_32761];
                        int32_t x_32763 = sub32(x_32744, x_32746);
                        int32_t i_32764 = add32(x_32763, index_primexp_42528);
                        int64_t i_32765 = sext_i32_i64(i_32764);
                        float y_32766 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_32637 *
                                                                               N_27370 +
                                                                               i_32765];
                        float defunc_0_f_res_f_res_f_res_32767 = x_32762 -
                              y_32766;
                        
                        defunc_0_f_res_f_res_32759 =
                            defunc_0_f_res_f_res_f_res_32767;
                    }
                    defunc_0_f_res_32757 = defunc_0_f_res_f_res_32759;
                }
                
                float defunc_1_op_res_32754 = defunc_0_f_res_32757 +
                      scanacc_42493;
                
                ((__global float *) mem_43483)[phys_tid_32638 + i_42495 *
                                               (num_groups_32737 *
                                                segmap_group_sizze_32736)] =
                    defunc_1_op_res_32754;
                
                float scanacc_tmp_44801 = defunc_1_op_res_32754;
                
                scanacc_42493 = scanacc_tmp_44801;
            }
            discard_42497 = scanacc_42493;
            
            float i32_res_32768 = sitofp_i32_f32(x_32744);
            float sqrt_res_32769;
            
            sqrt_res_32769 = futrts_sqrt32(i32_res_32768);
            
            float y_32770 = x_32745 * sqrt_res_32769;
            bool defunc_0_f_res_32772;
            int32_t defunc_0_f_res_32773;
            float defunc_0_f_res_32774;
            bool redout_42499;
            int32_t redout_42500;
            float redout_42501;
            
            redout_42499 = 0;
            redout_42500 = -1;
            redout_42501 = 0.0F;
            for (int64_t i_42503 = 0; i_42503 < iota32_arg_27766; i_42503++) {
                float x_32790 = ((__global float *) mem_43483)[phys_tid_32638 +
                                                               i_42503 *
                                                               (num_groups_32737 *
                                                                segmap_group_sizze_32736)];
                float x_32791 = ((__global float *) mem_43439)[i_42503];
                int32_t index_primexp_42529 = sext_i64_i32(i_42503);
                int32_t x_32792 = index_primexp_42529;
                float defunc_0_f_res_32793 = x_32790 / y_32770;
                bool cond_32794 = slt32(index_primexp_42529, y_32750);
                bool isnan_res_32795;
                
                isnan_res_32795 = futrts_isnan32(defunc_0_f_res_32793);
                
                bool cond_t_res_32796 = !isnan_res_32795;
                bool x_32797 = cond_32794 && cond_t_res_32796;
                float abs_res_32798 = (float) fabs(defunc_0_f_res_32793);
                bool defunc_2_f_res_t_res_32799 = x_32791 < abs_res_32798;
                bool x_32800 = x_32797 && defunc_2_f_res_t_res_32799;
                float defunc_1_f_res_32801;
                
                if (cond_32794) {
                    defunc_1_f_res_32801 = defunc_0_f_res_32793;
                } else {
                    defunc_1_f_res_32801 = 0.0F;
                }
                
                bool defunc_1_op_res_32780;
                int32_t defunc_1_op_res_32781;
                
                if (redout_42499) {
                    defunc_1_op_res_32780 = redout_42499;
                    defunc_1_op_res_32781 = redout_42500;
                } else {
                    bool x_32782 = x_32800 && x_32800;
                    bool x_32783 = !x_32800;
                    bool y_32784 = x_32783 && redout_42499;
                    bool defunc_1_op_res_f_res_32785 = x_32782 || y_32784;
                    int32_t defunc_1_op_res_f_res_32786;
                    
                    if (x_32800) {
                        defunc_1_op_res_f_res_32786 = x_32792;
                    } else {
                        defunc_1_op_res_f_res_32786 = redout_42500;
                    }
                    defunc_1_op_res_32780 = defunc_1_op_res_f_res_32785;
                    defunc_1_op_res_32781 = defunc_1_op_res_f_res_32786;
                }
                
                float defunc_1_op_res_32789 = defunc_1_f_res_32801 +
                      redout_42501;
                
                ((__global float *) mem_43497)[phys_tid_32638 + i_42503 *
                                               (num_groups_32737 *
                                                segmap_group_sizze_32736)] =
                    defunc_0_f_res_32793;
                
                bool redout_tmp_44803 = defunc_1_op_res_32780;
                int32_t redout_tmp_44804 = defunc_1_op_res_32781;
                float redout_tmp_44805 = defunc_1_op_res_32789;
                
                redout_42499 = redout_tmp_44803;
                redout_42500 = redout_tmp_44804;
                redout_42501 = redout_tmp_44805;
            }
            defunc_0_f_res_32772 = redout_42499;
            defunc_0_f_res_32773 = redout_42500;
            defunc_0_f_res_32774 = redout_42501;
            
            bool cond_32802 = y_32750 == 0;
            float defunc_0_f_res_32803;
            
            if (cond_32802) {
                defunc_0_f_res_32803 = 0.0F;
            } else {
                float i32_res_32804 = sitofp_i32_f32(y_32750);
                float defunc_0_f_res_f_res_32805 = defunc_0_f_res_32774 /
                      i32_res_32804;
                
                defunc_0_f_res_32803 = defunc_0_f_res_f_res_32805;
            }
            
            bool cond_32806 = !defunc_0_f_res_32772;
            int32_t fst_breakzq_32807;
            
            if (cond_32806) {
                fst_breakzq_32807 = -1;
            } else {
                bool cond_32808 = slt32(defunc_0_f_res_32773, y_32750);
                int32_t adjustValInds_res_32809;
                
                if (cond_32808) {
                    int32_t i_32810 = add32(x_32744, defunc_0_f_res_32773);
                    int64_t i_32811 = sext_i32_i64(i_32810);
                    int32_t x_32812 = ((__global
                                        int32_t *) defunc_4_map_res_mem_43336)[gtid_32637 *
                                                                               N_27370 +
                                                                               i_32811];
                    int32_t adjustValInds_res_t_res_32813 = sub32(x_32812,
                                                                  n_27374);
                    
                    adjustValInds_res_32809 = adjustValInds_res_t_res_32813;
                } else {
                    adjustValInds_res_32809 = -1;
                }
                fst_breakzq_32807 = adjustValInds_res_32809;
            }
            
            bool cond_32814 = sle32(x_32744, 5);
            bool cond_f_res_32815 = sle32(y_32750, 5);
            bool x_32816 = !cond_32814;
            bool y_32817 = cond_f_res_32815 && x_32816;
            bool cond_32818 = cond_32814 || y_32817;
            int32_t fst_breakzq_32819;
            
            if (cond_32818) {
                fst_breakzq_32819 = -2;
            } else {
                fst_breakzq_32819 = fst_breakzq_32807;
            }
            for (int64_t i_44807 = 0; i_44807 < iota32_arg_27794; i_44807++) {
                ((__global float *) mem_43511)[phys_tid_32638 + i_44807 *
                                               (num_groups_32737 *
                                                segmap_group_sizze_32736)] =
                    NAN;
            }
            for (int64_t write_iter_42505 = 0; write_iter_42505 <
                 iota32_arg_27794; write_iter_42505++) {
                int32_t index_primexp_42531 = sext_i64_i32(write_iter_42505);
                bool cond_32825 = slt32(index_primexp_42531, y_32750);
                int32_t defunc_0_f_res_32826;
                
                if (cond_32825) {
                    int32_t i_32827 = add32(x_32744, index_primexp_42531);
                    int64_t i_32828 = sext_i32_i64(i_32827);
                    int32_t x_32829 = ((__global
                                        int32_t *) defunc_4_map_res_mem_43336)[gtid_32637 *
                                                                               N_27370 +
                                                                               i_32828];
                    int32_t defunc_0_f_res_t_res_32830 = sub32(x_32829,
                                                               n_27374);
                    
                    defunc_0_f_res_32826 = defunc_0_f_res_t_res_32830;
                } else {
                    defunc_0_f_res_32826 = -1;
                }
                
                int64_t defunc_0_f_res_32831 =
                        sext_i32_i64(defunc_0_f_res_32826);
                bool less_than_zzero_42509 = slt64(defunc_0_f_res_32831,
                                                   (int64_t) 0);
                bool greater_than_sizze_42510 = sle64(iota32_arg_27794,
                                                      defunc_0_f_res_32831);
                bool outside_bounds_dim_42511 = less_than_zzero_42509 ||
                     greater_than_sizze_42510;
                
                if (!outside_bounds_dim_42511) {
                    for (int64_t i_44809 = 0; i_44809 < (int64_t) 1;
                         i_44809++) {
                        ((__global float *) mem_43511)[phys_tid_32638 +
                                                       (defunc_0_f_res_32831 +
                                                        i_44809) *
                                                       (num_groups_32737 *
                                                        segmap_group_sizze_32736)] =
                            ((__global float *) mem_43497)[phys_tid_32638 +
                                                           num_groups_32737 *
                                                           segmap_group_sizze_32736 *
                                                           write_iter_42505 +
                                                           i_44809 *
                                                           (num_groups_32737 *
                                                            segmap_group_sizze_32736)];
                    }
                }
            }
            for (int64_t i_44810 = 0; i_44810 < iota32_arg_27766; i_44810++) {
                ((__global float *) mem_43526)[i_44810 * m_27371 + gtid_32637] =
                    ((__global float *) mem_43511)[phys_tid_32638 + i_44810 *
                                                   (num_groups_32737 *
                                                    segmap_group_sizze_32736)];
            }
            for (int64_t i_44811 = 0; i_44811 < iota32_arg_27766; i_44811++) {
                ((__global float *) mem_43529)[i_44811 * m_27371 + gtid_32637] =
                    ((__global float *) mem_43497)[phys_tid_32638 + i_44811 *
                                                   (num_groups_32737 *
                                                    segmap_group_sizze_32736)];
            }
            ((__global int32_t *) mem_43531)[gtid_32637] = fst_breakzq_32819;
            ((__global float *) mem_43533)[gtid_32637] = defunc_0_f_res_32803;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32736
}
__kernel void mainDetailedzisegmap_32938(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int32_t n_27374,
                                         int64_t iota32_arg_27766,
                                         int64_t iota32_arg_27794, __global
                                         unsigned char *defunc_4_map_res_mem_43336,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global unsigned char *mem_43556,
                                         __global unsigned char *mem_43573,
                                         __global unsigned char *mem_43581)
{
    #define segmap_group_sizze_33241 (mainDetailedzisegmap_group_sizze_32941)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45010;
    int32_t local_tid_45011;
    int64_t group_sizze_45014;
    int32_t wave_sizze_45013;
    int32_t group_tid_45012;
    
    global_tid_45010 = get_global_id(0);
    local_tid_45011 = get_local_id(0);
    group_sizze_45014 = get_local_size(0);
    wave_sizze_45013 = LOCKSTEP_WIDTH;
    group_tid_45012 = get_group_id(0);
    
    int32_t phys_tid_32938;
    
    phys_tid_32938 = global_tid_45010;
    
    int64_t gtid_32936;
    
    gtid_32936 = squot64(sext_i32_i64(group_tid_45012) *
                         segmap_group_sizze_33241 +
                         sext_i32_i64(local_tid_45011), iota32_arg_27794);
    
    int64_t gtid_32937;
    
    gtid_32937 = sext_i32_i64(group_tid_45012) * segmap_group_sizze_33241 +
        sext_i32_i64(local_tid_45011) - squot64(sext_i32_i64(group_tid_45012) *
                                                segmap_group_sizze_33241 +
                                                sext_i32_i64(local_tid_45011),
                                                iota32_arg_27794) *
        iota32_arg_27794;
    if (slt64(gtid_32936, m_27371) && slt64(gtid_32937, iota32_arg_27794)) {
        int32_t y_33246 = ((__global int32_t *) mem_43556)[gtid_32936];
        int32_t index_primexp_40616 = sext_i64_i32(gtid_32937);
        int64_t binop_x_40604 = iota32_arg_27794 * gtid_32936;
        int64_t binop_x_40605 = gtid_32937 + binop_x_40604;
        int64_t new_index_40606 = squot64(binop_x_40605, iota32_arg_27766);
        int64_t binop_y_40612 = iota32_arg_27766 * new_index_40606;
        int64_t new_index_40613 = binop_x_40605 - binop_y_40612;
        float write_value_33250 = ((__global
                                    float *) mem_43573)[new_index_40606 *
                                                        iota32_arg_27766 +
                                                        new_index_40613];
        bool cond_33251 = slt32(index_primexp_40616, y_33246);
        int32_t defunc_0_f_res_33252;
        
        if (cond_33251) {
            int32_t x_33244 = ((__global
                                int32_t *) defunc_3_map_res_mem_43402)[gtid_32936];
            int32_t i_33253 = add32(x_33244, index_primexp_40616);
            int64_t i_33254 = sext_i32_i64(i_33253);
            int32_t x_33255 = ((__global
                                int32_t *) defunc_4_map_res_mem_43336)[gtid_32936 *
                                                                       N_27370 +
                                                                       i_33254];
            int32_t defunc_0_f_res_t_res_33256 = sub32(x_33255, n_27374);
            
            defunc_0_f_res_33252 = defunc_0_f_res_t_res_33256;
        } else {
            defunc_0_f_res_33252 = -1;
        }
        
        int64_t defunc_0_f_res_33257 = sext_i32_i64(defunc_0_f_res_33252);
        
        if ((sle64((int64_t) 0, gtid_32936) && slt64(gtid_32936, m_27371)) &&
            (sle64((int64_t) 0, defunc_0_f_res_33257) &&
             slt64(defunc_0_f_res_33257, iota32_arg_27794))) {
            ((__global float *) mem_43581)[gtid_32936 * iota32_arg_27794 +
                                           defunc_0_f_res_33257] =
                write_value_33250;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33241
}
__kernel void mainDetailedzisegmap_32991(__global int *global_failure,
                                         int64_t N_27370, int64_t m_27371,
                                         int32_t n_27374, __global
                                         unsigned char *defunc_4_map_res_mem_43336,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global unsigned char *mem_43556,
                                         __global unsigned char *mem_43566,
                                         __global unsigned char *mem_43568,
                                         __global unsigned char *mem_43570,
                                         __global unsigned char *mem_43576,
                                         __global unsigned char *mem_43578)
{
    #define segmap_group_sizze_33196 (mainDetailedzisegmap_group_sizze_32993)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45005;
    int32_t local_tid_45006;
    int64_t group_sizze_45009;
    int32_t wave_sizze_45008;
    int32_t group_tid_45007;
    
    global_tid_45005 = get_global_id(0);
    local_tid_45006 = get_local_id(0);
    group_sizze_45009 = get_local_size(0);
    wave_sizze_45008 = LOCKSTEP_WIDTH;
    group_tid_45007 = get_group_id(0);
    
    int32_t phys_tid_32991;
    
    phys_tid_32991 = global_tid_45005;
    
    int64_t gtid_32990;
    
    gtid_32990 = sext_i32_i64(group_tid_45007) * segmap_group_sizze_33196 +
        sext_i32_i64(local_tid_45006);
    if (slt64(gtid_32990, m_27371)) {
        int32_t x_33200 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_32990];
        int32_t y_33202 = ((__global int32_t *) mem_43556)[gtid_32990];
        bool defunc_0_f_res_33203 = ((__global bool *) mem_43566)[gtid_32990];
        bool cond_33206 = y_33202 == 0;
        float defunc_0_f_res_33207;
        
        if (cond_33206) {
            defunc_0_f_res_33207 = 0.0F;
        } else {
            float defunc_0_f_res_33205 = ((__global
                                           float *) mem_43570)[gtid_32990];
            float i32_res_33208 = sitofp_i32_f32(y_33202);
            float defunc_0_f_res_f_res_33209 = defunc_0_f_res_33205 /
                  i32_res_33208;
            
            defunc_0_f_res_33207 = defunc_0_f_res_f_res_33209;
        }
        
        bool cond_33210 = !defunc_0_f_res_33203;
        int32_t fst_breakzq_33211;
        
        if (cond_33210) {
            fst_breakzq_33211 = -1;
        } else {
            int32_t defunc_0_f_res_33204 = ((__global
                                             int32_t *) mem_43568)[gtid_32990];
            bool cond_33212 = slt32(defunc_0_f_res_33204, y_33202);
            int32_t adjustValInds_res_33213;
            
            if (cond_33212) {
                int32_t i_33214 = add32(x_33200, defunc_0_f_res_33204);
                int64_t i_33215 = sext_i32_i64(i_33214);
                int32_t x_33216 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43336)[gtid_32990 *
                                                                           N_27370 +
                                                                           i_33215];
                int32_t adjustValInds_res_t_res_33217 = sub32(x_33216, n_27374);
                
                adjustValInds_res_33213 = adjustValInds_res_t_res_33217;
            } else {
                adjustValInds_res_33213 = -1;
            }
            fst_breakzq_33211 = adjustValInds_res_33213;
        }
        
        bool cond_33218 = sle32(x_33200, 5);
        bool cond_f_res_33219 = sle32(y_33202, 5);
        bool x_33220 = !cond_33218;
        bool y_33221 = cond_f_res_33219 && x_33220;
        bool cond_33222 = cond_33218 || y_33221;
        int32_t fst_breakzq_33223;
        
        if (cond_33222) {
            fst_breakzq_33223 = -2;
        } else {
            fst_breakzq_33223 = fst_breakzq_33211;
        }
        ((__global int32_t *) mem_43576)[gtid_32990] = fst_breakzq_33223;
        ((__global float *) mem_43578)[gtid_32990] = defunc_0_f_res_33207;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33196
}
__kernel void mainDetailedzisegmap_33063(__global int *global_failure,
                                         int64_t m_27371, __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43403,
                                         __global unsigned char *mem_43563)
{
    #define segmap_group_sizze_33148 (mainDetailedzisegmap_group_sizze_33065)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44902;
    int32_t local_tid_44903;
    int64_t group_sizze_44906;
    int32_t wave_sizze_44905;
    int32_t group_tid_44904;
    
    global_tid_44902 = get_global_id(0);
    local_tid_44903 = get_local_id(0);
    group_sizze_44906 = get_local_size(0);
    wave_sizze_44905 = LOCKSTEP_WIDTH;
    group_tid_44904 = get_group_id(0);
    
    int32_t phys_tid_33063;
    
    phys_tid_33063 = global_tid_44902;
    
    int64_t gtid_33062;
    
    gtid_33062 = sext_i32_i64(group_tid_44904) * segmap_group_sizze_33148 +
        sext_i32_i64(local_tid_44903);
    if (slt64(gtid_33062, m_27371)) {
        int32_t x_33151 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_33062];
        float x_33152 = ((__global
                          float *) defunc_3_map_res_mem_43403)[gtid_33062];
        float i32_res_33153 = sitofp_i32_f32(x_33151);
        float sqrt_res_33154;
        
        sqrt_res_33154 = futrts_sqrt32(i32_res_33153);
        
        float y_33155 = x_33152 * sqrt_res_33154;
        
        ((__global float *) mem_43563)[gtid_33062] = y_33155;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33148
}
__kernel void mainDetailedzisegmap_33105(__global int *global_failure,
                                         int64_t m_27371, __global
                                         unsigned char *defunc_4_map_res_mem_43334,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43402,
                                         __global unsigned char *mem_43556)
{
    #define segmap_group_sizze_33114 (mainDetailedzisegmap_group_sizze_33107)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44841;
    int32_t local_tid_44842;
    int64_t group_sizze_44845;
    int32_t wave_sizze_44844;
    int32_t group_tid_44843;
    
    global_tid_44841 = get_global_id(0);
    local_tid_44842 = get_local_id(0);
    group_sizze_44845 = get_local_size(0);
    wave_sizze_44844 = LOCKSTEP_WIDTH;
    group_tid_44843 = get_group_id(0);
    
    int32_t phys_tid_33105;
    
    phys_tid_33105 = global_tid_44841;
    
    int64_t gtid_33104;
    
    gtid_33104 = sext_i32_i64(group_tid_44843) * segmap_group_sizze_33114 +
        sext_i32_i64(local_tid_44842);
    if (slt64(gtid_33104, m_27371)) {
        int32_t x_33117 = ((__global
                            int32_t *) defunc_4_map_res_mem_43334)[gtid_33104];
        int32_t x_33118 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_33104];
        int32_t y_33119 = sub32(x_33117, x_33118);
        
        ((__global int32_t *) mem_43556)[gtid_33104] = y_33119;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33114
}
__kernel void mainDetailedzisegmap_intragroup_30109(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42720_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_42710_backing_aligned_1,
                                                    int32_t k2p2zq_27384,
                                                    int64_t i32_res_27386,
                                                    int32_t m_27517,
                                                    int64_t i32_res_27519,
                                                    int64_t i32_res_27534,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_42706,
                                                    __global
                                                    unsigned char *mem_42730)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42720_backing_1 = (__local volatile
                                                           char *) mem_42720_backing_aligned_0;
    __local volatile char *restrict mem_42710_backing_0 = (__local volatile
                                                           char *) mem_42710_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43989;
    int32_t local_tid_43990;
    int64_t group_sizze_43993;
    int32_t wave_sizze_43992;
    int32_t group_tid_43991;
    
    global_tid_43989 = get_global_id(0);
    local_tid_43990 = get_local_id(0);
    group_sizze_43993 = get_local_size(0);
    wave_sizze_43992 = LOCKSTEP_WIDTH;
    group_tid_43991 = get_group_id(0);
    
    int32_t phys_tid_30109;
    
    phys_tid_30109 = group_tid_43991;
    
    int32_t ltid_pre_43994;
    
    ltid_pre_43994 = local_tid_43990;
    
    int64_t gtid_30064;
    
    gtid_30064 = sext_i32_i64(group_tid_43991);
    
    __local char *mem_42710;
    
    mem_42710 = (__local char *) mem_42710_backing_0;
    
    int64_t gtid_30067 = sext_i32_i64(ltid_pre_43994);
    int32_t phys_tid_30068 = local_tid_43990;
    int32_t index_primexp_40543 = sext_i64_i32(gtid_30067);
    int32_t defunc_0_f_res_30234 = sdiv32(index_primexp_40543, m_27517);
    int32_t defunc_0_f_res_30235 = smod32(index_primexp_40543, m_27517);
    bool cond_30236 = slt32(defunc_0_f_res_30235, k2p2zq_27384);
    float defunc_0_f_res_30237;
    
    if (cond_30236) {
        int64_t i_30238 = sext_i32_i64(defunc_0_f_res_30234);
        int64_t j_30239 = sext_i32_i64(defunc_0_f_res_30235);
        float defunc_0_f_res_t_res_30240 = ((__global
                                             float *) defunc_3_map_res_mem_42706)[gtid_30064 *
                                                                                  (i32_res_27386 *
                                                                                   i32_res_27386) +
                                                                                  i_30238 *
                                                                                  i32_res_27386 +
                                                                                  j_30239];
        
        defunc_0_f_res_30237 = defunc_0_f_res_t_res_30240;
    } else {
        int32_t y_30241 = add32(k2p2zq_27384, defunc_0_f_res_30234);
        bool cond_30242 = defunc_0_f_res_30235 == y_30241;
        float defunc_0_f_res_f_res_30243;
        
        if (cond_30242) {
            defunc_0_f_res_f_res_30243 = 1.0F;
        } else {
            defunc_0_f_res_f_res_30243 = 0.0F;
        }
        defunc_0_f_res_30237 = defunc_0_f_res_f_res_30243;
    }
    ((__local float *) mem_42710)[gtid_30067] = defunc_0_f_res_30237;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42720;
    
    mem_42720 = (__local char *) mem_42720_backing_1;
    for (int32_t i_30245 = 0; i_30245 < k2p2zq_27384; i_30245++) {
        int64_t i32_res_30247 = sext_i32_i64(i_30245);
        float v1_30248 = ((__local float *) mem_42710)[i32_res_30247];
        bool cond_30249 = v1_30248 == 0.0F;
        int64_t gtid_30080 = sext_i32_i64(ltid_pre_43994);
        int32_t phys_tid_30081 = local_tid_43990;
        int32_t defunc_0_f_res_30252 = sext_i64_i32(gtid_30080);
        int32_t defunc_0_f_res_30253 = sdiv32(defunc_0_f_res_30252, m_27517);
        int32_t defunc_0_f_res_30254 = smod32(defunc_0_f_res_30252, m_27517);
        float defunc_0_f_res_30255;
        
        if (cond_30249) {
            int32_t x_30256 = mul32(m_27517, defunc_0_f_res_30253);
            int32_t i32_arg_30257 = add32(defunc_0_f_res_30254, x_30256);
            int64_t i32_res_30258 = sext_i32_i64(i32_arg_30257);
            float defunc_0_f_res_t_res_30259 = ((__local
                                                 float *) mem_42710)[i32_res_30258];
            
            defunc_0_f_res_30255 = defunc_0_f_res_t_res_30259;
        } else {
            int64_t i32_res_30260 = sext_i32_i64(defunc_0_f_res_30254);
            float x_30261 = ((__local float *) mem_42710)[i32_res_30260];
            float x_30262 = x_30261 / v1_30248;
            int32_t y_30263 = sub32(k2p2zq_27384, 1);
            bool cond_30264 = slt32(defunc_0_f_res_30253, y_30263);
            float defunc_0_f_res_f_res_30265;
            
            if (cond_30264) {
                int32_t x_30266 = add32(1, defunc_0_f_res_30253);
                int32_t x_30267 = mul32(m_27517, x_30266);
                int32_t i32_arg_30268 = add32(defunc_0_f_res_30254, x_30267);
                int64_t i32_res_30269 = sext_i32_i64(i32_arg_30268);
                float x_30270 = ((__local float *) mem_42710)[i32_res_30269];
                int32_t i32_arg_30271 = add32(i_30245, x_30267);
                int64_t i32_res_30272 = sext_i32_i64(i32_arg_30271);
                float x_30273 = ((__local float *) mem_42710)[i32_res_30272];
                float y_30274 = x_30262 * x_30273;
                float defunc_0_f_res_f_res_t_res_30275 = x_30270 - y_30274;
                
                defunc_0_f_res_f_res_30265 = defunc_0_f_res_f_res_t_res_30275;
            } else {
                defunc_0_f_res_f_res_30265 = x_30262;
            }
            defunc_0_f_res_30255 = defunc_0_f_res_f_res_30265;
        }
        ((__local float *) mem_42720)[gtid_30080] = defunc_0_f_res_30255;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_30107 = sext_i32_i64(ltid_pre_43994);
        int32_t phys_tid_30108 = local_tid_43990;
        float write_value_30278 = ((__local float *) mem_42720)[write_i_30107];
        
        if (sle64((int64_t) 0, write_i_30107) && slt64(write_i_30107,
                                                       i32_res_27519)) {
            ((__local float *) mem_42710)[write_i_30107] = write_value_30278;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_43996 = 0; i_43996 < sdiv_up64(i32_res_27386 *
                                                  i32_res_27386 -
                                                  sext_i32_i64(local_tid_43990),
                                                  i32_res_27519); i_43996++) {
        ((__global float *) mem_42730)[gtid_30064 * (i32_res_27386 *
                                                     i32_res_27386) +
                                       squot64(i_43996 * i32_res_27519 +
                                               sext_i32_i64(local_tid_43990),
                                               i32_res_27386) * i32_res_27386 +
                                       (i_43996 * i32_res_27519 +
                                        sext_i32_i64(local_tid_43990) -
                                        squot64(i_43996 * i32_res_27519 +
                                                sext_i32_i64(local_tid_43990),
                                                i32_res_27386) *
                                        i32_res_27386)] = ((__local
                                                            float *) mem_42710)[i32_res_27386 +
                                                                                (squot64(i_43996 *
                                                                                         i32_res_27519 +
                                                                                         sext_i32_i64(local_tid_43990),
                                                                                         i32_res_27386) *
                                                                                 i32_res_27534 +
                                                                                 (i_43996 *
                                                                                  i32_res_27519 +
                                                                                  sext_i32_i64(local_tid_43990) -
                                                                                  squot64(i_43996 *
                                                                                          i32_res_27519 +
                                                                                          sext_i32_i64(local_tid_43990),
                                                                                          i32_res_27386) *
                                                                                  i32_res_27386))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_30336(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42751_backing_aligned_0,
                                                    int64_t m_27371,
                                                    int32_t k2p2zq_27384,
                                                    int32_t m_27517,
                                                    int64_t i32_res_27519,
                                                    int32_t i_30731,
                                                    int64_t i32_res_30733,
                                                    int64_t ctx_param_ext_42737,
                                                    int64_t ctx_param_ext_42738,
                                                    int64_t ctx_param_ext_42740,
                                                    __global
                                                    unsigned char *mem_param_42742,
                                                    __global
                                                    unsigned char *mem_42747,
                                                    __global
                                                    unsigned char *mem_42755)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42751_backing_0 = (__local volatile
                                                           char *) mem_42751_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44023;
    int32_t local_tid_44024;
    int64_t group_sizze_44027;
    int32_t wave_sizze_44026;
    int32_t group_tid_44025;
    
    global_tid_44023 = get_global_id(0);
    local_tid_44024 = get_local_id(0);
    group_sizze_44027 = get_local_size(0);
    wave_sizze_44026 = LOCKSTEP_WIDTH;
    group_tid_44025 = get_group_id(0);
    
    int32_t phys_tid_30336;
    
    phys_tid_30336 = group_tid_44025;
    
    int32_t ltid_pre_44028;
    
    ltid_pre_44028 = local_tid_44024;
    
    int64_t gtid_30304;
    
    gtid_30304 = sext_i32_i64(group_tid_44025);
    
    float v1_30746 = ((__global float *) mem_param_42742)[ctx_param_ext_42737 +
                                                          (gtid_30304 *
                                                           ctx_param_ext_42738 +
                                                           i32_res_30733 *
                                                           ctx_param_ext_42740)];
    bool cond_30747 = v1_30746 == 0.0F;
    __local char *mem_42751;
    
    mem_42751 = (__local char *) mem_42751_backing_0;
    
    int64_t gtid_30307 = sext_i32_i64(ltid_pre_44028);
    int32_t phys_tid_30308 = local_tid_44024;
    int32_t defunc_0_f_res_30750 = sext_i64_i32(gtid_30307);
    int32_t defunc_0_f_res_30751 = sdiv32(defunc_0_f_res_30750, m_27517);
    int32_t defunc_0_f_res_30752 = smod32(defunc_0_f_res_30750, m_27517);
    float defunc_0_f_res_30753;
    
    if (cond_30747) {
        int32_t x_30754 = mul32(m_27517, defunc_0_f_res_30751);
        int32_t i32_arg_30755 = add32(defunc_0_f_res_30752, x_30754);
        int64_t i32_res_30756 = sext_i32_i64(i32_arg_30755);
        float defunc_0_f_res_t_res_30757 = ((__global
                                             float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                       (gtid_30304 *
                                                                        ctx_param_ext_42738 +
                                                                        i32_res_30756 *
                                                                        ctx_param_ext_42740)];
        
        defunc_0_f_res_30753 = defunc_0_f_res_t_res_30757;
    } else {
        int64_t i32_res_30758 = sext_i32_i64(defunc_0_f_res_30752);
        float x_30759 = ((__global
                          float *) mem_param_42742)[ctx_param_ext_42737 +
                                                    (gtid_30304 *
                                                     ctx_param_ext_42738 +
                                                     i32_res_30758 *
                                                     ctx_param_ext_42740)];
        float x_30760 = x_30759 / v1_30746;
        int32_t y_30761 = sub32(k2p2zq_27384, 1);
        bool cond_30762 = slt32(defunc_0_f_res_30751, y_30761);
        float defunc_0_f_res_f_res_30763;
        
        if (cond_30762) {
            int32_t x_30764 = add32(1, defunc_0_f_res_30751);
            int32_t x_30765 = mul32(m_27517, x_30764);
            int32_t i32_arg_30766 = add32(defunc_0_f_res_30752, x_30765);
            int64_t i32_res_30767 = sext_i32_i64(i32_arg_30766);
            float x_30768 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_30304 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_30767 *
                                                         ctx_param_ext_42740)];
            int32_t i32_arg_30769 = add32(i_30731, x_30765);
            int64_t i32_res_30770 = sext_i32_i64(i32_arg_30769);
            float x_30771 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_30304 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_30770 *
                                                         ctx_param_ext_42740)];
            float y_30772 = x_30760 * x_30771;
            float defunc_0_f_res_f_res_t_res_30773 = x_30768 - y_30772;
            
            defunc_0_f_res_f_res_30763 = defunc_0_f_res_f_res_t_res_30773;
        } else {
            defunc_0_f_res_f_res_30763 = x_30760;
        }
        defunc_0_f_res_30753 = defunc_0_f_res_f_res_30763;
    }
    ((__local float *) mem_42751)[gtid_30307] = defunc_0_f_res_30753;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_30334 = sext_i32_i64(ltid_pre_44028);
    int32_t phys_tid_30335 = local_tid_44024;
    float write_value_30776 = ((__local float *) mem_42751)[write_i_30334];
    
    if (sle64((int64_t) 0, write_i_30334) && slt64(write_i_30334,
                                                   i32_res_27519)) {
        ((__global float *) mem_42747)[gtid_30304 + write_i_30334 * m_27371] =
            write_value_30776;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44024 == 0) {
        for (int64_t i_44029 = 0; i_44029 < i32_res_27519; i_44029++) {
            ((__global float *) mem_42755)[gtid_30304 * i32_res_27519 +
                                           i_44029] = ((__global
                                                        float *) mem_42747)[gtid_30304 +
                                                                            i_44029 *
                                                                            m_27371];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31287(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43307_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43305_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43303_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43301_backing_aligned_3,
                                                    int64_t N_27370,
                                                    int64_t i_27646, __global
                                                    unsigned char *images_mem_42538,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43297,
                                                    __global
                                                    unsigned char *mem_43310,
                                                    __global
                                                    unsigned char *mem_43313,
                                                    __global
                                                    unsigned char *mem_43316)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43307_backing_3 = (__local volatile
                                                           char *) mem_43307_backing_aligned_0;
    __local volatile char *restrict mem_43305_backing_2 = (__local volatile
                                                           char *) mem_43305_backing_aligned_1;
    __local volatile char *restrict mem_43303_backing_1 = (__local volatile
                                                           char *) mem_43303_backing_aligned_2;
    __local volatile char *restrict mem_43301_backing_0 = (__local volatile
                                                           char *) mem_43301_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44405;
    int32_t local_tid_44406;
    int64_t group_sizze_44409;
    int32_t wave_sizze_44408;
    int32_t group_tid_44407;
    
    global_tid_44405 = get_global_id(0);
    local_tid_44406 = get_local_id(0);
    group_sizze_44409 = get_local_size(0);
    wave_sizze_44408 = LOCKSTEP_WIDTH;
    group_tid_44407 = get_group_id(0);
    
    int32_t phys_tid_31287;
    
    phys_tid_31287 = group_tid_44407;
    
    int32_t ltid_pre_44410;
    
    ltid_pre_44410 = local_tid_44406;
    
    int64_t gtid_31280;
    
    gtid_31280 = sext_i32_i64(group_tid_44407);
    
    __local char *mem_43301;
    
    mem_43301 = (__local char *) mem_43301_backing_0;
    
    __local char *mem_43303;
    
    mem_43303 = (__local char *) mem_43303_backing_1;
    
    int64_t gtid_31283 = sext_i32_i64(ltid_pre_44410);
    int32_t phys_tid_31284 = local_tid_44406;
    float x_31376 = ((__global float *) images_mem_42538)[gtid_31280 * N_27370 +
                                                          gtid_31283];
    bool isnan_res_31378;
    
    isnan_res_31378 = futrts_isnan32(x_31376);
    
    bool cond_31379 = !isnan_res_31378;
    float defunc_1_f_res_31380;
    
    if (cond_31379) {
        float x_31377 = ((__global
                          float *) defunc_3_map_res_mem_43297)[gtid_31280 *
                                                               N_27370 +
                                                               gtid_31283];
        float defunc_1_f_res_t_res_31381 = x_31376 - x_31377;
        
        defunc_1_f_res_31380 = defunc_1_f_res_t_res_31381;
    } else {
        defunc_1_f_res_31380 = NAN;
    }
    
    bool isnan_res_31382;
    
    isnan_res_31382 = futrts_isnan32(defunc_1_f_res_31380);
    
    bool defunc_0_p_res_31383 = !isnan_res_31382;
    int64_t defunc_0_f_res_31384 = btoi_bool_i64(defunc_0_p_res_31383);
    
    ((__local int64_t *) mem_43301)[gtid_31283] = defunc_0_f_res_31384;
    ((__local float *) mem_43303)[gtid_31283] = defunc_1_f_res_31380;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44411;
    
    dims_flat_44411 = N_27370;
    
    int64_t x_31373;
    int64_t x_31374;
    int64_t x_44413;
    int64_t x_44414;
    bool ltid_in_bounds_44416;
    
    ltid_in_bounds_44416 = slt64(sext_i32_i64(local_tid_44406), N_27370);
    
    int32_t skip_threads_44417;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44416) {
            x_31374 = ((volatile __local
                        int64_t *) mem_43301)[sext_i32_i64(local_tid_44406)];
            if ((local_tid_44406 - squot32(local_tid_44406, 32) * 32) == 0) {
                x_31373 = x_31374;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44417 = 1;
        while (slt32(skip_threads_44417, 32)) {
            if (sle32(skip_threads_44417, local_tid_44406 -
                      squot32(local_tid_44406, 32) * 32) &&
                ltid_in_bounds_44416) {
                // read operands
                {
                    x_31373 = ((volatile __local
                                int64_t *) mem_43301)[sext_i32_i64(local_tid_44406) -
                                                      sext_i32_i64(skip_threads_44417)];
                }
                // perform operation
                {
                    bool inactive_44418 =
                         slt64(srem64(sext_i32_i64(local_tid_44406), N_27370),
                               sext_i32_i64(local_tid_44406) -
                               sext_i32_i64(local_tid_44406 -
                               skip_threads_44417));
                    
                    if (inactive_44418) {
                        x_31373 = x_31374;
                    }
                    if (!inactive_44418) {
                        int64_t defunc_1_op_res_31375 = add64(x_31373, x_31374);
                        
                        x_31373 = defunc_1_op_res_31375;
                    }
                }
            }
            if (sle32(wave_sizze_44408, skip_threads_44417)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44417, local_tid_44406 -
                      squot32(local_tid_44406, 32) * 32) &&
                ltid_in_bounds_44416) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43301)[sext_i32_i64(local_tid_44406)] =
                        x_31373;
                    x_31374 = x_31373;
                }
            }
            if (sle32(wave_sizze_44408, skip_threads_44417)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44417 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44406 - squot32(local_tid_44406, 32) * 32) == 31 &&
            ltid_in_bounds_44416) {
            ((volatile __local
              int64_t *) mem_43301)[sext_i32_i64(squot32(local_tid_44406,
                                                         32))] = x_31373;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44419;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44406, 32) == 0 && ltid_in_bounds_44416) {
                x_44414 = ((volatile __local
                            int64_t *) mem_43301)[sext_i32_i64(local_tid_44406)];
                if ((local_tid_44406 - squot32(local_tid_44406, 32) * 32) ==
                    0) {
                    x_44413 = x_44414;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44419 = 1;
            while (slt32(skip_threads_44419, 32)) {
                if (sle32(skip_threads_44419, local_tid_44406 -
                          squot32(local_tid_44406, 32) * 32) &&
                    (squot32(local_tid_44406, 32) == 0 &&
                     ltid_in_bounds_44416)) {
                    // read operands
                    {
                        x_44413 = ((volatile __local
                                    int64_t *) mem_43301)[sext_i32_i64(local_tid_44406) -
                                                          sext_i32_i64(skip_threads_44419)];
                    }
                    // perform operation
                    {
                        bool inactive_44420 =
                             slt64(srem64(sext_i32_i64(local_tid_44406 * 32 +
                                          32 - 1), N_27370),
                                   sext_i32_i64(local_tid_44406 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44406 -
                                                 skip_threads_44419) * 32 + 32 -
                                   1));
                        
                        if (inactive_44420) {
                            x_44413 = x_44414;
                        }
                        if (!inactive_44420) {
                            int64_t defunc_1_op_res_44415 = add64(x_44413,
                                                                  x_44414);
                            
                            x_44413 = defunc_1_op_res_44415;
                        }
                    }
                }
                if (sle32(wave_sizze_44408, skip_threads_44419)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44419, local_tid_44406 -
                          squot32(local_tid_44406, 32) * 32) &&
                    (squot32(local_tid_44406, 32) == 0 &&
                     ltid_in_bounds_44416)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43301)[sext_i32_i64(local_tid_44406)] =
                            x_44413;
                        x_44414 = x_44413;
                    }
                }
                if (sle32(wave_sizze_44408, skip_threads_44419)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44419 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44406, 32) == 0 || !ltid_in_bounds_44416)) {
            // read operands
            {
                x_31374 = x_31373;
                x_31373 = ((__local
                            int64_t *) mem_43301)[sext_i32_i64(squot32(local_tid_44406,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44421 =
                     slt64(srem64(sext_i32_i64(local_tid_44406), N_27370),
                           sext_i32_i64(local_tid_44406) -
                           sext_i32_i64(squot32(local_tid_44406, 32) * 32 - 1));
                
                if (inactive_44421) {
                    x_31373 = x_31374;
                }
                if (!inactive_44421) {
                    int64_t defunc_1_op_res_31375 = add64(x_31373, x_31374);
                    
                    x_31373 = defunc_1_op_res_31375;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43301)[sext_i32_i64(local_tid_44406)] =
                    x_31373;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44406, 32) == 0) {
            ((__local int64_t *) mem_43301)[sext_i32_i64(local_tid_44406)] =
                x_31374;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_31385 = ((__local int64_t *) mem_43301)[i_27646];
    int32_t defunc_0_f_res_31386 = sext_i64_i32(last_res_31385);
    __local char *mem_43305;
    
    mem_43305 = (__local char *) mem_43305_backing_2;
    ((__local float *) mem_43305)[sext_i32_i64(local_tid_44406)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43307;
    
    mem_43307 = (__local char *) mem_43307_backing_3;
    ((__local int32_t *) mem_43307)[sext_i32_i64(local_tid_44406)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_31285 = sext_i32_i64(ltid_pre_44410);
    int32_t phys_tid_31286 = local_tid_44406;
    float x_31391 = ((__local float *) mem_43303)[write_i_31285];
    int32_t index_primexp_40563 = sext_i64_i32(write_i_31285);
    bool isnan_res_31394;
    
    isnan_res_31394 = futrts_isnan32(x_31391);
    
    bool defunc_0_p_res_31395 = !isnan_res_31394;
    int64_t defunc_1_f_res_31396;
    
    if (defunc_0_p_res_31395) {
        int64_t x_31392 = ((__local int64_t *) mem_43301)[write_i_31285];
        int64_t defunc_1_f_res_t_res_31397 = sub64(x_31392, (int64_t) 1);
        
        defunc_1_f_res_31396 = defunc_1_f_res_t_res_31397;
    } else {
        defunc_1_f_res_31396 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_31396) && slt64(defunc_1_f_res_31396,
                                                          N_27370)) {
        ((__local int32_t *) mem_43307)[defunc_1_f_res_31396] =
            index_primexp_40563;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_31396) && slt64(defunc_1_f_res_31396,
                                                          N_27370)) {
        ((__local float *) mem_43305)[defunc_1_f_res_31396] = x_31391;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44406 == 0) {
        ((__global int32_t *) mem_43310)[gtid_31280] = defunc_0_f_res_31386;
    }
    ((__global float *) mem_43313)[gtid_31280 * N_27370 +
                                   sext_i32_i64(local_tid_44406)] = ((__local
                                                                      float *) mem_43305)[sext_i32_i64(local_tid_44406)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43316)[gtid_31280 * N_27370 +
                                     sext_i32_i64(local_tid_44406)] = ((__local
                                                                        int32_t *) mem_43307)[sext_i32_i64(local_tid_44406)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31627(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44530_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44526_backing_aligned_1,
                                                    int64_t N_27370,
                                                    float hfrac_27376,
                                                    int64_t i32_res_27380,
                                                    int32_t k2p2_27382, __global
                                                    unsigned char *images_mem_42538,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43335,
                                                    __global
                                                    unsigned char *mem_43382,
                                                    __global
                                                    unsigned char *mem_43384,
                                                    __global
                                                    unsigned char *mem_43386)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44530_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44530_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44526_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44526_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44520;
    int32_t local_tid_44521;
    int64_t group_sizze_44524;
    int32_t wave_sizze_44523;
    int32_t group_tid_44522;
    
    global_tid_44520 = get_global_id(0);
    local_tid_44521 = get_local_id(0);
    group_sizze_44524 = get_local_size(0);
    wave_sizze_44523 = LOCKSTEP_WIDTH;
    group_tid_44522 = get_group_id(0);
    
    int32_t phys_tid_31627;
    
    phys_tid_31627 = group_tid_44522;
    
    int32_t ltid_pre_44525;
    
    ltid_pre_44525 = local_tid_44521;
    
    int64_t gtid_31620;
    
    gtid_31620 = sext_i32_i64(group_tid_44522);
    
    int32_t defunc_0_f_res_31704;
    int64_t gtid_31623 = sext_i32_i64(ltid_pre_44525);
    int32_t phys_tid_31624 = local_tid_44521;
    __local char *red_arr_mem_44526;
    
    red_arr_mem_44526 = (__local char *) red_arr_mem_44526_backing_0;
    
    float x_31708;
    
    x_31708 = ((__global float *) images_mem_42538)[gtid_31620 * N_27370 +
                                                    gtid_31623];
    
    bool isnan_res_31709;
    
    isnan_res_31709 = futrts_isnan32(x_31708);
    
    bool cond_31710 = !isnan_res_31709;
    int32_t defunc_0_f_res_31711 = btoi_bool_i32(cond_31710);
    
    ((__local int32_t *) red_arr_mem_44526)[gtid_31623] = defunc_0_f_res_31711;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44528;
    int32_t skip_waves_44529;
    
    skip_waves_44529 = 1;
    
    int32_t x_31705;
    int32_t x_31706;
    
    offset_44528 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44521, sext_i64_i32(i32_res_27380))) {
            x_31705 = ((__local
                        int32_t *) red_arr_mem_44526)[sext_i32_i64(local_tid_44521 +
                                                      offset_44528)];
        }
    }
    offset_44528 = 1;
    while (slt32(offset_44528, wave_sizze_44523)) {
        if (slt32(local_tid_44521 + offset_44528,
                  sext_i64_i32(i32_res_27380)) && ((local_tid_44521 -
                                                    squot32(local_tid_44521,
                                                            wave_sizze_44523) *
                                                    wave_sizze_44523) & (2 *
                                                                         offset_44528 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_31706 = ((volatile __local
                            int32_t *) red_arr_mem_44526)[sext_i32_i64(local_tid_44521 +
                                                          offset_44528)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_31707 = add32(x_31705, x_31706);
                
                x_31705 = defunc_1_op_res_31707;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44526)[sext_i32_i64(local_tid_44521)] =
                    x_31705;
            }
        }
        offset_44528 *= 2;
    }
    while (slt32(skip_waves_44529, squot32(sext_i64_i32(i32_res_27380) +
                                           wave_sizze_44523 - 1,
                                           wave_sizze_44523))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44528 = skip_waves_44529 * wave_sizze_44523;
        if (slt32(local_tid_44521 + offset_44528,
                  sext_i64_i32(i32_res_27380)) && ((local_tid_44521 -
                                                    squot32(local_tid_44521,
                                                            wave_sizze_44523) *
                                                    wave_sizze_44523) == 0 &&
                                                   (squot32(local_tid_44521,
                                                            wave_sizze_44523) &
                                                    (2 * skip_waves_44529 -
                                                     1)) == 0)) {
            // read array element
            {
                x_31706 = ((__local
                            int32_t *) red_arr_mem_44526)[sext_i32_i64(local_tid_44521 +
                                                          offset_44528)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_31707 = add32(x_31705, x_31706);
                
                x_31705 = defunc_1_op_res_31707;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44526)[sext_i32_i64(local_tid_44521)] =
                    x_31705;
            }
        }
        skip_waves_44529 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_31704 = ((__local int32_t *) red_arr_mem_44526)[(int64_t) 0];
    
    float defunc_0_f_res_31712;
    int64_t gtid_31625 = sext_i32_i64(ltid_pre_44525);
    int32_t phys_tid_31626 = local_tid_44521;
    __local char *red_arr_mem_44530;
    
    red_arr_mem_44530 = (__local char *) red_arr_mem_44530_backing_1;
    
    int32_t index_primexp_40571;
    
    index_primexp_40571 = sext_i64_i32(gtid_31625);
    
    bool cond_31717 = slt32(index_primexp_40571, defunc_0_f_res_31704);
    float defunc_0_f_res_31718;
    
    if (cond_31717) {
        int64_t i_31719 = sext_i32_i64(index_primexp_40571);
        float defunc_0_f_res_t_res_31720 = ((__global
                                             float *) defunc_4_map_res_mem_43335)[gtid_31620 *
                                                                                  N_27370 +
                                                                                  i_31719];
        
        defunc_0_f_res_31718 = defunc_0_f_res_t_res_31720;
    } else {
        defunc_0_f_res_31718 = 0.0F;
    }
    
    float defunc_0_f_res_31721 = defunc_0_f_res_31718 * defunc_0_f_res_31718;
    
    ((__local float *) red_arr_mem_44530)[gtid_31625] = defunc_0_f_res_31721;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44532;
    int32_t skip_waves_44533;
    
    skip_waves_44533 = 1;
    
    float x_31713;
    float x_31714;
    
    offset_44532 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44521, sext_i64_i32(i32_res_27380))) {
            x_31713 = ((__local
                        float *) red_arr_mem_44530)[sext_i32_i64(local_tid_44521 +
                                                    offset_44532)];
        }
    }
    offset_44532 = 1;
    while (slt32(offset_44532, wave_sizze_44523)) {
        if (slt32(local_tid_44521 + offset_44532,
                  sext_i64_i32(i32_res_27380)) && ((local_tid_44521 -
                                                    squot32(local_tid_44521,
                                                            wave_sizze_44523) *
                                                    wave_sizze_44523) & (2 *
                                                                         offset_44532 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_31714 = ((volatile __local
                            float *) red_arr_mem_44530)[sext_i32_i64(local_tid_44521 +
                                                        offset_44532)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_31715 = x_31713 + x_31714;
                
                x_31713 = defunc_1_op_res_31715;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44530)[sext_i32_i64(local_tid_44521)] =
                    x_31713;
            }
        }
        offset_44532 *= 2;
    }
    while (slt32(skip_waves_44533, squot32(sext_i64_i32(i32_res_27380) +
                                           wave_sizze_44523 - 1,
                                           wave_sizze_44523))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44532 = skip_waves_44533 * wave_sizze_44523;
        if (slt32(local_tid_44521 + offset_44532,
                  sext_i64_i32(i32_res_27380)) && ((local_tid_44521 -
                                                    squot32(local_tid_44521,
                                                            wave_sizze_44523) *
                                                    wave_sizze_44523) == 0 &&
                                                   (squot32(local_tid_44521,
                                                            wave_sizze_44523) &
                                                    (2 * skip_waves_44533 -
                                                     1)) == 0)) {
            // read array element
            {
                x_31714 = ((__local
                            float *) red_arr_mem_44530)[sext_i32_i64(local_tid_44521 +
                                                        offset_44532)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_31715 = x_31713 + x_31714;
                
                x_31713 = defunc_1_op_res_31715;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44530)[sext_i32_i64(local_tid_44521)] =
                    x_31713;
            }
        }
        skip_waves_44533 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_31712 = ((__local float *) red_arr_mem_44530)[(int64_t) 0];
    
    int32_t r32_arg_31722 = sub32(defunc_0_f_res_31704, k2p2_27382);
    float i32_res_31723 = sitofp_i32_f32(r32_arg_31722);
    float sqrt_arg_31724 = defunc_0_f_res_31712 / i32_res_31723;
    float sqrt_res_31725;
    
    sqrt_res_31725 = futrts_sqrt32(sqrt_arg_31724);
    
    float i32_res_31726 = sitofp_i32_f32(defunc_0_f_res_31704);
    float t32_arg_31727 = hfrac_27376 * i32_res_31726;
    int32_t f32_res_31728 = fptosi_f32_i32(t32_arg_31727);
    
    if (local_tid_44521 == 0) {
        ((__global int32_t *) mem_43382)[gtid_31620] = f32_res_31728;
    }
    if (local_tid_44521 == 0) {
        ((__global int32_t *) mem_43384)[gtid_31620] = defunc_0_f_res_31704;
    }
    if (local_tid_44521 == 0) {
        ((__global float *) mem_43386)[gtid_31620] = sqrt_res_31725;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32636(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43542_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44834_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44832_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44830_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_43540_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_43537_backing_aligned_5,
                                                    int64_t N_27370,
                                                    int32_t n_27374,
                                                    int64_t iota32_arg_27766,
                                                    int64_t iota32_arg_27794,
                                                    int64_t computed_group_sizze_32628,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43334,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43335,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43336,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43401,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43402,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43403,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_43436,
                                                    __global
                                                    unsigned char *mem_43439,
                                                    __global
                                                    unsigned char *mem_43546,
                                                    __global
                                                    unsigned char *mem_43549,
                                                    __global
                                                    unsigned char *mem_43551,
                                                    __global
                                                    unsigned char *mem_43553)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43542_backing_5 = (__local volatile
                                                           char *) mem_43542_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44834_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_44834_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44832_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_44832_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44830_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44830_backing_aligned_3;
    __local volatile char *restrict mem_43540_backing_1 = (__local volatile
                                                           char *) mem_43540_backing_aligned_4;
    __local volatile char *restrict mem_43537_backing_0 = (__local volatile
                                                           char *) mem_43537_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44812;
    int32_t local_tid_44813;
    int64_t group_sizze_44816;
    int32_t wave_sizze_44815;
    int32_t group_tid_44814;
    
    global_tid_44812 = get_global_id(0);
    local_tid_44813 = get_local_id(0);
    group_sizze_44816 = get_local_size(0);
    wave_sizze_44815 = LOCKSTEP_WIDTH;
    group_tid_44814 = get_group_id(0);
    
    int32_t phys_tid_32636;
    
    phys_tid_32636 = group_tid_44814;
    
    int32_t ltid_pre_44817;
    
    ltid_pre_44817 = local_tid_44813;
    
    int32_t ltid_pre_44818;
    
    ltid_pre_44818 = local_tid_44813;
    
    int64_t gtid_32626;
    
    gtid_32626 = sext_i32_i64(group_tid_44814);
    
    int32_t x_32842;
    
    x_32842 = ((__global int32_t *) defunc_4_map_res_mem_43334)[gtid_32626];
    
    int32_t x_32843 = ((__global
                        int32_t *) defunc_3_map_res_mem_43402)[gtid_32626];
    float x_32844 = ((__global float *) defunc_3_map_res_mem_43403)[gtid_32626];
    int32_t x_32845 = ((__global
                        int32_t *) defunc_3_map_res_mem_43401)[gtid_32626];
    float x_32846 = ((__global float *) defunc_0_f_res_mem_43436)[gtid_32626];
    int32_t y_32849 = sub32(x_32842, x_32843);
    __local char *mem_43537;
    
    mem_43537 = (__local char *) mem_43537_backing_0;
    
    int64_t gtid_32629 = sext_i32_i64(ltid_pre_44818);
    int32_t phys_tid_32630 = local_tid_44813;
    
    if (slt64(gtid_32629, iota32_arg_27794)) {
        int32_t index_primexp_40591 = sext_i64_i32(gtid_32629);
        bool cond_32855 = sle32(y_32849, index_primexp_40591);
        float defunc_0_f_res_32856;
        
        if (cond_32855) {
            defunc_0_f_res_32856 = 0.0F;
        } else {
            bool cond_32857 = index_primexp_40591 == 0;
            float defunc_0_f_res_f_res_32858;
            
            if (cond_32857) {
                defunc_0_f_res_f_res_32858 = x_32846;
            } else {
                int32_t i_32859 = add32(x_32843, index_primexp_40591);
                int64_t i_32860 = sext_i32_i64(i_32859);
                float x_32861 = ((__global
                                  float *) defunc_4_map_res_mem_43335)[gtid_32626 *
                                                                       N_27370 +
                                                                       i_32860];
                int32_t x_32862 = sub32(x_32843, x_32845);
                int32_t i_32863 = add32(x_32862, index_primexp_40591);
                int64_t i_32864 = sext_i32_i64(i_32863);
                float y_32865 = ((__global
                                  float *) defunc_4_map_res_mem_43335)[gtid_32626 *
                                                                       N_27370 +
                                                                       i_32864];
                float defunc_0_f_res_f_res_f_res_32866 = x_32861 - y_32865;
                
                defunc_0_f_res_f_res_32858 = defunc_0_f_res_f_res_f_res_32866;
            }
            defunc_0_f_res_32856 = defunc_0_f_res_f_res_32858;
        }
        ((__local float *) mem_43537)[gtid_32629] = defunc_0_f_res_32856;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44819;
    
    dims_flat_44819 = iota32_arg_27794;
    
    float x_32851;
    float x_32852;
    float x_44821;
    float x_44822;
    bool ltid_in_bounds_44824;
    
    ltid_in_bounds_44824 = slt64(sext_i32_i64(local_tid_44813),
                                 iota32_arg_27794);
    
    int32_t skip_threads_44825;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44824) {
            x_32852 = ((volatile __local
                        float *) mem_43537)[sext_i32_i64(local_tid_44813)];
            if ((local_tid_44813 - squot32(local_tid_44813, 32) * 32) == 0) {
                x_32851 = x_32852;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44825 = 1;
        while (slt32(skip_threads_44825, 32)) {
            if (sle32(skip_threads_44825, local_tid_44813 -
                      squot32(local_tid_44813, 32) * 32) &&
                ltid_in_bounds_44824) {
                // read operands
                {
                    x_32851 = ((volatile __local
                                float *) mem_43537)[sext_i32_i64(local_tid_44813) -
                                                    sext_i32_i64(skip_threads_44825)];
                }
                // perform operation
                {
                    bool inactive_44826 =
                         slt64(srem64(sext_i32_i64(local_tid_44813),
                                      iota32_arg_27794),
                               sext_i32_i64(local_tid_44813) -
                               sext_i32_i64(local_tid_44813 -
                               skip_threads_44825));
                    
                    if (inactive_44826) {
                        x_32851 = x_32852;
                    }
                    if (!inactive_44826) {
                        float defunc_1_op_res_32853 = x_32851 + x_32852;
                        
                        x_32851 = defunc_1_op_res_32853;
                    }
                }
            }
            if (sle32(wave_sizze_44815, skip_threads_44825)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44825, local_tid_44813 -
                      squot32(local_tid_44813, 32) * 32) &&
                ltid_in_bounds_44824) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43537)[sext_i32_i64(local_tid_44813)] =
                        x_32851;
                    x_32852 = x_32851;
                }
            }
            if (sle32(wave_sizze_44815, skip_threads_44825)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44825 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44813 - squot32(local_tid_44813, 32) * 32) == 31 &&
            ltid_in_bounds_44824) {
            ((volatile __local
              float *) mem_43537)[sext_i32_i64(squot32(local_tid_44813, 32))] =
                x_32851;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44827;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44813, 32) == 0 && ltid_in_bounds_44824) {
                x_44822 = ((volatile __local
                            float *) mem_43537)[sext_i32_i64(local_tid_44813)];
                if ((local_tid_44813 - squot32(local_tid_44813, 32) * 32) ==
                    0) {
                    x_44821 = x_44822;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44827 = 1;
            while (slt32(skip_threads_44827, 32)) {
                if (sle32(skip_threads_44827, local_tid_44813 -
                          squot32(local_tid_44813, 32) * 32) &&
                    (squot32(local_tid_44813, 32) == 0 &&
                     ltid_in_bounds_44824)) {
                    // read operands
                    {
                        x_44821 = ((volatile __local
                                    float *) mem_43537)[sext_i32_i64(local_tid_44813) -
                                                        sext_i32_i64(skip_threads_44827)];
                    }
                    // perform operation
                    {
                        bool inactive_44828 =
                             slt64(srem64(sext_i32_i64(local_tid_44813 * 32 +
                                          32 - 1), iota32_arg_27794),
                                   sext_i32_i64(local_tid_44813 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44813 -
                                                 skip_threads_44827) * 32 + 32 -
                                   1));
                        
                        if (inactive_44828) {
                            x_44821 = x_44822;
                        }
                        if (!inactive_44828) {
                            float defunc_1_op_res_44823 = x_44821 + x_44822;
                            
                            x_44821 = defunc_1_op_res_44823;
                        }
                    }
                }
                if (sle32(wave_sizze_44815, skip_threads_44827)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44827, local_tid_44813 -
                          squot32(local_tid_44813, 32) * 32) &&
                    (squot32(local_tid_44813, 32) == 0 &&
                     ltid_in_bounds_44824)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43537)[sext_i32_i64(local_tid_44813)] =
                            x_44821;
                        x_44822 = x_44821;
                    }
                }
                if (sle32(wave_sizze_44815, skip_threads_44827)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44827 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44813, 32) == 0 || !ltid_in_bounds_44824)) {
            // read operands
            {
                x_32852 = x_32851;
                x_32851 = ((__local
                            float *) mem_43537)[sext_i32_i64(squot32(local_tid_44813,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44829 =
                     slt64(srem64(sext_i32_i64(local_tid_44813),
                                  iota32_arg_27794),
                           sext_i32_i64(local_tid_44813) -
                           sext_i32_i64(squot32(local_tid_44813, 32) * 32 - 1));
                
                if (inactive_44829) {
                    x_32851 = x_32852;
                }
                if (!inactive_44829) {
                    float defunc_1_op_res_32853 = x_32851 + x_32852;
                    
                    x_32851 = defunc_1_op_res_32853;
                }
            }
            // write final result
            {
                ((__local float *) mem_43537)[sext_i32_i64(local_tid_44813)] =
                    x_32851;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44813, 32) == 0) {
            ((__local float *) mem_43537)[sext_i32_i64(local_tid_44813)] =
                x_32852;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float i32_res_32867 = sitofp_i32_f32(x_32843);
    float sqrt_res_32868;
    
    sqrt_res_32868 = futrts_sqrt32(i32_res_32867);
    
    float y_32869 = x_32844 * sqrt_res_32868;
    __local char *mem_43540;
    
    mem_43540 = (__local char *) mem_43540_backing_1;
    
    bool defunc_0_f_res_32871;
    int32_t defunc_0_f_res_32872;
    float defunc_0_f_res_32873;
    int64_t gtid_32631 = sext_i32_i64(ltid_pre_44817);
    int32_t phys_tid_32632 = local_tid_44813;
    __local char *red_arr_mem_44830;
    
    red_arr_mem_44830 = (__local char *) red_arr_mem_44830_backing_2;
    
    __local char *red_arr_mem_44832;
    
    red_arr_mem_44832 = (__local char *) red_arr_mem_44832_backing_3;
    
    __local char *red_arr_mem_44834;
    
    red_arr_mem_44834 = (__local char *) red_arr_mem_44834_backing_4;
    if (slt64(gtid_32631, iota32_arg_27766)) {
        float x_32889 = ((__local float *) mem_43537)[gtid_32631];
        float x_32890 = ((__global float *) mem_43439)[gtid_32631];
        int32_t index_primexp_40594 = sext_i64_i32(gtid_32631);
        float defunc_0_f_res_32892 = x_32889 / y_32869;
        bool cond_32893 = slt32(index_primexp_40594, y_32849);
        bool isnan_res_32894;
        
        isnan_res_32894 = futrts_isnan32(defunc_0_f_res_32892);
        
        bool cond_t_res_32895 = !isnan_res_32894;
        bool x_32896 = cond_32893 && cond_t_res_32895;
        float abs_res_32897 = (float) fabs(defunc_0_f_res_32892);
        bool defunc_2_f_res_t_res_32898 = x_32890 < abs_res_32897;
        bool x_32899 = x_32896 && defunc_2_f_res_t_res_32898;
        float defunc_1_f_res_32900;
        
        if (cond_32893) {
            defunc_1_f_res_32900 = defunc_0_f_res_32892;
        } else {
            defunc_1_f_res_32900 = 0.0F;
        }
        ((__local bool *) red_arr_mem_44830)[gtid_32631] = x_32899;
        ((__local int32_t *) red_arr_mem_44832)[gtid_32631] =
            index_primexp_40594;
        ((__local float *) red_arr_mem_44834)[gtid_32631] =
            defunc_1_f_res_32900;
        ((__local float *) mem_43540)[gtid_32631] = defunc_0_f_res_32892;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44836;
    int32_t skip_waves_44837;
    
    skip_waves_44837 = 1;
    
    bool x_32875;
    int32_t x_32876;
    float x_32877;
    bool x_32878;
    int32_t x_32879;
    float x_32880;
    
    offset_44836 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44813, sext_i64_i32(iota32_arg_27766))) {
            x_32875 = ((__local
                        bool *) red_arr_mem_44830)[sext_i32_i64(local_tid_44813 +
                                                   offset_44836)];
            x_32876 = ((__local
                        int32_t *) red_arr_mem_44832)[sext_i32_i64(local_tid_44813 +
                                                      offset_44836)];
            x_32877 = ((__local
                        float *) red_arr_mem_44834)[sext_i32_i64(local_tid_44813 +
                                                    offset_44836)];
        }
    }
    offset_44836 = 1;
    while (slt32(offset_44836, wave_sizze_44815)) {
        if (slt32(local_tid_44813 + offset_44836,
                  sext_i64_i32(iota32_arg_27766)) && ((local_tid_44813 -
                                                       squot32(local_tid_44813,
                                                               wave_sizze_44815) *
                                                       wave_sizze_44815) & (2 *
                                                                            offset_44836 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_32878 = ((volatile __local
                            bool *) red_arr_mem_44830)[sext_i32_i64(local_tid_44813 +
                                                       offset_44836)];
                x_32879 = ((volatile __local
                            int32_t *) red_arr_mem_44832)[sext_i32_i64(local_tid_44813 +
                                                          offset_44836)];
                x_32880 = ((volatile __local
                            float *) red_arr_mem_44834)[sext_i32_i64(local_tid_44813 +
                                                        offset_44836)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_32881;
                int32_t defunc_1_op_res_32882;
                
                if (x_32875) {
                    defunc_1_op_res_32881 = x_32875;
                    defunc_1_op_res_32882 = x_32876;
                } else {
                    bool x_32883 = x_32878 && x_32878;
                    bool x_32884 = !x_32878;
                    bool y_32885 = x_32875 && x_32884;
                    bool defunc_1_op_res_f_res_32886 = x_32883 || y_32885;
                    int32_t defunc_1_op_res_f_res_32887;
                    
                    if (x_32878) {
                        defunc_1_op_res_f_res_32887 = x_32879;
                    } else {
                        defunc_1_op_res_f_res_32887 = x_32876;
                    }
                    defunc_1_op_res_32881 = defunc_1_op_res_f_res_32886;
                    defunc_1_op_res_32882 = defunc_1_op_res_f_res_32887;
                }
                
                float defunc_1_op_res_32888 = x_32877 + x_32880;
                
                x_32875 = defunc_1_op_res_32881;
                x_32876 = defunc_1_op_res_32882;
                x_32877 = defunc_1_op_res_32888;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_44830)[sext_i32_i64(local_tid_44813)] =
                    x_32875;
                ((volatile __local
                  int32_t *) red_arr_mem_44832)[sext_i32_i64(local_tid_44813)] =
                    x_32876;
                ((volatile __local
                  float *) red_arr_mem_44834)[sext_i32_i64(local_tid_44813)] =
                    x_32877;
            }
        }
        offset_44836 *= 2;
    }
    while (slt32(skip_waves_44837,
                 squot32(sext_i64_i32(computed_group_sizze_32628) +
                         wave_sizze_44815 - 1, wave_sizze_44815))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44836 = skip_waves_44837 * wave_sizze_44815;
        if (slt32(local_tid_44813 + offset_44836,
                  sext_i64_i32(iota32_arg_27766)) && ((local_tid_44813 -
                                                       squot32(local_tid_44813,
                                                               wave_sizze_44815) *
                                                       wave_sizze_44815) == 0 &&
                                                      (squot32(local_tid_44813,
                                                               wave_sizze_44815) &
                                                       (2 * skip_waves_44837 -
                                                        1)) == 0)) {
            // read array element
            {
                x_32878 = ((__local
                            bool *) red_arr_mem_44830)[sext_i32_i64(local_tid_44813 +
                                                       offset_44836)];
                x_32879 = ((__local
                            int32_t *) red_arr_mem_44832)[sext_i32_i64(local_tid_44813 +
                                                          offset_44836)];
                x_32880 = ((__local
                            float *) red_arr_mem_44834)[sext_i32_i64(local_tid_44813 +
                                                        offset_44836)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_32881;
                int32_t defunc_1_op_res_32882;
                
                if (x_32875) {
                    defunc_1_op_res_32881 = x_32875;
                    defunc_1_op_res_32882 = x_32876;
                } else {
                    bool x_32883 = x_32878 && x_32878;
                    bool x_32884 = !x_32878;
                    bool y_32885 = x_32875 && x_32884;
                    bool defunc_1_op_res_f_res_32886 = x_32883 || y_32885;
                    int32_t defunc_1_op_res_f_res_32887;
                    
                    if (x_32878) {
                        defunc_1_op_res_f_res_32887 = x_32879;
                    } else {
                        defunc_1_op_res_f_res_32887 = x_32876;
                    }
                    defunc_1_op_res_32881 = defunc_1_op_res_f_res_32886;
                    defunc_1_op_res_32882 = defunc_1_op_res_f_res_32887;
                }
                
                float defunc_1_op_res_32888 = x_32877 + x_32880;
                
                x_32875 = defunc_1_op_res_32881;
                x_32876 = defunc_1_op_res_32882;
                x_32877 = defunc_1_op_res_32888;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_44830)[sext_i32_i64(local_tid_44813)] =
                    x_32875;
                ((__local
                  int32_t *) red_arr_mem_44832)[sext_i32_i64(local_tid_44813)] =
                    x_32876;
                ((__local
                  float *) red_arr_mem_44834)[sext_i32_i64(local_tid_44813)] =
                    x_32877;
            }
        }
        skip_waves_44837 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32871 = ((__local bool *) red_arr_mem_44830)[(int64_t) 0];
    defunc_0_f_res_32872 = ((__local int32_t *) red_arr_mem_44832)[(int64_t) 0];
    defunc_0_f_res_32873 = ((__local float *) red_arr_mem_44834)[(int64_t) 0];
    
    bool cond_32901 = y_32849 == 0;
    float defunc_0_f_res_32902;
    
    if (cond_32901) {
        defunc_0_f_res_32902 = 0.0F;
    } else {
        float i32_res_32903 = sitofp_i32_f32(y_32849);
        float defunc_0_f_res_f_res_32904 = defunc_0_f_res_32873 / i32_res_32903;
        
        defunc_0_f_res_32902 = defunc_0_f_res_f_res_32904;
    }
    
    bool cond_32905 = !defunc_0_f_res_32871;
    int32_t fst_breakzq_32906;
    
    if (cond_32905) {
        fst_breakzq_32906 = -1;
    } else {
        bool cond_32907 = slt32(defunc_0_f_res_32872, y_32849);
        int32_t adjustValInds_res_32908;
        
        if (cond_32907) {
            int32_t i_32909 = add32(x_32843, defunc_0_f_res_32872);
            int64_t i_32910 = sext_i32_i64(i_32909);
            int32_t x_32911 = ((__global
                                int32_t *) defunc_4_map_res_mem_43336)[gtid_32626 *
                                                                       N_27370 +
                                                                       i_32910];
            int32_t adjustValInds_res_t_res_32912 = sub32(x_32911, n_27374);
            
            adjustValInds_res_32908 = adjustValInds_res_t_res_32912;
        } else {
            adjustValInds_res_32908 = -1;
        }
        fst_breakzq_32906 = adjustValInds_res_32908;
    }
    
    bool cond_32913 = sle32(x_32843, 5);
    bool cond_f_res_32914 = sle32(y_32849, 5);
    bool x_32915 = !cond_32913;
    bool y_32916 = cond_f_res_32914 && x_32915;
    bool cond_32917 = cond_32913 || y_32916;
    int32_t fst_breakzq_32918;
    
    if (cond_32917) {
        fst_breakzq_32918 = -2;
    } else {
        fst_breakzq_32918 = fst_breakzq_32906;
    }
    
    __local char *mem_43542;
    
    mem_43542 = (__local char *) mem_43542_backing_5;
    for (int64_t i_44838 = 0; i_44838 < sdiv_up64(iota32_arg_27794 -
                                                  sext_i32_i64(local_tid_44813),
                                                  computed_group_sizze_32628);
         i_44838++) {
        ((__local float *) mem_43542)[i_44838 * computed_group_sizze_32628 +
                                      sext_i32_i64(local_tid_44813)] = NAN;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_32633 = sext_i32_i64(ltid_pre_44818);
    int32_t phys_tid_32634 = local_tid_44813;
    
    if (slt64(write_i_32633, iota32_arg_27794)) {
        int32_t index_primexp_40597 = sext_i64_i32(write_i_32633);
        float write_value_32923 = ((__local float *) mem_43540)[write_i_32633];
        bool cond_32924 = slt32(index_primexp_40597, y_32849);
        int32_t defunc_0_f_res_32925;
        
        if (cond_32924) {
            int32_t i_32926 = add32(x_32843, index_primexp_40597);
            int64_t i_32927 = sext_i32_i64(i_32926);
            int32_t x_32928 = ((__global
                                int32_t *) defunc_4_map_res_mem_43336)[gtid_32626 *
                                                                       N_27370 +
                                                                       i_32927];
            int32_t defunc_0_f_res_t_res_32929 = sub32(x_32928, n_27374);
            
            defunc_0_f_res_32925 = defunc_0_f_res_t_res_32929;
        } else {
            defunc_0_f_res_32925 = -1;
        }
        
        int64_t defunc_0_f_res_32930 = sext_i32_i64(defunc_0_f_res_32925);
        
        if (sle64((int64_t) 0, defunc_0_f_res_32930) &&
            slt64(defunc_0_f_res_32930, iota32_arg_27794)) {
            ((__local float *) mem_43542)[defunc_0_f_res_32930] =
                write_value_32923;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_44839 = 0; i_44839 < sdiv_up64(iota32_arg_27766 -
                                                  sext_i32_i64(local_tid_44813),
                                                  computed_group_sizze_32628);
         i_44839++) {
        ((__global float *) mem_43546)[gtid_32626 * iota32_arg_27766 +
                                       (i_44839 * computed_group_sizze_32628 +
                                        sext_i32_i64(local_tid_44813))] =
            ((__local float *) mem_43542)[i_44839 * computed_group_sizze_32628 +
                                          sext_i32_i64(local_tid_44813)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_44840 = 0; i_44840 < sdiv_up64(iota32_arg_27766 -
                                                  sext_i32_i64(local_tid_44813),
                                                  computed_group_sizze_32628);
         i_44840++) {
        ((__global float *) mem_43549)[gtid_32626 * iota32_arg_27766 +
                                       (i_44840 * computed_group_sizze_32628 +
                                        sext_i32_i64(local_tid_44813))] =
            ((__local float *) mem_43540)[i_44840 * computed_group_sizze_32628 +
                                          sext_i32_i64(local_tid_44813)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44813 == 0) {
        ((__global int32_t *) mem_43551)[gtid_32626] = fst_breakzq_32918;
    }
    if (local_tid_44813 == 0) {
        ((__global float *) mem_43553)[gtid_32626] = defunc_0_f_res_32902;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_40730(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42637_backing_aligned_0,
                                                    int64_t m_27371,
                                                    int32_t n_27374,
                                                    int64_t i32_res_27386,
                                                    int64_t Ty_40718,
                                                    int64_t Tx_40719,
                                                    int64_t gridDim_x_40720,
                                                    int64_t gridDim_y_40721,
                                                    int64_t group_sizze_tile3d_40725,
                                                    int64_t count_shmem_40726,
                                                    __global
                                                    unsigned char *mem_42550,
                                                    __global
                                                    unsigned char *mem_42554,
                                                    __global
                                                    unsigned char *mem_42625,
                                                    __global
                                                    unsigned char *mem_42685)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42637_backing_0 = (__local volatile
                                                           char *) mem_42637_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43890;
    int32_t local_tid_43891;
    int64_t group_sizze_43894;
    int32_t wave_sizze_43893;
    int32_t group_tid_43892;
    
    global_tid_43890 = get_global_id(0);
    local_tid_43891 = get_local_id(0);
    group_sizze_43894 = get_local_size(0);
    wave_sizze_43893 = LOCKSTEP_WIDTH;
    group_tid_43892 = get_group_id(0);
    
    int32_t gid_flat_40730;
    
    gid_flat_40730 = group_tid_43892;
    
    int32_t ltid_pre_43895;
    
    ltid_pre_43895 = squot32(local_tid_43891, sext_i64_i32(Ty_40718) *
                             sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43896;
    
    ltid_pre_43896 = squot32(local_tid_43891 - squot32(local_tid_43891,
                                                       sext_i64_i32(Ty_40718) *
                                                       sext_i64_i32(Tx_40719)) *
                             (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)),
                             sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43897;
    
    ltid_pre_43897 = local_tid_43891 - squot32(local_tid_43891,
                                               sext_i64_i32(Ty_40718) *
                                               sext_i64_i32(Tx_40719)) *
        (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)) -
        squot32(local_tid_43891 - squot32(local_tid_43891,
                                          sext_i64_i32(Ty_40718) *
                                          sext_i64_i32(Tx_40719)) *
                (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)),
                sext_i64_i32(Tx_40719)) * sext_i64_i32(Tx_40719);
    
    int32_t ltid_pre_43898;
    
    ltid_pre_43898 = squot32(local_tid_43891, sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43899;
    
    ltid_pre_43899 = local_tid_43891 - squot32(local_tid_43891,
                                               sext_i64_i32(Tx_40719)) *
        sext_i64_i32(Tx_40719);
    
    int32_t ltid_pre_43900;
    
    ltid_pre_43900 = local_tid_43891;
    
    int64_t gid_zz_40729;
    
    gid_zz_40729 = squot64(sext_i32_i64(group_tid_43892), gridDim_y_40721 *
                           gridDim_x_40720);
    
    int64_t gid_y_40728;
    
    gid_y_40728 = squot64(sext_i32_i64(group_tid_43892) -
                          squot64(sext_i32_i64(group_tid_43892),
                                  gridDim_y_40721 * gridDim_x_40720) *
                          (gridDim_y_40721 * gridDim_x_40720), gridDim_x_40720);
    
    int64_t gid_x_40727;
    
    gid_x_40727 = sext_i32_i64(group_tid_43892) -
        squot64(sext_i32_i64(group_tid_43892), gridDim_y_40721 *
                gridDim_x_40720) * (gridDim_y_40721 * gridDim_x_40720) -
        squot64(sext_i32_i64(group_tid_43892) -
                squot64(sext_i32_i64(group_tid_43892), gridDim_y_40721 *
                        gridDim_x_40720) * (gridDim_y_40721 * gridDim_x_40720),
                gridDim_x_40720) * gridDim_x_40720;
    
    int64_t ii_40731;
    
    ii_40731 = (int64_t) 30 * gid_zz_40729;
    
    int64_t jj1_40732 = Ty_40718 * gid_y_40728;
    int64_t jj2_40733 = Tx_40719 * gid_x_40727;
    float mem_42635[30];
    int64_t ltid_y_40736 = sext_i32_i64(ltid_pre_43898);
    int64_t ltid_x_40734 = sext_i32_i64(ltid_pre_43899);
    int32_t ltid_flat_40735 = local_tid_43891;
    float mem_42629[30];
    
    for (int32_t i_42427 = 0; i_42427 < 30; i_42427++) {
        int64_t i_40744 = sext_i32_i64(i_42427);
        
        mem_42629[i_40744] = 0.0F;
    }
    for (int64_t i_43902 = 0; i_43902 < (int64_t) 30; i_43902++) {
        mem_42635[i_43902] = mem_42629[i_43902];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42637;
    
    mem_42637 = (__local char *) mem_42637_backing_0;
    
    float loop_mem_42667[30];
    float mem_param_42638[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42638[i_1] = mem_42635[i_1];
    for (int32_t i_42429 = 0; i_42429 < n_27374; i_42429++) {
        int64_t i_40749 = sext_i32_i64(i_42429);
        
        for (int64_t i_40752 = 0; i_40752 < count_shmem_40726; i_40752++) {
            int64_t offs_40765 = group_sizze_tile3d_40725 * i_40752;
            int64_t ltid_40755 = sext_i32_i64(ltid_pre_43900);
            int32_t ltid_flat_40754 = local_tid_43891;
            int64_t loc_ind_40766 = ltid_40755 + offs_40765;
            int64_t gtid_40767 = ii_40731 + loc_ind_40766;
            bool cond_40768 = slt64(gtid_40767, m_27371);
            float y_elem_40769;
            
            if (cond_40768) {
                float Y_elem_40771 = ((__global float *) mem_42625)[i_40749 *
                                                                    m_27371 +
                                                                    gtid_40767];
                
                y_elem_40769 = Y_elem_40771;
            } else {
                y_elem_40769 = 0.0F;
            }
            
            bool cond_40773 = slt64(loc_ind_40766, (int64_t) 30);
            int64_t y_loc_ind_40774;
            
            if (cond_40773) {
                y_loc_ind_40774 = loc_ind_40766;
            } else {
                y_loc_ind_40774 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_40774) && slt64(y_loc_ind_40774,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42637)[y_loc_ind_40774] = y_elem_40769;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42666[30];
        int64_t ltid_y_40780 = sext_i32_i64(ltid_pre_43898);
        int64_t ltid_x_40778 = sext_i32_i64(ltid_pre_43899);
        int32_t ltid_flat_40779 = local_tid_43891;
        int64_t gtid_40807 = jj1_40732 + ltid_y_40780;
        int64_t gtid_40808 = jj2_40733 + ltid_x_40778;
        bool binop_x_40810 = slt64(gtid_40807, i32_res_27386);
        bool binop_y_40811 = slt64(gtid_40808, i32_res_27386);
        bool cond_40812 = binop_x_40810 && binop_y_40811;
        float mem_43607[30];
        
        if (cond_40812) {
            float x_40815 = ((__global float *) mem_42550)[i_40749 *
                                                           i32_res_27386 +
                                                           gtid_40807];
            float x_40817 = ((__global float *) mem_42554)[i_40749 *
                                                           i32_res_27386 +
                                                           gtid_40808];
            
            for (int32_t i_42428 = 0; i_42428 < 30; i_42428++) {
                int64_t i_40819 = sext_i32_i64(i_42428);
                int64_t gtid_40821 = ii_40731 + i_40819;
                bool cond_40822 = slt64(gtid_40821, m_27371);
                
                if (cond_40822) {
                    float inp_reg_var2zz_40824 = ((__local
                                                   float *) mem_42637)[i_40819];
                    float res_reg_var2zz_40825 = mem_param_42638[i_40819];
                    float x_40829 = x_40815 * x_40817;
                    bool isnan_res_40830;
                    
                    isnan_res_40830 = futrts_isnan32(inp_reg_var2zz_40824);
                    
                    float y_40831;
                    
                    if (isnan_res_40830) {
                        y_40831 = 0.0F;
                    } else {
                        y_40831 = 1.0F;
                    }
                    
                    float defunc_2_f_res_40832 = x_40829 * y_40831;
                    float defunc_1_op_res_40836 = res_reg_var2zz_40825 +
                          defunc_2_f_res_40832;
                    
                    mem_param_42638[i_40819] = defunc_1_op_res_40836;
                }
            }
            for (int64_t i_43908 = 0; i_43908 < (int64_t) 30; i_43908++) {
                mem_43607[i_43908] = mem_param_42638[i_43908];
            }
        } else {
            for (int64_t i_43909 = 0; i_43909 < (int64_t) 30; i_43909++) {
                mem_43607[i_43909] = mem_param_42638[i_43909];
            }
        }
        for (int64_t i_43910 = 0; i_43910 < (int64_t) 30; i_43910++) {
            mem_42666[i_43910] = mem_43607[i_43910];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_43903[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_43903[i_2] = mem_42666[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42638[i_3] = mem_param_tmp_43903[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42667[i_4] = mem_param_42638[i_4];
    
    float mem_42681[30 * 1 * 1];
    int64_t ltid_zz_40845 = sext_i32_i64(ltid_pre_43895);
    int64_t ltid_y_40844 = sext_i32_i64(ltid_pre_43896);
    int64_t ltid_x_40842 = sext_i32_i64(ltid_pre_43897);
    int32_t ltid_flat_40843 = local_tid_43891;
    float mem_42675[30 * 1 * 1];
    
    for (int32_t i_42431 = 0; i_42431 < 30; i_42431++) {
        int64_t i_40854 = sext_i32_i64(i_42431);
        
        for (int64_t i_43912 = 0; i_43912 < (int64_t) 1; i_43912++) {
            mem_42675[i_40854 + i_43912] = loop_mem_42667[i_40854 + i_43912];
        }
    }
    for (int64_t i_43913 = 0; i_43913 < (int64_t) 30; i_43913++) {
        for (int64_t i_43914 = 0; i_43914 < (int64_t) 1; i_43914++) {
            for (int64_t i_43915 = 0; i_43915 < (int64_t) 1; i_43915++) {
                mem_42681[i_43913 + i_43914 + i_43915] = mem_42675[i_43913 +
                                                                   i_43914 +
                                                                   i_43915];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_43916 = squot64(sext_i32_i64(local_tid_43891), Ty_40718 *
                                       Tx_40719);
    int64_t reg_tile_i_43917 = squot64(sext_i32_i64(local_tid_43891) -
                                       squot64(sext_i32_i64(local_tid_43891),
                                               Ty_40718 * Tx_40719) *
                                       (Ty_40718 * Tx_40719), Tx_40719);
    int64_t reg_tile_i_43918 = sext_i32_i64(local_tid_43891) -
            squot64(sext_i32_i64(local_tid_43891), Ty_40718 * Tx_40719) *
            (Ty_40718 * Tx_40719) - squot64(sext_i32_i64(local_tid_43891) -
                                            squot64(sext_i32_i64(local_tid_43891),
                                                    Ty_40718 * Tx_40719) *
                                            (Ty_40718 * Tx_40719), Tx_40719) *
            Tx_40719;
    int64_t tile_dim_start_43919 = (int64_t) 30 * (gid_zz_40729 +
                                                   reg_tile_i_43916);
    int64_t tile_dim_start_43920 = Ty_40718 * gid_y_40728 + reg_tile_i_43917;
    int64_t tile_dim_start_43921 = Tx_40719 * gid_x_40727 + reg_tile_i_43918;
    
    for (int64_t nest_i_43922 = 0; nest_i_43922 < (int64_t) 30;
         nest_i_43922++) {
        for (int64_t nest_i_43923 = 0; nest_i_43923 < (int64_t) 1;
             nest_i_43923++) {
            for (int64_t nest_i_43924 = 0; nest_i_43924 < (int64_t) 1;
                 nest_i_43924++) {
                if ((slt64(tile_dim_start_43919 + nest_i_43922, m_27371) &&
                     slt64(tile_dim_start_43920 + nest_i_43923,
                           i32_res_27386)) && slt64(tile_dim_start_43921 +
                                                    nest_i_43924,
                                                    i32_res_27386)) {
                    ((__global float *) mem_42685)[(tile_dim_start_43919 +
                                                    nest_i_43922) *
                                                   (i32_res_27386 *
                                                    i32_res_27386) +
                                                   (tile_dim_start_43920 +
                                                    nest_i_43923) *
                                                   i32_res_27386 +
                                                   (tile_dim_start_43921 +
                                                    nest_i_43924)] =
                        mem_42681[nest_i_43922 + nest_i_43923 + nest_i_43924];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_40883(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42825_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_42823_backing_aligned_1,
                                                    int64_t N_27370,
                                                    int64_t m_27371,
                                                    int64_t i32_res_27380,
                                                    int64_t i32_res_27386,
                                                    int64_t gridDim_x_40877,
                                                    int64_t full_tiles_40908,
                                                    int64_t kk_41115, __global
                                                    unsigned char *images_mem_42538,
                                                    __global
                                                    unsigned char *mem_42550,
                                                    __global
                                                    unsigned char *mem_42997)
{
    #define Ty_40864 (mainDetailedziTy_40861)
    #define Ry_40865 (mainDetailedziRy_40863)
    #define Tx_40866 (mainDetailedziTx_40860)
    #define Rx_40867 (mainDetailedziRx_40862)
    #define Tk_40868 (mainDetailedziTk_40859)
    #define tk_div_tx_40869 (sdiv_up64(mainDetailedziTk_40859, mainDetailedziTx_40860))
    #define tk_div_ty_40870 (sdiv_up64(mainDetailedziTk_40859, mainDetailedziTy_40861))
    #define TxRx_40871 (mainDetailedziTx_40860 * mainDetailedziRx_40862)
    #define TyRy_40872 (mainDetailedziTy_40861 * mainDetailedziRy_40863)
    #define a_loc_szz_40874 (mainDetailedziTk_40859 * (mainDetailedziTy_40861 * mainDetailedziRy_40863))
    #define b_loc_szz_40876 (mainDetailedziRx_40862 * (mainDetailedziTx_40860 * mainDetailedziTk_40859))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42825_backing_1 = (__local volatile
                                                           char *) mem_42825_backing_aligned_0;
    __local volatile char *restrict mem_42823_backing_0 = (__local volatile
                                                           char *) mem_42823_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44065;
    int32_t local_tid_44066;
    int64_t group_sizze_44069;
    int32_t wave_sizze_44068;
    int32_t group_tid_44067;
    
    global_tid_44065 = get_global_id(0);
    local_tid_44066 = get_local_id(0);
    group_sizze_44069 = get_local_size(0);
    wave_sizze_44068 = LOCKSTEP_WIDTH;
    group_tid_44067 = get_group_id(0);
    
    int32_t gid_flat_40883;
    
    gid_flat_40883 = group_tid_44067;
    
    int32_t ltid_pre_44070;
    
    ltid_pre_44070 = squot32(local_tid_44066, sext_i64_i32(Tx_40866));
    
    int32_t ltid_pre_44071;
    
    ltid_pre_44071 = local_tid_44066 - squot32(local_tid_44066,
                                               sext_i64_i32(Tx_40866)) *
        sext_i64_i32(Tx_40866);
    
    int64_t gid_y_40882;
    
    gid_y_40882 = squot64(sext_i32_i64(group_tid_44067), gridDim_x_40877);
    
    int64_t gid_x_40881;
    
    gid_x_40881 = sext_i32_i64(group_tid_44067) -
        squot64(sext_i32_i64(group_tid_44067), gridDim_x_40877) *
        gridDim_x_40877;
    
    int64_t iii_40884;
    
    iii_40884 = TyRy_40872 * gid_y_40882;
    
    int64_t jjj_40885 = TxRx_40871 * gid_x_40881;
    float mem_42821[Ry_40865 * Rx_40867];
    int64_t ltid_y_40888 = sext_i32_i64(ltid_pre_44070);
    int64_t ltid_x_40886 = sext_i32_i64(ltid_pre_44071);
    int32_t ltid_flat_40887 = local_tid_44066;
    float mem_42812[Ry_40865 * Rx_40867];
    
    for (int64_t i_40899 = 0; i_40899 < Ry_40865; i_40899++) {
        for (int64_t i_40902 = 0; i_40902 < Rx_40867; i_40902++) {
            mem_42812[i_40899 * Rx_40867 + i_40902] = 0.0F;
        }
    }
    for (int64_t i_44074 = 0; i_44074 < Ry_40865; i_44074++) {
        for (int64_t i_44075 = 0; i_44075 < Rx_40867; i_44075++) {
            mem_42821[i_44074 * Rx_40867 + i_44075] = mem_42812[i_44074 *
                                                                Rx_40867 +
                                                                i_44075];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42823;
    
    mem_42823 = (__local char *) mem_42823_backing_0;
    
    __local char *mem_42825;
    
    mem_42825 = (__local char *) mem_42825_backing_1;
    
    float mem_42896[Ry_40865];
    float mem_42900[Rx_40867];
    float loop_mem_42912[Ry_40865 * Rx_40867];
    float mem_param_42826[Ry_40865 * Rx_40867];
    
    for (int32_t i_2 = 0; i_2 < Ry_40865 * Rx_40867; i_2++)
        mem_param_42826[i_2] = mem_42821[i_2];
    for (int64_t i_40909 = 0; i_40909 < full_tiles_40908; i_40909++) {
        int64_t kk_40913 = Tk_40868 * i_40909;
        
        for (int64_t i_40914 = 0; i_40914 < Ry_40865; i_40914++) {
            int64_t binop_y_40937 = Ty_40864 * i_40914;
            
            for (int64_t i_40916 = 0; i_40916 < tk_div_tx_40869; i_40916++) {
                int64_t binop_y_40935 = Tx_40866 * i_40916;
                int64_t ltid_x_40918 = sext_i32_i64(ltid_pre_44070);
                int64_t ltid_y_40919 = sext_i32_i64(ltid_pre_44071);
                int32_t ltid_flat_40920 = local_tid_44066;
                int64_t k_40936 = ltid_y_40919 + binop_y_40935;
                int64_t i_40938 = ltid_x_40918 + binop_y_40937;
                int64_t gtid_40939 = iii_40884 + i_40938;
                int64_t A_col_idx_40940 = kk_40913 + k_40936;
                bool cond_40941 = slt64(gtid_40939, m_27371);
                float A_elem_40942;
                
                if (cond_40941) {
                    float A_elem_40944 = ((__global
                                           float *) images_mem_42538)[gtid_40939 *
                                                                      N_27370 +
                                                                      A_col_idx_40940];
                    
                    A_elem_40942 = A_elem_40944;
                } else {
                    A_elem_40942 = 0.0F;
                }
                
                bool cond_40946 = slt64(k_40936, Tk_40868);
                int64_t a_loc_ind_40947;
                
                if (cond_40946) {
                    int64_t binop_y_40948 = Tk_40868 * i_40938;
                    int64_t loc_fi_40949 = k_40936 + binop_y_40948;
                    
                    a_loc_ind_40947 = loc_fi_40949;
                } else {
                    a_loc_ind_40947 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_40947) &&
                    slt64(a_loc_ind_40947, a_loc_szz_40874)) {
                    ((__local float *) mem_42823)[a_loc_ind_40947] =
                        A_elem_40942;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_40954 = 0; i_40954 < tk_div_ty_40870; i_40954++) {
            int64_t binop_y_40975 = Ty_40864 * i_40954;
            
            for (int64_t i_40956 = 0; i_40956 < Rx_40867; i_40956++) {
                int64_t binop_y_40977 = Tx_40866 * i_40956;
                int64_t ltid_x_40958 = sext_i32_i64(ltid_pre_44070);
                int64_t ltid_y_40959 = sext_i32_i64(ltid_pre_44071);
                int32_t ltid_flat_40960 = local_tid_44066;
                int64_t k_40976 = ltid_x_40958 + binop_y_40975;
                int64_t j_40978 = ltid_y_40959 + binop_y_40977;
                int64_t gtid_40979 = jjj_40885 + j_40978;
                int64_t B_row_idx_40980 = kk_40913 + k_40976;
                bool cond_40981 = slt64(gtid_40979, i32_res_27386);
                float B_elem_40982;
                
                if (cond_40981) {
                    float B_elem_40984 = ((__global
                                           float *) mem_42550)[B_row_idx_40980 *
                                                               i32_res_27386 +
                                                               gtid_40979];
                    
                    B_elem_40982 = B_elem_40984;
                } else {
                    B_elem_40982 = 0.0F;
                }
                
                bool cond_40986 = slt64(k_40976, Tk_40868);
                int64_t b_loc_ind_40987;
                
                if (cond_40986) {
                    int64_t binop_y_40988 = TxRx_40871 * k_40976;
                    int64_t loc_fi_40989 = j_40978 + binop_y_40988;
                    
                    b_loc_ind_40987 = loc_fi_40989;
                } else {
                    b_loc_ind_40987 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_40987) &&
                    slt64(b_loc_ind_40987, b_loc_szz_40876)) {
                    ((__local float *) mem_42825)[b_loc_ind_40987] =
                        B_elem_40982;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_42911[Ry_40865 * Rx_40867];
        float mem_param_42883[Ry_40865 * Rx_40867];
        
        for (int32_t i_3 = 0; i_3 < Ry_40865 * Rx_40867; i_3++)
            mem_param_42883[i_3] = mem_param_42826[i_3];
        for (int64_t i_40994 = 0; i_40994 < Tk_40868; i_40994++) {
            int64_t binop_y_41033 = TxRx_40871 * i_40994;
            int64_t ltid_y_40998 = sext_i32_i64(ltid_pre_44070);
            int64_t ltid_x_40996 = sext_i32_i64(ltid_pre_44071);
            int32_t ltid_flat_40997 = local_tid_44066;
            float mem_42886[Ry_40865];
            float mem_42888[Rx_40867];
            int64_t binop_x_41024 = Ry_40865 * ltid_y_40998;
            
            for (int64_t i_41022 = 0; i_41022 < Ry_40865; i_41022++) {
                int64_t binop_x_41025 = i_41022 + binop_x_41024;
                int64_t binop_y_41026 = Tk_40868 * binop_x_41025;
                int64_t a_loc_ind_41027 = i_40994 + binop_y_41026;
                
                for (int64_t i_44087 = 0; i_44087 < (int64_t) 1; i_44087++) {
                    mem_42886[i_41022 + i_44087] = ((__local
                                                     float *) mem_42823)[a_loc_ind_41027 +
                                                                         i_44087];
                }
            }
            
            int64_t binop_y_41035 = Rx_40867 * ltid_x_40996;
            
            for (int64_t i_41031 = 0; i_41031 < Rx_40867; i_41031++) {
                int64_t binop_x_41034 = i_41031 + binop_y_41033;
                int64_t b_loc_ind_41036 = binop_x_41034 + binop_y_41035;
                
                for (int64_t i_44089 = 0; i_44089 < (int64_t) 1; i_44089++) {
                    mem_42888[i_41031 + i_44089] = ((__local
                                                     float *) mem_42825)[b_loc_ind_41036 +
                                                                         i_44089];
                }
            }
            for (int64_t i_44090 = 0; i_44090 < Ry_40865; i_44090++) {
                mem_42896[i_44090] = mem_42886[i_44090];
            }
            for (int64_t i_44091 = 0; i_44091 < Rx_40867; i_44091++) {
                mem_42900[i_44091] = mem_42888[i_44091];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_42910[Ry_40865 * Rx_40867];
            int64_t ltid_y_41043 = sext_i32_i64(ltid_pre_44070);
            int64_t ltid_x_41041 = sext_i32_i64(ltid_pre_44071);
            int32_t ltid_flat_41042 = local_tid_44066;
            int64_t binop_y_41086 = Ry_40865 * ltid_y_41043;
            int64_t binop_y_41090 = Rx_40867 * ltid_x_41041;
            
            for (int64_t i_41080 = 0; i_41080 < Ry_40865; i_41080++) {
                int64_t binop_x_41085 = iii_40884 + i_41080;
                int64_t cmpop_x_41087 = binop_x_41085 + binop_y_41086;
                bool binop_x_41088 = slt64(cmpop_x_41087, m_27371);
                
                for (int64_t i_41083 = 0; i_41083 < Rx_40867; i_41083++) {
                    int64_t binop_x_41089 = jjj_40885 + i_41083;
                    int64_t cmpop_x_41091 = binop_x_41089 + binop_y_41090;
                    bool binop_y_41092 = slt64(cmpop_x_41091, i32_res_27386);
                    bool cond_41093 = binop_x_41088 && binop_y_41092;
                    
                    if (cond_41093) {
                        float a_41095 = mem_42896[i_41080];
                        float c_41097 = mem_param_42883[i_41080 * Rx_40867 +
                                                        i_41083];
                        bool isnan_res_41100;
                        
                        isnan_res_41100 = futrts_isnan32(a_41095);
                        
                        float defunc_1_f_res_41101;
                        
                        if (isnan_res_41100) {
                            defunc_1_f_res_41101 = 0.0F;
                        } else {
                            float b_41096 = mem_42900[i_41083];
                            float defunc_1_f_res_f_res_41102 = a_41095 *
                                  b_41096;
                            
                            defunc_1_f_res_41101 = defunc_1_f_res_f_res_41102;
                        }
                        
                        float defunc_1_op_res_41106 = c_41097 +
                              defunc_1_f_res_41101;
                        
                        mem_param_42883[i_41080 * Rx_40867 + i_41083] =
                            defunc_1_op_res_41106;
                    }
                }
            }
            for (int64_t i_44094 = 0; i_44094 < Ry_40865; i_44094++) {
                for (int64_t i_44095 = 0; i_44095 < Rx_40867; i_44095++) {
                    mem_42910[i_44094 * Rx_40867 + i_44095] =
                        mem_param_42883[i_44094 * Rx_40867 + i_44095];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44084[Ry_40865 * Rx_40867];
            
            for (int32_t i_4 = 0; i_4 < Ry_40865 * Rx_40867; i_4++)
                mem_param_tmp_44084[i_4] = mem_42910[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_40865 * Rx_40867; i_5++)
                mem_param_42883[i_5] = mem_param_tmp_44084[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_40865 * Rx_40867; i_6++)
            loop_mem_42911[i_6] = mem_param_42883[i_6];
        
        float mem_param_tmp_44076[Ry_40865 * Rx_40867];
        
        for (int32_t i_7 = 0; i_7 < Ry_40865 * Rx_40867; i_7++)
            mem_param_tmp_44076[i_7] = loop_mem_42911[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_40865 * Rx_40867; i_8++)
            mem_param_42826[i_8] = mem_param_tmp_44076[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_40865 * Rx_40867; i_9++)
        loop_mem_42912[i_9] = mem_param_42826[i_9];
    for (int64_t i_41116 = 0; i_41116 < Ry_40865; i_41116++) {
        int64_t binop_y_41141 = Ty_40864 * i_41116;
        
        for (int64_t i_41118 = 0; i_41118 < tk_div_tx_40869; i_41118++) {
            int64_t binop_y_41139 = Tx_40866 * i_41118;
            int64_t ltid_x_41120 = sext_i32_i64(ltid_pre_44070);
            int64_t ltid_y_41121 = sext_i32_i64(ltid_pre_44071);
            int32_t ltid_flat_41122 = local_tid_44066;
            int64_t k_41140 = ltid_y_41121 + binop_y_41139;
            int64_t i_41142 = ltid_x_41120 + binop_y_41141;
            int64_t gtid_41143 = iii_40884 + i_41142;
            int64_t A_col_idx_41144 = kk_41115 + k_41140;
            bool binop_x_41145 = slt64(gtid_41143, m_27371);
            bool binop_y_41146 = slt64(A_col_idx_41144, i32_res_27380);
            bool cond_41147 = binop_x_41145 && binop_y_41146;
            float A_elem_41148;
            
            if (cond_41147) {
                float A_elem_41150 = ((__global
                                       float *) images_mem_42538)[gtid_41143 *
                                                                  N_27370 +
                                                                  A_col_idx_41144];
                
                A_elem_41148 = A_elem_41150;
            } else {
                A_elem_41148 = 0.0F;
            }
            
            bool cond_41152 = slt64(k_41140, Tk_40868);
            int64_t a_loc_ind_41153;
            
            if (cond_41152) {
                int64_t binop_y_41154 = Tk_40868 * i_41142;
                int64_t loc_fi_41155 = k_41140 + binop_y_41154;
                
                a_loc_ind_41153 = loc_fi_41155;
            } else {
                a_loc_ind_41153 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41153) && slt64(a_loc_ind_41153,
                                                             a_loc_szz_40874)) {
                ((__local float *) mem_42823)[a_loc_ind_41153] = A_elem_41148;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41160 = 0; i_41160 < tk_div_ty_40870; i_41160++) {
        int64_t binop_y_41183 = Ty_40864 * i_41160;
        
        for (int64_t i_41162 = 0; i_41162 < Rx_40867; i_41162++) {
            int64_t binop_y_41185 = Tx_40866 * i_41162;
            int64_t ltid_x_41164 = sext_i32_i64(ltid_pre_44070);
            int64_t ltid_y_41165 = sext_i32_i64(ltid_pre_44071);
            int32_t ltid_flat_41166 = local_tid_44066;
            int64_t k_41184 = ltid_x_41164 + binop_y_41183;
            int64_t j_41186 = ltid_y_41165 + binop_y_41185;
            int64_t gtid_41187 = jjj_40885 + j_41186;
            int64_t B_row_idx_41188 = kk_41115 + k_41184;
            bool binop_x_41189 = slt64(gtid_41187, i32_res_27386);
            bool binop_y_41190 = slt64(B_row_idx_41188, i32_res_27380);
            bool cond_41191 = binop_x_41189 && binop_y_41190;
            float B_elem_41192;
            
            if (cond_41191) {
                float B_elem_41194 = ((__global
                                       float *) mem_42550)[B_row_idx_41188 *
                                                           i32_res_27386 +
                                                           gtid_41187];
                
                B_elem_41192 = B_elem_41194;
            } else {
                B_elem_41192 = 0.0F;
            }
            
            bool cond_41196 = slt64(k_41184, Tk_40868);
            int64_t b_loc_ind_41197;
            
            if (cond_41196) {
                int64_t binop_y_41198 = TxRx_40871 * k_41184;
                int64_t loc_fi_41199 = j_41186 + binop_y_41198;
                
                b_loc_ind_41197 = loc_fi_41199;
            } else {
                b_loc_ind_41197 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41197) && slt64(b_loc_ind_41197,
                                                             b_loc_szz_40876)) {
                ((__local float *) mem_42825)[b_loc_ind_41197] = B_elem_41192;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_42978[Ry_40865];
    float mem_42982[Rx_40867];
    float mem_42992[Ry_40865 * Rx_40867];
    float loop_mem_42994[Ry_40865 * Rx_40867];
    float mem_param_42965[Ry_40865 * Rx_40867];
    
    for (int32_t i_10 = 0; i_10 < Ry_40865 * Rx_40867; i_10++)
        mem_param_42965[i_10] = loop_mem_42912[i_10];
    for (int64_t i_41204 = 0; i_41204 < Tk_40868; i_41204++) {
        int64_t cmpop_x_41206 = kk_41115 + i_41204;
        bool cond_41207 = slt64(cmpop_x_41206, i32_res_27380);
        float mem_43625[Ry_40865 * Rx_40867];
        
        if (cond_41207) {
            int64_t binop_y_41245 = TxRx_40871 * i_41204;
            int64_t bytes_42967 = (int64_t) 4 * Ry_40865;
            int64_t bytes_42969 = (int64_t) 4 * Rx_40867;
            int64_t ltid_y_41210 = sext_i32_i64(ltid_pre_44070);
            int64_t ltid_x_41208 = sext_i32_i64(ltid_pre_44071);
            int32_t ltid_flat_41209 = local_tid_44066;
            float mem_42968[Ry_40865];
            float mem_42970[Rx_40867];
            int64_t binop_x_41236 = Ry_40865 * ltid_y_41210;
            
            for (int64_t i_41234 = 0; i_41234 < Ry_40865; i_41234++) {
                int64_t binop_x_41237 = i_41234 + binop_x_41236;
                int64_t binop_y_41238 = Tk_40868 * binop_x_41237;
                int64_t a_loc_ind_41239 = i_41204 + binop_y_41238;
                
                for (int64_t i_44103 = 0; i_44103 < (int64_t) 1; i_44103++) {
                    mem_42968[i_41234 + i_44103] = ((__local
                                                     float *) mem_42823)[a_loc_ind_41239 +
                                                                         i_44103];
                }
            }
            
            int64_t binop_y_41247 = Rx_40867 * ltid_x_41208;
            
            for (int64_t i_41243 = 0; i_41243 < Rx_40867; i_41243++) {
                int64_t binop_x_41246 = i_41243 + binop_y_41245;
                int64_t b_loc_ind_41248 = binop_x_41246 + binop_y_41247;
                
                for (int64_t i_44105 = 0; i_44105 < (int64_t) 1; i_44105++) {
                    mem_42970[i_41243 + i_44105] = ((__local
                                                     float *) mem_42825)[b_loc_ind_41248 +
                                                                         i_44105];
                }
            }
            for (int64_t i_44106 = 0; i_44106 < Ry_40865; i_44106++) {
                mem_42978[i_44106] = mem_42968[i_44106];
            }
            for (int64_t i_44107 = 0; i_44107 < Rx_40867; i_44107++) {
                mem_42982[i_44107] = mem_42970[i_44107];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41255 = sext_i32_i64(ltid_pre_44070);
            int64_t ltid_x_41253 = sext_i32_i64(ltid_pre_44071);
            int32_t ltid_flat_41254 = local_tid_44066;
            int64_t binop_y_41298 = Ry_40865 * ltid_y_41255;
            int64_t binop_y_41302 = Rx_40867 * ltid_x_41253;
            
            for (int64_t i_41292 = 0; i_41292 < Ry_40865; i_41292++) {
                int64_t binop_x_41297 = iii_40884 + i_41292;
                int64_t cmpop_x_41299 = binop_x_41297 + binop_y_41298;
                bool binop_x_41300 = slt64(cmpop_x_41299, m_27371);
                
                for (int64_t i_41295 = 0; i_41295 < Rx_40867; i_41295++) {
                    int64_t binop_x_41301 = jjj_40885 + i_41295;
                    int64_t cmpop_x_41303 = binop_x_41301 + binop_y_41302;
                    bool binop_y_41304 = slt64(cmpop_x_41303, i32_res_27386);
                    bool cond_41305 = binop_x_41300 && binop_y_41304;
                    
                    if (cond_41305) {
                        float a_41307 = mem_42978[i_41292];
                        float c_41309 = mem_param_42965[i_41292 * Rx_40867 +
                                                        i_41295];
                        bool isnan_res_41312;
                        
                        isnan_res_41312 = futrts_isnan32(a_41307);
                        
                        float defunc_1_f_res_41313;
                        
                        if (isnan_res_41312) {
                            defunc_1_f_res_41313 = 0.0F;
                        } else {
                            float b_41308 = mem_42982[i_41295];
                            float defunc_1_f_res_f_res_41314 = a_41307 *
                                  b_41308;
                            
                            defunc_1_f_res_41313 = defunc_1_f_res_f_res_41314;
                        }
                        
                        float defunc_1_op_res_41318 = c_41309 +
                              defunc_1_f_res_41313;
                        
                        mem_param_42965[i_41292 * Rx_40867 + i_41295] =
                            defunc_1_op_res_41318;
                    }
                }
            }
            for (int64_t i_44110 = 0; i_44110 < Ry_40865; i_44110++) {
                for (int64_t i_44111 = 0; i_44111 < Rx_40867; i_44111++) {
                    mem_42992[i_44110 * Rx_40867 + i_44111] =
                        mem_param_42965[i_44110 * Rx_40867 + i_44111];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44112 = 0; i_44112 < Ry_40865; i_44112++) {
                for (int64_t i_44113 = 0; i_44113 < Rx_40867; i_44113++) {
                    mem_43625[i_44112 * Rx_40867 + i_44113] =
                        mem_42992[i_44112 * Rx_40867 + i_44113];
                }
            }
        } else {
            for (int64_t i_44114 = 0; i_44114 < Ry_40865; i_44114++) {
                for (int64_t i_44115 = 0; i_44115 < Rx_40867; i_44115++) {
                    mem_43625[i_44114 * Rx_40867 + i_44115] =
                        mem_param_42965[i_44114 * Rx_40867 + i_44115];
                }
            }
        }
        
        float mem_param_tmp_44100[Ry_40865 * Rx_40867];
        
        for (int32_t i_11 = 0; i_11 < Ry_40865 * Rx_40867; i_11++)
            mem_param_tmp_44100[i_11] = mem_43625[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_40865 * Rx_40867; i_12++)
            mem_param_42965[i_12] = mem_param_tmp_44100[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_40865 * Rx_40867; i_13++)
        loop_mem_42994[i_13] = mem_param_42965[i_13];
    
    int64_t reg_tile_i_44116 = squot64(sext_i32_i64(local_tid_44066), Tx_40866);
    int64_t reg_tile_i_44117 = sext_i32_i64(local_tid_44066) -
            squot64(sext_i32_i64(local_tid_44066), Tx_40866) * Tx_40866;
    int64_t tile_dim_start_44118 = Ry_40865 * (Ty_40864 * gid_y_40882 +
                                               reg_tile_i_44116);
    int64_t tile_dim_start_44119 = Rx_40867 * (Tx_40866 * gid_x_40881 +
                                               reg_tile_i_44117);
    
    for (int64_t nest_i_44120 = 0; nest_i_44120 < Ry_40865; nest_i_44120++) {
        for (int64_t nest_i_44121 = 0; nest_i_44121 < Rx_40867;
             nest_i_44121++) {
            if (slt64(tile_dim_start_44118 + nest_i_44120, m_27371) &&
                slt64(tile_dim_start_44119 + nest_i_44121, i32_res_27386)) {
                ((__global float *) mem_42997)[(tile_dim_start_44118 +
                                                nest_i_44120) * i32_res_27386 +
                                               (tile_dim_start_44119 +
                                                nest_i_44121)] =
                    loop_mem_42994[nest_i_44120 * Rx_40867 + nest_i_44121];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_40864
    #undef Ry_40865
    #undef Tx_40866
    #undef Rx_40867
    #undef Tk_40868
    #undef tk_div_tx_40869
    #undef tk_div_ty_40870
    #undef TxRx_40871
    #undef TyRy_40872
    #undef a_loc_szz_40874
    #undef b_loc_szz_40876
}
__kernel void mainDetailedzisegmap_intragroup_41332(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43055_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43046_backing_aligned_1,
                                                    int64_t m_27371,
                                                    int64_t i32_res_27386,
                                                    int64_t num_groups_y_41330,
                                                    int64_t num_whole_tiles_41348,
                                                    int64_t residual_input_41475,
                                                    unsigned char cond_41476,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43007,
                                                    __global
                                                    unsigned char *mem_43036,
                                                    __global
                                                    unsigned char *mem_43063)
{
    #define tile_sizze_41327 (mainDetailedzitile_sizze_41326)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43055_backing_5 = (__local volatile
                                                           char *) mem_43055_backing_aligned_0;
    __local volatile char *restrict mem_43046_backing_0 = (__local volatile
                                                           char *) mem_43046_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44197;
    int32_t local_tid_44198;
    int64_t group_sizze_44201;
    int32_t wave_sizze_44200;
    int32_t group_tid_44199;
    
    global_tid_44197 = get_global_id(0);
    local_tid_44198 = get_local_id(0);
    group_sizze_44201 = get_local_size(0);
    wave_sizze_44200 = LOCKSTEP_WIDTH;
    group_tid_44199 = get_group_id(0);
    
    int32_t gid_flat_41332;
    
    gid_flat_41332 = group_tid_44199;
    
    int32_t ltid_pre_44202;
    
    ltid_pre_44202 = squot32(local_tid_44198, sext_i64_i32(tile_sizze_41327));
    
    int32_t ltid_pre_44203;
    
    ltid_pre_44203 = local_tid_44198 - squot32(local_tid_44198,
                                               sext_i64_i32(tile_sizze_41327)) *
        sext_i64_i32(tile_sizze_41327);
    
    int64_t gid_x_41324;
    
    gid_x_41324 = squot64(sext_i32_i64(group_tid_44199), num_groups_y_41330);
    
    int64_t gid_y_41325;
    
    gid_y_41325 = sext_i32_i64(group_tid_44199) -
        squot64(sext_i32_i64(group_tid_44199), num_groups_y_41330) *
        num_groups_y_41330;
    
    float mem_43041[1];
    int64_t ltid_y_41351 = sext_i32_i64(ltid_pre_44202);
    int64_t ltid_x_41349 = sext_i32_i64(ltid_pre_44203);
    int32_t ltid_flat_41350 = local_tid_44198;
    
    if (slt64(ltid_y_41351, tile_sizze_41327) && slt64(ltid_x_41349,
                                                       tile_sizze_41327)) {
        mem_43041[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41434 = gid_x_41324 * tile_sizze_41327;
    int64_t binop_x_41449 = gid_y_41325 * tile_sizze_41327;
    __local char *mem_43046;
    
    mem_43046 = (__local char *) mem_43046_backing_0;
    
    float accs_mem_43051[1];
    float mem_param_43042[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43042[i_1] = mem_43041[i_1];
    for (int64_t tile_id_41360 = 0; tile_id_41360 < num_whole_tiles_41348;
         tile_id_41360++) {
        int64_t binop_x_41432 = tile_sizze_41327 * tile_id_41360;
        int64_t ltid_y_41363 = sext_i32_i64(ltid_pre_44202);
        int64_t ltid_x_41361 = sext_i32_i64(ltid_pre_44203);
        int32_t ltid_flat_41362 = local_tid_44198;
        int64_t j_41433 = ltid_x_41361 + binop_x_41432;
        int64_t gtid_41435 = ltid_y_41363 + binop_x_41434;
        bool binop_x_41440 = slt64(j_41433, i32_res_27386);
        bool binop_y_41441 = slt64(gtid_41435, m_27371);
        bool cond_41442 = binop_x_41440 && binop_y_41441;
        float pre_41443;
        
        if (cond_41442) {
            float x_41444 = ((__global
                              float *) defunc_3_map_res_mem_43007)[gtid_41435 *
                                                                   i32_res_27386 +
                                                                   j_41433];
            
            pre_41443 = x_41444;
        } else {
            pre_41443 = 0.0F;
        }
        ((__local float *) mem_43046)[ltid_y_41363 * tile_sizze_41327 +
                                      ltid_x_41361] = pre_41443;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43050[1];
        int64_t ltid_y_41395 = sext_i32_i64(ltid_pre_44202);
        int64_t ltid_x_41393 = sext_i32_i64(ltid_pre_44203);
        int32_t ltid_flat_41394 = local_tid_44198;
        int64_t gtid_41448 = ltid_y_41395 + binop_x_41434;
        int64_t gtid_41450 = ltid_x_41393 + binop_x_41449;
        float acc_41453 = mem_param_43042[(int64_t) 0];
        bool binop_x_41457 = slt64(gtid_41448, m_27371);
        bool binop_y_41458 = slt64(gtid_41450, i32_res_27386);
        bool cond_41459 = binop_x_41457 && binop_y_41458;
        float acc_41460;
        
        if (cond_41459) {
            float x_41461;
            float redout_42472 = acc_41453;
            
            for (int64_t i_42473 = 0; i_42473 < tile_sizze_41327; i_42473++) {
                float x_41465 = ((__local float *) mem_43046)[ltid_y_41395 *
                                                              tile_sizze_41327 +
                                                              i_42473];
                int64_t slice_42524 = binop_x_41432 + i_42473;
                float x_41466 = ((__global float *) mem_43036)[slice_42524 *
                                                               (i32_res_27386 *
                                                                m_27371) +
                                                               gtid_41448 *
                                                               i32_res_27386 +
                                                               gtid_41450];
                float defunc_1_f_res_41467 = x_41465 * x_41466;
                float defunc_1_op_res_41464 = defunc_1_f_res_41467 +
                      redout_42472;
                float redout_tmp_44206 = defunc_1_op_res_41464;
                
                redout_42472 = redout_tmp_44206;
            }
            x_41461 = redout_42472;
            acc_41460 = x_41461;
        } else {
            acc_41460 = acc_41453;
        }
        mem_43050[(int64_t) 0] = acc_41460;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44204[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44204[i_2] = mem_43050[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43042[i_3] = mem_param_tmp_44204[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43051[i_4] = mem_param_43042[i_4];
    
    __local char *mem_43055;
    
    mem_43055 = (__local char *) mem_43055_backing_5;
    
    float mem_43059[1];
    float mem_43639[1];
    
    if (cond_41476) {
        mem_43639[(int64_t) 0] = accs_mem_43051[(int64_t) 0];
    } else {
        int64_t binop_x_41549 = tile_sizze_41327 * num_whole_tiles_41348;
        int64_t ltid_y_41479 = sext_i32_i64(ltid_pre_44202);
        int64_t ltid_x_41477 = sext_i32_i64(ltid_pre_44203);
        int32_t ltid_flat_41478 = local_tid_44198;
        int64_t j_41550 = ltid_x_41477 + binop_x_41549;
        int64_t gtid_41552 = binop_x_41434 + ltid_y_41479;
        bool binop_x_41557 = slt64(j_41550, i32_res_27386);
        bool binop_y_41558 = slt64(gtid_41552, m_27371);
        bool cond_41559 = binop_x_41557 && binop_y_41558;
        float pre_41560;
        
        if (cond_41559) {
            float x_41561 = ((__global
                              float *) defunc_3_map_res_mem_43007)[gtid_41552 *
                                                                   i32_res_27386 +
                                                                   j_41550];
            
            pre_41560 = x_41561;
        } else {
            pre_41560 = 0.0F;
        }
        ((__local float *) mem_43055)[ltid_y_41479 * tile_sizze_41327 +
                                      ltid_x_41477] = pre_41560;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41512 = sext_i32_i64(ltid_pre_44202);
        int64_t ltid_x_41510 = sext_i32_i64(ltid_pre_44203);
        int32_t ltid_flat_41511 = local_tid_44198;
        int64_t gtid_41566 = binop_x_41434 + ltid_y_41512;
        int64_t gtid_41568 = binop_x_41449 + ltid_x_41510;
        float acc_41571 = accs_mem_43051[(int64_t) 0];
        bool binop_x_41575 = slt64(gtid_41566, m_27371);
        bool binop_y_41576 = slt64(gtid_41568, i32_res_27386);
        bool cond_41577 = binop_x_41575 && binop_y_41576;
        float acc_41578;
        
        if (cond_41577) {
            float x_41579;
            float redout_42474 = acc_41571;
            
            for (int64_t i_42475 = 0; i_42475 < residual_input_41475;
                 i_42475++) {
                float x_41583 = ((__local float *) mem_43055)[ltid_y_41512 *
                                                              tile_sizze_41327 +
                                                              i_42475];
                int64_t slice_42525 = binop_x_41549 + i_42475;
                float x_41584 = ((__global float *) mem_43036)[slice_42525 *
                                                               (i32_res_27386 *
                                                                m_27371) +
                                                               gtid_41566 *
                                                               i32_res_27386 +
                                                               gtid_41568];
                float defunc_1_f_res_41585 = x_41583 * x_41584;
                float defunc_1_op_res_41582 = defunc_1_f_res_41585 +
                      redout_42474;
                float redout_tmp_44207 = defunc_1_op_res_41582;
                
                redout_42474 = redout_tmp_44207;
            }
            x_41579 = redout_42474;
            acc_41578 = x_41579;
        } else {
            acc_41578 = acc_41571;
        }
        mem_43059[(int64_t) 0] = acc_41578;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43639[(int64_t) 0] = mem_43059[(int64_t) 0];
    }
    
    int64_t thread_out_index_44208 = gid_x_41324 * tile_sizze_41327 +
            sext_i32_i64(ltid_pre_44202);
    int64_t thread_out_index_44209 = gid_y_41325 * tile_sizze_41327 +
            sext_i32_i64(ltid_pre_44203);
    
    if (slt64(thread_out_index_44208, m_27371) && slt64(thread_out_index_44209,
                                                        i32_res_27386)) {
        ((__global float *) mem_43063)[thread_out_index_44208 * i32_res_27386 +
                                       thread_out_index_44209] =
            mem_43639[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41327
}
__kernel void mainDetailedzisegmap_intragroup_41624(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43115_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43113_backing_aligned_1,
                                                    int64_t N_27370,
                                                    int64_t m_27371,
                                                    int64_t i32_res_27386,
                                                    int64_t gridDim_x_41618,
                                                    int64_t full_tiles_41649,
                                                    int64_t kk_41852, __global
                                                    unsigned char *defunc_4_map_res_mem_43073,
                                                    __global
                                                    unsigned char *mem_43097,
                                                    __global
                                                    unsigned char *mem_43287)
{
    #define Ty_41605 (mainDetailedziTy_41602)
    #define Ry_41606 (mainDetailedziRy_41604)
    #define Tx_41607 (mainDetailedziTx_41601)
    #define Rx_41608 (mainDetailedziRx_41603)
    #define Tk_41609 (mainDetailedziTk_41600)
    #define tk_div_tx_41610 (sdiv_up64(mainDetailedziTk_41600, mainDetailedziTx_41601))
    #define tk_div_ty_41611 (sdiv_up64(mainDetailedziTk_41600, mainDetailedziTy_41602))
    #define TxRx_41612 (mainDetailedziTx_41601 * mainDetailedziRx_41603)
    #define TyRy_41613 (mainDetailedziTy_41602 * mainDetailedziRy_41604)
    #define a_loc_szz_41615 (mainDetailedziTk_41600 * (mainDetailedziTy_41602 * mainDetailedziRy_41604))
    #define b_loc_szz_41617 (mainDetailedziRx_41603 * (mainDetailedziTx_41601 * mainDetailedziTk_41600))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43115_backing_1 = (__local volatile
                                                           char *) mem_43115_backing_aligned_0;
    __local volatile char *restrict mem_43113_backing_0 = (__local volatile
                                                           char *) mem_43113_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44285;
    int32_t local_tid_44286;
    int64_t group_sizze_44289;
    int32_t wave_sizze_44288;
    int32_t group_tid_44287;
    
    global_tid_44285 = get_global_id(0);
    local_tid_44286 = get_local_id(0);
    group_sizze_44289 = get_local_size(0);
    wave_sizze_44288 = LOCKSTEP_WIDTH;
    group_tid_44287 = get_group_id(0);
    
    int32_t gid_flat_41624;
    
    gid_flat_41624 = group_tid_44287;
    
    int32_t ltid_pre_44290;
    
    ltid_pre_44290 = squot32(local_tid_44286, sext_i64_i32(Tx_41607));
    
    int32_t ltid_pre_44291;
    
    ltid_pre_44291 = local_tid_44286 - squot32(local_tid_44286,
                                               sext_i64_i32(Tx_41607)) *
        sext_i64_i32(Tx_41607);
    
    int64_t gid_y_41623;
    
    gid_y_41623 = squot64(sext_i32_i64(group_tid_44287), gridDim_x_41618);
    
    int64_t gid_x_41622;
    
    gid_x_41622 = sext_i32_i64(group_tid_44287) -
        squot64(sext_i32_i64(group_tid_44287), gridDim_x_41618) *
        gridDim_x_41618;
    
    int64_t iii_41625;
    
    iii_41625 = TyRy_41613 * gid_y_41623;
    
    int64_t jjj_41626 = TxRx_41612 * gid_x_41622;
    float mem_43111[Ry_41606 * Rx_41608];
    int64_t ltid_y_41629 = sext_i32_i64(ltid_pre_44290);
    int64_t ltid_x_41627 = sext_i32_i64(ltid_pre_44291);
    int32_t ltid_flat_41628 = local_tid_44286;
    float mem_43102[Ry_41606 * Rx_41608];
    
    for (int64_t i_41640 = 0; i_41640 < Ry_41606; i_41640++) {
        for (int64_t i_41643 = 0; i_41643 < Rx_41608; i_41643++) {
            mem_43102[i_41640 * Rx_41608 + i_41643] = 0.0F;
        }
    }
    for (int64_t i_44294 = 0; i_44294 < Ry_41606; i_44294++) {
        for (int64_t i_44295 = 0; i_44295 < Rx_41608; i_44295++) {
            mem_43111[i_44294 * Rx_41608 + i_44295] = mem_43102[i_44294 *
                                                                Rx_41608 +
                                                                i_44295];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43113;
    
    mem_43113 = (__local char *) mem_43113_backing_0;
    
    __local char *mem_43115;
    
    mem_43115 = (__local char *) mem_43115_backing_1;
    
    float mem_43186[Ry_41606];
    float mem_43190[Rx_41608];
    float loop_mem_43202[Ry_41606 * Rx_41608];
    float mem_param_43116[Ry_41606 * Rx_41608];
    
    for (int32_t i_2 = 0; i_2 < Ry_41606 * Rx_41608; i_2++)
        mem_param_43116[i_2] = mem_43111[i_2];
    for (int64_t i_41650 = 0; i_41650 < full_tiles_41649; i_41650++) {
        int64_t kk_41654 = Tk_41609 * i_41650;
        
        for (int64_t i_41655 = 0; i_41655 < Ry_41606; i_41655++) {
            int64_t binop_y_41678 = Ty_41605 * i_41655;
            
            for (int64_t i_41657 = 0; i_41657 < tk_div_tx_41610; i_41657++) {
                int64_t binop_y_41676 = Tx_41607 * i_41657;
                int64_t ltid_x_41659 = sext_i32_i64(ltid_pre_44290);
                int64_t ltid_y_41660 = sext_i32_i64(ltid_pre_44291);
                int32_t ltid_flat_41661 = local_tid_44286;
                int64_t k_41677 = ltid_y_41660 + binop_y_41676;
                int64_t i_41679 = ltid_x_41659 + binop_y_41678;
                int64_t gtid_41680 = iii_41625 + i_41679;
                int64_t A_col_idx_41681 = kk_41654 + k_41677;
                bool cond_41682 = slt64(gtid_41680, m_27371);
                float A_elem_41683;
                
                if (cond_41682) {
                    float A_elem_41685 = ((__global
                                           float *) defunc_4_map_res_mem_43073)[gtid_41680 *
                                                                                i32_res_27386 +
                                                                                A_col_idx_41681];
                    
                    A_elem_41683 = A_elem_41685;
                } else {
                    A_elem_41683 = 0.0F;
                }
                
                bool cond_41687 = slt64(k_41677, Tk_41609);
                int64_t a_loc_ind_41688;
                
                if (cond_41687) {
                    int64_t binop_y_41689 = Tk_41609 * i_41679;
                    int64_t loc_fi_41690 = k_41677 + binop_y_41689;
                    
                    a_loc_ind_41688 = loc_fi_41690;
                } else {
                    a_loc_ind_41688 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41688) &&
                    slt64(a_loc_ind_41688, a_loc_szz_41615)) {
                    ((__local float *) mem_43113)[a_loc_ind_41688] =
                        A_elem_41683;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41695 = 0; i_41695 < tk_div_ty_41611; i_41695++) {
            int64_t binop_y_41716 = Ty_41605 * i_41695;
            
            for (int64_t i_41697 = 0; i_41697 < Rx_41608; i_41697++) {
                int64_t binop_y_41718 = Tx_41607 * i_41697;
                int64_t ltid_x_41699 = sext_i32_i64(ltid_pre_44290);
                int64_t ltid_y_41700 = sext_i32_i64(ltid_pre_44291);
                int32_t ltid_flat_41701 = local_tid_44286;
                int64_t k_41717 = ltid_x_41699 + binop_y_41716;
                int64_t j_41719 = ltid_y_41700 + binop_y_41718;
                int64_t gtid_41720 = jjj_41626 + j_41719;
                int64_t B_row_idx_41721 = kk_41654 + k_41717;
                bool cond_41722 = slt64(gtid_41720, N_27370);
                float B_elem_41723;
                
                if (cond_41722) {
                    float B_elem_41725 = ((__global
                                           float *) mem_43097)[B_row_idx_41721 *
                                                               N_27370 +
                                                               gtid_41720];
                    
                    B_elem_41723 = B_elem_41725;
                } else {
                    B_elem_41723 = 0.0F;
                }
                
                bool cond_41727 = slt64(k_41717, Tk_41609);
                int64_t b_loc_ind_41728;
                
                if (cond_41727) {
                    int64_t binop_y_41729 = TxRx_41612 * k_41717;
                    int64_t loc_fi_41730 = j_41719 + binop_y_41729;
                    
                    b_loc_ind_41728 = loc_fi_41730;
                } else {
                    b_loc_ind_41728 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41728) &&
                    slt64(b_loc_ind_41728, b_loc_szz_41617)) {
                    ((__local float *) mem_43115)[b_loc_ind_41728] =
                        B_elem_41723;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43201[Ry_41606 * Rx_41608];
        float mem_param_43173[Ry_41606 * Rx_41608];
        
        for (int32_t i_3 = 0; i_3 < Ry_41606 * Rx_41608; i_3++)
            mem_param_43173[i_3] = mem_param_43116[i_3];
        for (int64_t i_41735 = 0; i_41735 < Tk_41609; i_41735++) {
            int64_t binop_y_41774 = TxRx_41612 * i_41735;
            int64_t ltid_y_41739 = sext_i32_i64(ltid_pre_44290);
            int64_t ltid_x_41737 = sext_i32_i64(ltid_pre_44291);
            int32_t ltid_flat_41738 = local_tid_44286;
            float mem_43176[Ry_41606];
            float mem_43178[Rx_41608];
            int64_t binop_x_41765 = Ry_41606 * ltid_y_41739;
            
            for (int64_t i_41763 = 0; i_41763 < Ry_41606; i_41763++) {
                int64_t binop_x_41766 = i_41763 + binop_x_41765;
                int64_t binop_y_41767 = Tk_41609 * binop_x_41766;
                int64_t a_loc_ind_41768 = i_41735 + binop_y_41767;
                
                for (int64_t i_44307 = 0; i_44307 < (int64_t) 1; i_44307++) {
                    mem_43176[i_41763 + i_44307] = ((__local
                                                     float *) mem_43113)[a_loc_ind_41768 +
                                                                         i_44307];
                }
            }
            
            int64_t binop_y_41776 = Rx_41608 * ltid_x_41737;
            
            for (int64_t i_41772 = 0; i_41772 < Rx_41608; i_41772++) {
                int64_t binop_x_41775 = i_41772 + binop_y_41774;
                int64_t b_loc_ind_41777 = binop_x_41775 + binop_y_41776;
                
                for (int64_t i_44309 = 0; i_44309 < (int64_t) 1; i_44309++) {
                    mem_43178[i_41772 + i_44309] = ((__local
                                                     float *) mem_43115)[b_loc_ind_41777 +
                                                                         i_44309];
                }
            }
            for (int64_t i_44310 = 0; i_44310 < Ry_41606; i_44310++) {
                mem_43186[i_44310] = mem_43176[i_44310];
            }
            for (int64_t i_44311 = 0; i_44311 < Rx_41608; i_44311++) {
                mem_43190[i_44311] = mem_43178[i_44311];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43200[Ry_41606 * Rx_41608];
            int64_t ltid_y_41784 = sext_i32_i64(ltid_pre_44290);
            int64_t ltid_x_41782 = sext_i32_i64(ltid_pre_44291);
            int32_t ltid_flat_41783 = local_tid_44286;
            int64_t binop_y_41825 = Ry_41606 * ltid_y_41784;
            int64_t binop_y_41829 = Rx_41608 * ltid_x_41782;
            
            for (int64_t i_41819 = 0; i_41819 < Ry_41606; i_41819++) {
                int64_t binop_x_41824 = iii_41625 + i_41819;
                int64_t cmpop_x_41826 = binop_x_41824 + binop_y_41825;
                bool binop_x_41827 = slt64(cmpop_x_41826, m_27371);
                
                for (int64_t i_41822 = 0; i_41822 < Rx_41608; i_41822++) {
                    int64_t binop_x_41828 = jjj_41626 + i_41822;
                    int64_t cmpop_x_41830 = binop_x_41828 + binop_y_41829;
                    bool binop_y_41831 = slt64(cmpop_x_41830, N_27370);
                    bool cond_41832 = binop_x_41827 && binop_y_41831;
                    
                    if (cond_41832) {
                        float a_41834 = mem_43186[i_41819];
                        float b_41835 = mem_43190[i_41822];
                        float c_41836 = mem_param_43173[i_41819 * Rx_41608 +
                                                        i_41822];
                        float defunc_1_f_res_41839 = a_41834 * b_41835;
                        float defunc_1_op_res_41843 = c_41836 +
                              defunc_1_f_res_41839;
                        
                        mem_param_43173[i_41819 * Rx_41608 + i_41822] =
                            defunc_1_op_res_41843;
                    }
                }
            }
            for (int64_t i_44314 = 0; i_44314 < Ry_41606; i_44314++) {
                for (int64_t i_44315 = 0; i_44315 < Rx_41608; i_44315++) {
                    mem_43200[i_44314 * Rx_41608 + i_44315] =
                        mem_param_43173[i_44314 * Rx_41608 + i_44315];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44304[Ry_41606 * Rx_41608];
            
            for (int32_t i_4 = 0; i_4 < Ry_41606 * Rx_41608; i_4++)
                mem_param_tmp_44304[i_4] = mem_43200[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41606 * Rx_41608; i_5++)
                mem_param_43173[i_5] = mem_param_tmp_44304[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41606 * Rx_41608; i_6++)
            loop_mem_43201[i_6] = mem_param_43173[i_6];
        
        float mem_param_tmp_44296[Ry_41606 * Rx_41608];
        
        for (int32_t i_7 = 0; i_7 < Ry_41606 * Rx_41608; i_7++)
            mem_param_tmp_44296[i_7] = loop_mem_43201[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41606 * Rx_41608; i_8++)
            mem_param_43116[i_8] = mem_param_tmp_44296[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41606 * Rx_41608; i_9++)
        loop_mem_43202[i_9] = mem_param_43116[i_9];
    for (int64_t i_41853 = 0; i_41853 < Ry_41606; i_41853++) {
        int64_t binop_y_41878 = Ty_41605 * i_41853;
        
        for (int64_t i_41855 = 0; i_41855 < tk_div_tx_41610; i_41855++) {
            int64_t binop_y_41876 = Tx_41607 * i_41855;
            int64_t ltid_x_41857 = sext_i32_i64(ltid_pre_44290);
            int64_t ltid_y_41858 = sext_i32_i64(ltid_pre_44291);
            int32_t ltid_flat_41859 = local_tid_44286;
            int64_t k_41877 = ltid_y_41858 + binop_y_41876;
            int64_t i_41879 = ltid_x_41857 + binop_y_41878;
            int64_t gtid_41880 = iii_41625 + i_41879;
            int64_t A_col_idx_41881 = kk_41852 + k_41877;
            bool binop_x_41882 = slt64(gtid_41880, m_27371);
            bool binop_y_41883 = slt64(A_col_idx_41881, i32_res_27386);
            bool cond_41884 = binop_x_41882 && binop_y_41883;
            float A_elem_41885;
            
            if (cond_41884) {
                float A_elem_41887 = ((__global
                                       float *) defunc_4_map_res_mem_43073)[gtid_41880 *
                                                                            i32_res_27386 +
                                                                            A_col_idx_41881];
                
                A_elem_41885 = A_elem_41887;
            } else {
                A_elem_41885 = 0.0F;
            }
            
            bool cond_41889 = slt64(k_41877, Tk_41609);
            int64_t a_loc_ind_41890;
            
            if (cond_41889) {
                int64_t binop_y_41891 = Tk_41609 * i_41879;
                int64_t loc_fi_41892 = k_41877 + binop_y_41891;
                
                a_loc_ind_41890 = loc_fi_41892;
            } else {
                a_loc_ind_41890 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41890) && slt64(a_loc_ind_41890,
                                                             a_loc_szz_41615)) {
                ((__local float *) mem_43113)[a_loc_ind_41890] = A_elem_41885;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41897 = 0; i_41897 < tk_div_ty_41611; i_41897++) {
        int64_t binop_y_41920 = Ty_41605 * i_41897;
        
        for (int64_t i_41899 = 0; i_41899 < Rx_41608; i_41899++) {
            int64_t binop_y_41922 = Tx_41607 * i_41899;
            int64_t ltid_x_41901 = sext_i32_i64(ltid_pre_44290);
            int64_t ltid_y_41902 = sext_i32_i64(ltid_pre_44291);
            int32_t ltid_flat_41903 = local_tid_44286;
            int64_t k_41921 = ltid_x_41901 + binop_y_41920;
            int64_t j_41923 = ltid_y_41902 + binop_y_41922;
            int64_t gtid_41924 = jjj_41626 + j_41923;
            int64_t B_row_idx_41925 = kk_41852 + k_41921;
            bool binop_x_41926 = slt64(gtid_41924, N_27370);
            bool binop_y_41927 = slt64(B_row_idx_41925, i32_res_27386);
            bool cond_41928 = binop_x_41926 && binop_y_41927;
            float B_elem_41929;
            
            if (cond_41928) {
                float B_elem_41931 = ((__global
                                       float *) mem_43097)[B_row_idx_41925 *
                                                           N_27370 +
                                                           gtid_41924];
                
                B_elem_41929 = B_elem_41931;
            } else {
                B_elem_41929 = 0.0F;
            }
            
            bool cond_41933 = slt64(k_41921, Tk_41609);
            int64_t b_loc_ind_41934;
            
            if (cond_41933) {
                int64_t binop_y_41935 = TxRx_41612 * k_41921;
                int64_t loc_fi_41936 = j_41923 + binop_y_41935;
                
                b_loc_ind_41934 = loc_fi_41936;
            } else {
                b_loc_ind_41934 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41934) && slt64(b_loc_ind_41934,
                                                             b_loc_szz_41617)) {
                ((__local float *) mem_43115)[b_loc_ind_41934] = B_elem_41929;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43268[Ry_41606];
    float mem_43272[Rx_41608];
    float mem_43282[Ry_41606 * Rx_41608];
    float loop_mem_43284[Ry_41606 * Rx_41608];
    float mem_param_43255[Ry_41606 * Rx_41608];
    
    for (int32_t i_10 = 0; i_10 < Ry_41606 * Rx_41608; i_10++)
        mem_param_43255[i_10] = loop_mem_43202[i_10];
    for (int64_t i_41941 = 0; i_41941 < Tk_41609; i_41941++) {
        int64_t cmpop_x_41943 = kk_41852 + i_41941;
        bool cond_41944 = slt64(cmpop_x_41943, i32_res_27386);
        float mem_43655[Ry_41606 * Rx_41608];
        
        if (cond_41944) {
            int64_t binop_y_41982 = TxRx_41612 * i_41941;
            int64_t bytes_43257 = (int64_t) 4 * Ry_41606;
            int64_t bytes_43259 = (int64_t) 4 * Rx_41608;
            int64_t ltid_y_41947 = sext_i32_i64(ltid_pre_44290);
            int64_t ltid_x_41945 = sext_i32_i64(ltid_pre_44291);
            int32_t ltid_flat_41946 = local_tid_44286;
            float mem_43258[Ry_41606];
            float mem_43260[Rx_41608];
            int64_t binop_x_41973 = Ry_41606 * ltid_y_41947;
            
            for (int64_t i_41971 = 0; i_41971 < Ry_41606; i_41971++) {
                int64_t binop_x_41974 = i_41971 + binop_x_41973;
                int64_t binop_y_41975 = Tk_41609 * binop_x_41974;
                int64_t a_loc_ind_41976 = i_41941 + binop_y_41975;
                
                for (int64_t i_44323 = 0; i_44323 < (int64_t) 1; i_44323++) {
                    mem_43258[i_41971 + i_44323] = ((__local
                                                     float *) mem_43113)[a_loc_ind_41976 +
                                                                         i_44323];
                }
            }
            
            int64_t binop_y_41984 = Rx_41608 * ltid_x_41945;
            
            for (int64_t i_41980 = 0; i_41980 < Rx_41608; i_41980++) {
                int64_t binop_x_41983 = i_41980 + binop_y_41982;
                int64_t b_loc_ind_41985 = binop_x_41983 + binop_y_41984;
                
                for (int64_t i_44325 = 0; i_44325 < (int64_t) 1; i_44325++) {
                    mem_43260[i_41980 + i_44325] = ((__local
                                                     float *) mem_43115)[b_loc_ind_41985 +
                                                                         i_44325];
                }
            }
            for (int64_t i_44326 = 0; i_44326 < Ry_41606; i_44326++) {
                mem_43268[i_44326] = mem_43258[i_44326];
            }
            for (int64_t i_44327 = 0; i_44327 < Rx_41608; i_44327++) {
                mem_43272[i_44327] = mem_43260[i_44327];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41992 = sext_i32_i64(ltid_pre_44290);
            int64_t ltid_x_41990 = sext_i32_i64(ltid_pre_44291);
            int32_t ltid_flat_41991 = local_tid_44286;
            int64_t binop_y_42033 = Ry_41606 * ltid_y_41992;
            int64_t binop_y_42037 = Rx_41608 * ltid_x_41990;
            
            for (int64_t i_42027 = 0; i_42027 < Ry_41606; i_42027++) {
                int64_t binop_x_42032 = iii_41625 + i_42027;
                int64_t cmpop_x_42034 = binop_x_42032 + binop_y_42033;
                bool binop_x_42035 = slt64(cmpop_x_42034, m_27371);
                
                for (int64_t i_42030 = 0; i_42030 < Rx_41608; i_42030++) {
                    int64_t binop_x_42036 = jjj_41626 + i_42030;
                    int64_t cmpop_x_42038 = binop_x_42036 + binop_y_42037;
                    bool binop_y_42039 = slt64(cmpop_x_42038, N_27370);
                    bool cond_42040 = binop_x_42035 && binop_y_42039;
                    
                    if (cond_42040) {
                        float a_42042 = mem_43268[i_42027];
                        float b_42043 = mem_43272[i_42030];
                        float c_42044 = mem_param_43255[i_42027 * Rx_41608 +
                                                        i_42030];
                        float defunc_1_f_res_42047 = a_42042 * b_42043;
                        float defunc_1_op_res_42051 = c_42044 +
                              defunc_1_f_res_42047;
                        
                        mem_param_43255[i_42027 * Rx_41608 + i_42030] =
                            defunc_1_op_res_42051;
                    }
                }
            }
            for (int64_t i_44330 = 0; i_44330 < Ry_41606; i_44330++) {
                for (int64_t i_44331 = 0; i_44331 < Rx_41608; i_44331++) {
                    mem_43282[i_44330 * Rx_41608 + i_44331] =
                        mem_param_43255[i_44330 * Rx_41608 + i_44331];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44332 = 0; i_44332 < Ry_41606; i_44332++) {
                for (int64_t i_44333 = 0; i_44333 < Rx_41608; i_44333++) {
                    mem_43655[i_44332 * Rx_41608 + i_44333] =
                        mem_43282[i_44332 * Rx_41608 + i_44333];
                }
            }
        } else {
            for (int64_t i_44334 = 0; i_44334 < Ry_41606; i_44334++) {
                for (int64_t i_44335 = 0; i_44335 < Rx_41608; i_44335++) {
                    mem_43655[i_44334 * Rx_41608 + i_44335] =
                        mem_param_43255[i_44334 * Rx_41608 + i_44335];
                }
            }
        }
        
        float mem_param_tmp_44320[Ry_41606 * Rx_41608];
        
        for (int32_t i_11 = 0; i_11 < Ry_41606 * Rx_41608; i_11++)
            mem_param_tmp_44320[i_11] = mem_43655[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41606 * Rx_41608; i_12++)
            mem_param_43255[i_12] = mem_param_tmp_44320[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41606 * Rx_41608; i_13++)
        loop_mem_43284[i_13] = mem_param_43255[i_13];
    
    int64_t reg_tile_i_44336 = squot64(sext_i32_i64(local_tid_44286), Tx_41607);
    int64_t reg_tile_i_44337 = sext_i32_i64(local_tid_44286) -
            squot64(sext_i32_i64(local_tid_44286), Tx_41607) * Tx_41607;
    int64_t tile_dim_start_44338 = Ry_41606 * (Ty_41605 * gid_y_41623 +
                                               reg_tile_i_44336);
    int64_t tile_dim_start_44339 = Rx_41608 * (Tx_41607 * gid_x_41622 +
                                               reg_tile_i_44337);
    
    for (int64_t nest_i_44340 = 0; nest_i_44340 < Ry_41606; nest_i_44340++) {
        for (int64_t nest_i_44341 = 0; nest_i_44341 < Rx_41608;
             nest_i_44341++) {
            if (slt64(tile_dim_start_44338 + nest_i_44340, m_27371) &&
                slt64(tile_dim_start_44339 + nest_i_44341, N_27370)) {
                ((__global float *) mem_43287)[(tile_dim_start_44338 +
                                                nest_i_44340) * N_27370 +
                                               (tile_dim_start_44339 +
                                                nest_i_44341)] =
                    loop_mem_43284[nest_i_44340 * Rx_41608 + nest_i_44341];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41605
    #undef Ry_41606
    #undef Tx_41607
    #undef Rx_41608
    #undef Tk_41609
    #undef tk_div_tx_41610
    #undef tk_div_ty_41611
    #undef TxRx_41612
    #undef TyRy_41613
    #undef a_loc_szz_41615
    #undef b_loc_szz_41617
}
__kernel void mainDetailedzisegmap_intragroup_42058(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43360_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43353_backing_aligned_1,
                                                    int64_t m_27371,
                                                    int32_t n_27374,
                                                    float hfrac_27376,
                                                    int64_t i32_res_27380,
                                                    int32_t k2p2_27382,
                                                    int64_t num_whole_tiles_42080,
                                                    int64_t residual_input_42169,
                                                    unsigned char cond_42170,
                                                    __global
                                                    unsigned char *mem_43339,
                                                    __global
                                                    unsigned char *mem_43342,
                                                    __global
                                                    unsigned char *mem_43373,
                                                    __global
                                                    unsigned char *mem_43375,
                                                    __global
                                                    unsigned char *mem_43377)
{
    #define segmap_group_sizze_31662 (mainDetailedzisegmap_group_sizze_31631)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43360_backing_5 = (__local volatile
                                                           char *) mem_43360_backing_aligned_0;
    __local volatile char *restrict mem_43353_backing_0 = (__local volatile
                                                           char *) mem_43353_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44509;
    int32_t local_tid_44510;
    int64_t group_sizze_44513;
    int32_t wave_sizze_44512;
    int32_t group_tid_44511;
    
    global_tid_44509 = get_global_id(0);
    local_tid_44510 = get_local_id(0);
    group_sizze_44513 = get_local_size(0);
    wave_sizze_44512 = LOCKSTEP_WIDTH;
    group_tid_44511 = get_group_id(0);
    
    int32_t gid_flat_42058;
    
    gid_flat_42058 = group_tid_44511;
    
    int32_t ltid_pre_44514;
    
    ltid_pre_44514 = local_tid_44510;
    
    int64_t gid_42057;
    
    gid_42057 = sext_i32_i64(group_tid_44511);
    
    int64_t binop_x_42065;
    
    binop_x_42065 = segmap_group_sizze_31662 * gid_42057;
    
    int32_t mem_43346[1];
    int64_t ltid_42059 = sext_i32_i64(ltid_pre_44514);
    int32_t ltid_flat_42060 = local_tid_44510;
    int64_t gtid_42066 = ltid_42059 + binop_x_42065;
    bool cond_42067 = slt64(gtid_42066, m_27371);
    int32_t pre_42068;
    
    if (cond_42067) {
        int32_t defunc_0_f_res_42070;
        int32_t redout_42482 = 0;
        
        for (int32_t i_42527 = 0; i_42527 < n_27374; i_42527++) {
            int64_t i_42483 = sext_i32_i64(i_42527);
            float x_42074 = ((__global float *) mem_43339)[i_42483 * m_27371 +
                                                           gtid_42066];
            bool isnan_res_42075;
            
            isnan_res_42075 = futrts_isnan32(x_42074);
            
            bool cond_42076 = !isnan_res_42075;
            int32_t defunc_0_f_res_42077 = btoi_bool_i32(cond_42076);
            int32_t defunc_1_op_res_42073 = add32(defunc_0_f_res_42077,
                                                  redout_42482);
            int32_t redout_tmp_44515 = defunc_1_op_res_42073;
            
            redout_42482 = redout_tmp_44515;
        }
        defunc_0_f_res_42070 = redout_42482;
        pre_42068 = defunc_0_f_res_42070;
    } else {
        pre_42068 = 0;
    }
    mem_43346[(int64_t) 0] = pre_42068;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43349[1];
    int64_t ltid_42081 = sext_i32_i64(ltid_pre_44514);
    int32_t ltid_flat_42082 = local_tid_44510;
    
    mem_43349[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43353;
    
    mem_43353 = (__local char *) mem_43353_backing_0;
    
    float accs_mem_43357[1];
    float mem_param_43350[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43350[i_1] = mem_43349[i_1];
    for (int64_t tile_id_42088 = 0; tile_id_42088 < num_whole_tiles_42080;
         tile_id_42088++) {
        int64_t binop_x_42133 = segmap_group_sizze_31662 * tile_id_42088;
        int64_t ltid_42089 = sext_i32_i64(ltid_pre_44514);
        int32_t ltid_flat_42090 = local_tid_44510;
        int64_t j_42134 = ltid_42089 + binop_x_42133;
        bool cond_42138 = slt64(j_42134, i32_res_27380);
        int32_t pre_42139;
        
        if (cond_42138) {
            int32_t index_primexp_42440 = sext_i64_i32(j_42134);
            
            pre_42139 = index_primexp_42440;
        } else {
            pre_42139 = 0;
        }
        ((__local int32_t *) mem_43353)[ltid_42089] = pre_42139;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43356[1];
        int64_t ltid_42108 = sext_i32_i64(ltid_pre_44514);
        int32_t ltid_flat_42109 = local_tid_44510;
        int64_t gtid_42144 = binop_x_42065 + ltid_42108;
        float acc_42146 = mem_param_43350[(int64_t) 0];
        bool cond_42147 = slt64(gtid_42144, m_27371);
        float acc_42148;
        
        if (cond_42147) {
            int32_t defunc_0_f_res_42145 = mem_43346[(int64_t) 0];
            float x_42149;
            float redout_42484 = acc_42146;
            
            for (int64_t i_42485 = 0; i_42485 < segmap_group_sizze_31662;
                 i_42485++) {
                int32_t x_42153 = ((__local int32_t *) mem_43353)[i_42485];
                bool cond_42154 = slt32(x_42153, defunc_0_f_res_42145);
                float defunc_0_f_res_42155;
                
                if (cond_42154) {
                    int64_t i_42156 = sext_i32_i64(x_42153);
                    float defunc_0_f_res_t_res_42157 = ((__global
                                                         float *) mem_43342)[i_42156 *
                                                                             m_27371 +
                                                                             gtid_42144];
                    
                    defunc_0_f_res_42155 = defunc_0_f_res_t_res_42157;
                } else {
                    defunc_0_f_res_42155 = 0.0F;
                }
                
                float defunc_0_f_res_42158 = defunc_0_f_res_42155 *
                      defunc_0_f_res_42155;
                float defunc_1_op_res_42152 = defunc_0_f_res_42158 +
                      redout_42484;
                float redout_tmp_44518 = defunc_1_op_res_42152;
                
                redout_42484 = redout_tmp_44518;
            }
            x_42149 = redout_42484;
            acc_42148 = x_42149;
        } else {
            acc_42148 = acc_42146;
        }
        mem_43356[(int64_t) 0] = acc_42148;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44516[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44516[i_2] = mem_43356[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43350[i_3] = mem_param_tmp_44516[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43357[i_4] = mem_param_43350[i_4];
    
    __local char *mem_43360;
    
    mem_43360 = (__local char *) mem_43360_backing_5;
    
    float mem_43363[1];
    float mem_43668[1];
    
    if (cond_42170) {
        mem_43668[(int64_t) 0] = accs_mem_43357[(int64_t) 0];
    } else {
        int64_t binop_x_42180 = segmap_group_sizze_31662 *
                num_whole_tiles_42080;
        int64_t ltid_42171 = sext_i32_i64(ltid_pre_44514);
        int32_t ltid_flat_42172 = local_tid_44510;
        int64_t j_42181 = ltid_42171 + binop_x_42180;
        bool cond_42185 = slt64(j_42181, i32_res_27380);
        int32_t pre_42186;
        
        if (cond_42185) {
            int32_t index_primexp_42441 = sext_i64_i32(j_42181);
            
            pre_42186 = index_primexp_42441;
        } else {
            pre_42186 = 0;
        }
        ((__local int32_t *) mem_43360)[ltid_42171] = pre_42186;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42191 = sext_i32_i64(ltid_pre_44514);
        int32_t ltid_flat_42192 = local_tid_44510;
        int64_t gtid_42199 = binop_x_42065 + ltid_42191;
        float acc_42201 = accs_mem_43357[(int64_t) 0];
        bool cond_42202 = slt64(gtid_42199, m_27371);
        float acc_42203;
        
        if (cond_42202) {
            int32_t defunc_0_f_res_42200 = mem_43346[(int64_t) 0];
            float x_42204;
            float redout_42486 = acc_42201;
            
            for (int64_t i_42487 = 0; i_42487 < residual_input_42169;
                 i_42487++) {
                int32_t x_42208 = ((__local int32_t *) mem_43360)[i_42487];
                bool cond_42209 = slt32(x_42208, defunc_0_f_res_42200);
                float defunc_0_f_res_42210;
                
                if (cond_42209) {
                    int64_t i_42211 = sext_i32_i64(x_42208);
                    float defunc_0_f_res_t_res_42212 = ((__global
                                                         float *) mem_43342)[i_42211 *
                                                                             m_27371 +
                                                                             gtid_42199];
                    
                    defunc_0_f_res_42210 = defunc_0_f_res_t_res_42212;
                } else {
                    defunc_0_f_res_42210 = 0.0F;
                }
                
                float defunc_0_f_res_42213 = defunc_0_f_res_42210 *
                      defunc_0_f_res_42210;
                float defunc_1_op_res_42207 = defunc_0_f_res_42213 +
                      redout_42486;
                float redout_tmp_44519 = defunc_1_op_res_42207;
                
                redout_42486 = redout_tmp_44519;
            }
            x_42204 = redout_42486;
            acc_42203 = x_42204;
        } else {
            acc_42203 = acc_42201;
        }
        mem_43363[(int64_t) 0] = acc_42203;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43668[(int64_t) 0] = mem_43363[(int64_t) 0];
    }
    
    int32_t mem_43367[1];
    int32_t mem_43369[1];
    float mem_43371[1];
    int64_t ltid_42216 = sext_i32_i64(ltid_pre_44514);
    int32_t ltid_flat_42217 = local_tid_44510;
    int64_t gtid_42227 = binop_x_42065 + ltid_42216;
    bool cond_42229 = slt64(gtid_42227, m_27371);
    int32_t postlude_42230;
    int32_t postlude_42231;
    float postlude_42232;
    
    if (cond_42229) {
        float defunc_0_f_res_42228 = mem_43668[(int64_t) 0];
        int32_t defunc_0_f_res_42233 = mem_43346[(int64_t) 0];
        int32_t r32_arg_42234 = sub32(defunc_0_f_res_42233, k2p2_27382);
        float i32_res_42235 = sitofp_i32_f32(r32_arg_42234);
        float sqrt_arg_42236 = defunc_0_f_res_42228 / i32_res_42235;
        float sqrt_res_42237;
        
        sqrt_res_42237 = futrts_sqrt32(sqrt_arg_42236);
        
        float i32_res_42238 = sitofp_i32_f32(defunc_0_f_res_42233);
        float t32_arg_42239 = hfrac_27376 * i32_res_42238;
        int32_t f32_res_42240 = fptosi_f32_i32(t32_arg_42239);
        
        postlude_42230 = f32_res_42240;
        postlude_42231 = defunc_0_f_res_42233;
        postlude_42232 = sqrt_res_42237;
    } else {
        postlude_42230 = 0;
        postlude_42231 = 0;
        postlude_42232 = 0.0F;
    }
    mem_43367[(int64_t) 0] = postlude_42230;
    mem_43369[(int64_t) 0] = postlude_42231;
    mem_43371[(int64_t) 0] = postlude_42232;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44510) + segmap_group_sizze_31662 *
              sext_i32_i64(group_tid_44511), m_27371)) {
        ((__global int32_t *) mem_43373)[sext_i32_i64(local_tid_44510) +
                                         segmap_group_sizze_31662 *
                                         sext_i32_i64(group_tid_44511)] =
            mem_43367[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44510) + segmap_group_sizze_31662 *
              sext_i32_i64(group_tid_44511), m_27371)) {
        ((__global int32_t *) mem_43375)[sext_i32_i64(local_tid_44510) +
                                         segmap_group_sizze_31662 *
                                         sext_i32_i64(group_tid_44511)] =
            mem_43369[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44510) + segmap_group_sizze_31662 *
              sext_i32_i64(group_tid_44511), m_27371)) {
        ((__global float *) mem_43377)[sext_i32_i64(local_tid_44510) +
                                       segmap_group_sizze_31662 *
                                       sext_i32_i64(group_tid_44511)] =
            mem_43371[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_31662
}
__kernel void mainDetailedzisegmap_intragroup_42248(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43426_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43419_backing_aligned_1,
                                                    int64_t N_27370,
                                                    int64_t m_27371,
                                                    int64_t i32_res_27741,
                                                    int64_t num_whole_tiles_42268,
                                                    int64_t residual_input_42367,
                                                    unsigned char cond_42368,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43335,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43401,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43402,
                                                    __global
                                                    unsigned char *mem_43432)
{
    #define segmap_group_sizze_31899 (mainDetailedzisegmap_group_sizze_31880)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43426_backing_5 = (__local volatile
                                                           char *) mem_43426_backing_aligned_0;
    __local volatile char *restrict mem_43419_backing_0 = (__local volatile
                                                           char *) mem_43419_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44693;
    int32_t local_tid_44694;
    int64_t group_sizze_44697;
    int32_t wave_sizze_44696;
    int32_t group_tid_44695;
    
    global_tid_44693 = get_global_id(0);
    local_tid_44694 = get_local_id(0);
    group_sizze_44697 = get_local_size(0);
    wave_sizze_44696 = LOCKSTEP_WIDTH;
    group_tid_44695 = get_group_id(0);
    
    int32_t gid_flat_42248;
    
    gid_flat_42248 = group_tid_44695;
    
    int32_t ltid_pre_44698;
    
    ltid_pre_44698 = local_tid_44694;
    
    int64_t gid_42247;
    
    gid_42247 = sext_i32_i64(group_tid_44695);
    
    int64_t binop_x_42257;
    
    binop_x_42257 = segmap_group_sizze_31899 * gid_42247;
    
    int32_t mem_43410[1];
    int32_t mem_43412[1];
    int64_t ltid_42249 = sext_i32_i64(ltid_pre_44698);
    int32_t ltid_flat_42250 = local_tid_44694;
    int64_t gtid_42258 = ltid_42249 + binop_x_42257;
    bool cond_42259 = slt64(gtid_42258, m_27371);
    int32_t pre_42260;
    int32_t pre_42261;
    
    if (cond_42259) {
        int32_t x_42262 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_42258];
        int32_t x_42263 = ((__global
                            int32_t *) defunc_3_map_res_mem_43401)[gtid_42258];
        
        pre_42260 = x_42262;
        pre_42261 = x_42263;
    } else {
        pre_42260 = 0;
        pre_42261 = 0;
    }
    mem_43410[(int64_t) 0] = pre_42260;
    mem_43412[(int64_t) 0] = pre_42261;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43415[1];
    int64_t ltid_42269 = sext_i32_i64(ltid_pre_44698);
    int32_t ltid_flat_42270 = local_tid_44694;
    
    mem_43415[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43419;
    
    mem_43419 = (__local char *) mem_43419_backing_0;
    
    float accs_mem_43423[1];
    float mem_param_43416[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43416[i_1] = mem_43415[i_1];
    for (int64_t tile_id_42276 = 0; tile_id_42276 < num_whole_tiles_42268;
         tile_id_42276++) {
        int64_t binop_x_42325 = segmap_group_sizze_31899 * tile_id_42276;
        int64_t ltid_42277 = sext_i32_i64(ltid_pre_44698);
        int32_t ltid_flat_42278 = local_tid_44694;
        int64_t j_42326 = ltid_42277 + binop_x_42325;
        bool cond_42331 = slt64(j_42326, i32_res_27741);
        int32_t pre_42332;
        
        if (cond_42331) {
            int32_t index_primexp_42442 = sext_i64_i32(j_42326);
            int32_t tile_elem_42333 = index_primexp_42442;
            
            pre_42332 = tile_elem_42333;
        } else {
            pre_42332 = 0;
        }
        ((__local int32_t *) mem_43419)[ltid_42277] = pre_42332;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43422[1];
        int64_t ltid_42297 = sext_i32_i64(ltid_pre_44698);
        int32_t ltid_flat_42298 = local_tid_44694;
        int64_t gtid_42337 = binop_x_42257 + ltid_42297;
        float acc_42340 = mem_param_43416[(int64_t) 0];
        bool cond_42341 = slt64(gtid_42337, m_27371);
        float acc_42342;
        
        if (cond_42341) {
            int32_t x_42338 = mem_43410[(int64_t) 0];
            int32_t x_42339 = mem_43412[(int64_t) 0];
            float x_42343;
            float redout_42488 = acc_42340;
            
            for (int64_t i_42489 = 0; i_42489 < segmap_group_sizze_31899;
                 i_42489++) {
                int32_t x_42347 = ((__local int32_t *) mem_43419)[i_42489];
                bool cond_42348 = slt32(x_42347, x_42339);
                float defunc_0_f_res_42349;
                
                if (cond_42348) {
                    int32_t x_42350 = add32(x_42338, x_42347);
                    int32_t x_42351 = sub32(x_42350, x_42339);
                    int32_t i_42352 = add32(1, x_42351);
                    int64_t i_42353 = sext_i32_i64(i_42352);
                    float defunc_0_f_res_t_res_42354 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_42337 *
                                                                                              N_27370 +
                                                                                              i_42353];
                    
                    defunc_0_f_res_42349 = defunc_0_f_res_t_res_42354;
                } else {
                    defunc_0_f_res_42349 = 0.0F;
                }
                
                float defunc_1_op_res_42346 = defunc_0_f_res_42349 +
                      redout_42488;
                float redout_tmp_44701 = defunc_1_op_res_42346;
                
                redout_42488 = redout_tmp_44701;
            }
            x_42343 = redout_42488;
            acc_42342 = x_42343;
        } else {
            acc_42342 = acc_42340;
        }
        mem_43422[(int64_t) 0] = acc_42342;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44699[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44699[i_2] = mem_43422[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43416[i_3] = mem_param_tmp_44699[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43423[i_4] = mem_param_43416[i_4];
    
    __local char *mem_43426;
    
    mem_43426 = (__local char *) mem_43426_backing_5;
    
    float mem_43429[1];
    float mem_43677[1];
    
    if (cond_42368) {
        mem_43677[(int64_t) 0] = accs_mem_43423[(int64_t) 0];
    } else {
        int64_t binop_x_42378 = segmap_group_sizze_31899 *
                num_whole_tiles_42268;
        int64_t ltid_42369 = sext_i32_i64(ltid_pre_44698);
        int32_t ltid_flat_42370 = local_tid_44694;
        int64_t j_42379 = ltid_42369 + binop_x_42378;
        bool cond_42384 = slt64(j_42379, i32_res_27741);
        int32_t pre_42385;
        
        if (cond_42384) {
            int32_t index_primexp_42443 = sext_i64_i32(j_42379);
            int32_t tile_elem_42386 = index_primexp_42443;
            
            pre_42385 = tile_elem_42386;
        } else {
            pre_42385 = 0;
        }
        ((__local int32_t *) mem_43426)[ltid_42369] = pre_42385;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42390 = sext_i32_i64(ltid_pre_44698);
        int32_t ltid_flat_42391 = local_tid_44694;
        int64_t gtid_42398 = binop_x_42257 + ltid_42390;
        float acc_42401 = accs_mem_43423[(int64_t) 0];
        bool cond_42402 = slt64(gtid_42398, m_27371);
        float acc_42403;
        
        if (cond_42402) {
            int32_t x_42399 = mem_43410[(int64_t) 0];
            int32_t x_42400 = mem_43412[(int64_t) 0];
            float x_42404;
            float redout_42490 = acc_42401;
            
            for (int64_t i_42491 = 0; i_42491 < residual_input_42367;
                 i_42491++) {
                int32_t x_42408 = ((__local int32_t *) mem_43426)[i_42491];
                bool cond_42409 = slt32(x_42408, x_42400);
                float defunc_0_f_res_42410;
                
                if (cond_42409) {
                    int32_t x_42411 = add32(x_42399, x_42408);
                    int32_t x_42412 = sub32(x_42411, x_42400);
                    int32_t i_42413 = add32(1, x_42412);
                    int64_t i_42414 = sext_i32_i64(i_42413);
                    float defunc_0_f_res_t_res_42415 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_42398 *
                                                                                              N_27370 +
                                                                                              i_42414];
                    
                    defunc_0_f_res_42410 = defunc_0_f_res_t_res_42415;
                } else {
                    defunc_0_f_res_42410 = 0.0F;
                }
                
                float defunc_1_op_res_42407 = defunc_0_f_res_42410 +
                      redout_42490;
                float redout_tmp_44702 = defunc_1_op_res_42407;
                
                redout_42490 = redout_tmp_44702;
            }
            x_42404 = redout_42490;
            acc_42403 = x_42404;
        } else {
            acc_42403 = acc_42401;
        }
        mem_43429[(int64_t) 0] = acc_42403;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43677[(int64_t) 0] = mem_43429[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44694) + segmap_group_sizze_31899 *
              sext_i32_i64(group_tid_44695), m_27371)) {
        ((__global float *) mem_43432)[sext_i32_i64(local_tid_44694) +
                                       segmap_group_sizze_31899 *
                                       sext_i32_i64(group_tid_44695)] =
            mem_43677[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_31899
}
__kernel void mainDetailedzisegred_large_29874(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_43962_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_43960_backing_aligned_1,
                                               int64_t N_27370,
                                               int64_t i32_res_27380,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_30013,
                                               int64_t groups_per_segment_43946,
                                               int64_t elements_per_thread_43947,
                                               int64_t virt_num_groups_43948,
                                               int64_t threads_per_segment_43950,
                                               __global
                                               unsigned char *images_mem_42538,
                                               __global
                                               unsigned char *binop_p_mem_42547,
                                               __global
                                               unsigned char *mem_42688,
                                               __global
                                               unsigned char *mem_42693,
                                               __global
                                               unsigned char *group_res_arr_mem_43951,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_43953)
{
    #define segred_group_sizze_30012 (mainDetailedzisegred_group_sizze_29868)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_43962_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_43962_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_43960_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43960_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43955;
    int32_t local_tid_43956;
    int64_t group_sizze_43959;
    int32_t wave_sizze_43958;
    int32_t group_tid_43957;
    
    global_tid_43955 = get_global_id(0);
    local_tid_43956 = get_local_id(0);
    group_sizze_43959 = get_local_size(0);
    wave_sizze_43958 = LOCKSTEP_WIDTH;
    group_tid_43957 = get_group_id(0);
    
    int32_t phys_tid_29874;
    
    phys_tid_29874 = global_tid_43955;
    
    __local char *red_arr_mem_43960;
    
    red_arr_mem_43960 = (__local char *) red_arr_mem_43960_backing_0;
    
    __local char *sync_arr_mem_43962;
    
    sync_arr_mem_43962 = (__local char *) sync_arr_mem_43962_backing_1;
    
    int32_t phys_group_id_43964;
    
    phys_group_id_43964 = get_group_id(0);
    for (int32_t i_43965 = 0; i_43965 <
         sdiv_up32(sext_i64_i32(virt_num_groups_43948) - phys_group_id_43964,
                   sext_i64_i32(num_groups_30013)); i_43965++) {
        int32_t virt_group_id_43966 = phys_group_id_43964 + i_43965 *
                sext_i64_i32(num_groups_30013);
        int32_t flat_segment_id_43967 = squot32(virt_group_id_43966,
                                                sext_i64_i32(groups_per_segment_43946));
        int64_t global_tid_43968 = srem64(sext_i32_i64(virt_group_id_43966) *
                                          segred_group_sizze_30012 +
                                          sext_i32_i64(local_tid_43956),
                                          segred_group_sizze_30012 *
                                          groups_per_segment_43946);
        int64_t gtid_29861 = squot64(sext_i32_i64(flat_segment_id_43967),
                                     i32_res_27386 * i32_res_27386);
        int64_t gtid_29862 = squot64(sext_i32_i64(flat_segment_id_43967) -
                                     squot64(sext_i32_i64(flat_segment_id_43967),
                                             i32_res_27386 * i32_res_27386) *
                                     (i32_res_27386 * i32_res_27386),
                                     i32_res_27386);
        int64_t gtid_29863 = sext_i32_i64(flat_segment_id_43967) -
                squot64(sext_i32_i64(flat_segment_id_43967), i32_res_27386 *
                        i32_res_27386) * (i32_res_27386 * i32_res_27386) -
                squot64(sext_i32_i64(flat_segment_id_43967) -
                        squot64(sext_i32_i64(flat_segment_id_43967),
                                i32_res_27386 * i32_res_27386) *
                        (i32_res_27386 * i32_res_27386), i32_res_27386) *
                i32_res_27386;
        int64_t gtid_29873;
        float x_acc_43969;
        int64_t chunk_sizze_43970;
        
        chunk_sizze_43970 = smin64(elements_per_thread_43947,
                                   sdiv_up64(i32_res_27380 -
                                             sext_i32_i64(sext_i64_i32(global_tid_43968)),
                                             threads_per_segment_43950));
        
        float x_30016;
        float x_30017;
        
        // neutral-initialise the accumulators
        {
            x_acc_43969 = 0.0F;
        }
        for (int64_t i_43974 = 0; i_43974 < chunk_sizze_43970; i_43974++) {
            gtid_29873 = sext_i32_i64(sext_i64_i32(global_tid_43968)) +
                threads_per_segment_43950 * i_43974;
            // apply map function
            {
                float x_30022 = ((__global
                                  float *) images_mem_42538)[gtid_29861 *
                                                             N_27370 +
                                                             gtid_29873];
                float x_30023 = ((__global
                                  float *) binop_p_mem_42547)[gtid_29862 *
                                                              N_27370 +
                                                              gtid_29873];
                float x_30024 = ((__global float *) mem_42688)[gtid_29863 *
                                                               N_27370 +
                                                               gtid_29873];
                float x_30025 = x_30023 * x_30024;
                bool isnan_res_30026;
                
                isnan_res_30026 = futrts_isnan32(x_30022);
                
                float y_30027;
                
                if (isnan_res_30026) {
                    y_30027 = 0.0F;
                } else {
                    y_30027 = 1.0F;
                }
                
                float defunc_2_f_res_30028 = x_30025 * y_30027;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30016 = x_acc_43969;
                }
                // load new values
                {
                    x_30017 = defunc_2_f_res_30028;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30018 = x_30016 + x_30017;
                    
                    // store in accumulator
                    {
                        x_acc_43969 = defunc_1_op_res_30018;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30016 = x_acc_43969;
            ((__local
              float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956)] =
                x_30016;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_43975;
        int32_t skip_waves_43976;
        
        skip_waves_43976 = 1;
        
        float x_43971;
        float x_43972;
        
        offset_43975 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_43956,
                      sext_i64_i32(segred_group_sizze_30012))) {
                x_43971 = ((__local
                            float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956 +
                                                        offset_43975)];
            }
        }
        offset_43975 = 1;
        while (slt32(offset_43975, wave_sizze_43958)) {
            if (slt32(local_tid_43956 + offset_43975,
                      sext_i64_i32(segred_group_sizze_30012)) &&
                ((local_tid_43956 - squot32(local_tid_43956, wave_sizze_43958) *
                  wave_sizze_43958) & (2 * offset_43975 - 1)) == 0) {
                // read array element
                {
                    x_43972 = ((volatile __local
                                float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956 +
                                                            offset_43975)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43973 = x_43971 + x_43972;
                    
                    x_43971 = defunc_1_op_res_43973;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956)] =
                        x_43971;
                }
            }
            offset_43975 *= 2;
        }
        while (slt32(skip_waves_43976,
                     squot32(sext_i64_i32(segred_group_sizze_30012) +
                             wave_sizze_43958 - 1, wave_sizze_43958))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_43975 = skip_waves_43976 * wave_sizze_43958;
            if (slt32(local_tid_43956 + offset_43975,
                      sext_i64_i32(segred_group_sizze_30012)) &&
                ((local_tid_43956 - squot32(local_tid_43956, wave_sizze_43958) *
                  wave_sizze_43958) == 0 && (squot32(local_tid_43956,
                                                     wave_sizze_43958) & (2 *
                                                                          skip_waves_43976 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_43972 = ((__local
                                float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956 +
                                                            offset_43975)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43973 = x_43971 + x_43972;
                    
                    x_43971 = defunc_1_op_res_43973;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956)] =
                        x_43971;
                }
            }
            skip_waves_43976 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_43956) == (int64_t) 0) {
                x_acc_43969 = x_43971;
            }
        }
        if (groups_per_segment_43946 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_43956 == 0) {
                    ((__global float *) mem_42693)[gtid_29861 * (i32_res_27386 *
                                                                 i32_res_27386) +
                                                   gtid_29862 * i32_res_27386 +
                                                   gtid_29863] = x_acc_43969;
                }
            }
        } else {
            int32_t old_counter_43977;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_43956 == 0) {
                    ((__global
                      float *) group_res_arr_mem_43951)[sext_i32_i64(virt_group_id_43966) *
                                                        segred_group_sizze_30012] =
                        x_acc_43969;
                    mem_fence_global();
                    old_counter_43977 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_43953)[sext_i32_i64(srem32(flat_segment_id_43967,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_43962)[(int64_t) 0] =
                        old_counter_43977 == groups_per_segment_43946 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_43978;
            
            is_last_group_43978 = ((__local
                                    bool *) sync_arr_mem_43962)[(int64_t) 0];
            if (is_last_group_43978) {
                if (local_tid_43956 == 0) {
                    old_counter_43977 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_43953)[sext_i32_i64(srem32(flat_segment_id_43967,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_43946));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_43979 =
                            sdiv_up64(groups_per_segment_43946,
                                      segred_group_sizze_30012);
                    
                    x_30016 = 0.0F;
                    for (int64_t i_43980 = 0; i_43980 < read_per_thread_43979;
                         i_43980++) {
                        int64_t group_res_id_43981 =
                                sext_i32_i64(local_tid_43956) *
                                read_per_thread_43979 + i_43980;
                        int64_t index_of_group_res_43982 =
                                sext_i32_i64(flat_segment_id_43967) *
                                groups_per_segment_43946 + group_res_id_43981;
                        
                        if (slt64(group_res_id_43981,
                                  groups_per_segment_43946)) {
                            x_30017 = ((__global
                                        float *) group_res_arr_mem_43951)[index_of_group_res_43982 *
                                                                          segred_group_sizze_30012];
                            
                            float defunc_1_op_res_30018;
                            
                            defunc_1_op_res_30018 = x_30016 + x_30017;
                            x_30016 = defunc_1_op_res_30018;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956)] =
                    x_30016;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_43983;
                    int32_t skip_waves_43984;
                    
                    skip_waves_43984 = 1;
                    
                    float x_43971;
                    float x_43972;
                    
                    offset_43983 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_43956,
                                  sext_i64_i32(segred_group_sizze_30012))) {
                            x_43971 = ((__local
                                        float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956 +
                                                                    offset_43983)];
                        }
                    }
                    offset_43983 = 1;
                    while (slt32(offset_43983, wave_sizze_43958)) {
                        if (slt32(local_tid_43956 + offset_43983,
                                  sext_i64_i32(segred_group_sizze_30012)) &&
                            ((local_tid_43956 - squot32(local_tid_43956,
                                                        wave_sizze_43958) *
                              wave_sizze_43958) & (2 * offset_43983 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_43972 = ((volatile __local
                                            float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956 +
                                                                        offset_43983)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43973 = x_43971 + x_43972;
                                
                                x_43971 = defunc_1_op_res_43973;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956)] =
                                    x_43971;
                            }
                        }
                        offset_43983 *= 2;
                    }
                    while (slt32(skip_waves_43984,
                                 squot32(sext_i64_i32(segred_group_sizze_30012) +
                                         wave_sizze_43958 - 1,
                                         wave_sizze_43958))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_43983 = skip_waves_43984 * wave_sizze_43958;
                        if (slt32(local_tid_43956 + offset_43983,
                                  sext_i64_i32(segred_group_sizze_30012)) &&
                            ((local_tid_43956 - squot32(local_tid_43956,
                                                        wave_sizze_43958) *
                              wave_sizze_43958) == 0 &&
                             (squot32(local_tid_43956, wave_sizze_43958) & (2 *
                                                                            skip_waves_43984 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_43972 = ((__local
                                            float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956 +
                                                                        offset_43983)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43973 = x_43971 + x_43972;
                                
                                x_43971 = defunc_1_op_res_43973;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_43960)[sext_i32_i64(local_tid_43956)] =
                                    x_43971;
                            }
                        }
                        skip_waves_43984 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_43956 == 0) {
                            ((__global float *) mem_42693)[gtid_29861 *
                                                           (i32_res_27386 *
                                                            i32_res_27386) +
                                                           gtid_29862 *
                                                           i32_res_27386 +
                                                           gtid_29863] =
                                x_43971;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30012
}
__kernel void mainDetailedzisegred_large_30921(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44159_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44157_backing_aligned_1,
                                               int64_t N_27370,
                                               int64_t i32_res_27380,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_30974,
                                               int64_t groups_per_segment_44143,
                                               int64_t elements_per_thread_44144,
                                               int64_t virt_num_groups_44145,
                                               int64_t threads_per_segment_44147,
                                               __global
                                               unsigned char *images_mem_42538,
                                               __global
                                               unsigned char *binop_p_mem_42547,
                                               __global
                                               unsigned char *mem_43001,
                                               __global
                                               unsigned char *group_res_arr_mem_44148,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44150)
{
    #define segred_group_sizze_30973 (mainDetailedzisegred_group_sizze_30915)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44159_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44159_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44157_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44157_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44152;
    int32_t local_tid_44153;
    int64_t group_sizze_44156;
    int32_t wave_sizze_44155;
    int32_t group_tid_44154;
    
    global_tid_44152 = get_global_id(0);
    local_tid_44153 = get_local_id(0);
    group_sizze_44156 = get_local_size(0);
    wave_sizze_44155 = LOCKSTEP_WIDTH;
    group_tid_44154 = get_group_id(0);
    
    int32_t phys_tid_30921;
    
    phys_tid_30921 = global_tid_44152;
    
    __local char *red_arr_mem_44157;
    
    red_arr_mem_44157 = (__local char *) red_arr_mem_44157_backing_0;
    
    __local char *sync_arr_mem_44159;
    
    sync_arr_mem_44159 = (__local char *) sync_arr_mem_44159_backing_1;
    
    int32_t phys_group_id_44161;
    
    phys_group_id_44161 = get_group_id(0);
    for (int32_t i_44162 = 0; i_44162 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44145) - phys_group_id_44161,
                   sext_i64_i32(num_groups_30974)); i_44162++) {
        int32_t virt_group_id_44163 = phys_group_id_44161 + i_44162 *
                sext_i64_i32(num_groups_30974);
        int32_t flat_segment_id_44164 = squot32(virt_group_id_44163,
                                                sext_i64_i32(groups_per_segment_44143));
        int64_t global_tid_44165 = srem64(sext_i32_i64(virt_group_id_44163) *
                                          segred_group_sizze_30973 +
                                          sext_i32_i64(local_tid_44153),
                                          segred_group_sizze_30973 *
                                          groups_per_segment_44143);
        int64_t gtid_30910 = squot64(sext_i32_i64(flat_segment_id_44164),
                                     i32_res_27386);
        int64_t gtid_30911 = sext_i32_i64(flat_segment_id_44164) -
                squot64(sext_i32_i64(flat_segment_id_44164), i32_res_27386) *
                i32_res_27386;
        int64_t gtid_30920;
        float x_acc_44166;
        int64_t chunk_sizze_44167;
        
        chunk_sizze_44167 = smin64(elements_per_thread_44144,
                                   sdiv_up64(i32_res_27380 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44165)),
                                             threads_per_segment_44147));
        
        float x_30977;
        float x_30978;
        
        // neutral-initialise the accumulators
        {
            x_acc_44166 = 0.0F;
        }
        for (int64_t i_44171 = 0; i_44171 < chunk_sizze_44167; i_44171++) {
            gtid_30920 = sext_i32_i64(sext_i64_i32(global_tid_44165)) +
                threads_per_segment_44147 * i_44171;
            // apply map function
            {
                float x_30983 = ((__global
                                  float *) images_mem_42538)[gtid_30910 *
                                                             N_27370 +
                                                             gtid_30920];
                bool isnan_res_30984;
                
                isnan_res_30984 = futrts_isnan32(x_30983);
                
                float defunc_1_f_res_30985;
                
                if (isnan_res_30984) {
                    defunc_1_f_res_30985 = 0.0F;
                } else {
                    float x_30982 = ((__global
                                      float *) binop_p_mem_42547)[gtid_30911 *
                                                                  N_27370 +
                                                                  gtid_30920];
                    float defunc_1_f_res_f_res_30986 = x_30982 * x_30983;
                    
                    defunc_1_f_res_30985 = defunc_1_f_res_f_res_30986;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_30977 = x_acc_44166;
                }
                // load new values
                {
                    x_30978 = defunc_1_f_res_30985;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30979 = x_30977 + x_30978;
                    
                    // store in accumulator
                    {
                        x_acc_44166 = defunc_1_op_res_30979;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30977 = x_acc_44166;
            ((__local
              float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153)] =
                x_30977;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44172;
        int32_t skip_waves_44173;
        
        skip_waves_44173 = 1;
        
        float x_44168;
        float x_44169;
        
        offset_44172 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44153,
                      sext_i64_i32(segred_group_sizze_30973))) {
                x_44168 = ((__local
                            float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153 +
                                                        offset_44172)];
            }
        }
        offset_44172 = 1;
        while (slt32(offset_44172, wave_sizze_44155)) {
            if (slt32(local_tid_44153 + offset_44172,
                      sext_i64_i32(segred_group_sizze_30973)) &&
                ((local_tid_44153 - squot32(local_tid_44153, wave_sizze_44155) *
                  wave_sizze_44155) & (2 * offset_44172 - 1)) == 0) {
                // read array element
                {
                    x_44169 = ((volatile __local
                                float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153 +
                                                            offset_44172)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44170 = x_44168 + x_44169;
                    
                    x_44168 = defunc_1_op_res_44170;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153)] =
                        x_44168;
                }
            }
            offset_44172 *= 2;
        }
        while (slt32(skip_waves_44173,
                     squot32(sext_i64_i32(segred_group_sizze_30973) +
                             wave_sizze_44155 - 1, wave_sizze_44155))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44172 = skip_waves_44173 * wave_sizze_44155;
            if (slt32(local_tid_44153 + offset_44172,
                      sext_i64_i32(segred_group_sizze_30973)) &&
                ((local_tid_44153 - squot32(local_tid_44153, wave_sizze_44155) *
                  wave_sizze_44155) == 0 && (squot32(local_tid_44153,
                                                     wave_sizze_44155) & (2 *
                                                                          skip_waves_44173 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44169 = ((__local
                                float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153 +
                                                            offset_44172)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44170 = x_44168 + x_44169;
                    
                    x_44168 = defunc_1_op_res_44170;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153)] =
                        x_44168;
                }
            }
            skip_waves_44173 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44153) == (int64_t) 0) {
                x_acc_44166 = x_44168;
            }
        }
        if (groups_per_segment_44143 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44153 == 0) {
                    ((__global float *) mem_43001)[gtid_30910 * i32_res_27386 +
                                                   gtid_30911] = x_acc_44166;
                }
            }
        } else {
            int32_t old_counter_44174;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44153 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44148)[sext_i32_i64(virt_group_id_44163) *
                                                        segred_group_sizze_30973] =
                        x_acc_44166;
                    mem_fence_global();
                    old_counter_44174 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44150)[sext_i32_i64(srem32(flat_segment_id_44164,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44159)[(int64_t) 0] =
                        old_counter_44174 == groups_per_segment_44143 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44175;
            
            is_last_group_44175 = ((__local
                                    bool *) sync_arr_mem_44159)[(int64_t) 0];
            if (is_last_group_44175) {
                if (local_tid_44153 == 0) {
                    old_counter_44174 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44150)[sext_i32_i64(srem32(flat_segment_id_44164,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44143));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44176 =
                            sdiv_up64(groups_per_segment_44143,
                                      segred_group_sizze_30973);
                    
                    x_30977 = 0.0F;
                    for (int64_t i_44177 = 0; i_44177 < read_per_thread_44176;
                         i_44177++) {
                        int64_t group_res_id_44178 =
                                sext_i32_i64(local_tid_44153) *
                                read_per_thread_44176 + i_44177;
                        int64_t index_of_group_res_44179 =
                                sext_i32_i64(flat_segment_id_44164) *
                                groups_per_segment_44143 + group_res_id_44178;
                        
                        if (slt64(group_res_id_44178,
                                  groups_per_segment_44143)) {
                            x_30978 = ((__global
                                        float *) group_res_arr_mem_44148)[index_of_group_res_44179 *
                                                                          segred_group_sizze_30973];
                            
                            float defunc_1_op_res_30979;
                            
                            defunc_1_op_res_30979 = x_30977 + x_30978;
                            x_30977 = defunc_1_op_res_30979;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153)] =
                    x_30977;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44180;
                    int32_t skip_waves_44181;
                    
                    skip_waves_44181 = 1;
                    
                    float x_44168;
                    float x_44169;
                    
                    offset_44180 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44153,
                                  sext_i64_i32(segred_group_sizze_30973))) {
                            x_44168 = ((__local
                                        float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153 +
                                                                    offset_44180)];
                        }
                    }
                    offset_44180 = 1;
                    while (slt32(offset_44180, wave_sizze_44155)) {
                        if (slt32(local_tid_44153 + offset_44180,
                                  sext_i64_i32(segred_group_sizze_30973)) &&
                            ((local_tid_44153 - squot32(local_tid_44153,
                                                        wave_sizze_44155) *
                              wave_sizze_44155) & (2 * offset_44180 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44169 = ((volatile __local
                                            float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153 +
                                                                        offset_44180)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44170 = x_44168 + x_44169;
                                
                                x_44168 = defunc_1_op_res_44170;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153)] =
                                    x_44168;
                            }
                        }
                        offset_44180 *= 2;
                    }
                    while (slt32(skip_waves_44181,
                                 squot32(sext_i64_i32(segred_group_sizze_30973) +
                                         wave_sizze_44155 - 1,
                                         wave_sizze_44155))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44180 = skip_waves_44181 * wave_sizze_44155;
                        if (slt32(local_tid_44153 + offset_44180,
                                  sext_i64_i32(segred_group_sizze_30973)) &&
                            ((local_tid_44153 - squot32(local_tid_44153,
                                                        wave_sizze_44155) *
                              wave_sizze_44155) == 0 &&
                             (squot32(local_tid_44153, wave_sizze_44155) & (2 *
                                                                            skip_waves_44181 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44169 = ((__local
                                            float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153 +
                                                                        offset_44180)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44170 = x_44168 + x_44169;
                                
                                x_44168 = defunc_1_op_res_44170;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44157)[sext_i32_i64(local_tid_44153)] =
                                    x_44168;
                            }
                        }
                        skip_waves_44181 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44153 == 0) {
                            ((__global float *) mem_43001)[gtid_30910 *
                                                           i32_res_27386 +
                                                           gtid_30911] =
                                x_44168;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30973
}
__kernel void mainDetailedzisegred_large_31058(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44247_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44245_backing_aligned_1,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_31107,
                                               int64_t groups_per_segment_44231,
                                               int64_t elements_per_thread_44232,
                                               int64_t virt_num_groups_44233,
                                               int64_t threads_per_segment_44235,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_42786,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43007,
                                               __global
                                               unsigned char *mem_43067,
                                               __global
                                               unsigned char *group_res_arr_mem_44236,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44238)
{
    #define segred_group_sizze_31106 (mainDetailedzisegred_group_sizze_31052)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44247_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44247_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44245_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44245_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44240;
    int32_t local_tid_44241;
    int64_t group_sizze_44244;
    int32_t wave_sizze_44243;
    int32_t group_tid_44242;
    
    global_tid_44240 = get_global_id(0);
    local_tid_44241 = get_local_id(0);
    group_sizze_44244 = get_local_size(0);
    wave_sizze_44243 = LOCKSTEP_WIDTH;
    group_tid_44242 = get_group_id(0);
    
    int32_t phys_tid_31058;
    
    phys_tid_31058 = global_tid_44240;
    
    __local char *red_arr_mem_44245;
    
    red_arr_mem_44245 = (__local char *) red_arr_mem_44245_backing_0;
    
    __local char *sync_arr_mem_44247;
    
    sync_arr_mem_44247 = (__local char *) sync_arr_mem_44247_backing_1;
    
    int32_t phys_group_id_44249;
    
    phys_group_id_44249 = get_group_id(0);
    for (int32_t i_44250 = 0; i_44250 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44233) - phys_group_id_44249,
                   sext_i64_i32(num_groups_31107)); i_44250++) {
        int32_t virt_group_id_44251 = phys_group_id_44249 + i_44250 *
                sext_i64_i32(num_groups_31107);
        int32_t flat_segment_id_44252 = squot32(virt_group_id_44251,
                                                sext_i64_i32(groups_per_segment_44231));
        int64_t global_tid_44253 = srem64(sext_i32_i64(virt_group_id_44251) *
                                          segred_group_sizze_31106 +
                                          sext_i32_i64(local_tid_44241),
                                          segred_group_sizze_31106 *
                                          groups_per_segment_44231);
        int64_t gtid_31047 = squot64(sext_i32_i64(flat_segment_id_44252),
                                     i32_res_27386);
        int64_t gtid_31048 = sext_i32_i64(flat_segment_id_44252) -
                squot64(sext_i32_i64(flat_segment_id_44252), i32_res_27386) *
                i32_res_27386;
        int64_t gtid_31057;
        float x_acc_44254;
        int64_t chunk_sizze_44255;
        
        chunk_sizze_44255 = smin64(elements_per_thread_44232,
                                   sdiv_up64(i32_res_27386 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44253)),
                                             threads_per_segment_44235));
        
        float x_31110;
        float x_31111;
        
        // neutral-initialise the accumulators
        {
            x_acc_44254 = 0.0F;
        }
        for (int64_t i_44259 = 0; i_44259 < chunk_sizze_44255; i_44259++) {
            gtid_31057 = sext_i32_i64(sext_i64_i32(global_tid_44253)) +
                threads_per_segment_44235 * i_44259;
            // apply map function
            {
                float x_31116 = ((__global
                                  float *) defunc_3_map_res_mem_43007)[gtid_31047 *
                                                                       i32_res_27386 +
                                                                       gtid_31057];
                float x_31117 = ((__global
                                  float *) defunc_3_map_res_mem_42786)[gtid_31047 *
                                                                       (i32_res_27386 *
                                                                        i32_res_27386) +
                                                                       gtid_31048 *
                                                                       i32_res_27386 +
                                                                       gtid_31057];
                float defunc_1_f_res_31118 = x_31116 * x_31117;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31110 = x_acc_44254;
                }
                // load new values
                {
                    x_31111 = defunc_1_f_res_31118;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31112 = x_31110 + x_31111;
                    
                    // store in accumulator
                    {
                        x_acc_44254 = defunc_1_op_res_31112;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31110 = x_acc_44254;
            ((__local
              float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241)] =
                x_31110;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44260;
        int32_t skip_waves_44261;
        
        skip_waves_44261 = 1;
        
        float x_44256;
        float x_44257;
        
        offset_44260 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44241,
                      sext_i64_i32(segred_group_sizze_31106))) {
                x_44256 = ((__local
                            float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241 +
                                                        offset_44260)];
            }
        }
        offset_44260 = 1;
        while (slt32(offset_44260, wave_sizze_44243)) {
            if (slt32(local_tid_44241 + offset_44260,
                      sext_i64_i32(segred_group_sizze_31106)) &&
                ((local_tid_44241 - squot32(local_tid_44241, wave_sizze_44243) *
                  wave_sizze_44243) & (2 * offset_44260 - 1)) == 0) {
                // read array element
                {
                    x_44257 = ((volatile __local
                                float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241 +
                                                            offset_44260)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44258 = x_44256 + x_44257;
                    
                    x_44256 = defunc_1_op_res_44258;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241)] =
                        x_44256;
                }
            }
            offset_44260 *= 2;
        }
        while (slt32(skip_waves_44261,
                     squot32(sext_i64_i32(segred_group_sizze_31106) +
                             wave_sizze_44243 - 1, wave_sizze_44243))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44260 = skip_waves_44261 * wave_sizze_44243;
            if (slt32(local_tid_44241 + offset_44260,
                      sext_i64_i32(segred_group_sizze_31106)) &&
                ((local_tid_44241 - squot32(local_tid_44241, wave_sizze_44243) *
                  wave_sizze_44243) == 0 && (squot32(local_tid_44241,
                                                     wave_sizze_44243) & (2 *
                                                                          skip_waves_44261 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44257 = ((__local
                                float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241 +
                                                            offset_44260)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44258 = x_44256 + x_44257;
                    
                    x_44256 = defunc_1_op_res_44258;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241)] =
                        x_44256;
                }
            }
            skip_waves_44261 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44241) == (int64_t) 0) {
                x_acc_44254 = x_44256;
            }
        }
        if (groups_per_segment_44231 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44241 == 0) {
                    ((__global float *) mem_43067)[gtid_31047 * i32_res_27386 +
                                                   gtid_31048] = x_acc_44254;
                }
            }
        } else {
            int32_t old_counter_44262;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44241 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44236)[sext_i32_i64(virt_group_id_44251) *
                                                        segred_group_sizze_31106] =
                        x_acc_44254;
                    mem_fence_global();
                    old_counter_44262 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44238)[sext_i32_i64(srem32(flat_segment_id_44252,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44247)[(int64_t) 0] =
                        old_counter_44262 == groups_per_segment_44231 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44263;
            
            is_last_group_44263 = ((__local
                                    bool *) sync_arr_mem_44247)[(int64_t) 0];
            if (is_last_group_44263) {
                if (local_tid_44241 == 0) {
                    old_counter_44262 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44238)[sext_i32_i64(srem32(flat_segment_id_44252,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44231));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44264 =
                            sdiv_up64(groups_per_segment_44231,
                                      segred_group_sizze_31106);
                    
                    x_31110 = 0.0F;
                    for (int64_t i_44265 = 0; i_44265 < read_per_thread_44264;
                         i_44265++) {
                        int64_t group_res_id_44266 =
                                sext_i32_i64(local_tid_44241) *
                                read_per_thread_44264 + i_44265;
                        int64_t index_of_group_res_44267 =
                                sext_i32_i64(flat_segment_id_44252) *
                                groups_per_segment_44231 + group_res_id_44266;
                        
                        if (slt64(group_res_id_44266,
                                  groups_per_segment_44231)) {
                            x_31111 = ((__global
                                        float *) group_res_arr_mem_44236)[index_of_group_res_44267 *
                                                                          segred_group_sizze_31106];
                            
                            float defunc_1_op_res_31112;
                            
                            defunc_1_op_res_31112 = x_31110 + x_31111;
                            x_31110 = defunc_1_op_res_31112;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241)] =
                    x_31110;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44268;
                    int32_t skip_waves_44269;
                    
                    skip_waves_44269 = 1;
                    
                    float x_44256;
                    float x_44257;
                    
                    offset_44268 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44241,
                                  sext_i64_i32(segred_group_sizze_31106))) {
                            x_44256 = ((__local
                                        float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241 +
                                                                    offset_44268)];
                        }
                    }
                    offset_44268 = 1;
                    while (slt32(offset_44268, wave_sizze_44243)) {
                        if (slt32(local_tid_44241 + offset_44268,
                                  sext_i64_i32(segred_group_sizze_31106)) &&
                            ((local_tid_44241 - squot32(local_tid_44241,
                                                        wave_sizze_44243) *
                              wave_sizze_44243) & (2 * offset_44268 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44257 = ((volatile __local
                                            float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241 +
                                                                        offset_44268)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44258 = x_44256 + x_44257;
                                
                                x_44256 = defunc_1_op_res_44258;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241)] =
                                    x_44256;
                            }
                        }
                        offset_44268 *= 2;
                    }
                    while (slt32(skip_waves_44269,
                                 squot32(sext_i64_i32(segred_group_sizze_31106) +
                                         wave_sizze_44243 - 1,
                                         wave_sizze_44243))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44268 = skip_waves_44269 * wave_sizze_44243;
                        if (slt32(local_tid_44241 + offset_44268,
                                  sext_i64_i32(segred_group_sizze_31106)) &&
                            ((local_tid_44241 - squot32(local_tid_44241,
                                                        wave_sizze_44243) *
                              wave_sizze_44243) == 0 &&
                             (squot32(local_tid_44241, wave_sizze_44243) & (2 *
                                                                            skip_waves_44269 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44257 = ((__local
                                            float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241 +
                                                                        offset_44268)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44258 = x_44256 + x_44257;
                                
                                x_44256 = defunc_1_op_res_44258;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44245)[sext_i32_i64(local_tid_44241)] =
                                    x_44256;
                            }
                        }
                        skip_waves_44269 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44241 == 0) {
                            ((__global float *) mem_43067)[gtid_31047 *
                                                           i32_res_27386 +
                                                           gtid_31048] =
                                x_44256;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31106
}
__kernel void mainDetailedzisegred_large_31188(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44379_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44377_backing_aligned_1,
                                               int64_t N_27370,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_31235,
                                               int64_t groups_per_segment_44363,
                                               int64_t elements_per_thread_44364,
                                               int64_t virt_num_groups_44365,
                                               int64_t threads_per_segment_44367,
                                               __global
                                               unsigned char *mem_42554,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43073,
                                               __global
                                               unsigned char *mem_43291,
                                               __global
                                               unsigned char *group_res_arr_mem_44368,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44370)
{
    #define segred_group_sizze_31234 (mainDetailedzisegred_group_sizze_31182)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44379_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44379_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44377_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44377_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44372;
    int32_t local_tid_44373;
    int64_t group_sizze_44376;
    int32_t wave_sizze_44375;
    int32_t group_tid_44374;
    
    global_tid_44372 = get_global_id(0);
    local_tid_44373 = get_local_id(0);
    group_sizze_44376 = get_local_size(0);
    wave_sizze_44375 = LOCKSTEP_WIDTH;
    group_tid_44374 = get_group_id(0);
    
    int32_t phys_tid_31188;
    
    phys_tid_31188 = global_tid_44372;
    
    __local char *red_arr_mem_44377;
    
    red_arr_mem_44377 = (__local char *) red_arr_mem_44377_backing_0;
    
    __local char *sync_arr_mem_44379;
    
    sync_arr_mem_44379 = (__local char *) sync_arr_mem_44379_backing_1;
    
    int32_t phys_group_id_44381;
    
    phys_group_id_44381 = get_group_id(0);
    for (int32_t i_44382 = 0; i_44382 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44365) - phys_group_id_44381,
                   sext_i64_i32(num_groups_31235)); i_44382++) {
        int32_t virt_group_id_44383 = phys_group_id_44381 + i_44382 *
                sext_i64_i32(num_groups_31235);
        int32_t flat_segment_id_44384 = squot32(virt_group_id_44383,
                                                sext_i64_i32(groups_per_segment_44363));
        int64_t global_tid_44385 = srem64(sext_i32_i64(virt_group_id_44383) *
                                          segred_group_sizze_31234 +
                                          sext_i32_i64(local_tid_44373),
                                          segred_group_sizze_31234 *
                                          groups_per_segment_44363);
        int64_t gtid_31177 = squot64(sext_i32_i64(flat_segment_id_44384),
                                     N_27370);
        int64_t gtid_31178 = sext_i32_i64(flat_segment_id_44384) -
                squot64(sext_i32_i64(flat_segment_id_44384), N_27370) * N_27370;
        int64_t gtid_31187;
        float x_acc_44386;
        int64_t chunk_sizze_44387;
        
        chunk_sizze_44387 = smin64(elements_per_thread_44364,
                                   sdiv_up64(i32_res_27386 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44385)),
                                             threads_per_segment_44367));
        
        float x_31238;
        float x_31239;
        
        // neutral-initialise the accumulators
        {
            x_acc_44386 = 0.0F;
        }
        for (int64_t i_44391 = 0; i_44391 < chunk_sizze_44387; i_44391++) {
            gtid_31187 = sext_i32_i64(sext_i64_i32(global_tid_44385)) +
                threads_per_segment_44367 * i_44391;
            // apply map function
            {
                float x_31243 = ((__global
                                  float *) defunc_4_map_res_mem_43073)[gtid_31177 *
                                                                       i32_res_27386 +
                                                                       gtid_31187];
                float x_31244 = ((__global float *) mem_42554)[gtid_31178 *
                                                               i32_res_27386 +
                                                               gtid_31187];
                float defunc_1_f_res_31245 = x_31243 * x_31244;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31238 = x_acc_44386;
                }
                // load new values
                {
                    x_31239 = defunc_1_f_res_31245;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31240 = x_31238 + x_31239;
                    
                    // store in accumulator
                    {
                        x_acc_44386 = defunc_1_op_res_31240;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31238 = x_acc_44386;
            ((__local
              float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373)] =
                x_31238;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44392;
        int32_t skip_waves_44393;
        
        skip_waves_44393 = 1;
        
        float x_44388;
        float x_44389;
        
        offset_44392 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44373,
                      sext_i64_i32(segred_group_sizze_31234))) {
                x_44388 = ((__local
                            float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373 +
                                                        offset_44392)];
            }
        }
        offset_44392 = 1;
        while (slt32(offset_44392, wave_sizze_44375)) {
            if (slt32(local_tid_44373 + offset_44392,
                      sext_i64_i32(segred_group_sizze_31234)) &&
                ((local_tid_44373 - squot32(local_tid_44373, wave_sizze_44375) *
                  wave_sizze_44375) & (2 * offset_44392 - 1)) == 0) {
                // read array element
                {
                    x_44389 = ((volatile __local
                                float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373 +
                                                            offset_44392)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44390 = x_44388 + x_44389;
                    
                    x_44388 = defunc_1_op_res_44390;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373)] =
                        x_44388;
                }
            }
            offset_44392 *= 2;
        }
        while (slt32(skip_waves_44393,
                     squot32(sext_i64_i32(segred_group_sizze_31234) +
                             wave_sizze_44375 - 1, wave_sizze_44375))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44392 = skip_waves_44393 * wave_sizze_44375;
            if (slt32(local_tid_44373 + offset_44392,
                      sext_i64_i32(segred_group_sizze_31234)) &&
                ((local_tid_44373 - squot32(local_tid_44373, wave_sizze_44375) *
                  wave_sizze_44375) == 0 && (squot32(local_tid_44373,
                                                     wave_sizze_44375) & (2 *
                                                                          skip_waves_44393 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44389 = ((__local
                                float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373 +
                                                            offset_44392)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44390 = x_44388 + x_44389;
                    
                    x_44388 = defunc_1_op_res_44390;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373)] =
                        x_44388;
                }
            }
            skip_waves_44393 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44373) == (int64_t) 0) {
                x_acc_44386 = x_44388;
            }
        }
        if (groups_per_segment_44363 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44373 == 0) {
                    ((__global float *) mem_43291)[gtid_31177 * N_27370 +
                                                   gtid_31178] = x_acc_44386;
                }
            }
        } else {
            int32_t old_counter_44394;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44373 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44368)[sext_i32_i64(virt_group_id_44383) *
                                                        segred_group_sizze_31234] =
                        x_acc_44386;
                    mem_fence_global();
                    old_counter_44394 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44370)[sext_i32_i64(srem32(flat_segment_id_44384,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44379)[(int64_t) 0] =
                        old_counter_44394 == groups_per_segment_44363 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44395;
            
            is_last_group_44395 = ((__local
                                    bool *) sync_arr_mem_44379)[(int64_t) 0];
            if (is_last_group_44395) {
                if (local_tid_44373 == 0) {
                    old_counter_44394 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44370)[sext_i32_i64(srem32(flat_segment_id_44384,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44363));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44396 =
                            sdiv_up64(groups_per_segment_44363,
                                      segred_group_sizze_31234);
                    
                    x_31238 = 0.0F;
                    for (int64_t i_44397 = 0; i_44397 < read_per_thread_44396;
                         i_44397++) {
                        int64_t group_res_id_44398 =
                                sext_i32_i64(local_tid_44373) *
                                read_per_thread_44396 + i_44397;
                        int64_t index_of_group_res_44399 =
                                sext_i32_i64(flat_segment_id_44384) *
                                groups_per_segment_44363 + group_res_id_44398;
                        
                        if (slt64(group_res_id_44398,
                                  groups_per_segment_44363)) {
                            x_31239 = ((__global
                                        float *) group_res_arr_mem_44368)[index_of_group_res_44399 *
                                                                          segred_group_sizze_31234];
                            
                            float defunc_1_op_res_31240;
                            
                            defunc_1_op_res_31240 = x_31238 + x_31239;
                            x_31238 = defunc_1_op_res_31240;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373)] =
                    x_31238;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44400;
                    int32_t skip_waves_44401;
                    
                    skip_waves_44401 = 1;
                    
                    float x_44388;
                    float x_44389;
                    
                    offset_44400 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44373,
                                  sext_i64_i32(segred_group_sizze_31234))) {
                            x_44388 = ((__local
                                        float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373 +
                                                                    offset_44400)];
                        }
                    }
                    offset_44400 = 1;
                    while (slt32(offset_44400, wave_sizze_44375)) {
                        if (slt32(local_tid_44373 + offset_44400,
                                  sext_i64_i32(segred_group_sizze_31234)) &&
                            ((local_tid_44373 - squot32(local_tid_44373,
                                                        wave_sizze_44375) *
                              wave_sizze_44375) & (2 * offset_44400 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44389 = ((volatile __local
                                            float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373 +
                                                                        offset_44400)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44390 = x_44388 + x_44389;
                                
                                x_44388 = defunc_1_op_res_44390;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373)] =
                                    x_44388;
                            }
                        }
                        offset_44400 *= 2;
                    }
                    while (slt32(skip_waves_44401,
                                 squot32(sext_i64_i32(segred_group_sizze_31234) +
                                         wave_sizze_44375 - 1,
                                         wave_sizze_44375))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44400 = skip_waves_44401 * wave_sizze_44375;
                        if (slt32(local_tid_44373 + offset_44400,
                                  sext_i64_i32(segred_group_sizze_31234)) &&
                            ((local_tid_44373 - squot32(local_tid_44373,
                                                        wave_sizze_44375) *
                              wave_sizze_44375) == 0 &&
                             (squot32(local_tid_44373, wave_sizze_44375) & (2 *
                                                                            skip_waves_44401 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44389 = ((__local
                                            float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373 +
                                                                        offset_44400)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44390 = x_44388 + x_44389;
                                
                                x_44388 = defunc_1_op_res_44390;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44377)[sext_i32_i64(local_tid_44373)] =
                                    x_44388;
                            }
                        }
                        skip_waves_44401 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44373 == 0) {
                            ((__global float *) mem_43291)[gtid_31177 *
                                                           N_27370 +
                                                           gtid_31178] =
                                x_44388;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31234
}
__kernel void mainDetailedzisegred_large_31754(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44631_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44629_backing_aligned_1,
                                               int64_t N_27370,
                                               int64_t i32_res_27380,
                                               int64_t num_groups_31801,
                                               int64_t groups_per_segment_44615,
                                               int64_t elements_per_thread_44616,
                                               int64_t virt_num_groups_44617,
                                               int64_t threads_per_segment_44619,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43335,
                                               __global
                                               unsigned char *mem_43389,
                                               __global
                                               unsigned char *mem_43392,
                                               __global
                                               unsigned char *group_res_arr_mem_44620,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44622)
{
    #define segred_group_sizze_31800 (mainDetailedzisegred_group_sizze_31748)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44631_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44631_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44629_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44629_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44624;
    int32_t local_tid_44625;
    int64_t group_sizze_44628;
    int32_t wave_sizze_44627;
    int32_t group_tid_44626;
    
    global_tid_44624 = get_global_id(0);
    local_tid_44625 = get_local_id(0);
    group_sizze_44628 = get_local_size(0);
    wave_sizze_44627 = LOCKSTEP_WIDTH;
    group_tid_44626 = get_group_id(0);
    
    int32_t phys_tid_31754;
    
    phys_tid_31754 = global_tid_44624;
    
    __local char *red_arr_mem_44629;
    
    red_arr_mem_44629 = (__local char *) red_arr_mem_44629_backing_0;
    
    __local char *sync_arr_mem_44631;
    
    sync_arr_mem_44631 = (__local char *) sync_arr_mem_44631_backing_1;
    
    int32_t phys_group_id_44633;
    
    phys_group_id_44633 = get_group_id(0);
    for (int32_t i_44634 = 0; i_44634 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44617) - phys_group_id_44633,
                   sext_i64_i32(num_groups_31801)); i_44634++) {
        int32_t virt_group_id_44635 = phys_group_id_44633 + i_44634 *
                sext_i64_i32(num_groups_31801);
        int32_t flat_segment_id_44636 = squot32(virt_group_id_44635,
                                                sext_i64_i32(groups_per_segment_44615));
        int64_t global_tid_44637 = srem64(sext_i32_i64(virt_group_id_44635) *
                                          segred_group_sizze_31800 +
                                          sext_i32_i64(local_tid_44625),
                                          segred_group_sizze_31800 *
                                          groups_per_segment_44615);
        int64_t gtid_31745 = sext_i32_i64(flat_segment_id_44636);
        int64_t gtid_31753;
        float x_acc_44638;
        int64_t chunk_sizze_44639;
        
        chunk_sizze_44639 = smin64(elements_per_thread_44616,
                                   sdiv_up64(i32_res_27380 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44637)),
                                             threads_per_segment_44619));
        
        float x_31804;
        float x_31805;
        
        // neutral-initialise the accumulators
        {
            x_acc_44638 = 0.0F;
        }
        for (int64_t i_44643 = 0; i_44643 < chunk_sizze_44639; i_44643++) {
            gtid_31753 = sext_i32_i64(sext_i64_i32(global_tid_44637)) +
                threads_per_segment_44619 * i_44643;
            // apply map function
            {
                int32_t defunc_0_f_res_31808 = ((__global
                                                 int32_t *) mem_43389)[gtid_31745];
                int32_t index_primexp_40574 = sext_i64_i32(gtid_31753);
                bool cond_31810 = slt32(index_primexp_40574,
                                        defunc_0_f_res_31808);
                float defunc_0_f_res_31811;
                
                if (cond_31810) {
                    int64_t i_31812 = sext_i32_i64(index_primexp_40574);
                    float defunc_0_f_res_t_res_31813 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_31745 *
                                                                                              N_27370 +
                                                                                              i_31812];
                    
                    defunc_0_f_res_31811 = defunc_0_f_res_t_res_31813;
                } else {
                    defunc_0_f_res_31811 = 0.0F;
                }
                
                float defunc_0_f_res_31814 = defunc_0_f_res_31811 *
                      defunc_0_f_res_31811;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31804 = x_acc_44638;
                }
                // load new values
                {
                    x_31805 = defunc_0_f_res_31814;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31806 = x_31804 + x_31805;
                    
                    // store in accumulator
                    {
                        x_acc_44638 = defunc_1_op_res_31806;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31804 = x_acc_44638;
            ((__local
              float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625)] =
                x_31804;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44644;
        int32_t skip_waves_44645;
        
        skip_waves_44645 = 1;
        
        float x_44640;
        float x_44641;
        
        offset_44644 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44625,
                      sext_i64_i32(segred_group_sizze_31800))) {
                x_44640 = ((__local
                            float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625 +
                                                        offset_44644)];
            }
        }
        offset_44644 = 1;
        while (slt32(offset_44644, wave_sizze_44627)) {
            if (slt32(local_tid_44625 + offset_44644,
                      sext_i64_i32(segred_group_sizze_31800)) &&
                ((local_tid_44625 - squot32(local_tid_44625, wave_sizze_44627) *
                  wave_sizze_44627) & (2 * offset_44644 - 1)) == 0) {
                // read array element
                {
                    x_44641 = ((volatile __local
                                float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625 +
                                                            offset_44644)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44642 = x_44640 + x_44641;
                    
                    x_44640 = defunc_1_op_res_44642;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625)] =
                        x_44640;
                }
            }
            offset_44644 *= 2;
        }
        while (slt32(skip_waves_44645,
                     squot32(sext_i64_i32(segred_group_sizze_31800) +
                             wave_sizze_44627 - 1, wave_sizze_44627))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44644 = skip_waves_44645 * wave_sizze_44627;
            if (slt32(local_tid_44625 + offset_44644,
                      sext_i64_i32(segred_group_sizze_31800)) &&
                ((local_tid_44625 - squot32(local_tid_44625, wave_sizze_44627) *
                  wave_sizze_44627) == 0 && (squot32(local_tid_44625,
                                                     wave_sizze_44627) & (2 *
                                                                          skip_waves_44645 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44641 = ((__local
                                float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625 +
                                                            offset_44644)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44642 = x_44640 + x_44641;
                    
                    x_44640 = defunc_1_op_res_44642;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625)] =
                        x_44640;
                }
            }
            skip_waves_44645 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44625) == (int64_t) 0) {
                x_acc_44638 = x_44640;
            }
        }
        if (groups_per_segment_44615 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44625 == 0) {
                    ((__global float *) mem_43392)[gtid_31745] = x_acc_44638;
                }
            }
        } else {
            int32_t old_counter_44646;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44625 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44620)[sext_i32_i64(virt_group_id_44635) *
                                                        segred_group_sizze_31800] =
                        x_acc_44638;
                    mem_fence_global();
                    old_counter_44646 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44622)[sext_i32_i64(srem32(flat_segment_id_44636,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44631)[(int64_t) 0] =
                        old_counter_44646 == groups_per_segment_44615 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44647;
            
            is_last_group_44647 = ((__local
                                    bool *) sync_arr_mem_44631)[(int64_t) 0];
            if (is_last_group_44647) {
                if (local_tid_44625 == 0) {
                    old_counter_44646 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44622)[sext_i32_i64(srem32(flat_segment_id_44636,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44615));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44648 =
                            sdiv_up64(groups_per_segment_44615,
                                      segred_group_sizze_31800);
                    
                    x_31804 = 0.0F;
                    for (int64_t i_44649 = 0; i_44649 < read_per_thread_44648;
                         i_44649++) {
                        int64_t group_res_id_44650 =
                                sext_i32_i64(local_tid_44625) *
                                read_per_thread_44648 + i_44649;
                        int64_t index_of_group_res_44651 =
                                sext_i32_i64(flat_segment_id_44636) *
                                groups_per_segment_44615 + group_res_id_44650;
                        
                        if (slt64(group_res_id_44650,
                                  groups_per_segment_44615)) {
                            x_31805 = ((__global
                                        float *) group_res_arr_mem_44620)[index_of_group_res_44651 *
                                                                          segred_group_sizze_31800];
                            
                            float defunc_1_op_res_31806;
                            
                            defunc_1_op_res_31806 = x_31804 + x_31805;
                            x_31804 = defunc_1_op_res_31806;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625)] =
                    x_31804;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44652;
                    int32_t skip_waves_44653;
                    
                    skip_waves_44653 = 1;
                    
                    float x_44640;
                    float x_44641;
                    
                    offset_44652 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44625,
                                  sext_i64_i32(segred_group_sizze_31800))) {
                            x_44640 = ((__local
                                        float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625 +
                                                                    offset_44652)];
                        }
                    }
                    offset_44652 = 1;
                    while (slt32(offset_44652, wave_sizze_44627)) {
                        if (slt32(local_tid_44625 + offset_44652,
                                  sext_i64_i32(segred_group_sizze_31800)) &&
                            ((local_tid_44625 - squot32(local_tid_44625,
                                                        wave_sizze_44627) *
                              wave_sizze_44627) & (2 * offset_44652 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44641 = ((volatile __local
                                            float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625 +
                                                                        offset_44652)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44642 = x_44640 + x_44641;
                                
                                x_44640 = defunc_1_op_res_44642;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625)] =
                                    x_44640;
                            }
                        }
                        offset_44652 *= 2;
                    }
                    while (slt32(skip_waves_44653,
                                 squot32(sext_i64_i32(segred_group_sizze_31800) +
                                         wave_sizze_44627 - 1,
                                         wave_sizze_44627))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44652 = skip_waves_44653 * wave_sizze_44627;
                        if (slt32(local_tid_44625 + offset_44652,
                                  sext_i64_i32(segred_group_sizze_31800)) &&
                            ((local_tid_44625 - squot32(local_tid_44625,
                                                        wave_sizze_44627) *
                              wave_sizze_44627) == 0 &&
                             (squot32(local_tid_44625, wave_sizze_44627) & (2 *
                                                                            skip_waves_44653 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44641 = ((__local
                                            float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625 +
                                                                        offset_44652)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44642 = x_44640 + x_44641;
                                
                                x_44640 = defunc_1_op_res_44642;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44629)[sext_i32_i64(local_tid_44625)] =
                                    x_44640;
                            }
                        }
                        skip_waves_44653 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44625 == 0) {
                            ((__global float *) mem_43392)[gtid_31745] =
                                x_44640;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31800
}
__kernel void mainDetailedzisegred_large_31775(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44571_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44569_backing_aligned_1,
                                               int64_t N_27370,
                                               int64_t i32_res_27380,
                                               int64_t num_groups_31787,
                                               int64_t groups_per_segment_44555,
                                               int64_t elements_per_thread_44556,
                                               int64_t virt_num_groups_44557,
                                               int64_t threads_per_segment_44559,
                                               __global
                                               unsigned char *images_mem_42538,
                                               __global
                                               unsigned char *mem_43389,
                                               __global
                                               unsigned char *group_res_arr_mem_44560,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44562)
{
    #define segred_group_sizze_31786 (mainDetailedzisegred_group_sizze_31769)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44571_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44571_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44569_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44569_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44564;
    int32_t local_tid_44565;
    int64_t group_sizze_44568;
    int32_t wave_sizze_44567;
    int32_t group_tid_44566;
    
    global_tid_44564 = get_global_id(0);
    local_tid_44565 = get_local_id(0);
    group_sizze_44568 = get_local_size(0);
    wave_sizze_44567 = LOCKSTEP_WIDTH;
    group_tid_44566 = get_group_id(0);
    
    int32_t phys_tid_31775;
    
    phys_tid_31775 = global_tid_44564;
    
    __local char *red_arr_mem_44569;
    
    red_arr_mem_44569 = (__local char *) red_arr_mem_44569_backing_0;
    
    __local char *sync_arr_mem_44571;
    
    sync_arr_mem_44571 = (__local char *) sync_arr_mem_44571_backing_1;
    
    int32_t phys_group_id_44573;
    
    phys_group_id_44573 = get_group_id(0);
    for (int32_t i_44574 = 0; i_44574 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44557) - phys_group_id_44573,
                   sext_i64_i32(num_groups_31787)); i_44574++) {
        int32_t virt_group_id_44575 = phys_group_id_44573 + i_44574 *
                sext_i64_i32(num_groups_31787);
        int32_t flat_segment_id_44576 = squot32(virt_group_id_44575,
                                                sext_i64_i32(groups_per_segment_44555));
        int64_t global_tid_44577 = srem64(sext_i32_i64(virt_group_id_44575) *
                                          segred_group_sizze_31786 +
                                          sext_i32_i64(local_tid_44565),
                                          segred_group_sizze_31786 *
                                          groups_per_segment_44555);
        int64_t gtid_31766 = sext_i32_i64(flat_segment_id_44576);
        int64_t gtid_31774;
        int32_t x_acc_44578;
        int64_t chunk_sizze_44579;
        
        chunk_sizze_44579 = smin64(elements_per_thread_44556,
                                   sdiv_up64(i32_res_27380 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44577)),
                                             threads_per_segment_44559));
        
        int32_t x_31790;
        int32_t x_31791;
        
        // neutral-initialise the accumulators
        {
            x_acc_44578 = 0;
        }
        for (int64_t i_44583 = 0; i_44583 < chunk_sizze_44579; i_44583++) {
            gtid_31774 = sext_i32_i64(sext_i64_i32(global_tid_44577)) +
                threads_per_segment_44559 * i_44583;
            // apply map function
            {
                float x_31794 = ((__global
                                  float *) images_mem_42538)[gtid_31766 *
                                                             N_27370 +
                                                             gtid_31774];
                bool isnan_res_31795;
                
                isnan_res_31795 = futrts_isnan32(x_31794);
                
                bool cond_31796 = !isnan_res_31795;
                int32_t defunc_0_f_res_31797 = btoi_bool_i32(cond_31796);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31790 = x_acc_44578;
                }
                // load new values
                {
                    x_31791 = defunc_0_f_res_31797;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_31792 = add32(x_31790, x_31791);
                    
                    // store in accumulator
                    {
                        x_acc_44578 = defunc_1_op_res_31792;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31790 = x_acc_44578;
            ((__local
              int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565)] =
                x_31790;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44584;
        int32_t skip_waves_44585;
        
        skip_waves_44585 = 1;
        
        int32_t x_44580;
        int32_t x_44581;
        
        offset_44584 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44565,
                      sext_i64_i32(segred_group_sizze_31786))) {
                x_44580 = ((__local
                            int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565 +
                                                          offset_44584)];
            }
        }
        offset_44584 = 1;
        while (slt32(offset_44584, wave_sizze_44567)) {
            if (slt32(local_tid_44565 + offset_44584,
                      sext_i64_i32(segred_group_sizze_31786)) &&
                ((local_tid_44565 - squot32(local_tid_44565, wave_sizze_44567) *
                  wave_sizze_44567) & (2 * offset_44584 - 1)) == 0) {
                // read array element
                {
                    x_44581 = ((volatile __local
                                int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565 +
                                                              offset_44584)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44582 = add32(x_44580, x_44581);
                    
                    x_44580 = defunc_1_op_res_44582;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565)] =
                        x_44580;
                }
            }
            offset_44584 *= 2;
        }
        while (slt32(skip_waves_44585,
                     squot32(sext_i64_i32(segred_group_sizze_31786) +
                             wave_sizze_44567 - 1, wave_sizze_44567))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44584 = skip_waves_44585 * wave_sizze_44567;
            if (slt32(local_tid_44565 + offset_44584,
                      sext_i64_i32(segred_group_sizze_31786)) &&
                ((local_tid_44565 - squot32(local_tid_44565, wave_sizze_44567) *
                  wave_sizze_44567) == 0 && (squot32(local_tid_44565,
                                                     wave_sizze_44567) & (2 *
                                                                          skip_waves_44585 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44581 = ((__local
                                int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565 +
                                                              offset_44584)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44582 = add32(x_44580, x_44581);
                    
                    x_44580 = defunc_1_op_res_44582;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565)] =
                        x_44580;
                }
            }
            skip_waves_44585 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44565) == (int64_t) 0) {
                x_acc_44578 = x_44580;
            }
        }
        if (groups_per_segment_44555 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44565 == 0) {
                    ((__global int32_t *) mem_43389)[gtid_31766] = x_acc_44578;
                }
            }
        } else {
            int32_t old_counter_44586;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44565 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44560)[sext_i32_i64(virt_group_id_44575) *
                                                          segred_group_sizze_31786] =
                        x_acc_44578;
                    mem_fence_global();
                    old_counter_44586 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44562)[sext_i32_i64(srem32(flat_segment_id_44576,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44571)[(int64_t) 0] =
                        old_counter_44586 == groups_per_segment_44555 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44587;
            
            is_last_group_44587 = ((__local
                                    bool *) sync_arr_mem_44571)[(int64_t) 0];
            if (is_last_group_44587) {
                if (local_tid_44565 == 0) {
                    old_counter_44586 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44562)[sext_i32_i64(srem32(flat_segment_id_44576,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44555));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44588 =
                            sdiv_up64(groups_per_segment_44555,
                                      segred_group_sizze_31786);
                    
                    x_31790 = 0;
                    for (int64_t i_44589 = 0; i_44589 < read_per_thread_44588;
                         i_44589++) {
                        int64_t group_res_id_44590 =
                                sext_i32_i64(local_tid_44565) *
                                read_per_thread_44588 + i_44589;
                        int64_t index_of_group_res_44591 =
                                sext_i32_i64(flat_segment_id_44576) *
                                groups_per_segment_44555 + group_res_id_44590;
                        
                        if (slt64(group_res_id_44590,
                                  groups_per_segment_44555)) {
                            x_31791 = ((__global
                                        int32_t *) group_res_arr_mem_44560)[index_of_group_res_44591 *
                                                                            segred_group_sizze_31786];
                            
                            int32_t defunc_1_op_res_31792;
                            
                            defunc_1_op_res_31792 = add32(x_31790, x_31791);
                            x_31790 = defunc_1_op_res_31792;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565)] =
                    x_31790;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44592;
                    int32_t skip_waves_44593;
                    
                    skip_waves_44593 = 1;
                    
                    int32_t x_44580;
                    int32_t x_44581;
                    
                    offset_44592 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44565,
                                  sext_i64_i32(segred_group_sizze_31786))) {
                            x_44580 = ((__local
                                        int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565 +
                                                                      offset_44592)];
                        }
                    }
                    offset_44592 = 1;
                    while (slt32(offset_44592, wave_sizze_44567)) {
                        if (slt32(local_tid_44565 + offset_44592,
                                  sext_i64_i32(segred_group_sizze_31786)) &&
                            ((local_tid_44565 - squot32(local_tid_44565,
                                                        wave_sizze_44567) *
                              wave_sizze_44567) & (2 * offset_44592 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44581 = ((volatile __local
                                            int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565 +
                                                                          offset_44592)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44582 = add32(x_44580,
                                                                      x_44581);
                                
                                x_44580 = defunc_1_op_res_44582;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565)] =
                                    x_44580;
                            }
                        }
                        offset_44592 *= 2;
                    }
                    while (slt32(skip_waves_44593,
                                 squot32(sext_i64_i32(segred_group_sizze_31786) +
                                         wave_sizze_44567 - 1,
                                         wave_sizze_44567))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44592 = skip_waves_44593 * wave_sizze_44567;
                        if (slt32(local_tid_44565 + offset_44592,
                                  sext_i64_i32(segred_group_sizze_31786)) &&
                            ((local_tid_44565 - squot32(local_tid_44565,
                                                        wave_sizze_44567) *
                              wave_sizze_44567) == 0 &&
                             (squot32(local_tid_44565, wave_sizze_44567) & (2 *
                                                                            skip_waves_44593 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44581 = ((__local
                                            int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565 +
                                                                          offset_44592)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44582 = add32(x_44580,
                                                                      x_44581);
                                
                                x_44580 = defunc_1_op_res_44582;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44569)[sext_i32_i64(local_tid_44565)] =
                                    x_44580;
                            }
                        }
                        skip_waves_44593 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44565 == 0) {
                            ((__global int32_t *) mem_43389)[gtid_31766] =
                                x_44580;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31786
}
__kernel void mainDetailedzisegred_large_31926(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44740_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44738_backing_aligned_1,
                                               int64_t N_27370,
                                               int64_t i32_res_27741,
                                               int64_t num_groups_31944,
                                               int64_t groups_per_segment_44724,
                                               int64_t elements_per_thread_44725,
                                               int64_t virt_num_groups_44726,
                                               int64_t threads_per_segment_44728,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43335,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43401,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43402,
                                               __global
                                               unsigned char *mem_43435,
                                               __global
                                               unsigned char *group_res_arr_mem_44729,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44731)
{
    #define segred_group_sizze_31943 (mainDetailedzisegred_group_sizze_31920)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44740_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44740_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44738_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44738_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44733;
    int32_t local_tid_44734;
    int64_t group_sizze_44737;
    int32_t wave_sizze_44736;
    int32_t group_tid_44735;
    
    global_tid_44733 = get_global_id(0);
    local_tid_44734 = get_local_id(0);
    group_sizze_44737 = get_local_size(0);
    wave_sizze_44736 = LOCKSTEP_WIDTH;
    group_tid_44735 = get_group_id(0);
    
    int32_t phys_tid_31926;
    
    phys_tid_31926 = global_tid_44733;
    
    __local char *red_arr_mem_44738;
    
    red_arr_mem_44738 = (__local char *) red_arr_mem_44738_backing_0;
    
    __local char *sync_arr_mem_44740;
    
    sync_arr_mem_44740 = (__local char *) sync_arr_mem_44740_backing_1;
    
    int32_t phys_group_id_44742;
    
    phys_group_id_44742 = get_group_id(0);
    for (int32_t i_44743 = 0; i_44743 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44726) - phys_group_id_44742,
                   sext_i64_i32(num_groups_31944)); i_44743++) {
        int32_t virt_group_id_44744 = phys_group_id_44742 + i_44743 *
                sext_i64_i32(num_groups_31944);
        int32_t flat_segment_id_44745 = squot32(virt_group_id_44744,
                                                sext_i64_i32(groups_per_segment_44724));
        int64_t global_tid_44746 = srem64(sext_i32_i64(virt_group_id_44744) *
                                          segred_group_sizze_31943 +
                                          sext_i32_i64(local_tid_44734),
                                          segred_group_sizze_31943 *
                                          groups_per_segment_44724);
        int64_t gtid_31917 = sext_i32_i64(flat_segment_id_44745);
        int64_t gtid_31925;
        float x_acc_44747;
        int64_t chunk_sizze_44748;
        
        chunk_sizze_44748 = smin64(elements_per_thread_44725,
                                   sdiv_up64(i32_res_27741 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44746)),
                                             threads_per_segment_44728));
        
        float x_31947;
        float x_31948;
        
        // neutral-initialise the accumulators
        {
            x_acc_44747 = 0.0F;
        }
        for (int64_t i_44752 = 0; i_44752 < chunk_sizze_44748; i_44752++) {
            gtid_31925 = sext_i32_i64(sext_i64_i32(global_tid_44746)) +
                threads_per_segment_44728 * i_44752;
            // apply map function
            {
                int32_t x_31952 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43401)[gtid_31917];
                int32_t index_primexp_40579 = sext_i64_i32(gtid_31925);
                bool cond_31954 = slt32(index_primexp_40579, x_31952);
                float defunc_0_f_res_31955;
                
                if (cond_31954) {
                    int32_t x_31951 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_31917];
                    int32_t x_31956 = add32(x_31951, index_primexp_40579);
                    int32_t x_31957 = sub32(x_31956, x_31952);
                    int32_t i_31958 = add32(1, x_31957);
                    int64_t i_31959 = sext_i32_i64(i_31958);
                    float defunc_0_f_res_t_res_31960 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_31917 *
                                                                                              N_27370 +
                                                                                              i_31959];
                    
                    defunc_0_f_res_31955 = defunc_0_f_res_t_res_31960;
                } else {
                    defunc_0_f_res_31955 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_31947 = x_acc_44747;
                }
                // load new values
                {
                    x_31948 = defunc_0_f_res_31955;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31949 = x_31947 + x_31948;
                    
                    // store in accumulator
                    {
                        x_acc_44747 = defunc_1_op_res_31949;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31947 = x_acc_44747;
            ((__local
              float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                x_31947;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44753;
        int32_t skip_waves_44754;
        
        skip_waves_44754 = 1;
        
        float x_44749;
        float x_44750;
        
        offset_44753 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44734,
                      sext_i64_i32(segred_group_sizze_31943))) {
                x_44749 = ((__local
                            float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734 +
                                                        offset_44753)];
            }
        }
        offset_44753 = 1;
        while (slt32(offset_44753, wave_sizze_44736)) {
            if (slt32(local_tid_44734 + offset_44753,
                      sext_i64_i32(segred_group_sizze_31943)) &&
                ((local_tid_44734 - squot32(local_tid_44734, wave_sizze_44736) *
                  wave_sizze_44736) & (2 * offset_44753 - 1)) == 0) {
                // read array element
                {
                    x_44750 = ((volatile __local
                                float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734 +
                                                            offset_44753)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44751 = x_44749 + x_44750;
                    
                    x_44749 = defunc_1_op_res_44751;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                        x_44749;
                }
            }
            offset_44753 *= 2;
        }
        while (slt32(skip_waves_44754,
                     squot32(sext_i64_i32(segred_group_sizze_31943) +
                             wave_sizze_44736 - 1, wave_sizze_44736))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44753 = skip_waves_44754 * wave_sizze_44736;
            if (slt32(local_tid_44734 + offset_44753,
                      sext_i64_i32(segred_group_sizze_31943)) &&
                ((local_tid_44734 - squot32(local_tid_44734, wave_sizze_44736) *
                  wave_sizze_44736) == 0 && (squot32(local_tid_44734,
                                                     wave_sizze_44736) & (2 *
                                                                          skip_waves_44754 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44750 = ((__local
                                float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734 +
                                                            offset_44753)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44751 = x_44749 + x_44750;
                    
                    x_44749 = defunc_1_op_res_44751;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                        x_44749;
                }
            }
            skip_waves_44754 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44734) == (int64_t) 0) {
                x_acc_44747 = x_44749;
            }
        }
        if (groups_per_segment_44724 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44734 == 0) {
                    ((__global float *) mem_43435)[gtid_31917] = x_acc_44747;
                }
            }
        } else {
            int32_t old_counter_44755;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44734 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44729)[sext_i32_i64(virt_group_id_44744) *
                                                        segred_group_sizze_31943] =
                        x_acc_44747;
                    mem_fence_global();
                    old_counter_44755 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44731)[sext_i32_i64(srem32(flat_segment_id_44745,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44740)[(int64_t) 0] =
                        old_counter_44755 == groups_per_segment_44724 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44756;
            
            is_last_group_44756 = ((__local
                                    bool *) sync_arr_mem_44740)[(int64_t) 0];
            if (is_last_group_44756) {
                if (local_tid_44734 == 0) {
                    old_counter_44755 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44731)[sext_i32_i64(srem32(flat_segment_id_44745,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44724));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44757 =
                            sdiv_up64(groups_per_segment_44724,
                                      segred_group_sizze_31943);
                    
                    x_31947 = 0.0F;
                    for (int64_t i_44758 = 0; i_44758 < read_per_thread_44757;
                         i_44758++) {
                        int64_t group_res_id_44759 =
                                sext_i32_i64(local_tid_44734) *
                                read_per_thread_44757 + i_44758;
                        int64_t index_of_group_res_44760 =
                                sext_i32_i64(flat_segment_id_44745) *
                                groups_per_segment_44724 + group_res_id_44759;
                        
                        if (slt64(group_res_id_44759,
                                  groups_per_segment_44724)) {
                            x_31948 = ((__global
                                        float *) group_res_arr_mem_44729)[index_of_group_res_44760 *
                                                                          segred_group_sizze_31943];
                            
                            float defunc_1_op_res_31949;
                            
                            defunc_1_op_res_31949 = x_31947 + x_31948;
                            x_31947 = defunc_1_op_res_31949;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                    x_31947;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44761;
                    int32_t skip_waves_44762;
                    
                    skip_waves_44762 = 1;
                    
                    float x_44749;
                    float x_44750;
                    
                    offset_44761 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44734,
                                  sext_i64_i32(segred_group_sizze_31943))) {
                            x_44749 = ((__local
                                        float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734 +
                                                                    offset_44761)];
                        }
                    }
                    offset_44761 = 1;
                    while (slt32(offset_44761, wave_sizze_44736)) {
                        if (slt32(local_tid_44734 + offset_44761,
                                  sext_i64_i32(segred_group_sizze_31943)) &&
                            ((local_tid_44734 - squot32(local_tid_44734,
                                                        wave_sizze_44736) *
                              wave_sizze_44736) & (2 * offset_44761 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44750 = ((volatile __local
                                            float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734 +
                                                                        offset_44761)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44751 = x_44749 + x_44750;
                                
                                x_44749 = defunc_1_op_res_44751;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                                    x_44749;
                            }
                        }
                        offset_44761 *= 2;
                    }
                    while (slt32(skip_waves_44762,
                                 squot32(sext_i64_i32(segred_group_sizze_31943) +
                                         wave_sizze_44736 - 1,
                                         wave_sizze_44736))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44761 = skip_waves_44762 * wave_sizze_44736;
                        if (slt32(local_tid_44734 + offset_44761,
                                  sext_i64_i32(segred_group_sizze_31943)) &&
                            ((local_tid_44734 - squot32(local_tid_44734,
                                                        wave_sizze_44736) *
                              wave_sizze_44736) == 0 &&
                             (squot32(local_tid_44734, wave_sizze_44736) & (2 *
                                                                            skip_waves_44762 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44750 = ((__local
                                            float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734 +
                                                                        offset_44761)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44751 = x_44749 + x_44750;
                                
                                x_44749 = defunc_1_op_res_44751;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44738)[sext_i32_i64(local_tid_44734)] =
                                    x_44749;
                            }
                        }
                        skip_waves_44762 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44734 == 0) {
                            ((__global float *) mem_43435)[gtid_31917] =
                                x_44749;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31943
}
__kernel void mainDetailedzisegred_large_33031(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44967_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44965_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_44963_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_44961_backing_aligned_3,
                                               int64_t iota32_arg_27766,
                                               int64_t iota32_arg_27794,
                                               int64_t num_groups_33160,
                                               int64_t groups_per_segment_44943,
                                               int64_t elements_per_thread_44944,
                                               int64_t virt_num_groups_44945,
                                               __global
                                               unsigned char *mem_43439,
                                               __global
                                               unsigned char *mem_43556,
                                               __global
                                               unsigned char *mem_43560,
                                               __global
                                               unsigned char *mem_43563,
                                               __global
                                               unsigned char *mem_43566,
                                               __global
                                               unsigned char *mem_43568,
                                               __global
                                               unsigned char *mem_43570,
                                               __global
                                               unsigned char *mem_43573,
                                               __global
                                               unsigned char *group_res_arr_mem_44948,
                                               __global
                                               unsigned char *group_res_arr_mem_44950,
                                               __global
                                               unsigned char *group_res_arr_mem_44952,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44954)
{
    #define segred_group_sizze_33159 (mainDetailedzisegred_group_sizze_33025)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44967_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_44967_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44965_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44965_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44963_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44963_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44961_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44961_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44956;
    int32_t local_tid_44957;
    int64_t group_sizze_44960;
    int32_t wave_sizze_44959;
    int32_t group_tid_44958;
    
    global_tid_44956 = get_global_id(0);
    local_tid_44957 = get_local_id(0);
    group_sizze_44960 = get_local_size(0);
    wave_sizze_44959 = LOCKSTEP_WIDTH;
    group_tid_44958 = get_group_id(0);
    
    int32_t phys_tid_33031;
    
    phys_tid_33031 = global_tid_44956;
    
    __local char *red_arr_mem_44961;
    
    red_arr_mem_44961 = (__local char *) red_arr_mem_44961_backing_0;
    
    __local char *red_arr_mem_44963;
    
    red_arr_mem_44963 = (__local char *) red_arr_mem_44963_backing_1;
    
    __local char *red_arr_mem_44965;
    
    red_arr_mem_44965 = (__local char *) red_arr_mem_44965_backing_2;
    
    __local char *sync_arr_mem_44967;
    
    sync_arr_mem_44967 = (__local char *) sync_arr_mem_44967_backing_3;
    
    int32_t phys_group_id_44969;
    
    phys_group_id_44969 = get_group_id(0);
    for (int32_t i_44970 = 0; i_44970 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44945) - phys_group_id_44969,
                   sext_i64_i32(num_groups_33160)); i_44970++) {
        int32_t virt_group_id_44971 = phys_group_id_44969 + i_44970 *
                sext_i64_i32(num_groups_33160);
        int32_t flat_segment_id_44972 = squot32(virt_group_id_44971,
                                                sext_i64_i32(groups_per_segment_44943));
        int64_t global_tid_44973 = srem64(sext_i32_i64(virt_group_id_44971) *
                                          segred_group_sizze_33159 +
                                          sext_i32_i64(local_tid_44957),
                                          segred_group_sizze_33159 *
                                          groups_per_segment_44943);
        int64_t gtid_33022 = sext_i32_i64(flat_segment_id_44972);
        int64_t gtid_33030;
        bool x_acc_44974;
        int32_t x_acc_44975;
        float x_acc_44976;
        int64_t chunk_sizze_44977;
        int64_t starting_point_44978;
        
        starting_point_44978 = sext_i32_i64(sext_i64_i32(global_tid_44973)) *
            elements_per_thread_44944;
        
        int64_t remaining_elements_44979;
        
        remaining_elements_44979 = iota32_arg_27766 - starting_point_44978;
        if (sle64(remaining_elements_44979, (int64_t) 0) ||
            sle64(iota32_arg_27766, starting_point_44978)) {
            chunk_sizze_44977 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_27766,
                      (sext_i32_i64(sext_i64_i32(global_tid_44973)) +
                       (int64_t) 1) * elements_per_thread_44944)) {
                chunk_sizze_44977 = iota32_arg_27766 -
                    sext_i32_i64(sext_i64_i32(global_tid_44973)) *
                    elements_per_thread_44944;
            } else {
                chunk_sizze_44977 = elements_per_thread_44944;
            }
        }
        
        bool x_33166;
        int32_t x_33167;
        float x_33168;
        bool x_33169;
        int32_t x_33170;
        float x_33171;
        
        // neutral-initialise the accumulators
        {
            x_acc_44974 = 0;
            x_acc_44975 = -1;
            x_acc_44976 = 0.0F;
        }
        for (int64_t i_44994 = 0; i_44994 < elements_per_thread_44944;
             i_44994++) {
            gtid_33030 = sext_i32_i64(local_tid_44957) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_44973),
                                      sext_i64_i32(segred_group_sizze_33159))) *
                 elements_per_thread_44944 + i_44994) *
                segred_group_sizze_33159;
            if (slt64(gtid_33030, iota32_arg_27766)) {
                // apply map function
                {
                    int32_t y_33180 = ((__global
                                        int32_t *) mem_43556)[gtid_33022];
                    float y_33181 = ((__global float *) mem_43563)[gtid_33022];
                    int64_t binop_x_40637 = iota32_arg_27766 * gtid_33022;
                    int64_t binop_x_40638 = gtid_33030 + binop_x_40637;
                    int64_t new_index_40639 = squot64(binop_x_40638,
                                                      iota32_arg_27794);
                    int64_t binop_y_40645 = iota32_arg_27794 * new_index_40639;
                    int64_t new_index_40646 = binop_x_40638 - binop_y_40645;
                    float x_33183 = ((__global
                                      float *) mem_43560)[new_index_40639 *
                                                          iota32_arg_27794 +
                                                          new_index_40646];
                    float x_33184 = ((__global float *) mem_43439)[gtid_33030];
                    int32_t index_primexp_40603 = sext_i64_i32(gtid_33030);
                    float defunc_0_f_res_33186 = x_33183 / y_33181;
                    bool cond_33187 = slt32(index_primexp_40603, y_33180);
                    bool isnan_res_33188;
                    
                    isnan_res_33188 = futrts_isnan32(defunc_0_f_res_33186);
                    
                    bool cond_t_res_33189 = !isnan_res_33188;
                    bool x_33190 = cond_33187 && cond_t_res_33189;
                    float abs_res_33191 = (float) fabs(defunc_0_f_res_33186);
                    bool defunc_2_f_res_t_res_33192 = x_33184 < abs_res_33191;
                    bool x_33193 = x_33190 && defunc_2_f_res_t_res_33192;
                    float defunc_1_f_res_33194;
                    
                    if (cond_33187) {
                        defunc_1_f_res_33194 = defunc_0_f_res_33186;
                    } else {
                        defunc_1_f_res_33194 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_43573)[gtid_33022 *
                                                       iota32_arg_27766 +
                                                       gtid_33030] =
                            defunc_0_f_res_33186;
                    }
                    // load accumulator
                    {
                        x_33166 = x_acc_44974;
                        x_33167 = x_acc_44975;
                        x_33168 = x_acc_44976;
                    }
                    // load new values
                    {
                        x_33169 = x_33193;
                        x_33170 = index_primexp_40603;
                        x_33171 = defunc_1_f_res_33194;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_33172;
                        int32_t defunc_1_op_res_33173;
                        
                        if (x_33166) {
                            defunc_1_op_res_33172 = x_33166;
                            defunc_1_op_res_33173 = x_33167;
                        } else {
                            bool x_33174 = x_33169 && x_33169;
                            bool x_33175 = !x_33169;
                            bool y_33176 = x_33166 && x_33175;
                            bool defunc_1_op_res_f_res_33177 = x_33174 ||
                                 y_33176;
                            int32_t defunc_1_op_res_f_res_33178;
                            
                            if (x_33169) {
                                defunc_1_op_res_f_res_33178 = x_33170;
                            } else {
                                defunc_1_op_res_f_res_33178 = x_33167;
                            }
                            defunc_1_op_res_33172 = defunc_1_op_res_f_res_33177;
                            defunc_1_op_res_33173 = defunc_1_op_res_f_res_33178;
                        }
                        
                        float defunc_1_op_res_33179 = x_33168 + x_33171;
                        
                        // store in accumulator
                        {
                            x_acc_44974 = defunc_1_op_res_33172;
                            x_acc_44975 = defunc_1_op_res_33173;
                            x_acc_44976 = defunc_1_op_res_33179;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_33166 = x_acc_44974;
                x_33167 = x_acc_44975;
                x_33168 = x_acc_44976;
                ((__local
                  bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                    x_33166;
                ((__local
                  int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957)] =
                    x_33167;
                ((__local
                  float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957)] =
                    x_33168;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_44995;
            int32_t skip_waves_44996;
            
            skip_waves_44996 = 1;
            
            bool x_44980;
            int32_t x_44981;
            float x_44982;
            bool x_44983;
            int32_t x_44984;
            float x_44985;
            
            offset_44995 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44957,
                          sext_i64_i32(segred_group_sizze_33159))) {
                    x_44980 = ((__local
                                bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                           offset_44995)];
                    x_44981 = ((__local
                                int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957 +
                                                              offset_44995)];
                    x_44982 = ((__local
                                float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957 +
                                                            offset_44995)];
                }
            }
            offset_44995 = 1;
            while (slt32(offset_44995, wave_sizze_44959)) {
                if (slt32(local_tid_44957 + offset_44995,
                          sext_i64_i32(segred_group_sizze_33159)) &&
                    ((local_tid_44957 - squot32(local_tid_44957,
                                                wave_sizze_44959) *
                      wave_sizze_44959) & (2 * offset_44995 - 1)) == 0) {
                    // read array element
                    {
                        x_44983 = ((volatile __local
                                    bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                               offset_44995)];
                        x_44984 = ((volatile __local
                                    int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957 +
                                                                  offset_44995)];
                        x_44985 = ((volatile __local
                                    float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957 +
                                                                offset_44995)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44986;
                        int32_t defunc_1_op_res_44987;
                        
                        if (x_44980) {
                            defunc_1_op_res_44986 = x_44980;
                            defunc_1_op_res_44987 = x_44981;
                        } else {
                            bool x_44988 = x_44983 && x_44983;
                            bool x_44989 = !x_44983;
                            bool y_44990 = x_44980 && x_44989;
                            bool defunc_1_op_res_f_res_44991 = x_44988 ||
                                 y_44990;
                            int32_t defunc_1_op_res_f_res_44992;
                            
                            if (x_44983) {
                                defunc_1_op_res_f_res_44992 = x_44984;
                            } else {
                                defunc_1_op_res_f_res_44992 = x_44981;
                            }
                            defunc_1_op_res_44986 = defunc_1_op_res_f_res_44991;
                            defunc_1_op_res_44987 = defunc_1_op_res_f_res_44992;
                        }
                        
                        float defunc_1_op_res_44993 = x_44982 + x_44985;
                        
                        x_44980 = defunc_1_op_res_44986;
                        x_44981 = defunc_1_op_res_44987;
                        x_44982 = defunc_1_op_res_44993;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                            x_44980;
                        ((volatile __local
                          int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957)] =
                            x_44981;
                        ((volatile __local
                          float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957)] =
                            x_44982;
                    }
                }
                offset_44995 *= 2;
            }
            while (slt32(skip_waves_44996,
                         squot32(sext_i64_i32(segred_group_sizze_33159) +
                                 wave_sizze_44959 - 1, wave_sizze_44959))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44995 = skip_waves_44996 * wave_sizze_44959;
                if (slt32(local_tid_44957 + offset_44995,
                          sext_i64_i32(segred_group_sizze_33159)) &&
                    ((local_tid_44957 - squot32(local_tid_44957,
                                                wave_sizze_44959) *
                      wave_sizze_44959) == 0 && (squot32(local_tid_44957,
                                                         wave_sizze_44959) &
                                                 (2 * skip_waves_44996 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44983 = ((__local
                                    bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                               offset_44995)];
                        x_44984 = ((__local
                                    int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957 +
                                                                  offset_44995)];
                        x_44985 = ((__local
                                    float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957 +
                                                                offset_44995)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44986;
                        int32_t defunc_1_op_res_44987;
                        
                        if (x_44980) {
                            defunc_1_op_res_44986 = x_44980;
                            defunc_1_op_res_44987 = x_44981;
                        } else {
                            bool x_44988 = x_44983 && x_44983;
                            bool x_44989 = !x_44983;
                            bool y_44990 = x_44980 && x_44989;
                            bool defunc_1_op_res_f_res_44991 = x_44988 ||
                                 y_44990;
                            int32_t defunc_1_op_res_f_res_44992;
                            
                            if (x_44983) {
                                defunc_1_op_res_f_res_44992 = x_44984;
                            } else {
                                defunc_1_op_res_f_res_44992 = x_44981;
                            }
                            defunc_1_op_res_44986 = defunc_1_op_res_f_res_44991;
                            defunc_1_op_res_44987 = defunc_1_op_res_f_res_44992;
                        }
                        
                        float defunc_1_op_res_44993 = x_44982 + x_44985;
                        
                        x_44980 = defunc_1_op_res_44986;
                        x_44981 = defunc_1_op_res_44987;
                        x_44982 = defunc_1_op_res_44993;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                            x_44980;
                        ((__local
                          int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957)] =
                            x_44981;
                        ((__local
                          float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957)] =
                            x_44982;
                    }
                }
                skip_waves_44996 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_44957) == (int64_t) 0) {
                    x_acc_44974 = x_44980;
                    x_acc_44975 = x_44981;
                    x_acc_44976 = x_44982;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_44957) == (int64_t) 0)) {
                    x_acc_44974 = 0;
                    x_acc_44975 = -1;
                    x_acc_44976 = 0.0F;
                }
            }
        }
        x_33166 = x_acc_44974;
        x_33167 = x_acc_44975;
        x_33168 = x_acc_44976;
        if (groups_per_segment_44943 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44957 == 0) {
                    ((__global bool *) mem_43566)[gtid_33022] = x_acc_44974;
                    ((__global int32_t *) mem_43568)[gtid_33022] = x_acc_44975;
                    ((__global float *) mem_43570)[gtid_33022] = x_acc_44976;
                }
            }
        } else {
            int32_t old_counter_44997;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44957 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_44948)[sext_i32_i64(virt_group_id_44971) *
                                                       segred_group_sizze_33159] =
                        x_acc_44974;
                    ((__global
                      int32_t *) group_res_arr_mem_44950)[sext_i32_i64(virt_group_id_44971) *
                                                          segred_group_sizze_33159] =
                        x_acc_44975;
                    ((__global
                      float *) group_res_arr_mem_44952)[sext_i32_i64(virt_group_id_44971) *
                                                        segred_group_sizze_33159] =
                        x_acc_44976;
                    mem_fence_global();
                    old_counter_44997 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44954)[sext_i32_i64(srem32(flat_segment_id_44972,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44967)[(int64_t) 0] =
                        old_counter_44997 == groups_per_segment_44943 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44998;
            
            is_last_group_44998 = ((__local
                                    bool *) sync_arr_mem_44967)[(int64_t) 0];
            if (is_last_group_44998) {
                if (local_tid_44957 == 0) {
                    old_counter_44997 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44954)[sext_i32_i64(srem32(flat_segment_id_44972,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44943));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44999 =
                            sdiv_up64(groups_per_segment_44943,
                                      segred_group_sizze_33159);
                    
                    x_33166 = 0;
                    x_33167 = -1;
                    x_33168 = 0.0F;
                    for (int64_t i_45000 = 0; i_45000 < read_per_thread_44999;
                         i_45000++) {
                        int64_t group_res_id_45001 =
                                sext_i32_i64(local_tid_44957) *
                                read_per_thread_44999 + i_45000;
                        int64_t index_of_group_res_45002 =
                                sext_i32_i64(flat_segment_id_44972) *
                                groups_per_segment_44943 + group_res_id_45001;
                        
                        if (slt64(group_res_id_45001,
                                  groups_per_segment_44943)) {
                            x_33169 = ((__global
                                        bool *) group_res_arr_mem_44948)[index_of_group_res_45002 *
                                                                         segred_group_sizze_33159];
                            x_33170 = ((__global
                                        int32_t *) group_res_arr_mem_44950)[index_of_group_res_45002 *
                                                                            segred_group_sizze_33159];
                            x_33171 = ((__global
                                        float *) group_res_arr_mem_44952)[index_of_group_res_45002 *
                                                                          segred_group_sizze_33159];
                            
                            bool defunc_1_op_res_33172;
                            int32_t defunc_1_op_res_33173;
                            
                            if (x_33166) {
                                defunc_1_op_res_33172 = x_33166;
                                defunc_1_op_res_33173 = x_33167;
                            } else {
                                bool x_33174 = x_33169 && x_33169;
                                bool x_33175 = !x_33169;
                                bool y_33176 = x_33166 && x_33175;
                                bool defunc_1_op_res_f_res_33177 = x_33174 ||
                                     y_33176;
                                int32_t defunc_1_op_res_f_res_33178;
                                
                                if (x_33169) {
                                    defunc_1_op_res_f_res_33178 = x_33170;
                                } else {
                                    defunc_1_op_res_f_res_33178 = x_33167;
                                }
                                defunc_1_op_res_33172 =
                                    defunc_1_op_res_f_res_33177;
                                defunc_1_op_res_33173 =
                                    defunc_1_op_res_f_res_33178;
                            }
                            
                            float defunc_1_op_res_33179 = x_33168 + x_33171;
                            
                            x_33166 = defunc_1_op_res_33172;
                            x_33167 = defunc_1_op_res_33173;
                            x_33168 = defunc_1_op_res_33179;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                    x_33166;
                ((__local
                  int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957)] =
                    x_33167;
                ((__local
                  float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957)] =
                    x_33168;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45003;
                    int32_t skip_waves_45004;
                    
                    skip_waves_45004 = 1;
                    
                    bool x_44980;
                    int32_t x_44981;
                    float x_44982;
                    bool x_44983;
                    int32_t x_44984;
                    float x_44985;
                    
                    offset_45003 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44957,
                                  sext_i64_i32(segred_group_sizze_33159))) {
                            x_44980 = ((__local
                                        bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                                   offset_45003)];
                            x_44981 = ((__local
                                        int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957 +
                                                                      offset_45003)];
                            x_44982 = ((__local
                                        float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957 +
                                                                    offset_45003)];
                        }
                    }
                    offset_45003 = 1;
                    while (slt32(offset_45003, wave_sizze_44959)) {
                        if (slt32(local_tid_44957 + offset_45003,
                                  sext_i64_i32(segred_group_sizze_33159)) &&
                            ((local_tid_44957 - squot32(local_tid_44957,
                                                        wave_sizze_44959) *
                              wave_sizze_44959) & (2 * offset_45003 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44983 = ((volatile __local
                                            bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                                       offset_45003)];
                                x_44984 = ((volatile __local
                                            int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957 +
                                                                          offset_45003)];
                                x_44985 = ((volatile __local
                                            float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957 +
                                                                        offset_45003)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44986;
                                int32_t defunc_1_op_res_44987;
                                
                                if (x_44980) {
                                    defunc_1_op_res_44986 = x_44980;
                                    defunc_1_op_res_44987 = x_44981;
                                } else {
                                    bool x_44988 = x_44983 && x_44983;
                                    bool x_44989 = !x_44983;
                                    bool y_44990 = x_44980 && x_44989;
                                    bool defunc_1_op_res_f_res_44991 =
                                         x_44988 || y_44990;
                                    int32_t defunc_1_op_res_f_res_44992;
                                    
                                    if (x_44983) {
                                        defunc_1_op_res_f_res_44992 = x_44984;
                                    } else {
                                        defunc_1_op_res_f_res_44992 = x_44981;
                                    }
                                    defunc_1_op_res_44986 =
                                        defunc_1_op_res_f_res_44991;
                                    defunc_1_op_res_44987 =
                                        defunc_1_op_res_f_res_44992;
                                }
                                
                                float defunc_1_op_res_44993 = x_44982 + x_44985;
                                
                                x_44980 = defunc_1_op_res_44986;
                                x_44981 = defunc_1_op_res_44987;
                                x_44982 = defunc_1_op_res_44993;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                                    x_44980;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957)] =
                                    x_44981;
                                ((volatile __local
                                  float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957)] =
                                    x_44982;
                            }
                        }
                        offset_45003 *= 2;
                    }
                    while (slt32(skip_waves_45004,
                                 squot32(sext_i64_i32(segred_group_sizze_33159) +
                                         wave_sizze_44959 - 1,
                                         wave_sizze_44959))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45003 = skip_waves_45004 * wave_sizze_44959;
                        if (slt32(local_tid_44957 + offset_45003,
                                  sext_i64_i32(segred_group_sizze_33159)) &&
                            ((local_tid_44957 - squot32(local_tid_44957,
                                                        wave_sizze_44959) *
                              wave_sizze_44959) == 0 &&
                             (squot32(local_tid_44957, wave_sizze_44959) & (2 *
                                                                            skip_waves_45004 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44983 = ((__local
                                            bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                                       offset_45003)];
                                x_44984 = ((__local
                                            int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957 +
                                                                          offset_45003)];
                                x_44985 = ((__local
                                            float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957 +
                                                                        offset_45003)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44986;
                                int32_t defunc_1_op_res_44987;
                                
                                if (x_44980) {
                                    defunc_1_op_res_44986 = x_44980;
                                    defunc_1_op_res_44987 = x_44981;
                                } else {
                                    bool x_44988 = x_44983 && x_44983;
                                    bool x_44989 = !x_44983;
                                    bool y_44990 = x_44980 && x_44989;
                                    bool defunc_1_op_res_f_res_44991 =
                                         x_44988 || y_44990;
                                    int32_t defunc_1_op_res_f_res_44992;
                                    
                                    if (x_44983) {
                                        defunc_1_op_res_f_res_44992 = x_44984;
                                    } else {
                                        defunc_1_op_res_f_res_44992 = x_44981;
                                    }
                                    defunc_1_op_res_44986 =
                                        defunc_1_op_res_f_res_44991;
                                    defunc_1_op_res_44987 =
                                        defunc_1_op_res_f_res_44992;
                                }
                                
                                float defunc_1_op_res_44993 = x_44982 + x_44985;
                                
                                x_44980 = defunc_1_op_res_44986;
                                x_44981 = defunc_1_op_res_44987;
                                x_44982 = defunc_1_op_res_44993;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                                    x_44980;
                                ((__local
                                  int32_t *) red_arr_mem_44963)[sext_i32_i64(local_tid_44957)] =
                                    x_44981;
                                ((__local
                                  float *) red_arr_mem_44965)[sext_i32_i64(local_tid_44957)] =
                                    x_44982;
                            }
                        }
                        skip_waves_45004 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44957 == 0) {
                            ((__global bool *) mem_43566)[gtid_33022] = x_44980;
                            ((__global int32_t *) mem_43568)[gtid_33022] =
                                x_44981;
                            ((__global float *) mem_43570)[gtid_33022] =
                                x_44982;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33159
}
__kernel void mainDetailedzisegred_nonseg_31844(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44674_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_44672_backing_aligned_1,
                                                int64_t m_27371,
                                                int64_t num_groups_31839,
                                                int64_t num_threads_44666,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43401,
                                                __global
                                                unsigned char *mem_43406,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_44662,
                                                __global
                                                unsigned char *group_res_arr_mem_44664)
{
    #define segred_group_sizze_31837 (mainDetailedzisegred_group_sizze_31836)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44674_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44674_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44672_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44672_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44667;
    int32_t local_tid_44668;
    int64_t group_sizze_44671;
    int32_t wave_sizze_44670;
    int32_t group_tid_44669;
    
    global_tid_44667 = get_global_id(0);
    local_tid_44668 = get_local_id(0);
    group_sizze_44671 = get_local_size(0);
    wave_sizze_44670 = LOCKSTEP_WIDTH;
    group_tid_44669 = get_group_id(0);
    
    int32_t phys_tid_31844;
    
    phys_tid_31844 = global_tid_44667;
    
    __local char *sync_arr_mem_44672;
    
    sync_arr_mem_44672 = (__local char *) sync_arr_mem_44672_backing_0;
    
    __local char *red_arr_mem_44674;
    
    red_arr_mem_44674 = (__local char *) red_arr_mem_44674_backing_1;
    
    int64_t dummy_31842;
    
    dummy_31842 = (int64_t) 0;
    
    int64_t gtid_31843;
    
    gtid_31843 = (int64_t) 0;
    
    int32_t x_acc_44676;
    int64_t chunk_sizze_44677;
    
    chunk_sizze_44677 = smin64(sdiv_up64(m_27371,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_31837 *
                                         num_groups_31839))),
                               sdiv_up64(m_27371 - sext_i32_i64(phys_tid_31844),
                                         num_threads_44666));
    
    int32_t x_27737;
    int32_t x_27738;
    
    // neutral-initialise the accumulators
    {
        x_acc_44676 = 0;
    }
    for (int64_t i_44681 = 0; i_44681 < chunk_sizze_44677; i_44681++) {
        gtid_31843 = sext_i32_i64(phys_tid_31844) + num_threads_44666 * i_44681;
        // apply map function
        {
            int32_t x_27740 = ((__global
                                int32_t *) defunc_3_map_res_mem_43401)[gtid_31843];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_27737 = x_acc_44676;
            }
            // load new values
            {
                x_27738 = x_27740;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_27739 = smax32(x_27737, x_27738);
                
                // store in accumulator
                {
                    x_acc_44676 = defunc_1_op_res_27739;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_27737 = x_acc_44676;
        ((__local int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668)] =
            x_27737;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44682;
    int32_t skip_waves_44683;
    
    skip_waves_44683 = 1;
    
    int32_t x_44678;
    int32_t x_44679;
    
    offset_44682 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44668, sext_i64_i32(segred_group_sizze_31837))) {
            x_44678 = ((__local
                        int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668 +
                                                      offset_44682)];
        }
    }
    offset_44682 = 1;
    while (slt32(offset_44682, wave_sizze_44670)) {
        if (slt32(local_tid_44668 + offset_44682,
                  sext_i64_i32(segred_group_sizze_31837)) && ((local_tid_44668 -
                                                               squot32(local_tid_44668,
                                                                       wave_sizze_44670) *
                                                               wave_sizze_44670) &
                                                              (2 *
                                                               offset_44682 -
                                                               1)) == 0) {
            // read array element
            {
                x_44679 = ((volatile __local
                            int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668 +
                                                          offset_44682)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44680 = smax32(x_44678, x_44679);
                
                x_44678 = defunc_1_op_res_44680;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668)] =
                    x_44678;
            }
        }
        offset_44682 *= 2;
    }
    while (slt32(skip_waves_44683,
                 squot32(sext_i64_i32(segred_group_sizze_31837) +
                         wave_sizze_44670 - 1, wave_sizze_44670))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44682 = skip_waves_44683 * wave_sizze_44670;
        if (slt32(local_tid_44668 + offset_44682,
                  sext_i64_i32(segred_group_sizze_31837)) && ((local_tid_44668 -
                                                               squot32(local_tid_44668,
                                                                       wave_sizze_44670) *
                                                               wave_sizze_44670) ==
                                                              0 &&
                                                              (squot32(local_tid_44668,
                                                                       wave_sizze_44670) &
                                                               (2 *
                                                                skip_waves_44683 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44679 = ((__local
                            int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668 +
                                                          offset_44682)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44680 = smax32(x_44678, x_44679);
                
                x_44678 = defunc_1_op_res_44680;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668)] =
                    x_44678;
            }
        }
        skip_waves_44683 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44668) == (int64_t) 0) {
            x_acc_44676 = x_44678;
        }
    }
    
    int32_t old_counter_44684;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44668 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44664)[sext_i32_i64(group_tid_44669) *
                                                  segred_group_sizze_31837] =
                x_acc_44676;
            mem_fence_global();
            old_counter_44684 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_44662)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44672)[(int64_t) 0] =
                old_counter_44684 == num_groups_31839 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44685;
    
    is_last_group_44685 = ((__local bool *) sync_arr_mem_44672)[(int64_t) 0];
    if (is_last_group_44685) {
        if (local_tid_44668 == 0) {
            old_counter_44684 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_44662)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_31839));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44686 = sdiv_up64(num_groups_31839,
                                                      segred_group_sizze_31837);
            
            x_27737 = 0;
            for (int64_t i_44687 = 0; i_44687 < read_per_thread_44686;
                 i_44687++) {
                int64_t group_res_id_44688 = sext_i32_i64(local_tid_44668) *
                        read_per_thread_44686 + i_44687;
                int64_t index_of_group_res_44689 = group_res_id_44688;
                
                if (slt64(group_res_id_44688, num_groups_31839)) {
                    x_27738 = ((__global
                                int32_t *) group_res_arr_mem_44664)[index_of_group_res_44689 *
                                                                    segred_group_sizze_31837];
                    
                    int32_t defunc_1_op_res_27739;
                    
                    defunc_1_op_res_27739 = smax32(x_27737, x_27738);
                    x_27737 = defunc_1_op_res_27739;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668)] =
            x_27737;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44690;
            int32_t skip_waves_44691;
            
            skip_waves_44691 = 1;
            
            int32_t x_44678;
            int32_t x_44679;
            
            offset_44690 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44668,
                          sext_i64_i32(segred_group_sizze_31837))) {
                    x_44678 = ((__local
                                int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668 +
                                                              offset_44690)];
                }
            }
            offset_44690 = 1;
            while (slt32(offset_44690, wave_sizze_44670)) {
                if (slt32(local_tid_44668 + offset_44690,
                          sext_i64_i32(segred_group_sizze_31837)) &&
                    ((local_tid_44668 - squot32(local_tid_44668,
                                                wave_sizze_44670) *
                      wave_sizze_44670) & (2 * offset_44690 - 1)) == 0) {
                    // read array element
                    {
                        x_44679 = ((volatile __local
                                    int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668 +
                                                                  offset_44690)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44680 = smax32(x_44678,
                                                               x_44679);
                        
                        x_44678 = defunc_1_op_res_44680;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668)] =
                            x_44678;
                    }
                }
                offset_44690 *= 2;
            }
            while (slt32(skip_waves_44691,
                         squot32(sext_i64_i32(segred_group_sizze_31837) +
                                 wave_sizze_44670 - 1, wave_sizze_44670))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44690 = skip_waves_44691 * wave_sizze_44670;
                if (slt32(local_tid_44668 + offset_44690,
                          sext_i64_i32(segred_group_sizze_31837)) &&
                    ((local_tid_44668 - squot32(local_tid_44668,
                                                wave_sizze_44670) *
                      wave_sizze_44670) == 0 && (squot32(local_tid_44668,
                                                         wave_sizze_44670) &
                                                 (2 * skip_waves_44691 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44679 = ((__local
                                    int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668 +
                                                                  offset_44690)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44680 = smax32(x_44678,
                                                               x_44679);
                        
                        x_44678 = defunc_1_op_res_44680;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44674)[sext_i32_i64(local_tid_44668)] =
                            x_44678;
                    }
                }
                skip_waves_44691 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44668 == 0) {
                    ((__global int32_t *) mem_43406)[(int64_t) 0] = x_44678;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31837
}
__kernel void mainDetailedzisegred_small_29874(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_43932_backing_aligned_0,
                                               int64_t N_27370, int64_t m_27371,
                                               int64_t i32_res_27380,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_30013,
                                               int64_t segment_sizze_nonzzero_43925,
                                               __global
                                               unsigned char *images_mem_42538,
                                               __global
                                               unsigned char *binop_p_mem_42547,
                                               __global
                                               unsigned char *mem_42688,
                                               __global
                                               unsigned char *mem_42693)
{
    #define segred_group_sizze_30012 (mainDetailedzisegred_group_sizze_29868)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_43932_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43932_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43927;
    int32_t local_tid_43928;
    int64_t group_sizze_43931;
    int32_t wave_sizze_43930;
    int32_t group_tid_43929;
    
    global_tid_43927 = get_global_id(0);
    local_tid_43928 = get_local_id(0);
    group_sizze_43931 = get_local_size(0);
    wave_sizze_43930 = LOCKSTEP_WIDTH;
    group_tid_43929 = get_group_id(0);
    
    int32_t phys_tid_29874;
    
    phys_tid_29874 = global_tid_43927;
    
    __local char *red_arr_mem_43932;
    
    red_arr_mem_43932 = (__local char *) red_arr_mem_43932_backing_0;
    
    int32_t phys_group_id_43934;
    
    phys_group_id_43934 = get_group_id(0);
    for (int32_t i_43935 = 0; i_43935 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371 * i32_res_27386 *
                                          i32_res_27386,
                                          squot64(segred_group_sizze_30012,
                                                  segment_sizze_nonzzero_43925))) -
                   phys_group_id_43934, sext_i64_i32(num_groups_30013));
         i_43935++) {
        int32_t virt_group_id_43936 = phys_group_id_43934 + i_43935 *
                sext_i64_i32(num_groups_30013);
        int64_t gtid_29861 = squot64(squot64(sext_i32_i64(local_tid_43928),
                                             segment_sizze_nonzzero_43925) +
                                     sext_i32_i64(virt_group_id_43936) *
                                     squot64(segred_group_sizze_30012,
                                             segment_sizze_nonzzero_43925),
                                     i32_res_27386 * i32_res_27386);
        int64_t gtid_29862 = squot64(squot64(sext_i32_i64(local_tid_43928),
                                             segment_sizze_nonzzero_43925) +
                                     sext_i32_i64(virt_group_id_43936) *
                                     squot64(segred_group_sizze_30012,
                                             segment_sizze_nonzzero_43925) -
                                     squot64(squot64(sext_i32_i64(local_tid_43928),
                                                     segment_sizze_nonzzero_43925) +
                                             sext_i32_i64(virt_group_id_43936) *
                                             squot64(segred_group_sizze_30012,
                                                     segment_sizze_nonzzero_43925),
                                             i32_res_27386 * i32_res_27386) *
                                     (i32_res_27386 * i32_res_27386),
                                     i32_res_27386);
        int64_t gtid_29863 = squot64(sext_i32_i64(local_tid_43928),
                                     segment_sizze_nonzzero_43925) +
                sext_i32_i64(virt_group_id_43936) *
                squot64(segred_group_sizze_30012,
                        segment_sizze_nonzzero_43925) -
                squot64(squot64(sext_i32_i64(local_tid_43928),
                                segment_sizze_nonzzero_43925) +
                        sext_i32_i64(virt_group_id_43936) *
                        squot64(segred_group_sizze_30012,
                                segment_sizze_nonzzero_43925), i32_res_27386 *
                        i32_res_27386) * (i32_res_27386 * i32_res_27386) -
                squot64(squot64(sext_i32_i64(local_tid_43928),
                                segment_sizze_nonzzero_43925) +
                        sext_i32_i64(virt_group_id_43936) *
                        squot64(segred_group_sizze_30012,
                                segment_sizze_nonzzero_43925) -
                        squot64(squot64(sext_i32_i64(local_tid_43928),
                                        segment_sizze_nonzzero_43925) +
                                sext_i32_i64(virt_group_id_43936) *
                                squot64(segred_group_sizze_30012,
                                        segment_sizze_nonzzero_43925),
                                i32_res_27386 * i32_res_27386) *
                        (i32_res_27386 * i32_res_27386), i32_res_27386) *
                i32_res_27386;
        int64_t gtid_29873 = srem64(sext_i32_i64(local_tid_43928),
                                    i32_res_27380);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27380) && (((slt64(gtid_29861,
                                                              m_27371) &&
                                                        slt64(gtid_29862,
                                                              i32_res_27386)) &&
                                                       slt64(gtid_29863,
                                                             i32_res_27386)) &&
                                                      slt64(sext_i32_i64(local_tid_43928),
                                                            i32_res_27380 *
                                                            squot64(segred_group_sizze_30012,
                                                                    segment_sizze_nonzzero_43925)))) {
                float x_30022 = ((__global
                                  float *) images_mem_42538)[gtid_29861 *
                                                             N_27370 +
                                                             gtid_29873];
                float x_30023 = ((__global
                                  float *) binop_p_mem_42547)[gtid_29862 *
                                                              N_27370 +
                                                              gtid_29873];
                float x_30024 = ((__global float *) mem_42688)[gtid_29863 *
                                                               N_27370 +
                                                               gtid_29873];
                float x_30025 = x_30023 * x_30024;
                bool isnan_res_30026;
                
                isnan_res_30026 = futrts_isnan32(x_30022);
                
                float y_30027;
                
                if (isnan_res_30026) {
                    y_30027 = 0.0F;
                } else {
                    y_30027 = 1.0F;
                }
                
                float defunc_2_f_res_30028 = x_30025 * y_30027;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)] =
                        defunc_2_f_res_30028;
                }
            } else {
                ((__local
                  float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27380)) {
            // perform segmented scan to imitate reduction
            {
                float x_30016;
                float x_30017;
                float x_43937;
                float x_43938;
                bool ltid_in_bounds_43940;
                
                ltid_in_bounds_43940 = slt64(sext_i32_i64(local_tid_43928),
                                             i32_res_27380 *
                                             squot64(segred_group_sizze_30012,
                                                     segment_sizze_nonzzero_43925));
                
                int32_t skip_threads_43941;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_43940) {
                        x_30017 = ((volatile __local
                                    float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)];
                        if ((local_tid_43928 - squot32(local_tid_43928, 32) *
                             32) == 0) {
                            x_30016 = x_30017;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_43941 = 1;
                    while (slt32(skip_threads_43941, 32)) {
                        if (sle32(skip_threads_43941, local_tid_43928 -
                                  squot32(local_tid_43928, 32) * 32) &&
                            ltid_in_bounds_43940) {
                            // read operands
                            {
                                x_30016 = ((volatile __local
                                            float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928) -
                                                                        sext_i32_i64(skip_threads_43941)];
                            }
                            // perform operation
                            {
                                bool inactive_43942 =
                                     slt64(srem64(sext_i32_i64(local_tid_43928),
                                                  i32_res_27380),
                                           sext_i32_i64(local_tid_43928) -
                                           sext_i32_i64(local_tid_43928 -
                                           skip_threads_43941));
                                
                                if (inactive_43942) {
                                    x_30016 = x_30017;
                                }
                                if (!inactive_43942) {
                                    float defunc_1_op_res_30018 = x_30016 +
                                          x_30017;
                                    
                                    x_30016 = defunc_1_op_res_30018;
                                }
                            }
                        }
                        if (sle32(wave_sizze_43930, skip_threads_43941)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_43941, local_tid_43928 -
                                  squot32(local_tid_43928, 32) * 32) &&
                            ltid_in_bounds_43940) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)] =
                                    x_30016;
                                x_30017 = x_30016;
                            }
                        }
                        if (sle32(wave_sizze_43930, skip_threads_43941)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_43941 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_43928 - squot32(local_tid_43928, 32) * 32) ==
                        31 && ltid_in_bounds_43940) {
                        ((volatile __local
                          float *) red_arr_mem_43932)[sext_i32_i64(squot32(local_tid_43928,
                                                                           32))] =
                            x_30016;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_43943;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_43928, 32) == 0 &&
                            ltid_in_bounds_43940) {
                            x_43938 = ((volatile __local
                                        float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)];
                            if ((local_tid_43928 - squot32(local_tid_43928,
                                                           32) * 32) == 0) {
                                x_43937 = x_43938;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_43943 = 1;
                        while (slt32(skip_threads_43943, 32)) {
                            if (sle32(skip_threads_43943, local_tid_43928 -
                                      squot32(local_tid_43928, 32) * 32) &&
                                (squot32(local_tid_43928, 32) == 0 &&
                                 ltid_in_bounds_43940)) {
                                // read operands
                                {
                                    x_43937 = ((volatile __local
                                                float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928) -
                                                                            sext_i32_i64(skip_threads_43943)];
                                }
                                // perform operation
                                {
                                    bool inactive_43944 =
                                         slt64(srem64(sext_i32_i64(local_tid_43928 *
                                                      32 + 32 - 1),
                                                      i32_res_27380),
                                               sext_i32_i64(local_tid_43928 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_43928 -
                                                             skip_threads_43943) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_43944) {
                                        x_43937 = x_43938;
                                    }
                                    if (!inactive_43944) {
                                        float defunc_1_op_res_43939 = x_43937 +
                                              x_43938;
                                        
                                        x_43937 = defunc_1_op_res_43939;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_43930, skip_threads_43943)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_43943, local_tid_43928 -
                                      squot32(local_tid_43928, 32) * 32) &&
                                (squot32(local_tid_43928, 32) == 0 &&
                                 ltid_in_bounds_43940)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)] =
                                        x_43937;
                                    x_43938 = x_43937;
                                }
                            }
                            if (sle32(wave_sizze_43930, skip_threads_43943)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_43943 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_43928, 32) == 0 ||
                          !ltid_in_bounds_43940)) {
                        // read operands
                        {
                            x_30017 = x_30016;
                            x_30016 = ((__local
                                        float *) red_arr_mem_43932)[sext_i32_i64(squot32(local_tid_43928,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_43945 =
                                 slt64(srem64(sext_i32_i64(local_tid_43928),
                                              i32_res_27380),
                                       sext_i32_i64(local_tid_43928) -
                                       sext_i32_i64(squot32(local_tid_43928,
                                                            32) * 32 - 1));
                            
                            if (inactive_43945) {
                                x_30016 = x_30017;
                            }
                            if (!inactive_43945) {
                                float defunc_1_op_res_30018 = x_30016 + x_30017;
                                
                                x_30016 = defunc_1_op_res_30018;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)] =
                                x_30016;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_43928, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_43932)[sext_i32_i64(local_tid_43928)] =
                            x_30017;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_43936) *
                      squot64(segred_group_sizze_30012,
                              segment_sizze_nonzzero_43925) +
                      sext_i32_i64(local_tid_43928), m_27371 * i32_res_27386 *
                      i32_res_27386) && slt64(sext_i32_i64(local_tid_43928),
                                              squot64(segred_group_sizze_30012,
                                                      segment_sizze_nonzzero_43925))) {
                ((__global
                  float *) mem_42693)[squot64(sext_i32_i64(virt_group_id_43936) *
                                              squot64(segred_group_sizze_30012,
                                                      segment_sizze_nonzzero_43925) +
                                              sext_i32_i64(local_tid_43928),
                                              i32_res_27386 * i32_res_27386) *
                                      (i32_res_27386 * i32_res_27386) +
                                      squot64(sext_i32_i64(virt_group_id_43936) *
                                              squot64(segred_group_sizze_30012,
                                                      segment_sizze_nonzzero_43925) +
                                              sext_i32_i64(local_tid_43928) -
                                              squot64(sext_i32_i64(virt_group_id_43936) *
                                                      squot64(segred_group_sizze_30012,
                                                              segment_sizze_nonzzero_43925) +
                                                      sext_i32_i64(local_tid_43928),
                                                      i32_res_27386 *
                                                      i32_res_27386) *
                                              (i32_res_27386 * i32_res_27386),
                                              i32_res_27386) * i32_res_27386 +
                                      (sext_i32_i64(virt_group_id_43936) *
                                       squot64(segred_group_sizze_30012,
                                               segment_sizze_nonzzero_43925) +
                                       sext_i32_i64(local_tid_43928) -
                                       squot64(sext_i32_i64(virt_group_id_43936) *
                                               squot64(segred_group_sizze_30012,
                                                       segment_sizze_nonzzero_43925) +
                                               sext_i32_i64(local_tid_43928),
                                               i32_res_27386 * i32_res_27386) *
                                       (i32_res_27386 * i32_res_27386) -
                                       squot64(sext_i32_i64(virt_group_id_43936) *
                                               squot64(segred_group_sizze_30012,
                                                       segment_sizze_nonzzero_43925) +
                                               sext_i32_i64(local_tid_43928) -
                                               squot64(sext_i32_i64(virt_group_id_43936) *
                                                       squot64(segred_group_sizze_30012,
                                                               segment_sizze_nonzzero_43925) +
                                                       sext_i32_i64(local_tid_43928),
                                                       i32_res_27386 *
                                                       i32_res_27386) *
                                               (i32_res_27386 * i32_res_27386),
                                               i32_res_27386) *
                                       i32_res_27386)] = ((__local
                                                           float *) red_arr_mem_43932)[(sext_i32_i64(local_tid_43928) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_43925 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30012
}
__kernel void mainDetailedzisegred_small_30921(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44129_backing_aligned_0,
                                               int64_t N_27370, int64_t m_27371,
                                               int64_t i32_res_27380,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_30974,
                                               int64_t segment_sizze_nonzzero_44122,
                                               __global
                                               unsigned char *images_mem_42538,
                                               __global
                                               unsigned char *binop_p_mem_42547,
                                               __global
                                               unsigned char *mem_43001)
{
    #define segred_group_sizze_30973 (mainDetailedzisegred_group_sizze_30915)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44129_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44129_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44124;
    int32_t local_tid_44125;
    int64_t group_sizze_44128;
    int32_t wave_sizze_44127;
    int32_t group_tid_44126;
    
    global_tid_44124 = get_global_id(0);
    local_tid_44125 = get_local_id(0);
    group_sizze_44128 = get_local_size(0);
    wave_sizze_44127 = LOCKSTEP_WIDTH;
    group_tid_44126 = get_group_id(0);
    
    int32_t phys_tid_30921;
    
    phys_tid_30921 = global_tid_44124;
    
    __local char *red_arr_mem_44129;
    
    red_arr_mem_44129 = (__local char *) red_arr_mem_44129_backing_0;
    
    int32_t phys_group_id_44131;
    
    phys_group_id_44131 = get_group_id(0);
    for (int32_t i_44132 = 0; i_44132 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371 * i32_res_27386,
                                          squot64(segred_group_sizze_30973,
                                                  segment_sizze_nonzzero_44122))) -
                   phys_group_id_44131, sext_i64_i32(num_groups_30974));
         i_44132++) {
        int32_t virt_group_id_44133 = phys_group_id_44131 + i_44132 *
                sext_i64_i32(num_groups_30974);
        int64_t gtid_30910 = squot64(squot64(sext_i32_i64(local_tid_44125),
                                             segment_sizze_nonzzero_44122) +
                                     sext_i32_i64(virt_group_id_44133) *
                                     squot64(segred_group_sizze_30973,
                                             segment_sizze_nonzzero_44122),
                                     i32_res_27386);
        int64_t gtid_30911 = squot64(sext_i32_i64(local_tid_44125),
                                     segment_sizze_nonzzero_44122) +
                sext_i32_i64(virt_group_id_44133) *
                squot64(segred_group_sizze_30973,
                        segment_sizze_nonzzero_44122) -
                squot64(squot64(sext_i32_i64(local_tid_44125),
                                segment_sizze_nonzzero_44122) +
                        sext_i32_i64(virt_group_id_44133) *
                        squot64(segred_group_sizze_30973,
                                segment_sizze_nonzzero_44122), i32_res_27386) *
                i32_res_27386;
        int64_t gtid_30920 = srem64(sext_i32_i64(local_tid_44125),
                                    i32_res_27380);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27380) && ((slt64(gtid_30910,
                                                             m_27371) &&
                                                       slt64(gtid_30911,
                                                             i32_res_27386)) &&
                                                      slt64(sext_i32_i64(local_tid_44125),
                                                            i32_res_27380 *
                                                            squot64(segred_group_sizze_30973,
                                                                    segment_sizze_nonzzero_44122)))) {
                float x_30983 = ((__global
                                  float *) images_mem_42538)[gtid_30910 *
                                                             N_27370 +
                                                             gtid_30920];
                bool isnan_res_30984;
                
                isnan_res_30984 = futrts_isnan32(x_30983);
                
                float defunc_1_f_res_30985;
                
                if (isnan_res_30984) {
                    defunc_1_f_res_30985 = 0.0F;
                } else {
                    float x_30982 = ((__global
                                      float *) binop_p_mem_42547)[gtid_30911 *
                                                                  N_27370 +
                                                                  gtid_30920];
                    float defunc_1_f_res_f_res_30986 = x_30982 * x_30983;
                    
                    defunc_1_f_res_30985 = defunc_1_f_res_f_res_30986;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)] =
                        defunc_1_f_res_30985;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27380)) {
            // perform segmented scan to imitate reduction
            {
                float x_30977;
                float x_30978;
                float x_44134;
                float x_44135;
                bool ltid_in_bounds_44137;
                
                ltid_in_bounds_44137 = slt64(sext_i32_i64(local_tid_44125),
                                             i32_res_27380 *
                                             squot64(segred_group_sizze_30973,
                                                     segment_sizze_nonzzero_44122));
                
                int32_t skip_threads_44138;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44137) {
                        x_30978 = ((volatile __local
                                    float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)];
                        if ((local_tid_44125 - squot32(local_tid_44125, 32) *
                             32) == 0) {
                            x_30977 = x_30978;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44138 = 1;
                    while (slt32(skip_threads_44138, 32)) {
                        if (sle32(skip_threads_44138, local_tid_44125 -
                                  squot32(local_tid_44125, 32) * 32) &&
                            ltid_in_bounds_44137) {
                            // read operands
                            {
                                x_30977 = ((volatile __local
                                            float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125) -
                                                                        sext_i32_i64(skip_threads_44138)];
                            }
                            // perform operation
                            {
                                bool inactive_44139 =
                                     slt64(srem64(sext_i32_i64(local_tid_44125),
                                                  i32_res_27380),
                                           sext_i32_i64(local_tid_44125) -
                                           sext_i32_i64(local_tid_44125 -
                                           skip_threads_44138));
                                
                                if (inactive_44139) {
                                    x_30977 = x_30978;
                                }
                                if (!inactive_44139) {
                                    float defunc_1_op_res_30979 = x_30977 +
                                          x_30978;
                                    
                                    x_30977 = defunc_1_op_res_30979;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44127, skip_threads_44138)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44138, local_tid_44125 -
                                  squot32(local_tid_44125, 32) * 32) &&
                            ltid_in_bounds_44137) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)] =
                                    x_30977;
                                x_30978 = x_30977;
                            }
                        }
                        if (sle32(wave_sizze_44127, skip_threads_44138)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44138 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44125 - squot32(local_tid_44125, 32) * 32) ==
                        31 && ltid_in_bounds_44137) {
                        ((volatile __local
                          float *) red_arr_mem_44129)[sext_i32_i64(squot32(local_tid_44125,
                                                                           32))] =
                            x_30977;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44140;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44125, 32) == 0 &&
                            ltid_in_bounds_44137) {
                            x_44135 = ((volatile __local
                                        float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)];
                            if ((local_tid_44125 - squot32(local_tid_44125,
                                                           32) * 32) == 0) {
                                x_44134 = x_44135;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44140 = 1;
                        while (slt32(skip_threads_44140, 32)) {
                            if (sle32(skip_threads_44140, local_tid_44125 -
                                      squot32(local_tid_44125, 32) * 32) &&
                                (squot32(local_tid_44125, 32) == 0 &&
                                 ltid_in_bounds_44137)) {
                                // read operands
                                {
                                    x_44134 = ((volatile __local
                                                float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125) -
                                                                            sext_i32_i64(skip_threads_44140)];
                                }
                                // perform operation
                                {
                                    bool inactive_44141 =
                                         slt64(srem64(sext_i32_i64(local_tid_44125 *
                                                      32 + 32 - 1),
                                                      i32_res_27380),
                                               sext_i32_i64(local_tid_44125 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44125 -
                                                             skip_threads_44140) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44141) {
                                        x_44134 = x_44135;
                                    }
                                    if (!inactive_44141) {
                                        float defunc_1_op_res_44136 = x_44134 +
                                              x_44135;
                                        
                                        x_44134 = defunc_1_op_res_44136;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44127, skip_threads_44140)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44140, local_tid_44125 -
                                      squot32(local_tid_44125, 32) * 32) &&
                                (squot32(local_tid_44125, 32) == 0 &&
                                 ltid_in_bounds_44137)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)] =
                                        x_44134;
                                    x_44135 = x_44134;
                                }
                            }
                            if (sle32(wave_sizze_44127, skip_threads_44140)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44140 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44125, 32) == 0 ||
                          !ltid_in_bounds_44137)) {
                        // read operands
                        {
                            x_30978 = x_30977;
                            x_30977 = ((__local
                                        float *) red_arr_mem_44129)[sext_i32_i64(squot32(local_tid_44125,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44142 =
                                 slt64(srem64(sext_i32_i64(local_tid_44125),
                                              i32_res_27380),
                                       sext_i32_i64(local_tid_44125) -
                                       sext_i32_i64(squot32(local_tid_44125,
                                                            32) * 32 - 1));
                            
                            if (inactive_44142) {
                                x_30977 = x_30978;
                            }
                            if (!inactive_44142) {
                                float defunc_1_op_res_30979 = x_30977 + x_30978;
                                
                                x_30977 = defunc_1_op_res_30979;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)] =
                                x_30977;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44125, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44129)[sext_i32_i64(local_tid_44125)] =
                            x_30978;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44133) *
                      squot64(segred_group_sizze_30973,
                              segment_sizze_nonzzero_44122) +
                      sext_i32_i64(local_tid_44125), m_27371 * i32_res_27386) &&
                slt64(sext_i32_i64(local_tid_44125),
                      squot64(segred_group_sizze_30973,
                              segment_sizze_nonzzero_44122))) {
                ((__global
                  float *) mem_43001)[squot64(sext_i32_i64(virt_group_id_44133) *
                                              squot64(segred_group_sizze_30973,
                                                      segment_sizze_nonzzero_44122) +
                                              sext_i32_i64(local_tid_44125),
                                              i32_res_27386) * i32_res_27386 +
                                      (sext_i32_i64(virt_group_id_44133) *
                                       squot64(segred_group_sizze_30973,
                                               segment_sizze_nonzzero_44122) +
                                       sext_i32_i64(local_tid_44125) -
                                       squot64(sext_i32_i64(virt_group_id_44133) *
                                               squot64(segred_group_sizze_30973,
                                                       segment_sizze_nonzzero_44122) +
                                               sext_i32_i64(local_tid_44125),
                                               i32_res_27386) *
                                       i32_res_27386)] = ((__local
                                                           float *) red_arr_mem_44129)[(sext_i32_i64(local_tid_44125) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44122 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30973
}
__kernel void mainDetailedzisegred_small_31058(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44217_backing_aligned_0,
                                               int64_t m_27371,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_31107,
                                               int64_t segment_sizze_nonzzero_44210,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_42786,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43007,
                                               __global
                                               unsigned char *mem_43067)
{
    #define segred_group_sizze_31106 (mainDetailedzisegred_group_sizze_31052)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44217_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44217_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44212;
    int32_t local_tid_44213;
    int64_t group_sizze_44216;
    int32_t wave_sizze_44215;
    int32_t group_tid_44214;
    
    global_tid_44212 = get_global_id(0);
    local_tid_44213 = get_local_id(0);
    group_sizze_44216 = get_local_size(0);
    wave_sizze_44215 = LOCKSTEP_WIDTH;
    group_tid_44214 = get_group_id(0);
    
    int32_t phys_tid_31058;
    
    phys_tid_31058 = global_tid_44212;
    
    __local char *red_arr_mem_44217;
    
    red_arr_mem_44217 = (__local char *) red_arr_mem_44217_backing_0;
    
    int32_t phys_group_id_44219;
    
    phys_group_id_44219 = get_group_id(0);
    for (int32_t i_44220 = 0; i_44220 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371 * i32_res_27386,
                                          squot64(segred_group_sizze_31106,
                                                  segment_sizze_nonzzero_44210))) -
                   phys_group_id_44219, sext_i64_i32(num_groups_31107));
         i_44220++) {
        int32_t virt_group_id_44221 = phys_group_id_44219 + i_44220 *
                sext_i64_i32(num_groups_31107);
        int64_t gtid_31047 = squot64(squot64(sext_i32_i64(local_tid_44213),
                                             segment_sizze_nonzzero_44210) +
                                     sext_i32_i64(virt_group_id_44221) *
                                     squot64(segred_group_sizze_31106,
                                             segment_sizze_nonzzero_44210),
                                     i32_res_27386);
        int64_t gtid_31048 = squot64(sext_i32_i64(local_tid_44213),
                                     segment_sizze_nonzzero_44210) +
                sext_i32_i64(virt_group_id_44221) *
                squot64(segred_group_sizze_31106,
                        segment_sizze_nonzzero_44210) -
                squot64(squot64(sext_i32_i64(local_tid_44213),
                                segment_sizze_nonzzero_44210) +
                        sext_i32_i64(virt_group_id_44221) *
                        squot64(segred_group_sizze_31106,
                                segment_sizze_nonzzero_44210), i32_res_27386) *
                i32_res_27386;
        int64_t gtid_31057 = srem64(sext_i32_i64(local_tid_44213),
                                    i32_res_27386);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27386) && ((slt64(gtid_31047,
                                                             m_27371) &&
                                                       slt64(gtid_31048,
                                                             i32_res_27386)) &&
                                                      slt64(sext_i32_i64(local_tid_44213),
                                                            i32_res_27386 *
                                                            squot64(segred_group_sizze_31106,
                                                                    segment_sizze_nonzzero_44210)))) {
                float x_31116 = ((__global
                                  float *) defunc_3_map_res_mem_43007)[gtid_31047 *
                                                                       i32_res_27386 +
                                                                       gtid_31057];
                float x_31117 = ((__global
                                  float *) defunc_3_map_res_mem_42786)[gtid_31047 *
                                                                       (i32_res_27386 *
                                                                        i32_res_27386) +
                                                                       gtid_31048 *
                                                                       i32_res_27386 +
                                                                       gtid_31057];
                float defunc_1_f_res_31118 = x_31116 * x_31117;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)] =
                        defunc_1_f_res_31118;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27386)) {
            // perform segmented scan to imitate reduction
            {
                float x_31110;
                float x_31111;
                float x_44222;
                float x_44223;
                bool ltid_in_bounds_44225;
                
                ltid_in_bounds_44225 = slt64(sext_i32_i64(local_tid_44213),
                                             i32_res_27386 *
                                             squot64(segred_group_sizze_31106,
                                                     segment_sizze_nonzzero_44210));
                
                int32_t skip_threads_44226;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44225) {
                        x_31111 = ((volatile __local
                                    float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)];
                        if ((local_tid_44213 - squot32(local_tid_44213, 32) *
                             32) == 0) {
                            x_31110 = x_31111;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44226 = 1;
                    while (slt32(skip_threads_44226, 32)) {
                        if (sle32(skip_threads_44226, local_tid_44213 -
                                  squot32(local_tid_44213, 32) * 32) &&
                            ltid_in_bounds_44225) {
                            // read operands
                            {
                                x_31110 = ((volatile __local
                                            float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213) -
                                                                        sext_i32_i64(skip_threads_44226)];
                            }
                            // perform operation
                            {
                                bool inactive_44227 =
                                     slt64(srem64(sext_i32_i64(local_tid_44213),
                                                  i32_res_27386),
                                           sext_i32_i64(local_tid_44213) -
                                           sext_i32_i64(local_tid_44213 -
                                           skip_threads_44226));
                                
                                if (inactive_44227) {
                                    x_31110 = x_31111;
                                }
                                if (!inactive_44227) {
                                    float defunc_1_op_res_31112 = x_31110 +
                                          x_31111;
                                    
                                    x_31110 = defunc_1_op_res_31112;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44215, skip_threads_44226)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44226, local_tid_44213 -
                                  squot32(local_tid_44213, 32) * 32) &&
                            ltid_in_bounds_44225) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)] =
                                    x_31110;
                                x_31111 = x_31110;
                            }
                        }
                        if (sle32(wave_sizze_44215, skip_threads_44226)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44226 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44213 - squot32(local_tid_44213, 32) * 32) ==
                        31 && ltid_in_bounds_44225) {
                        ((volatile __local
                          float *) red_arr_mem_44217)[sext_i32_i64(squot32(local_tid_44213,
                                                                           32))] =
                            x_31110;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44228;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44213, 32) == 0 &&
                            ltid_in_bounds_44225) {
                            x_44223 = ((volatile __local
                                        float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)];
                            if ((local_tid_44213 - squot32(local_tid_44213,
                                                           32) * 32) == 0) {
                                x_44222 = x_44223;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44228 = 1;
                        while (slt32(skip_threads_44228, 32)) {
                            if (sle32(skip_threads_44228, local_tid_44213 -
                                      squot32(local_tid_44213, 32) * 32) &&
                                (squot32(local_tid_44213, 32) == 0 &&
                                 ltid_in_bounds_44225)) {
                                // read operands
                                {
                                    x_44222 = ((volatile __local
                                                float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213) -
                                                                            sext_i32_i64(skip_threads_44228)];
                                }
                                // perform operation
                                {
                                    bool inactive_44229 =
                                         slt64(srem64(sext_i32_i64(local_tid_44213 *
                                                      32 + 32 - 1),
                                                      i32_res_27386),
                                               sext_i32_i64(local_tid_44213 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44213 -
                                                             skip_threads_44228) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44229) {
                                        x_44222 = x_44223;
                                    }
                                    if (!inactive_44229) {
                                        float defunc_1_op_res_44224 = x_44222 +
                                              x_44223;
                                        
                                        x_44222 = defunc_1_op_res_44224;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44215, skip_threads_44228)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44228, local_tid_44213 -
                                      squot32(local_tid_44213, 32) * 32) &&
                                (squot32(local_tid_44213, 32) == 0 &&
                                 ltid_in_bounds_44225)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)] =
                                        x_44222;
                                    x_44223 = x_44222;
                                }
                            }
                            if (sle32(wave_sizze_44215, skip_threads_44228)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44228 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44213, 32) == 0 ||
                          !ltid_in_bounds_44225)) {
                        // read operands
                        {
                            x_31111 = x_31110;
                            x_31110 = ((__local
                                        float *) red_arr_mem_44217)[sext_i32_i64(squot32(local_tid_44213,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44230 =
                                 slt64(srem64(sext_i32_i64(local_tid_44213),
                                              i32_res_27386),
                                       sext_i32_i64(local_tid_44213) -
                                       sext_i32_i64(squot32(local_tid_44213,
                                                            32) * 32 - 1));
                            
                            if (inactive_44230) {
                                x_31110 = x_31111;
                            }
                            if (!inactive_44230) {
                                float defunc_1_op_res_31112 = x_31110 + x_31111;
                                
                                x_31110 = defunc_1_op_res_31112;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)] =
                                x_31110;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44213, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44217)[sext_i32_i64(local_tid_44213)] =
                            x_31111;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44221) *
                      squot64(segred_group_sizze_31106,
                              segment_sizze_nonzzero_44210) +
                      sext_i32_i64(local_tid_44213), m_27371 * i32_res_27386) &&
                slt64(sext_i32_i64(local_tid_44213),
                      squot64(segred_group_sizze_31106,
                              segment_sizze_nonzzero_44210))) {
                ((__global
                  float *) mem_43067)[squot64(sext_i32_i64(virt_group_id_44221) *
                                              squot64(segred_group_sizze_31106,
                                                      segment_sizze_nonzzero_44210) +
                                              sext_i32_i64(local_tid_44213),
                                              i32_res_27386) * i32_res_27386 +
                                      (sext_i32_i64(virt_group_id_44221) *
                                       squot64(segred_group_sizze_31106,
                                               segment_sizze_nonzzero_44210) +
                                       sext_i32_i64(local_tid_44213) -
                                       squot64(sext_i32_i64(virt_group_id_44221) *
                                               squot64(segred_group_sizze_31106,
                                                       segment_sizze_nonzzero_44210) +
                                               sext_i32_i64(local_tid_44213),
                                               i32_res_27386) *
                                       i32_res_27386)] = ((__local
                                                           float *) red_arr_mem_44217)[(sext_i32_i64(local_tid_44213) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44210 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31106
}
__kernel void mainDetailedzisegred_small_31188(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44349_backing_aligned_0,
                                               int64_t N_27370, int64_t m_27371,
                                               int64_t i32_res_27386,
                                               int64_t num_groups_31235,
                                               int64_t segment_sizze_nonzzero_44342,
                                               __global
                                               unsigned char *mem_42554,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43073,
                                               __global
                                               unsigned char *mem_43291)
{
    #define segred_group_sizze_31234 (mainDetailedzisegred_group_sizze_31182)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44349_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44349_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44344;
    int32_t local_tid_44345;
    int64_t group_sizze_44348;
    int32_t wave_sizze_44347;
    int32_t group_tid_44346;
    
    global_tid_44344 = get_global_id(0);
    local_tid_44345 = get_local_id(0);
    group_sizze_44348 = get_local_size(0);
    wave_sizze_44347 = LOCKSTEP_WIDTH;
    group_tid_44346 = get_group_id(0);
    
    int32_t phys_tid_31188;
    
    phys_tid_31188 = global_tid_44344;
    
    __local char *red_arr_mem_44349;
    
    red_arr_mem_44349 = (__local char *) red_arr_mem_44349_backing_0;
    
    int32_t phys_group_id_44351;
    
    phys_group_id_44351 = get_group_id(0);
    for (int32_t i_44352 = 0; i_44352 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371 * N_27370,
                                          squot64(segred_group_sizze_31234,
                                                  segment_sizze_nonzzero_44342))) -
                   phys_group_id_44351, sext_i64_i32(num_groups_31235));
         i_44352++) {
        int32_t virt_group_id_44353 = phys_group_id_44351 + i_44352 *
                sext_i64_i32(num_groups_31235);
        int64_t gtid_31177 = squot64(squot64(sext_i32_i64(local_tid_44345),
                                             segment_sizze_nonzzero_44342) +
                                     sext_i32_i64(virt_group_id_44353) *
                                     squot64(segred_group_sizze_31234,
                                             segment_sizze_nonzzero_44342),
                                     N_27370);
        int64_t gtid_31178 = squot64(sext_i32_i64(local_tid_44345),
                                     segment_sizze_nonzzero_44342) +
                sext_i32_i64(virt_group_id_44353) *
                squot64(segred_group_sizze_31234,
                        segment_sizze_nonzzero_44342) -
                squot64(squot64(sext_i32_i64(local_tid_44345),
                                segment_sizze_nonzzero_44342) +
                        sext_i32_i64(virt_group_id_44353) *
                        squot64(segred_group_sizze_31234,
                                segment_sizze_nonzzero_44342), N_27370) *
                N_27370;
        int64_t gtid_31187 = srem64(sext_i32_i64(local_tid_44345),
                                    i32_res_27386);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27386) && ((slt64(gtid_31177,
                                                             m_27371) &&
                                                       slt64(gtid_31178,
                                                             N_27370)) &&
                                                      slt64(sext_i32_i64(local_tid_44345),
                                                            i32_res_27386 *
                                                            squot64(segred_group_sizze_31234,
                                                                    segment_sizze_nonzzero_44342)))) {
                float x_31243 = ((__global
                                  float *) defunc_4_map_res_mem_43073)[gtid_31177 *
                                                                       i32_res_27386 +
                                                                       gtid_31187];
                float x_31244 = ((__global float *) mem_42554)[gtid_31178 *
                                                               i32_res_27386 +
                                                               gtid_31187];
                float defunc_1_f_res_31245 = x_31243 * x_31244;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)] =
                        defunc_1_f_res_31245;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27386)) {
            // perform segmented scan to imitate reduction
            {
                float x_31238;
                float x_31239;
                float x_44354;
                float x_44355;
                bool ltid_in_bounds_44357;
                
                ltid_in_bounds_44357 = slt64(sext_i32_i64(local_tid_44345),
                                             i32_res_27386 *
                                             squot64(segred_group_sizze_31234,
                                                     segment_sizze_nonzzero_44342));
                
                int32_t skip_threads_44358;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44357) {
                        x_31239 = ((volatile __local
                                    float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)];
                        if ((local_tid_44345 - squot32(local_tid_44345, 32) *
                             32) == 0) {
                            x_31238 = x_31239;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44358 = 1;
                    while (slt32(skip_threads_44358, 32)) {
                        if (sle32(skip_threads_44358, local_tid_44345 -
                                  squot32(local_tid_44345, 32) * 32) &&
                            ltid_in_bounds_44357) {
                            // read operands
                            {
                                x_31238 = ((volatile __local
                                            float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345) -
                                                                        sext_i32_i64(skip_threads_44358)];
                            }
                            // perform operation
                            {
                                bool inactive_44359 =
                                     slt64(srem64(sext_i32_i64(local_tid_44345),
                                                  i32_res_27386),
                                           sext_i32_i64(local_tid_44345) -
                                           sext_i32_i64(local_tid_44345 -
                                           skip_threads_44358));
                                
                                if (inactive_44359) {
                                    x_31238 = x_31239;
                                }
                                if (!inactive_44359) {
                                    float defunc_1_op_res_31240 = x_31238 +
                                          x_31239;
                                    
                                    x_31238 = defunc_1_op_res_31240;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44347, skip_threads_44358)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44358, local_tid_44345 -
                                  squot32(local_tid_44345, 32) * 32) &&
                            ltid_in_bounds_44357) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)] =
                                    x_31238;
                                x_31239 = x_31238;
                            }
                        }
                        if (sle32(wave_sizze_44347, skip_threads_44358)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44358 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44345 - squot32(local_tid_44345, 32) * 32) ==
                        31 && ltid_in_bounds_44357) {
                        ((volatile __local
                          float *) red_arr_mem_44349)[sext_i32_i64(squot32(local_tid_44345,
                                                                           32))] =
                            x_31238;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44360;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44345, 32) == 0 &&
                            ltid_in_bounds_44357) {
                            x_44355 = ((volatile __local
                                        float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)];
                            if ((local_tid_44345 - squot32(local_tid_44345,
                                                           32) * 32) == 0) {
                                x_44354 = x_44355;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44360 = 1;
                        while (slt32(skip_threads_44360, 32)) {
                            if (sle32(skip_threads_44360, local_tid_44345 -
                                      squot32(local_tid_44345, 32) * 32) &&
                                (squot32(local_tid_44345, 32) == 0 &&
                                 ltid_in_bounds_44357)) {
                                // read operands
                                {
                                    x_44354 = ((volatile __local
                                                float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345) -
                                                                            sext_i32_i64(skip_threads_44360)];
                                }
                                // perform operation
                                {
                                    bool inactive_44361 =
                                         slt64(srem64(sext_i32_i64(local_tid_44345 *
                                                      32 + 32 - 1),
                                                      i32_res_27386),
                                               sext_i32_i64(local_tid_44345 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44345 -
                                                             skip_threads_44360) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44361) {
                                        x_44354 = x_44355;
                                    }
                                    if (!inactive_44361) {
                                        float defunc_1_op_res_44356 = x_44354 +
                                              x_44355;
                                        
                                        x_44354 = defunc_1_op_res_44356;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44347, skip_threads_44360)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44360, local_tid_44345 -
                                      squot32(local_tid_44345, 32) * 32) &&
                                (squot32(local_tid_44345, 32) == 0 &&
                                 ltid_in_bounds_44357)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)] =
                                        x_44354;
                                    x_44355 = x_44354;
                                }
                            }
                            if (sle32(wave_sizze_44347, skip_threads_44360)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44360 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44345, 32) == 0 ||
                          !ltid_in_bounds_44357)) {
                        // read operands
                        {
                            x_31239 = x_31238;
                            x_31238 = ((__local
                                        float *) red_arr_mem_44349)[sext_i32_i64(squot32(local_tid_44345,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44362 =
                                 slt64(srem64(sext_i32_i64(local_tid_44345),
                                              i32_res_27386),
                                       sext_i32_i64(local_tid_44345) -
                                       sext_i32_i64(squot32(local_tid_44345,
                                                            32) * 32 - 1));
                            
                            if (inactive_44362) {
                                x_31238 = x_31239;
                            }
                            if (!inactive_44362) {
                                float defunc_1_op_res_31240 = x_31238 + x_31239;
                                
                                x_31238 = defunc_1_op_res_31240;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)] =
                                x_31238;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44345, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44349)[sext_i32_i64(local_tid_44345)] =
                            x_31239;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44353) *
                      squot64(segred_group_sizze_31234,
                              segment_sizze_nonzzero_44342) +
                      sext_i32_i64(local_tid_44345), m_27371 * N_27370) &&
                slt64(sext_i32_i64(local_tid_44345),
                      squot64(segred_group_sizze_31234,
                              segment_sizze_nonzzero_44342))) {
                ((__global
                  float *) mem_43291)[squot64(sext_i32_i64(virt_group_id_44353) *
                                              squot64(segred_group_sizze_31234,
                                                      segment_sizze_nonzzero_44342) +
                                              sext_i32_i64(local_tid_44345),
                                              N_27370) * N_27370 +
                                      (sext_i32_i64(virt_group_id_44353) *
                                       squot64(segred_group_sizze_31234,
                                               segment_sizze_nonzzero_44342) +
                                       sext_i32_i64(local_tid_44345) -
                                       squot64(sext_i32_i64(virt_group_id_44353) *
                                               squot64(segred_group_sizze_31234,
                                                       segment_sizze_nonzzero_44342) +
                                               sext_i32_i64(local_tid_44345),
                                               N_27370) * N_27370)] = ((__local
                                                                        float *) red_arr_mem_44349)[(sext_i32_i64(local_tid_44345) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44342 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31234
}
__kernel void mainDetailedzisegred_small_31754(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44601_backing_aligned_0,
                                               int64_t N_27370, int64_t m_27371,
                                               int64_t i32_res_27380,
                                               int64_t num_groups_31801,
                                               int64_t segment_sizze_nonzzero_44594,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43335,
                                               __global
                                               unsigned char *mem_43389,
                                               __global
                                               unsigned char *mem_43392)
{
    #define segred_group_sizze_31800 (mainDetailedzisegred_group_sizze_31748)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44601_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44601_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44596;
    int32_t local_tid_44597;
    int64_t group_sizze_44600;
    int32_t wave_sizze_44599;
    int32_t group_tid_44598;
    
    global_tid_44596 = get_global_id(0);
    local_tid_44597 = get_local_id(0);
    group_sizze_44600 = get_local_size(0);
    wave_sizze_44599 = LOCKSTEP_WIDTH;
    group_tid_44598 = get_group_id(0);
    
    int32_t phys_tid_31754;
    
    phys_tid_31754 = global_tid_44596;
    
    __local char *red_arr_mem_44601;
    
    red_arr_mem_44601 = (__local char *) red_arr_mem_44601_backing_0;
    
    int32_t phys_group_id_44603;
    
    phys_group_id_44603 = get_group_id(0);
    for (int32_t i_44604 = 0; i_44604 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371,
                                          squot64(segred_group_sizze_31800,
                                                  segment_sizze_nonzzero_44594))) -
                   phys_group_id_44603, sext_i64_i32(num_groups_31801));
         i_44604++) {
        int32_t virt_group_id_44605 = phys_group_id_44603 + i_44604 *
                sext_i64_i32(num_groups_31801);
        int64_t gtid_31745 = squot64(sext_i32_i64(local_tid_44597),
                                     segment_sizze_nonzzero_44594) +
                sext_i32_i64(virt_group_id_44605) *
                squot64(segred_group_sizze_31800, segment_sizze_nonzzero_44594);
        int64_t gtid_31753 = srem64(sext_i32_i64(local_tid_44597),
                                    i32_res_27380);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27380) && (slt64(gtid_31745,
                                                            m_27371) &&
                                                      slt64(sext_i32_i64(local_tid_44597),
                                                            i32_res_27380 *
                                                            squot64(segred_group_sizze_31800,
                                                                    segment_sizze_nonzzero_44594)))) {
                int32_t defunc_0_f_res_31808 = ((__global
                                                 int32_t *) mem_43389)[gtid_31745];
                int32_t index_primexp_40574 = sext_i64_i32(gtid_31753);
                bool cond_31810 = slt32(index_primexp_40574,
                                        defunc_0_f_res_31808);
                float defunc_0_f_res_31811;
                
                if (cond_31810) {
                    int64_t i_31812 = sext_i32_i64(index_primexp_40574);
                    float defunc_0_f_res_t_res_31813 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_31745 *
                                                                                              N_27370 +
                                                                                              i_31812];
                    
                    defunc_0_f_res_31811 = defunc_0_f_res_t_res_31813;
                } else {
                    defunc_0_f_res_31811 = 0.0F;
                }
                
                float defunc_0_f_res_31814 = defunc_0_f_res_31811 *
                      defunc_0_f_res_31811;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)] =
                        defunc_0_f_res_31814;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27380)) {
            // perform segmented scan to imitate reduction
            {
                float x_31804;
                float x_31805;
                float x_44606;
                float x_44607;
                bool ltid_in_bounds_44609;
                
                ltid_in_bounds_44609 = slt64(sext_i32_i64(local_tid_44597),
                                             i32_res_27380 *
                                             squot64(segred_group_sizze_31800,
                                                     segment_sizze_nonzzero_44594));
                
                int32_t skip_threads_44610;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44609) {
                        x_31805 = ((volatile __local
                                    float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)];
                        if ((local_tid_44597 - squot32(local_tid_44597, 32) *
                             32) == 0) {
                            x_31804 = x_31805;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44610 = 1;
                    while (slt32(skip_threads_44610, 32)) {
                        if (sle32(skip_threads_44610, local_tid_44597 -
                                  squot32(local_tid_44597, 32) * 32) &&
                            ltid_in_bounds_44609) {
                            // read operands
                            {
                                x_31804 = ((volatile __local
                                            float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597) -
                                                                        sext_i32_i64(skip_threads_44610)];
                            }
                            // perform operation
                            {
                                bool inactive_44611 =
                                     slt64(srem64(sext_i32_i64(local_tid_44597),
                                                  i32_res_27380),
                                           sext_i32_i64(local_tid_44597) -
                                           sext_i32_i64(local_tid_44597 -
                                           skip_threads_44610));
                                
                                if (inactive_44611) {
                                    x_31804 = x_31805;
                                }
                                if (!inactive_44611) {
                                    float defunc_1_op_res_31806 = x_31804 +
                                          x_31805;
                                    
                                    x_31804 = defunc_1_op_res_31806;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44599, skip_threads_44610)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44610, local_tid_44597 -
                                  squot32(local_tid_44597, 32) * 32) &&
                            ltid_in_bounds_44609) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)] =
                                    x_31804;
                                x_31805 = x_31804;
                            }
                        }
                        if (sle32(wave_sizze_44599, skip_threads_44610)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44610 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44597 - squot32(local_tid_44597, 32) * 32) ==
                        31 && ltid_in_bounds_44609) {
                        ((volatile __local
                          float *) red_arr_mem_44601)[sext_i32_i64(squot32(local_tid_44597,
                                                                           32))] =
                            x_31804;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44612;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44597, 32) == 0 &&
                            ltid_in_bounds_44609) {
                            x_44607 = ((volatile __local
                                        float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)];
                            if ((local_tid_44597 - squot32(local_tid_44597,
                                                           32) * 32) == 0) {
                                x_44606 = x_44607;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44612 = 1;
                        while (slt32(skip_threads_44612, 32)) {
                            if (sle32(skip_threads_44612, local_tid_44597 -
                                      squot32(local_tid_44597, 32) * 32) &&
                                (squot32(local_tid_44597, 32) == 0 &&
                                 ltid_in_bounds_44609)) {
                                // read operands
                                {
                                    x_44606 = ((volatile __local
                                                float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597) -
                                                                            sext_i32_i64(skip_threads_44612)];
                                }
                                // perform operation
                                {
                                    bool inactive_44613 =
                                         slt64(srem64(sext_i32_i64(local_tid_44597 *
                                                      32 + 32 - 1),
                                                      i32_res_27380),
                                               sext_i32_i64(local_tid_44597 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44597 -
                                                             skip_threads_44612) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44613) {
                                        x_44606 = x_44607;
                                    }
                                    if (!inactive_44613) {
                                        float defunc_1_op_res_44608 = x_44606 +
                                              x_44607;
                                        
                                        x_44606 = defunc_1_op_res_44608;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44599, skip_threads_44612)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44612, local_tid_44597 -
                                      squot32(local_tid_44597, 32) * 32) &&
                                (squot32(local_tid_44597, 32) == 0 &&
                                 ltid_in_bounds_44609)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)] =
                                        x_44606;
                                    x_44607 = x_44606;
                                }
                            }
                            if (sle32(wave_sizze_44599, skip_threads_44612)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44612 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44597, 32) == 0 ||
                          !ltid_in_bounds_44609)) {
                        // read operands
                        {
                            x_31805 = x_31804;
                            x_31804 = ((__local
                                        float *) red_arr_mem_44601)[sext_i32_i64(squot32(local_tid_44597,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44614 =
                                 slt64(srem64(sext_i32_i64(local_tid_44597),
                                              i32_res_27380),
                                       sext_i32_i64(local_tid_44597) -
                                       sext_i32_i64(squot32(local_tid_44597,
                                                            32) * 32 - 1));
                            
                            if (inactive_44614) {
                                x_31804 = x_31805;
                            }
                            if (!inactive_44614) {
                                float defunc_1_op_res_31806 = x_31804 + x_31805;
                                
                                x_31804 = defunc_1_op_res_31806;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)] =
                                x_31804;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44597, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44601)[sext_i32_i64(local_tid_44597)] =
                            x_31805;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44605) *
                      squot64(segred_group_sizze_31800,
                              segment_sizze_nonzzero_44594) +
                      sext_i32_i64(local_tid_44597), m_27371) &&
                slt64(sext_i32_i64(local_tid_44597),
                      squot64(segred_group_sizze_31800,
                              segment_sizze_nonzzero_44594))) {
                ((__global
                  float *) mem_43392)[sext_i32_i64(virt_group_id_44605) *
                                      squot64(segred_group_sizze_31800,
                                              segment_sizze_nonzzero_44594) +
                                      sext_i32_i64(local_tid_44597)] = ((__local
                                                                         float *) red_arr_mem_44601)[(sext_i32_i64(local_tid_44597) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44594 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31800
}
__kernel void mainDetailedzisegred_small_31775(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44541_backing_aligned_0,
                                               int64_t N_27370, int64_t m_27371,
                                               int64_t i32_res_27380,
                                               int64_t num_groups_31787,
                                               int64_t segment_sizze_nonzzero_44534,
                                               __global
                                               unsigned char *images_mem_42538,
                                               __global
                                               unsigned char *mem_43389)
{
    #define segred_group_sizze_31786 (mainDetailedzisegred_group_sizze_31769)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44541_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44541_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44536;
    int32_t local_tid_44537;
    int64_t group_sizze_44540;
    int32_t wave_sizze_44539;
    int32_t group_tid_44538;
    
    global_tid_44536 = get_global_id(0);
    local_tid_44537 = get_local_id(0);
    group_sizze_44540 = get_local_size(0);
    wave_sizze_44539 = LOCKSTEP_WIDTH;
    group_tid_44538 = get_group_id(0);
    
    int32_t phys_tid_31775;
    
    phys_tid_31775 = global_tid_44536;
    
    __local char *red_arr_mem_44541;
    
    red_arr_mem_44541 = (__local char *) red_arr_mem_44541_backing_0;
    
    int32_t phys_group_id_44543;
    
    phys_group_id_44543 = get_group_id(0);
    for (int32_t i_44544 = 0; i_44544 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371,
                                          squot64(segred_group_sizze_31786,
                                                  segment_sizze_nonzzero_44534))) -
                   phys_group_id_44543, sext_i64_i32(num_groups_31787));
         i_44544++) {
        int32_t virt_group_id_44545 = phys_group_id_44543 + i_44544 *
                sext_i64_i32(num_groups_31787);
        int64_t gtid_31766 = squot64(sext_i32_i64(local_tid_44537),
                                     segment_sizze_nonzzero_44534) +
                sext_i32_i64(virt_group_id_44545) *
                squot64(segred_group_sizze_31786, segment_sizze_nonzzero_44534);
        int64_t gtid_31774 = srem64(sext_i32_i64(local_tid_44537),
                                    i32_res_27380);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27380) && (slt64(gtid_31766,
                                                            m_27371) &&
                                                      slt64(sext_i32_i64(local_tid_44537),
                                                            i32_res_27380 *
                                                            squot64(segred_group_sizze_31786,
                                                                    segment_sizze_nonzzero_44534)))) {
                float x_31794 = ((__global
                                  float *) images_mem_42538)[gtid_31766 *
                                                             N_27370 +
                                                             gtid_31774];
                bool isnan_res_31795;
                
                isnan_res_31795 = futrts_isnan32(x_31794);
                
                bool cond_31796 = !isnan_res_31795;
                int32_t defunc_0_f_res_31797 = btoi_bool_i32(cond_31796);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)] =
                        defunc_0_f_res_31797;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27380)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_31790;
                int32_t x_31791;
                int32_t x_44546;
                int32_t x_44547;
                bool ltid_in_bounds_44549;
                
                ltid_in_bounds_44549 = slt64(sext_i32_i64(local_tid_44537),
                                             i32_res_27380 *
                                             squot64(segred_group_sizze_31786,
                                                     segment_sizze_nonzzero_44534));
                
                int32_t skip_threads_44550;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44549) {
                        x_31791 = ((volatile __local
                                    int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)];
                        if ((local_tid_44537 - squot32(local_tid_44537, 32) *
                             32) == 0) {
                            x_31790 = x_31791;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44550 = 1;
                    while (slt32(skip_threads_44550, 32)) {
                        if (sle32(skip_threads_44550, local_tid_44537 -
                                  squot32(local_tid_44537, 32) * 32) &&
                            ltid_in_bounds_44549) {
                            // read operands
                            {
                                x_31790 = ((volatile __local
                                            int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537) -
                                                                          sext_i32_i64(skip_threads_44550)];
                            }
                            // perform operation
                            {
                                bool inactive_44551 =
                                     slt64(srem64(sext_i32_i64(local_tid_44537),
                                                  i32_res_27380),
                                           sext_i32_i64(local_tid_44537) -
                                           sext_i32_i64(local_tid_44537 -
                                           skip_threads_44550));
                                
                                if (inactive_44551) {
                                    x_31790 = x_31791;
                                }
                                if (!inactive_44551) {
                                    int32_t defunc_1_op_res_31792 =
                                            add32(x_31790, x_31791);
                                    
                                    x_31790 = defunc_1_op_res_31792;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44539, skip_threads_44550)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44550, local_tid_44537 -
                                  squot32(local_tid_44537, 32) * 32) &&
                            ltid_in_bounds_44549) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)] =
                                    x_31790;
                                x_31791 = x_31790;
                            }
                        }
                        if (sle32(wave_sizze_44539, skip_threads_44550)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44550 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44537 - squot32(local_tid_44537, 32) * 32) ==
                        31 && ltid_in_bounds_44549) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44541)[sext_i32_i64(squot32(local_tid_44537,
                                                                             32))] =
                            x_31790;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44552;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44537, 32) == 0 &&
                            ltid_in_bounds_44549) {
                            x_44547 = ((volatile __local
                                        int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)];
                            if ((local_tid_44537 - squot32(local_tid_44537,
                                                           32) * 32) == 0) {
                                x_44546 = x_44547;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44552 = 1;
                        while (slt32(skip_threads_44552, 32)) {
                            if (sle32(skip_threads_44552, local_tid_44537 -
                                      squot32(local_tid_44537, 32) * 32) &&
                                (squot32(local_tid_44537, 32) == 0 &&
                                 ltid_in_bounds_44549)) {
                                // read operands
                                {
                                    x_44546 = ((volatile __local
                                                int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537) -
                                                                              sext_i32_i64(skip_threads_44552)];
                                }
                                // perform operation
                                {
                                    bool inactive_44553 =
                                         slt64(srem64(sext_i32_i64(local_tid_44537 *
                                                      32 + 32 - 1),
                                                      i32_res_27380),
                                               sext_i32_i64(local_tid_44537 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44537 -
                                                             skip_threads_44552) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44553) {
                                        x_44546 = x_44547;
                                    }
                                    if (!inactive_44553) {
                                        int32_t defunc_1_op_res_44548 =
                                                add32(x_44546, x_44547);
                                        
                                        x_44546 = defunc_1_op_res_44548;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44539, skip_threads_44552)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44552, local_tid_44537 -
                                      squot32(local_tid_44537, 32) * 32) &&
                                (squot32(local_tid_44537, 32) == 0 &&
                                 ltid_in_bounds_44549)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)] =
                                        x_44546;
                                    x_44547 = x_44546;
                                }
                            }
                            if (sle32(wave_sizze_44539, skip_threads_44552)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44552 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44537, 32) == 0 ||
                          !ltid_in_bounds_44549)) {
                        // read operands
                        {
                            x_31791 = x_31790;
                            x_31790 = ((__local
                                        int32_t *) red_arr_mem_44541)[sext_i32_i64(squot32(local_tid_44537,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44554 =
                                 slt64(srem64(sext_i32_i64(local_tid_44537),
                                              i32_res_27380),
                                       sext_i32_i64(local_tid_44537) -
                                       sext_i32_i64(squot32(local_tid_44537,
                                                            32) * 32 - 1));
                            
                            if (inactive_44554) {
                                x_31790 = x_31791;
                            }
                            if (!inactive_44554) {
                                int32_t defunc_1_op_res_31792 = add32(x_31790,
                                                                      x_31791);
                                
                                x_31790 = defunc_1_op_res_31792;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)] =
                                x_31790;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44537, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44541)[sext_i32_i64(local_tid_44537)] =
                            x_31791;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44545) *
                      squot64(segred_group_sizze_31786,
                              segment_sizze_nonzzero_44534) +
                      sext_i32_i64(local_tid_44537), m_27371) &&
                slt64(sext_i32_i64(local_tid_44537),
                      squot64(segred_group_sizze_31786,
                              segment_sizze_nonzzero_44534))) {
                ((__global
                  int32_t *) mem_43389)[sext_i32_i64(virt_group_id_44545) *
                                        squot64(segred_group_sizze_31786,
                                                segment_sizze_nonzzero_44534) +
                                        sext_i32_i64(local_tid_44537)] =
                    ((__local
                      int32_t *) red_arr_mem_44541)[(sext_i32_i64(local_tid_44537) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44534 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31786
}
__kernel void mainDetailedzisegred_small_31926(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44710_backing_aligned_0,
                                               int64_t N_27370, int64_t m_27371,
                                               int64_t i32_res_27741,
                                               int64_t num_groups_31944,
                                               int64_t segment_sizze_nonzzero_44703,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43335,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43401,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43402,
                                               __global
                                               unsigned char *mem_43435)
{
    #define segred_group_sizze_31943 (mainDetailedzisegred_group_sizze_31920)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44710_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44710_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44705;
    int32_t local_tid_44706;
    int64_t group_sizze_44709;
    int32_t wave_sizze_44708;
    int32_t group_tid_44707;
    
    global_tid_44705 = get_global_id(0);
    local_tid_44706 = get_local_id(0);
    group_sizze_44709 = get_local_size(0);
    wave_sizze_44708 = LOCKSTEP_WIDTH;
    group_tid_44707 = get_group_id(0);
    
    int32_t phys_tid_31926;
    
    phys_tid_31926 = global_tid_44705;
    
    __local char *red_arr_mem_44710;
    
    red_arr_mem_44710 = (__local char *) red_arr_mem_44710_backing_0;
    
    int32_t phys_group_id_44712;
    
    phys_group_id_44712 = get_group_id(0);
    for (int32_t i_44713 = 0; i_44713 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371,
                                          squot64(segred_group_sizze_31943,
                                                  segment_sizze_nonzzero_44703))) -
                   phys_group_id_44712, sext_i64_i32(num_groups_31944));
         i_44713++) {
        int32_t virt_group_id_44714 = phys_group_id_44712 + i_44713 *
                sext_i64_i32(num_groups_31944);
        int64_t gtid_31917 = squot64(sext_i32_i64(local_tid_44706),
                                     segment_sizze_nonzzero_44703) +
                sext_i32_i64(virt_group_id_44714) *
                squot64(segred_group_sizze_31943, segment_sizze_nonzzero_44703);
        int64_t gtid_31925 = srem64(sext_i32_i64(local_tid_44706),
                                    i32_res_27741);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27741) && (slt64(gtid_31917,
                                                            m_27371) &&
                                                      slt64(sext_i32_i64(local_tid_44706),
                                                            i32_res_27741 *
                                                            squot64(segred_group_sizze_31943,
                                                                    segment_sizze_nonzzero_44703)))) {
                int32_t x_31952 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43401)[gtid_31917];
                int32_t index_primexp_40579 = sext_i64_i32(gtid_31925);
                bool cond_31954 = slt32(index_primexp_40579, x_31952);
                float defunc_0_f_res_31955;
                
                if (cond_31954) {
                    int32_t x_31951 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_31917];
                    int32_t x_31956 = add32(x_31951, index_primexp_40579);
                    int32_t x_31957 = sub32(x_31956, x_31952);
                    int32_t i_31958 = add32(1, x_31957);
                    int64_t i_31959 = sext_i32_i64(i_31958);
                    float defunc_0_f_res_t_res_31960 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_31917 *
                                                                                              N_27370 +
                                                                                              i_31959];
                    
                    defunc_0_f_res_31955 = defunc_0_f_res_t_res_31960;
                } else {
                    defunc_0_f_res_31955 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)] =
                        defunc_0_f_res_31955;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27741)) {
            // perform segmented scan to imitate reduction
            {
                float x_31947;
                float x_31948;
                float x_44715;
                float x_44716;
                bool ltid_in_bounds_44718;
                
                ltid_in_bounds_44718 = slt64(sext_i32_i64(local_tid_44706),
                                             i32_res_27741 *
                                             squot64(segred_group_sizze_31943,
                                                     segment_sizze_nonzzero_44703));
                
                int32_t skip_threads_44719;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44718) {
                        x_31948 = ((volatile __local
                                    float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)];
                        if ((local_tid_44706 - squot32(local_tid_44706, 32) *
                             32) == 0) {
                            x_31947 = x_31948;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44719 = 1;
                    while (slt32(skip_threads_44719, 32)) {
                        if (sle32(skip_threads_44719, local_tid_44706 -
                                  squot32(local_tid_44706, 32) * 32) &&
                            ltid_in_bounds_44718) {
                            // read operands
                            {
                                x_31947 = ((volatile __local
                                            float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706) -
                                                                        sext_i32_i64(skip_threads_44719)];
                            }
                            // perform operation
                            {
                                bool inactive_44720 =
                                     slt64(srem64(sext_i32_i64(local_tid_44706),
                                                  i32_res_27741),
                                           sext_i32_i64(local_tid_44706) -
                                           sext_i32_i64(local_tid_44706 -
                                           skip_threads_44719));
                                
                                if (inactive_44720) {
                                    x_31947 = x_31948;
                                }
                                if (!inactive_44720) {
                                    float defunc_1_op_res_31949 = x_31947 +
                                          x_31948;
                                    
                                    x_31947 = defunc_1_op_res_31949;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44708, skip_threads_44719)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44719, local_tid_44706 -
                                  squot32(local_tid_44706, 32) * 32) &&
                            ltid_in_bounds_44718) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)] =
                                    x_31947;
                                x_31948 = x_31947;
                            }
                        }
                        if (sle32(wave_sizze_44708, skip_threads_44719)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44719 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44706 - squot32(local_tid_44706, 32) * 32) ==
                        31 && ltid_in_bounds_44718) {
                        ((volatile __local
                          float *) red_arr_mem_44710)[sext_i32_i64(squot32(local_tid_44706,
                                                                           32))] =
                            x_31947;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44721;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44706, 32) == 0 &&
                            ltid_in_bounds_44718) {
                            x_44716 = ((volatile __local
                                        float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)];
                            if ((local_tid_44706 - squot32(local_tid_44706,
                                                           32) * 32) == 0) {
                                x_44715 = x_44716;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44721 = 1;
                        while (slt32(skip_threads_44721, 32)) {
                            if (sle32(skip_threads_44721, local_tid_44706 -
                                      squot32(local_tid_44706, 32) * 32) &&
                                (squot32(local_tid_44706, 32) == 0 &&
                                 ltid_in_bounds_44718)) {
                                // read operands
                                {
                                    x_44715 = ((volatile __local
                                                float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706) -
                                                                            sext_i32_i64(skip_threads_44721)];
                                }
                                // perform operation
                                {
                                    bool inactive_44722 =
                                         slt64(srem64(sext_i32_i64(local_tid_44706 *
                                                      32 + 32 - 1),
                                                      i32_res_27741),
                                               sext_i32_i64(local_tid_44706 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44706 -
                                                             skip_threads_44721) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44722) {
                                        x_44715 = x_44716;
                                    }
                                    if (!inactive_44722) {
                                        float defunc_1_op_res_44717 = x_44715 +
                                              x_44716;
                                        
                                        x_44715 = defunc_1_op_res_44717;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44708, skip_threads_44721)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44721, local_tid_44706 -
                                      squot32(local_tid_44706, 32) * 32) &&
                                (squot32(local_tid_44706, 32) == 0 &&
                                 ltid_in_bounds_44718)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)] =
                                        x_44715;
                                    x_44716 = x_44715;
                                }
                            }
                            if (sle32(wave_sizze_44708, skip_threads_44721)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44721 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44706, 32) == 0 ||
                          !ltid_in_bounds_44718)) {
                        // read operands
                        {
                            x_31948 = x_31947;
                            x_31947 = ((__local
                                        float *) red_arr_mem_44710)[sext_i32_i64(squot32(local_tid_44706,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44723 =
                                 slt64(srem64(sext_i32_i64(local_tid_44706),
                                              i32_res_27741),
                                       sext_i32_i64(local_tid_44706) -
                                       sext_i32_i64(squot32(local_tid_44706,
                                                            32) * 32 - 1));
                            
                            if (inactive_44723) {
                                x_31947 = x_31948;
                            }
                            if (!inactive_44723) {
                                float defunc_1_op_res_31949 = x_31947 + x_31948;
                                
                                x_31947 = defunc_1_op_res_31949;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)] =
                                x_31947;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44706, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44710)[sext_i32_i64(local_tid_44706)] =
                            x_31948;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44714) *
                      squot64(segred_group_sizze_31943,
                              segment_sizze_nonzzero_44703) +
                      sext_i32_i64(local_tid_44706), m_27371) &&
                slt64(sext_i32_i64(local_tid_44706),
                      squot64(segred_group_sizze_31943,
                              segment_sizze_nonzzero_44703))) {
                ((__global
                  float *) mem_43435)[sext_i32_i64(virt_group_id_44714) *
                                      squot64(segred_group_sizze_31943,
                                              segment_sizze_nonzzero_44703) +
                                      sext_i32_i64(local_tid_44706)] = ((__local
                                                                         float *) red_arr_mem_44710)[(sext_i32_i64(local_tid_44706) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44703 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31943
}
__kernel void mainDetailedzisegred_small_33031(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44918_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44916_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_44914_backing_aligned_2,
                                               int64_t m_27371,
                                               int64_t iota32_arg_27766,
                                               int64_t iota32_arg_27794,
                                               int64_t num_groups_33160,
                                               int64_t segment_sizze_nonzzero_44907,
                                               __global
                                               unsigned char *mem_43439,
                                               __global
                                               unsigned char *mem_43556,
                                               __global
                                               unsigned char *mem_43560,
                                               __global
                                               unsigned char *mem_43563,
                                               __global
                                               unsigned char *mem_43566,
                                               __global
                                               unsigned char *mem_43568,
                                               __global
                                               unsigned char *mem_43570,
                                               __global
                                               unsigned char *mem_43573)
{
    #define segred_group_sizze_33159 (mainDetailedzisegred_group_sizze_33025)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44918_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44918_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44916_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44916_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44914_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44914_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44909;
    int32_t local_tid_44910;
    int64_t group_sizze_44913;
    int32_t wave_sizze_44912;
    int32_t group_tid_44911;
    
    global_tid_44909 = get_global_id(0);
    local_tid_44910 = get_local_id(0);
    group_sizze_44913 = get_local_size(0);
    wave_sizze_44912 = LOCKSTEP_WIDTH;
    group_tid_44911 = get_group_id(0);
    
    int32_t phys_tid_33031;
    
    phys_tid_33031 = global_tid_44909;
    
    __local char *red_arr_mem_44914;
    
    red_arr_mem_44914 = (__local char *) red_arr_mem_44914_backing_0;
    
    __local char *red_arr_mem_44916;
    
    red_arr_mem_44916 = (__local char *) red_arr_mem_44916_backing_1;
    
    __local char *red_arr_mem_44918;
    
    red_arr_mem_44918 = (__local char *) red_arr_mem_44918_backing_2;
    
    int32_t phys_group_id_44920;
    
    phys_group_id_44920 = get_group_id(0);
    for (int32_t i_44921 = 0; i_44921 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27371,
                                          squot64(segred_group_sizze_33159,
                                                  segment_sizze_nonzzero_44907))) -
                   phys_group_id_44920, sext_i64_i32(num_groups_33160));
         i_44921++) {
        int32_t virt_group_id_44922 = phys_group_id_44920 + i_44921 *
                sext_i64_i32(num_groups_33160);
        int64_t gtid_33022 = squot64(sext_i32_i64(local_tid_44910),
                                     segment_sizze_nonzzero_44907) +
                sext_i32_i64(virt_group_id_44922) *
                squot64(segred_group_sizze_33159, segment_sizze_nonzzero_44907);
        int64_t gtid_33030 = srem64(sext_i32_i64(local_tid_44910),
                                    iota32_arg_27766);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_27766) && (slt64(gtid_33022,
                                                               m_27371) &&
                                                         slt64(sext_i32_i64(local_tid_44910),
                                                               iota32_arg_27766 *
                                                               squot64(segred_group_sizze_33159,
                                                                       segment_sizze_nonzzero_44907)))) {
                int32_t y_33180 = ((__global int32_t *) mem_43556)[gtid_33022];
                float y_33181 = ((__global float *) mem_43563)[gtid_33022];
                int64_t binop_x_40637 = iota32_arg_27766 * gtid_33022;
                int64_t binop_x_40638 = gtid_33030 + binop_x_40637;
                int64_t new_index_40639 = squot64(binop_x_40638,
                                                  iota32_arg_27794);
                int64_t binop_y_40645 = iota32_arg_27794 * new_index_40639;
                int64_t new_index_40646 = binop_x_40638 - binop_y_40645;
                float x_33183 = ((__global float *) mem_43560)[new_index_40639 *
                                                               iota32_arg_27794 +
                                                               new_index_40646];
                float x_33184 = ((__global float *) mem_43439)[gtid_33030];
                int32_t index_primexp_40603 = sext_i64_i32(gtid_33030);
                float defunc_0_f_res_33186 = x_33183 / y_33181;
                bool cond_33187 = slt32(index_primexp_40603, y_33180);
                bool isnan_res_33188;
                
                isnan_res_33188 = futrts_isnan32(defunc_0_f_res_33186);
                
                bool cond_t_res_33189 = !isnan_res_33188;
                bool x_33190 = cond_33187 && cond_t_res_33189;
                float abs_res_33191 = (float) fabs(defunc_0_f_res_33186);
                bool defunc_2_f_res_t_res_33192 = x_33184 < abs_res_33191;
                bool x_33193 = x_33190 && defunc_2_f_res_t_res_33192;
                float defunc_1_f_res_33194;
                
                if (cond_33187) {
                    defunc_1_f_res_33194 = defunc_0_f_res_33186;
                } else {
                    defunc_1_f_res_33194 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_43573)[gtid_33022 *
                                                   iota32_arg_27766 +
                                                   gtid_33030] =
                        defunc_0_f_res_33186;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)] =
                        x_33193;
                    ((__local
                      int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)] =
                        index_primexp_40603;
                    ((__local
                      float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)] =
                        defunc_1_f_res_33194;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)] = 0;
                ((__local
                  int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)] =
                    -1;
                ((__local
                  float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_27766)) {
            // perform segmented scan to imitate reduction
            {
                bool x_33166;
                int32_t x_33167;
                float x_33168;
                bool x_33169;
                int32_t x_33170;
                float x_33171;
                bool x_44923;
                int32_t x_44924;
                float x_44925;
                bool x_44926;
                int32_t x_44927;
                float x_44928;
                bool ltid_in_bounds_44937;
                
                ltid_in_bounds_44937 = slt64(sext_i32_i64(local_tid_44910),
                                             iota32_arg_27766 *
                                             squot64(segred_group_sizze_33159,
                                                     segment_sizze_nonzzero_44907));
                
                int32_t skip_threads_44938;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44937) {
                        x_33169 = ((volatile __local
                                    bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)];
                        x_33170 = ((volatile __local
                                    int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)];
                        x_33171 = ((volatile __local
                                    float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)];
                        if ((local_tid_44910 - squot32(local_tid_44910, 32) *
                             32) == 0) {
                            x_33166 = x_33169;
                            x_33167 = x_33170;
                            x_33168 = x_33171;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44938 = 1;
                    while (slt32(skip_threads_44938, 32)) {
                        if (sle32(skip_threads_44938, local_tid_44910 -
                                  squot32(local_tid_44910, 32) * 32) &&
                            ltid_in_bounds_44937) {
                            // read operands
                            {
                                x_33166 = ((volatile __local
                                            bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910) -
                                                                       sext_i32_i64(skip_threads_44938)];
                                x_33167 = ((volatile __local
                                            int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910) -
                                                                          sext_i32_i64(skip_threads_44938)];
                                x_33168 = ((volatile __local
                                            float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910) -
                                                                        sext_i32_i64(skip_threads_44938)];
                            }
                            // perform operation
                            {
                                bool inactive_44939 =
                                     slt64(srem64(sext_i32_i64(local_tid_44910),
                                                  iota32_arg_27766),
                                           sext_i32_i64(local_tid_44910) -
                                           sext_i32_i64(local_tid_44910 -
                                           skip_threads_44938));
                                
                                if (inactive_44939) {
                                    x_33166 = x_33169;
                                    x_33167 = x_33170;
                                    x_33168 = x_33171;
                                }
                                if (!inactive_44939) {
                                    bool defunc_1_op_res_33172;
                                    int32_t defunc_1_op_res_33173;
                                    
                                    if (x_33166) {
                                        defunc_1_op_res_33172 = x_33166;
                                        defunc_1_op_res_33173 = x_33167;
                                    } else {
                                        bool x_33174 = x_33169 && x_33169;
                                        bool x_33175 = !x_33169;
                                        bool y_33176 = x_33166 && x_33175;
                                        bool defunc_1_op_res_f_res_33177 =
                                             x_33174 || y_33176;
                                        int32_t defunc_1_op_res_f_res_33178;
                                        
                                        if (x_33169) {
                                            defunc_1_op_res_f_res_33178 =
                                                x_33170;
                                        } else {
                                            defunc_1_op_res_f_res_33178 =
                                                x_33167;
                                        }
                                        defunc_1_op_res_33172 =
                                            defunc_1_op_res_f_res_33177;
                                        defunc_1_op_res_33173 =
                                            defunc_1_op_res_f_res_33178;
                                    }
                                    
                                    float defunc_1_op_res_33179 = x_33168 +
                                          x_33171;
                                    
                                    x_33166 = defunc_1_op_res_33172;
                                    x_33167 = defunc_1_op_res_33173;
                                    x_33168 = defunc_1_op_res_33179;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44912, skip_threads_44938)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44938, local_tid_44910 -
                                  squot32(local_tid_44910, 32) * 32) &&
                            ltid_in_bounds_44937) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)] =
                                    x_33166;
                                x_33169 = x_33166;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)] =
                                    x_33167;
                                x_33170 = x_33167;
                                ((volatile __local
                                  float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)] =
                                    x_33168;
                                x_33171 = x_33168;
                            }
                        }
                        if (sle32(wave_sizze_44912, skip_threads_44938)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44938 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44910 - squot32(local_tid_44910, 32) * 32) ==
                        31 && ltid_in_bounds_44937) {
                        ((volatile __local
                          bool *) red_arr_mem_44914)[sext_i32_i64(squot32(local_tid_44910,
                                                                          32))] =
                            x_33166;
                        ((volatile __local
                          int32_t *) red_arr_mem_44916)[sext_i32_i64(squot32(local_tid_44910,
                                                                             32))] =
                            x_33167;
                        ((volatile __local
                          float *) red_arr_mem_44918)[sext_i32_i64(squot32(local_tid_44910,
                                                                           32))] =
                            x_33168;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44940;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44910, 32) == 0 &&
                            ltid_in_bounds_44937) {
                            x_44926 = ((volatile __local
                                        bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)];
                            x_44927 = ((volatile __local
                                        int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)];
                            x_44928 = ((volatile __local
                                        float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)];
                            if ((local_tid_44910 - squot32(local_tid_44910,
                                                           32) * 32) == 0) {
                                x_44923 = x_44926;
                                x_44924 = x_44927;
                                x_44925 = x_44928;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44940 = 1;
                        while (slt32(skip_threads_44940, 32)) {
                            if (sle32(skip_threads_44940, local_tid_44910 -
                                      squot32(local_tid_44910, 32) * 32) &&
                                (squot32(local_tid_44910, 32) == 0 &&
                                 ltid_in_bounds_44937)) {
                                // read operands
                                {
                                    x_44923 = ((volatile __local
                                                bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910) -
                                                                           sext_i32_i64(skip_threads_44940)];
                                    x_44924 = ((volatile __local
                                                int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910) -
                                                                              sext_i32_i64(skip_threads_44940)];
                                    x_44925 = ((volatile __local
                                                float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910) -
                                                                            sext_i32_i64(skip_threads_44940)];
                                }
                                // perform operation
                                {
                                    bool inactive_44941 =
                                         slt64(srem64(sext_i32_i64(local_tid_44910 *
                                                      32 + 32 - 1),
                                                      iota32_arg_27766),
                                               sext_i32_i64(local_tid_44910 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44910 -
                                                             skip_threads_44940) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44941) {
                                        x_44923 = x_44926;
                                        x_44924 = x_44927;
                                        x_44925 = x_44928;
                                    }
                                    if (!inactive_44941) {
                                        bool defunc_1_op_res_44929;
                                        int32_t defunc_1_op_res_44930;
                                        
                                        if (x_44923) {
                                            defunc_1_op_res_44929 = x_44923;
                                            defunc_1_op_res_44930 = x_44924;
                                        } else {
                                            bool x_44931 = x_44926 && x_44926;
                                            bool x_44932 = !x_44926;
                                            bool y_44933 = x_44923 && x_44932;
                                            bool defunc_1_op_res_f_res_44934 =
                                                 x_44931 || y_44933;
                                            int32_t defunc_1_op_res_f_res_44935;
                                            
                                            if (x_44926) {
                                                defunc_1_op_res_f_res_44935 =
                                                    x_44927;
                                            } else {
                                                defunc_1_op_res_f_res_44935 =
                                                    x_44924;
                                            }
                                            defunc_1_op_res_44929 =
                                                defunc_1_op_res_f_res_44934;
                                            defunc_1_op_res_44930 =
                                                defunc_1_op_res_f_res_44935;
                                        }
                                        
                                        float defunc_1_op_res_44936 = x_44925 +
                                              x_44928;
                                        
                                        x_44923 = defunc_1_op_res_44929;
                                        x_44924 = defunc_1_op_res_44930;
                                        x_44925 = defunc_1_op_res_44936;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44912, skip_threads_44940)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44940, local_tid_44910 -
                                      squot32(local_tid_44910, 32) * 32) &&
                                (squot32(local_tid_44910, 32) == 0 &&
                                 ltid_in_bounds_44937)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)] =
                                        x_44923;
                                    x_44926 = x_44923;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)] =
                                        x_44924;
                                    x_44927 = x_44924;
                                    ((volatile __local
                                      float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)] =
                                        x_44925;
                                    x_44928 = x_44925;
                                }
                            }
                            if (sle32(wave_sizze_44912, skip_threads_44940)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44940 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44910, 32) == 0 ||
                          !ltid_in_bounds_44937)) {
                        // read operands
                        {
                            x_33169 = x_33166;
                            x_33170 = x_33167;
                            x_33171 = x_33168;
                            x_33166 = ((__local
                                        bool *) red_arr_mem_44914)[sext_i32_i64(squot32(local_tid_44910,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_33167 = ((__local
                                        int32_t *) red_arr_mem_44916)[sext_i32_i64(squot32(local_tid_44910,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_33168 = ((__local
                                        float *) red_arr_mem_44918)[sext_i32_i64(squot32(local_tid_44910,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44942 =
                                 slt64(srem64(sext_i32_i64(local_tid_44910),
                                              iota32_arg_27766),
                                       sext_i32_i64(local_tid_44910) -
                                       sext_i32_i64(squot32(local_tid_44910,
                                                            32) * 32 - 1));
                            
                            if (inactive_44942) {
                                x_33166 = x_33169;
                                x_33167 = x_33170;
                                x_33168 = x_33171;
                            }
                            if (!inactive_44942) {
                                bool defunc_1_op_res_33172;
                                int32_t defunc_1_op_res_33173;
                                
                                if (x_33166) {
                                    defunc_1_op_res_33172 = x_33166;
                                    defunc_1_op_res_33173 = x_33167;
                                } else {
                                    bool x_33174 = x_33169 && x_33169;
                                    bool x_33175 = !x_33169;
                                    bool y_33176 = x_33166 && x_33175;
                                    bool defunc_1_op_res_f_res_33177 =
                                         x_33174 || y_33176;
                                    int32_t defunc_1_op_res_f_res_33178;
                                    
                                    if (x_33169) {
                                        defunc_1_op_res_f_res_33178 = x_33170;
                                    } else {
                                        defunc_1_op_res_f_res_33178 = x_33167;
                                    }
                                    defunc_1_op_res_33172 =
                                        defunc_1_op_res_f_res_33177;
                                    defunc_1_op_res_33173 =
                                        defunc_1_op_res_f_res_33178;
                                }
                                
                                float defunc_1_op_res_33179 = x_33168 + x_33171;
                                
                                x_33166 = defunc_1_op_res_33172;
                                x_33167 = defunc_1_op_res_33173;
                                x_33168 = defunc_1_op_res_33179;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)] =
                                x_33166;
                            ((__local
                              int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)] =
                                x_33167;
                            ((__local
                              float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)] =
                                x_33168;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44910, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_44914)[sext_i32_i64(local_tid_44910)] =
                            x_33169;
                        ((__local
                          int32_t *) red_arr_mem_44916)[sext_i32_i64(local_tid_44910)] =
                            x_33170;
                        ((__local
                          float *) red_arr_mem_44918)[sext_i32_i64(local_tid_44910)] =
                            x_33171;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44922) *
                      squot64(segred_group_sizze_33159,
                              segment_sizze_nonzzero_44907) +
                      sext_i32_i64(local_tid_44910), m_27371) &&
                slt64(sext_i32_i64(local_tid_44910),
                      squot64(segred_group_sizze_33159,
                              segment_sizze_nonzzero_44907))) {
                ((__global
                  bool *) mem_43566)[sext_i32_i64(virt_group_id_44922) *
                                     squot64(segred_group_sizze_33159,
                                             segment_sizze_nonzzero_44907) +
                                     sext_i32_i64(local_tid_44910)] = ((__local
                                                                        bool *) red_arr_mem_44914)[(sext_i32_i64(local_tid_44910) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_44907 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43568)[sext_i32_i64(virt_group_id_44922) *
                                        squot64(segred_group_sizze_33159,
                                                segment_sizze_nonzzero_44907) +
                                        sext_i32_i64(local_tid_44910)] =
                    ((__local
                      int32_t *) red_arr_mem_44916)[(sext_i32_i64(local_tid_44910) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44907 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43570)[sext_i32_i64(virt_group_id_44922) *
                                      squot64(segred_group_sizze_33159,
                                              segment_sizze_nonzzero_44907) +
                                      sext_i32_i64(local_tid_44910)] = ((__local
                                                                         float *) red_arr_mem_44918)[(sext_i32_i64(local_tid_44910) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44907 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33159
}
__kernel void mainMagnitudezicopy_44007(int64_t m_28023, int64_t i32_res_28171,
                                        int64_t ctx_param_ext_42737,
                                        int64_t ctx_param_ext_42738,
                                        int64_t ctx_param_ext_42740, __global
                                        unsigned char *mem_param_42742, __global
                                        unsigned char *mem_42747)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44007;
    int32_t copy_ltid_44008;
    int32_t copy_gid_44009;
    
    copy_gtid_44007 = get_global_id(0);
    copy_ltid_44008 = get_local_id(0);
    copy_gid_44009 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44007), m_28023 * i32_res_28171)) {
        ((__global float *) mem_42747)[(sext_i32_i64(copy_gtid_44007) -
                                        squot64(sext_i32_i64(copy_gtid_44007),
                                                i32_res_28171) *
                                        i32_res_28171) * m_28023 +
                                       squot64(sext_i32_i64(copy_gtid_44007),
                                               i32_res_28171)] = ((__global
                                                                   float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44007),
                                                                                                      i32_res_28171) *
                                                                                              ctx_param_ext_42738 +
                                                                                              (sext_i32_i64(copy_gtid_44007) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44007),
                                                                                                       i32_res_28171) *
                                                                                               i32_res_28171) *
                                                                                              ctx_param_ext_42740)];
    }
    
  error_0:
    return;
}
__kernel void mainMagnitudeziscan_stage1_35433(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44419_backing_aligned_0,
                                               int64_t N_28022, int64_t m_28023,
                                               int32_t num_threads_44413,
                                               __global
                                               unsigned char *images_mem_42538,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43297,
                                               __global
                                               unsigned char *mem_43320,
                                               __global
                                               unsigned char *mem_43323)
{
    #define segscan_group_sizze_35450 (mainMagnitudezisegscan_group_sizze_35427)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44419_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44419_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44414;
    int32_t local_tid_44415;
    int64_t group_sizze_44418;
    int32_t wave_sizze_44417;
    int32_t group_tid_44416;
    
    global_tid_44414 = get_global_id(0);
    local_tid_44415 = get_local_id(0);
    group_sizze_44418 = get_local_size(0);
    wave_sizze_44417 = LOCKSTEP_WIDTH;
    group_tid_44416 = get_group_id(0);
    
    int32_t phys_tid_35433;
    
    phys_tid_35433 = global_tid_44414;
    
    __local char *scan_arr_mem_44419;
    
    scan_arr_mem_44419 = (__local char *) scan_arr_mem_44419_backing_0;
    
    int64_t x_35455;
    int64_t x_35456;
    
    x_35455 = (int64_t) 0;
    for (int64_t j_44421 = 0; j_44421 < sdiv_up64(m_28023 * N_28022,
                                                  sext_i32_i64(num_threads_44413));
         j_44421++) {
        int64_t chunk_offset_44422 = segscan_group_sizze_35450 * j_44421 +
                sext_i32_i64(group_tid_44416) * (segscan_group_sizze_35450 *
                                                 sdiv_up64(m_28023 * N_28022,
                                                           sext_i32_i64(num_threads_44413)));
        int64_t flat_idx_44423 = chunk_offset_44422 +
                sext_i32_i64(local_tid_44415);
        int64_t gtid_35424 = squot64(flat_idx_44423, N_28022);
        int64_t gtid_35432 = flat_idx_44423 - squot64(flat_idx_44423, N_28022) *
                N_28022;
        
        // threads in bounds read input
        {
            if (slt64(gtid_35424, m_28023) && slt64(gtid_35432, N_28022)) {
                float x_35460 = ((__global
                                  float *) images_mem_42538)[gtid_35424 *
                                                             N_28022 +
                                                             gtid_35432];
                bool isnan_res_35462;
                
                isnan_res_35462 = futrts_isnan32(x_35460);
                
                bool cond_35463 = !isnan_res_35462;
                float defunc_1_f_res_35464;
                
                if (cond_35463) {
                    float x_35461 = ((__global
                                      float *) defunc_3_map_res_mem_43297)[gtid_35424 *
                                                                           N_28022 +
                                                                           gtid_35432];
                    float defunc_1_f_res_t_res_35465 = x_35460 - x_35461;
                    
                    defunc_1_f_res_35464 = defunc_1_f_res_t_res_35465;
                } else {
                    defunc_1_f_res_35464 = NAN;
                }
                
                bool isnan_res_35466;
                
                isnan_res_35466 = futrts_isnan32(defunc_1_f_res_35464);
                
                bool defunc_0_p_res_35467 = !isnan_res_35466;
                int64_t defunc_0_f_res_35468 =
                        btoi_bool_i64(defunc_0_p_res_35467);
                
                // write to-scan values to parameters
                {
                    x_35456 = defunc_0_f_res_35468;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43323)[gtid_35424 * N_28022 +
                                                   gtid_35432] =
                        defunc_1_f_res_35464;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_35424, m_28023) && slt64(gtid_35432,
                                                          N_28022))) {
                    x_35456 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_35457 = add64(x_35455, x_35456);
                
                ((__local
                  int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)] =
                    defunc_1_op_res_35457;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44424;
            int64_t x_44425;
            int64_t x_44427;
            int64_t x_44428;
            bool ltid_in_bounds_44430;
            
            ltid_in_bounds_44430 = slt64(sext_i32_i64(local_tid_44415),
                                         segscan_group_sizze_35450);
            
            int32_t skip_threads_44431;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44430) {
                    x_44425 = ((volatile __local
                                int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)];
                    if ((local_tid_44415 - squot32(local_tid_44415, 32) * 32) ==
                        0) {
                        x_44424 = x_44425;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44431 = 1;
                while (slt32(skip_threads_44431, 32)) {
                    if (sle32(skip_threads_44431, local_tid_44415 -
                              squot32(local_tid_44415, 32) * 32) &&
                        ltid_in_bounds_44430) {
                        // read operands
                        {
                            x_44424 = ((volatile __local
                                        int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415) -
                                                                       sext_i32_i64(skip_threads_44431)];
                        }
                        // perform operation
                        {
                            bool inactive_44432 =
                                 slt64(srem64(sext_i32_i64(local_tid_44415) +
                                              chunk_offset_44422, N_28022),
                                       sext_i32_i64(local_tid_44415) +
                                       chunk_offset_44422 -
                                       (sext_i32_i64(local_tid_44415 -
                                        skip_threads_44431) +
                                        chunk_offset_44422));
                            
                            if (inactive_44432) {
                                x_44424 = x_44425;
                            }
                            if (!inactive_44432) {
                                int64_t defunc_1_op_res_44426 = add64(x_44424,
                                                                      x_44425);
                                
                                x_44424 = defunc_1_op_res_44426;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44417, skip_threads_44431)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44431, local_tid_44415 -
                              squot32(local_tid_44415, 32) * 32) &&
                        ltid_in_bounds_44430) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)] =
                                x_44424;
                            x_44425 = x_44424;
                        }
                    }
                    if (sle32(wave_sizze_44417, skip_threads_44431)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44431 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44415 - squot32(local_tid_44415, 32) * 32) ==
                    31 && ltid_in_bounds_44430) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44419)[sext_i32_i64(squot32(local_tid_44415,
                                                                          32))] =
                        x_44424;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44433;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44415, 32) == 0 &&
                        ltid_in_bounds_44430) {
                        x_44428 = ((volatile __local
                                    int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)];
                        if ((local_tid_44415 - squot32(local_tid_44415, 32) *
                             32) == 0) {
                            x_44427 = x_44428;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44433 = 1;
                    while (slt32(skip_threads_44433, 32)) {
                        if (sle32(skip_threads_44433, local_tid_44415 -
                                  squot32(local_tid_44415, 32) * 32) &&
                            (squot32(local_tid_44415, 32) == 0 &&
                             ltid_in_bounds_44430)) {
                            // read operands
                            {
                                x_44427 = ((volatile __local
                                            int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415) -
                                                                           sext_i32_i64(skip_threads_44433)];
                            }
                            // perform operation
                            {
                                bool inactive_44434 =
                                     slt64(srem64(sext_i32_i64(local_tid_44415 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44422, N_28022),
                                           sext_i32_i64(local_tid_44415 * 32 +
                                           32 - 1) + chunk_offset_44422 -
                                           (sext_i32_i64((local_tid_44415 -
                                                          skip_threads_44433) *
                                            32 + 32 - 1) + chunk_offset_44422));
                                
                                if (inactive_44434) {
                                    x_44427 = x_44428;
                                }
                                if (!inactive_44434) {
                                    int64_t defunc_1_op_res_44429 =
                                            add64(x_44427, x_44428);
                                    
                                    x_44427 = defunc_1_op_res_44429;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44417, skip_threads_44433)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44433, local_tid_44415 -
                                  squot32(local_tid_44415, 32) * 32) &&
                            (squot32(local_tid_44415, 32) == 0 &&
                             ltid_in_bounds_44430)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)] =
                                    x_44427;
                                x_44428 = x_44427;
                            }
                        }
                        if (sle32(wave_sizze_44417, skip_threads_44433)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44433 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44415, 32) == 0 ||
                      !ltid_in_bounds_44430)) {
                    // read operands
                    {
                        x_44425 = x_44424;
                        x_44424 = ((__local
                                    int64_t *) scan_arr_mem_44419)[sext_i32_i64(squot32(local_tid_44415,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44435 =
                             slt64(srem64(sext_i32_i64(local_tid_44415) +
                                          chunk_offset_44422, N_28022),
                                   sext_i32_i64(local_tid_44415) +
                                   chunk_offset_44422 -
                                   (sext_i32_i64(squot32(local_tid_44415, 32) *
                                    32 - 1) + chunk_offset_44422));
                        
                        if (inactive_44435) {
                            x_44424 = x_44425;
                        }
                        if (!inactive_44435) {
                            int64_t defunc_1_op_res_44426 = add64(x_44424,
                                                                  x_44425);
                            
                            x_44424 = defunc_1_op_res_44426;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)] =
                            x_44424;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44415, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)] =
                        x_44425;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_35424, m_28023) && slt64(gtid_35432, N_28022)) {
                    ((__global int64_t *) mem_43320)[gtid_35424 * N_28022 +
                                                     gtid_35432] = ((__local
                                                                     int64_t *) scan_arr_mem_44419)[sext_i32_i64(local_tid_44415)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44436 = slt64(srem64(chunk_offset_44422 +
                                                          segscan_group_sizze_35450,
                                                          N_28022),
                                                   chunk_offset_44422 +
                                                   segscan_group_sizze_35450 -
                                                   (chunk_offset_44422 +
                                                    segscan_group_sizze_35450 -
                                                    (int64_t) 1));
                bool should_load_carry_44437 = local_tid_44415 == 0 &&
                     !crosses_segment_44436;
                
                if (should_load_carry_44437) {
                    x_35455 = ((__local
                                int64_t *) scan_arr_mem_44419)[segscan_group_sizze_35450 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44437) {
                    x_35455 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_35450
}
__kernel void mainMagnitudeziscan_stage1_36975(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44822_backing_aligned_0,
                                               int64_t N_28022, int64_t m_28023,
                                               int64_t iota32_arg_28418,
                                               int32_t num_threads_44816,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43335,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43401,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43402,
                                               __global
                                               unsigned char *defunc_0_f_res_mem_43436,
                                               __global
                                               unsigned char *mem_43496,
                                               __global
                                               unsigned char *mem_43500)
{
    #define segscan_group_sizze_37053 (mainMagnitudezisegscan_group_sizze_36969)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44822_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44822_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44817;
    int32_t local_tid_44818;
    int64_t group_sizze_44821;
    int32_t wave_sizze_44820;
    int32_t group_tid_44819;
    
    global_tid_44817 = get_global_id(0);
    local_tid_44818 = get_local_id(0);
    group_sizze_44821 = get_local_size(0);
    wave_sizze_44820 = LOCKSTEP_WIDTH;
    group_tid_44819 = get_group_id(0);
    
    int32_t phys_tid_36975;
    
    phys_tid_36975 = global_tid_44817;
    
    __local char *scan_arr_mem_44822;
    
    scan_arr_mem_44822 = (__local char *) scan_arr_mem_44822_backing_0;
    
    float x_37057;
    float x_37058;
    
    x_37057 = 0.0F;
    for (int64_t j_44824 = 0; j_44824 < sdiv_up64(m_28023 * iota32_arg_28418,
                                                  sext_i32_i64(num_threads_44816));
         j_44824++) {
        int64_t chunk_offset_44825 = segscan_group_sizze_37053 * j_44824 +
                sext_i32_i64(group_tid_44819) * (segscan_group_sizze_37053 *
                                                 sdiv_up64(m_28023 *
                                                           iota32_arg_28418,
                                                           sext_i32_i64(num_threads_44816)));
        int64_t flat_idx_44826 = chunk_offset_44825 +
                sext_i32_i64(local_tid_44818);
        int64_t gtid_36966 = squot64(flat_idx_44826, iota32_arg_28418);
        int64_t gtid_36974 = flat_idx_44826 - squot64(flat_idx_44826,
                                                      iota32_arg_28418) *
                iota32_arg_28418;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36966, m_28023) && slt64(gtid_36974,
                                                    iota32_arg_28418)) {
                int32_t y_37064 = ((__global int32_t *) mem_43496)[gtid_36966];
                int32_t index_primexp_40595 = sext_i64_i32(gtid_36974);
                bool cond_37067 = sle32(y_37064, index_primexp_40595);
                float defunc_0_f_res_37068;
                
                if (cond_37067) {
                    defunc_0_f_res_37068 = 0.0F;
                } else {
                    int32_t x_37060 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_36966];
                    int32_t x_37061 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43401)[gtid_36966];
                    float x_37062 = ((__global
                                      float *) defunc_0_f_res_mem_43436)[gtid_36966];
                    bool cond_37069 = index_primexp_40595 == 0;
                    float defunc_0_f_res_f_res_37070;
                    
                    if (cond_37069) {
                        defunc_0_f_res_f_res_37070 = x_37062;
                    } else {
                        int32_t i_37071 = add32(x_37060, index_primexp_40595);
                        int64_t i_37072 = sext_i32_i64(i_37071);
                        float x_37073 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_36966 *
                                                                               N_28022 +
                                                                               i_37072];
                        int32_t x_37074 = sub32(x_37060, x_37061);
                        int32_t i_37075 = add32(x_37074, index_primexp_40595);
                        int64_t i_37076 = sext_i32_i64(i_37075);
                        float y_37077 = ((__global
                                          float *) defunc_4_map_res_mem_43335)[gtid_36966 *
                                                                               N_28022 +
                                                                               i_37076];
                        float defunc_0_f_res_f_res_f_res_37078 = x_37073 -
                              y_37077;
                        
                        defunc_0_f_res_f_res_37070 =
                            defunc_0_f_res_f_res_f_res_37078;
                    }
                    defunc_0_f_res_37068 = defunc_0_f_res_f_res_37070;
                }
                // write to-scan values to parameters
                {
                    x_37058 = defunc_0_f_res_37068;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36966, m_28023) && slt64(gtid_36974,
                                                          iota32_arg_28418))) {
                    x_37058 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_37059 = x_37057 + x_37058;
                
                ((__local
                  float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                    defunc_1_op_res_37059;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_44827;
            float x_44828;
            float x_44830;
            float x_44831;
            bool ltid_in_bounds_44833;
            
            ltid_in_bounds_44833 = slt64(sext_i32_i64(local_tid_44818),
                                         segscan_group_sizze_37053);
            
            int32_t skip_threads_44834;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44833) {
                    x_44828 = ((volatile __local
                                float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)];
                    if ((local_tid_44818 - squot32(local_tid_44818, 32) * 32) ==
                        0) {
                        x_44827 = x_44828;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44834 = 1;
                while (slt32(skip_threads_44834, 32)) {
                    if (sle32(skip_threads_44834, local_tid_44818 -
                              squot32(local_tid_44818, 32) * 32) &&
                        ltid_in_bounds_44833) {
                        // read operands
                        {
                            x_44827 = ((volatile __local
                                        float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818) -
                                                                     sext_i32_i64(skip_threads_44834)];
                        }
                        // perform operation
                        {
                            bool inactive_44835 =
                                 slt64(srem64(sext_i32_i64(local_tid_44818) +
                                              chunk_offset_44825,
                                              iota32_arg_28418),
                                       sext_i32_i64(local_tid_44818) +
                                       chunk_offset_44825 -
                                       (sext_i32_i64(local_tid_44818 -
                                        skip_threads_44834) +
                                        chunk_offset_44825));
                            
                            if (inactive_44835) {
                                x_44827 = x_44828;
                            }
                            if (!inactive_44835) {
                                float defunc_1_op_res_44829 = x_44827 + x_44828;
                                
                                x_44827 = defunc_1_op_res_44829;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44820, skip_threads_44834)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44834, local_tid_44818 -
                              squot32(local_tid_44818, 32) * 32) &&
                        ltid_in_bounds_44833) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                                x_44827;
                            x_44828 = x_44827;
                        }
                    }
                    if (sle32(wave_sizze_44820, skip_threads_44834)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44834 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44818 - squot32(local_tid_44818, 32) * 32) ==
                    31 && ltid_in_bounds_44833) {
                    ((volatile __local
                      float *) scan_arr_mem_44822)[sext_i32_i64(squot32(local_tid_44818,
                                                                        32))] =
                        x_44827;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44836;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44818, 32) == 0 &&
                        ltid_in_bounds_44833) {
                        x_44831 = ((volatile __local
                                    float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)];
                        if ((local_tid_44818 - squot32(local_tid_44818, 32) *
                             32) == 0) {
                            x_44830 = x_44831;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44836 = 1;
                    while (slt32(skip_threads_44836, 32)) {
                        if (sle32(skip_threads_44836, local_tid_44818 -
                                  squot32(local_tid_44818, 32) * 32) &&
                            (squot32(local_tid_44818, 32) == 0 &&
                             ltid_in_bounds_44833)) {
                            // read operands
                            {
                                x_44830 = ((volatile __local
                                            float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818) -
                                                                         sext_i32_i64(skip_threads_44836)];
                            }
                            // perform operation
                            {
                                bool inactive_44837 =
                                     slt64(srem64(sext_i32_i64(local_tid_44818 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44825,
                                                  iota32_arg_28418),
                                           sext_i32_i64(local_tid_44818 * 32 +
                                           32 - 1) + chunk_offset_44825 -
                                           (sext_i32_i64((local_tid_44818 -
                                                          skip_threads_44836) *
                                            32 + 32 - 1) + chunk_offset_44825));
                                
                                if (inactive_44837) {
                                    x_44830 = x_44831;
                                }
                                if (!inactive_44837) {
                                    float defunc_1_op_res_44832 = x_44830 +
                                          x_44831;
                                    
                                    x_44830 = defunc_1_op_res_44832;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44820, skip_threads_44836)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44836, local_tid_44818 -
                                  squot32(local_tid_44818, 32) * 32) &&
                            (squot32(local_tid_44818, 32) == 0 &&
                             ltid_in_bounds_44833)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                                    x_44830;
                                x_44831 = x_44830;
                            }
                        }
                        if (sle32(wave_sizze_44820, skip_threads_44836)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44836 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44818, 32) == 0 ||
                      !ltid_in_bounds_44833)) {
                    // read operands
                    {
                        x_44828 = x_44827;
                        x_44827 = ((__local
                                    float *) scan_arr_mem_44822)[sext_i32_i64(squot32(local_tid_44818,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44838 =
                             slt64(srem64(sext_i32_i64(local_tid_44818) +
                                          chunk_offset_44825, iota32_arg_28418),
                                   sext_i32_i64(local_tid_44818) +
                                   chunk_offset_44825 -
                                   (sext_i32_i64(squot32(local_tid_44818, 32) *
                                    32 - 1) + chunk_offset_44825));
                        
                        if (inactive_44838) {
                            x_44827 = x_44828;
                        }
                        if (!inactive_44838) {
                            float defunc_1_op_res_44829 = x_44827 + x_44828;
                            
                            x_44827 = defunc_1_op_res_44829;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                            x_44827;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44818, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                        x_44828;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36966, m_28023) && slt64(gtid_36974,
                                                        iota32_arg_28418)) {
                    ((__global float *) mem_43500)[gtid_36966 *
                                                   iota32_arg_28418 +
                                                   gtid_36974] = ((__local
                                                                   float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44839 = slt64(srem64(chunk_offset_44825 +
                                                          segscan_group_sizze_37053,
                                                          iota32_arg_28418),
                                                   chunk_offset_44825 +
                                                   segscan_group_sizze_37053 -
                                                   (chunk_offset_44825 +
                                                    segscan_group_sizze_37053 -
                                                    (int64_t) 1));
                bool should_load_carry_44840 = local_tid_44818 == 0 &&
                     !crosses_segment_44839;
                
                if (should_load_carry_44840) {
                    x_37057 = ((__local
                                float *) scan_arr_mem_44822)[segscan_group_sizze_37053 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_44840) {
                    x_37057 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_37053
}
__kernel void mainMagnitudeziscan_stage2_35433(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44443_backing_aligned_0,
                                               int64_t N_28022, int64_t m_28023,
                                               int64_t stage1_num_groups_44412,
                                               int32_t num_threads_44413,
                                               __global
                                               unsigned char *mem_43320)
{
    #define segscan_group_sizze_35450 (mainMagnitudezisegscan_group_sizze_35427)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44443_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44443_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44438;
    int32_t local_tid_44439;
    int64_t group_sizze_44442;
    int32_t wave_sizze_44441;
    int32_t group_tid_44440;
    
    global_tid_44438 = get_global_id(0);
    local_tid_44439 = get_local_id(0);
    group_sizze_44442 = get_local_size(0);
    wave_sizze_44441 = LOCKSTEP_WIDTH;
    group_tid_44440 = get_group_id(0);
    
    int32_t phys_tid_35433;
    
    phys_tid_35433 = global_tid_44438;
    
    __local char *scan_arr_mem_44443;
    
    scan_arr_mem_44443 = (__local char *) scan_arr_mem_44443_backing_0;
    
    int64_t flat_idx_44445;
    
    flat_idx_44445 = (sext_i32_i64(local_tid_44439) + (int64_t) 1) *
        (segscan_group_sizze_35450 * sdiv_up64(m_28023 * N_28022,
                                               sext_i32_i64(num_threads_44413))) -
        (int64_t) 1;
    
    int64_t gtid_35424;
    
    gtid_35424 = squot64(flat_idx_44445, N_28022);
    
    int64_t gtid_35432;
    
    gtid_35432 = flat_idx_44445 - squot64(flat_idx_44445, N_28022) * N_28022;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_35424, m_28023) && slt64(gtid_35432, N_28022)) {
            ((__local
              int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)] =
                ((__global int64_t *) mem_43320)[gtid_35424 * N_28022 +
                                                 gtid_35432];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_35455;
    int64_t x_35456;
    int64_t x_44446;
    int64_t x_44447;
    bool ltid_in_bounds_44449;
    
    ltid_in_bounds_44449 = slt64(sext_i32_i64(local_tid_44439),
                                 stage1_num_groups_44412);
    
    int32_t skip_threads_44450;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44449) {
            x_35456 = ((volatile __local
                        int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)];
            if ((local_tid_44439 - squot32(local_tid_44439, 32) * 32) == 0) {
                x_35455 = x_35456;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44450 = 1;
        while (slt32(skip_threads_44450, 32)) {
            if (sle32(skip_threads_44450, local_tid_44439 -
                      squot32(local_tid_44439, 32) * 32) &&
                ltid_in_bounds_44449) {
                // read operands
                {
                    x_35455 = ((volatile __local
                                int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439) -
                                                               sext_i32_i64(skip_threads_44450)];
                }
                // perform operation
                {
                    bool inactive_44451 =
                         slt64(srem64((sext_i32_i64(local_tid_44439) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_35450 *
                                       sdiv_up64(m_28023 * N_28022,
                                                 sext_i32_i64(num_threads_44413))) -
                                      (int64_t) 1, N_28022),
                               (sext_i32_i64(local_tid_44439) + (int64_t) 1) *
                               (segscan_group_sizze_35450 * sdiv_up64(m_28023 *
                                                                      N_28022,
                                                                      sext_i32_i64(num_threads_44413))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44439 -
                                               skip_threads_44450) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_35450 *
                                               sdiv_up64(m_28023 * N_28022,
                                                         sext_i32_i64(num_threads_44413))) -
                                              (int64_t) 1));
                    
                    if (inactive_44451) {
                        x_35455 = x_35456;
                    }
                    if (!inactive_44451) {
                        int64_t defunc_1_op_res_35457 = add64(x_35455, x_35456);
                        
                        x_35455 = defunc_1_op_res_35457;
                    }
                }
            }
            if (sle32(wave_sizze_44441, skip_threads_44450)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44450, local_tid_44439 -
                      squot32(local_tid_44439, 32) * 32) &&
                ltid_in_bounds_44449) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)] =
                        x_35455;
                    x_35456 = x_35455;
                }
            }
            if (sle32(wave_sizze_44441, skip_threads_44450)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44450 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44439 - squot32(local_tid_44439, 32) * 32) == 31 &&
            ltid_in_bounds_44449) {
            ((volatile __local
              int64_t *) scan_arr_mem_44443)[sext_i32_i64(squot32(local_tid_44439,
                                                                  32))] =
                x_35455;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44452;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44439, 32) == 0 && ltid_in_bounds_44449) {
                x_44447 = ((volatile __local
                            int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)];
                if ((local_tid_44439 - squot32(local_tid_44439, 32) * 32) ==
                    0) {
                    x_44446 = x_44447;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44452 = 1;
            while (slt32(skip_threads_44452, 32)) {
                if (sle32(skip_threads_44452, local_tid_44439 -
                          squot32(local_tid_44439, 32) * 32) &&
                    (squot32(local_tid_44439, 32) == 0 &&
                     ltid_in_bounds_44449)) {
                    // read operands
                    {
                        x_44446 = ((volatile __local
                                    int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439) -
                                                                   sext_i32_i64(skip_threads_44452)];
                    }
                    // perform operation
                    {
                        bool inactive_44453 =
                             slt64(srem64((sext_i32_i64(local_tid_44439 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_35450 *
                                           sdiv_up64(m_28023 * N_28022,
                                                     sext_i32_i64(num_threads_44413))) -
                                          (int64_t) 1, N_28022),
                                   (sext_i32_i64(local_tid_44439 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_35450 *
                                    sdiv_up64(m_28023 * N_28022,
                                              sext_i32_i64(num_threads_44413))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44439 -
                                                   skip_threads_44452) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_35450 *
                                     sdiv_up64(m_28023 * N_28022,
                                               sext_i32_i64(num_threads_44413))) -
                                    (int64_t) 1));
                        
                        if (inactive_44453) {
                            x_44446 = x_44447;
                        }
                        if (!inactive_44453) {
                            int64_t defunc_1_op_res_44448 = add64(x_44446,
                                                                  x_44447);
                            
                            x_44446 = defunc_1_op_res_44448;
                        }
                    }
                }
                if (sle32(wave_sizze_44441, skip_threads_44452)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44452, local_tid_44439 -
                          squot32(local_tid_44439, 32) * 32) &&
                    (squot32(local_tid_44439, 32) == 0 &&
                     ltid_in_bounds_44449)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)] =
                            x_44446;
                        x_44447 = x_44446;
                    }
                }
                if (sle32(wave_sizze_44441, skip_threads_44452)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44452 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44439, 32) == 0 || !ltid_in_bounds_44449)) {
            // read operands
            {
                x_35456 = x_35455;
                x_35455 = ((__local
                            int64_t *) scan_arr_mem_44443)[sext_i32_i64(squot32(local_tid_44439,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44454 =
                     slt64(srem64((sext_i32_i64(local_tid_44439) +
                                   (int64_t) 1) * (segscan_group_sizze_35450 *
                                                   sdiv_up64(m_28023 * N_28022,
                                                             sext_i32_i64(num_threads_44413))) -
                                  (int64_t) 1, N_28022),
                           (sext_i32_i64(local_tid_44439) + (int64_t) 1) *
                           (segscan_group_sizze_35450 * sdiv_up64(m_28023 *
                                                                  N_28022,
                                                                  sext_i32_i64(num_threads_44413))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44439,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_35450 *
                                           sdiv_up64(m_28023 * N_28022,
                                                     sext_i32_i64(num_threads_44413))) -
                                          (int64_t) 1));
                
                if (inactive_44454) {
                    x_35455 = x_35456;
                }
                if (!inactive_44454) {
                    int64_t defunc_1_op_res_35457 = add64(x_35455, x_35456);
                    
                    x_35455 = defunc_1_op_res_35457;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)] =
                    x_35455;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44439, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)] =
                x_35456;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_35424, m_28023) && slt64(gtid_35432, N_28022)) {
            ((__global int64_t *) mem_43320)[gtid_35424 * N_28022 +
                                             gtid_35432] = ((__local
                                                             int64_t *) scan_arr_mem_44443)[sext_i32_i64(local_tid_44439)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_35450
}
__kernel void mainMagnitudeziscan_stage2_36975(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44846_backing_aligned_0,
                                               int64_t m_28023,
                                               int64_t iota32_arg_28418,
                                               int64_t stage1_num_groups_44815,
                                               int32_t num_threads_44816,
                                               __global
                                               unsigned char *mem_43500)
{
    #define segscan_group_sizze_37053 (mainMagnitudezisegscan_group_sizze_36969)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44846_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44846_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44841;
    int32_t local_tid_44842;
    int64_t group_sizze_44845;
    int32_t wave_sizze_44844;
    int32_t group_tid_44843;
    
    global_tid_44841 = get_global_id(0);
    local_tid_44842 = get_local_id(0);
    group_sizze_44845 = get_local_size(0);
    wave_sizze_44844 = LOCKSTEP_WIDTH;
    group_tid_44843 = get_group_id(0);
    
    int32_t phys_tid_36975;
    
    phys_tid_36975 = global_tid_44841;
    
    __local char *scan_arr_mem_44846;
    
    scan_arr_mem_44846 = (__local char *) scan_arr_mem_44846_backing_0;
    
    int64_t flat_idx_44848;
    
    flat_idx_44848 = (sext_i32_i64(local_tid_44842) + (int64_t) 1) *
        (segscan_group_sizze_37053 * sdiv_up64(m_28023 * iota32_arg_28418,
                                               sext_i32_i64(num_threads_44816))) -
        (int64_t) 1;
    
    int64_t gtid_36966;
    
    gtid_36966 = squot64(flat_idx_44848, iota32_arg_28418);
    
    int64_t gtid_36974;
    
    gtid_36974 = flat_idx_44848 - squot64(flat_idx_44848, iota32_arg_28418) *
        iota32_arg_28418;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36966, m_28023) && slt64(gtid_36974, iota32_arg_28418)) {
            ((__local
              float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                ((__global float *) mem_43500)[gtid_36966 * iota32_arg_28418 +
                                               gtid_36974];
        } else {
            ((__local
              float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_37057;
    float x_37058;
    float x_44849;
    float x_44850;
    bool ltid_in_bounds_44852;
    
    ltid_in_bounds_44852 = slt64(sext_i32_i64(local_tid_44842),
                                 stage1_num_groups_44815);
    
    int32_t skip_threads_44853;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44852) {
            x_37058 = ((volatile __local
                        float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)];
            if ((local_tid_44842 - squot32(local_tid_44842, 32) * 32) == 0) {
                x_37057 = x_37058;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44853 = 1;
        while (slt32(skip_threads_44853, 32)) {
            if (sle32(skip_threads_44853, local_tid_44842 -
                      squot32(local_tid_44842, 32) * 32) &&
                ltid_in_bounds_44852) {
                // read operands
                {
                    x_37057 = ((volatile __local
                                float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842) -
                                                             sext_i32_i64(skip_threads_44853)];
                }
                // perform operation
                {
                    bool inactive_44854 =
                         slt64(srem64((sext_i32_i64(local_tid_44842) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_37053 *
                                       sdiv_up64(m_28023 * iota32_arg_28418,
                                                 sext_i32_i64(num_threads_44816))) -
                                      (int64_t) 1, iota32_arg_28418),
                               (sext_i32_i64(local_tid_44842) + (int64_t) 1) *
                               (segscan_group_sizze_37053 * sdiv_up64(m_28023 *
                                                                      iota32_arg_28418,
                                                                      sext_i32_i64(num_threads_44816))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44842 -
                                               skip_threads_44853) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_37053 *
                                               sdiv_up64(m_28023 *
                                                         iota32_arg_28418,
                                                         sext_i32_i64(num_threads_44816))) -
                                              (int64_t) 1));
                    
                    if (inactive_44854) {
                        x_37057 = x_37058;
                    }
                    if (!inactive_44854) {
                        float defunc_1_op_res_37059 = x_37057 + x_37058;
                        
                        x_37057 = defunc_1_op_res_37059;
                    }
                }
            }
            if (sle32(wave_sizze_44844, skip_threads_44853)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44853, local_tid_44842 -
                      squot32(local_tid_44842, 32) * 32) &&
                ltid_in_bounds_44852) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                        x_37057;
                    x_37058 = x_37057;
                }
            }
            if (sle32(wave_sizze_44844, skip_threads_44853)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44853 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44842 - squot32(local_tid_44842, 32) * 32) == 31 &&
            ltid_in_bounds_44852) {
            ((volatile __local
              float *) scan_arr_mem_44846)[sext_i32_i64(squot32(local_tid_44842,
                                                                32))] = x_37057;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44855;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44842, 32) == 0 && ltid_in_bounds_44852) {
                x_44850 = ((volatile __local
                            float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)];
                if ((local_tid_44842 - squot32(local_tid_44842, 32) * 32) ==
                    0) {
                    x_44849 = x_44850;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44855 = 1;
            while (slt32(skip_threads_44855, 32)) {
                if (sle32(skip_threads_44855, local_tid_44842 -
                          squot32(local_tid_44842, 32) * 32) &&
                    (squot32(local_tid_44842, 32) == 0 &&
                     ltid_in_bounds_44852)) {
                    // read operands
                    {
                        x_44849 = ((volatile __local
                                    float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842) -
                                                                 sext_i32_i64(skip_threads_44855)];
                    }
                    // perform operation
                    {
                        bool inactive_44856 =
                             slt64(srem64((sext_i32_i64(local_tid_44842 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_37053 *
                                           sdiv_up64(m_28023 * iota32_arg_28418,
                                                     sext_i32_i64(num_threads_44816))) -
                                          (int64_t) 1, iota32_arg_28418),
                                   (sext_i32_i64(local_tid_44842 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_37053 *
                                    sdiv_up64(m_28023 * iota32_arg_28418,
                                              sext_i32_i64(num_threads_44816))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44842 -
                                                   skip_threads_44855) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_37053 *
                                     sdiv_up64(m_28023 * iota32_arg_28418,
                                               sext_i32_i64(num_threads_44816))) -
                                    (int64_t) 1));
                        
                        if (inactive_44856) {
                            x_44849 = x_44850;
                        }
                        if (!inactive_44856) {
                            float defunc_1_op_res_44851 = x_44849 + x_44850;
                            
                            x_44849 = defunc_1_op_res_44851;
                        }
                    }
                }
                if (sle32(wave_sizze_44844, skip_threads_44855)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44855, local_tid_44842 -
                          squot32(local_tid_44842, 32) * 32) &&
                    (squot32(local_tid_44842, 32) == 0 &&
                     ltid_in_bounds_44852)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                            x_44849;
                        x_44850 = x_44849;
                    }
                }
                if (sle32(wave_sizze_44844, skip_threads_44855)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44855 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44842, 32) == 0 || !ltid_in_bounds_44852)) {
            // read operands
            {
                x_37058 = x_37057;
                x_37057 = ((__local
                            float *) scan_arr_mem_44846)[sext_i32_i64(squot32(local_tid_44842,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44857 =
                     slt64(srem64((sext_i32_i64(local_tid_44842) +
                                   (int64_t) 1) * (segscan_group_sizze_37053 *
                                                   sdiv_up64(m_28023 *
                                                             iota32_arg_28418,
                                                             sext_i32_i64(num_threads_44816))) -
                                  (int64_t) 1, iota32_arg_28418),
                           (sext_i32_i64(local_tid_44842) + (int64_t) 1) *
                           (segscan_group_sizze_37053 * sdiv_up64(m_28023 *
                                                                  iota32_arg_28418,
                                                                  sext_i32_i64(num_threads_44816))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44842,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_37053 *
                                           sdiv_up64(m_28023 * iota32_arg_28418,
                                                     sext_i32_i64(num_threads_44816))) -
                                          (int64_t) 1));
                
                if (inactive_44857) {
                    x_37057 = x_37058;
                }
                if (!inactive_44857) {
                    float defunc_1_op_res_37059 = x_37057 + x_37058;
                    
                    x_37057 = defunc_1_op_res_37059;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                    x_37057;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44842, 32) == 0) {
            ((__local
              float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                x_37058;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36966, m_28023) && slt64(gtid_36974, iota32_arg_28418)) {
            ((__global float *) mem_43500)[gtid_36966 * iota32_arg_28418 +
                                           gtid_36974] = ((__local
                                                           float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37053
}
__kernel void mainMagnitudeziscan_stage3_35433(__global int *global_failure,
                                               int64_t N_28022, int64_t m_28023,
                                               int64_t num_groups_35451,
                                               int32_t num_threads_44413,
                                               int32_t required_groups_44455,
                                               __global
                                               unsigned char *mem_43320)
{
    #define segscan_group_sizze_35450 (mainMagnitudezisegscan_group_sizze_35427)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44456;
    int32_t local_tid_44457;
    int64_t group_sizze_44460;
    int32_t wave_sizze_44459;
    int32_t group_tid_44458;
    
    global_tid_44456 = get_global_id(0);
    local_tid_44457 = get_local_id(0);
    group_sizze_44460 = get_local_size(0);
    wave_sizze_44459 = LOCKSTEP_WIDTH;
    group_tid_44458 = get_group_id(0);
    
    int32_t phys_tid_35433;
    
    phys_tid_35433 = global_tid_44456;
    
    int32_t phys_group_id_44461;
    
    phys_group_id_44461 = get_group_id(0);
    for (int32_t i_44462 = 0; i_44462 < sdiv_up32(required_groups_44455 -
                                                  phys_group_id_44461,
                                                  sext_i64_i32(num_groups_35451));
         i_44462++) {
        int32_t virt_group_id_44463 = phys_group_id_44461 + i_44462 *
                sext_i64_i32(num_groups_35451);
        int64_t flat_idx_44464 = sext_i32_i64(virt_group_id_44463) *
                segscan_group_sizze_35450 + sext_i32_i64(local_tid_44457);
        int64_t gtid_35424 = squot64(flat_idx_44464, N_28022);
        int64_t gtid_35432 = flat_idx_44464 - squot64(flat_idx_44464, N_28022) *
                N_28022;
        int64_t orig_group_44465 = squot64(flat_idx_44464,
                                           segscan_group_sizze_35450 *
                                           sdiv_up64(m_28023 * N_28022,
                                                     sext_i32_i64(num_threads_44413)));
        int64_t carry_in_flat_idx_44466 = orig_group_44465 *
                (segscan_group_sizze_35450 * sdiv_up64(m_28023 * N_28022,
                                                       sext_i32_i64(num_threads_44413))) -
                (int64_t) 1;
        
        if (slt64(gtid_35424, m_28023) && slt64(gtid_35432, N_28022)) {
            if (!(orig_group_44465 == (int64_t) 0 || (flat_idx_44464 ==
                                                      (orig_group_44465 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_35450 *
                                                       sdiv_up64(m_28023 *
                                                                 N_28022,
                                                                 sext_i32_i64(num_threads_44413))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44464,
                                                                   N_28022),
                                                            flat_idx_44464 -
                                                            carry_in_flat_idx_44466)))) {
                int64_t x_35455;
                int64_t x_35456;
                
                x_35455 = ((__global
                            int64_t *) mem_43320)[squot64(carry_in_flat_idx_44466,
                                                          N_28022) * N_28022 +
                                                  (carry_in_flat_idx_44466 -
                                                   squot64(carry_in_flat_idx_44466,
                                                           N_28022) * N_28022)];
                x_35456 = ((__global int64_t *) mem_43320)[gtid_35424 *
                                                           N_28022 +
                                                           gtid_35432];
                
                int64_t defunc_1_op_res_35457;
                
                defunc_1_op_res_35457 = add64(x_35455, x_35456);
                x_35455 = defunc_1_op_res_35457;
                ((__global int64_t *) mem_43320)[gtid_35424 * N_28022 +
                                                 gtid_35432] = x_35455;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_35450
}
__kernel void mainMagnitudeziscan_stage3_36975(__global int *global_failure,
                                               int64_t m_28023,
                                               int64_t iota32_arg_28418,
                                               int64_t num_groups_37054,
                                               int32_t num_threads_44816,
                                               int32_t required_groups_44858,
                                               __global
                                               unsigned char *mem_43500)
{
    #define segscan_group_sizze_37053 (mainMagnitudezisegscan_group_sizze_36969)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44859;
    int32_t local_tid_44860;
    int64_t group_sizze_44863;
    int32_t wave_sizze_44862;
    int32_t group_tid_44861;
    
    global_tid_44859 = get_global_id(0);
    local_tid_44860 = get_local_id(0);
    group_sizze_44863 = get_local_size(0);
    wave_sizze_44862 = LOCKSTEP_WIDTH;
    group_tid_44861 = get_group_id(0);
    
    int32_t phys_tid_36975;
    
    phys_tid_36975 = global_tid_44859;
    
    int32_t phys_group_id_44864;
    
    phys_group_id_44864 = get_group_id(0);
    for (int32_t i_44865 = 0; i_44865 < sdiv_up32(required_groups_44858 -
                                                  phys_group_id_44864,
                                                  sext_i64_i32(num_groups_37054));
         i_44865++) {
        int32_t virt_group_id_44866 = phys_group_id_44864 + i_44865 *
                sext_i64_i32(num_groups_37054);
        int64_t flat_idx_44867 = sext_i32_i64(virt_group_id_44866) *
                segscan_group_sizze_37053 + sext_i32_i64(local_tid_44860);
        int64_t gtid_36966 = squot64(flat_idx_44867, iota32_arg_28418);
        int64_t gtid_36974 = flat_idx_44867 - squot64(flat_idx_44867,
                                                      iota32_arg_28418) *
                iota32_arg_28418;
        int64_t orig_group_44868 = squot64(flat_idx_44867,
                                           segscan_group_sizze_37053 *
                                           sdiv_up64(m_28023 * iota32_arg_28418,
                                                     sext_i32_i64(num_threads_44816)));
        int64_t carry_in_flat_idx_44869 = orig_group_44868 *
                (segscan_group_sizze_37053 * sdiv_up64(m_28023 *
                                                       iota32_arg_28418,
                                                       sext_i32_i64(num_threads_44816))) -
                (int64_t) 1;
        
        if (slt64(gtid_36966, m_28023) && slt64(gtid_36974, iota32_arg_28418)) {
            if (!(orig_group_44868 == (int64_t) 0 || (flat_idx_44867 ==
                                                      (orig_group_44868 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_37053 *
                                                       sdiv_up64(m_28023 *
                                                                 iota32_arg_28418,
                                                                 sext_i32_i64(num_threads_44816))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44867,
                                                                   iota32_arg_28418),
                                                            flat_idx_44867 -
                                                            carry_in_flat_idx_44869)))) {
                float x_37057;
                float x_37058;
                
                x_37057 = ((__global
                            float *) mem_43500)[squot64(carry_in_flat_idx_44869,
                                                        iota32_arg_28418) *
                                                iota32_arg_28418 +
                                                (carry_in_flat_idx_44869 -
                                                 squot64(carry_in_flat_idx_44869,
                                                         iota32_arg_28418) *
                                                 iota32_arg_28418)];
                x_37058 = ((__global float *) mem_43500)[gtid_36966 *
                                                         iota32_arg_28418 +
                                                         gtid_36974];
                
                float defunc_1_op_res_37059;
                
                defunc_1_op_res_37059 = x_37057 + x_37058;
                x_37057 = defunc_1_op_res_37059;
                ((__global float *) mem_43500)[gtid_36966 * iota32_arg_28418 +
                                               gtid_36974] = x_37057;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37053
}
__kernel void mainMagnitudezisegmap_33356(__global int *global_failure,
                                          int64_t N_28022, float freq_28027,
                                          int64_t i32_res_28038, __global
                                          unsigned char *mappingindices_mem_42537,
                                          __global unsigned char *mem_42542)
{
    #define segmap_group_sizze_33429 (mainMagnitudezisegmap_group_sizze_33359)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43837;
    int32_t local_tid_43838;
    int64_t group_sizze_43841;
    int32_t wave_sizze_43840;
    int32_t group_tid_43839;
    
    global_tid_43837 = get_global_id(0);
    local_tid_43838 = get_local_id(0);
    group_sizze_43841 = get_local_size(0);
    wave_sizze_43840 = LOCKSTEP_WIDTH;
    group_tid_43839 = get_group_id(0);
    
    int32_t phys_tid_33356;
    
    phys_tid_33356 = global_tid_43837;
    
    int64_t gtid_33354;
    
    gtid_33354 = squot64(sext_i32_i64(group_tid_43839) *
                         segmap_group_sizze_33429 +
                         sext_i32_i64(local_tid_43838), N_28022);
    
    int64_t gtid_33355;
    
    gtid_33355 = sext_i32_i64(group_tid_43839) * segmap_group_sizze_33429 +
        sext_i32_i64(local_tid_43838) - squot64(sext_i32_i64(group_tid_43839) *
                                                segmap_group_sizze_33429 +
                                                sext_i32_i64(local_tid_43838),
                                                N_28022) * N_28022;
    if (slt64(gtid_33354, i32_res_28038) && slt64(gtid_33355, N_28022)) {
        int32_t index_primexp_40529 = sext_i64_i32(gtid_33354);
        bool index_primexp_40526 = index_primexp_40529 == 0;
        float defunc_0_f_res_33435;
        
        if (index_primexp_40526) {
            defunc_0_f_res_33435 = 1.0F;
        } else {
            int32_t x_33434 = ((__global
                                int32_t *) mappingindices_mem_42537)[gtid_33355];
            bool cond_33436 = index_primexp_40529 == 1;
            float defunc_0_f_res_f_res_33437;
            
            if (cond_33436) {
                float i32_res_33438 = sitofp_i32_f32(x_33434);
                
                defunc_0_f_res_f_res_33437 = i32_res_33438;
            } else {
                int32_t r32_arg_33439 = sdiv32(index_primexp_40529, 2);
                float i32_res_33440 = sitofp_i32_f32(r32_arg_33439);
                float i32_res_33441 = sitofp_i32_f32(x_33434);
                float x_33442 = 6.2831855F * i32_res_33440;
                float x_33443 = i32_res_33441 * x_33442;
                float angle_33444 = x_33443 / freq_28027;
                int32_t x_33445 = smod32(index_primexp_40529, 2);
                bool cond_33446 = x_33445 == 0;
                float defunc_0_f_res_f_res_f_res_33447;
                
                if (cond_33446) {
                    float sin_res_33448;
                    
                    sin_res_33448 = futrts_sin32(angle_33444);
                    defunc_0_f_res_f_res_f_res_33447 = sin_res_33448;
                } else {
                    float cos_res_33449;
                    
                    cos_res_33449 = futrts_cos32(angle_33444);
                    defunc_0_f_res_f_res_f_res_33447 = cos_res_33449;
                }
                defunc_0_f_res_f_res_33437 = defunc_0_f_res_f_res_f_res_33447;
            }
            defunc_0_f_res_33435 = defunc_0_f_res_f_res_33437;
        }
        ((__global float *) mem_42542)[gtid_33354 * N_28022 + gtid_33355] =
            defunc_0_f_res_33435;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33429
}
__kernel void mainMagnitudezisegmap_33534(__global int *global_failure,
                                          int64_t N_28022, float freq_28027,
                                          int64_t i32_res_28038, __global
                                          unsigned char *mappingindices_mem_42537,
                                          __global unsigned char *mem_42546)
{
    #define segmap_group_sizze_33603 (mainMagnitudezisegmap_group_sizze_33537)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43842;
    int32_t local_tid_43843;
    int64_t group_sizze_43846;
    int32_t wave_sizze_43845;
    int32_t group_tid_43844;
    
    global_tid_43842 = get_global_id(0);
    local_tid_43843 = get_local_id(0);
    group_sizze_43846 = get_local_size(0);
    wave_sizze_43845 = LOCKSTEP_WIDTH;
    group_tid_43844 = get_group_id(0);
    
    int32_t phys_tid_33534;
    
    phys_tid_33534 = global_tid_43842;
    
    int64_t gtid_33532;
    
    gtid_33532 = squot64(sext_i32_i64(group_tid_43844) *
                         segmap_group_sizze_33603 +
                         sext_i32_i64(local_tid_43843), N_28022);
    
    int64_t gtid_33533;
    
    gtid_33533 = sext_i32_i64(group_tid_43844) * segmap_group_sizze_33603 +
        sext_i32_i64(local_tid_43843) - squot64(sext_i32_i64(group_tid_43844) *
                                                segmap_group_sizze_33603 +
                                                sext_i32_i64(local_tid_43843),
                                                N_28022) * N_28022;
    if (slt64(gtid_33532, i32_res_28038) && slt64(gtid_33533, N_28022)) {
        int32_t index_primexp_40538 = sext_i64_i32(gtid_33532);
        bool index_primexp_40535 = index_primexp_40538 == 0;
        float defunc_0_f_res_33609;
        
        if (index_primexp_40535) {
            defunc_0_f_res_33609 = 1.0F;
        } else {
            int32_t x_33608 = ((__global
                                int32_t *) mappingindices_mem_42537)[gtid_33533];
            int32_t i_33610 = add32(1, index_primexp_40538);
            int32_t r32_arg_33611 = sdiv32(i_33610, 2);
            float i32_res_33612 = sitofp_i32_f32(r32_arg_33611);
            float i32_res_33613 = sitofp_i32_f32(x_33608);
            float x_33614 = 6.2831855F * i32_res_33612;
            float x_33615 = i32_res_33613 * x_33614;
            float angle_33616 = x_33615 / freq_28027;
            int32_t x_33617 = smod32(i_33610, 2);
            bool cond_33618 = x_33617 == 0;
            float defunc_0_f_res_f_res_33619;
            
            if (cond_33618) {
                float sin_res_33620;
                
                sin_res_33620 = futrts_sin32(angle_33616);
                defunc_0_f_res_f_res_33619 = sin_res_33620;
            } else {
                float cos_res_33621;
                
                cos_res_33621 = futrts_cos32(angle_33616);
                defunc_0_f_res_f_res_33619 = cos_res_33621;
            }
            defunc_0_f_res_33609 = defunc_0_f_res_f_res_33619;
        }
        ((__global float *) mem_42546)[gtid_33532 * N_28022 + gtid_33533] =
            defunc_0_f_res_33609;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33603
}
__kernel void mainMagnitudezisegmap_33662(__global int *global_failure,
                                          int64_t N_28022,
                                          int64_t i32_res_28038,
                                          float i32_res_28103, __global
                                          unsigned char *mem_42550, __global
                                          unsigned char *mem_42554)
{
    #define segmap_group_sizze_33686 (mainMagnitudezisegmap_group_sizze_33665)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43847;
    int32_t local_tid_43848;
    int64_t group_sizze_43851;
    int32_t wave_sizze_43850;
    int32_t group_tid_43849;
    
    global_tid_43847 = get_global_id(0);
    local_tid_43848 = get_local_id(0);
    group_sizze_43851 = get_local_size(0);
    wave_sizze_43850 = LOCKSTEP_WIDTH;
    group_tid_43849 = get_group_id(0);
    
    int32_t phys_tid_33662;
    
    phys_tid_33662 = global_tid_43847;
    
    int64_t gtid_33660;
    
    gtid_33660 = squot64(sext_i32_i64(group_tid_43849) *
                         segmap_group_sizze_33686 +
                         sext_i32_i64(local_tid_43848), i32_res_28038);
    
    int64_t gtid_33661;
    
    gtid_33661 = sext_i32_i64(group_tid_43849) * segmap_group_sizze_33686 +
        sext_i32_i64(local_tid_43848) - squot64(sext_i32_i64(group_tid_43849) *
                                                segmap_group_sizze_33686 +
                                                sext_i32_i64(local_tid_43848),
                                                i32_res_28038) * i32_res_28038;
    if (slt64(gtid_33660, N_28022) && slt64(gtid_33661, i32_res_28038)) {
        float x_33689 = ((__global float *) mem_42550)[gtid_33660 *
                                                       i32_res_28038 +
                                                       gtid_33661];
        float defunc_0_f_res_33690 = i32_res_28103 + x_33689;
        
        ((__global float *) mem_42554)[gtid_33660 * i32_res_28038 +
                                       gtid_33661] = defunc_0_f_res_33690;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33686
}
__kernel void mainMagnitudezisegmap_33695(__global int *global_failure,
                                          int64_t N_28022, int64_t m_28023,
                                          int32_t n_28026, int32_t k2p2zq_28036,
                                          int64_t i32_res_28038,
                                          int64_t num_groups_33720, __global
                                          unsigned char *binop_p_mem_42547,
                                          __global unsigned char *mem_42554,
                                          __global unsigned char *mem_42557,
                                          __global unsigned char *mem_42561,
                                          __global unsigned char *mem_42603)
{
    #define segmap_group_sizze_33719 (mainMagnitudezisegmap_group_sizze_33697)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43855;
    int32_t local_tid_43856;
    int64_t group_sizze_43859;
    int32_t wave_sizze_43858;
    int32_t group_tid_43857;
    
    global_tid_43855 = get_global_id(0);
    local_tid_43856 = get_local_id(0);
    group_sizze_43859 = get_local_size(0);
    wave_sizze_43858 = LOCKSTEP_WIDTH;
    group_tid_43857 = get_group_id(0);
    
    int32_t phys_tid_33695;
    
    phys_tid_33695 = global_tid_43855;
    
    int32_t phys_group_id_43860;
    
    phys_group_id_43860 = get_group_id(0);
    for (int32_t i_43861 = 0; i_43861 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023, segmap_group_sizze_33719)) -
                   phys_group_id_43860, sext_i64_i32(num_groups_33720));
         i_43861++) {
        int32_t virt_group_id_43862 = phys_group_id_43860 + i_43861 *
                sext_i64_i32(num_groups_33720);
        int64_t gtid_33694 = sext_i32_i64(virt_group_id_43862) *
                segmap_group_sizze_33719 + sext_i32_i64(local_tid_43856);
        
        if (slt64(gtid_33694, m_28023)) {
            for (int32_t i_42517 = 0; i_42517 < k2p2zq_28036; i_42517++) {
                int64_t i_42446 = sext_i32_i64(i_42517);
                
                for (int32_t i_42516 = 0; i_42516 < k2p2zq_28036; i_42516++) {
                    int64_t i_42450 = sext_i32_i64(i_42516);
                    float defunc_2_reduce_res_33728;
                    float redout_42452 = 0.0F;
                    
                    for (int32_t i_42515 = 0; i_42515 < n_28026; i_42515++) {
                        int64_t i_42453 = sext_i32_i64(i_42515);
                        float x_33732 = ((__global float *) mem_42557)[i_42453 *
                                                                       m_28023 +
                                                                       gtid_33694];
                        float x_33733 = ((__global
                                          float *) binop_p_mem_42547)[i_42446 *
                                                                      N_28022 +
                                                                      i_42453];
                        float x_33734 = ((__global float *) mem_42554)[i_42453 *
                                                                       i32_res_28038 +
                                                                       i_42450];
                        float x_33735 = x_33733 * x_33734;
                        bool isnan_res_33736;
                        
                        isnan_res_33736 = futrts_isnan32(x_33732);
                        
                        float y_33737;
                        
                        if (isnan_res_33736) {
                            y_33737 = 0.0F;
                        } else {
                            y_33737 = 1.0F;
                        }
                        
                        float defunc_2_f_res_33738 = x_33735 * y_33737;
                        float defunc_1_op_res_33731 = defunc_2_f_res_33738 +
                              redout_42452;
                        float redout_tmp_43865 = defunc_1_op_res_33731;
                        
                        redout_42452 = redout_tmp_43865;
                    }
                    defunc_2_reduce_res_33728 = redout_42452;
                    ((__global float *) mem_42561)[phys_tid_33695 + (i_42446 *
                                                                     (num_groups_33720 *
                                                                      segmap_group_sizze_33719 *
                                                                      i32_res_28038) +
                                                                     i_42450 *
                                                                     (num_groups_33720 *
                                                                      segmap_group_sizze_33719))] =
                        defunc_2_reduce_res_33728;
                }
            }
            for (int64_t i_43866 = 0; i_43866 < i32_res_28038; i_43866++) {
                for (int64_t i_43867 = 0; i_43867 < i32_res_28038; i_43867++) {
                    ((__global float *) mem_42603)[i_43866 * (m_28023 *
                                                              i32_res_28038) +
                                                   i_43867 * m_28023 +
                                                   gtid_33694] = ((__global
                                                                   float *) mem_42561)[phys_tid_33695 +
                                                                                       (i_43866 *
                                                                                        (num_groups_33720 *
                                                                                         segmap_group_sizze_33719 *
                                                                                         i32_res_28038) +
                                                                                        i_43867 *
                                                                                        (num_groups_33720 *
                                                                                         segmap_group_sizze_33719))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33719
}
__kernel void mainMagnitudezisegmap_33741(__global int *global_failure,
                                          int64_t N_28022, int64_t m_28023,
                                          int32_t n_28026, int32_t k2p2zq_28036,
                                          int64_t i32_res_28038,
                                          int64_t num_groups_33897, __global
                                          unsigned char *images_mem_42538,
                                          __global unsigned char *mem_42550,
                                          __global unsigned char *mem_42554,
                                          __global unsigned char *mem_42606,
                                          __global unsigned char *mem_42622)
{
    #define segmap_group_sizze_33896 (mainMagnitudezisegmap_group_sizze_33744)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43868;
    int32_t local_tid_43869;
    int64_t group_sizze_43872;
    int32_t wave_sizze_43871;
    int32_t group_tid_43870;
    
    global_tid_43868 = get_global_id(0);
    local_tid_43869 = get_local_id(0);
    group_sizze_43872 = get_local_size(0);
    wave_sizze_43871 = LOCKSTEP_WIDTH;
    group_tid_43870 = get_group_id(0);
    
    int32_t phys_tid_33741;
    
    phys_tid_33741 = global_tid_43868;
    
    int32_t phys_group_id_43873;
    
    phys_group_id_43873 = get_group_id(0);
    for (int32_t i_43874 = 0; i_43874 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023 * i32_res_28038,
                                          segmap_group_sizze_33896)) -
                   phys_group_id_43873, sext_i64_i32(num_groups_33897));
         i_43874++) {
        int32_t virt_group_id_43875 = phys_group_id_43873 + i_43874 *
                sext_i64_i32(num_groups_33897);
        int64_t gtid_33739 = squot64(sext_i32_i64(virt_group_id_43875) *
                                     segmap_group_sizze_33896 +
                                     sext_i32_i64(local_tid_43869),
                                     i32_res_28038);
        int64_t gtid_33740 = sext_i32_i64(virt_group_id_43875) *
                segmap_group_sizze_33896 + sext_i32_i64(local_tid_43869) -
                squot64(sext_i32_i64(virt_group_id_43875) *
                        segmap_group_sizze_33896 +
                        sext_i32_i64(local_tid_43869), i32_res_28038) *
                i32_res_28038;
        
        if (slt64(gtid_33739, m_28023) && slt64(gtid_33740, i32_res_28038)) {
            for (int32_t i_42519 = 0; i_42519 < k2p2zq_28036; i_42519++) {
                int64_t i_42456 = sext_i32_i64(i_42519);
                float defunc_2_reduce_res_33908;
                float redout_42458 = 0.0F;
                
                for (int32_t i_42518 = 0; i_42518 < n_28026; i_42518++) {
                    int64_t i_42459 = sext_i32_i64(i_42518);
                    float x_33912 = ((__global
                                      float *) images_mem_42538)[gtid_33739 *
                                                                 N_28022 +
                                                                 i_42459];
                    float x_33913 = ((__global float *) mem_42550)[i_42459 *
                                                                   i32_res_28038 +
                                                                   gtid_33740];
                    float x_33914 = ((__global float *) mem_42554)[i_42459 *
                                                                   i32_res_28038 +
                                                                   i_42456];
                    float x_33915 = x_33913 * x_33914;
                    bool isnan_res_33916;
                    
                    isnan_res_33916 = futrts_isnan32(x_33912);
                    
                    float y_33917;
                    
                    if (isnan_res_33916) {
                        y_33917 = 0.0F;
                    } else {
                        y_33917 = 1.0F;
                    }
                    
                    float defunc_2_f_res_33918 = x_33915 * y_33917;
                    float defunc_1_op_res_33911 = defunc_2_f_res_33918 +
                          redout_42458;
                    float redout_tmp_43877 = defunc_1_op_res_33911;
                    
                    redout_42458 = redout_tmp_43877;
                }
                defunc_2_reduce_res_33908 = redout_42458;
                ((__global float *) mem_42606)[phys_tid_33741 + i_42456 *
                                               (num_groups_33897 *
                                                segmap_group_sizze_33896)] =
                    defunc_2_reduce_res_33908;
            }
            for (int64_t i_43878 = 0; i_43878 < i32_res_28038; i_43878++) {
                ((__global float *) mem_42622)[i_43878 * (i32_res_28038 *
                                                          m_28023) +
                                               gtid_33739 * i32_res_28038 +
                                               gtid_33740] = ((__global
                                                               float *) mem_42606)[phys_tid_33741 +
                                                                                   i_43878 *
                                                                                   (num_groups_33897 *
                                                                                    segmap_group_sizze_33896)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33896
}
__kernel void mainMagnitudezisegmap_34225(__global int *global_failure,
                                          int64_t m_28023,
                                          int64_t i32_res_28038,
                                          int64_t i32_res_28171,
                                          int64_t i32_res_28186,
                                          int64_t x_28187, int64_t j_m_i_28190,
                                          int64_t gauss_jordan_res_r_ixfn_42774,
                                          int64_t gauss_jordan_res_r_ixfn_42775,
                                          int64_t gauss_jordan_res_r_ixfn_42777,
                                          __global
                                          unsigned char *gauss_jordan_res_r_mem_42779,
                                          __global unsigned char *mem_42784)
{
    #define segmap_group_sizze_34776 (mainMagnitudezisegmap_group_sizze_34229)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44035;
    int32_t local_tid_44036;
    int64_t group_sizze_44039;
    int32_t wave_sizze_44038;
    int32_t group_tid_44037;
    
    global_tid_44035 = get_global_id(0);
    local_tid_44036 = get_local_id(0);
    group_sizze_44039 = get_local_size(0);
    wave_sizze_44038 = LOCKSTEP_WIDTH;
    group_tid_44037 = get_group_id(0);
    
    int32_t phys_tid_34225;
    
    phys_tid_34225 = global_tid_44035;
    
    int64_t gtid_34222;
    
    gtid_34222 = squot64(sext_i32_i64(group_tid_44037) *
                         segmap_group_sizze_34776 +
                         sext_i32_i64(local_tid_44036), i32_res_28038 *
                         j_m_i_28190);
    
    int64_t gtid_slice_34220;
    
    gtid_slice_34220 = squot64(sext_i32_i64(group_tid_44037) *
                               segmap_group_sizze_34776 +
                               sext_i32_i64(local_tid_44036) -
                               squot64(sext_i32_i64(group_tid_44037) *
                                       segmap_group_sizze_34776 +
                                       sext_i32_i64(local_tid_44036),
                                       i32_res_28038 * j_m_i_28190) *
                               (i32_res_28038 * j_m_i_28190), j_m_i_28190);
    
    int64_t gtid_slice_34221;
    
    gtid_slice_34221 = sext_i32_i64(group_tid_44037) *
        segmap_group_sizze_34776 + sext_i32_i64(local_tid_44036) -
        squot64(sext_i32_i64(group_tid_44037) * segmap_group_sizze_34776 +
                sext_i32_i64(local_tid_44036), i32_res_28038 * j_m_i_28190) *
        (i32_res_28038 * j_m_i_28190) - squot64(sext_i32_i64(group_tid_44037) *
                                                segmap_group_sizze_34776 +
                                                sext_i32_i64(local_tid_44036) -
                                                squot64(sext_i32_i64(group_tid_44037) *
                                                        segmap_group_sizze_34776 +
                                                        sext_i32_i64(local_tid_44036),
                                                        i32_res_28038 *
                                                        j_m_i_28190) *
                                                (i32_res_28038 * j_m_i_28190),
                                                j_m_i_28190) * j_m_i_28190;
    if ((slt64(gtid_34222, m_28023) && slt64(gtid_slice_34220,
                                             i32_res_28038)) &&
        slt64(gtid_slice_34221, j_m_i_28190)) {
        int64_t slice_34780 = i32_res_28038 + gtid_slice_34221;
        int64_t binop_x_40601 = x_28187 * gtid_34222;
        int64_t binop_y_40602 = i32_res_28186 * gtid_slice_34220;
        int64_t binop_x_40603 = binop_x_40601 + binop_y_40602;
        int64_t binop_x_40604 = slice_34780 + binop_x_40603;
        int64_t new_index_40605 = squot64(binop_x_40604, i32_res_28171);
        int64_t binop_y_40617 = i32_res_28171 * new_index_40605;
        int64_t new_index_40618 = binop_x_40604 - binop_y_40617;
        float v_34781 = ((__global
                          float *) gauss_jordan_res_r_mem_42779)[gauss_jordan_res_r_ixfn_42774 +
                                                                 (new_index_40605 *
                                                                  gauss_jordan_res_r_ixfn_42775 +
                                                                  new_index_40618 *
                                                                  gauss_jordan_res_r_ixfn_42777)];
        
        ((__global float *) mem_42784)[gtid_34222 * (j_m_i_28190 *
                                                     i32_res_28038) +
                                       gtid_slice_34220 * j_m_i_28190 +
                                       gtid_slice_34221] = v_34781;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34776
}
__kernel void mainMagnitudezisegmap_34391(__global int *global_failure,
                                          int64_t m_28023,
                                          int64_t i32_res_28171,
                                          int64_t ctx_param_ext_42737,
                                          int64_t ctx_param_ext_42738,
                                          int64_t ctx_param_ext_42740, __global
                                          unsigned char *mem_param_42742,
                                          __global unsigned char *mem_42762)
{
    #define segmap_group_sizze_34764 (mainMagnitudezisegmap_group_sizze_34394)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44029;
    int32_t local_tid_44030;
    int64_t group_sizze_44033;
    int32_t wave_sizze_44032;
    int32_t group_tid_44031;
    
    global_tid_44029 = get_global_id(0);
    local_tid_44030 = get_local_id(0);
    group_sizze_44033 = get_local_size(0);
    wave_sizze_44032 = LOCKSTEP_WIDTH;
    group_tid_44031 = get_group_id(0);
    
    int32_t phys_tid_34391;
    
    phys_tid_34391 = global_tid_44029;
    
    int64_t gtid_34389;
    
    gtid_34389 = squot64(sext_i32_i64(group_tid_44031) *
                         segmap_group_sizze_34764 +
                         sext_i32_i64(local_tid_44030), i32_res_28171);
    
    int64_t gtid_34390;
    
    gtid_34390 = sext_i32_i64(group_tid_44031) * segmap_group_sizze_34764 +
        sext_i32_i64(local_tid_44030) - squot64(sext_i32_i64(group_tid_44031) *
                                                segmap_group_sizze_34764 +
                                                sext_i32_i64(local_tid_44030),
                                                i32_res_28171) * i32_res_28171;
    if (slt64(gtid_34389, m_28023) && slt64(gtid_34390, i32_res_28171)) {
        float write_value_34770 = ((__global float *) mem_42762)[gtid_34389 *
                                                                 i32_res_28171 +
                                                                 gtid_34390];
        
        if ((sle64((int64_t) 0, gtid_34389) && slt64(gtid_34389, m_28023)) &&
            (sle64((int64_t) 0, gtid_34390) && slt64(gtid_34390,
                                                     i32_res_28171))) {
            ((__global float *) mem_param_42742)[ctx_param_ext_42737 +
                                                 (gtid_34389 *
                                                  ctx_param_ext_42738 +
                                                  gtid_34390 *
                                                  ctx_param_ext_42740)] =
                write_value_34770;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34764
}
__kernel void mainMagnitudezisegmap_34445(__global int *global_failure,
                                          int64_t m_28023, int32_t k2p2zq_28036,
                                          int32_t m_28169,
                                          int64_t i32_res_28171,
                                          int32_t i_34667,
                                          int64_t i32_res_34669,
                                          int64_t ctx_param_ext_42737,
                                          int64_t ctx_param_ext_42738,
                                          int64_t ctx_param_ext_42740, __global
                                          unsigned char *mem_param_42742,
                                          __global unsigned char *mem_42758,
                                          __global unsigned char *mem_42762)
{
    #define segmap_group_sizze_34730 (mainMagnitudezisegmap_group_sizze_34448)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44024;
    int32_t local_tid_44025;
    int64_t group_sizze_44028;
    int32_t wave_sizze_44027;
    int32_t group_tid_44026;
    
    global_tid_44024 = get_global_id(0);
    local_tid_44025 = get_local_id(0);
    group_sizze_44028 = get_local_size(0);
    wave_sizze_44027 = LOCKSTEP_WIDTH;
    group_tid_44026 = get_group_id(0);
    
    int32_t phys_tid_34445;
    
    phys_tid_34445 = global_tid_44024;
    
    int64_t gtid_34443;
    
    gtid_34443 = squot64(sext_i32_i64(group_tid_44026) *
                         segmap_group_sizze_34730 +
                         sext_i32_i64(local_tid_44025), i32_res_28171);
    
    int64_t gtid_34444;
    
    gtid_34444 = sext_i32_i64(group_tid_44026) * segmap_group_sizze_34730 +
        sext_i32_i64(local_tid_44025) - squot64(sext_i32_i64(group_tid_44026) *
                                                segmap_group_sizze_34730 +
                                                sext_i32_i64(local_tid_44025),
                                                i32_res_28171) * i32_res_28171;
    if (slt64(gtid_34443, m_28023) && slt64(gtid_34444, i32_res_28171)) {
        bool cond_34735 = ((__global bool *) mem_42758)[gtid_34443];
        int32_t defunc_0_f_res_34737 = sext_i64_i32(gtid_34444);
        int32_t defunc_0_f_res_34738 = sdiv32(defunc_0_f_res_34737, m_28169);
        int32_t defunc_0_f_res_34739 = smod32(defunc_0_f_res_34737, m_28169);
        float defunc_0_f_res_34740;
        
        if (cond_34735) {
            int32_t x_34741 = mul32(m_28169, defunc_0_f_res_34738);
            int32_t i32_arg_34742 = add32(defunc_0_f_res_34739, x_34741);
            int64_t i32_res_34743 = sext_i32_i64(i32_arg_34742);
            float defunc_0_f_res_t_res_34744 = ((__global
                                                 float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                           (gtid_34443 *
                                                                            ctx_param_ext_42738 +
                                                                            i32_res_34743 *
                                                                            ctx_param_ext_42740)];
            
            defunc_0_f_res_34740 = defunc_0_f_res_t_res_34744;
        } else {
            float v1_34734 = ((__global
                               float *) mem_param_42742)[ctx_param_ext_42737 +
                                                         (gtid_34443 *
                                                          ctx_param_ext_42738 +
                                                          i32_res_34669 *
                                                          ctx_param_ext_42740)];
            int64_t i32_res_34745 = sext_i32_i64(defunc_0_f_res_34739);
            float x_34746 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_34443 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_34745 *
                                                         ctx_param_ext_42740)];
            float x_34747 = x_34746 / v1_34734;
            int32_t y_34748 = sub32(k2p2zq_28036, 1);
            bool cond_34749 = slt32(defunc_0_f_res_34738, y_34748);
            float defunc_0_f_res_f_res_34750;
            
            if (cond_34749) {
                int32_t x_34751 = add32(1, defunc_0_f_res_34738);
                int32_t x_34752 = mul32(m_28169, x_34751);
                int32_t i32_arg_34753 = add32(defunc_0_f_res_34739, x_34752);
                int64_t i32_res_34754 = sext_i32_i64(i32_arg_34753);
                float x_34755 = ((__global
                                  float *) mem_param_42742)[ctx_param_ext_42737 +
                                                            (gtid_34443 *
                                                             ctx_param_ext_42738 +
                                                             i32_res_34754 *
                                                             ctx_param_ext_42740)];
                int32_t i32_arg_34756 = add32(i_34667, x_34752);
                int64_t i32_res_34757 = sext_i32_i64(i32_arg_34756);
                float x_34758 = ((__global
                                  float *) mem_param_42742)[ctx_param_ext_42737 +
                                                            (gtid_34443 *
                                                             ctx_param_ext_42738 +
                                                             i32_res_34757 *
                                                             ctx_param_ext_42740)];
                float y_34759 = x_34747 * x_34758;
                float defunc_0_f_res_f_res_t_res_34760 = x_34755 - y_34759;
                
                defunc_0_f_res_f_res_34750 = defunc_0_f_res_f_res_t_res_34760;
            } else {
                defunc_0_f_res_f_res_34750 = x_34747;
            }
            defunc_0_f_res_34740 = defunc_0_f_res_f_res_34750;
        }
        ((__global float *) mem_42762)[gtid_34443 * i32_res_28171 +
                                       gtid_34444] = defunc_0_f_res_34740;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34730
}
__kernel void mainMagnitudezisegmap_34513(__global int *global_failure,
                                          int64_t m_28023,
                                          int64_t i32_res_34669,
                                          int64_t ctx_param_ext_42737,
                                          int64_t ctx_param_ext_42738,
                                          int64_t ctx_param_ext_42740, __global
                                          unsigned char *mem_param_42742,
                                          __global unsigned char *mem_42758)
{
    #define segmap_group_sizze_34714 (mainMagnitudezisegmap_group_sizze_34515)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44019;
    int32_t local_tid_44020;
    int64_t group_sizze_44023;
    int32_t wave_sizze_44022;
    int32_t group_tid_44021;
    
    global_tid_44019 = get_global_id(0);
    local_tid_44020 = get_local_id(0);
    group_sizze_44023 = get_local_size(0);
    wave_sizze_44022 = LOCKSTEP_WIDTH;
    group_tid_44021 = get_group_id(0);
    
    int32_t phys_tid_34513;
    
    phys_tid_34513 = global_tid_44019;
    
    int64_t gtid_34512;
    
    gtid_34512 = sext_i32_i64(group_tid_44021) * segmap_group_sizze_34714 +
        sext_i32_i64(local_tid_44020);
    if (slt64(gtid_34512, m_28023)) {
        float v1_34719 = ((__global
                           float *) mem_param_42742)[ctx_param_ext_42737 +
                                                     (gtid_34512 *
                                                      ctx_param_ext_42738 +
                                                      i32_res_34669 *
                                                      ctx_param_ext_42740)];
        bool cond_34720 = v1_34719 == 0.0F;
        
        ((__global bool *) mem_42758)[gtid_34512] = cond_34720;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34714
}
__kernel void mainMagnitudezisegmap_34606(__global int *global_failure,
                                          int64_t m_28023, int32_t k2p2zq_28036,
                                          int64_t i32_res_28038,
                                          int32_t m_28169,
                                          int64_t i32_res_28171, __global
                                          unsigned char *defunc_3_map_res_mem_42706,
                                          __global unsigned char *mem_42734)
{
    #define segmap_group_sizze_34650 (mainMagnitudezisegmap_group_sizze_34609)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43986;
    int32_t local_tid_43987;
    int64_t group_sizze_43990;
    int32_t wave_sizze_43989;
    int32_t group_tid_43988;
    
    global_tid_43986 = get_global_id(0);
    local_tid_43987 = get_local_id(0);
    group_sizze_43990 = get_local_size(0);
    wave_sizze_43989 = LOCKSTEP_WIDTH;
    group_tid_43988 = get_group_id(0);
    
    int32_t phys_tid_34606;
    
    phys_tid_34606 = global_tid_43986;
    
    int64_t gtid_34604;
    
    gtid_34604 = squot64(sext_i32_i64(group_tid_43988) *
                         segmap_group_sizze_34650 +
                         sext_i32_i64(local_tid_43987), i32_res_28171);
    
    int64_t gtid_34605;
    
    gtid_34605 = sext_i32_i64(group_tid_43988) * segmap_group_sizze_34650 +
        sext_i32_i64(local_tid_43987) - squot64(sext_i32_i64(group_tid_43988) *
                                                segmap_group_sizze_34650 +
                                                sext_i32_i64(local_tid_43987),
                                                i32_res_28171) * i32_res_28171;
    if (slt64(gtid_34604, m_28023) && slt64(gtid_34605, i32_res_28171)) {
        int32_t index_primexp_40550 = sext_i64_i32(gtid_34605);
        int32_t defunc_0_f_res_34655 = sdiv32(index_primexp_40550, m_28169);
        int32_t defunc_0_f_res_34656 = smod32(index_primexp_40550, m_28169);
        bool cond_34657 = slt32(defunc_0_f_res_34656, k2p2zq_28036);
        float defunc_0_f_res_34658;
        
        if (cond_34657) {
            int64_t i_34659 = sext_i32_i64(defunc_0_f_res_34655);
            int64_t j_34660 = sext_i32_i64(defunc_0_f_res_34656);
            float defunc_0_f_res_t_res_34661 = ((__global
                                                 float *) defunc_3_map_res_mem_42706)[gtid_34604 *
                                                                                      (i32_res_28038 *
                                                                                       i32_res_28038) +
                                                                                      i_34659 *
                                                                                      i32_res_28038 +
                                                                                      j_34660];
            
            defunc_0_f_res_34658 = defunc_0_f_res_t_res_34661;
        } else {
            int32_t y_34662 = add32(k2p2zq_28036, defunc_0_f_res_34655);
            bool cond_34663 = defunc_0_f_res_34656 == y_34662;
            float defunc_0_f_res_f_res_34664;
            
            if (cond_34663) {
                defunc_0_f_res_f_res_34664 = 1.0F;
            } else {
                defunc_0_f_res_f_res_34664 = 0.0F;
            }
            defunc_0_f_res_34658 = defunc_0_f_res_f_res_34664;
        }
        ((__global float *) mem_42734)[gtid_34604 * i32_res_28171 +
                                       gtid_34605] = defunc_0_f_res_34658;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34650
}
__kernel void mainMagnitudezisegmap_34787(__global int *global_failure,
                                          int64_t N_28022, int64_t m_28023,
                                          int32_t n_28026, int32_t k2p2zq_28036,
                                          int64_t i32_res_28038,
                                          int64_t num_groups_34808, __global
                                          unsigned char *binop_p_mem_42547,
                                          __global unsigned char *mem_42789,
                                          __global unsigned char *mem_42792,
                                          __global unsigned char *mem_42807)
{
    #define segmap_group_sizze_34807 (mainMagnitudezisegmap_group_sizze_34789)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44043;
    int32_t local_tid_44044;
    int64_t group_sizze_44047;
    int32_t wave_sizze_44046;
    int32_t group_tid_44045;
    
    global_tid_44043 = get_global_id(0);
    local_tid_44044 = get_local_id(0);
    group_sizze_44047 = get_local_size(0);
    wave_sizze_44046 = LOCKSTEP_WIDTH;
    group_tid_44045 = get_group_id(0);
    
    int32_t phys_tid_34787;
    
    phys_tid_34787 = global_tid_44043;
    
    int32_t phys_group_id_44048;
    
    phys_group_id_44048 = get_group_id(0);
    for (int32_t i_44049 = 0; i_44049 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023, segmap_group_sizze_34807)) -
                   phys_group_id_44048, sext_i64_i32(num_groups_34808));
         i_44049++) {
        int32_t virt_group_id_44050 = phys_group_id_44048 + i_44049 *
                sext_i64_i32(num_groups_34808);
        int64_t gtid_34786 = sext_i32_i64(virt_group_id_44050) *
                segmap_group_sizze_34807 + sext_i32_i64(local_tid_44044);
        
        if (slt64(gtid_34786, m_28023)) {
            for (int32_t i_42521 = 0; i_42521 < k2p2zq_28036; i_42521++) {
                int64_t i_42462 = sext_i32_i64(i_42521);
                float defunc_2_reduce_res_34814;
                float redout_42464 = 0.0F;
                
                for (int32_t i_42520 = 0; i_42520 < n_28026; i_42520++) {
                    int64_t i_42465 = sext_i32_i64(i_42520);
                    float x_34819 = ((__global float *) mem_42789)[i_42465 *
                                                                   m_28023 +
                                                                   gtid_34786];
                    bool isnan_res_34820;
                    
                    isnan_res_34820 = futrts_isnan32(x_34819);
                    
                    float defunc_1_f_res_34821;
                    
                    if (isnan_res_34820) {
                        defunc_1_f_res_34821 = 0.0F;
                    } else {
                        float x_34818 = ((__global
                                          float *) binop_p_mem_42547)[i_42462 *
                                                                      N_28022 +
                                                                      i_42465];
                        float defunc_1_f_res_f_res_34822 = x_34818 * x_34819;
                        
                        defunc_1_f_res_34821 = defunc_1_f_res_f_res_34822;
                    }
                    
                    float defunc_1_op_res_34817 = defunc_1_f_res_34821 +
                          redout_42464;
                    float redout_tmp_44052 = defunc_1_op_res_34817;
                    
                    redout_42464 = redout_tmp_44052;
                }
                defunc_2_reduce_res_34814 = redout_42464;
                ((__global float *) mem_42792)[phys_tid_34787 + i_42462 *
                                               (num_groups_34808 *
                                                segmap_group_sizze_34807)] =
                    defunc_2_reduce_res_34814;
            }
            for (int64_t i_44053 = 0; i_44053 < i32_res_28038; i_44053++) {
                ((__global float *) mem_42807)[i_44053 * m_28023 + gtid_34786] =
                    ((__global float *) mem_42792)[phys_tid_34787 + i_44053 *
                                                   (num_groups_34808 *
                                                    segmap_group_sizze_34807)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34807
}
__kernel void mainMagnitudezisegmap_34928(__global int *global_failure,
                                          int64_t m_28023, int32_t k2p2zq_28036,
                                          int64_t i32_res_28038,
                                          int64_t num_groups_34948, __global
                                          unsigned char *mem_43011, __global
                                          unsigned char *mem_43014, __global
                                          unsigned char *mem_43017, __global
                                          unsigned char *mem_43032)
{
    #define segmap_group_sizze_34947 (mainMagnitudezisegmap_group_sizze_34930)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44175;
    int32_t local_tid_44176;
    int64_t group_sizze_44179;
    int32_t wave_sizze_44178;
    int32_t group_tid_44177;
    
    global_tid_44175 = get_global_id(0);
    local_tid_44176 = get_local_id(0);
    group_sizze_44179 = get_local_size(0);
    wave_sizze_44178 = LOCKSTEP_WIDTH;
    group_tid_44177 = get_group_id(0);
    
    int32_t phys_tid_34928;
    
    phys_tid_34928 = global_tid_44175;
    
    int32_t phys_group_id_44180;
    
    phys_group_id_44180 = get_group_id(0);
    for (int32_t i_44181 = 0; i_44181 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023, segmap_group_sizze_34947)) -
                   phys_group_id_44180, sext_i64_i32(num_groups_34948));
         i_44181++) {
        int32_t virt_group_id_44182 = phys_group_id_44180 + i_44181 *
                sext_i64_i32(num_groups_34948);
        int64_t gtid_34927 = sext_i32_i64(virt_group_id_44182) *
                segmap_group_sizze_34947 + sext_i32_i64(local_tid_44176);
        
        if (slt64(gtid_34927, m_28023)) {
            for (int32_t i_42523 = 0; i_42523 < k2p2zq_28036; i_42523++) {
                int64_t i_42468 = sext_i32_i64(i_42523);
                float defunc_0_f_res_34955;
                float redout_42470 = 0.0F;
                
                for (int32_t i_42522 = 0; i_42522 < k2p2zq_28036; i_42522++) {
                    int64_t i_42471 = sext_i32_i64(i_42522);
                    float x_34959 = ((__global float *) mem_43014)[i_42471 *
                                                                   m_28023 +
                                                                   gtid_34927];
                    float x_34960 = ((__global float *) mem_43011)[i_42468 *
                                                                   (m_28023 *
                                                                    i32_res_28038) +
                                                                   i_42471 *
                                                                   m_28023 +
                                                                   gtid_34927];
                    float defunc_1_f_res_34961 = x_34959 * x_34960;
                    float defunc_1_op_res_34958 = defunc_1_f_res_34961 +
                          redout_42470;
                    float redout_tmp_44184 = defunc_1_op_res_34958;
                    
                    redout_42470 = redout_tmp_44184;
                }
                defunc_0_f_res_34955 = redout_42470;
                ((__global float *) mem_43017)[phys_tid_34928 + i_42468 *
                                               (num_groups_34948 *
                                                segmap_group_sizze_34947)] =
                    defunc_0_f_res_34955;
            }
            for (int64_t i_44185 = 0; i_44185 < i32_res_28038; i_44185++) {
                ((__global float *) mem_43032)[i_44185 * m_28023 + gtid_34927] =
                    ((__global float *) mem_43017)[phys_tid_34928 + i_44185 *
                                                   (num_groups_34948 *
                                                    segmap_group_sizze_34947)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34947
}
__kernel void mainMagnitudezisegmap_35060(__global int *global_failure,
                                          int64_t N_28022, int64_t m_28023,
                                          int32_t k2p2zq_28036,
                                          int64_t i32_res_28038,
                                          int64_t num_groups_35079, __global
                                          unsigned char *mem_42554, __global
                                          unsigned char *mem_43076, __global
                                          unsigned char *mem_43079, __global
                                          unsigned char *mem_43094)
{
    #define segmap_group_sizze_35078 (mainMagnitudezisegmap_group_sizze_35062)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44263;
    int32_t local_tid_44264;
    int64_t group_sizze_44267;
    int32_t wave_sizze_44266;
    int32_t group_tid_44265;
    
    global_tid_44263 = get_global_id(0);
    local_tid_44264 = get_local_id(0);
    group_sizze_44267 = get_local_size(0);
    wave_sizze_44266 = LOCKSTEP_WIDTH;
    group_tid_44265 = get_group_id(0);
    
    int32_t phys_tid_35060;
    
    phys_tid_35060 = global_tid_44263;
    
    int32_t phys_group_id_44268;
    
    phys_group_id_44268 = get_group_id(0);
    for (int32_t i_44269 = 0; i_44269 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023, segmap_group_sizze_35078)) -
                   phys_group_id_44268, sext_i64_i32(num_groups_35079));
         i_44269++) {
        int32_t virt_group_id_44270 = phys_group_id_44268 + i_44269 *
                sext_i64_i32(num_groups_35079);
        int64_t gtid_35059 = sext_i32_i64(virt_group_id_44270) *
                segmap_group_sizze_35078 + sext_i32_i64(local_tid_44264);
        
        if (slt64(gtid_35059, m_28023)) {
            for (int64_t i_42478 = 0; i_42478 < N_28022; i_42478++) {
                float defunc_0_f_res_35085;
                float redout_42480 = 0.0F;
                
                for (int32_t i_42526 = 0; i_42526 < k2p2zq_28036; i_42526++) {
                    int64_t i_42481 = sext_i32_i64(i_42526);
                    float x_35089 = ((__global float *) mem_43076)[i_42481 *
                                                                   m_28023 +
                                                                   gtid_35059];
                    float x_35090 = ((__global float *) mem_42554)[i_42478 *
                                                                   i32_res_28038 +
                                                                   i_42481];
                    float defunc_1_f_res_35091 = x_35089 * x_35090;
                    float defunc_1_op_res_35088 = defunc_1_f_res_35091 +
                          redout_42480;
                    float redout_tmp_44272 = defunc_1_op_res_35088;
                    
                    redout_42480 = redout_tmp_44272;
                }
                defunc_0_f_res_35085 = redout_42480;
                ((__global float *) mem_43079)[phys_tid_35060 + i_42478 *
                                               (num_groups_35079 *
                                                segmap_group_sizze_35078)] =
                    defunc_0_f_res_35085;
            }
            for (int64_t i_44273 = 0; i_44273 < N_28022; i_44273++) {
                ((__global float *) mem_43094)[i_44273 * m_28023 + gtid_35059] =
                    ((__global float *) mem_43079)[phys_tid_35060 + i_44273 *
                                                   (num_groups_35079 *
                                                    segmap_group_sizze_35078)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35078
}
__kernel void mainMagnitudezisegmap_35340(__global int *global_failure,
                                          int64_t N_28022, int64_t m_28023,
                                          __global unsigned char *mem_43320,
                                          __global unsigned char *mem_43323,
                                          __global unsigned char *mem_43329,
                                          __global unsigned char *mem_43332)
{
    #define segmap_group_sizze_35506 (mainMagnitudezisegmap_group_sizze_35343)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44490;
    int32_t local_tid_44491;
    int64_t group_sizze_44494;
    int32_t wave_sizze_44493;
    int32_t group_tid_44492;
    
    global_tid_44490 = get_global_id(0);
    local_tid_44491 = get_local_id(0);
    group_sizze_44494 = get_local_size(0);
    wave_sizze_44493 = LOCKSTEP_WIDTH;
    group_tid_44492 = get_group_id(0);
    
    int32_t phys_tid_35340;
    
    phys_tid_35340 = global_tid_44490;
    
    int64_t gtid_35338;
    
    gtid_35338 = squot64(sext_i32_i64(group_tid_44492) *
                         segmap_group_sizze_35506 +
                         sext_i32_i64(local_tid_44491), N_28022);
    
    int64_t gtid_35339;
    
    gtid_35339 = sext_i32_i64(group_tid_44492) * segmap_group_sizze_35506 +
        sext_i32_i64(local_tid_44491) - squot64(sext_i32_i64(group_tid_44492) *
                                                segmap_group_sizze_35506 +
                                                sext_i32_i64(local_tid_44491),
                                                N_28022) * N_28022;
    if (slt64(gtid_35338, m_28023) && slt64(gtid_35339, N_28022)) {
        float x_35514 = ((__global float *) mem_43323)[gtid_35338 * N_28022 +
                                                       gtid_35339];
        int32_t index_primexp_40566 = sext_i64_i32(gtid_35339);
        bool isnan_res_35517;
        
        isnan_res_35517 = futrts_isnan32(x_35514);
        
        bool defunc_0_p_res_35518 = !isnan_res_35517;
        int64_t defunc_1_f_res_35519;
        
        if (defunc_0_p_res_35518) {
            int64_t x_35515 = ((__global int64_t *) mem_43320)[gtid_35338 *
                                                               N_28022 +
                                                               gtid_35339];
            int64_t defunc_1_f_res_t_res_35520 = sub64(x_35515, (int64_t) 1);
            
            defunc_1_f_res_35519 = defunc_1_f_res_t_res_35520;
        } else {
            defunc_1_f_res_35519 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_35338) && slt64(gtid_35338, m_28023)) &&
            (sle64((int64_t) 0, defunc_1_f_res_35519) &&
             slt64(defunc_1_f_res_35519, N_28022))) {
            ((__global int32_t *) mem_43332)[gtid_35338 * N_28022 +
                                             defunc_1_f_res_35519] =
                index_primexp_40566;
        }
        if ((sle64((int64_t) 0, gtid_35338) && slt64(gtid_35338, m_28023)) &&
            (sle64((int64_t) 0, defunc_1_f_res_35519) &&
             slt64(defunc_1_f_res_35519, N_28022))) {
            ((__global float *) mem_43329)[gtid_35338 * N_28022 +
                                           defunc_1_f_res_35519] = x_35514;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35506
}
__kernel void mainMagnitudezisegmap_35416(__global int *global_failure,
                                          int64_t N_28022, int64_t m_28023,
                                          int64_t i_28298, __global
                                          unsigned char *mem_43320, __global
                                          unsigned char *mem_43326)
{
    #define segmap_group_sizze_35470 (mainMagnitudezisegmap_group_sizze_35418)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44467;
    int32_t local_tid_44468;
    int64_t group_sizze_44471;
    int32_t wave_sizze_44470;
    int32_t group_tid_44469;
    
    global_tid_44467 = get_global_id(0);
    local_tid_44468 = get_local_id(0);
    group_sizze_44471 = get_local_size(0);
    wave_sizze_44470 = LOCKSTEP_WIDTH;
    group_tid_44469 = get_group_id(0);
    
    int32_t phys_tid_35416;
    
    phys_tid_35416 = global_tid_44467;
    
    int64_t gtid_35415;
    
    gtid_35415 = sext_i32_i64(group_tid_44469) * segmap_group_sizze_35470 +
        sext_i32_i64(local_tid_44468);
    if (slt64(gtid_35415, m_28023)) {
        int64_t last_res_35474 = ((__global int64_t *) mem_43320)[gtid_35415 *
                                                                  N_28022 +
                                                                  i_28298];
        int32_t defunc_0_f_res_35475 = sext_i64_i32(last_res_35474);
        
        ((__global int32_t *) mem_43326)[gtid_35415] = defunc_0_f_res_35475;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35470
}
__kernel void mainMagnitudezisegmap_35667(__global int *global_failure,
                                          int64_t m_28023, float hfrac_28028,
                                          int32_t k2p2_28034, __global
                                          unsigned char *mem_43389, __global
                                          unsigned char *mem_43392, __global
                                          unsigned char *mem_43395, __global
                                          unsigned char *mem_43397)
{
    #define segmap_group_sizze_35752 (mainMagnitudezisegmap_group_sizze_35669)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44643;
    int32_t local_tid_44644;
    int64_t group_sizze_44647;
    int32_t wave_sizze_44646;
    int32_t group_tid_44645;
    
    global_tid_44643 = get_global_id(0);
    local_tid_44644 = get_local_id(0);
    group_sizze_44647 = get_local_size(0);
    wave_sizze_44646 = LOCKSTEP_WIDTH;
    group_tid_44645 = get_group_id(0);
    
    int32_t phys_tid_35667;
    
    phys_tid_35667 = global_tid_44643;
    
    int64_t gtid_35666;
    
    gtid_35666 = sext_i32_i64(group_tid_44645) * segmap_group_sizze_35752 +
        sext_i32_i64(local_tid_44644);
    if (slt64(gtid_35666, m_28023)) {
        int32_t defunc_0_f_res_35756 = ((__global
                                         int32_t *) mem_43389)[gtid_35666];
        float defunc_0_f_res_35757 = ((__global float *) mem_43392)[gtid_35666];
        int32_t r32_arg_35758 = sub32(defunc_0_f_res_35756, k2p2_28034);
        float i32_res_35759 = sitofp_i32_f32(r32_arg_35758);
        float sqrt_arg_35760 = defunc_0_f_res_35757 / i32_res_35759;
        float sqrt_res_35761;
        
        sqrt_res_35761 = futrts_sqrt32(sqrt_arg_35760);
        
        float i32_res_35762 = sitofp_i32_f32(defunc_0_f_res_35756);
        float t32_arg_35763 = hfrac_28028 * i32_res_35762;
        int32_t f32_res_35764 = fptosi_f32_i32(t32_arg_35763);
        
        ((__global int32_t *) mem_43395)[gtid_35666] = f32_res_35764;
        ((__global float *) mem_43397)[gtid_35666] = sqrt_res_35761;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35752
}
__kernel void mainMagnitudezisegmap_35938(__global int *global_failure,
                                          float lam_28029,
                                          int64_t iota32_arg_28418,
                                          int32_t x_28423, float i32_res_28431,
                                          __global
                                          unsigned char *mappingindices_mem_42537,
                                          __global unsigned char *mem_43439,
                                          __global unsigned char *mem_43441)
{
    #define segmap_group_sizze_35957 (mainMagnitudezisegmap_group_sizze_35940)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44753;
    int32_t local_tid_44754;
    int64_t group_sizze_44757;
    int32_t wave_sizze_44756;
    int32_t group_tid_44755;
    
    global_tid_44753 = get_global_id(0);
    local_tid_44754 = get_local_id(0);
    group_sizze_44757 = get_local_size(0);
    wave_sizze_44756 = LOCKSTEP_WIDTH;
    group_tid_44755 = get_group_id(0);
    
    int32_t phys_tid_35938;
    
    phys_tid_35938 = global_tid_44753;
    
    int64_t gtid_35937;
    
    gtid_35937 = sext_i32_i64(group_tid_44755) * segmap_group_sizze_35957 +
        sext_i32_i64(local_tid_44754);
    if (slt64(gtid_35937, iota32_arg_28418)) {
        int32_t defunc_0_f_res_35962 = sext_i64_i32(gtid_35937);
        int32_t t_35963 = add32(x_28423, defunc_0_f_res_35962);
        int32_t i_35964 = sub32(t_35963, 1);
        int64_t i_35965 = sext_i32_i64(i_35964);
        int32_t time_35966 = ((__global
                               int32_t *) mappingindices_mem_42537)[i_35965];
        float i32_res_35967 = sitofp_i32_f32(time_35966);
        float logplus_arg_35968 = i32_res_35967 / i32_res_28431;
        bool cond_35969 = 2.7182817F < logplus_arg_35968;
        float logplus_res_35970;
        
        if (cond_35969) {
            float log_res_35971;
            
            log_res_35971 = futrts_log32(logplus_arg_35968);
            logplus_res_35970 = log_res_35971;
        } else {
            logplus_res_35970 = 1.0F;
        }
        
        float sqrt_res_35972;
        
        sqrt_res_35972 = futrts_sqrt32(logplus_res_35970);
        
        float defunc_0_f_res_35973 = lam_28029 * sqrt_res_35972;
        
        ((__global int32_t *) mem_43439)[gtid_35937] = defunc_0_f_res_35962;
        ((__global float *) mem_43441)[gtid_35937] = defunc_0_f_res_35973;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35957
}
__kernel void mainMagnitudezisegmap_36189(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t m_28023,
                                          int64_t iota32_arg_28418,
                                          int64_t distance_28450,
                                          int64_t segmap_usable_groups_36422,
                                          __global
                                          unsigned char *defunc_4_map_res_mem_43334,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43402,
                                          __global unsigned char *mem_43444,
                                          __global unsigned char *mem_43451,
                                          __global unsigned char *mem_43462,
                                          __global unsigned char *mem_43482)
{
    #define segmap_group_sizze_36421 (mainMagnitudezisegmap_group_sizze_36191)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44768;
    int32_t local_tid_44769;
    int64_t group_sizze_44772;
    int32_t wave_sizze_44771;
    int32_t group_tid_44770;
    
    global_tid_44768 = get_global_id(0);
    local_tid_44769 = get_local_id(0);
    group_sizze_44772 = get_local_size(0);
    wave_sizze_44771 = LOCKSTEP_WIDTH;
    group_tid_44770 = get_group_id(0);
    
    int32_t phys_tid_36189;
    
    phys_tid_36189 = global_tid_44768;
    
    int64_t gtid_36188;
    
    gtid_36188 = sext_i32_i64(group_tid_44770) * segmap_group_sizze_36421 +
        sext_i32_i64(local_tid_44769);
    if (slt64(gtid_36188, m_28023)) {
        int32_t x_36424 = ((__global
                            int32_t *) defunc_4_map_res_mem_43334)[gtid_36188];
        int32_t x_36425 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_36188];
        int32_t y_36426 = ((__global int32_t *) mem_43444)[gtid_36188];
        
        for (int64_t i_44773 = 0; i_44773 < iota32_arg_28418; i_44773++) {
            ((__global float *) mem_43462)[phys_tid_36189 + i_44773 *
                                           (segmap_usable_groups_36422 *
                                            segmap_group_sizze_36421)] =
                ((__global float *) mem_43451)[gtid_36188 + i_44773 * m_28023];
        }
        for (int64_t i_36429 = 0; i_36429 < distance_28450; i_36429++) {
            int64_t index_primexp_36431 = add64((int64_t) 1, i_36429);
            bool cond_36432 = slt64((int64_t) 0, index_primexp_36431);
            bool loop_cond_36433;
            
            if (cond_36432) {
                bool x_36434 = sle64((int64_t) 0, index_primexp_36431);
                bool y_36435 = slt64(index_primexp_36431, iota32_arg_28418);
                bool bounds_check_36436 = x_36434 && y_36435;
                bool index_certs_36437;
                
                if (!bounds_check_36436) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = index_primexp_36431;
                            global_failure_args[1] = iota32_arg_28418;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_36438 = ((__global
                                                       float *) mem_43462)[phys_tid_36189 +
                                                                           index_primexp_36431 *
                                                                           (segmap_usable_groups_36422 *
                                                                            segmap_group_sizze_36421)];
                bool y_36439 = slt64(i_36429, iota32_arg_28418);
                bool index_certs_36440;
                
                if (!y_36439) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_36429;
                            global_failure_args[1] = iota32_arg_28418;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_36441 = ((__global
                                                       float *) mem_43462)[phys_tid_36189 +
                                                                           i_36429 *
                                                                           (segmap_usable_groups_36422 *
                                                                            segmap_group_sizze_36421)];
                bool defunc_1_zlze_res_36442 = defunc_1_lifted_gt_arg_36441 <=
                     defunc_2_lifted_gt_arg_36438;
                bool defunc_2_lifted_gt_res_36443 = !defunc_1_zlze_res_36442;
                
                loop_cond_36433 = defunc_2_lifted_gt_res_36443;
            } else {
                loop_cond_36433 = 0;
            }
            
            bool xszq_36444;
            int64_t xszq_36445;
            bool loop_while_36447;
            int64_t j_36448;
            
            loop_while_36447 = loop_cond_36433;
            j_36448 = index_primexp_36431;
            while (loop_while_36447) {
                int64_t loopres_36450 = sub64(j_36448, (int64_t) 1);
                bool x_36451 = sle64((int64_t) 0, j_36448);
                bool y_36452 = slt64(j_36448, iota32_arg_28418);
                bool bounds_check_36453 = x_36451 && y_36452;
                bool index_certs_36454;
                
                if (!bounds_check_36453) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = j_36448;
                            global_failure_args[1] = iota32_arg_28418;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36455 = ((__global
                                         float *) mem_43462)[phys_tid_36189 +
                                                             j_36448 *
                                                             (segmap_usable_groups_36422 *
                                                              segmap_group_sizze_36421)];
                bool x_36456 = sle64((int64_t) 0, loopres_36450);
                bool y_36457 = slt64(loopres_36450, iota32_arg_28418);
                bool bounds_check_36458 = x_36456 && y_36457;
                bool index_certs_36459;
                
                if (!bounds_check_36458) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 16) ==
                            -1) {
                            global_failure_args[0] = loopres_36450;
                            global_failure_args[1] = iota32_arg_28418;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36460 = ((__global
                                         float *) mem_43462)[phys_tid_36189 +
                                                             loopres_36450 *
                                                             (segmap_usable_groups_36422 *
                                                              segmap_group_sizze_36421)];
                
                ((__global float *) mem_43462)[phys_tid_36189 + j_36448 *
                                               (segmap_usable_groups_36422 *
                                                segmap_group_sizze_36421)] =
                    copy_arg_36460;
                ((__global float *) mem_43462)[phys_tid_36189 + loopres_36450 *
                                               (segmap_usable_groups_36422 *
                                                segmap_group_sizze_36421)] =
                    copy_arg_36455;
                
                bool cond_36463 = slt64((int64_t) 0, loopres_36450);
                bool loop_cond_36464;
                
                if (cond_36463) {
                    bool index_certs_36465;
                    
                    if (!bounds_check_36458) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = loopres_36450;
                                global_failure_args[1] = iota32_arg_28418;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_36466 = ((__global
                                                           float *) mem_43462)[phys_tid_36189 +
                                                                               loopres_36450 *
                                                                               (segmap_usable_groups_36422 *
                                                                                segmap_group_sizze_36421)];
                    int64_t i_36467 = sub64(loopres_36450, (int64_t) 1);
                    bool x_36468 = sle64((int64_t) 0, i_36467);
                    bool y_36469 = slt64(i_36467, iota32_arg_28418);
                    bool bounds_check_36470 = x_36468 && y_36469;
                    bool index_certs_36471;
                    
                    if (!bounds_check_36470) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_36467;
                                global_failure_args[1] = iota32_arg_28418;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_36472 = ((__global
                                                           float *) mem_43462)[phys_tid_36189 +
                                                                               i_36467 *
                                                                               (segmap_usable_groups_36422 *
                                                                                segmap_group_sizze_36421)];
                    bool defunc_1_zlze_res_36473 =
                         defunc_1_lifted_gt_arg_36472 <=
                         defunc_2_lifted_gt_arg_36466;
                    bool defunc_2_lifted_gt_res_36474 =
                         !defunc_1_zlze_res_36473;
                    
                    loop_cond_36464 = defunc_2_lifted_gt_res_36474;
                } else {
                    loop_cond_36464 = 0;
                }
                
                bool loop_while_tmp_44775 = loop_cond_36464;
                int64_t j_tmp_44776 = loopres_36450;
                
                loop_while_36447 = loop_while_tmp_44775;
                j_36448 = j_tmp_44776;
            }
            xszq_36444 = loop_while_36447;
            xszq_36445 = j_36448;
        }
        
        int32_t i_36475 = sdiv32(y_36426, 2);
        int32_t j_36476 = sub32(i_36475, 1);
        bool cond_36477 = x_36424 == x_36425;
        float defunc_0_f_res_36478;
        
        if (cond_36477) {
            defunc_0_f_res_36478 = 0.0F;
        } else {
            int32_t x_36479 = smod32(y_36426, 2);
            bool cond_36480 = x_36479 == 0;
            float defunc_0_f_res_f_res_36481;
            
            if (cond_36480) {
                int64_t j_36482 = sext_i32_i64(j_36476);
                bool x_36483 = sle64((int64_t) 0, j_36482);
                bool y_36484 = slt64(j_36482, iota32_arg_28418);
                bool bounds_check_36485 = x_36483 && y_36484;
                bool index_certs_36486;
                
                if (!bounds_check_36485) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 19) ==
                            -1) {
                            global_failure_args[0] = j_36482;
                            global_failure_args[1] = iota32_arg_28418;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36487 = ((__global float *) mem_43462)[phys_tid_36189 +
                                                               j_36482 *
                                                               (segmap_usable_groups_36422 *
                                                                segmap_group_sizze_36421)];
                int64_t i_36488 = sext_i32_i64(i_36475);
                bool x_36489 = sle64((int64_t) 0, i_36488);
                bool y_36490 = slt64(i_36488, iota32_arg_28418);
                bool bounds_check_36491 = x_36489 && y_36490;
                bool index_certs_36492;
                
                if (!bounds_check_36491) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 20) ==
                            -1) {
                            global_failure_args[0] = i_36488;
                            global_failure_args[1] = iota32_arg_28418;
                            ;
                        }
                        return;
                    }
                }
                
                float y_36493 = ((__global float *) mem_43462)[phys_tid_36189 +
                                                               i_36488 *
                                                               (segmap_usable_groups_36422 *
                                                                segmap_group_sizze_36421)];
                float x_36494 = x_36487 + y_36493;
                float defunc_0_f_res_f_res_t_res_36495 = x_36494 / 2.0F;
                
                defunc_0_f_res_f_res_36481 = defunc_0_f_res_f_res_t_res_36495;
            } else {
                int64_t i_36496 = sext_i32_i64(i_36475);
                bool x_36497 = sle64((int64_t) 0, i_36496);
                bool y_36498 = slt64(i_36496, iota32_arg_28418);
                bool bounds_check_36499 = x_36497 && y_36498;
                bool index_certs_36500;
                
                if (!bounds_check_36499) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 21) ==
                            -1) {
                            global_failure_args[0] = i_36496;
                            global_failure_args[1] = iota32_arg_28418;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_36501 = ((__global
                                                           float *) mem_43462)[phys_tid_36189 +
                                                                               i_36496 *
                                                                               (segmap_usable_groups_36422 *
                                                                                segmap_group_sizze_36421)];
                
                defunc_0_f_res_f_res_36481 = defunc_0_f_res_f_res_f_res_36501;
            }
            defunc_0_f_res_36478 = defunc_0_f_res_f_res_36481;
        }
        ((__global float *) mem_43482)[gtid_36188] = defunc_0_f_res_36478;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36421
}
__kernel void mainMagnitudezisegmap_36310(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28022, int64_t m_28023,
                                          int64_t iota32_arg_28418, __global
                                          unsigned char *defunc_4_map_res_mem_43335,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43402,
                                          __global unsigned char *mem_43444,
                                          __global unsigned char *mem_43448)
{
    #define segmap_group_sizze_36392 (mainMagnitudezisegmap_group_sizze_36313)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44763;
    int32_t local_tid_44764;
    int64_t group_sizze_44767;
    int32_t wave_sizze_44766;
    int32_t group_tid_44765;
    
    global_tid_44763 = get_global_id(0);
    local_tid_44764 = get_local_id(0);
    group_sizze_44767 = get_local_size(0);
    wave_sizze_44766 = LOCKSTEP_WIDTH;
    group_tid_44765 = get_group_id(0);
    
    int32_t phys_tid_36310;
    
    phys_tid_36310 = global_tid_44763;
    
    int64_t gtid_36308;
    
    gtid_36308 = squot64(sext_i32_i64(group_tid_44765) *
                         segmap_group_sizze_36392 +
                         sext_i32_i64(local_tid_44764), iota32_arg_28418);
    
    int64_t gtid_36309;
    
    gtid_36309 = sext_i32_i64(group_tid_44765) * segmap_group_sizze_36392 +
        sext_i32_i64(local_tid_44764) - squot64(sext_i32_i64(group_tid_44765) *
                                                segmap_group_sizze_36392 +
                                                sext_i32_i64(local_tid_44764),
                                                iota32_arg_28418) *
        iota32_arg_28418;
    if (slt64(gtid_36308, m_28023) && slt64(gtid_36309, iota32_arg_28418)) {
        int32_t x_36395 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_36308];
        int32_t y_36397 = ((__global int32_t *) mem_43444)[gtid_36308];
        int32_t index_primexp_40584 = sext_i64_i32(gtid_36309);
        bool cond_36399 = slt32(index_primexp_40584, y_36397);
        bool cond_36400;
        
        if (cond_36399) {
            int32_t i_36401 = add32(x_36395, index_primexp_40584);
            int64_t i_36402 = sext_i32_i64(i_36401);
            bool x_36403 = sle64((int64_t) 0, i_36402);
            bool y_36404 = slt64(i_36402, N_28022);
            bool bounds_check_36405 = x_36403 && y_36404;
            bool index_certs_36406;
            
            if (!bounds_check_36405) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_36402;
                        global_failure_args[1] = N_28022;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_36407 = ((__global
                                      float *) defunc_4_map_res_mem_43335)[gtid_36308 *
                                                                           N_28022 +
                                                                           i_36402];
            bool isnan_res_36408;
            
            isnan_res_36408 = futrts_isnan32(isnan_arg_36407);
            
            bool cond_t_res_36409 = !isnan_res_36408;
            
            cond_36400 = cond_t_res_36409;
        } else {
            cond_36400 = 0;
        }
        
        float defunc_0_f_res_36410;
        
        if (cond_36400) {
            int32_t i_36411 = add32(x_36395, index_primexp_40584);
            int64_t i_36412 = sext_i32_i64(i_36411);
            bool x_36413 = sle64((int64_t) 0, i_36412);
            bool y_36414 = slt64(i_36412, N_28022);
            bool bounds_check_36415 = x_36413 && y_36414;
            bool index_certs_36416;
            
            if (!bounds_check_36415) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_36412;
                        global_failure_args[1] = N_28022;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_36417 = ((__global
                                                 float *) defunc_4_map_res_mem_43335)[gtid_36308 *
                                                                                      N_28022 +
                                                                                      i_36412];
            
            defunc_0_f_res_36410 = defunc_0_f_res_t_res_36417;
        } else {
            defunc_0_f_res_36410 = INFINITY;
        }
        ((__global float *) mem_43448)[gtid_36308 * iota32_arg_28418 +
                                       gtid_36309] = defunc_0_f_res_36410;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36392
}
__kernel void mainMagnitudezisegmap_36368(__global int *global_failure,
                                          int64_t m_28023, __global
                                          unsigned char *defunc_4_map_res_mem_43334,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43402,
                                          __global unsigned char *mem_43444)
{
    #define segmap_group_sizze_36377 (mainMagnitudezisegmap_group_sizze_36370)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44758;
    int32_t local_tid_44759;
    int64_t group_sizze_44762;
    int32_t wave_sizze_44761;
    int32_t group_tid_44760;
    
    global_tid_44758 = get_global_id(0);
    local_tid_44759 = get_local_id(0);
    group_sizze_44762 = get_local_size(0);
    wave_sizze_44761 = LOCKSTEP_WIDTH;
    group_tid_44760 = get_group_id(0);
    
    int32_t phys_tid_36368;
    
    phys_tid_36368 = global_tid_44758;
    
    int64_t gtid_36367;
    
    gtid_36367 = sext_i32_i64(group_tid_44760) * segmap_group_sizze_36377 +
        sext_i32_i64(local_tid_44759);
    if (slt64(gtid_36367, m_28023)) {
        int32_t x_36380 = ((__global
                            int32_t *) defunc_4_map_res_mem_43334)[gtid_36367];
        int32_t x_36381 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_36367];
        int32_t y_36382 = sub32(x_36380, x_36381);
        
        ((__global int32_t *) mem_43444)[gtid_36367] = y_36382;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36377
}
__kernel void mainMagnitudezisegmap_36866(__global int *global_failure,
                                          int64_t N_28022, int64_t m_28023,
                                          int32_t n_28026, __global
                                          unsigned char *defunc_4_map_res_mem_43336,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43402,
                                          __global unsigned char *mem_43496,
                                          __global unsigned char *mem_43503,
                                          __global unsigned char *mem_43505,
                                          __global unsigned char *mem_43507,
                                          __global unsigned char *mem_43510,
                                          __global unsigned char *mem_43512)
{
    #define segmap_group_sizze_37130 (mainMagnitudezisegmap_group_sizze_36868)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44968;
    int32_t local_tid_44969;
    int64_t group_sizze_44972;
    int32_t wave_sizze_44971;
    int32_t group_tid_44970;
    
    global_tid_44968 = get_global_id(0);
    local_tid_44969 = get_local_id(0);
    group_sizze_44972 = get_local_size(0);
    wave_sizze_44971 = LOCKSTEP_WIDTH;
    group_tid_44970 = get_group_id(0);
    
    int32_t phys_tid_36866;
    
    phys_tid_36866 = global_tid_44968;
    
    int64_t gtid_36865;
    
    gtid_36865 = sext_i32_i64(group_tid_44970) * segmap_group_sizze_37130 +
        sext_i32_i64(local_tid_44969);
    if (slt64(gtid_36865, m_28023)) {
        int32_t x_37134 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_36865];
        int32_t y_37136 = ((__global int32_t *) mem_43496)[gtid_36865];
        bool acc0_37138 = ((__global bool *) mem_43503)[gtid_36865];
        bool x_37143 = acc0_37138 && acc0_37138;
        int32_t defunc_1_op_res_f_res_37147;
        
        if (acc0_37138) {
            int32_t acc0_37139 = ((__global int32_t *) mem_43505)[gtid_36865];
            
            defunc_1_op_res_f_res_37147 = acc0_37139;
        } else {
            defunc_1_op_res_f_res_37147 = -1;
        }
        
        bool cond_37153 = y_37136 == 0;
        float defunc_0_f_res_37154;
        
        if (cond_37153) {
            defunc_0_f_res_37154 = 0.0F;
        } else {
            float acc0_37140 = ((__global float *) mem_43507)[gtid_36865];
            float i32_res_37155 = sitofp_i32_f32(y_37136);
            float defunc_0_f_res_f_res_37156 = acc0_37140 / i32_res_37155;
            
            defunc_0_f_res_37154 = defunc_0_f_res_f_res_37156;
        }
        
        bool cond_37157 = !x_37143;
        int32_t fst_breakzq_37158;
        
        if (cond_37157) {
            fst_breakzq_37158 = -1;
        } else {
            bool cond_37159 = slt32(defunc_1_op_res_f_res_37147, y_37136);
            int32_t adjustValInds_res_37160;
            
            if (cond_37159) {
                int32_t i_37161 = add32(x_37134, defunc_1_op_res_f_res_37147);
                int64_t i_37162 = sext_i32_i64(i_37161);
                int32_t x_37163 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43336)[gtid_36865 *
                                                                           N_28022 +
                                                                           i_37162];
                int32_t adjustValInds_res_t_res_37164 = sub32(x_37163, n_28026);
                
                adjustValInds_res_37160 = adjustValInds_res_t_res_37164;
            } else {
                adjustValInds_res_37160 = -1;
            }
            fst_breakzq_37158 = adjustValInds_res_37160;
        }
        
        bool cond_37165 = sle32(x_37134, 5);
        bool cond_f_res_37166 = sle32(y_37136, 5);
        bool x_37167 = !cond_37165;
        bool y_37168 = cond_f_res_37166 && x_37167;
        bool cond_37169 = cond_37165 || y_37168;
        int32_t fst_breakzq_37170;
        
        if (cond_37169) {
            fst_breakzq_37170 = -2;
        } else {
            fst_breakzq_37170 = fst_breakzq_37158;
        }
        ((__global int32_t *) mem_43510)[gtid_36865] = fst_breakzq_37170;
        ((__global float *) mem_43512)[gtid_36865] = defunc_0_f_res_37154;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37130
}
__kernel void mainMagnitudezisegmap_37008(__global int *global_failure,
                                          int64_t m_28023,
                                          int64_t num_groups_37031, __global
                                          unsigned char *defunc_4_map_res_mem_43334,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43402,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43403,
                                          __global unsigned char *mem_43494,
                                          __global unsigned char *mem_43496)
{
    #define segmap_group_sizze_37030 (mainMagnitudezisegmap_group_sizze_37010)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44806;
    int32_t local_tid_44807;
    int64_t group_sizze_44810;
    int32_t wave_sizze_44809;
    int32_t group_tid_44808;
    
    global_tid_44806 = get_global_id(0);
    local_tid_44807 = get_local_id(0);
    group_sizze_44810 = get_local_size(0);
    wave_sizze_44809 = LOCKSTEP_WIDTH;
    group_tid_44808 = get_group_id(0);
    
    int32_t phys_tid_37008;
    
    phys_tid_37008 = global_tid_44806;
    
    int32_t phys_group_id_44811;
    
    phys_group_id_44811 = get_group_id(0);
    for (int32_t i_44812 = 0; i_44812 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023, segmap_group_sizze_37030)) -
                   phys_group_id_44811, sext_i64_i32(num_groups_37031));
         i_44812++) {
        int32_t virt_group_id_44813 = phys_group_id_44811 + i_44812 *
                sext_i64_i32(num_groups_37031);
        int64_t gtid_37007 = sext_i32_i64(virt_group_id_44813) *
                segmap_group_sizze_37030 + sext_i32_i64(local_tid_44807);
        
        if (slt64(gtid_37007, m_28023)) {
            int32_t x_37037 = ((__global
                                int32_t *) defunc_4_map_res_mem_43334)[gtid_37007];
            int32_t x_37038 = ((__global
                                int32_t *) defunc_3_map_res_mem_43402)[gtid_37007];
            float x_37039 = ((__global
                              float *) defunc_3_map_res_mem_43403)[gtid_37007];
            int32_t y_37040 = sub32(x_37037, x_37038);
            float i32_res_37041 = sitofp_i32_f32(x_37038);
            float sqrt_res_37042;
            
            sqrt_res_37042 = futrts_sqrt32(i32_res_37041);
            
            float y_37043 = x_37039 * sqrt_res_37042;
            
            ((__global float *) mem_43494)[gtid_37007] = y_37043;
            ((__global int32_t *) mem_43496)[gtid_37007] = y_37040;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37030
}
__kernel void mainMagnitudezisegmap_intragroup_34045(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42720_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_42710_backing_aligned_1,
                                                     int32_t k2p2zq_28036,
                                                     int64_t i32_res_28038,
                                                     int32_t m_28169,
                                                     int64_t i32_res_28171,
                                                     int64_t i32_res_28186,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_42706,
                                                     __global
                                                     unsigned char *mem_42730)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42720_backing_1 = (__local volatile
                                                           char *) mem_42720_backing_aligned_0;
    __local volatile char *restrict mem_42710_backing_0 = (__local volatile
                                                           char *) mem_42710_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43978;
    int32_t local_tid_43979;
    int64_t group_sizze_43982;
    int32_t wave_sizze_43981;
    int32_t group_tid_43980;
    
    global_tid_43978 = get_global_id(0);
    local_tid_43979 = get_local_id(0);
    group_sizze_43982 = get_local_size(0);
    wave_sizze_43981 = LOCKSTEP_WIDTH;
    group_tid_43980 = get_group_id(0);
    
    int32_t phys_tid_34045;
    
    phys_tid_34045 = group_tid_43980;
    
    int32_t ltid_pre_43983;
    
    ltid_pre_43983 = local_tid_43979;
    
    int64_t gtid_34000;
    
    gtid_34000 = sext_i32_i64(group_tid_43980);
    
    __local char *mem_42710;
    
    mem_42710 = (__local char *) mem_42710_backing_0;
    
    int64_t gtid_34003 = sext_i32_i64(ltid_pre_43983);
    int32_t phys_tid_34004 = local_tid_43979;
    int32_t index_primexp_40543 = sext_i64_i32(gtid_34003);
    int32_t defunc_0_f_res_34170 = sdiv32(index_primexp_40543, m_28169);
    int32_t defunc_0_f_res_34171 = smod32(index_primexp_40543, m_28169);
    bool cond_34172 = slt32(defunc_0_f_res_34171, k2p2zq_28036);
    float defunc_0_f_res_34173;
    
    if (cond_34172) {
        int64_t i_34174 = sext_i32_i64(defunc_0_f_res_34170);
        int64_t j_34175 = sext_i32_i64(defunc_0_f_res_34171);
        float defunc_0_f_res_t_res_34176 = ((__global
                                             float *) defunc_3_map_res_mem_42706)[gtid_34000 *
                                                                                  (i32_res_28038 *
                                                                                   i32_res_28038) +
                                                                                  i_34174 *
                                                                                  i32_res_28038 +
                                                                                  j_34175];
        
        defunc_0_f_res_34173 = defunc_0_f_res_t_res_34176;
    } else {
        int32_t y_34177 = add32(k2p2zq_28036, defunc_0_f_res_34170);
        bool cond_34178 = defunc_0_f_res_34171 == y_34177;
        float defunc_0_f_res_f_res_34179;
        
        if (cond_34178) {
            defunc_0_f_res_f_res_34179 = 1.0F;
        } else {
            defunc_0_f_res_f_res_34179 = 0.0F;
        }
        defunc_0_f_res_34173 = defunc_0_f_res_f_res_34179;
    }
    ((__local float *) mem_42710)[gtid_34003] = defunc_0_f_res_34173;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42720;
    
    mem_42720 = (__local char *) mem_42720_backing_1;
    for (int32_t i_34181 = 0; i_34181 < k2p2zq_28036; i_34181++) {
        int64_t i32_res_34183 = sext_i32_i64(i_34181);
        float v1_34184 = ((__local float *) mem_42710)[i32_res_34183];
        bool cond_34185 = v1_34184 == 0.0F;
        int64_t gtid_34016 = sext_i32_i64(ltid_pre_43983);
        int32_t phys_tid_34017 = local_tid_43979;
        int32_t defunc_0_f_res_34188 = sext_i64_i32(gtid_34016);
        int32_t defunc_0_f_res_34189 = sdiv32(defunc_0_f_res_34188, m_28169);
        int32_t defunc_0_f_res_34190 = smod32(defunc_0_f_res_34188, m_28169);
        float defunc_0_f_res_34191;
        
        if (cond_34185) {
            int32_t x_34192 = mul32(m_28169, defunc_0_f_res_34189);
            int32_t i32_arg_34193 = add32(defunc_0_f_res_34190, x_34192);
            int64_t i32_res_34194 = sext_i32_i64(i32_arg_34193);
            float defunc_0_f_res_t_res_34195 = ((__local
                                                 float *) mem_42710)[i32_res_34194];
            
            defunc_0_f_res_34191 = defunc_0_f_res_t_res_34195;
        } else {
            int64_t i32_res_34196 = sext_i32_i64(defunc_0_f_res_34190);
            float x_34197 = ((__local float *) mem_42710)[i32_res_34196];
            float x_34198 = x_34197 / v1_34184;
            int32_t y_34199 = sub32(k2p2zq_28036, 1);
            bool cond_34200 = slt32(defunc_0_f_res_34189, y_34199);
            float defunc_0_f_res_f_res_34201;
            
            if (cond_34200) {
                int32_t x_34202 = add32(1, defunc_0_f_res_34189);
                int32_t x_34203 = mul32(m_28169, x_34202);
                int32_t i32_arg_34204 = add32(defunc_0_f_res_34190, x_34203);
                int64_t i32_res_34205 = sext_i32_i64(i32_arg_34204);
                float x_34206 = ((__local float *) mem_42710)[i32_res_34205];
                int32_t i32_arg_34207 = add32(i_34181, x_34203);
                int64_t i32_res_34208 = sext_i32_i64(i32_arg_34207);
                float x_34209 = ((__local float *) mem_42710)[i32_res_34208];
                float y_34210 = x_34198 * x_34209;
                float defunc_0_f_res_f_res_t_res_34211 = x_34206 - y_34210;
                
                defunc_0_f_res_f_res_34201 = defunc_0_f_res_f_res_t_res_34211;
            } else {
                defunc_0_f_res_f_res_34201 = x_34198;
            }
            defunc_0_f_res_34191 = defunc_0_f_res_f_res_34201;
        }
        ((__local float *) mem_42720)[gtid_34016] = defunc_0_f_res_34191;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_34043 = sext_i32_i64(ltid_pre_43983);
        int32_t phys_tid_34044 = local_tid_43979;
        float write_value_34214 = ((__local float *) mem_42720)[write_i_34043];
        
        if (sle64((int64_t) 0, write_i_34043) && slt64(write_i_34043,
                                                       i32_res_28171)) {
            ((__local float *) mem_42710)[write_i_34043] = write_value_34214;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_43985 = 0; i_43985 < sdiv_up64(i32_res_28038 *
                                                  i32_res_28038 -
                                                  sext_i32_i64(local_tid_43979),
                                                  i32_res_28171); i_43985++) {
        ((__global float *) mem_42730)[gtid_34000 * (i32_res_28038 *
                                                     i32_res_28038) +
                                       squot64(i_43985 * i32_res_28171 +
                                               sext_i32_i64(local_tid_43979),
                                               i32_res_28038) * i32_res_28038 +
                                       (i_43985 * i32_res_28171 +
                                        sext_i32_i64(local_tid_43979) -
                                        squot64(i_43985 * i32_res_28171 +
                                                sext_i32_i64(local_tid_43979),
                                                i32_res_28038) *
                                        i32_res_28038)] = ((__local
                                                            float *) mem_42710)[i32_res_28038 +
                                                                                (squot64(i_43985 *
                                                                                         i32_res_28171 +
                                                                                         sext_i32_i64(local_tid_43979),
                                                                                         i32_res_28038) *
                                                                                 i32_res_28186 +
                                                                                 (i_43985 *
                                                                                  i32_res_28171 +
                                                                                  sext_i32_i64(local_tid_43979) -
                                                                                  squot64(i_43985 *
                                                                                          i32_res_28171 +
                                                                                          sext_i32_i64(local_tid_43979),
                                                                                          i32_res_28038) *
                                                                                  i32_res_28038))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_34272(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42751_backing_aligned_0,
                                                     int64_t m_28023,
                                                     int32_t k2p2zq_28036,
                                                     int32_t m_28169,
                                                     int64_t i32_res_28171,
                                                     int32_t i_34667,
                                                     int64_t i32_res_34669,
                                                     int64_t ctx_param_ext_42737,
                                                     int64_t ctx_param_ext_42738,
                                                     int64_t ctx_param_ext_42740,
                                                     __global
                                                     unsigned char *mem_param_42742,
                                                     __global
                                                     unsigned char *mem_42747,
                                                     __global
                                                     unsigned char *mem_42755)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42751_backing_0 = (__local volatile
                                                           char *) mem_42751_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44012;
    int32_t local_tid_44013;
    int64_t group_sizze_44016;
    int32_t wave_sizze_44015;
    int32_t group_tid_44014;
    
    global_tid_44012 = get_global_id(0);
    local_tid_44013 = get_local_id(0);
    group_sizze_44016 = get_local_size(0);
    wave_sizze_44015 = LOCKSTEP_WIDTH;
    group_tid_44014 = get_group_id(0);
    
    int32_t phys_tid_34272;
    
    phys_tid_34272 = group_tid_44014;
    
    int32_t ltid_pre_44017;
    
    ltid_pre_44017 = local_tid_44013;
    
    int64_t gtid_34240;
    
    gtid_34240 = sext_i32_i64(group_tid_44014);
    
    float v1_34682 = ((__global float *) mem_param_42742)[ctx_param_ext_42737 +
                                                          (gtid_34240 *
                                                           ctx_param_ext_42738 +
                                                           i32_res_34669 *
                                                           ctx_param_ext_42740)];
    bool cond_34683 = v1_34682 == 0.0F;
    __local char *mem_42751;
    
    mem_42751 = (__local char *) mem_42751_backing_0;
    
    int64_t gtid_34243 = sext_i32_i64(ltid_pre_44017);
    int32_t phys_tid_34244 = local_tid_44013;
    int32_t defunc_0_f_res_34686 = sext_i64_i32(gtid_34243);
    int32_t defunc_0_f_res_34687 = sdiv32(defunc_0_f_res_34686, m_28169);
    int32_t defunc_0_f_res_34688 = smod32(defunc_0_f_res_34686, m_28169);
    float defunc_0_f_res_34689;
    
    if (cond_34683) {
        int32_t x_34690 = mul32(m_28169, defunc_0_f_res_34687);
        int32_t i32_arg_34691 = add32(defunc_0_f_res_34688, x_34690);
        int64_t i32_res_34692 = sext_i32_i64(i32_arg_34691);
        float defunc_0_f_res_t_res_34693 = ((__global
                                             float *) mem_param_42742)[ctx_param_ext_42737 +
                                                                       (gtid_34240 *
                                                                        ctx_param_ext_42738 +
                                                                        i32_res_34692 *
                                                                        ctx_param_ext_42740)];
        
        defunc_0_f_res_34689 = defunc_0_f_res_t_res_34693;
    } else {
        int64_t i32_res_34694 = sext_i32_i64(defunc_0_f_res_34688);
        float x_34695 = ((__global
                          float *) mem_param_42742)[ctx_param_ext_42737 +
                                                    (gtid_34240 *
                                                     ctx_param_ext_42738 +
                                                     i32_res_34694 *
                                                     ctx_param_ext_42740)];
        float x_34696 = x_34695 / v1_34682;
        int32_t y_34697 = sub32(k2p2zq_28036, 1);
        bool cond_34698 = slt32(defunc_0_f_res_34687, y_34697);
        float defunc_0_f_res_f_res_34699;
        
        if (cond_34698) {
            int32_t x_34700 = add32(1, defunc_0_f_res_34687);
            int32_t x_34701 = mul32(m_28169, x_34700);
            int32_t i32_arg_34702 = add32(defunc_0_f_res_34688, x_34701);
            int64_t i32_res_34703 = sext_i32_i64(i32_arg_34702);
            float x_34704 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_34240 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_34703 *
                                                         ctx_param_ext_42740)];
            int32_t i32_arg_34705 = add32(i_34667, x_34701);
            int64_t i32_res_34706 = sext_i32_i64(i32_arg_34705);
            float x_34707 = ((__global
                              float *) mem_param_42742)[ctx_param_ext_42737 +
                                                        (gtid_34240 *
                                                         ctx_param_ext_42738 +
                                                         i32_res_34706 *
                                                         ctx_param_ext_42740)];
            float y_34708 = x_34696 * x_34707;
            float defunc_0_f_res_f_res_t_res_34709 = x_34704 - y_34708;
            
            defunc_0_f_res_f_res_34699 = defunc_0_f_res_f_res_t_res_34709;
        } else {
            defunc_0_f_res_f_res_34699 = x_34696;
        }
        defunc_0_f_res_34689 = defunc_0_f_res_f_res_34699;
    }
    ((__local float *) mem_42751)[gtid_34243] = defunc_0_f_res_34689;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_34270 = sext_i32_i64(ltid_pre_44017);
    int32_t phys_tid_34271 = local_tid_44013;
    float write_value_34712 = ((__local float *) mem_42751)[write_i_34270];
    
    if (sle64((int64_t) 0, write_i_34270) && slt64(write_i_34270,
                                                   i32_res_28171)) {
        ((__global float *) mem_42747)[gtid_34240 + write_i_34270 * m_28023] =
            write_value_34712;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44013 == 0) {
        for (int64_t i_44018 = 0; i_44018 < i32_res_28171; i_44018++) {
            ((__global float *) mem_42755)[gtid_34240 * i32_res_28171 +
                                           i_44018] = ((__global
                                                        float *) mem_42747)[gtid_34240 +
                                                                            i_44018 *
                                                                            m_28023];
        }
    }
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35223(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43307_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43305_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *mem_43303_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_43301_backing_aligned_3,
                                                     int64_t N_28022,
                                                     int64_t i_28298, __global
                                                     unsigned char *images_mem_42538,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43297,
                                                     __global
                                                     unsigned char *mem_43310,
                                                     __global
                                                     unsigned char *mem_43313,
                                                     __global
                                                     unsigned char *mem_43316)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43307_backing_3 = (__local volatile
                                                           char *) mem_43307_backing_aligned_0;
    __local volatile char *restrict mem_43305_backing_2 = (__local volatile
                                                           char *) mem_43305_backing_aligned_1;
    __local volatile char *restrict mem_43303_backing_1 = (__local volatile
                                                           char *) mem_43303_backing_aligned_2;
    __local volatile char *restrict mem_43301_backing_0 = (__local volatile
                                                           char *) mem_43301_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44394;
    int32_t local_tid_44395;
    int64_t group_sizze_44398;
    int32_t wave_sizze_44397;
    int32_t group_tid_44396;
    
    global_tid_44394 = get_global_id(0);
    local_tid_44395 = get_local_id(0);
    group_sizze_44398 = get_local_size(0);
    wave_sizze_44397 = LOCKSTEP_WIDTH;
    group_tid_44396 = get_group_id(0);
    
    int32_t phys_tid_35223;
    
    phys_tid_35223 = group_tid_44396;
    
    int32_t ltid_pre_44399;
    
    ltid_pre_44399 = local_tid_44395;
    
    int64_t gtid_35216;
    
    gtid_35216 = sext_i32_i64(group_tid_44396);
    
    __local char *mem_43301;
    
    mem_43301 = (__local char *) mem_43301_backing_0;
    
    __local char *mem_43303;
    
    mem_43303 = (__local char *) mem_43303_backing_1;
    
    int64_t gtid_35219 = sext_i32_i64(ltid_pre_44399);
    int32_t phys_tid_35220 = local_tid_44395;
    float x_35312 = ((__global float *) images_mem_42538)[gtid_35216 * N_28022 +
                                                          gtid_35219];
    bool isnan_res_35314;
    
    isnan_res_35314 = futrts_isnan32(x_35312);
    
    bool cond_35315 = !isnan_res_35314;
    float defunc_1_f_res_35316;
    
    if (cond_35315) {
        float x_35313 = ((__global
                          float *) defunc_3_map_res_mem_43297)[gtid_35216 *
                                                               N_28022 +
                                                               gtid_35219];
        float defunc_1_f_res_t_res_35317 = x_35312 - x_35313;
        
        defunc_1_f_res_35316 = defunc_1_f_res_t_res_35317;
    } else {
        defunc_1_f_res_35316 = NAN;
    }
    
    bool isnan_res_35318;
    
    isnan_res_35318 = futrts_isnan32(defunc_1_f_res_35316);
    
    bool defunc_0_p_res_35319 = !isnan_res_35318;
    int64_t defunc_0_f_res_35320 = btoi_bool_i64(defunc_0_p_res_35319);
    
    ((__local int64_t *) mem_43301)[gtid_35219] = defunc_0_f_res_35320;
    ((__local float *) mem_43303)[gtid_35219] = defunc_1_f_res_35316;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44400;
    
    dims_flat_44400 = N_28022;
    
    int64_t x_35309;
    int64_t x_35310;
    int64_t x_44402;
    int64_t x_44403;
    bool ltid_in_bounds_44405;
    
    ltid_in_bounds_44405 = slt64(sext_i32_i64(local_tid_44395), N_28022);
    
    int32_t skip_threads_44406;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44405) {
            x_35310 = ((volatile __local
                        int64_t *) mem_43301)[sext_i32_i64(local_tid_44395)];
            if ((local_tid_44395 - squot32(local_tid_44395, 32) * 32) == 0) {
                x_35309 = x_35310;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44406 = 1;
        while (slt32(skip_threads_44406, 32)) {
            if (sle32(skip_threads_44406, local_tid_44395 -
                      squot32(local_tid_44395, 32) * 32) &&
                ltid_in_bounds_44405) {
                // read operands
                {
                    x_35309 = ((volatile __local
                                int64_t *) mem_43301)[sext_i32_i64(local_tid_44395) -
                                                      sext_i32_i64(skip_threads_44406)];
                }
                // perform operation
                {
                    bool inactive_44407 =
                         slt64(srem64(sext_i32_i64(local_tid_44395), N_28022),
                               sext_i32_i64(local_tid_44395) -
                               sext_i32_i64(local_tid_44395 -
                               skip_threads_44406));
                    
                    if (inactive_44407) {
                        x_35309 = x_35310;
                    }
                    if (!inactive_44407) {
                        int64_t defunc_1_op_res_35311 = add64(x_35309, x_35310);
                        
                        x_35309 = defunc_1_op_res_35311;
                    }
                }
            }
            if (sle32(wave_sizze_44397, skip_threads_44406)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44406, local_tid_44395 -
                      squot32(local_tid_44395, 32) * 32) &&
                ltid_in_bounds_44405) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43301)[sext_i32_i64(local_tid_44395)] =
                        x_35309;
                    x_35310 = x_35309;
                }
            }
            if (sle32(wave_sizze_44397, skip_threads_44406)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44406 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44395 - squot32(local_tid_44395, 32) * 32) == 31 &&
            ltid_in_bounds_44405) {
            ((volatile __local
              int64_t *) mem_43301)[sext_i32_i64(squot32(local_tid_44395,
                                                         32))] = x_35309;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44408;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44395, 32) == 0 && ltid_in_bounds_44405) {
                x_44403 = ((volatile __local
                            int64_t *) mem_43301)[sext_i32_i64(local_tid_44395)];
                if ((local_tid_44395 - squot32(local_tid_44395, 32) * 32) ==
                    0) {
                    x_44402 = x_44403;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44408 = 1;
            while (slt32(skip_threads_44408, 32)) {
                if (sle32(skip_threads_44408, local_tid_44395 -
                          squot32(local_tid_44395, 32) * 32) &&
                    (squot32(local_tid_44395, 32) == 0 &&
                     ltid_in_bounds_44405)) {
                    // read operands
                    {
                        x_44402 = ((volatile __local
                                    int64_t *) mem_43301)[sext_i32_i64(local_tid_44395) -
                                                          sext_i32_i64(skip_threads_44408)];
                    }
                    // perform operation
                    {
                        bool inactive_44409 =
                             slt64(srem64(sext_i32_i64(local_tid_44395 * 32 +
                                          32 - 1), N_28022),
                                   sext_i32_i64(local_tid_44395 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44395 -
                                                 skip_threads_44408) * 32 + 32 -
                                   1));
                        
                        if (inactive_44409) {
                            x_44402 = x_44403;
                        }
                        if (!inactive_44409) {
                            int64_t defunc_1_op_res_44404 = add64(x_44402,
                                                                  x_44403);
                            
                            x_44402 = defunc_1_op_res_44404;
                        }
                    }
                }
                if (sle32(wave_sizze_44397, skip_threads_44408)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44408, local_tid_44395 -
                          squot32(local_tid_44395, 32) * 32) &&
                    (squot32(local_tid_44395, 32) == 0 &&
                     ltid_in_bounds_44405)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43301)[sext_i32_i64(local_tid_44395)] =
                            x_44402;
                        x_44403 = x_44402;
                    }
                }
                if (sle32(wave_sizze_44397, skip_threads_44408)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44408 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44395, 32) == 0 || !ltid_in_bounds_44405)) {
            // read operands
            {
                x_35310 = x_35309;
                x_35309 = ((__local
                            int64_t *) mem_43301)[sext_i32_i64(squot32(local_tid_44395,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44410 =
                     slt64(srem64(sext_i32_i64(local_tid_44395), N_28022),
                           sext_i32_i64(local_tid_44395) -
                           sext_i32_i64(squot32(local_tid_44395, 32) * 32 - 1));
                
                if (inactive_44410) {
                    x_35309 = x_35310;
                }
                if (!inactive_44410) {
                    int64_t defunc_1_op_res_35311 = add64(x_35309, x_35310);
                    
                    x_35309 = defunc_1_op_res_35311;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43301)[sext_i32_i64(local_tid_44395)] =
                    x_35309;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44395, 32) == 0) {
            ((__local int64_t *) mem_43301)[sext_i32_i64(local_tid_44395)] =
                x_35310;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_35321 = ((__local int64_t *) mem_43301)[i_28298];
    int32_t defunc_0_f_res_35322 = sext_i64_i32(last_res_35321);
    __local char *mem_43305;
    
    mem_43305 = (__local char *) mem_43305_backing_2;
    ((__local float *) mem_43305)[sext_i32_i64(local_tid_44395)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43307;
    
    mem_43307 = (__local char *) mem_43307_backing_3;
    ((__local int32_t *) mem_43307)[sext_i32_i64(local_tid_44395)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35221 = sext_i32_i64(ltid_pre_44399);
    int32_t phys_tid_35222 = local_tid_44395;
    float x_35327 = ((__local float *) mem_43303)[write_i_35221];
    int32_t index_primexp_40563 = sext_i64_i32(write_i_35221);
    bool isnan_res_35330;
    
    isnan_res_35330 = futrts_isnan32(x_35327);
    
    bool defunc_0_p_res_35331 = !isnan_res_35330;
    int64_t defunc_1_f_res_35332;
    
    if (defunc_0_p_res_35331) {
        int64_t x_35328 = ((__local int64_t *) mem_43301)[write_i_35221];
        int64_t defunc_1_f_res_t_res_35333 = sub64(x_35328, (int64_t) 1);
        
        defunc_1_f_res_35332 = defunc_1_f_res_t_res_35333;
    } else {
        defunc_1_f_res_35332 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_35332) && slt64(defunc_1_f_res_35332,
                                                          N_28022)) {
        ((__local int32_t *) mem_43307)[defunc_1_f_res_35332] =
            index_primexp_40563;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_35332) && slt64(defunc_1_f_res_35332,
                                                          N_28022)) {
        ((__local float *) mem_43305)[defunc_1_f_res_35332] = x_35327;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44395 == 0) {
        ((__global int32_t *) mem_43310)[gtid_35216] = defunc_0_f_res_35322;
    }
    ((__global float *) mem_43313)[gtid_35216 * N_28022 +
                                   sext_i32_i64(local_tid_44395)] = ((__local
                                                                      float *) mem_43305)[sext_i32_i64(local_tid_44395)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43316)[gtid_35216 * N_28022 +
                                     sext_i32_i64(local_tid_44395)] = ((__local
                                                                        int32_t *) mem_43307)[sext_i32_i64(local_tid_44395)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35563(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44519_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44515_backing_aligned_1,
                                                     int64_t N_28022,
                                                     float hfrac_28028,
                                                     int64_t i32_res_28032,
                                                     int32_t k2p2_28034,
                                                     __global
                                                     unsigned char *images_mem_42538,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43335,
                                                     __global
                                                     unsigned char *mem_43382,
                                                     __global
                                                     unsigned char *mem_43384,
                                                     __global
                                                     unsigned char *mem_43386)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44519_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44519_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44515_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44515_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44509;
    int32_t local_tid_44510;
    int64_t group_sizze_44513;
    int32_t wave_sizze_44512;
    int32_t group_tid_44511;
    
    global_tid_44509 = get_global_id(0);
    local_tid_44510 = get_local_id(0);
    group_sizze_44513 = get_local_size(0);
    wave_sizze_44512 = LOCKSTEP_WIDTH;
    group_tid_44511 = get_group_id(0);
    
    int32_t phys_tid_35563;
    
    phys_tid_35563 = group_tid_44511;
    
    int32_t ltid_pre_44514;
    
    ltid_pre_44514 = local_tid_44510;
    
    int64_t gtid_35556;
    
    gtid_35556 = sext_i32_i64(group_tid_44511);
    
    int32_t defunc_0_f_res_35640;
    int64_t gtid_35559 = sext_i32_i64(ltid_pre_44514);
    int32_t phys_tid_35560 = local_tid_44510;
    __local char *red_arr_mem_44515;
    
    red_arr_mem_44515 = (__local char *) red_arr_mem_44515_backing_0;
    
    float x_35644;
    
    x_35644 = ((__global float *) images_mem_42538)[gtid_35556 * N_28022 +
                                                    gtid_35559];
    
    bool isnan_res_35645;
    
    isnan_res_35645 = futrts_isnan32(x_35644);
    
    bool cond_35646 = !isnan_res_35645;
    int32_t defunc_0_f_res_35647 = btoi_bool_i32(cond_35646);
    
    ((__local int32_t *) red_arr_mem_44515)[gtid_35559] = defunc_0_f_res_35647;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44517;
    int32_t skip_waves_44518;
    
    skip_waves_44518 = 1;
    
    int32_t x_35641;
    int32_t x_35642;
    
    offset_44517 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44510, sext_i64_i32(i32_res_28032))) {
            x_35641 = ((__local
                        int32_t *) red_arr_mem_44515)[sext_i32_i64(local_tid_44510 +
                                                      offset_44517)];
        }
    }
    offset_44517 = 1;
    while (slt32(offset_44517, wave_sizze_44512)) {
        if (slt32(local_tid_44510 + offset_44517,
                  sext_i64_i32(i32_res_28032)) && ((local_tid_44510 -
                                                    squot32(local_tid_44510,
                                                            wave_sizze_44512) *
                                                    wave_sizze_44512) & (2 *
                                                                         offset_44517 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_35642 = ((volatile __local
                            int32_t *) red_arr_mem_44515)[sext_i32_i64(local_tid_44510 +
                                                          offset_44517)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35643 = add32(x_35641, x_35642);
                
                x_35641 = defunc_1_op_res_35643;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44515)[sext_i32_i64(local_tid_44510)] =
                    x_35641;
            }
        }
        offset_44517 *= 2;
    }
    while (slt32(skip_waves_44518, squot32(sext_i64_i32(i32_res_28032) +
                                           wave_sizze_44512 - 1,
                                           wave_sizze_44512))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44517 = skip_waves_44518 * wave_sizze_44512;
        if (slt32(local_tid_44510 + offset_44517,
                  sext_i64_i32(i32_res_28032)) && ((local_tid_44510 -
                                                    squot32(local_tid_44510,
                                                            wave_sizze_44512) *
                                                    wave_sizze_44512) == 0 &&
                                                   (squot32(local_tid_44510,
                                                            wave_sizze_44512) &
                                                    (2 * skip_waves_44518 -
                                                     1)) == 0)) {
            // read array element
            {
                x_35642 = ((__local
                            int32_t *) red_arr_mem_44515)[sext_i32_i64(local_tid_44510 +
                                                          offset_44517)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35643 = add32(x_35641, x_35642);
                
                x_35641 = defunc_1_op_res_35643;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44515)[sext_i32_i64(local_tid_44510)] =
                    x_35641;
            }
        }
        skip_waves_44518 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_35640 = ((__local int32_t *) red_arr_mem_44515)[(int64_t) 0];
    
    float defunc_0_f_res_35648;
    int64_t gtid_35561 = sext_i32_i64(ltid_pre_44514);
    int32_t phys_tid_35562 = local_tid_44510;
    __local char *red_arr_mem_44519;
    
    red_arr_mem_44519 = (__local char *) red_arr_mem_44519_backing_1;
    
    int32_t index_primexp_40571;
    
    index_primexp_40571 = sext_i64_i32(gtid_35561);
    
    bool cond_35653 = slt32(index_primexp_40571, defunc_0_f_res_35640);
    float defunc_0_f_res_35654;
    
    if (cond_35653) {
        int64_t i_35655 = sext_i32_i64(index_primexp_40571);
        float defunc_0_f_res_t_res_35656 = ((__global
                                             float *) defunc_4_map_res_mem_43335)[gtid_35556 *
                                                                                  N_28022 +
                                                                                  i_35655];
        
        defunc_0_f_res_35654 = defunc_0_f_res_t_res_35656;
    } else {
        defunc_0_f_res_35654 = 0.0F;
    }
    
    float defunc_0_f_res_35657 = defunc_0_f_res_35654 * defunc_0_f_res_35654;
    
    ((__local float *) red_arr_mem_44519)[gtid_35561] = defunc_0_f_res_35657;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44521;
    int32_t skip_waves_44522;
    
    skip_waves_44522 = 1;
    
    float x_35649;
    float x_35650;
    
    offset_44521 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44510, sext_i64_i32(i32_res_28032))) {
            x_35649 = ((__local
                        float *) red_arr_mem_44519)[sext_i32_i64(local_tid_44510 +
                                                    offset_44521)];
        }
    }
    offset_44521 = 1;
    while (slt32(offset_44521, wave_sizze_44512)) {
        if (slt32(local_tid_44510 + offset_44521,
                  sext_i64_i32(i32_res_28032)) && ((local_tid_44510 -
                                                    squot32(local_tid_44510,
                                                            wave_sizze_44512) *
                                                    wave_sizze_44512) & (2 *
                                                                         offset_44521 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_35650 = ((volatile __local
                            float *) red_arr_mem_44519)[sext_i32_i64(local_tid_44510 +
                                                        offset_44521)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_35651 = x_35649 + x_35650;
                
                x_35649 = defunc_1_op_res_35651;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44519)[sext_i32_i64(local_tid_44510)] =
                    x_35649;
            }
        }
        offset_44521 *= 2;
    }
    while (slt32(skip_waves_44522, squot32(sext_i64_i32(i32_res_28032) +
                                           wave_sizze_44512 - 1,
                                           wave_sizze_44512))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44521 = skip_waves_44522 * wave_sizze_44512;
        if (slt32(local_tid_44510 + offset_44521,
                  sext_i64_i32(i32_res_28032)) && ((local_tid_44510 -
                                                    squot32(local_tid_44510,
                                                            wave_sizze_44512) *
                                                    wave_sizze_44512) == 0 &&
                                                   (squot32(local_tid_44510,
                                                            wave_sizze_44512) &
                                                    (2 * skip_waves_44522 -
                                                     1)) == 0)) {
            // read array element
            {
                x_35650 = ((__local
                            float *) red_arr_mem_44519)[sext_i32_i64(local_tid_44510 +
                                                        offset_44521)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_35651 = x_35649 + x_35650;
                
                x_35649 = defunc_1_op_res_35651;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44519)[sext_i32_i64(local_tid_44510)] =
                    x_35649;
            }
        }
        skip_waves_44522 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_35648 = ((__local float *) red_arr_mem_44519)[(int64_t) 0];
    
    int32_t r32_arg_35658 = sub32(defunc_0_f_res_35640, k2p2_28034);
    float i32_res_35659 = sitofp_i32_f32(r32_arg_35658);
    float sqrt_arg_35660 = defunc_0_f_res_35648 / i32_res_35659;
    float sqrt_res_35661;
    
    sqrt_res_35661 = futrts_sqrt32(sqrt_arg_35660);
    
    float i32_res_35662 = sitofp_i32_f32(defunc_0_f_res_35640);
    float t32_arg_35663 = hfrac_28028 * i32_res_35662;
    int32_t f32_res_35664 = fptosi_f32_i32(t32_arg_35663);
    
    if (local_tid_44510 == 0) {
        ((__global int32_t *) mem_43382)[gtid_35556] = f32_res_35664;
    }
    if (local_tid_44510 == 0) {
        ((__global int32_t *) mem_43384)[gtid_35556] = defunc_0_f_res_35640;
    }
    if (local_tid_44510 == 0) {
        ((__global float *) mem_43386)[gtid_35556] = sqrt_res_35661;
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36541(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44802_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44800_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44798_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_43486_backing_aligned_3,
                                                     int64_t N_28022,
                                                     int32_t n_28026,
                                                     int64_t iota32_arg_28418,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43334,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43335,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43336,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43401,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43402,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43403,
                                                     __global
                                                     unsigned char *defunc_0_f_res_mem_43436,
                                                     __global
                                                     unsigned char *mem_43441,
                                                     __global
                                                     unsigned char *mem_43489,
                                                     __global
                                                     unsigned char *mem_43491)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44802_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_44802_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44800_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44800_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44798_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44798_backing_aligned_2;
    __local volatile char *restrict mem_43486_backing_0 = (__local volatile
                                                           char *) mem_43486_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44781;
    int32_t local_tid_44782;
    int64_t group_sizze_44785;
    int32_t wave_sizze_44784;
    int32_t group_tid_44783;
    
    global_tid_44781 = get_global_id(0);
    local_tid_44782 = get_local_id(0);
    group_sizze_44785 = get_local_size(0);
    wave_sizze_44784 = LOCKSTEP_WIDTH;
    group_tid_44783 = get_group_id(0);
    
    int32_t phys_tid_36541;
    
    phys_tid_36541 = group_tid_44783;
    
    int32_t ltid_pre_44786;
    
    ltid_pre_44786 = local_tid_44782;
    
    int64_t gtid_36534;
    
    gtid_36534 = sext_i32_i64(group_tid_44783);
    
    int32_t x_36760;
    
    x_36760 = ((__global int32_t *) defunc_4_map_res_mem_43334)[gtid_36534];
    
    int32_t x_36761 = ((__global
                        int32_t *) defunc_3_map_res_mem_43402)[gtid_36534];
    float x_36762 = ((__global float *) defunc_3_map_res_mem_43403)[gtid_36534];
    int32_t x_36763 = ((__global
                        int32_t *) defunc_3_map_res_mem_43401)[gtid_36534];
    float x_36764 = ((__global float *) defunc_0_f_res_mem_43436)[gtid_36534];
    int32_t y_36767 = sub32(x_36760, x_36761);
    float i32_res_36768 = sitofp_i32_f32(x_36761);
    float sqrt_res_36769;
    
    sqrt_res_36769 = futrts_sqrt32(i32_res_36768);
    
    float y_36770 = x_36762 * sqrt_res_36769;
    __local char *mem_43486;
    
    mem_43486 = (__local char *) mem_43486_backing_0;
    
    int64_t gtid_36537 = sext_i32_i64(ltid_pre_44786);
    int32_t phys_tid_36538 = local_tid_44782;
    int32_t index_primexp_40589 = sext_i64_i32(gtid_36537);
    bool cond_36783 = sle32(y_36767, index_primexp_40589);
    float defunc_0_f_res_36784;
    
    if (cond_36783) {
        defunc_0_f_res_36784 = 0.0F;
    } else {
        bool cond_36785 = index_primexp_40589 == 0;
        float defunc_0_f_res_f_res_36786;
        
        if (cond_36785) {
            defunc_0_f_res_f_res_36786 = x_36764;
        } else {
            int32_t i_36787 = add32(x_36761, index_primexp_40589);
            int64_t i_36788 = sext_i32_i64(i_36787);
            float x_36789 = ((__global
                              float *) defunc_4_map_res_mem_43335)[gtid_36534 *
                                                                   N_28022 +
                                                                   i_36788];
            int32_t x_36790 = sub32(x_36761, x_36763);
            int32_t i_36791 = add32(x_36790, index_primexp_40589);
            int64_t i_36792 = sext_i32_i64(i_36791);
            float y_36793 = ((__global
                              float *) defunc_4_map_res_mem_43335)[gtid_36534 *
                                                                   N_28022 +
                                                                   i_36792];
            float defunc_0_f_res_f_res_f_res_36794 = x_36789 - y_36793;
            
            defunc_0_f_res_f_res_36786 = defunc_0_f_res_f_res_f_res_36794;
        }
        defunc_0_f_res_36784 = defunc_0_f_res_f_res_36786;
    }
    ((__local float *) mem_43486)[gtid_36537] = defunc_0_f_res_36784;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44787;
    
    dims_flat_44787 = iota32_arg_28418;
    
    float x_36779;
    float x_36780;
    float x_44789;
    float x_44790;
    bool ltid_in_bounds_44792;
    
    ltid_in_bounds_44792 = slt64(sext_i32_i64(local_tid_44782),
                                 iota32_arg_28418);
    
    int32_t skip_threads_44793;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44792) {
            x_36780 = ((volatile __local
                        float *) mem_43486)[sext_i32_i64(local_tid_44782)];
            if ((local_tid_44782 - squot32(local_tid_44782, 32) * 32) == 0) {
                x_36779 = x_36780;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44793 = 1;
        while (slt32(skip_threads_44793, 32)) {
            if (sle32(skip_threads_44793, local_tid_44782 -
                      squot32(local_tid_44782, 32) * 32) &&
                ltid_in_bounds_44792) {
                // read operands
                {
                    x_36779 = ((volatile __local
                                float *) mem_43486)[sext_i32_i64(local_tid_44782) -
                                                    sext_i32_i64(skip_threads_44793)];
                }
                // perform operation
                {
                    bool inactive_44794 =
                         slt64(srem64(sext_i32_i64(local_tid_44782),
                                      iota32_arg_28418),
                               sext_i32_i64(local_tid_44782) -
                               sext_i32_i64(local_tid_44782 -
                               skip_threads_44793));
                    
                    if (inactive_44794) {
                        x_36779 = x_36780;
                    }
                    if (!inactive_44794) {
                        float defunc_1_op_res_36781 = x_36779 + x_36780;
                        
                        x_36779 = defunc_1_op_res_36781;
                    }
                }
            }
            if (sle32(wave_sizze_44784, skip_threads_44793)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44793, local_tid_44782 -
                      squot32(local_tid_44782, 32) * 32) &&
                ltid_in_bounds_44792) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43486)[sext_i32_i64(local_tid_44782)] =
                        x_36779;
                    x_36780 = x_36779;
                }
            }
            if (sle32(wave_sizze_44784, skip_threads_44793)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44793 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44782 - squot32(local_tid_44782, 32) * 32) == 31 &&
            ltid_in_bounds_44792) {
            ((volatile __local
              float *) mem_43486)[sext_i32_i64(squot32(local_tid_44782, 32))] =
                x_36779;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44795;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44782, 32) == 0 && ltid_in_bounds_44792) {
                x_44790 = ((volatile __local
                            float *) mem_43486)[sext_i32_i64(local_tid_44782)];
                if ((local_tid_44782 - squot32(local_tid_44782, 32) * 32) ==
                    0) {
                    x_44789 = x_44790;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44795 = 1;
            while (slt32(skip_threads_44795, 32)) {
                if (sle32(skip_threads_44795, local_tid_44782 -
                          squot32(local_tid_44782, 32) * 32) &&
                    (squot32(local_tid_44782, 32) == 0 &&
                     ltid_in_bounds_44792)) {
                    // read operands
                    {
                        x_44789 = ((volatile __local
                                    float *) mem_43486)[sext_i32_i64(local_tid_44782) -
                                                        sext_i32_i64(skip_threads_44795)];
                    }
                    // perform operation
                    {
                        bool inactive_44796 =
                             slt64(srem64(sext_i32_i64(local_tid_44782 * 32 +
                                          32 - 1), iota32_arg_28418),
                                   sext_i32_i64(local_tid_44782 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44782 -
                                                 skip_threads_44795) * 32 + 32 -
                                   1));
                        
                        if (inactive_44796) {
                            x_44789 = x_44790;
                        }
                        if (!inactive_44796) {
                            float defunc_1_op_res_44791 = x_44789 + x_44790;
                            
                            x_44789 = defunc_1_op_res_44791;
                        }
                    }
                }
                if (sle32(wave_sizze_44784, skip_threads_44795)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44795, local_tid_44782 -
                          squot32(local_tid_44782, 32) * 32) &&
                    (squot32(local_tid_44782, 32) == 0 &&
                     ltid_in_bounds_44792)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43486)[sext_i32_i64(local_tid_44782)] =
                            x_44789;
                        x_44790 = x_44789;
                    }
                }
                if (sle32(wave_sizze_44784, skip_threads_44795)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44795 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44782, 32) == 0 || !ltid_in_bounds_44792)) {
            // read operands
            {
                x_36780 = x_36779;
                x_36779 = ((__local
                            float *) mem_43486)[sext_i32_i64(squot32(local_tid_44782,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44797 =
                     slt64(srem64(sext_i32_i64(local_tid_44782),
                                  iota32_arg_28418),
                           sext_i32_i64(local_tid_44782) -
                           sext_i32_i64(squot32(local_tid_44782, 32) * 32 - 1));
                
                if (inactive_44797) {
                    x_36779 = x_36780;
                }
                if (!inactive_44797) {
                    float defunc_1_op_res_36781 = x_36779 + x_36780;
                    
                    x_36779 = defunc_1_op_res_36781;
                }
            }
            // write final result
            {
                ((__local float *) mem_43486)[sext_i32_i64(local_tid_44782)] =
                    x_36779;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44782, 32) == 0) {
            ((__local float *) mem_43486)[sext_i32_i64(local_tid_44782)] =
                x_36780;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_36800;
    int32_t acc0_36801;
    float acc0_36802;
    int64_t gtid_36539 = sext_i32_i64(ltid_pre_44786);
    int32_t phys_tid_36540 = local_tid_44782;
    __local char *red_arr_mem_44798;
    
    red_arr_mem_44798 = (__local char *) red_arr_mem_44798_backing_1;
    
    __local char *red_arr_mem_44800;
    
    red_arr_mem_44800 = (__local char *) red_arr_mem_44800_backing_2;
    
    __local char *red_arr_mem_44802;
    
    red_arr_mem_44802 = (__local char *) red_arr_mem_44802_backing_3;
    
    float x_36817;
    
    x_36817 = ((__local float *) mem_43486)[gtid_36539];
    
    float x_36818 = ((__global float *) mem_43441)[gtid_36539];
    int32_t index_primexp_40592 = sext_i64_i32(gtid_36539);
    float defunc_0_f_res_36821 = x_36817 / y_36770;
    bool cond_36822 = slt32(index_primexp_40592, y_36767);
    bool isnan_res_36823;
    
    isnan_res_36823 = futrts_isnan32(defunc_0_f_res_36821);
    
    bool cond_t_res_36824 = !isnan_res_36823;
    bool x_36825 = cond_36822 && cond_t_res_36824;
    float abs_res_36826 = (float) fabs(defunc_0_f_res_36821);
    bool defunc_2_f_res_t_res_36827 = x_36818 < abs_res_36826;
    bool x_36828 = x_36825 && defunc_2_f_res_t_res_36827;
    float defunc_1_f_res_36829;
    
    if (cond_36822) {
        defunc_1_f_res_36829 = defunc_0_f_res_36821;
    } else {
        defunc_1_f_res_36829 = 0.0F;
    }
    ((__local bool *) red_arr_mem_44798)[gtid_36539] = x_36828;
    ((__local int32_t *) red_arr_mem_44800)[gtid_36539] = index_primexp_40592;
    ((__local float *) red_arr_mem_44802)[gtid_36539] = defunc_1_f_res_36829;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44804;
    int32_t skip_waves_44805;
    
    skip_waves_44805 = 1;
    
    bool x_36803;
    int32_t x_36804;
    float x_36805;
    bool x_36806;
    int32_t x_36807;
    float x_36808;
    
    offset_44804 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44782, sext_i64_i32(iota32_arg_28418))) {
            x_36803 = ((__local
                        bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782 +
                                                   offset_44804)];
            x_36804 = ((__local
                        int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782 +
                                                      offset_44804)];
            x_36805 = ((__local
                        float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782 +
                                                    offset_44804)];
        }
    }
    offset_44804 = 1;
    while (slt32(offset_44804, wave_sizze_44784)) {
        if (slt32(local_tid_44782 + offset_44804,
                  sext_i64_i32(iota32_arg_28418)) && ((local_tid_44782 -
                                                       squot32(local_tid_44782,
                                                               wave_sizze_44784) *
                                                       wave_sizze_44784) & (2 *
                                                                            offset_44804 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_36806 = ((volatile __local
                            bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782 +
                                                       offset_44804)];
                x_36807 = ((volatile __local
                            int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782 +
                                                          offset_44804)];
                x_36808 = ((volatile __local
                            float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782 +
                                                        offset_44804)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_36809;
                int32_t defunc_1_op_res_36810;
                
                if (x_36803) {
                    defunc_1_op_res_36809 = x_36803;
                    defunc_1_op_res_36810 = x_36804;
                } else {
                    bool x_36811 = x_36806 && x_36806;
                    bool x_36812 = !x_36806;
                    bool y_36813 = x_36803 && x_36812;
                    bool defunc_1_op_res_f_res_36814 = x_36811 || y_36813;
                    int32_t defunc_1_op_res_f_res_36815;
                    
                    if (x_36806) {
                        defunc_1_op_res_f_res_36815 = x_36807;
                    } else {
                        defunc_1_op_res_f_res_36815 = x_36804;
                    }
                    defunc_1_op_res_36809 = defunc_1_op_res_f_res_36814;
                    defunc_1_op_res_36810 = defunc_1_op_res_f_res_36815;
                }
                
                float defunc_1_op_res_36816 = x_36805 + x_36808;
                
                x_36803 = defunc_1_op_res_36809;
                x_36804 = defunc_1_op_res_36810;
                x_36805 = defunc_1_op_res_36816;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782)] =
                    x_36803;
                ((volatile __local
                  int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782)] =
                    x_36804;
                ((volatile __local
                  float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782)] =
                    x_36805;
            }
        }
        offset_44804 *= 2;
    }
    while (slt32(skip_waves_44805, squot32(sext_i64_i32(iota32_arg_28418) +
                                           wave_sizze_44784 - 1,
                                           wave_sizze_44784))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44804 = skip_waves_44805 * wave_sizze_44784;
        if (slt32(local_tid_44782 + offset_44804,
                  sext_i64_i32(iota32_arg_28418)) && ((local_tid_44782 -
                                                       squot32(local_tid_44782,
                                                               wave_sizze_44784) *
                                                       wave_sizze_44784) == 0 &&
                                                      (squot32(local_tid_44782,
                                                               wave_sizze_44784) &
                                                       (2 * skip_waves_44805 -
                                                        1)) == 0)) {
            // read array element
            {
                x_36806 = ((__local
                            bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782 +
                                                       offset_44804)];
                x_36807 = ((__local
                            int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782 +
                                                          offset_44804)];
                x_36808 = ((__local
                            float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782 +
                                                        offset_44804)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_36809;
                int32_t defunc_1_op_res_36810;
                
                if (x_36803) {
                    defunc_1_op_res_36809 = x_36803;
                    defunc_1_op_res_36810 = x_36804;
                } else {
                    bool x_36811 = x_36806 && x_36806;
                    bool x_36812 = !x_36806;
                    bool y_36813 = x_36803 && x_36812;
                    bool defunc_1_op_res_f_res_36814 = x_36811 || y_36813;
                    int32_t defunc_1_op_res_f_res_36815;
                    
                    if (x_36806) {
                        defunc_1_op_res_f_res_36815 = x_36807;
                    } else {
                        defunc_1_op_res_f_res_36815 = x_36804;
                    }
                    defunc_1_op_res_36809 = defunc_1_op_res_f_res_36814;
                    defunc_1_op_res_36810 = defunc_1_op_res_f_res_36815;
                }
                
                float defunc_1_op_res_36816 = x_36805 + x_36808;
                
                x_36803 = defunc_1_op_res_36809;
                x_36804 = defunc_1_op_res_36810;
                x_36805 = defunc_1_op_res_36816;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782)] =
                    x_36803;
                ((__local
                  int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782)] =
                    x_36804;
                ((__local
                  float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782)] =
                    x_36805;
            }
        }
        skip_waves_44805 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_36800 = ((__local bool *) red_arr_mem_44798)[(int64_t) 0];
    acc0_36801 = ((__local int32_t *) red_arr_mem_44800)[(int64_t) 0];
    acc0_36802 = ((__local float *) red_arr_mem_44802)[(int64_t) 0];
    
    bool x_36832 = acc0_36800 && acc0_36800;
    int32_t defunc_1_op_res_f_res_36836;
    
    if (acc0_36800) {
        defunc_1_op_res_f_res_36836 = acc0_36801;
    } else {
        defunc_1_op_res_f_res_36836 = -1;
    }
    
    bool cond_36842 = y_36767 == 0;
    float defunc_0_f_res_36843;
    
    if (cond_36842) {
        defunc_0_f_res_36843 = 0.0F;
    } else {
        float i32_res_36844 = sitofp_i32_f32(y_36767);
        float defunc_0_f_res_f_res_36845 = acc0_36802 / i32_res_36844;
        
        defunc_0_f_res_36843 = defunc_0_f_res_f_res_36845;
    }
    
    bool cond_36846 = !x_36832;
    int32_t fst_breakzq_36847;
    
    if (cond_36846) {
        fst_breakzq_36847 = -1;
    } else {
        bool cond_36848 = slt32(defunc_1_op_res_f_res_36836, y_36767);
        int32_t adjustValInds_res_36849;
        
        if (cond_36848) {
            int32_t i_36850 = add32(x_36761, defunc_1_op_res_f_res_36836);
            int64_t i_36851 = sext_i32_i64(i_36850);
            int32_t x_36852 = ((__global
                                int32_t *) defunc_4_map_res_mem_43336)[gtid_36534 *
                                                                       N_28022 +
                                                                       i_36851];
            int32_t adjustValInds_res_t_res_36853 = sub32(x_36852, n_28026);
            
            adjustValInds_res_36849 = adjustValInds_res_t_res_36853;
        } else {
            adjustValInds_res_36849 = -1;
        }
        fst_breakzq_36847 = adjustValInds_res_36849;
    }
    
    bool cond_36854 = sle32(x_36761, 5);
    bool cond_f_res_36855 = sle32(y_36767, 5);
    bool x_36856 = !cond_36854;
    bool y_36857 = cond_f_res_36855 && x_36856;
    bool cond_36858 = cond_36854 || y_36857;
    int32_t fst_breakzq_36859;
    
    if (cond_36858) {
        fst_breakzq_36859 = -2;
    } else {
        fst_breakzq_36859 = fst_breakzq_36847;
    }
    if (local_tid_44782 == 0) {
        ((__global int32_t *) mem_43489)[gtid_36534] = fst_breakzq_36859;
    }
    if (local_tid_44782 == 0) {
        ((__global float *) mem_43491)[gtid_36534] = defunc_0_f_res_36843;
    }
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_40730(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42637_backing_aligned_0,
                                                     int64_t m_28023,
                                                     int32_t n_28026,
                                                     int64_t i32_res_28038,
                                                     int64_t Ty_40718,
                                                     int64_t Tx_40719,
                                                     int64_t gridDim_x_40720,
                                                     int64_t gridDim_y_40721,
                                                     int64_t group_sizze_tile3d_40725,
                                                     int64_t count_shmem_40726,
                                                     __global
                                                     unsigned char *mem_42550,
                                                     __global
                                                     unsigned char *mem_42554,
                                                     __global
                                                     unsigned char *mem_42625,
                                                     __global
                                                     unsigned char *mem_42685)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42637_backing_0 = (__local volatile
                                                           char *) mem_42637_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43879;
    int32_t local_tid_43880;
    int64_t group_sizze_43883;
    int32_t wave_sizze_43882;
    int32_t group_tid_43881;
    
    global_tid_43879 = get_global_id(0);
    local_tid_43880 = get_local_id(0);
    group_sizze_43883 = get_local_size(0);
    wave_sizze_43882 = LOCKSTEP_WIDTH;
    group_tid_43881 = get_group_id(0);
    
    int32_t gid_flat_40730;
    
    gid_flat_40730 = group_tid_43881;
    
    int32_t ltid_pre_43884;
    
    ltid_pre_43884 = squot32(local_tid_43880, sext_i64_i32(Ty_40718) *
                             sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43885;
    
    ltid_pre_43885 = squot32(local_tid_43880 - squot32(local_tid_43880,
                                                       sext_i64_i32(Ty_40718) *
                                                       sext_i64_i32(Tx_40719)) *
                             (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)),
                             sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43886;
    
    ltid_pre_43886 = local_tid_43880 - squot32(local_tid_43880,
                                               sext_i64_i32(Ty_40718) *
                                               sext_i64_i32(Tx_40719)) *
        (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)) -
        squot32(local_tid_43880 - squot32(local_tid_43880,
                                          sext_i64_i32(Ty_40718) *
                                          sext_i64_i32(Tx_40719)) *
                (sext_i64_i32(Ty_40718) * sext_i64_i32(Tx_40719)),
                sext_i64_i32(Tx_40719)) * sext_i64_i32(Tx_40719);
    
    int32_t ltid_pre_43887;
    
    ltid_pre_43887 = squot32(local_tid_43880, sext_i64_i32(Tx_40719));
    
    int32_t ltid_pre_43888;
    
    ltid_pre_43888 = local_tid_43880 - squot32(local_tid_43880,
                                               sext_i64_i32(Tx_40719)) *
        sext_i64_i32(Tx_40719);
    
    int32_t ltid_pre_43889;
    
    ltid_pre_43889 = local_tid_43880;
    
    int64_t gid_zz_40729;
    
    gid_zz_40729 = squot64(sext_i32_i64(group_tid_43881), gridDim_y_40721 *
                           gridDim_x_40720);
    
    int64_t gid_y_40728;
    
    gid_y_40728 = squot64(sext_i32_i64(group_tid_43881) -
                          squot64(sext_i32_i64(group_tid_43881),
                                  gridDim_y_40721 * gridDim_x_40720) *
                          (gridDim_y_40721 * gridDim_x_40720), gridDim_x_40720);
    
    int64_t gid_x_40727;
    
    gid_x_40727 = sext_i32_i64(group_tid_43881) -
        squot64(sext_i32_i64(group_tid_43881), gridDim_y_40721 *
                gridDim_x_40720) * (gridDim_y_40721 * gridDim_x_40720) -
        squot64(sext_i32_i64(group_tid_43881) -
                squot64(sext_i32_i64(group_tid_43881), gridDim_y_40721 *
                        gridDim_x_40720) * (gridDim_y_40721 * gridDim_x_40720),
                gridDim_x_40720) * gridDim_x_40720;
    
    int64_t ii_40731;
    
    ii_40731 = (int64_t) 30 * gid_zz_40729;
    
    int64_t jj1_40732 = Ty_40718 * gid_y_40728;
    int64_t jj2_40733 = Tx_40719 * gid_x_40727;
    float mem_42635[30];
    int64_t ltid_y_40736 = sext_i32_i64(ltid_pre_43887);
    int64_t ltid_x_40734 = sext_i32_i64(ltid_pre_43888);
    int32_t ltid_flat_40735 = local_tid_43880;
    float mem_42629[30];
    
    for (int32_t i_42427 = 0; i_42427 < 30; i_42427++) {
        int64_t i_40744 = sext_i32_i64(i_42427);
        
        mem_42629[i_40744] = 0.0F;
    }
    for (int64_t i_43891 = 0; i_43891 < (int64_t) 30; i_43891++) {
        mem_42635[i_43891] = mem_42629[i_43891];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42637;
    
    mem_42637 = (__local char *) mem_42637_backing_0;
    
    float loop_mem_42667[30];
    float mem_param_42638[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42638[i_1] = mem_42635[i_1];
    for (int32_t i_42429 = 0; i_42429 < n_28026; i_42429++) {
        int64_t i_40749 = sext_i32_i64(i_42429);
        
        for (int64_t i_40752 = 0; i_40752 < count_shmem_40726; i_40752++) {
            int64_t offs_40765 = group_sizze_tile3d_40725 * i_40752;
            int64_t ltid_40755 = sext_i32_i64(ltid_pre_43889);
            int32_t ltid_flat_40754 = local_tid_43880;
            int64_t loc_ind_40766 = ltid_40755 + offs_40765;
            int64_t gtid_40767 = ii_40731 + loc_ind_40766;
            bool cond_40768 = slt64(gtid_40767, m_28023);
            float y_elem_40769;
            
            if (cond_40768) {
                float Y_elem_40771 = ((__global float *) mem_42625)[i_40749 *
                                                                    m_28023 +
                                                                    gtid_40767];
                
                y_elem_40769 = Y_elem_40771;
            } else {
                y_elem_40769 = 0.0F;
            }
            
            bool cond_40773 = slt64(loc_ind_40766, (int64_t) 30);
            int64_t y_loc_ind_40774;
            
            if (cond_40773) {
                y_loc_ind_40774 = loc_ind_40766;
            } else {
                y_loc_ind_40774 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_40774) && slt64(y_loc_ind_40774,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42637)[y_loc_ind_40774] = y_elem_40769;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42666[30];
        int64_t ltid_y_40780 = sext_i32_i64(ltid_pre_43887);
        int64_t ltid_x_40778 = sext_i32_i64(ltid_pre_43888);
        int32_t ltid_flat_40779 = local_tid_43880;
        int64_t gtid_40807 = jj1_40732 + ltid_y_40780;
        int64_t gtid_40808 = jj2_40733 + ltid_x_40778;
        bool binop_x_40810 = slt64(gtid_40807, i32_res_28038);
        bool binop_y_40811 = slt64(gtid_40808, i32_res_28038);
        bool cond_40812 = binop_x_40810 && binop_y_40811;
        float mem_43607[30];
        
        if (cond_40812) {
            float x_40815 = ((__global float *) mem_42550)[i_40749 *
                                                           i32_res_28038 +
                                                           gtid_40807];
            float x_40817 = ((__global float *) mem_42554)[i_40749 *
                                                           i32_res_28038 +
                                                           gtid_40808];
            
            for (int32_t i_42428 = 0; i_42428 < 30; i_42428++) {
                int64_t i_40819 = sext_i32_i64(i_42428);
                int64_t gtid_40821 = ii_40731 + i_40819;
                bool cond_40822 = slt64(gtid_40821, m_28023);
                
                if (cond_40822) {
                    float inp_reg_var2zz_40824 = ((__local
                                                   float *) mem_42637)[i_40819];
                    float res_reg_var2zz_40825 = mem_param_42638[i_40819];
                    float x_40829 = x_40815 * x_40817;
                    bool isnan_res_40830;
                    
                    isnan_res_40830 = futrts_isnan32(inp_reg_var2zz_40824);
                    
                    float y_40831;
                    
                    if (isnan_res_40830) {
                        y_40831 = 0.0F;
                    } else {
                        y_40831 = 1.0F;
                    }
                    
                    float defunc_2_f_res_40832 = x_40829 * y_40831;
                    float defunc_1_op_res_40836 = res_reg_var2zz_40825 +
                          defunc_2_f_res_40832;
                    
                    mem_param_42638[i_40819] = defunc_1_op_res_40836;
                }
            }
            for (int64_t i_43897 = 0; i_43897 < (int64_t) 30; i_43897++) {
                mem_43607[i_43897] = mem_param_42638[i_43897];
            }
        } else {
            for (int64_t i_43898 = 0; i_43898 < (int64_t) 30; i_43898++) {
                mem_43607[i_43898] = mem_param_42638[i_43898];
            }
        }
        for (int64_t i_43899 = 0; i_43899 < (int64_t) 30; i_43899++) {
            mem_42666[i_43899] = mem_43607[i_43899];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_43892[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_43892[i_2] = mem_42666[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42638[i_3] = mem_param_tmp_43892[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42667[i_4] = mem_param_42638[i_4];
    
    float mem_42681[30 * 1 * 1];
    int64_t ltid_zz_40845 = sext_i32_i64(ltid_pre_43884);
    int64_t ltid_y_40844 = sext_i32_i64(ltid_pre_43885);
    int64_t ltid_x_40842 = sext_i32_i64(ltid_pre_43886);
    int32_t ltid_flat_40843 = local_tid_43880;
    float mem_42675[30 * 1 * 1];
    
    for (int32_t i_42431 = 0; i_42431 < 30; i_42431++) {
        int64_t i_40854 = sext_i32_i64(i_42431);
        
        for (int64_t i_43901 = 0; i_43901 < (int64_t) 1; i_43901++) {
            mem_42675[i_40854 + i_43901] = loop_mem_42667[i_40854 + i_43901];
        }
    }
    for (int64_t i_43902 = 0; i_43902 < (int64_t) 30; i_43902++) {
        for (int64_t i_43903 = 0; i_43903 < (int64_t) 1; i_43903++) {
            for (int64_t i_43904 = 0; i_43904 < (int64_t) 1; i_43904++) {
                mem_42681[i_43902 + i_43903 + i_43904] = mem_42675[i_43902 +
                                                                   i_43903 +
                                                                   i_43904];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_43905 = squot64(sext_i32_i64(local_tid_43880), Ty_40718 *
                                       Tx_40719);
    int64_t reg_tile_i_43906 = squot64(sext_i32_i64(local_tid_43880) -
                                       squot64(sext_i32_i64(local_tid_43880),
                                               Ty_40718 * Tx_40719) *
                                       (Ty_40718 * Tx_40719), Tx_40719);
    int64_t reg_tile_i_43907 = sext_i32_i64(local_tid_43880) -
            squot64(sext_i32_i64(local_tid_43880), Ty_40718 * Tx_40719) *
            (Ty_40718 * Tx_40719) - squot64(sext_i32_i64(local_tid_43880) -
                                            squot64(sext_i32_i64(local_tid_43880),
                                                    Ty_40718 * Tx_40719) *
                                            (Ty_40718 * Tx_40719), Tx_40719) *
            Tx_40719;
    int64_t tile_dim_start_43908 = (int64_t) 30 * (gid_zz_40729 +
                                                   reg_tile_i_43905);
    int64_t tile_dim_start_43909 = Ty_40718 * gid_y_40728 + reg_tile_i_43906;
    int64_t tile_dim_start_43910 = Tx_40719 * gid_x_40727 + reg_tile_i_43907;
    
    for (int64_t nest_i_43911 = 0; nest_i_43911 < (int64_t) 30;
         nest_i_43911++) {
        for (int64_t nest_i_43912 = 0; nest_i_43912 < (int64_t) 1;
             nest_i_43912++) {
            for (int64_t nest_i_43913 = 0; nest_i_43913 < (int64_t) 1;
                 nest_i_43913++) {
                if ((slt64(tile_dim_start_43908 + nest_i_43911, m_28023) &&
                     slt64(tile_dim_start_43909 + nest_i_43912,
                           i32_res_28038)) && slt64(tile_dim_start_43910 +
                                                    nest_i_43913,
                                                    i32_res_28038)) {
                    ((__global float *) mem_42685)[(tile_dim_start_43908 +
                                                    nest_i_43911) *
                                                   (i32_res_28038 *
                                                    i32_res_28038) +
                                                   (tile_dim_start_43909 +
                                                    nest_i_43912) *
                                                   i32_res_28038 +
                                                   (tile_dim_start_43910 +
                                                    nest_i_43913)] =
                        mem_42681[nest_i_43911 + nest_i_43912 + nest_i_43913];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_40883(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42825_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_42823_backing_aligned_1,
                                                     int64_t N_28022,
                                                     int64_t m_28023,
                                                     int64_t i32_res_28032,
                                                     int64_t i32_res_28038,
                                                     int64_t gridDim_x_40877,
                                                     int64_t full_tiles_40908,
                                                     int64_t kk_41115, __global
                                                     unsigned char *images_mem_42538,
                                                     __global
                                                     unsigned char *mem_42550,
                                                     __global
                                                     unsigned char *mem_42997)
{
    #define Ty_40864 (mainMagnitudeziTy_40861)
    #define Ry_40865 (mainMagnitudeziRy_40863)
    #define Tx_40866 (mainMagnitudeziTx_40860)
    #define Rx_40867 (mainMagnitudeziRx_40862)
    #define Tk_40868 (mainMagnitudeziTk_40859)
    #define tk_div_tx_40869 (sdiv_up64(mainMagnitudeziTk_40859, mainMagnitudeziTx_40860))
    #define tk_div_ty_40870 (sdiv_up64(mainMagnitudeziTk_40859, mainMagnitudeziTy_40861))
    #define TxRx_40871 (mainMagnitudeziTx_40860 * mainMagnitudeziRx_40862)
    #define TyRy_40872 (mainMagnitudeziTy_40861 * mainMagnitudeziRy_40863)
    #define a_loc_szz_40874 (mainMagnitudeziTk_40859 * (mainMagnitudeziTy_40861 * mainMagnitudeziRy_40863))
    #define b_loc_szz_40876 (mainMagnitudeziRx_40862 * (mainMagnitudeziTx_40860 * mainMagnitudeziTk_40859))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42825_backing_1 = (__local volatile
                                                           char *) mem_42825_backing_aligned_0;
    __local volatile char *restrict mem_42823_backing_0 = (__local volatile
                                                           char *) mem_42823_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44054;
    int32_t local_tid_44055;
    int64_t group_sizze_44058;
    int32_t wave_sizze_44057;
    int32_t group_tid_44056;
    
    global_tid_44054 = get_global_id(0);
    local_tid_44055 = get_local_id(0);
    group_sizze_44058 = get_local_size(0);
    wave_sizze_44057 = LOCKSTEP_WIDTH;
    group_tid_44056 = get_group_id(0);
    
    int32_t gid_flat_40883;
    
    gid_flat_40883 = group_tid_44056;
    
    int32_t ltid_pre_44059;
    
    ltid_pre_44059 = squot32(local_tid_44055, sext_i64_i32(Tx_40866));
    
    int32_t ltid_pre_44060;
    
    ltid_pre_44060 = local_tid_44055 - squot32(local_tid_44055,
                                               sext_i64_i32(Tx_40866)) *
        sext_i64_i32(Tx_40866);
    
    int64_t gid_y_40882;
    
    gid_y_40882 = squot64(sext_i32_i64(group_tid_44056), gridDim_x_40877);
    
    int64_t gid_x_40881;
    
    gid_x_40881 = sext_i32_i64(group_tid_44056) -
        squot64(sext_i32_i64(group_tid_44056), gridDim_x_40877) *
        gridDim_x_40877;
    
    int64_t iii_40884;
    
    iii_40884 = TyRy_40872 * gid_y_40882;
    
    int64_t jjj_40885 = TxRx_40871 * gid_x_40881;
    float mem_42821[Ry_40865 * Rx_40867];
    int64_t ltid_y_40888 = sext_i32_i64(ltid_pre_44059);
    int64_t ltid_x_40886 = sext_i32_i64(ltid_pre_44060);
    int32_t ltid_flat_40887 = local_tid_44055;
    float mem_42812[Ry_40865 * Rx_40867];
    
    for (int64_t i_40899 = 0; i_40899 < Ry_40865; i_40899++) {
        for (int64_t i_40902 = 0; i_40902 < Rx_40867; i_40902++) {
            mem_42812[i_40899 * Rx_40867 + i_40902] = 0.0F;
        }
    }
    for (int64_t i_44063 = 0; i_44063 < Ry_40865; i_44063++) {
        for (int64_t i_44064 = 0; i_44064 < Rx_40867; i_44064++) {
            mem_42821[i_44063 * Rx_40867 + i_44064] = mem_42812[i_44063 *
                                                                Rx_40867 +
                                                                i_44064];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42823;
    
    mem_42823 = (__local char *) mem_42823_backing_0;
    
    __local char *mem_42825;
    
    mem_42825 = (__local char *) mem_42825_backing_1;
    
    float mem_42896[Ry_40865];
    float mem_42900[Rx_40867];
    float loop_mem_42912[Ry_40865 * Rx_40867];
    float mem_param_42826[Ry_40865 * Rx_40867];
    
    for (int32_t i_2 = 0; i_2 < Ry_40865 * Rx_40867; i_2++)
        mem_param_42826[i_2] = mem_42821[i_2];
    for (int64_t i_40909 = 0; i_40909 < full_tiles_40908; i_40909++) {
        int64_t kk_40913 = Tk_40868 * i_40909;
        
        for (int64_t i_40914 = 0; i_40914 < Ry_40865; i_40914++) {
            int64_t binop_y_40937 = Ty_40864 * i_40914;
            
            for (int64_t i_40916 = 0; i_40916 < tk_div_tx_40869; i_40916++) {
                int64_t binop_y_40935 = Tx_40866 * i_40916;
                int64_t ltid_x_40918 = sext_i32_i64(ltid_pre_44059);
                int64_t ltid_y_40919 = sext_i32_i64(ltid_pre_44060);
                int32_t ltid_flat_40920 = local_tid_44055;
                int64_t k_40936 = ltid_y_40919 + binop_y_40935;
                int64_t i_40938 = ltid_x_40918 + binop_y_40937;
                int64_t gtid_40939 = iii_40884 + i_40938;
                int64_t A_col_idx_40940 = kk_40913 + k_40936;
                bool cond_40941 = slt64(gtid_40939, m_28023);
                float A_elem_40942;
                
                if (cond_40941) {
                    float A_elem_40944 = ((__global
                                           float *) images_mem_42538)[gtid_40939 *
                                                                      N_28022 +
                                                                      A_col_idx_40940];
                    
                    A_elem_40942 = A_elem_40944;
                } else {
                    A_elem_40942 = 0.0F;
                }
                
                bool cond_40946 = slt64(k_40936, Tk_40868);
                int64_t a_loc_ind_40947;
                
                if (cond_40946) {
                    int64_t binop_y_40948 = Tk_40868 * i_40938;
                    int64_t loc_fi_40949 = k_40936 + binop_y_40948;
                    
                    a_loc_ind_40947 = loc_fi_40949;
                } else {
                    a_loc_ind_40947 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_40947) &&
                    slt64(a_loc_ind_40947, a_loc_szz_40874)) {
                    ((__local float *) mem_42823)[a_loc_ind_40947] =
                        A_elem_40942;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_40954 = 0; i_40954 < tk_div_ty_40870; i_40954++) {
            int64_t binop_y_40975 = Ty_40864 * i_40954;
            
            for (int64_t i_40956 = 0; i_40956 < Rx_40867; i_40956++) {
                int64_t binop_y_40977 = Tx_40866 * i_40956;
                int64_t ltid_x_40958 = sext_i32_i64(ltid_pre_44059);
                int64_t ltid_y_40959 = sext_i32_i64(ltid_pre_44060);
                int32_t ltid_flat_40960 = local_tid_44055;
                int64_t k_40976 = ltid_x_40958 + binop_y_40975;
                int64_t j_40978 = ltid_y_40959 + binop_y_40977;
                int64_t gtid_40979 = jjj_40885 + j_40978;
                int64_t B_row_idx_40980 = kk_40913 + k_40976;
                bool cond_40981 = slt64(gtid_40979, i32_res_28038);
                float B_elem_40982;
                
                if (cond_40981) {
                    float B_elem_40984 = ((__global
                                           float *) mem_42550)[B_row_idx_40980 *
                                                               i32_res_28038 +
                                                               gtid_40979];
                    
                    B_elem_40982 = B_elem_40984;
                } else {
                    B_elem_40982 = 0.0F;
                }
                
                bool cond_40986 = slt64(k_40976, Tk_40868);
                int64_t b_loc_ind_40987;
                
                if (cond_40986) {
                    int64_t binop_y_40988 = TxRx_40871 * k_40976;
                    int64_t loc_fi_40989 = j_40978 + binop_y_40988;
                    
                    b_loc_ind_40987 = loc_fi_40989;
                } else {
                    b_loc_ind_40987 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_40987) &&
                    slt64(b_loc_ind_40987, b_loc_szz_40876)) {
                    ((__local float *) mem_42825)[b_loc_ind_40987] =
                        B_elem_40982;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_42911[Ry_40865 * Rx_40867];
        float mem_param_42883[Ry_40865 * Rx_40867];
        
        for (int32_t i_3 = 0; i_3 < Ry_40865 * Rx_40867; i_3++)
            mem_param_42883[i_3] = mem_param_42826[i_3];
        for (int64_t i_40994 = 0; i_40994 < Tk_40868; i_40994++) {
            int64_t binop_y_41033 = TxRx_40871 * i_40994;
            int64_t ltid_y_40998 = sext_i32_i64(ltid_pre_44059);
            int64_t ltid_x_40996 = sext_i32_i64(ltid_pre_44060);
            int32_t ltid_flat_40997 = local_tid_44055;
            float mem_42886[Ry_40865];
            float mem_42888[Rx_40867];
            int64_t binop_x_41024 = Ry_40865 * ltid_y_40998;
            
            for (int64_t i_41022 = 0; i_41022 < Ry_40865; i_41022++) {
                int64_t binop_x_41025 = i_41022 + binop_x_41024;
                int64_t binop_y_41026 = Tk_40868 * binop_x_41025;
                int64_t a_loc_ind_41027 = i_40994 + binop_y_41026;
                
                for (int64_t i_44076 = 0; i_44076 < (int64_t) 1; i_44076++) {
                    mem_42886[i_41022 + i_44076] = ((__local
                                                     float *) mem_42823)[a_loc_ind_41027 +
                                                                         i_44076];
                }
            }
            
            int64_t binop_y_41035 = Rx_40867 * ltid_x_40996;
            
            for (int64_t i_41031 = 0; i_41031 < Rx_40867; i_41031++) {
                int64_t binop_x_41034 = i_41031 + binop_y_41033;
                int64_t b_loc_ind_41036 = binop_x_41034 + binop_y_41035;
                
                for (int64_t i_44078 = 0; i_44078 < (int64_t) 1; i_44078++) {
                    mem_42888[i_41031 + i_44078] = ((__local
                                                     float *) mem_42825)[b_loc_ind_41036 +
                                                                         i_44078];
                }
            }
            for (int64_t i_44079 = 0; i_44079 < Ry_40865; i_44079++) {
                mem_42896[i_44079] = mem_42886[i_44079];
            }
            for (int64_t i_44080 = 0; i_44080 < Rx_40867; i_44080++) {
                mem_42900[i_44080] = mem_42888[i_44080];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_42910[Ry_40865 * Rx_40867];
            int64_t ltid_y_41043 = sext_i32_i64(ltid_pre_44059);
            int64_t ltid_x_41041 = sext_i32_i64(ltid_pre_44060);
            int32_t ltid_flat_41042 = local_tid_44055;
            int64_t binop_y_41086 = Ry_40865 * ltid_y_41043;
            int64_t binop_y_41090 = Rx_40867 * ltid_x_41041;
            
            for (int64_t i_41080 = 0; i_41080 < Ry_40865; i_41080++) {
                int64_t binop_x_41085 = iii_40884 + i_41080;
                int64_t cmpop_x_41087 = binop_x_41085 + binop_y_41086;
                bool binop_x_41088 = slt64(cmpop_x_41087, m_28023);
                
                for (int64_t i_41083 = 0; i_41083 < Rx_40867; i_41083++) {
                    int64_t binop_x_41089 = jjj_40885 + i_41083;
                    int64_t cmpop_x_41091 = binop_x_41089 + binop_y_41090;
                    bool binop_y_41092 = slt64(cmpop_x_41091, i32_res_28038);
                    bool cond_41093 = binop_x_41088 && binop_y_41092;
                    
                    if (cond_41093) {
                        float a_41095 = mem_42896[i_41080];
                        float c_41097 = mem_param_42883[i_41080 * Rx_40867 +
                                                        i_41083];
                        bool isnan_res_41100;
                        
                        isnan_res_41100 = futrts_isnan32(a_41095);
                        
                        float defunc_1_f_res_41101;
                        
                        if (isnan_res_41100) {
                            defunc_1_f_res_41101 = 0.0F;
                        } else {
                            float b_41096 = mem_42900[i_41083];
                            float defunc_1_f_res_f_res_41102 = a_41095 *
                                  b_41096;
                            
                            defunc_1_f_res_41101 = defunc_1_f_res_f_res_41102;
                        }
                        
                        float defunc_1_op_res_41106 = c_41097 +
                              defunc_1_f_res_41101;
                        
                        mem_param_42883[i_41080 * Rx_40867 + i_41083] =
                            defunc_1_op_res_41106;
                    }
                }
            }
            for (int64_t i_44083 = 0; i_44083 < Ry_40865; i_44083++) {
                for (int64_t i_44084 = 0; i_44084 < Rx_40867; i_44084++) {
                    mem_42910[i_44083 * Rx_40867 + i_44084] =
                        mem_param_42883[i_44083 * Rx_40867 + i_44084];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44073[Ry_40865 * Rx_40867];
            
            for (int32_t i_4 = 0; i_4 < Ry_40865 * Rx_40867; i_4++)
                mem_param_tmp_44073[i_4] = mem_42910[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_40865 * Rx_40867; i_5++)
                mem_param_42883[i_5] = mem_param_tmp_44073[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_40865 * Rx_40867; i_6++)
            loop_mem_42911[i_6] = mem_param_42883[i_6];
        
        float mem_param_tmp_44065[Ry_40865 * Rx_40867];
        
        for (int32_t i_7 = 0; i_7 < Ry_40865 * Rx_40867; i_7++)
            mem_param_tmp_44065[i_7] = loop_mem_42911[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_40865 * Rx_40867; i_8++)
            mem_param_42826[i_8] = mem_param_tmp_44065[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_40865 * Rx_40867; i_9++)
        loop_mem_42912[i_9] = mem_param_42826[i_9];
    for (int64_t i_41116 = 0; i_41116 < Ry_40865; i_41116++) {
        int64_t binop_y_41141 = Ty_40864 * i_41116;
        
        for (int64_t i_41118 = 0; i_41118 < tk_div_tx_40869; i_41118++) {
            int64_t binop_y_41139 = Tx_40866 * i_41118;
            int64_t ltid_x_41120 = sext_i32_i64(ltid_pre_44059);
            int64_t ltid_y_41121 = sext_i32_i64(ltid_pre_44060);
            int32_t ltid_flat_41122 = local_tid_44055;
            int64_t k_41140 = ltid_y_41121 + binop_y_41139;
            int64_t i_41142 = ltid_x_41120 + binop_y_41141;
            int64_t gtid_41143 = iii_40884 + i_41142;
            int64_t A_col_idx_41144 = kk_41115 + k_41140;
            bool binop_x_41145 = slt64(gtid_41143, m_28023);
            bool binop_y_41146 = slt64(A_col_idx_41144, i32_res_28032);
            bool cond_41147 = binop_x_41145 && binop_y_41146;
            float A_elem_41148;
            
            if (cond_41147) {
                float A_elem_41150 = ((__global
                                       float *) images_mem_42538)[gtid_41143 *
                                                                  N_28022 +
                                                                  A_col_idx_41144];
                
                A_elem_41148 = A_elem_41150;
            } else {
                A_elem_41148 = 0.0F;
            }
            
            bool cond_41152 = slt64(k_41140, Tk_40868);
            int64_t a_loc_ind_41153;
            
            if (cond_41152) {
                int64_t binop_y_41154 = Tk_40868 * i_41142;
                int64_t loc_fi_41155 = k_41140 + binop_y_41154;
                
                a_loc_ind_41153 = loc_fi_41155;
            } else {
                a_loc_ind_41153 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41153) && slt64(a_loc_ind_41153,
                                                             a_loc_szz_40874)) {
                ((__local float *) mem_42823)[a_loc_ind_41153] = A_elem_41148;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41160 = 0; i_41160 < tk_div_ty_40870; i_41160++) {
        int64_t binop_y_41183 = Ty_40864 * i_41160;
        
        for (int64_t i_41162 = 0; i_41162 < Rx_40867; i_41162++) {
            int64_t binop_y_41185 = Tx_40866 * i_41162;
            int64_t ltid_x_41164 = sext_i32_i64(ltid_pre_44059);
            int64_t ltid_y_41165 = sext_i32_i64(ltid_pre_44060);
            int32_t ltid_flat_41166 = local_tid_44055;
            int64_t k_41184 = ltid_x_41164 + binop_y_41183;
            int64_t j_41186 = ltid_y_41165 + binop_y_41185;
            int64_t gtid_41187 = jjj_40885 + j_41186;
            int64_t B_row_idx_41188 = kk_41115 + k_41184;
            bool binop_x_41189 = slt64(gtid_41187, i32_res_28038);
            bool binop_y_41190 = slt64(B_row_idx_41188, i32_res_28032);
            bool cond_41191 = binop_x_41189 && binop_y_41190;
            float B_elem_41192;
            
            if (cond_41191) {
                float B_elem_41194 = ((__global
                                       float *) mem_42550)[B_row_idx_41188 *
                                                           i32_res_28038 +
                                                           gtid_41187];
                
                B_elem_41192 = B_elem_41194;
            } else {
                B_elem_41192 = 0.0F;
            }
            
            bool cond_41196 = slt64(k_41184, Tk_40868);
            int64_t b_loc_ind_41197;
            
            if (cond_41196) {
                int64_t binop_y_41198 = TxRx_40871 * k_41184;
                int64_t loc_fi_41199 = j_41186 + binop_y_41198;
                
                b_loc_ind_41197 = loc_fi_41199;
            } else {
                b_loc_ind_41197 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41197) && slt64(b_loc_ind_41197,
                                                             b_loc_szz_40876)) {
                ((__local float *) mem_42825)[b_loc_ind_41197] = B_elem_41192;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_42978[Ry_40865];
    float mem_42982[Rx_40867];
    float mem_42992[Ry_40865 * Rx_40867];
    float loop_mem_42994[Ry_40865 * Rx_40867];
    float mem_param_42965[Ry_40865 * Rx_40867];
    
    for (int32_t i_10 = 0; i_10 < Ry_40865 * Rx_40867; i_10++)
        mem_param_42965[i_10] = loop_mem_42912[i_10];
    for (int64_t i_41204 = 0; i_41204 < Tk_40868; i_41204++) {
        int64_t cmpop_x_41206 = kk_41115 + i_41204;
        bool cond_41207 = slt64(cmpop_x_41206, i32_res_28032);
        float mem_43625[Ry_40865 * Rx_40867];
        
        if (cond_41207) {
            int64_t binop_y_41245 = TxRx_40871 * i_41204;
            int64_t bytes_42967 = (int64_t) 4 * Ry_40865;
            int64_t bytes_42969 = (int64_t) 4 * Rx_40867;
            int64_t ltid_y_41210 = sext_i32_i64(ltid_pre_44059);
            int64_t ltid_x_41208 = sext_i32_i64(ltid_pre_44060);
            int32_t ltid_flat_41209 = local_tid_44055;
            float mem_42968[Ry_40865];
            float mem_42970[Rx_40867];
            int64_t binop_x_41236 = Ry_40865 * ltid_y_41210;
            
            for (int64_t i_41234 = 0; i_41234 < Ry_40865; i_41234++) {
                int64_t binop_x_41237 = i_41234 + binop_x_41236;
                int64_t binop_y_41238 = Tk_40868 * binop_x_41237;
                int64_t a_loc_ind_41239 = i_41204 + binop_y_41238;
                
                for (int64_t i_44092 = 0; i_44092 < (int64_t) 1; i_44092++) {
                    mem_42968[i_41234 + i_44092] = ((__local
                                                     float *) mem_42823)[a_loc_ind_41239 +
                                                                         i_44092];
                }
            }
            
            int64_t binop_y_41247 = Rx_40867 * ltid_x_41208;
            
            for (int64_t i_41243 = 0; i_41243 < Rx_40867; i_41243++) {
                int64_t binop_x_41246 = i_41243 + binop_y_41245;
                int64_t b_loc_ind_41248 = binop_x_41246 + binop_y_41247;
                
                for (int64_t i_44094 = 0; i_44094 < (int64_t) 1; i_44094++) {
                    mem_42970[i_41243 + i_44094] = ((__local
                                                     float *) mem_42825)[b_loc_ind_41248 +
                                                                         i_44094];
                }
            }
            for (int64_t i_44095 = 0; i_44095 < Ry_40865; i_44095++) {
                mem_42978[i_44095] = mem_42968[i_44095];
            }
            for (int64_t i_44096 = 0; i_44096 < Rx_40867; i_44096++) {
                mem_42982[i_44096] = mem_42970[i_44096];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41255 = sext_i32_i64(ltid_pre_44059);
            int64_t ltid_x_41253 = sext_i32_i64(ltid_pre_44060);
            int32_t ltid_flat_41254 = local_tid_44055;
            int64_t binop_y_41298 = Ry_40865 * ltid_y_41255;
            int64_t binop_y_41302 = Rx_40867 * ltid_x_41253;
            
            for (int64_t i_41292 = 0; i_41292 < Ry_40865; i_41292++) {
                int64_t binop_x_41297 = iii_40884 + i_41292;
                int64_t cmpop_x_41299 = binop_x_41297 + binop_y_41298;
                bool binop_x_41300 = slt64(cmpop_x_41299, m_28023);
                
                for (int64_t i_41295 = 0; i_41295 < Rx_40867; i_41295++) {
                    int64_t binop_x_41301 = jjj_40885 + i_41295;
                    int64_t cmpop_x_41303 = binop_x_41301 + binop_y_41302;
                    bool binop_y_41304 = slt64(cmpop_x_41303, i32_res_28038);
                    bool cond_41305 = binop_x_41300 && binop_y_41304;
                    
                    if (cond_41305) {
                        float a_41307 = mem_42978[i_41292];
                        float c_41309 = mem_param_42965[i_41292 * Rx_40867 +
                                                        i_41295];
                        bool isnan_res_41312;
                        
                        isnan_res_41312 = futrts_isnan32(a_41307);
                        
                        float defunc_1_f_res_41313;
                        
                        if (isnan_res_41312) {
                            defunc_1_f_res_41313 = 0.0F;
                        } else {
                            float b_41308 = mem_42982[i_41295];
                            float defunc_1_f_res_f_res_41314 = a_41307 *
                                  b_41308;
                            
                            defunc_1_f_res_41313 = defunc_1_f_res_f_res_41314;
                        }
                        
                        float defunc_1_op_res_41318 = c_41309 +
                              defunc_1_f_res_41313;
                        
                        mem_param_42965[i_41292 * Rx_40867 + i_41295] =
                            defunc_1_op_res_41318;
                    }
                }
            }
            for (int64_t i_44099 = 0; i_44099 < Ry_40865; i_44099++) {
                for (int64_t i_44100 = 0; i_44100 < Rx_40867; i_44100++) {
                    mem_42992[i_44099 * Rx_40867 + i_44100] =
                        mem_param_42965[i_44099 * Rx_40867 + i_44100];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44101 = 0; i_44101 < Ry_40865; i_44101++) {
                for (int64_t i_44102 = 0; i_44102 < Rx_40867; i_44102++) {
                    mem_43625[i_44101 * Rx_40867 + i_44102] =
                        mem_42992[i_44101 * Rx_40867 + i_44102];
                }
            }
        } else {
            for (int64_t i_44103 = 0; i_44103 < Ry_40865; i_44103++) {
                for (int64_t i_44104 = 0; i_44104 < Rx_40867; i_44104++) {
                    mem_43625[i_44103 * Rx_40867 + i_44104] =
                        mem_param_42965[i_44103 * Rx_40867 + i_44104];
                }
            }
        }
        
        float mem_param_tmp_44089[Ry_40865 * Rx_40867];
        
        for (int32_t i_11 = 0; i_11 < Ry_40865 * Rx_40867; i_11++)
            mem_param_tmp_44089[i_11] = mem_43625[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_40865 * Rx_40867; i_12++)
            mem_param_42965[i_12] = mem_param_tmp_44089[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_40865 * Rx_40867; i_13++)
        loop_mem_42994[i_13] = mem_param_42965[i_13];
    
    int64_t reg_tile_i_44105 = squot64(sext_i32_i64(local_tid_44055), Tx_40866);
    int64_t reg_tile_i_44106 = sext_i32_i64(local_tid_44055) -
            squot64(sext_i32_i64(local_tid_44055), Tx_40866) * Tx_40866;
    int64_t tile_dim_start_44107 = Ry_40865 * (Ty_40864 * gid_y_40882 +
                                               reg_tile_i_44105);
    int64_t tile_dim_start_44108 = Rx_40867 * (Tx_40866 * gid_x_40881 +
                                               reg_tile_i_44106);
    
    for (int64_t nest_i_44109 = 0; nest_i_44109 < Ry_40865; nest_i_44109++) {
        for (int64_t nest_i_44110 = 0; nest_i_44110 < Rx_40867;
             nest_i_44110++) {
            if (slt64(tile_dim_start_44107 + nest_i_44109, m_28023) &&
                slt64(tile_dim_start_44108 + nest_i_44110, i32_res_28038)) {
                ((__global float *) mem_42997)[(tile_dim_start_44107 +
                                                nest_i_44109) * i32_res_28038 +
                                               (tile_dim_start_44108 +
                                                nest_i_44110)] =
                    loop_mem_42994[nest_i_44109 * Rx_40867 + nest_i_44110];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_40864
    #undef Ry_40865
    #undef Tx_40866
    #undef Rx_40867
    #undef Tk_40868
    #undef tk_div_tx_40869
    #undef tk_div_ty_40870
    #undef TxRx_40871
    #undef TyRy_40872
    #undef a_loc_szz_40874
    #undef b_loc_szz_40876
}
__kernel void mainMagnitudezisegmap_intragroup_41332(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43055_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43046_backing_aligned_1,
                                                     int64_t m_28023,
                                                     int64_t i32_res_28038,
                                                     int64_t num_groups_y_41330,
                                                     int64_t num_whole_tiles_41348,
                                                     int64_t residual_input_41475,
                                                     unsigned char cond_41476,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43007,
                                                     __global
                                                     unsigned char *mem_43036,
                                                     __global
                                                     unsigned char *mem_43063)
{
    #define tile_sizze_41327 (mainMagnitudezitile_sizze_41326)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43055_backing_5 = (__local volatile
                                                           char *) mem_43055_backing_aligned_0;
    __local volatile char *restrict mem_43046_backing_0 = (__local volatile
                                                           char *) mem_43046_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44186;
    int32_t local_tid_44187;
    int64_t group_sizze_44190;
    int32_t wave_sizze_44189;
    int32_t group_tid_44188;
    
    global_tid_44186 = get_global_id(0);
    local_tid_44187 = get_local_id(0);
    group_sizze_44190 = get_local_size(0);
    wave_sizze_44189 = LOCKSTEP_WIDTH;
    group_tid_44188 = get_group_id(0);
    
    int32_t gid_flat_41332;
    
    gid_flat_41332 = group_tid_44188;
    
    int32_t ltid_pre_44191;
    
    ltid_pre_44191 = squot32(local_tid_44187, sext_i64_i32(tile_sizze_41327));
    
    int32_t ltid_pre_44192;
    
    ltid_pre_44192 = local_tid_44187 - squot32(local_tid_44187,
                                               sext_i64_i32(tile_sizze_41327)) *
        sext_i64_i32(tile_sizze_41327);
    
    int64_t gid_x_41324;
    
    gid_x_41324 = squot64(sext_i32_i64(group_tid_44188), num_groups_y_41330);
    
    int64_t gid_y_41325;
    
    gid_y_41325 = sext_i32_i64(group_tid_44188) -
        squot64(sext_i32_i64(group_tid_44188), num_groups_y_41330) *
        num_groups_y_41330;
    
    float mem_43041[1];
    int64_t ltid_y_41351 = sext_i32_i64(ltid_pre_44191);
    int64_t ltid_x_41349 = sext_i32_i64(ltid_pre_44192);
    int32_t ltid_flat_41350 = local_tid_44187;
    
    if (slt64(ltid_y_41351, tile_sizze_41327) && slt64(ltid_x_41349,
                                                       tile_sizze_41327)) {
        mem_43041[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41434 = gid_x_41324 * tile_sizze_41327;
    int64_t binop_x_41449 = gid_y_41325 * tile_sizze_41327;
    __local char *mem_43046;
    
    mem_43046 = (__local char *) mem_43046_backing_0;
    
    float accs_mem_43051[1];
    float mem_param_43042[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43042[i_1] = mem_43041[i_1];
    for (int64_t tile_id_41360 = 0; tile_id_41360 < num_whole_tiles_41348;
         tile_id_41360++) {
        int64_t binop_x_41432 = tile_sizze_41327 * tile_id_41360;
        int64_t ltid_y_41363 = sext_i32_i64(ltid_pre_44191);
        int64_t ltid_x_41361 = sext_i32_i64(ltid_pre_44192);
        int32_t ltid_flat_41362 = local_tid_44187;
        int64_t j_41433 = ltid_x_41361 + binop_x_41432;
        int64_t gtid_41435 = ltid_y_41363 + binop_x_41434;
        bool binop_x_41440 = slt64(j_41433, i32_res_28038);
        bool binop_y_41441 = slt64(gtid_41435, m_28023);
        bool cond_41442 = binop_x_41440 && binop_y_41441;
        float pre_41443;
        
        if (cond_41442) {
            float x_41444 = ((__global
                              float *) defunc_3_map_res_mem_43007)[gtid_41435 *
                                                                   i32_res_28038 +
                                                                   j_41433];
            
            pre_41443 = x_41444;
        } else {
            pre_41443 = 0.0F;
        }
        ((__local float *) mem_43046)[ltid_y_41363 * tile_sizze_41327 +
                                      ltid_x_41361] = pre_41443;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43050[1];
        int64_t ltid_y_41395 = sext_i32_i64(ltid_pre_44191);
        int64_t ltid_x_41393 = sext_i32_i64(ltid_pre_44192);
        int32_t ltid_flat_41394 = local_tid_44187;
        int64_t gtid_41448 = ltid_y_41395 + binop_x_41434;
        int64_t gtid_41450 = ltid_x_41393 + binop_x_41449;
        float acc_41453 = mem_param_43042[(int64_t) 0];
        bool binop_x_41457 = slt64(gtid_41448, m_28023);
        bool binop_y_41458 = slt64(gtid_41450, i32_res_28038);
        bool cond_41459 = binop_x_41457 && binop_y_41458;
        float acc_41460;
        
        if (cond_41459) {
            float x_41461;
            float redout_42472 = acc_41453;
            
            for (int64_t i_42473 = 0; i_42473 < tile_sizze_41327; i_42473++) {
                float x_41465 = ((__local float *) mem_43046)[ltid_y_41395 *
                                                              tile_sizze_41327 +
                                                              i_42473];
                int64_t slice_42524 = binop_x_41432 + i_42473;
                float x_41466 = ((__global float *) mem_43036)[slice_42524 *
                                                               (i32_res_28038 *
                                                                m_28023) +
                                                               gtid_41448 *
                                                               i32_res_28038 +
                                                               gtid_41450];
                float defunc_1_f_res_41467 = x_41465 * x_41466;
                float defunc_1_op_res_41464 = defunc_1_f_res_41467 +
                      redout_42472;
                float redout_tmp_44195 = defunc_1_op_res_41464;
                
                redout_42472 = redout_tmp_44195;
            }
            x_41461 = redout_42472;
            acc_41460 = x_41461;
        } else {
            acc_41460 = acc_41453;
        }
        mem_43050[(int64_t) 0] = acc_41460;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44193[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44193[i_2] = mem_43050[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43042[i_3] = mem_param_tmp_44193[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43051[i_4] = mem_param_43042[i_4];
    
    __local char *mem_43055;
    
    mem_43055 = (__local char *) mem_43055_backing_5;
    
    float mem_43059[1];
    float mem_43639[1];
    
    if (cond_41476) {
        mem_43639[(int64_t) 0] = accs_mem_43051[(int64_t) 0];
    } else {
        int64_t binop_x_41549 = tile_sizze_41327 * num_whole_tiles_41348;
        int64_t ltid_y_41479 = sext_i32_i64(ltid_pre_44191);
        int64_t ltid_x_41477 = sext_i32_i64(ltid_pre_44192);
        int32_t ltid_flat_41478 = local_tid_44187;
        int64_t j_41550 = ltid_x_41477 + binop_x_41549;
        int64_t gtid_41552 = binop_x_41434 + ltid_y_41479;
        bool binop_x_41557 = slt64(j_41550, i32_res_28038);
        bool binop_y_41558 = slt64(gtid_41552, m_28023);
        bool cond_41559 = binop_x_41557 && binop_y_41558;
        float pre_41560;
        
        if (cond_41559) {
            float x_41561 = ((__global
                              float *) defunc_3_map_res_mem_43007)[gtid_41552 *
                                                                   i32_res_28038 +
                                                                   j_41550];
            
            pre_41560 = x_41561;
        } else {
            pre_41560 = 0.0F;
        }
        ((__local float *) mem_43055)[ltid_y_41479 * tile_sizze_41327 +
                                      ltid_x_41477] = pre_41560;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41512 = sext_i32_i64(ltid_pre_44191);
        int64_t ltid_x_41510 = sext_i32_i64(ltid_pre_44192);
        int32_t ltid_flat_41511 = local_tid_44187;
        int64_t gtid_41566 = binop_x_41434 + ltid_y_41512;
        int64_t gtid_41568 = binop_x_41449 + ltid_x_41510;
        float acc_41571 = accs_mem_43051[(int64_t) 0];
        bool binop_x_41575 = slt64(gtid_41566, m_28023);
        bool binop_y_41576 = slt64(gtid_41568, i32_res_28038);
        bool cond_41577 = binop_x_41575 && binop_y_41576;
        float acc_41578;
        
        if (cond_41577) {
            float x_41579;
            float redout_42474 = acc_41571;
            
            for (int64_t i_42475 = 0; i_42475 < residual_input_41475;
                 i_42475++) {
                float x_41583 = ((__local float *) mem_43055)[ltid_y_41512 *
                                                              tile_sizze_41327 +
                                                              i_42475];
                int64_t slice_42525 = binop_x_41549 + i_42475;
                float x_41584 = ((__global float *) mem_43036)[slice_42525 *
                                                               (i32_res_28038 *
                                                                m_28023) +
                                                               gtid_41566 *
                                                               i32_res_28038 +
                                                               gtid_41568];
                float defunc_1_f_res_41585 = x_41583 * x_41584;
                float defunc_1_op_res_41582 = defunc_1_f_res_41585 +
                      redout_42474;
                float redout_tmp_44196 = defunc_1_op_res_41582;
                
                redout_42474 = redout_tmp_44196;
            }
            x_41579 = redout_42474;
            acc_41578 = x_41579;
        } else {
            acc_41578 = acc_41571;
        }
        mem_43059[(int64_t) 0] = acc_41578;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43639[(int64_t) 0] = mem_43059[(int64_t) 0];
    }
    
    int64_t thread_out_index_44197 = gid_x_41324 * tile_sizze_41327 +
            sext_i32_i64(ltid_pre_44191);
    int64_t thread_out_index_44198 = gid_y_41325 * tile_sizze_41327 +
            sext_i32_i64(ltid_pre_44192);
    
    if (slt64(thread_out_index_44197, m_28023) && slt64(thread_out_index_44198,
                                                        i32_res_28038)) {
        ((__global float *) mem_43063)[thread_out_index_44197 * i32_res_28038 +
                                       thread_out_index_44198] =
            mem_43639[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41327
}
__kernel void mainMagnitudezisegmap_intragroup_41624(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43115_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43113_backing_aligned_1,
                                                     int64_t N_28022,
                                                     int64_t m_28023,
                                                     int64_t i32_res_28038,
                                                     int64_t gridDim_x_41618,
                                                     int64_t full_tiles_41649,
                                                     int64_t kk_41852, __global
                                                     unsigned char *defunc_4_map_res_mem_43073,
                                                     __global
                                                     unsigned char *mem_43097,
                                                     __global
                                                     unsigned char *mem_43287)
{
    #define Ty_41605 (mainMagnitudeziTy_41602)
    #define Ry_41606 (mainMagnitudeziRy_41604)
    #define Tx_41607 (mainMagnitudeziTx_41601)
    #define Rx_41608 (mainMagnitudeziRx_41603)
    #define Tk_41609 (mainMagnitudeziTk_41600)
    #define tk_div_tx_41610 (sdiv_up64(mainMagnitudeziTk_41600, mainMagnitudeziTx_41601))
    #define tk_div_ty_41611 (sdiv_up64(mainMagnitudeziTk_41600, mainMagnitudeziTy_41602))
    #define TxRx_41612 (mainMagnitudeziTx_41601 * mainMagnitudeziRx_41603)
    #define TyRy_41613 (mainMagnitudeziTy_41602 * mainMagnitudeziRy_41604)
    #define a_loc_szz_41615 (mainMagnitudeziTk_41600 * (mainMagnitudeziTy_41602 * mainMagnitudeziRy_41604))
    #define b_loc_szz_41617 (mainMagnitudeziRx_41603 * (mainMagnitudeziTx_41601 * mainMagnitudeziTk_41600))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43115_backing_1 = (__local volatile
                                                           char *) mem_43115_backing_aligned_0;
    __local volatile char *restrict mem_43113_backing_0 = (__local volatile
                                                           char *) mem_43113_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44274;
    int32_t local_tid_44275;
    int64_t group_sizze_44278;
    int32_t wave_sizze_44277;
    int32_t group_tid_44276;
    
    global_tid_44274 = get_global_id(0);
    local_tid_44275 = get_local_id(0);
    group_sizze_44278 = get_local_size(0);
    wave_sizze_44277 = LOCKSTEP_WIDTH;
    group_tid_44276 = get_group_id(0);
    
    int32_t gid_flat_41624;
    
    gid_flat_41624 = group_tid_44276;
    
    int32_t ltid_pre_44279;
    
    ltid_pre_44279 = squot32(local_tid_44275, sext_i64_i32(Tx_41607));
    
    int32_t ltid_pre_44280;
    
    ltid_pre_44280 = local_tid_44275 - squot32(local_tid_44275,
                                               sext_i64_i32(Tx_41607)) *
        sext_i64_i32(Tx_41607);
    
    int64_t gid_y_41623;
    
    gid_y_41623 = squot64(sext_i32_i64(group_tid_44276), gridDim_x_41618);
    
    int64_t gid_x_41622;
    
    gid_x_41622 = sext_i32_i64(group_tid_44276) -
        squot64(sext_i32_i64(group_tid_44276), gridDim_x_41618) *
        gridDim_x_41618;
    
    int64_t iii_41625;
    
    iii_41625 = TyRy_41613 * gid_y_41623;
    
    int64_t jjj_41626 = TxRx_41612 * gid_x_41622;
    float mem_43111[Ry_41606 * Rx_41608];
    int64_t ltid_y_41629 = sext_i32_i64(ltid_pre_44279);
    int64_t ltid_x_41627 = sext_i32_i64(ltid_pre_44280);
    int32_t ltid_flat_41628 = local_tid_44275;
    float mem_43102[Ry_41606 * Rx_41608];
    
    for (int64_t i_41640 = 0; i_41640 < Ry_41606; i_41640++) {
        for (int64_t i_41643 = 0; i_41643 < Rx_41608; i_41643++) {
            mem_43102[i_41640 * Rx_41608 + i_41643] = 0.0F;
        }
    }
    for (int64_t i_44283 = 0; i_44283 < Ry_41606; i_44283++) {
        for (int64_t i_44284 = 0; i_44284 < Rx_41608; i_44284++) {
            mem_43111[i_44283 * Rx_41608 + i_44284] = mem_43102[i_44283 *
                                                                Rx_41608 +
                                                                i_44284];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43113;
    
    mem_43113 = (__local char *) mem_43113_backing_0;
    
    __local char *mem_43115;
    
    mem_43115 = (__local char *) mem_43115_backing_1;
    
    float mem_43186[Ry_41606];
    float mem_43190[Rx_41608];
    float loop_mem_43202[Ry_41606 * Rx_41608];
    float mem_param_43116[Ry_41606 * Rx_41608];
    
    for (int32_t i_2 = 0; i_2 < Ry_41606 * Rx_41608; i_2++)
        mem_param_43116[i_2] = mem_43111[i_2];
    for (int64_t i_41650 = 0; i_41650 < full_tiles_41649; i_41650++) {
        int64_t kk_41654 = Tk_41609 * i_41650;
        
        for (int64_t i_41655 = 0; i_41655 < Ry_41606; i_41655++) {
            int64_t binop_y_41678 = Ty_41605 * i_41655;
            
            for (int64_t i_41657 = 0; i_41657 < tk_div_tx_41610; i_41657++) {
                int64_t binop_y_41676 = Tx_41607 * i_41657;
                int64_t ltid_x_41659 = sext_i32_i64(ltid_pre_44279);
                int64_t ltid_y_41660 = sext_i32_i64(ltid_pre_44280);
                int32_t ltid_flat_41661 = local_tid_44275;
                int64_t k_41677 = ltid_y_41660 + binop_y_41676;
                int64_t i_41679 = ltid_x_41659 + binop_y_41678;
                int64_t gtid_41680 = iii_41625 + i_41679;
                int64_t A_col_idx_41681 = kk_41654 + k_41677;
                bool cond_41682 = slt64(gtid_41680, m_28023);
                float A_elem_41683;
                
                if (cond_41682) {
                    float A_elem_41685 = ((__global
                                           float *) defunc_4_map_res_mem_43073)[gtid_41680 *
                                                                                i32_res_28038 +
                                                                                A_col_idx_41681];
                    
                    A_elem_41683 = A_elem_41685;
                } else {
                    A_elem_41683 = 0.0F;
                }
                
                bool cond_41687 = slt64(k_41677, Tk_41609);
                int64_t a_loc_ind_41688;
                
                if (cond_41687) {
                    int64_t binop_y_41689 = Tk_41609 * i_41679;
                    int64_t loc_fi_41690 = k_41677 + binop_y_41689;
                    
                    a_loc_ind_41688 = loc_fi_41690;
                } else {
                    a_loc_ind_41688 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41688) &&
                    slt64(a_loc_ind_41688, a_loc_szz_41615)) {
                    ((__local float *) mem_43113)[a_loc_ind_41688] =
                        A_elem_41683;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41695 = 0; i_41695 < tk_div_ty_41611; i_41695++) {
            int64_t binop_y_41716 = Ty_41605 * i_41695;
            
            for (int64_t i_41697 = 0; i_41697 < Rx_41608; i_41697++) {
                int64_t binop_y_41718 = Tx_41607 * i_41697;
                int64_t ltid_x_41699 = sext_i32_i64(ltid_pre_44279);
                int64_t ltid_y_41700 = sext_i32_i64(ltid_pre_44280);
                int32_t ltid_flat_41701 = local_tid_44275;
                int64_t k_41717 = ltid_x_41699 + binop_y_41716;
                int64_t j_41719 = ltid_y_41700 + binop_y_41718;
                int64_t gtid_41720 = jjj_41626 + j_41719;
                int64_t B_row_idx_41721 = kk_41654 + k_41717;
                bool cond_41722 = slt64(gtid_41720, N_28022);
                float B_elem_41723;
                
                if (cond_41722) {
                    float B_elem_41725 = ((__global
                                           float *) mem_43097)[B_row_idx_41721 *
                                                               N_28022 +
                                                               gtid_41720];
                    
                    B_elem_41723 = B_elem_41725;
                } else {
                    B_elem_41723 = 0.0F;
                }
                
                bool cond_41727 = slt64(k_41717, Tk_41609);
                int64_t b_loc_ind_41728;
                
                if (cond_41727) {
                    int64_t binop_y_41729 = TxRx_41612 * k_41717;
                    int64_t loc_fi_41730 = j_41719 + binop_y_41729;
                    
                    b_loc_ind_41728 = loc_fi_41730;
                } else {
                    b_loc_ind_41728 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41728) &&
                    slt64(b_loc_ind_41728, b_loc_szz_41617)) {
                    ((__local float *) mem_43115)[b_loc_ind_41728] =
                        B_elem_41723;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43201[Ry_41606 * Rx_41608];
        float mem_param_43173[Ry_41606 * Rx_41608];
        
        for (int32_t i_3 = 0; i_3 < Ry_41606 * Rx_41608; i_3++)
            mem_param_43173[i_3] = mem_param_43116[i_3];
        for (int64_t i_41735 = 0; i_41735 < Tk_41609; i_41735++) {
            int64_t binop_y_41774 = TxRx_41612 * i_41735;
            int64_t ltid_y_41739 = sext_i32_i64(ltid_pre_44279);
            int64_t ltid_x_41737 = sext_i32_i64(ltid_pre_44280);
            int32_t ltid_flat_41738 = local_tid_44275;
            float mem_43176[Ry_41606];
            float mem_43178[Rx_41608];
            int64_t binop_x_41765 = Ry_41606 * ltid_y_41739;
            
            for (int64_t i_41763 = 0; i_41763 < Ry_41606; i_41763++) {
                int64_t binop_x_41766 = i_41763 + binop_x_41765;
                int64_t binop_y_41767 = Tk_41609 * binop_x_41766;
                int64_t a_loc_ind_41768 = i_41735 + binop_y_41767;
                
                for (int64_t i_44296 = 0; i_44296 < (int64_t) 1; i_44296++) {
                    mem_43176[i_41763 + i_44296] = ((__local
                                                     float *) mem_43113)[a_loc_ind_41768 +
                                                                         i_44296];
                }
            }
            
            int64_t binop_y_41776 = Rx_41608 * ltid_x_41737;
            
            for (int64_t i_41772 = 0; i_41772 < Rx_41608; i_41772++) {
                int64_t binop_x_41775 = i_41772 + binop_y_41774;
                int64_t b_loc_ind_41777 = binop_x_41775 + binop_y_41776;
                
                for (int64_t i_44298 = 0; i_44298 < (int64_t) 1; i_44298++) {
                    mem_43178[i_41772 + i_44298] = ((__local
                                                     float *) mem_43115)[b_loc_ind_41777 +
                                                                         i_44298];
                }
            }
            for (int64_t i_44299 = 0; i_44299 < Ry_41606; i_44299++) {
                mem_43186[i_44299] = mem_43176[i_44299];
            }
            for (int64_t i_44300 = 0; i_44300 < Rx_41608; i_44300++) {
                mem_43190[i_44300] = mem_43178[i_44300];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43200[Ry_41606 * Rx_41608];
            int64_t ltid_y_41784 = sext_i32_i64(ltid_pre_44279);
            int64_t ltid_x_41782 = sext_i32_i64(ltid_pre_44280);
            int32_t ltid_flat_41783 = local_tid_44275;
            int64_t binop_y_41825 = Ry_41606 * ltid_y_41784;
            int64_t binop_y_41829 = Rx_41608 * ltid_x_41782;
            
            for (int64_t i_41819 = 0; i_41819 < Ry_41606; i_41819++) {
                int64_t binop_x_41824 = iii_41625 + i_41819;
                int64_t cmpop_x_41826 = binop_x_41824 + binop_y_41825;
                bool binop_x_41827 = slt64(cmpop_x_41826, m_28023);
                
                for (int64_t i_41822 = 0; i_41822 < Rx_41608; i_41822++) {
                    int64_t binop_x_41828 = jjj_41626 + i_41822;
                    int64_t cmpop_x_41830 = binop_x_41828 + binop_y_41829;
                    bool binop_y_41831 = slt64(cmpop_x_41830, N_28022);
                    bool cond_41832 = binop_x_41827 && binop_y_41831;
                    
                    if (cond_41832) {
                        float a_41834 = mem_43186[i_41819];
                        float b_41835 = mem_43190[i_41822];
                        float c_41836 = mem_param_43173[i_41819 * Rx_41608 +
                                                        i_41822];
                        float defunc_1_f_res_41839 = a_41834 * b_41835;
                        float defunc_1_op_res_41843 = c_41836 +
                              defunc_1_f_res_41839;
                        
                        mem_param_43173[i_41819 * Rx_41608 + i_41822] =
                            defunc_1_op_res_41843;
                    }
                }
            }
            for (int64_t i_44303 = 0; i_44303 < Ry_41606; i_44303++) {
                for (int64_t i_44304 = 0; i_44304 < Rx_41608; i_44304++) {
                    mem_43200[i_44303 * Rx_41608 + i_44304] =
                        mem_param_43173[i_44303 * Rx_41608 + i_44304];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44293[Ry_41606 * Rx_41608];
            
            for (int32_t i_4 = 0; i_4 < Ry_41606 * Rx_41608; i_4++)
                mem_param_tmp_44293[i_4] = mem_43200[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41606 * Rx_41608; i_5++)
                mem_param_43173[i_5] = mem_param_tmp_44293[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41606 * Rx_41608; i_6++)
            loop_mem_43201[i_6] = mem_param_43173[i_6];
        
        float mem_param_tmp_44285[Ry_41606 * Rx_41608];
        
        for (int32_t i_7 = 0; i_7 < Ry_41606 * Rx_41608; i_7++)
            mem_param_tmp_44285[i_7] = loop_mem_43201[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41606 * Rx_41608; i_8++)
            mem_param_43116[i_8] = mem_param_tmp_44285[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41606 * Rx_41608; i_9++)
        loop_mem_43202[i_9] = mem_param_43116[i_9];
    for (int64_t i_41853 = 0; i_41853 < Ry_41606; i_41853++) {
        int64_t binop_y_41878 = Ty_41605 * i_41853;
        
        for (int64_t i_41855 = 0; i_41855 < tk_div_tx_41610; i_41855++) {
            int64_t binop_y_41876 = Tx_41607 * i_41855;
            int64_t ltid_x_41857 = sext_i32_i64(ltid_pre_44279);
            int64_t ltid_y_41858 = sext_i32_i64(ltid_pre_44280);
            int32_t ltid_flat_41859 = local_tid_44275;
            int64_t k_41877 = ltid_y_41858 + binop_y_41876;
            int64_t i_41879 = ltid_x_41857 + binop_y_41878;
            int64_t gtid_41880 = iii_41625 + i_41879;
            int64_t A_col_idx_41881 = kk_41852 + k_41877;
            bool binop_x_41882 = slt64(gtid_41880, m_28023);
            bool binop_y_41883 = slt64(A_col_idx_41881, i32_res_28038);
            bool cond_41884 = binop_x_41882 && binop_y_41883;
            float A_elem_41885;
            
            if (cond_41884) {
                float A_elem_41887 = ((__global
                                       float *) defunc_4_map_res_mem_43073)[gtid_41880 *
                                                                            i32_res_28038 +
                                                                            A_col_idx_41881];
                
                A_elem_41885 = A_elem_41887;
            } else {
                A_elem_41885 = 0.0F;
            }
            
            bool cond_41889 = slt64(k_41877, Tk_41609);
            int64_t a_loc_ind_41890;
            
            if (cond_41889) {
                int64_t binop_y_41891 = Tk_41609 * i_41879;
                int64_t loc_fi_41892 = k_41877 + binop_y_41891;
                
                a_loc_ind_41890 = loc_fi_41892;
            } else {
                a_loc_ind_41890 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41890) && slt64(a_loc_ind_41890,
                                                             a_loc_szz_41615)) {
                ((__local float *) mem_43113)[a_loc_ind_41890] = A_elem_41885;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41897 = 0; i_41897 < tk_div_ty_41611; i_41897++) {
        int64_t binop_y_41920 = Ty_41605 * i_41897;
        
        for (int64_t i_41899 = 0; i_41899 < Rx_41608; i_41899++) {
            int64_t binop_y_41922 = Tx_41607 * i_41899;
            int64_t ltid_x_41901 = sext_i32_i64(ltid_pre_44279);
            int64_t ltid_y_41902 = sext_i32_i64(ltid_pre_44280);
            int32_t ltid_flat_41903 = local_tid_44275;
            int64_t k_41921 = ltid_x_41901 + binop_y_41920;
            int64_t j_41923 = ltid_y_41902 + binop_y_41922;
            int64_t gtid_41924 = jjj_41626 + j_41923;
            int64_t B_row_idx_41925 = kk_41852 + k_41921;
            bool binop_x_41926 = slt64(gtid_41924, N_28022);
            bool binop_y_41927 = slt64(B_row_idx_41925, i32_res_28038);
            bool cond_41928 = binop_x_41926 && binop_y_41927;
            float B_elem_41929;
            
            if (cond_41928) {
                float B_elem_41931 = ((__global
                                       float *) mem_43097)[B_row_idx_41925 *
                                                           N_28022 +
                                                           gtid_41924];
                
                B_elem_41929 = B_elem_41931;
            } else {
                B_elem_41929 = 0.0F;
            }
            
            bool cond_41933 = slt64(k_41921, Tk_41609);
            int64_t b_loc_ind_41934;
            
            if (cond_41933) {
                int64_t binop_y_41935 = TxRx_41612 * k_41921;
                int64_t loc_fi_41936 = j_41923 + binop_y_41935;
                
                b_loc_ind_41934 = loc_fi_41936;
            } else {
                b_loc_ind_41934 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41934) && slt64(b_loc_ind_41934,
                                                             b_loc_szz_41617)) {
                ((__local float *) mem_43115)[b_loc_ind_41934] = B_elem_41929;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43268[Ry_41606];
    float mem_43272[Rx_41608];
    float mem_43282[Ry_41606 * Rx_41608];
    float loop_mem_43284[Ry_41606 * Rx_41608];
    float mem_param_43255[Ry_41606 * Rx_41608];
    
    for (int32_t i_10 = 0; i_10 < Ry_41606 * Rx_41608; i_10++)
        mem_param_43255[i_10] = loop_mem_43202[i_10];
    for (int64_t i_41941 = 0; i_41941 < Tk_41609; i_41941++) {
        int64_t cmpop_x_41943 = kk_41852 + i_41941;
        bool cond_41944 = slt64(cmpop_x_41943, i32_res_28038);
        float mem_43655[Ry_41606 * Rx_41608];
        
        if (cond_41944) {
            int64_t binop_y_41982 = TxRx_41612 * i_41941;
            int64_t bytes_43257 = (int64_t) 4 * Ry_41606;
            int64_t bytes_43259 = (int64_t) 4 * Rx_41608;
            int64_t ltid_y_41947 = sext_i32_i64(ltid_pre_44279);
            int64_t ltid_x_41945 = sext_i32_i64(ltid_pre_44280);
            int32_t ltid_flat_41946 = local_tid_44275;
            float mem_43258[Ry_41606];
            float mem_43260[Rx_41608];
            int64_t binop_x_41973 = Ry_41606 * ltid_y_41947;
            
            for (int64_t i_41971 = 0; i_41971 < Ry_41606; i_41971++) {
                int64_t binop_x_41974 = i_41971 + binop_x_41973;
                int64_t binop_y_41975 = Tk_41609 * binop_x_41974;
                int64_t a_loc_ind_41976 = i_41941 + binop_y_41975;
                
                for (int64_t i_44312 = 0; i_44312 < (int64_t) 1; i_44312++) {
                    mem_43258[i_41971 + i_44312] = ((__local
                                                     float *) mem_43113)[a_loc_ind_41976 +
                                                                         i_44312];
                }
            }
            
            int64_t binop_y_41984 = Rx_41608 * ltid_x_41945;
            
            for (int64_t i_41980 = 0; i_41980 < Rx_41608; i_41980++) {
                int64_t binop_x_41983 = i_41980 + binop_y_41982;
                int64_t b_loc_ind_41985 = binop_x_41983 + binop_y_41984;
                
                for (int64_t i_44314 = 0; i_44314 < (int64_t) 1; i_44314++) {
                    mem_43260[i_41980 + i_44314] = ((__local
                                                     float *) mem_43115)[b_loc_ind_41985 +
                                                                         i_44314];
                }
            }
            for (int64_t i_44315 = 0; i_44315 < Ry_41606; i_44315++) {
                mem_43268[i_44315] = mem_43258[i_44315];
            }
            for (int64_t i_44316 = 0; i_44316 < Rx_41608; i_44316++) {
                mem_43272[i_44316] = mem_43260[i_44316];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41992 = sext_i32_i64(ltid_pre_44279);
            int64_t ltid_x_41990 = sext_i32_i64(ltid_pre_44280);
            int32_t ltid_flat_41991 = local_tid_44275;
            int64_t binop_y_42033 = Ry_41606 * ltid_y_41992;
            int64_t binop_y_42037 = Rx_41608 * ltid_x_41990;
            
            for (int64_t i_42027 = 0; i_42027 < Ry_41606; i_42027++) {
                int64_t binop_x_42032 = iii_41625 + i_42027;
                int64_t cmpop_x_42034 = binop_x_42032 + binop_y_42033;
                bool binop_x_42035 = slt64(cmpop_x_42034, m_28023);
                
                for (int64_t i_42030 = 0; i_42030 < Rx_41608; i_42030++) {
                    int64_t binop_x_42036 = jjj_41626 + i_42030;
                    int64_t cmpop_x_42038 = binop_x_42036 + binop_y_42037;
                    bool binop_y_42039 = slt64(cmpop_x_42038, N_28022);
                    bool cond_42040 = binop_x_42035 && binop_y_42039;
                    
                    if (cond_42040) {
                        float a_42042 = mem_43268[i_42027];
                        float b_42043 = mem_43272[i_42030];
                        float c_42044 = mem_param_43255[i_42027 * Rx_41608 +
                                                        i_42030];
                        float defunc_1_f_res_42047 = a_42042 * b_42043;
                        float defunc_1_op_res_42051 = c_42044 +
                              defunc_1_f_res_42047;
                        
                        mem_param_43255[i_42027 * Rx_41608 + i_42030] =
                            defunc_1_op_res_42051;
                    }
                }
            }
            for (int64_t i_44319 = 0; i_44319 < Ry_41606; i_44319++) {
                for (int64_t i_44320 = 0; i_44320 < Rx_41608; i_44320++) {
                    mem_43282[i_44319 * Rx_41608 + i_44320] =
                        mem_param_43255[i_44319 * Rx_41608 + i_44320];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44321 = 0; i_44321 < Ry_41606; i_44321++) {
                for (int64_t i_44322 = 0; i_44322 < Rx_41608; i_44322++) {
                    mem_43655[i_44321 * Rx_41608 + i_44322] =
                        mem_43282[i_44321 * Rx_41608 + i_44322];
                }
            }
        } else {
            for (int64_t i_44323 = 0; i_44323 < Ry_41606; i_44323++) {
                for (int64_t i_44324 = 0; i_44324 < Rx_41608; i_44324++) {
                    mem_43655[i_44323 * Rx_41608 + i_44324] =
                        mem_param_43255[i_44323 * Rx_41608 + i_44324];
                }
            }
        }
        
        float mem_param_tmp_44309[Ry_41606 * Rx_41608];
        
        for (int32_t i_11 = 0; i_11 < Ry_41606 * Rx_41608; i_11++)
            mem_param_tmp_44309[i_11] = mem_43655[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41606 * Rx_41608; i_12++)
            mem_param_43255[i_12] = mem_param_tmp_44309[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41606 * Rx_41608; i_13++)
        loop_mem_43284[i_13] = mem_param_43255[i_13];
    
    int64_t reg_tile_i_44325 = squot64(sext_i32_i64(local_tid_44275), Tx_41607);
    int64_t reg_tile_i_44326 = sext_i32_i64(local_tid_44275) -
            squot64(sext_i32_i64(local_tid_44275), Tx_41607) * Tx_41607;
    int64_t tile_dim_start_44327 = Ry_41606 * (Ty_41605 * gid_y_41623 +
                                               reg_tile_i_44325);
    int64_t tile_dim_start_44328 = Rx_41608 * (Tx_41607 * gid_x_41622 +
                                               reg_tile_i_44326);
    
    for (int64_t nest_i_44329 = 0; nest_i_44329 < Ry_41606; nest_i_44329++) {
        for (int64_t nest_i_44330 = 0; nest_i_44330 < Rx_41608;
             nest_i_44330++) {
            if (slt64(tile_dim_start_44327 + nest_i_44329, m_28023) &&
                slt64(tile_dim_start_44328 + nest_i_44330, N_28022)) {
                ((__global float *) mem_43287)[(tile_dim_start_44327 +
                                                nest_i_44329) * N_28022 +
                                               (tile_dim_start_44328 +
                                                nest_i_44330)] =
                    loop_mem_43284[nest_i_44329 * Rx_41608 + nest_i_44330];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41605
    #undef Ry_41606
    #undef Tx_41607
    #undef Rx_41608
    #undef Tk_41609
    #undef tk_div_tx_41610
    #undef tk_div_ty_41611
    #undef TxRx_41612
    #undef TyRy_41613
    #undef a_loc_szz_41615
    #undef b_loc_szz_41617
}
__kernel void mainMagnitudezisegmap_intragroup_42058(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43360_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43353_backing_aligned_1,
                                                     int64_t m_28023,
                                                     int32_t n_28026,
                                                     float hfrac_28028,
                                                     int64_t i32_res_28032,
                                                     int32_t k2p2_28034,
                                                     int64_t num_whole_tiles_42080,
                                                     int64_t residual_input_42169,
                                                     unsigned char cond_42170,
                                                     __global
                                                     unsigned char *mem_43339,
                                                     __global
                                                     unsigned char *mem_43342,
                                                     __global
                                                     unsigned char *mem_43373,
                                                     __global
                                                     unsigned char *mem_43375,
                                                     __global
                                                     unsigned char *mem_43377)
{
    #define segmap_group_sizze_35598 (mainMagnitudezisegmap_group_sizze_35567)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43360_backing_5 = (__local volatile
                                                           char *) mem_43360_backing_aligned_0;
    __local volatile char *restrict mem_43353_backing_0 = (__local volatile
                                                           char *) mem_43353_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44498;
    int32_t local_tid_44499;
    int64_t group_sizze_44502;
    int32_t wave_sizze_44501;
    int32_t group_tid_44500;
    
    global_tid_44498 = get_global_id(0);
    local_tid_44499 = get_local_id(0);
    group_sizze_44502 = get_local_size(0);
    wave_sizze_44501 = LOCKSTEP_WIDTH;
    group_tid_44500 = get_group_id(0);
    
    int32_t gid_flat_42058;
    
    gid_flat_42058 = group_tid_44500;
    
    int32_t ltid_pre_44503;
    
    ltid_pre_44503 = local_tid_44499;
    
    int64_t gid_42057;
    
    gid_42057 = sext_i32_i64(group_tid_44500);
    
    int64_t binop_x_42065;
    
    binop_x_42065 = segmap_group_sizze_35598 * gid_42057;
    
    int32_t mem_43346[1];
    int64_t ltid_42059 = sext_i32_i64(ltid_pre_44503);
    int32_t ltid_flat_42060 = local_tid_44499;
    int64_t gtid_42066 = ltid_42059 + binop_x_42065;
    bool cond_42067 = slt64(gtid_42066, m_28023);
    int32_t pre_42068;
    
    if (cond_42067) {
        int32_t defunc_0_f_res_42070;
        int32_t redout_42482 = 0;
        
        for (int32_t i_42527 = 0; i_42527 < n_28026; i_42527++) {
            int64_t i_42483 = sext_i32_i64(i_42527);
            float x_42074 = ((__global float *) mem_43339)[i_42483 * m_28023 +
                                                           gtid_42066];
            bool isnan_res_42075;
            
            isnan_res_42075 = futrts_isnan32(x_42074);
            
            bool cond_42076 = !isnan_res_42075;
            int32_t defunc_0_f_res_42077 = btoi_bool_i32(cond_42076);
            int32_t defunc_1_op_res_42073 = add32(defunc_0_f_res_42077,
                                                  redout_42482);
            int32_t redout_tmp_44504 = defunc_1_op_res_42073;
            
            redout_42482 = redout_tmp_44504;
        }
        defunc_0_f_res_42070 = redout_42482;
        pre_42068 = defunc_0_f_res_42070;
    } else {
        pre_42068 = 0;
    }
    mem_43346[(int64_t) 0] = pre_42068;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43349[1];
    int64_t ltid_42081 = sext_i32_i64(ltid_pre_44503);
    int32_t ltid_flat_42082 = local_tid_44499;
    
    mem_43349[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43353;
    
    mem_43353 = (__local char *) mem_43353_backing_0;
    
    float accs_mem_43357[1];
    float mem_param_43350[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43350[i_1] = mem_43349[i_1];
    for (int64_t tile_id_42088 = 0; tile_id_42088 < num_whole_tiles_42080;
         tile_id_42088++) {
        int64_t binop_x_42133 = segmap_group_sizze_35598 * tile_id_42088;
        int64_t ltid_42089 = sext_i32_i64(ltid_pre_44503);
        int32_t ltid_flat_42090 = local_tid_44499;
        int64_t j_42134 = ltid_42089 + binop_x_42133;
        bool cond_42138 = slt64(j_42134, i32_res_28032);
        int32_t pre_42139;
        
        if (cond_42138) {
            int32_t index_primexp_42440 = sext_i64_i32(j_42134);
            
            pre_42139 = index_primexp_42440;
        } else {
            pre_42139 = 0;
        }
        ((__local int32_t *) mem_43353)[ltid_42089] = pre_42139;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43356[1];
        int64_t ltid_42108 = sext_i32_i64(ltid_pre_44503);
        int32_t ltid_flat_42109 = local_tid_44499;
        int64_t gtid_42144 = binop_x_42065 + ltid_42108;
        float acc_42146 = mem_param_43350[(int64_t) 0];
        bool cond_42147 = slt64(gtid_42144, m_28023);
        float acc_42148;
        
        if (cond_42147) {
            int32_t defunc_0_f_res_42145 = mem_43346[(int64_t) 0];
            float x_42149;
            float redout_42484 = acc_42146;
            
            for (int64_t i_42485 = 0; i_42485 < segmap_group_sizze_35598;
                 i_42485++) {
                int32_t x_42153 = ((__local int32_t *) mem_43353)[i_42485];
                bool cond_42154 = slt32(x_42153, defunc_0_f_res_42145);
                float defunc_0_f_res_42155;
                
                if (cond_42154) {
                    int64_t i_42156 = sext_i32_i64(x_42153);
                    float defunc_0_f_res_t_res_42157 = ((__global
                                                         float *) mem_43342)[i_42156 *
                                                                             m_28023 +
                                                                             gtid_42144];
                    
                    defunc_0_f_res_42155 = defunc_0_f_res_t_res_42157;
                } else {
                    defunc_0_f_res_42155 = 0.0F;
                }
                
                float defunc_0_f_res_42158 = defunc_0_f_res_42155 *
                      defunc_0_f_res_42155;
                float defunc_1_op_res_42152 = defunc_0_f_res_42158 +
                      redout_42484;
                float redout_tmp_44507 = defunc_1_op_res_42152;
                
                redout_42484 = redout_tmp_44507;
            }
            x_42149 = redout_42484;
            acc_42148 = x_42149;
        } else {
            acc_42148 = acc_42146;
        }
        mem_43356[(int64_t) 0] = acc_42148;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44505[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44505[i_2] = mem_43356[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43350[i_3] = mem_param_tmp_44505[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43357[i_4] = mem_param_43350[i_4];
    
    __local char *mem_43360;
    
    mem_43360 = (__local char *) mem_43360_backing_5;
    
    float mem_43363[1];
    float mem_43668[1];
    
    if (cond_42170) {
        mem_43668[(int64_t) 0] = accs_mem_43357[(int64_t) 0];
    } else {
        int64_t binop_x_42180 = segmap_group_sizze_35598 *
                num_whole_tiles_42080;
        int64_t ltid_42171 = sext_i32_i64(ltid_pre_44503);
        int32_t ltid_flat_42172 = local_tid_44499;
        int64_t j_42181 = ltid_42171 + binop_x_42180;
        bool cond_42185 = slt64(j_42181, i32_res_28032);
        int32_t pre_42186;
        
        if (cond_42185) {
            int32_t index_primexp_42441 = sext_i64_i32(j_42181);
            
            pre_42186 = index_primexp_42441;
        } else {
            pre_42186 = 0;
        }
        ((__local int32_t *) mem_43360)[ltid_42171] = pre_42186;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42191 = sext_i32_i64(ltid_pre_44503);
        int32_t ltid_flat_42192 = local_tid_44499;
        int64_t gtid_42199 = binop_x_42065 + ltid_42191;
        float acc_42201 = accs_mem_43357[(int64_t) 0];
        bool cond_42202 = slt64(gtid_42199, m_28023);
        float acc_42203;
        
        if (cond_42202) {
            int32_t defunc_0_f_res_42200 = mem_43346[(int64_t) 0];
            float x_42204;
            float redout_42486 = acc_42201;
            
            for (int64_t i_42487 = 0; i_42487 < residual_input_42169;
                 i_42487++) {
                int32_t x_42208 = ((__local int32_t *) mem_43360)[i_42487];
                bool cond_42209 = slt32(x_42208, defunc_0_f_res_42200);
                float defunc_0_f_res_42210;
                
                if (cond_42209) {
                    int64_t i_42211 = sext_i32_i64(x_42208);
                    float defunc_0_f_res_t_res_42212 = ((__global
                                                         float *) mem_43342)[i_42211 *
                                                                             m_28023 +
                                                                             gtid_42199];
                    
                    defunc_0_f_res_42210 = defunc_0_f_res_t_res_42212;
                } else {
                    defunc_0_f_res_42210 = 0.0F;
                }
                
                float defunc_0_f_res_42213 = defunc_0_f_res_42210 *
                      defunc_0_f_res_42210;
                float defunc_1_op_res_42207 = defunc_0_f_res_42213 +
                      redout_42486;
                float redout_tmp_44508 = defunc_1_op_res_42207;
                
                redout_42486 = redout_tmp_44508;
            }
            x_42204 = redout_42486;
            acc_42203 = x_42204;
        } else {
            acc_42203 = acc_42201;
        }
        mem_43363[(int64_t) 0] = acc_42203;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43668[(int64_t) 0] = mem_43363[(int64_t) 0];
    }
    
    int32_t mem_43367[1];
    int32_t mem_43369[1];
    float mem_43371[1];
    int64_t ltid_42216 = sext_i32_i64(ltid_pre_44503);
    int32_t ltid_flat_42217 = local_tid_44499;
    int64_t gtid_42227 = binop_x_42065 + ltid_42216;
    bool cond_42229 = slt64(gtid_42227, m_28023);
    int32_t postlude_42230;
    int32_t postlude_42231;
    float postlude_42232;
    
    if (cond_42229) {
        float defunc_0_f_res_42228 = mem_43668[(int64_t) 0];
        int32_t defunc_0_f_res_42233 = mem_43346[(int64_t) 0];
        int32_t r32_arg_42234 = sub32(defunc_0_f_res_42233, k2p2_28034);
        float i32_res_42235 = sitofp_i32_f32(r32_arg_42234);
        float sqrt_arg_42236 = defunc_0_f_res_42228 / i32_res_42235;
        float sqrt_res_42237;
        
        sqrt_res_42237 = futrts_sqrt32(sqrt_arg_42236);
        
        float i32_res_42238 = sitofp_i32_f32(defunc_0_f_res_42233);
        float t32_arg_42239 = hfrac_28028 * i32_res_42238;
        int32_t f32_res_42240 = fptosi_f32_i32(t32_arg_42239);
        
        postlude_42230 = f32_res_42240;
        postlude_42231 = defunc_0_f_res_42233;
        postlude_42232 = sqrt_res_42237;
    } else {
        postlude_42230 = 0;
        postlude_42231 = 0;
        postlude_42232 = 0.0F;
    }
    mem_43367[(int64_t) 0] = postlude_42230;
    mem_43369[(int64_t) 0] = postlude_42231;
    mem_43371[(int64_t) 0] = postlude_42232;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44499) + segmap_group_sizze_35598 *
              sext_i32_i64(group_tid_44500), m_28023)) {
        ((__global int32_t *) mem_43373)[sext_i32_i64(local_tid_44499) +
                                         segmap_group_sizze_35598 *
                                         sext_i32_i64(group_tid_44500)] =
            mem_43367[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44499) + segmap_group_sizze_35598 *
              sext_i32_i64(group_tid_44500), m_28023)) {
        ((__global int32_t *) mem_43375)[sext_i32_i64(local_tid_44499) +
                                         segmap_group_sizze_35598 *
                                         sext_i32_i64(group_tid_44500)] =
            mem_43369[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44499) + segmap_group_sizze_35598 *
              sext_i32_i64(group_tid_44500), m_28023)) {
        ((__global float *) mem_43377)[sext_i32_i64(local_tid_44499) +
                                       segmap_group_sizze_35598 *
                                       sext_i32_i64(group_tid_44500)] =
            mem_43371[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_35598
}
__kernel void mainMagnitudezisegmap_intragroup_42248(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43426_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43419_backing_aligned_1,
                                                     int64_t N_28022,
                                                     int64_t m_28023,
                                                     int64_t i32_res_28393,
                                                     int64_t num_whole_tiles_42268,
                                                     int64_t residual_input_42367,
                                                     unsigned char cond_42368,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43335,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43401,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43402,
                                                     __global
                                                     unsigned char *mem_43432)
{
    #define segmap_group_sizze_35835 (mainMagnitudezisegmap_group_sizze_35816)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43426_backing_5 = (__local volatile
                                                           char *) mem_43426_backing_aligned_0;
    __local volatile char *restrict mem_43419_backing_0 = (__local volatile
                                                           char *) mem_43419_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44682;
    int32_t local_tid_44683;
    int64_t group_sizze_44686;
    int32_t wave_sizze_44685;
    int32_t group_tid_44684;
    
    global_tid_44682 = get_global_id(0);
    local_tid_44683 = get_local_id(0);
    group_sizze_44686 = get_local_size(0);
    wave_sizze_44685 = LOCKSTEP_WIDTH;
    group_tid_44684 = get_group_id(0);
    
    int32_t gid_flat_42248;
    
    gid_flat_42248 = group_tid_44684;
    
    int32_t ltid_pre_44687;
    
    ltid_pre_44687 = local_tid_44683;
    
    int64_t gid_42247;
    
    gid_42247 = sext_i32_i64(group_tid_44684);
    
    int64_t binop_x_42257;
    
    binop_x_42257 = segmap_group_sizze_35835 * gid_42247;
    
    int32_t mem_43410[1];
    int32_t mem_43412[1];
    int64_t ltid_42249 = sext_i32_i64(ltid_pre_44687);
    int32_t ltid_flat_42250 = local_tid_44683;
    int64_t gtid_42258 = ltid_42249 + binop_x_42257;
    bool cond_42259 = slt64(gtid_42258, m_28023);
    int32_t pre_42260;
    int32_t pre_42261;
    
    if (cond_42259) {
        int32_t x_42262 = ((__global
                            int32_t *) defunc_3_map_res_mem_43402)[gtid_42258];
        int32_t x_42263 = ((__global
                            int32_t *) defunc_3_map_res_mem_43401)[gtid_42258];
        
        pre_42260 = x_42262;
        pre_42261 = x_42263;
    } else {
        pre_42260 = 0;
        pre_42261 = 0;
    }
    mem_43410[(int64_t) 0] = pre_42260;
    mem_43412[(int64_t) 0] = pre_42261;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43415[1];
    int64_t ltid_42269 = sext_i32_i64(ltid_pre_44687);
    int32_t ltid_flat_42270 = local_tid_44683;
    
    mem_43415[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43419;
    
    mem_43419 = (__local char *) mem_43419_backing_0;
    
    float accs_mem_43423[1];
    float mem_param_43416[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43416[i_1] = mem_43415[i_1];
    for (int64_t tile_id_42276 = 0; tile_id_42276 < num_whole_tiles_42268;
         tile_id_42276++) {
        int64_t binop_x_42325 = segmap_group_sizze_35835 * tile_id_42276;
        int64_t ltid_42277 = sext_i32_i64(ltid_pre_44687);
        int32_t ltid_flat_42278 = local_tid_44683;
        int64_t j_42326 = ltid_42277 + binop_x_42325;
        bool cond_42331 = slt64(j_42326, i32_res_28393);
        int32_t pre_42332;
        
        if (cond_42331) {
            int32_t index_primexp_42442 = sext_i64_i32(j_42326);
            int32_t tile_elem_42333 = index_primexp_42442;
            
            pre_42332 = tile_elem_42333;
        } else {
            pre_42332 = 0;
        }
        ((__local int32_t *) mem_43419)[ltid_42277] = pre_42332;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43422[1];
        int64_t ltid_42297 = sext_i32_i64(ltid_pre_44687);
        int32_t ltid_flat_42298 = local_tid_44683;
        int64_t gtid_42337 = binop_x_42257 + ltid_42297;
        float acc_42340 = mem_param_43416[(int64_t) 0];
        bool cond_42341 = slt64(gtid_42337, m_28023);
        float acc_42342;
        
        if (cond_42341) {
            int32_t x_42338 = mem_43410[(int64_t) 0];
            int32_t x_42339 = mem_43412[(int64_t) 0];
            float x_42343;
            float redout_42488 = acc_42340;
            
            for (int64_t i_42489 = 0; i_42489 < segmap_group_sizze_35835;
                 i_42489++) {
                int32_t x_42347 = ((__local int32_t *) mem_43419)[i_42489];
                bool cond_42348 = slt32(x_42347, x_42339);
                float defunc_0_f_res_42349;
                
                if (cond_42348) {
                    int32_t x_42350 = add32(x_42338, x_42347);
                    int32_t x_42351 = sub32(x_42350, x_42339);
                    int32_t i_42352 = add32(1, x_42351);
                    int64_t i_42353 = sext_i32_i64(i_42352);
                    float defunc_0_f_res_t_res_42354 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_42337 *
                                                                                              N_28022 +
                                                                                              i_42353];
                    
                    defunc_0_f_res_42349 = defunc_0_f_res_t_res_42354;
                } else {
                    defunc_0_f_res_42349 = 0.0F;
                }
                
                float defunc_1_op_res_42346 = defunc_0_f_res_42349 +
                      redout_42488;
                float redout_tmp_44690 = defunc_1_op_res_42346;
                
                redout_42488 = redout_tmp_44690;
            }
            x_42343 = redout_42488;
            acc_42342 = x_42343;
        } else {
            acc_42342 = acc_42340;
        }
        mem_43422[(int64_t) 0] = acc_42342;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44688[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44688[i_2] = mem_43422[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43416[i_3] = mem_param_tmp_44688[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43423[i_4] = mem_param_43416[i_4];
    
    __local char *mem_43426;
    
    mem_43426 = (__local char *) mem_43426_backing_5;
    
    float mem_43429[1];
    float mem_43677[1];
    
    if (cond_42368) {
        mem_43677[(int64_t) 0] = accs_mem_43423[(int64_t) 0];
    } else {
        int64_t binop_x_42378 = segmap_group_sizze_35835 *
                num_whole_tiles_42268;
        int64_t ltid_42369 = sext_i32_i64(ltid_pre_44687);
        int32_t ltid_flat_42370 = local_tid_44683;
        int64_t j_42379 = ltid_42369 + binop_x_42378;
        bool cond_42384 = slt64(j_42379, i32_res_28393);
        int32_t pre_42385;
        
        if (cond_42384) {
            int32_t index_primexp_42443 = sext_i64_i32(j_42379);
            int32_t tile_elem_42386 = index_primexp_42443;
            
            pre_42385 = tile_elem_42386;
        } else {
            pre_42385 = 0;
        }
        ((__local int32_t *) mem_43426)[ltid_42369] = pre_42385;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42390 = sext_i32_i64(ltid_pre_44687);
        int32_t ltid_flat_42391 = local_tid_44683;
        int64_t gtid_42398 = binop_x_42257 + ltid_42390;
        float acc_42401 = accs_mem_43423[(int64_t) 0];
        bool cond_42402 = slt64(gtid_42398, m_28023);
        float acc_42403;
        
        if (cond_42402) {
            int32_t x_42399 = mem_43410[(int64_t) 0];
            int32_t x_42400 = mem_43412[(int64_t) 0];
            float x_42404;
            float redout_42490 = acc_42401;
            
            for (int64_t i_42491 = 0; i_42491 < residual_input_42367;
                 i_42491++) {
                int32_t x_42408 = ((__local int32_t *) mem_43426)[i_42491];
                bool cond_42409 = slt32(x_42408, x_42400);
                float defunc_0_f_res_42410;
                
                if (cond_42409) {
                    int32_t x_42411 = add32(x_42399, x_42408);
                    int32_t x_42412 = sub32(x_42411, x_42400);
                    int32_t i_42413 = add32(1, x_42412);
                    int64_t i_42414 = sext_i32_i64(i_42413);
                    float defunc_0_f_res_t_res_42415 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_42398 *
                                                                                              N_28022 +
                                                                                              i_42414];
                    
                    defunc_0_f_res_42410 = defunc_0_f_res_t_res_42415;
                } else {
                    defunc_0_f_res_42410 = 0.0F;
                }
                
                float defunc_1_op_res_42407 = defunc_0_f_res_42410 +
                      redout_42490;
                float redout_tmp_44691 = defunc_1_op_res_42407;
                
                redout_42490 = redout_tmp_44691;
            }
            x_42404 = redout_42490;
            acc_42403 = x_42404;
        } else {
            acc_42403 = acc_42401;
        }
        mem_43429[(int64_t) 0] = acc_42403;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43677[(int64_t) 0] = mem_43429[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44683) + segmap_group_sizze_35835 *
              sext_i32_i64(group_tid_44684), m_28023)) {
        ((__global float *) mem_43432)[sext_i32_i64(local_tid_44683) +
                                       segmap_group_sizze_35835 *
                                       sext_i32_i64(group_tid_44684)] =
            mem_43677[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_35835
}
__kernel void mainMagnitudezisegred_large_33810(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_43951_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_43949_backing_aligned_1,
                                                int64_t N_28022,
                                                int64_t i32_res_28032,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_33949,
                                                int64_t groups_per_segment_43935,
                                                int64_t elements_per_thread_43936,
                                                int64_t virt_num_groups_43937,
                                                int64_t threads_per_segment_43939,
                                                __global
                                                unsigned char *images_mem_42538,
                                                __global
                                                unsigned char *binop_p_mem_42547,
                                                __global
                                                unsigned char *mem_42688,
                                                __global
                                                unsigned char *mem_42693,
                                                __global
                                                unsigned char *group_res_arr_mem_43940,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_43942)
{
    #define segred_group_sizze_33948 (mainMagnitudezisegred_group_sizze_33804)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_43951_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_43951_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_43949_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43949_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43944;
    int32_t local_tid_43945;
    int64_t group_sizze_43948;
    int32_t wave_sizze_43947;
    int32_t group_tid_43946;
    
    global_tid_43944 = get_global_id(0);
    local_tid_43945 = get_local_id(0);
    group_sizze_43948 = get_local_size(0);
    wave_sizze_43947 = LOCKSTEP_WIDTH;
    group_tid_43946 = get_group_id(0);
    
    int32_t phys_tid_33810;
    
    phys_tid_33810 = global_tid_43944;
    
    __local char *red_arr_mem_43949;
    
    red_arr_mem_43949 = (__local char *) red_arr_mem_43949_backing_0;
    
    __local char *sync_arr_mem_43951;
    
    sync_arr_mem_43951 = (__local char *) sync_arr_mem_43951_backing_1;
    
    int32_t phys_group_id_43953;
    
    phys_group_id_43953 = get_group_id(0);
    for (int32_t i_43954 = 0; i_43954 <
         sdiv_up32(sext_i64_i32(virt_num_groups_43937) - phys_group_id_43953,
                   sext_i64_i32(num_groups_33949)); i_43954++) {
        int32_t virt_group_id_43955 = phys_group_id_43953 + i_43954 *
                sext_i64_i32(num_groups_33949);
        int32_t flat_segment_id_43956 = squot32(virt_group_id_43955,
                                                sext_i64_i32(groups_per_segment_43935));
        int64_t global_tid_43957 = srem64(sext_i32_i64(virt_group_id_43955) *
                                          segred_group_sizze_33948 +
                                          sext_i32_i64(local_tid_43945),
                                          segred_group_sizze_33948 *
                                          groups_per_segment_43935);
        int64_t gtid_33797 = squot64(sext_i32_i64(flat_segment_id_43956),
                                     i32_res_28038 * i32_res_28038);
        int64_t gtid_33798 = squot64(sext_i32_i64(flat_segment_id_43956) -
                                     squot64(sext_i32_i64(flat_segment_id_43956),
                                             i32_res_28038 * i32_res_28038) *
                                     (i32_res_28038 * i32_res_28038),
                                     i32_res_28038);
        int64_t gtid_33799 = sext_i32_i64(flat_segment_id_43956) -
                squot64(sext_i32_i64(flat_segment_id_43956), i32_res_28038 *
                        i32_res_28038) * (i32_res_28038 * i32_res_28038) -
                squot64(sext_i32_i64(flat_segment_id_43956) -
                        squot64(sext_i32_i64(flat_segment_id_43956),
                                i32_res_28038 * i32_res_28038) *
                        (i32_res_28038 * i32_res_28038), i32_res_28038) *
                i32_res_28038;
        int64_t gtid_33809;
        float x_acc_43958;
        int64_t chunk_sizze_43959;
        
        chunk_sizze_43959 = smin64(elements_per_thread_43936,
                                   sdiv_up64(i32_res_28032 -
                                             sext_i32_i64(sext_i64_i32(global_tid_43957)),
                                             threads_per_segment_43939));
        
        float x_33952;
        float x_33953;
        
        // neutral-initialise the accumulators
        {
            x_acc_43958 = 0.0F;
        }
        for (int64_t i_43963 = 0; i_43963 < chunk_sizze_43959; i_43963++) {
            gtid_33809 = sext_i32_i64(sext_i64_i32(global_tid_43957)) +
                threads_per_segment_43939 * i_43963;
            // apply map function
            {
                float x_33958 = ((__global
                                  float *) images_mem_42538)[gtid_33797 *
                                                             N_28022 +
                                                             gtid_33809];
                float x_33959 = ((__global
                                  float *) binop_p_mem_42547)[gtid_33798 *
                                                              N_28022 +
                                                              gtid_33809];
                float x_33960 = ((__global float *) mem_42688)[gtid_33799 *
                                                               N_28022 +
                                                               gtid_33809];
                float x_33961 = x_33959 * x_33960;
                bool isnan_res_33962;
                
                isnan_res_33962 = futrts_isnan32(x_33958);
                
                float y_33963;
                
                if (isnan_res_33962) {
                    y_33963 = 0.0F;
                } else {
                    y_33963 = 1.0F;
                }
                
                float defunc_2_f_res_33964 = x_33961 * y_33963;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_33952 = x_acc_43958;
                }
                // load new values
                {
                    x_33953 = defunc_2_f_res_33964;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33954 = x_33952 + x_33953;
                    
                    // store in accumulator
                    {
                        x_acc_43958 = defunc_1_op_res_33954;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33952 = x_acc_43958;
            ((__local
              float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945)] =
                x_33952;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_43964;
        int32_t skip_waves_43965;
        
        skip_waves_43965 = 1;
        
        float x_43960;
        float x_43961;
        
        offset_43964 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_43945,
                      sext_i64_i32(segred_group_sizze_33948))) {
                x_43960 = ((__local
                            float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945 +
                                                        offset_43964)];
            }
        }
        offset_43964 = 1;
        while (slt32(offset_43964, wave_sizze_43947)) {
            if (slt32(local_tid_43945 + offset_43964,
                      sext_i64_i32(segred_group_sizze_33948)) &&
                ((local_tid_43945 - squot32(local_tid_43945, wave_sizze_43947) *
                  wave_sizze_43947) & (2 * offset_43964 - 1)) == 0) {
                // read array element
                {
                    x_43961 = ((volatile __local
                                float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945 +
                                                            offset_43964)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43962 = x_43960 + x_43961;
                    
                    x_43960 = defunc_1_op_res_43962;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945)] =
                        x_43960;
                }
            }
            offset_43964 *= 2;
        }
        while (slt32(skip_waves_43965,
                     squot32(sext_i64_i32(segred_group_sizze_33948) +
                             wave_sizze_43947 - 1, wave_sizze_43947))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_43964 = skip_waves_43965 * wave_sizze_43947;
            if (slt32(local_tid_43945 + offset_43964,
                      sext_i64_i32(segred_group_sizze_33948)) &&
                ((local_tid_43945 - squot32(local_tid_43945, wave_sizze_43947) *
                  wave_sizze_43947) == 0 && (squot32(local_tid_43945,
                                                     wave_sizze_43947) & (2 *
                                                                          skip_waves_43965 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_43961 = ((__local
                                float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945 +
                                                            offset_43964)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43962 = x_43960 + x_43961;
                    
                    x_43960 = defunc_1_op_res_43962;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945)] =
                        x_43960;
                }
            }
            skip_waves_43965 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_43945) == (int64_t) 0) {
                x_acc_43958 = x_43960;
            }
        }
        if (groups_per_segment_43935 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_43945 == 0) {
                    ((__global float *) mem_42693)[gtid_33797 * (i32_res_28038 *
                                                                 i32_res_28038) +
                                                   gtid_33798 * i32_res_28038 +
                                                   gtid_33799] = x_acc_43958;
                }
            }
        } else {
            int32_t old_counter_43966;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_43945 == 0) {
                    ((__global
                      float *) group_res_arr_mem_43940)[sext_i32_i64(virt_group_id_43955) *
                                                        segred_group_sizze_33948] =
                        x_acc_43958;
                    mem_fence_global();
                    old_counter_43966 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_43942)[sext_i32_i64(srem32(flat_segment_id_43956,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_43951)[(int64_t) 0] =
                        old_counter_43966 == groups_per_segment_43935 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_43967;
            
            is_last_group_43967 = ((__local
                                    bool *) sync_arr_mem_43951)[(int64_t) 0];
            if (is_last_group_43967) {
                if (local_tid_43945 == 0) {
                    old_counter_43966 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_43942)[sext_i32_i64(srem32(flat_segment_id_43956,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_43935));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_43968 =
                            sdiv_up64(groups_per_segment_43935,
                                      segred_group_sizze_33948);
                    
                    x_33952 = 0.0F;
                    for (int64_t i_43969 = 0; i_43969 < read_per_thread_43968;
                         i_43969++) {
                        int64_t group_res_id_43970 =
                                sext_i32_i64(local_tid_43945) *
                                read_per_thread_43968 + i_43969;
                        int64_t index_of_group_res_43971 =
                                sext_i32_i64(flat_segment_id_43956) *
                                groups_per_segment_43935 + group_res_id_43970;
                        
                        if (slt64(group_res_id_43970,
                                  groups_per_segment_43935)) {
                            x_33953 = ((__global
                                        float *) group_res_arr_mem_43940)[index_of_group_res_43971 *
                                                                          segred_group_sizze_33948];
                            
                            float defunc_1_op_res_33954;
                            
                            defunc_1_op_res_33954 = x_33952 + x_33953;
                            x_33952 = defunc_1_op_res_33954;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945)] =
                    x_33952;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_43972;
                    int32_t skip_waves_43973;
                    
                    skip_waves_43973 = 1;
                    
                    float x_43960;
                    float x_43961;
                    
                    offset_43972 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_43945,
                                  sext_i64_i32(segred_group_sizze_33948))) {
                            x_43960 = ((__local
                                        float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945 +
                                                                    offset_43972)];
                        }
                    }
                    offset_43972 = 1;
                    while (slt32(offset_43972, wave_sizze_43947)) {
                        if (slt32(local_tid_43945 + offset_43972,
                                  sext_i64_i32(segred_group_sizze_33948)) &&
                            ((local_tid_43945 - squot32(local_tid_43945,
                                                        wave_sizze_43947) *
                              wave_sizze_43947) & (2 * offset_43972 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_43961 = ((volatile __local
                                            float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945 +
                                                                        offset_43972)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43962 = x_43960 + x_43961;
                                
                                x_43960 = defunc_1_op_res_43962;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945)] =
                                    x_43960;
                            }
                        }
                        offset_43972 *= 2;
                    }
                    while (slt32(skip_waves_43973,
                                 squot32(sext_i64_i32(segred_group_sizze_33948) +
                                         wave_sizze_43947 - 1,
                                         wave_sizze_43947))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_43972 = skip_waves_43973 * wave_sizze_43947;
                        if (slt32(local_tid_43945 + offset_43972,
                                  sext_i64_i32(segred_group_sizze_33948)) &&
                            ((local_tid_43945 - squot32(local_tid_43945,
                                                        wave_sizze_43947) *
                              wave_sizze_43947) == 0 &&
                             (squot32(local_tid_43945, wave_sizze_43947) & (2 *
                                                                            skip_waves_43973 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_43961 = ((__local
                                            float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945 +
                                                                        offset_43972)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43962 = x_43960 + x_43961;
                                
                                x_43960 = defunc_1_op_res_43962;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_43949)[sext_i32_i64(local_tid_43945)] =
                                    x_43960;
                            }
                        }
                        skip_waves_43973 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_43945 == 0) {
                            ((__global float *) mem_42693)[gtid_33797 *
                                                           (i32_res_28038 *
                                                            i32_res_28038) +
                                                           gtid_33798 *
                                                           i32_res_28038 +
                                                           gtid_33799] =
                                x_43960;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33948
}
__kernel void mainMagnitudezisegred_large_34857(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44148_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44146_backing_aligned_1,
                                                int64_t N_28022,
                                                int64_t i32_res_28032,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_34910,
                                                int64_t groups_per_segment_44132,
                                                int64_t elements_per_thread_44133,
                                                int64_t virt_num_groups_44134,
                                                int64_t threads_per_segment_44136,
                                                __global
                                                unsigned char *images_mem_42538,
                                                __global
                                                unsigned char *binop_p_mem_42547,
                                                __global
                                                unsigned char *mem_43001,
                                                __global
                                                unsigned char *group_res_arr_mem_44137,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44139)
{
    #define segred_group_sizze_34909 (mainMagnitudezisegred_group_sizze_34851)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44148_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44148_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44146_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44146_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44141;
    int32_t local_tid_44142;
    int64_t group_sizze_44145;
    int32_t wave_sizze_44144;
    int32_t group_tid_44143;
    
    global_tid_44141 = get_global_id(0);
    local_tid_44142 = get_local_id(0);
    group_sizze_44145 = get_local_size(0);
    wave_sizze_44144 = LOCKSTEP_WIDTH;
    group_tid_44143 = get_group_id(0);
    
    int32_t phys_tid_34857;
    
    phys_tid_34857 = global_tid_44141;
    
    __local char *red_arr_mem_44146;
    
    red_arr_mem_44146 = (__local char *) red_arr_mem_44146_backing_0;
    
    __local char *sync_arr_mem_44148;
    
    sync_arr_mem_44148 = (__local char *) sync_arr_mem_44148_backing_1;
    
    int32_t phys_group_id_44150;
    
    phys_group_id_44150 = get_group_id(0);
    for (int32_t i_44151 = 0; i_44151 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44134) - phys_group_id_44150,
                   sext_i64_i32(num_groups_34910)); i_44151++) {
        int32_t virt_group_id_44152 = phys_group_id_44150 + i_44151 *
                sext_i64_i32(num_groups_34910);
        int32_t flat_segment_id_44153 = squot32(virt_group_id_44152,
                                                sext_i64_i32(groups_per_segment_44132));
        int64_t global_tid_44154 = srem64(sext_i32_i64(virt_group_id_44152) *
                                          segred_group_sizze_34909 +
                                          sext_i32_i64(local_tid_44142),
                                          segred_group_sizze_34909 *
                                          groups_per_segment_44132);
        int64_t gtid_34846 = squot64(sext_i32_i64(flat_segment_id_44153),
                                     i32_res_28038);
        int64_t gtid_34847 = sext_i32_i64(flat_segment_id_44153) -
                squot64(sext_i32_i64(flat_segment_id_44153), i32_res_28038) *
                i32_res_28038;
        int64_t gtid_34856;
        float x_acc_44155;
        int64_t chunk_sizze_44156;
        
        chunk_sizze_44156 = smin64(elements_per_thread_44133,
                                   sdiv_up64(i32_res_28032 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44154)),
                                             threads_per_segment_44136));
        
        float x_34913;
        float x_34914;
        
        // neutral-initialise the accumulators
        {
            x_acc_44155 = 0.0F;
        }
        for (int64_t i_44160 = 0; i_44160 < chunk_sizze_44156; i_44160++) {
            gtid_34856 = sext_i32_i64(sext_i64_i32(global_tid_44154)) +
                threads_per_segment_44136 * i_44160;
            // apply map function
            {
                float x_34919 = ((__global
                                  float *) images_mem_42538)[gtid_34846 *
                                                             N_28022 +
                                                             gtid_34856];
                bool isnan_res_34920;
                
                isnan_res_34920 = futrts_isnan32(x_34919);
                
                float defunc_1_f_res_34921;
                
                if (isnan_res_34920) {
                    defunc_1_f_res_34921 = 0.0F;
                } else {
                    float x_34918 = ((__global
                                      float *) binop_p_mem_42547)[gtid_34847 *
                                                                  N_28022 +
                                                                  gtid_34856];
                    float defunc_1_f_res_f_res_34922 = x_34918 * x_34919;
                    
                    defunc_1_f_res_34921 = defunc_1_f_res_f_res_34922;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_34913 = x_acc_44155;
                }
                // load new values
                {
                    x_34914 = defunc_1_f_res_34921;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34915 = x_34913 + x_34914;
                    
                    // store in accumulator
                    {
                        x_acc_44155 = defunc_1_op_res_34915;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34913 = x_acc_44155;
            ((__local
              float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142)] =
                x_34913;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44161;
        int32_t skip_waves_44162;
        
        skip_waves_44162 = 1;
        
        float x_44157;
        float x_44158;
        
        offset_44161 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44142,
                      sext_i64_i32(segred_group_sizze_34909))) {
                x_44157 = ((__local
                            float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142 +
                                                        offset_44161)];
            }
        }
        offset_44161 = 1;
        while (slt32(offset_44161, wave_sizze_44144)) {
            if (slt32(local_tid_44142 + offset_44161,
                      sext_i64_i32(segred_group_sizze_34909)) &&
                ((local_tid_44142 - squot32(local_tid_44142, wave_sizze_44144) *
                  wave_sizze_44144) & (2 * offset_44161 - 1)) == 0) {
                // read array element
                {
                    x_44158 = ((volatile __local
                                float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142 +
                                                            offset_44161)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44159 = x_44157 + x_44158;
                    
                    x_44157 = defunc_1_op_res_44159;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142)] =
                        x_44157;
                }
            }
            offset_44161 *= 2;
        }
        while (slt32(skip_waves_44162,
                     squot32(sext_i64_i32(segred_group_sizze_34909) +
                             wave_sizze_44144 - 1, wave_sizze_44144))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44161 = skip_waves_44162 * wave_sizze_44144;
            if (slt32(local_tid_44142 + offset_44161,
                      sext_i64_i32(segred_group_sizze_34909)) &&
                ((local_tid_44142 - squot32(local_tid_44142, wave_sizze_44144) *
                  wave_sizze_44144) == 0 && (squot32(local_tid_44142,
                                                     wave_sizze_44144) & (2 *
                                                                          skip_waves_44162 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44158 = ((__local
                                float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142 +
                                                            offset_44161)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44159 = x_44157 + x_44158;
                    
                    x_44157 = defunc_1_op_res_44159;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142)] =
                        x_44157;
                }
            }
            skip_waves_44162 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44142) == (int64_t) 0) {
                x_acc_44155 = x_44157;
            }
        }
        if (groups_per_segment_44132 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44142 == 0) {
                    ((__global float *) mem_43001)[gtid_34846 * i32_res_28038 +
                                                   gtid_34847] = x_acc_44155;
                }
            }
        } else {
            int32_t old_counter_44163;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44142 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44137)[sext_i32_i64(virt_group_id_44152) *
                                                        segred_group_sizze_34909] =
                        x_acc_44155;
                    mem_fence_global();
                    old_counter_44163 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44139)[sext_i32_i64(srem32(flat_segment_id_44153,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44148)[(int64_t) 0] =
                        old_counter_44163 == groups_per_segment_44132 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44164;
            
            is_last_group_44164 = ((__local
                                    bool *) sync_arr_mem_44148)[(int64_t) 0];
            if (is_last_group_44164) {
                if (local_tid_44142 == 0) {
                    old_counter_44163 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44139)[sext_i32_i64(srem32(flat_segment_id_44153,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44132));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44165 =
                            sdiv_up64(groups_per_segment_44132,
                                      segred_group_sizze_34909);
                    
                    x_34913 = 0.0F;
                    for (int64_t i_44166 = 0; i_44166 < read_per_thread_44165;
                         i_44166++) {
                        int64_t group_res_id_44167 =
                                sext_i32_i64(local_tid_44142) *
                                read_per_thread_44165 + i_44166;
                        int64_t index_of_group_res_44168 =
                                sext_i32_i64(flat_segment_id_44153) *
                                groups_per_segment_44132 + group_res_id_44167;
                        
                        if (slt64(group_res_id_44167,
                                  groups_per_segment_44132)) {
                            x_34914 = ((__global
                                        float *) group_res_arr_mem_44137)[index_of_group_res_44168 *
                                                                          segred_group_sizze_34909];
                            
                            float defunc_1_op_res_34915;
                            
                            defunc_1_op_res_34915 = x_34913 + x_34914;
                            x_34913 = defunc_1_op_res_34915;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142)] =
                    x_34913;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44169;
                    int32_t skip_waves_44170;
                    
                    skip_waves_44170 = 1;
                    
                    float x_44157;
                    float x_44158;
                    
                    offset_44169 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44142,
                                  sext_i64_i32(segred_group_sizze_34909))) {
                            x_44157 = ((__local
                                        float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142 +
                                                                    offset_44169)];
                        }
                    }
                    offset_44169 = 1;
                    while (slt32(offset_44169, wave_sizze_44144)) {
                        if (slt32(local_tid_44142 + offset_44169,
                                  sext_i64_i32(segred_group_sizze_34909)) &&
                            ((local_tid_44142 - squot32(local_tid_44142,
                                                        wave_sizze_44144) *
                              wave_sizze_44144) & (2 * offset_44169 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44158 = ((volatile __local
                                            float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142 +
                                                                        offset_44169)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44159 = x_44157 + x_44158;
                                
                                x_44157 = defunc_1_op_res_44159;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142)] =
                                    x_44157;
                            }
                        }
                        offset_44169 *= 2;
                    }
                    while (slt32(skip_waves_44170,
                                 squot32(sext_i64_i32(segred_group_sizze_34909) +
                                         wave_sizze_44144 - 1,
                                         wave_sizze_44144))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44169 = skip_waves_44170 * wave_sizze_44144;
                        if (slt32(local_tid_44142 + offset_44169,
                                  sext_i64_i32(segred_group_sizze_34909)) &&
                            ((local_tid_44142 - squot32(local_tid_44142,
                                                        wave_sizze_44144) *
                              wave_sizze_44144) == 0 &&
                             (squot32(local_tid_44142, wave_sizze_44144) & (2 *
                                                                            skip_waves_44170 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44158 = ((__local
                                            float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142 +
                                                                        offset_44169)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44159 = x_44157 + x_44158;
                                
                                x_44157 = defunc_1_op_res_44159;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44146)[sext_i32_i64(local_tid_44142)] =
                                    x_44157;
                            }
                        }
                        skip_waves_44170 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44142 == 0) {
                            ((__global float *) mem_43001)[gtid_34846 *
                                                           i32_res_28038 +
                                                           gtid_34847] =
                                x_44157;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34909
}
__kernel void mainMagnitudezisegred_large_34994(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44236_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44234_backing_aligned_1,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_35043,
                                                int64_t groups_per_segment_44220,
                                                int64_t elements_per_thread_44221,
                                                int64_t virt_num_groups_44222,
                                                int64_t threads_per_segment_44224,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_42786,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43007,
                                                __global
                                                unsigned char *mem_43067,
                                                __global
                                                unsigned char *group_res_arr_mem_44225,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44227)
{
    #define segred_group_sizze_35042 (mainMagnitudezisegred_group_sizze_34988)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44236_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44236_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44234_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44234_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44229;
    int32_t local_tid_44230;
    int64_t group_sizze_44233;
    int32_t wave_sizze_44232;
    int32_t group_tid_44231;
    
    global_tid_44229 = get_global_id(0);
    local_tid_44230 = get_local_id(0);
    group_sizze_44233 = get_local_size(0);
    wave_sizze_44232 = LOCKSTEP_WIDTH;
    group_tid_44231 = get_group_id(0);
    
    int32_t phys_tid_34994;
    
    phys_tid_34994 = global_tid_44229;
    
    __local char *red_arr_mem_44234;
    
    red_arr_mem_44234 = (__local char *) red_arr_mem_44234_backing_0;
    
    __local char *sync_arr_mem_44236;
    
    sync_arr_mem_44236 = (__local char *) sync_arr_mem_44236_backing_1;
    
    int32_t phys_group_id_44238;
    
    phys_group_id_44238 = get_group_id(0);
    for (int32_t i_44239 = 0; i_44239 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44222) - phys_group_id_44238,
                   sext_i64_i32(num_groups_35043)); i_44239++) {
        int32_t virt_group_id_44240 = phys_group_id_44238 + i_44239 *
                sext_i64_i32(num_groups_35043);
        int32_t flat_segment_id_44241 = squot32(virt_group_id_44240,
                                                sext_i64_i32(groups_per_segment_44220));
        int64_t global_tid_44242 = srem64(sext_i32_i64(virt_group_id_44240) *
                                          segred_group_sizze_35042 +
                                          sext_i32_i64(local_tid_44230),
                                          segred_group_sizze_35042 *
                                          groups_per_segment_44220);
        int64_t gtid_34983 = squot64(sext_i32_i64(flat_segment_id_44241),
                                     i32_res_28038);
        int64_t gtid_34984 = sext_i32_i64(flat_segment_id_44241) -
                squot64(sext_i32_i64(flat_segment_id_44241), i32_res_28038) *
                i32_res_28038;
        int64_t gtid_34993;
        float x_acc_44243;
        int64_t chunk_sizze_44244;
        
        chunk_sizze_44244 = smin64(elements_per_thread_44221,
                                   sdiv_up64(i32_res_28038 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44242)),
                                             threads_per_segment_44224));
        
        float x_35046;
        float x_35047;
        
        // neutral-initialise the accumulators
        {
            x_acc_44243 = 0.0F;
        }
        for (int64_t i_44248 = 0; i_44248 < chunk_sizze_44244; i_44248++) {
            gtid_34993 = sext_i32_i64(sext_i64_i32(global_tid_44242)) +
                threads_per_segment_44224 * i_44248;
            // apply map function
            {
                float x_35052 = ((__global
                                  float *) defunc_3_map_res_mem_43007)[gtid_34983 *
                                                                       i32_res_28038 +
                                                                       gtid_34993];
                float x_35053 = ((__global
                                  float *) defunc_3_map_res_mem_42786)[gtid_34983 *
                                                                       (i32_res_28038 *
                                                                        i32_res_28038) +
                                                                       gtid_34984 *
                                                                       i32_res_28038 +
                                                                       gtid_34993];
                float defunc_1_f_res_35054 = x_35052 * x_35053;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35046 = x_acc_44243;
                }
                // load new values
                {
                    x_35047 = defunc_1_f_res_35054;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35048 = x_35046 + x_35047;
                    
                    // store in accumulator
                    {
                        x_acc_44243 = defunc_1_op_res_35048;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35046 = x_acc_44243;
            ((__local
              float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230)] =
                x_35046;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44249;
        int32_t skip_waves_44250;
        
        skip_waves_44250 = 1;
        
        float x_44245;
        float x_44246;
        
        offset_44249 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44230,
                      sext_i64_i32(segred_group_sizze_35042))) {
                x_44245 = ((__local
                            float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230 +
                                                        offset_44249)];
            }
        }
        offset_44249 = 1;
        while (slt32(offset_44249, wave_sizze_44232)) {
            if (slt32(local_tid_44230 + offset_44249,
                      sext_i64_i32(segred_group_sizze_35042)) &&
                ((local_tid_44230 - squot32(local_tid_44230, wave_sizze_44232) *
                  wave_sizze_44232) & (2 * offset_44249 - 1)) == 0) {
                // read array element
                {
                    x_44246 = ((volatile __local
                                float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230 +
                                                            offset_44249)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44247 = x_44245 + x_44246;
                    
                    x_44245 = defunc_1_op_res_44247;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230)] =
                        x_44245;
                }
            }
            offset_44249 *= 2;
        }
        while (slt32(skip_waves_44250,
                     squot32(sext_i64_i32(segred_group_sizze_35042) +
                             wave_sizze_44232 - 1, wave_sizze_44232))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44249 = skip_waves_44250 * wave_sizze_44232;
            if (slt32(local_tid_44230 + offset_44249,
                      sext_i64_i32(segred_group_sizze_35042)) &&
                ((local_tid_44230 - squot32(local_tid_44230, wave_sizze_44232) *
                  wave_sizze_44232) == 0 && (squot32(local_tid_44230,
                                                     wave_sizze_44232) & (2 *
                                                                          skip_waves_44250 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44246 = ((__local
                                float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230 +
                                                            offset_44249)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44247 = x_44245 + x_44246;
                    
                    x_44245 = defunc_1_op_res_44247;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230)] =
                        x_44245;
                }
            }
            skip_waves_44250 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44230) == (int64_t) 0) {
                x_acc_44243 = x_44245;
            }
        }
        if (groups_per_segment_44220 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44230 == 0) {
                    ((__global float *) mem_43067)[gtid_34983 * i32_res_28038 +
                                                   gtid_34984] = x_acc_44243;
                }
            }
        } else {
            int32_t old_counter_44251;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44230 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44225)[sext_i32_i64(virt_group_id_44240) *
                                                        segred_group_sizze_35042] =
                        x_acc_44243;
                    mem_fence_global();
                    old_counter_44251 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44227)[sext_i32_i64(srem32(flat_segment_id_44241,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44236)[(int64_t) 0] =
                        old_counter_44251 == groups_per_segment_44220 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44252;
            
            is_last_group_44252 = ((__local
                                    bool *) sync_arr_mem_44236)[(int64_t) 0];
            if (is_last_group_44252) {
                if (local_tid_44230 == 0) {
                    old_counter_44251 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44227)[sext_i32_i64(srem32(flat_segment_id_44241,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44220));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44253 =
                            sdiv_up64(groups_per_segment_44220,
                                      segred_group_sizze_35042);
                    
                    x_35046 = 0.0F;
                    for (int64_t i_44254 = 0; i_44254 < read_per_thread_44253;
                         i_44254++) {
                        int64_t group_res_id_44255 =
                                sext_i32_i64(local_tid_44230) *
                                read_per_thread_44253 + i_44254;
                        int64_t index_of_group_res_44256 =
                                sext_i32_i64(flat_segment_id_44241) *
                                groups_per_segment_44220 + group_res_id_44255;
                        
                        if (slt64(group_res_id_44255,
                                  groups_per_segment_44220)) {
                            x_35047 = ((__global
                                        float *) group_res_arr_mem_44225)[index_of_group_res_44256 *
                                                                          segred_group_sizze_35042];
                            
                            float defunc_1_op_res_35048;
                            
                            defunc_1_op_res_35048 = x_35046 + x_35047;
                            x_35046 = defunc_1_op_res_35048;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230)] =
                    x_35046;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44257;
                    int32_t skip_waves_44258;
                    
                    skip_waves_44258 = 1;
                    
                    float x_44245;
                    float x_44246;
                    
                    offset_44257 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44230,
                                  sext_i64_i32(segred_group_sizze_35042))) {
                            x_44245 = ((__local
                                        float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230 +
                                                                    offset_44257)];
                        }
                    }
                    offset_44257 = 1;
                    while (slt32(offset_44257, wave_sizze_44232)) {
                        if (slt32(local_tid_44230 + offset_44257,
                                  sext_i64_i32(segred_group_sizze_35042)) &&
                            ((local_tid_44230 - squot32(local_tid_44230,
                                                        wave_sizze_44232) *
                              wave_sizze_44232) & (2 * offset_44257 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44246 = ((volatile __local
                                            float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230 +
                                                                        offset_44257)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44247 = x_44245 + x_44246;
                                
                                x_44245 = defunc_1_op_res_44247;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230)] =
                                    x_44245;
                            }
                        }
                        offset_44257 *= 2;
                    }
                    while (slt32(skip_waves_44258,
                                 squot32(sext_i64_i32(segred_group_sizze_35042) +
                                         wave_sizze_44232 - 1,
                                         wave_sizze_44232))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44257 = skip_waves_44258 * wave_sizze_44232;
                        if (slt32(local_tid_44230 + offset_44257,
                                  sext_i64_i32(segred_group_sizze_35042)) &&
                            ((local_tid_44230 - squot32(local_tid_44230,
                                                        wave_sizze_44232) *
                              wave_sizze_44232) == 0 &&
                             (squot32(local_tid_44230, wave_sizze_44232) & (2 *
                                                                            skip_waves_44258 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44246 = ((__local
                                            float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230 +
                                                                        offset_44257)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44247 = x_44245 + x_44246;
                                
                                x_44245 = defunc_1_op_res_44247;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44234)[sext_i32_i64(local_tid_44230)] =
                                    x_44245;
                            }
                        }
                        skip_waves_44258 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44230 == 0) {
                            ((__global float *) mem_43067)[gtid_34983 *
                                                           i32_res_28038 +
                                                           gtid_34984] =
                                x_44245;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35042
}
__kernel void mainMagnitudezisegred_large_35124(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44368_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44366_backing_aligned_1,
                                                int64_t N_28022,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_35171,
                                                int64_t groups_per_segment_44352,
                                                int64_t elements_per_thread_44353,
                                                int64_t virt_num_groups_44354,
                                                int64_t threads_per_segment_44356,
                                                __global
                                                unsigned char *mem_42554,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43073,
                                                __global
                                                unsigned char *mem_43291,
                                                __global
                                                unsigned char *group_res_arr_mem_44357,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44359)
{
    #define segred_group_sizze_35170 (mainMagnitudezisegred_group_sizze_35118)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44368_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44368_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44366_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44366_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44361;
    int32_t local_tid_44362;
    int64_t group_sizze_44365;
    int32_t wave_sizze_44364;
    int32_t group_tid_44363;
    
    global_tid_44361 = get_global_id(0);
    local_tid_44362 = get_local_id(0);
    group_sizze_44365 = get_local_size(0);
    wave_sizze_44364 = LOCKSTEP_WIDTH;
    group_tid_44363 = get_group_id(0);
    
    int32_t phys_tid_35124;
    
    phys_tid_35124 = global_tid_44361;
    
    __local char *red_arr_mem_44366;
    
    red_arr_mem_44366 = (__local char *) red_arr_mem_44366_backing_0;
    
    __local char *sync_arr_mem_44368;
    
    sync_arr_mem_44368 = (__local char *) sync_arr_mem_44368_backing_1;
    
    int32_t phys_group_id_44370;
    
    phys_group_id_44370 = get_group_id(0);
    for (int32_t i_44371 = 0; i_44371 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44354) - phys_group_id_44370,
                   sext_i64_i32(num_groups_35171)); i_44371++) {
        int32_t virt_group_id_44372 = phys_group_id_44370 + i_44371 *
                sext_i64_i32(num_groups_35171);
        int32_t flat_segment_id_44373 = squot32(virt_group_id_44372,
                                                sext_i64_i32(groups_per_segment_44352));
        int64_t global_tid_44374 = srem64(sext_i32_i64(virt_group_id_44372) *
                                          segred_group_sizze_35170 +
                                          sext_i32_i64(local_tid_44362),
                                          segred_group_sizze_35170 *
                                          groups_per_segment_44352);
        int64_t gtid_35113 = squot64(sext_i32_i64(flat_segment_id_44373),
                                     N_28022);
        int64_t gtid_35114 = sext_i32_i64(flat_segment_id_44373) -
                squot64(sext_i32_i64(flat_segment_id_44373), N_28022) * N_28022;
        int64_t gtid_35123;
        float x_acc_44375;
        int64_t chunk_sizze_44376;
        
        chunk_sizze_44376 = smin64(elements_per_thread_44353,
                                   sdiv_up64(i32_res_28038 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44374)),
                                             threads_per_segment_44356));
        
        float x_35174;
        float x_35175;
        
        // neutral-initialise the accumulators
        {
            x_acc_44375 = 0.0F;
        }
        for (int64_t i_44380 = 0; i_44380 < chunk_sizze_44376; i_44380++) {
            gtid_35123 = sext_i32_i64(sext_i64_i32(global_tid_44374)) +
                threads_per_segment_44356 * i_44380;
            // apply map function
            {
                float x_35179 = ((__global
                                  float *) defunc_4_map_res_mem_43073)[gtid_35113 *
                                                                       i32_res_28038 +
                                                                       gtid_35123];
                float x_35180 = ((__global float *) mem_42554)[gtid_35114 *
                                                               i32_res_28038 +
                                                               gtid_35123];
                float defunc_1_f_res_35181 = x_35179 * x_35180;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35174 = x_acc_44375;
                }
                // load new values
                {
                    x_35175 = defunc_1_f_res_35181;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35176 = x_35174 + x_35175;
                    
                    // store in accumulator
                    {
                        x_acc_44375 = defunc_1_op_res_35176;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35174 = x_acc_44375;
            ((__local
              float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362)] =
                x_35174;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44381;
        int32_t skip_waves_44382;
        
        skip_waves_44382 = 1;
        
        float x_44377;
        float x_44378;
        
        offset_44381 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44362,
                      sext_i64_i32(segred_group_sizze_35170))) {
                x_44377 = ((__local
                            float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362 +
                                                        offset_44381)];
            }
        }
        offset_44381 = 1;
        while (slt32(offset_44381, wave_sizze_44364)) {
            if (slt32(local_tid_44362 + offset_44381,
                      sext_i64_i32(segred_group_sizze_35170)) &&
                ((local_tid_44362 - squot32(local_tid_44362, wave_sizze_44364) *
                  wave_sizze_44364) & (2 * offset_44381 - 1)) == 0) {
                // read array element
                {
                    x_44378 = ((volatile __local
                                float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362 +
                                                            offset_44381)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44379 = x_44377 + x_44378;
                    
                    x_44377 = defunc_1_op_res_44379;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362)] =
                        x_44377;
                }
            }
            offset_44381 *= 2;
        }
        while (slt32(skip_waves_44382,
                     squot32(sext_i64_i32(segred_group_sizze_35170) +
                             wave_sizze_44364 - 1, wave_sizze_44364))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44381 = skip_waves_44382 * wave_sizze_44364;
            if (slt32(local_tid_44362 + offset_44381,
                      sext_i64_i32(segred_group_sizze_35170)) &&
                ((local_tid_44362 - squot32(local_tid_44362, wave_sizze_44364) *
                  wave_sizze_44364) == 0 && (squot32(local_tid_44362,
                                                     wave_sizze_44364) & (2 *
                                                                          skip_waves_44382 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44378 = ((__local
                                float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362 +
                                                            offset_44381)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44379 = x_44377 + x_44378;
                    
                    x_44377 = defunc_1_op_res_44379;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362)] =
                        x_44377;
                }
            }
            skip_waves_44382 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44362) == (int64_t) 0) {
                x_acc_44375 = x_44377;
            }
        }
        if (groups_per_segment_44352 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44362 == 0) {
                    ((__global float *) mem_43291)[gtid_35113 * N_28022 +
                                                   gtid_35114] = x_acc_44375;
                }
            }
        } else {
            int32_t old_counter_44383;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44362 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44357)[sext_i32_i64(virt_group_id_44372) *
                                                        segred_group_sizze_35170] =
                        x_acc_44375;
                    mem_fence_global();
                    old_counter_44383 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44359)[sext_i32_i64(srem32(flat_segment_id_44373,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44368)[(int64_t) 0] =
                        old_counter_44383 == groups_per_segment_44352 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44384;
            
            is_last_group_44384 = ((__local
                                    bool *) sync_arr_mem_44368)[(int64_t) 0];
            if (is_last_group_44384) {
                if (local_tid_44362 == 0) {
                    old_counter_44383 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44359)[sext_i32_i64(srem32(flat_segment_id_44373,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44352));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44385 =
                            sdiv_up64(groups_per_segment_44352,
                                      segred_group_sizze_35170);
                    
                    x_35174 = 0.0F;
                    for (int64_t i_44386 = 0; i_44386 < read_per_thread_44385;
                         i_44386++) {
                        int64_t group_res_id_44387 =
                                sext_i32_i64(local_tid_44362) *
                                read_per_thread_44385 + i_44386;
                        int64_t index_of_group_res_44388 =
                                sext_i32_i64(flat_segment_id_44373) *
                                groups_per_segment_44352 + group_res_id_44387;
                        
                        if (slt64(group_res_id_44387,
                                  groups_per_segment_44352)) {
                            x_35175 = ((__global
                                        float *) group_res_arr_mem_44357)[index_of_group_res_44388 *
                                                                          segred_group_sizze_35170];
                            
                            float defunc_1_op_res_35176;
                            
                            defunc_1_op_res_35176 = x_35174 + x_35175;
                            x_35174 = defunc_1_op_res_35176;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362)] =
                    x_35174;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44389;
                    int32_t skip_waves_44390;
                    
                    skip_waves_44390 = 1;
                    
                    float x_44377;
                    float x_44378;
                    
                    offset_44389 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44362,
                                  sext_i64_i32(segred_group_sizze_35170))) {
                            x_44377 = ((__local
                                        float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362 +
                                                                    offset_44389)];
                        }
                    }
                    offset_44389 = 1;
                    while (slt32(offset_44389, wave_sizze_44364)) {
                        if (slt32(local_tid_44362 + offset_44389,
                                  sext_i64_i32(segred_group_sizze_35170)) &&
                            ((local_tid_44362 - squot32(local_tid_44362,
                                                        wave_sizze_44364) *
                              wave_sizze_44364) & (2 * offset_44389 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44378 = ((volatile __local
                                            float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362 +
                                                                        offset_44389)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44379 = x_44377 + x_44378;
                                
                                x_44377 = defunc_1_op_res_44379;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362)] =
                                    x_44377;
                            }
                        }
                        offset_44389 *= 2;
                    }
                    while (slt32(skip_waves_44390,
                                 squot32(sext_i64_i32(segred_group_sizze_35170) +
                                         wave_sizze_44364 - 1,
                                         wave_sizze_44364))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44389 = skip_waves_44390 * wave_sizze_44364;
                        if (slt32(local_tid_44362 + offset_44389,
                                  sext_i64_i32(segred_group_sizze_35170)) &&
                            ((local_tid_44362 - squot32(local_tid_44362,
                                                        wave_sizze_44364) *
                              wave_sizze_44364) == 0 &&
                             (squot32(local_tid_44362, wave_sizze_44364) & (2 *
                                                                            skip_waves_44390 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44378 = ((__local
                                            float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362 +
                                                                        offset_44389)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44379 = x_44377 + x_44378;
                                
                                x_44377 = defunc_1_op_res_44379;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44366)[sext_i32_i64(local_tid_44362)] =
                                    x_44377;
                            }
                        }
                        skip_waves_44390 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44362 == 0) {
                            ((__global float *) mem_43291)[gtid_35113 *
                                                           N_28022 +
                                                           gtid_35114] =
                                x_44377;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35170
}
__kernel void mainMagnitudezisegred_large_35690(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44620_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44618_backing_aligned_1,
                                                int64_t N_28022,
                                                int64_t i32_res_28032,
                                                int64_t num_groups_35737,
                                                int64_t groups_per_segment_44604,
                                                int64_t elements_per_thread_44605,
                                                int64_t virt_num_groups_44606,
                                                int64_t threads_per_segment_44608,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43335,
                                                __global
                                                unsigned char *mem_43389,
                                                __global
                                                unsigned char *mem_43392,
                                                __global
                                                unsigned char *group_res_arr_mem_44609,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44611)
{
    #define segred_group_sizze_35736 (mainMagnitudezisegred_group_sizze_35684)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44620_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44620_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44618_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44618_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44613;
    int32_t local_tid_44614;
    int64_t group_sizze_44617;
    int32_t wave_sizze_44616;
    int32_t group_tid_44615;
    
    global_tid_44613 = get_global_id(0);
    local_tid_44614 = get_local_id(0);
    group_sizze_44617 = get_local_size(0);
    wave_sizze_44616 = LOCKSTEP_WIDTH;
    group_tid_44615 = get_group_id(0);
    
    int32_t phys_tid_35690;
    
    phys_tid_35690 = global_tid_44613;
    
    __local char *red_arr_mem_44618;
    
    red_arr_mem_44618 = (__local char *) red_arr_mem_44618_backing_0;
    
    __local char *sync_arr_mem_44620;
    
    sync_arr_mem_44620 = (__local char *) sync_arr_mem_44620_backing_1;
    
    int32_t phys_group_id_44622;
    
    phys_group_id_44622 = get_group_id(0);
    for (int32_t i_44623 = 0; i_44623 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44606) - phys_group_id_44622,
                   sext_i64_i32(num_groups_35737)); i_44623++) {
        int32_t virt_group_id_44624 = phys_group_id_44622 + i_44623 *
                sext_i64_i32(num_groups_35737);
        int32_t flat_segment_id_44625 = squot32(virt_group_id_44624,
                                                sext_i64_i32(groups_per_segment_44604));
        int64_t global_tid_44626 = srem64(sext_i32_i64(virt_group_id_44624) *
                                          segred_group_sizze_35736 +
                                          sext_i32_i64(local_tid_44614),
                                          segred_group_sizze_35736 *
                                          groups_per_segment_44604);
        int64_t gtid_35681 = sext_i32_i64(flat_segment_id_44625);
        int64_t gtid_35689;
        float x_acc_44627;
        int64_t chunk_sizze_44628;
        
        chunk_sizze_44628 = smin64(elements_per_thread_44605,
                                   sdiv_up64(i32_res_28032 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44626)),
                                             threads_per_segment_44608));
        
        float x_35740;
        float x_35741;
        
        // neutral-initialise the accumulators
        {
            x_acc_44627 = 0.0F;
        }
        for (int64_t i_44632 = 0; i_44632 < chunk_sizze_44628; i_44632++) {
            gtid_35689 = sext_i32_i64(sext_i64_i32(global_tid_44626)) +
                threads_per_segment_44608 * i_44632;
            // apply map function
            {
                int32_t defunc_0_f_res_35744 = ((__global
                                                 int32_t *) mem_43389)[gtid_35681];
                int32_t index_primexp_40574 = sext_i64_i32(gtid_35689);
                bool cond_35746 = slt32(index_primexp_40574,
                                        defunc_0_f_res_35744);
                float defunc_0_f_res_35747;
                
                if (cond_35746) {
                    int64_t i_35748 = sext_i32_i64(index_primexp_40574);
                    float defunc_0_f_res_t_res_35749 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_35681 *
                                                                                              N_28022 +
                                                                                              i_35748];
                    
                    defunc_0_f_res_35747 = defunc_0_f_res_t_res_35749;
                } else {
                    defunc_0_f_res_35747 = 0.0F;
                }
                
                float defunc_0_f_res_35750 = defunc_0_f_res_35747 *
                      defunc_0_f_res_35747;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35740 = x_acc_44627;
                }
                // load new values
                {
                    x_35741 = defunc_0_f_res_35750;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35742 = x_35740 + x_35741;
                    
                    // store in accumulator
                    {
                        x_acc_44627 = defunc_1_op_res_35742;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35740 = x_acc_44627;
            ((__local
              float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614)] =
                x_35740;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44633;
        int32_t skip_waves_44634;
        
        skip_waves_44634 = 1;
        
        float x_44629;
        float x_44630;
        
        offset_44633 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44614,
                      sext_i64_i32(segred_group_sizze_35736))) {
                x_44629 = ((__local
                            float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614 +
                                                        offset_44633)];
            }
        }
        offset_44633 = 1;
        while (slt32(offset_44633, wave_sizze_44616)) {
            if (slt32(local_tid_44614 + offset_44633,
                      sext_i64_i32(segred_group_sizze_35736)) &&
                ((local_tid_44614 - squot32(local_tid_44614, wave_sizze_44616) *
                  wave_sizze_44616) & (2 * offset_44633 - 1)) == 0) {
                // read array element
                {
                    x_44630 = ((volatile __local
                                float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614 +
                                                            offset_44633)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44631 = x_44629 + x_44630;
                    
                    x_44629 = defunc_1_op_res_44631;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614)] =
                        x_44629;
                }
            }
            offset_44633 *= 2;
        }
        while (slt32(skip_waves_44634,
                     squot32(sext_i64_i32(segred_group_sizze_35736) +
                             wave_sizze_44616 - 1, wave_sizze_44616))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44633 = skip_waves_44634 * wave_sizze_44616;
            if (slt32(local_tid_44614 + offset_44633,
                      sext_i64_i32(segred_group_sizze_35736)) &&
                ((local_tid_44614 - squot32(local_tid_44614, wave_sizze_44616) *
                  wave_sizze_44616) == 0 && (squot32(local_tid_44614,
                                                     wave_sizze_44616) & (2 *
                                                                          skip_waves_44634 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44630 = ((__local
                                float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614 +
                                                            offset_44633)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44631 = x_44629 + x_44630;
                    
                    x_44629 = defunc_1_op_res_44631;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614)] =
                        x_44629;
                }
            }
            skip_waves_44634 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44614) == (int64_t) 0) {
                x_acc_44627 = x_44629;
            }
        }
        if (groups_per_segment_44604 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44614 == 0) {
                    ((__global float *) mem_43392)[gtid_35681] = x_acc_44627;
                }
            }
        } else {
            int32_t old_counter_44635;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44614 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44609)[sext_i32_i64(virt_group_id_44624) *
                                                        segred_group_sizze_35736] =
                        x_acc_44627;
                    mem_fence_global();
                    old_counter_44635 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44611)[sext_i32_i64(srem32(flat_segment_id_44625,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44620)[(int64_t) 0] =
                        old_counter_44635 == groups_per_segment_44604 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44636;
            
            is_last_group_44636 = ((__local
                                    bool *) sync_arr_mem_44620)[(int64_t) 0];
            if (is_last_group_44636) {
                if (local_tid_44614 == 0) {
                    old_counter_44635 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44611)[sext_i32_i64(srem32(flat_segment_id_44625,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44604));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44637 =
                            sdiv_up64(groups_per_segment_44604,
                                      segred_group_sizze_35736);
                    
                    x_35740 = 0.0F;
                    for (int64_t i_44638 = 0; i_44638 < read_per_thread_44637;
                         i_44638++) {
                        int64_t group_res_id_44639 =
                                sext_i32_i64(local_tid_44614) *
                                read_per_thread_44637 + i_44638;
                        int64_t index_of_group_res_44640 =
                                sext_i32_i64(flat_segment_id_44625) *
                                groups_per_segment_44604 + group_res_id_44639;
                        
                        if (slt64(group_res_id_44639,
                                  groups_per_segment_44604)) {
                            x_35741 = ((__global
                                        float *) group_res_arr_mem_44609)[index_of_group_res_44640 *
                                                                          segred_group_sizze_35736];
                            
                            float defunc_1_op_res_35742;
                            
                            defunc_1_op_res_35742 = x_35740 + x_35741;
                            x_35740 = defunc_1_op_res_35742;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614)] =
                    x_35740;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44641;
                    int32_t skip_waves_44642;
                    
                    skip_waves_44642 = 1;
                    
                    float x_44629;
                    float x_44630;
                    
                    offset_44641 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44614,
                                  sext_i64_i32(segred_group_sizze_35736))) {
                            x_44629 = ((__local
                                        float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614 +
                                                                    offset_44641)];
                        }
                    }
                    offset_44641 = 1;
                    while (slt32(offset_44641, wave_sizze_44616)) {
                        if (slt32(local_tid_44614 + offset_44641,
                                  sext_i64_i32(segred_group_sizze_35736)) &&
                            ((local_tid_44614 - squot32(local_tid_44614,
                                                        wave_sizze_44616) *
                              wave_sizze_44616) & (2 * offset_44641 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44630 = ((volatile __local
                                            float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614 +
                                                                        offset_44641)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44631 = x_44629 + x_44630;
                                
                                x_44629 = defunc_1_op_res_44631;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614)] =
                                    x_44629;
                            }
                        }
                        offset_44641 *= 2;
                    }
                    while (slt32(skip_waves_44642,
                                 squot32(sext_i64_i32(segred_group_sizze_35736) +
                                         wave_sizze_44616 - 1,
                                         wave_sizze_44616))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44641 = skip_waves_44642 * wave_sizze_44616;
                        if (slt32(local_tid_44614 + offset_44641,
                                  sext_i64_i32(segred_group_sizze_35736)) &&
                            ((local_tid_44614 - squot32(local_tid_44614,
                                                        wave_sizze_44616) *
                              wave_sizze_44616) == 0 &&
                             (squot32(local_tid_44614, wave_sizze_44616) & (2 *
                                                                            skip_waves_44642 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44630 = ((__local
                                            float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614 +
                                                                        offset_44641)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44631 = x_44629 + x_44630;
                                
                                x_44629 = defunc_1_op_res_44631;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44618)[sext_i32_i64(local_tid_44614)] =
                                    x_44629;
                            }
                        }
                        skip_waves_44642 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44614 == 0) {
                            ((__global float *) mem_43392)[gtid_35681] =
                                x_44629;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35736
}
__kernel void mainMagnitudezisegred_large_35711(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44560_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44558_backing_aligned_1,
                                                int64_t N_28022,
                                                int64_t i32_res_28032,
                                                int64_t num_groups_35723,
                                                int64_t groups_per_segment_44544,
                                                int64_t elements_per_thread_44545,
                                                int64_t virt_num_groups_44546,
                                                int64_t threads_per_segment_44548,
                                                __global
                                                unsigned char *images_mem_42538,
                                                __global
                                                unsigned char *mem_43389,
                                                __global
                                                unsigned char *group_res_arr_mem_44549,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44551)
{
    #define segred_group_sizze_35722 (mainMagnitudezisegred_group_sizze_35705)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44560_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44560_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44558_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44558_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44553;
    int32_t local_tid_44554;
    int64_t group_sizze_44557;
    int32_t wave_sizze_44556;
    int32_t group_tid_44555;
    
    global_tid_44553 = get_global_id(0);
    local_tid_44554 = get_local_id(0);
    group_sizze_44557 = get_local_size(0);
    wave_sizze_44556 = LOCKSTEP_WIDTH;
    group_tid_44555 = get_group_id(0);
    
    int32_t phys_tid_35711;
    
    phys_tid_35711 = global_tid_44553;
    
    __local char *red_arr_mem_44558;
    
    red_arr_mem_44558 = (__local char *) red_arr_mem_44558_backing_0;
    
    __local char *sync_arr_mem_44560;
    
    sync_arr_mem_44560 = (__local char *) sync_arr_mem_44560_backing_1;
    
    int32_t phys_group_id_44562;
    
    phys_group_id_44562 = get_group_id(0);
    for (int32_t i_44563 = 0; i_44563 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44546) - phys_group_id_44562,
                   sext_i64_i32(num_groups_35723)); i_44563++) {
        int32_t virt_group_id_44564 = phys_group_id_44562 + i_44563 *
                sext_i64_i32(num_groups_35723);
        int32_t flat_segment_id_44565 = squot32(virt_group_id_44564,
                                                sext_i64_i32(groups_per_segment_44544));
        int64_t global_tid_44566 = srem64(sext_i32_i64(virt_group_id_44564) *
                                          segred_group_sizze_35722 +
                                          sext_i32_i64(local_tid_44554),
                                          segred_group_sizze_35722 *
                                          groups_per_segment_44544);
        int64_t gtid_35702 = sext_i32_i64(flat_segment_id_44565);
        int64_t gtid_35710;
        int32_t x_acc_44567;
        int64_t chunk_sizze_44568;
        
        chunk_sizze_44568 = smin64(elements_per_thread_44545,
                                   sdiv_up64(i32_res_28032 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44566)),
                                             threads_per_segment_44548));
        
        int32_t x_35726;
        int32_t x_35727;
        
        // neutral-initialise the accumulators
        {
            x_acc_44567 = 0;
        }
        for (int64_t i_44572 = 0; i_44572 < chunk_sizze_44568; i_44572++) {
            gtid_35710 = sext_i32_i64(sext_i64_i32(global_tid_44566)) +
                threads_per_segment_44548 * i_44572;
            // apply map function
            {
                float x_35730 = ((__global
                                  float *) images_mem_42538)[gtid_35702 *
                                                             N_28022 +
                                                             gtid_35710];
                bool isnan_res_35731;
                
                isnan_res_35731 = futrts_isnan32(x_35730);
                
                bool cond_35732 = !isnan_res_35731;
                int32_t defunc_0_f_res_35733 = btoi_bool_i32(cond_35732);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35726 = x_acc_44567;
                }
                // load new values
                {
                    x_35727 = defunc_0_f_res_35733;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_35728 = add32(x_35726, x_35727);
                    
                    // store in accumulator
                    {
                        x_acc_44567 = defunc_1_op_res_35728;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35726 = x_acc_44567;
            ((__local
              int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554)] =
                x_35726;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44573;
        int32_t skip_waves_44574;
        
        skip_waves_44574 = 1;
        
        int32_t x_44569;
        int32_t x_44570;
        
        offset_44573 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44554,
                      sext_i64_i32(segred_group_sizze_35722))) {
                x_44569 = ((__local
                            int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554 +
                                                          offset_44573)];
            }
        }
        offset_44573 = 1;
        while (slt32(offset_44573, wave_sizze_44556)) {
            if (slt32(local_tid_44554 + offset_44573,
                      sext_i64_i32(segred_group_sizze_35722)) &&
                ((local_tid_44554 - squot32(local_tid_44554, wave_sizze_44556) *
                  wave_sizze_44556) & (2 * offset_44573 - 1)) == 0) {
                // read array element
                {
                    x_44570 = ((volatile __local
                                int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554 +
                                                              offset_44573)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44571 = add32(x_44569, x_44570);
                    
                    x_44569 = defunc_1_op_res_44571;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554)] =
                        x_44569;
                }
            }
            offset_44573 *= 2;
        }
        while (slt32(skip_waves_44574,
                     squot32(sext_i64_i32(segred_group_sizze_35722) +
                             wave_sizze_44556 - 1, wave_sizze_44556))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44573 = skip_waves_44574 * wave_sizze_44556;
            if (slt32(local_tid_44554 + offset_44573,
                      sext_i64_i32(segred_group_sizze_35722)) &&
                ((local_tid_44554 - squot32(local_tid_44554, wave_sizze_44556) *
                  wave_sizze_44556) == 0 && (squot32(local_tid_44554,
                                                     wave_sizze_44556) & (2 *
                                                                          skip_waves_44574 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44570 = ((__local
                                int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554 +
                                                              offset_44573)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44571 = add32(x_44569, x_44570);
                    
                    x_44569 = defunc_1_op_res_44571;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554)] =
                        x_44569;
                }
            }
            skip_waves_44574 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44554) == (int64_t) 0) {
                x_acc_44567 = x_44569;
            }
        }
        if (groups_per_segment_44544 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44554 == 0) {
                    ((__global int32_t *) mem_43389)[gtid_35702] = x_acc_44567;
                }
            }
        } else {
            int32_t old_counter_44575;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44554 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44549)[sext_i32_i64(virt_group_id_44564) *
                                                          segred_group_sizze_35722] =
                        x_acc_44567;
                    mem_fence_global();
                    old_counter_44575 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44551)[sext_i32_i64(srem32(flat_segment_id_44565,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44560)[(int64_t) 0] =
                        old_counter_44575 == groups_per_segment_44544 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44576;
            
            is_last_group_44576 = ((__local
                                    bool *) sync_arr_mem_44560)[(int64_t) 0];
            if (is_last_group_44576) {
                if (local_tid_44554 == 0) {
                    old_counter_44575 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44551)[sext_i32_i64(srem32(flat_segment_id_44565,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44544));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44577 =
                            sdiv_up64(groups_per_segment_44544,
                                      segred_group_sizze_35722);
                    
                    x_35726 = 0;
                    for (int64_t i_44578 = 0; i_44578 < read_per_thread_44577;
                         i_44578++) {
                        int64_t group_res_id_44579 =
                                sext_i32_i64(local_tid_44554) *
                                read_per_thread_44577 + i_44578;
                        int64_t index_of_group_res_44580 =
                                sext_i32_i64(flat_segment_id_44565) *
                                groups_per_segment_44544 + group_res_id_44579;
                        
                        if (slt64(group_res_id_44579,
                                  groups_per_segment_44544)) {
                            x_35727 = ((__global
                                        int32_t *) group_res_arr_mem_44549)[index_of_group_res_44580 *
                                                                            segred_group_sizze_35722];
                            
                            int32_t defunc_1_op_res_35728;
                            
                            defunc_1_op_res_35728 = add32(x_35726, x_35727);
                            x_35726 = defunc_1_op_res_35728;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554)] =
                    x_35726;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44581;
                    int32_t skip_waves_44582;
                    
                    skip_waves_44582 = 1;
                    
                    int32_t x_44569;
                    int32_t x_44570;
                    
                    offset_44581 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44554,
                                  sext_i64_i32(segred_group_sizze_35722))) {
                            x_44569 = ((__local
                                        int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554 +
                                                                      offset_44581)];
                        }
                    }
                    offset_44581 = 1;
                    while (slt32(offset_44581, wave_sizze_44556)) {
                        if (slt32(local_tid_44554 + offset_44581,
                                  sext_i64_i32(segred_group_sizze_35722)) &&
                            ((local_tid_44554 - squot32(local_tid_44554,
                                                        wave_sizze_44556) *
                              wave_sizze_44556) & (2 * offset_44581 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44570 = ((volatile __local
                                            int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554 +
                                                                          offset_44581)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44571 = add32(x_44569,
                                                                      x_44570);
                                
                                x_44569 = defunc_1_op_res_44571;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554)] =
                                    x_44569;
                            }
                        }
                        offset_44581 *= 2;
                    }
                    while (slt32(skip_waves_44582,
                                 squot32(sext_i64_i32(segred_group_sizze_35722) +
                                         wave_sizze_44556 - 1,
                                         wave_sizze_44556))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44581 = skip_waves_44582 * wave_sizze_44556;
                        if (slt32(local_tid_44554 + offset_44581,
                                  sext_i64_i32(segred_group_sizze_35722)) &&
                            ((local_tid_44554 - squot32(local_tid_44554,
                                                        wave_sizze_44556) *
                              wave_sizze_44556) == 0 &&
                             (squot32(local_tid_44554, wave_sizze_44556) & (2 *
                                                                            skip_waves_44582 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44570 = ((__local
                                            int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554 +
                                                                          offset_44581)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44571 = add32(x_44569,
                                                                      x_44570);
                                
                                x_44569 = defunc_1_op_res_44571;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44558)[sext_i32_i64(local_tid_44554)] =
                                    x_44569;
                            }
                        }
                        skip_waves_44582 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44554 == 0) {
                            ((__global int32_t *) mem_43389)[gtid_35702] =
                                x_44569;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35722
}
__kernel void mainMagnitudezisegred_large_35862(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44729_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44727_backing_aligned_1,
                                                int64_t N_28022,
                                                int64_t i32_res_28393,
                                                int64_t num_groups_35880,
                                                int64_t groups_per_segment_44713,
                                                int64_t elements_per_thread_44714,
                                                int64_t virt_num_groups_44715,
                                                int64_t threads_per_segment_44717,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43335,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43401,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43402,
                                                __global
                                                unsigned char *mem_43435,
                                                __global
                                                unsigned char *group_res_arr_mem_44718,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44720)
{
    #define segred_group_sizze_35879 (mainMagnitudezisegred_group_sizze_35856)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44729_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44729_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44727_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44727_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44722;
    int32_t local_tid_44723;
    int64_t group_sizze_44726;
    int32_t wave_sizze_44725;
    int32_t group_tid_44724;
    
    global_tid_44722 = get_global_id(0);
    local_tid_44723 = get_local_id(0);
    group_sizze_44726 = get_local_size(0);
    wave_sizze_44725 = LOCKSTEP_WIDTH;
    group_tid_44724 = get_group_id(0);
    
    int32_t phys_tid_35862;
    
    phys_tid_35862 = global_tid_44722;
    
    __local char *red_arr_mem_44727;
    
    red_arr_mem_44727 = (__local char *) red_arr_mem_44727_backing_0;
    
    __local char *sync_arr_mem_44729;
    
    sync_arr_mem_44729 = (__local char *) sync_arr_mem_44729_backing_1;
    
    int32_t phys_group_id_44731;
    
    phys_group_id_44731 = get_group_id(0);
    for (int32_t i_44732 = 0; i_44732 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44715) - phys_group_id_44731,
                   sext_i64_i32(num_groups_35880)); i_44732++) {
        int32_t virt_group_id_44733 = phys_group_id_44731 + i_44732 *
                sext_i64_i32(num_groups_35880);
        int32_t flat_segment_id_44734 = squot32(virt_group_id_44733,
                                                sext_i64_i32(groups_per_segment_44713));
        int64_t global_tid_44735 = srem64(sext_i32_i64(virt_group_id_44733) *
                                          segred_group_sizze_35879 +
                                          sext_i32_i64(local_tid_44723),
                                          segred_group_sizze_35879 *
                                          groups_per_segment_44713);
        int64_t gtid_35853 = sext_i32_i64(flat_segment_id_44734);
        int64_t gtid_35861;
        float x_acc_44736;
        int64_t chunk_sizze_44737;
        
        chunk_sizze_44737 = smin64(elements_per_thread_44714,
                                   sdiv_up64(i32_res_28393 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44735)),
                                             threads_per_segment_44717));
        
        float x_35883;
        float x_35884;
        
        // neutral-initialise the accumulators
        {
            x_acc_44736 = 0.0F;
        }
        for (int64_t i_44741 = 0; i_44741 < chunk_sizze_44737; i_44741++) {
            gtid_35861 = sext_i32_i64(sext_i64_i32(global_tid_44735)) +
                threads_per_segment_44717 * i_44741;
            // apply map function
            {
                int32_t x_35888 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43401)[gtid_35853];
                int32_t index_primexp_40579 = sext_i64_i32(gtid_35861);
                bool cond_35890 = slt32(index_primexp_40579, x_35888);
                float defunc_0_f_res_35891;
                
                if (cond_35890) {
                    int32_t x_35887 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_35853];
                    int32_t x_35892 = add32(x_35887, index_primexp_40579);
                    int32_t x_35893 = sub32(x_35892, x_35888);
                    int32_t i_35894 = add32(1, x_35893);
                    int64_t i_35895 = sext_i32_i64(i_35894);
                    float defunc_0_f_res_t_res_35896 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_35853 *
                                                                                              N_28022 +
                                                                                              i_35895];
                    
                    defunc_0_f_res_35891 = defunc_0_f_res_t_res_35896;
                } else {
                    defunc_0_f_res_35891 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_35883 = x_acc_44736;
                }
                // load new values
                {
                    x_35884 = defunc_0_f_res_35891;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35885 = x_35883 + x_35884;
                    
                    // store in accumulator
                    {
                        x_acc_44736 = defunc_1_op_res_35885;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35883 = x_acc_44736;
            ((__local
              float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723)] =
                x_35883;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44742;
        int32_t skip_waves_44743;
        
        skip_waves_44743 = 1;
        
        float x_44738;
        float x_44739;
        
        offset_44742 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44723,
                      sext_i64_i32(segred_group_sizze_35879))) {
                x_44738 = ((__local
                            float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723 +
                                                        offset_44742)];
            }
        }
        offset_44742 = 1;
        while (slt32(offset_44742, wave_sizze_44725)) {
            if (slt32(local_tid_44723 + offset_44742,
                      sext_i64_i32(segred_group_sizze_35879)) &&
                ((local_tid_44723 - squot32(local_tid_44723, wave_sizze_44725) *
                  wave_sizze_44725) & (2 * offset_44742 - 1)) == 0) {
                // read array element
                {
                    x_44739 = ((volatile __local
                                float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723 +
                                                            offset_44742)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44740 = x_44738 + x_44739;
                    
                    x_44738 = defunc_1_op_res_44740;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723)] =
                        x_44738;
                }
            }
            offset_44742 *= 2;
        }
        while (slt32(skip_waves_44743,
                     squot32(sext_i64_i32(segred_group_sizze_35879) +
                             wave_sizze_44725 - 1, wave_sizze_44725))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44742 = skip_waves_44743 * wave_sizze_44725;
            if (slt32(local_tid_44723 + offset_44742,
                      sext_i64_i32(segred_group_sizze_35879)) &&
                ((local_tid_44723 - squot32(local_tid_44723, wave_sizze_44725) *
                  wave_sizze_44725) == 0 && (squot32(local_tid_44723,
                                                     wave_sizze_44725) & (2 *
                                                                          skip_waves_44743 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44739 = ((__local
                                float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723 +
                                                            offset_44742)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44740 = x_44738 + x_44739;
                    
                    x_44738 = defunc_1_op_res_44740;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723)] =
                        x_44738;
                }
            }
            skip_waves_44743 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44723) == (int64_t) 0) {
                x_acc_44736 = x_44738;
            }
        }
        if (groups_per_segment_44713 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44723 == 0) {
                    ((__global float *) mem_43435)[gtid_35853] = x_acc_44736;
                }
            }
        } else {
            int32_t old_counter_44744;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44723 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44718)[sext_i32_i64(virt_group_id_44733) *
                                                        segred_group_sizze_35879] =
                        x_acc_44736;
                    mem_fence_global();
                    old_counter_44744 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44720)[sext_i32_i64(srem32(flat_segment_id_44734,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44729)[(int64_t) 0] =
                        old_counter_44744 == groups_per_segment_44713 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44745;
            
            is_last_group_44745 = ((__local
                                    bool *) sync_arr_mem_44729)[(int64_t) 0];
            if (is_last_group_44745) {
                if (local_tid_44723 == 0) {
                    old_counter_44744 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44720)[sext_i32_i64(srem32(flat_segment_id_44734,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44713));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44746 =
                            sdiv_up64(groups_per_segment_44713,
                                      segred_group_sizze_35879);
                    
                    x_35883 = 0.0F;
                    for (int64_t i_44747 = 0; i_44747 < read_per_thread_44746;
                         i_44747++) {
                        int64_t group_res_id_44748 =
                                sext_i32_i64(local_tid_44723) *
                                read_per_thread_44746 + i_44747;
                        int64_t index_of_group_res_44749 =
                                sext_i32_i64(flat_segment_id_44734) *
                                groups_per_segment_44713 + group_res_id_44748;
                        
                        if (slt64(group_res_id_44748,
                                  groups_per_segment_44713)) {
                            x_35884 = ((__global
                                        float *) group_res_arr_mem_44718)[index_of_group_res_44749 *
                                                                          segred_group_sizze_35879];
                            
                            float defunc_1_op_res_35885;
                            
                            defunc_1_op_res_35885 = x_35883 + x_35884;
                            x_35883 = defunc_1_op_res_35885;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723)] =
                    x_35883;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44750;
                    int32_t skip_waves_44751;
                    
                    skip_waves_44751 = 1;
                    
                    float x_44738;
                    float x_44739;
                    
                    offset_44750 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44723,
                                  sext_i64_i32(segred_group_sizze_35879))) {
                            x_44738 = ((__local
                                        float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723 +
                                                                    offset_44750)];
                        }
                    }
                    offset_44750 = 1;
                    while (slt32(offset_44750, wave_sizze_44725)) {
                        if (slt32(local_tid_44723 + offset_44750,
                                  sext_i64_i32(segred_group_sizze_35879)) &&
                            ((local_tid_44723 - squot32(local_tid_44723,
                                                        wave_sizze_44725) *
                              wave_sizze_44725) & (2 * offset_44750 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44739 = ((volatile __local
                                            float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723 +
                                                                        offset_44750)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44740 = x_44738 + x_44739;
                                
                                x_44738 = defunc_1_op_res_44740;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723)] =
                                    x_44738;
                            }
                        }
                        offset_44750 *= 2;
                    }
                    while (slt32(skip_waves_44751,
                                 squot32(sext_i64_i32(segred_group_sizze_35879) +
                                         wave_sizze_44725 - 1,
                                         wave_sizze_44725))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44750 = skip_waves_44751 * wave_sizze_44725;
                        if (slt32(local_tid_44723 + offset_44750,
                                  sext_i64_i32(segred_group_sizze_35879)) &&
                            ((local_tid_44723 - squot32(local_tid_44723,
                                                        wave_sizze_44725) *
                              wave_sizze_44725) == 0 &&
                             (squot32(local_tid_44723, wave_sizze_44725) & (2 *
                                                                            skip_waves_44751 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44739 = ((__local
                                            float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723 +
                                                                        offset_44750)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44740 = x_44738 + x_44739;
                                
                                x_44738 = defunc_1_op_res_44740;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44727)[sext_i32_i64(local_tid_44723)] =
                                    x_44738;
                            }
                        }
                        skip_waves_44751 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44723 == 0) {
                            ((__global float *) mem_43435)[gtid_35853] =
                                x_44738;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35879
}
__kernel void mainMagnitudezisegred_large_36921(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44930_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44928_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_44926_backing_aligned_2,
                                                __local volatile
                                                int64_t *red_arr_mem_44924_backing_aligned_3,
                                                int64_t iota32_arg_28418,
                                                int64_t num_groups_37092,
                                                int64_t groups_per_segment_44906,
                                                int64_t elements_per_thread_44907,
                                                int64_t virt_num_groups_44908,
                                                __global
                                                unsigned char *mem_43441,
                                                __global
                                                unsigned char *mem_43494,
                                                __global
                                                unsigned char *mem_43496,
                                                __global
                                                unsigned char *mem_43500,
                                                __global
                                                unsigned char *mem_43503,
                                                __global
                                                unsigned char *mem_43505,
                                                __global
                                                unsigned char *mem_43507,
                                                __global
                                                unsigned char *group_res_arr_mem_44911,
                                                __global
                                                unsigned char *group_res_arr_mem_44913,
                                                __global
                                                unsigned char *group_res_arr_mem_44915,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44917)
{
    #define segred_group_sizze_37091 (mainMagnitudezisegred_group_sizze_36915)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44930_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_44930_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44928_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44928_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44926_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44926_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44924_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44924_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44919;
    int32_t local_tid_44920;
    int64_t group_sizze_44923;
    int32_t wave_sizze_44922;
    int32_t group_tid_44921;
    
    global_tid_44919 = get_global_id(0);
    local_tid_44920 = get_local_id(0);
    group_sizze_44923 = get_local_size(0);
    wave_sizze_44922 = LOCKSTEP_WIDTH;
    group_tid_44921 = get_group_id(0);
    
    int32_t phys_tid_36921;
    
    phys_tid_36921 = global_tid_44919;
    
    __local char *red_arr_mem_44924;
    
    red_arr_mem_44924 = (__local char *) red_arr_mem_44924_backing_0;
    
    __local char *red_arr_mem_44926;
    
    red_arr_mem_44926 = (__local char *) red_arr_mem_44926_backing_1;
    
    __local char *red_arr_mem_44928;
    
    red_arr_mem_44928 = (__local char *) red_arr_mem_44928_backing_2;
    
    __local char *sync_arr_mem_44930;
    
    sync_arr_mem_44930 = (__local char *) sync_arr_mem_44930_backing_3;
    
    int32_t phys_group_id_44932;
    
    phys_group_id_44932 = get_group_id(0);
    for (int32_t i_44933 = 0; i_44933 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44908) - phys_group_id_44932,
                   sext_i64_i32(num_groups_37092)); i_44933++) {
        int32_t virt_group_id_44934 = phys_group_id_44932 + i_44933 *
                sext_i64_i32(num_groups_37092);
        int32_t flat_segment_id_44935 = squot32(virt_group_id_44934,
                                                sext_i64_i32(groups_per_segment_44906));
        int64_t global_tid_44936 = srem64(sext_i32_i64(virt_group_id_44934) *
                                          segred_group_sizze_37091 +
                                          sext_i32_i64(local_tid_44920),
                                          segred_group_sizze_37091 *
                                          groups_per_segment_44906);
        int64_t gtid_36912 = sext_i32_i64(flat_segment_id_44935);
        int64_t gtid_36920;
        bool x_acc_44937;
        int32_t x_acc_44938;
        float x_acc_44939;
        int64_t chunk_sizze_44940;
        int64_t starting_point_44941;
        
        starting_point_44941 = sext_i32_i64(sext_i64_i32(global_tid_44936)) *
            elements_per_thread_44907;
        
        int64_t remaining_elements_44942;
        
        remaining_elements_44942 = iota32_arg_28418 - starting_point_44941;
        if (sle64(remaining_elements_44942, (int64_t) 0) ||
            sle64(iota32_arg_28418, starting_point_44941)) {
            chunk_sizze_44940 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_28418,
                      (sext_i32_i64(sext_i64_i32(global_tid_44936)) +
                       (int64_t) 1) * elements_per_thread_44907)) {
                chunk_sizze_44940 = iota32_arg_28418 -
                    sext_i32_i64(sext_i64_i32(global_tid_44936)) *
                    elements_per_thread_44907;
            } else {
                chunk_sizze_44940 = elements_per_thread_44907;
            }
        }
        
        bool x_37097;
        int32_t x_37098;
        float x_37099;
        bool x_37100;
        int32_t x_37101;
        float x_37102;
        
        // neutral-initialise the accumulators
        {
            x_acc_44937 = 0;
            x_acc_44938 = -1;
            x_acc_44939 = 0.0F;
        }
        for (int64_t i_44957 = 0; i_44957 < elements_per_thread_44907;
             i_44957++) {
            gtid_36920 = sext_i32_i64(local_tid_44920) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_44936),
                                      sext_i64_i32(segred_group_sizze_37091))) *
                 elements_per_thread_44907 + i_44957) *
                segred_group_sizze_37091;
            if (slt64(gtid_36920, iota32_arg_28418)) {
                // apply map function
                {
                    int32_t y_37111 = ((__global
                                        int32_t *) mem_43496)[gtid_36912];
                    float y_37112 = ((__global float *) mem_43494)[gtid_36912];
                    float x_37116 = ((__global float *) mem_43500)[gtid_36912 *
                                                                   iota32_arg_28418 +
                                                                   gtid_36920];
                    float x_37117 = ((__global float *) mem_43441)[gtid_36920];
                    int32_t index_primexp_40598 = sext_i64_i32(gtid_36920);
                    float defunc_0_f_res_37120 = x_37116 / y_37112;
                    bool cond_37121 = slt32(index_primexp_40598, y_37111);
                    bool isnan_res_37122;
                    
                    isnan_res_37122 = futrts_isnan32(defunc_0_f_res_37120);
                    
                    bool cond_t_res_37123 = !isnan_res_37122;
                    bool x_37124 = cond_37121 && cond_t_res_37123;
                    float abs_res_37125 = (float) fabs(defunc_0_f_res_37120);
                    bool defunc_2_f_res_t_res_37126 = x_37117 < abs_res_37125;
                    bool x_37127 = x_37124 && defunc_2_f_res_t_res_37126;
                    float defunc_1_f_res_37128;
                    
                    if (cond_37121) {
                        defunc_1_f_res_37128 = defunc_0_f_res_37120;
                    } else {
                        defunc_1_f_res_37128 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_37097 = x_acc_44937;
                        x_37098 = x_acc_44938;
                        x_37099 = x_acc_44939;
                    }
                    // load new values
                    {
                        x_37100 = x_37127;
                        x_37101 = index_primexp_40598;
                        x_37102 = defunc_1_f_res_37128;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_37103;
                        int32_t defunc_1_op_res_37104;
                        
                        if (x_37097) {
                            defunc_1_op_res_37103 = x_37097;
                            defunc_1_op_res_37104 = x_37098;
                        } else {
                            bool x_37105 = x_37100 && x_37100;
                            bool x_37106 = !x_37100;
                            bool y_37107 = x_37097 && x_37106;
                            bool defunc_1_op_res_f_res_37108 = x_37105 ||
                                 y_37107;
                            int32_t defunc_1_op_res_f_res_37109;
                            
                            if (x_37100) {
                                defunc_1_op_res_f_res_37109 = x_37101;
                            } else {
                                defunc_1_op_res_f_res_37109 = x_37098;
                            }
                            defunc_1_op_res_37103 = defunc_1_op_res_f_res_37108;
                            defunc_1_op_res_37104 = defunc_1_op_res_f_res_37109;
                        }
                        
                        float defunc_1_op_res_37110 = x_37099 + x_37102;
                        
                        // store in accumulator
                        {
                            x_acc_44937 = defunc_1_op_res_37103;
                            x_acc_44938 = defunc_1_op_res_37104;
                            x_acc_44939 = defunc_1_op_res_37110;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_37097 = x_acc_44937;
                x_37098 = x_acc_44938;
                x_37099 = x_acc_44939;
                ((__local
                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                    x_37097;
                ((__local
                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                    x_37098;
                ((__local
                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                    x_37099;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_44958;
            int32_t skip_waves_44959;
            
            skip_waves_44959 = 1;
            
            bool x_44943;
            int32_t x_44944;
            float x_44945;
            bool x_44946;
            int32_t x_44947;
            float x_44948;
            
            offset_44958 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44920,
                          sext_i64_i32(segred_group_sizze_37091))) {
                    x_44943 = ((__local
                                bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                           offset_44958)];
                    x_44944 = ((__local
                                int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                              offset_44958)];
                    x_44945 = ((__local
                                float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                            offset_44958)];
                }
            }
            offset_44958 = 1;
            while (slt32(offset_44958, wave_sizze_44922)) {
                if (slt32(local_tid_44920 + offset_44958,
                          sext_i64_i32(segred_group_sizze_37091)) &&
                    ((local_tid_44920 - squot32(local_tid_44920,
                                                wave_sizze_44922) *
                      wave_sizze_44922) & (2 * offset_44958 - 1)) == 0) {
                    // read array element
                    {
                        x_44946 = ((volatile __local
                                    bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                               offset_44958)];
                        x_44947 = ((volatile __local
                                    int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                  offset_44958)];
                        x_44948 = ((volatile __local
                                    float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                offset_44958)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44949;
                        int32_t defunc_1_op_res_44950;
                        
                        if (x_44943) {
                            defunc_1_op_res_44949 = x_44943;
                            defunc_1_op_res_44950 = x_44944;
                        } else {
                            bool x_44951 = x_44946 && x_44946;
                            bool x_44952 = !x_44946;
                            bool y_44953 = x_44943 && x_44952;
                            bool defunc_1_op_res_f_res_44954 = x_44951 ||
                                 y_44953;
                            int32_t defunc_1_op_res_f_res_44955;
                            
                            if (x_44946) {
                                defunc_1_op_res_f_res_44955 = x_44947;
                            } else {
                                defunc_1_op_res_f_res_44955 = x_44944;
                            }
                            defunc_1_op_res_44949 = defunc_1_op_res_f_res_44954;
                            defunc_1_op_res_44950 = defunc_1_op_res_f_res_44955;
                        }
                        
                        float defunc_1_op_res_44956 = x_44945 + x_44948;
                        
                        x_44943 = defunc_1_op_res_44949;
                        x_44944 = defunc_1_op_res_44950;
                        x_44945 = defunc_1_op_res_44956;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                            x_44943;
                        ((volatile __local
                          int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                            x_44944;
                        ((volatile __local
                          float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                            x_44945;
                    }
                }
                offset_44958 *= 2;
            }
            while (slt32(skip_waves_44959,
                         squot32(sext_i64_i32(segred_group_sizze_37091) +
                                 wave_sizze_44922 - 1, wave_sizze_44922))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44958 = skip_waves_44959 * wave_sizze_44922;
                if (slt32(local_tid_44920 + offset_44958,
                          sext_i64_i32(segred_group_sizze_37091)) &&
                    ((local_tid_44920 - squot32(local_tid_44920,
                                                wave_sizze_44922) *
                      wave_sizze_44922) == 0 && (squot32(local_tid_44920,
                                                         wave_sizze_44922) &
                                                 (2 * skip_waves_44959 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44946 = ((__local
                                    bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                               offset_44958)];
                        x_44947 = ((__local
                                    int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                  offset_44958)];
                        x_44948 = ((__local
                                    float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                offset_44958)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44949;
                        int32_t defunc_1_op_res_44950;
                        
                        if (x_44943) {
                            defunc_1_op_res_44949 = x_44943;
                            defunc_1_op_res_44950 = x_44944;
                        } else {
                            bool x_44951 = x_44946 && x_44946;
                            bool x_44952 = !x_44946;
                            bool y_44953 = x_44943 && x_44952;
                            bool defunc_1_op_res_f_res_44954 = x_44951 ||
                                 y_44953;
                            int32_t defunc_1_op_res_f_res_44955;
                            
                            if (x_44946) {
                                defunc_1_op_res_f_res_44955 = x_44947;
                            } else {
                                defunc_1_op_res_f_res_44955 = x_44944;
                            }
                            defunc_1_op_res_44949 = defunc_1_op_res_f_res_44954;
                            defunc_1_op_res_44950 = defunc_1_op_res_f_res_44955;
                        }
                        
                        float defunc_1_op_res_44956 = x_44945 + x_44948;
                        
                        x_44943 = defunc_1_op_res_44949;
                        x_44944 = defunc_1_op_res_44950;
                        x_44945 = defunc_1_op_res_44956;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                            x_44943;
                        ((__local
                          int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                            x_44944;
                        ((__local
                          float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                            x_44945;
                    }
                }
                skip_waves_44959 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_44920) == (int64_t) 0) {
                    x_acc_44937 = x_44943;
                    x_acc_44938 = x_44944;
                    x_acc_44939 = x_44945;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_44920) == (int64_t) 0)) {
                    x_acc_44937 = 0;
                    x_acc_44938 = -1;
                    x_acc_44939 = 0.0F;
                }
            }
        }
        x_37097 = x_acc_44937;
        x_37098 = x_acc_44938;
        x_37099 = x_acc_44939;
        if (groups_per_segment_44906 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44920 == 0) {
                    ((__global bool *) mem_43503)[gtid_36912] = x_acc_44937;
                    ((__global int32_t *) mem_43505)[gtid_36912] = x_acc_44938;
                    ((__global float *) mem_43507)[gtid_36912] = x_acc_44939;
                }
            }
        } else {
            int32_t old_counter_44960;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44920 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_44911)[sext_i32_i64(virt_group_id_44934) *
                                                       segred_group_sizze_37091] =
                        x_acc_44937;
                    ((__global
                      int32_t *) group_res_arr_mem_44913)[sext_i32_i64(virt_group_id_44934) *
                                                          segred_group_sizze_37091] =
                        x_acc_44938;
                    ((__global
                      float *) group_res_arr_mem_44915)[sext_i32_i64(virt_group_id_44934) *
                                                        segred_group_sizze_37091] =
                        x_acc_44939;
                    mem_fence_global();
                    old_counter_44960 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44917)[sext_i32_i64(srem32(flat_segment_id_44935,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44930)[(int64_t) 0] =
                        old_counter_44960 == groups_per_segment_44906 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44961;
            
            is_last_group_44961 = ((__local
                                    bool *) sync_arr_mem_44930)[(int64_t) 0];
            if (is_last_group_44961) {
                if (local_tid_44920 == 0) {
                    old_counter_44960 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44917)[sext_i32_i64(srem32(flat_segment_id_44935,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44906));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44962 =
                            sdiv_up64(groups_per_segment_44906,
                                      segred_group_sizze_37091);
                    
                    x_37097 = 0;
                    x_37098 = -1;
                    x_37099 = 0.0F;
                    for (int64_t i_44963 = 0; i_44963 < read_per_thread_44962;
                         i_44963++) {
                        int64_t group_res_id_44964 =
                                sext_i32_i64(local_tid_44920) *
                                read_per_thread_44962 + i_44963;
                        int64_t index_of_group_res_44965 =
                                sext_i32_i64(flat_segment_id_44935) *
                                groups_per_segment_44906 + group_res_id_44964;
                        
                        if (slt64(group_res_id_44964,
                                  groups_per_segment_44906)) {
                            x_37100 = ((__global
                                        bool *) group_res_arr_mem_44911)[index_of_group_res_44965 *
                                                                         segred_group_sizze_37091];
                            x_37101 = ((__global
                                        int32_t *) group_res_arr_mem_44913)[index_of_group_res_44965 *
                                                                            segred_group_sizze_37091];
                            x_37102 = ((__global
                                        float *) group_res_arr_mem_44915)[index_of_group_res_44965 *
                                                                          segred_group_sizze_37091];
                            
                            bool defunc_1_op_res_37103;
                            int32_t defunc_1_op_res_37104;
                            
                            if (x_37097) {
                                defunc_1_op_res_37103 = x_37097;
                                defunc_1_op_res_37104 = x_37098;
                            } else {
                                bool x_37105 = x_37100 && x_37100;
                                bool x_37106 = !x_37100;
                                bool y_37107 = x_37097 && x_37106;
                                bool defunc_1_op_res_f_res_37108 = x_37105 ||
                                     y_37107;
                                int32_t defunc_1_op_res_f_res_37109;
                                
                                if (x_37100) {
                                    defunc_1_op_res_f_res_37109 = x_37101;
                                } else {
                                    defunc_1_op_res_f_res_37109 = x_37098;
                                }
                                defunc_1_op_res_37103 =
                                    defunc_1_op_res_f_res_37108;
                                defunc_1_op_res_37104 =
                                    defunc_1_op_res_f_res_37109;
                            }
                            
                            float defunc_1_op_res_37110 = x_37099 + x_37102;
                            
                            x_37097 = defunc_1_op_res_37103;
                            x_37098 = defunc_1_op_res_37104;
                            x_37099 = defunc_1_op_res_37110;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                    x_37097;
                ((__local
                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                    x_37098;
                ((__local
                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                    x_37099;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44966;
                    int32_t skip_waves_44967;
                    
                    skip_waves_44967 = 1;
                    
                    bool x_44943;
                    int32_t x_44944;
                    float x_44945;
                    bool x_44946;
                    int32_t x_44947;
                    float x_44948;
                    
                    offset_44966 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44920,
                                  sext_i64_i32(segred_group_sizze_37091))) {
                            x_44943 = ((__local
                                        bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                                   offset_44966)];
                            x_44944 = ((__local
                                        int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                      offset_44966)];
                            x_44945 = ((__local
                                        float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                    offset_44966)];
                        }
                    }
                    offset_44966 = 1;
                    while (slt32(offset_44966, wave_sizze_44922)) {
                        if (slt32(local_tid_44920 + offset_44966,
                                  sext_i64_i32(segred_group_sizze_37091)) &&
                            ((local_tid_44920 - squot32(local_tid_44920,
                                                        wave_sizze_44922) *
                              wave_sizze_44922) & (2 * offset_44966 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44946 = ((volatile __local
                                            bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                                       offset_44966)];
                                x_44947 = ((volatile __local
                                            int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                          offset_44966)];
                                x_44948 = ((volatile __local
                                            float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                        offset_44966)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44949;
                                int32_t defunc_1_op_res_44950;
                                
                                if (x_44943) {
                                    defunc_1_op_res_44949 = x_44943;
                                    defunc_1_op_res_44950 = x_44944;
                                } else {
                                    bool x_44951 = x_44946 && x_44946;
                                    bool x_44952 = !x_44946;
                                    bool y_44953 = x_44943 && x_44952;
                                    bool defunc_1_op_res_f_res_44954 =
                                         x_44951 || y_44953;
                                    int32_t defunc_1_op_res_f_res_44955;
                                    
                                    if (x_44946) {
                                        defunc_1_op_res_f_res_44955 = x_44947;
                                    } else {
                                        defunc_1_op_res_f_res_44955 = x_44944;
                                    }
                                    defunc_1_op_res_44949 =
                                        defunc_1_op_res_f_res_44954;
                                    defunc_1_op_res_44950 =
                                        defunc_1_op_res_f_res_44955;
                                }
                                
                                float defunc_1_op_res_44956 = x_44945 + x_44948;
                                
                                x_44943 = defunc_1_op_res_44949;
                                x_44944 = defunc_1_op_res_44950;
                                x_44945 = defunc_1_op_res_44956;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                                    x_44943;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                                    x_44944;
                                ((volatile __local
                                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                                    x_44945;
                            }
                        }
                        offset_44966 *= 2;
                    }
                    while (slt32(skip_waves_44967,
                                 squot32(sext_i64_i32(segred_group_sizze_37091) +
                                         wave_sizze_44922 - 1,
                                         wave_sizze_44922))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44966 = skip_waves_44967 * wave_sizze_44922;
                        if (slt32(local_tid_44920 + offset_44966,
                                  sext_i64_i32(segred_group_sizze_37091)) &&
                            ((local_tid_44920 - squot32(local_tid_44920,
                                                        wave_sizze_44922) *
                              wave_sizze_44922) == 0 &&
                             (squot32(local_tid_44920, wave_sizze_44922) & (2 *
                                                                            skip_waves_44967 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44946 = ((__local
                                            bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                                       offset_44966)];
                                x_44947 = ((__local
                                            int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                          offset_44966)];
                                x_44948 = ((__local
                                            float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                        offset_44966)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44949;
                                int32_t defunc_1_op_res_44950;
                                
                                if (x_44943) {
                                    defunc_1_op_res_44949 = x_44943;
                                    defunc_1_op_res_44950 = x_44944;
                                } else {
                                    bool x_44951 = x_44946 && x_44946;
                                    bool x_44952 = !x_44946;
                                    bool y_44953 = x_44943 && x_44952;
                                    bool defunc_1_op_res_f_res_44954 =
                                         x_44951 || y_44953;
                                    int32_t defunc_1_op_res_f_res_44955;
                                    
                                    if (x_44946) {
                                        defunc_1_op_res_f_res_44955 = x_44947;
                                    } else {
                                        defunc_1_op_res_f_res_44955 = x_44944;
                                    }
                                    defunc_1_op_res_44949 =
                                        defunc_1_op_res_f_res_44954;
                                    defunc_1_op_res_44950 =
                                        defunc_1_op_res_f_res_44955;
                                }
                                
                                float defunc_1_op_res_44956 = x_44945 + x_44948;
                                
                                x_44943 = defunc_1_op_res_44949;
                                x_44944 = defunc_1_op_res_44950;
                                x_44945 = defunc_1_op_res_44956;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                                    x_44943;
                                ((__local
                                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                                    x_44944;
                                ((__local
                                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                                    x_44945;
                            }
                        }
                        skip_waves_44967 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44920 == 0) {
                            ((__global bool *) mem_43503)[gtid_36912] = x_44943;
                            ((__global int32_t *) mem_43505)[gtid_36912] =
                                x_44944;
                            ((__global float *) mem_43507)[gtid_36912] =
                                x_44945;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37091
}
__kernel void mainMagnitudezisegred_nonseg_35780(__global int *global_failure,
                                                 __local volatile
                                                 int64_t *red_arr_mem_44663_backing_aligned_0,
                                                 __local volatile
                                                 int64_t *sync_arr_mem_44661_backing_aligned_1,
                                                 int64_t m_28023,
                                                 int64_t num_groups_35775,
                                                 int64_t num_threads_44655,
                                                 __global
                                                 unsigned char *defunc_3_map_res_mem_43401,
                                                 __global
                                                 unsigned char *mem_43406,
                                                 __global
                                                 unsigned char *mainMagnitudezicounter_mem_44651,
                                                 __global
                                                 unsigned char *group_res_arr_mem_44653)
{
    #define segred_group_sizze_35773 (mainMagnitudezisegred_group_sizze_35772)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44663_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44663_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44661_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44661_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44656;
    int32_t local_tid_44657;
    int64_t group_sizze_44660;
    int32_t wave_sizze_44659;
    int32_t group_tid_44658;
    
    global_tid_44656 = get_global_id(0);
    local_tid_44657 = get_local_id(0);
    group_sizze_44660 = get_local_size(0);
    wave_sizze_44659 = LOCKSTEP_WIDTH;
    group_tid_44658 = get_group_id(0);
    
    int32_t phys_tid_35780;
    
    phys_tid_35780 = global_tid_44656;
    
    __local char *sync_arr_mem_44661;
    
    sync_arr_mem_44661 = (__local char *) sync_arr_mem_44661_backing_0;
    
    __local char *red_arr_mem_44663;
    
    red_arr_mem_44663 = (__local char *) red_arr_mem_44663_backing_1;
    
    int64_t dummy_35778;
    
    dummy_35778 = (int64_t) 0;
    
    int64_t gtid_35779;
    
    gtid_35779 = (int64_t) 0;
    
    int32_t x_acc_44665;
    int64_t chunk_sizze_44666;
    
    chunk_sizze_44666 = smin64(sdiv_up64(m_28023,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_35773 *
                                         num_groups_35775))),
                               sdiv_up64(m_28023 - sext_i32_i64(phys_tid_35780),
                                         num_threads_44655));
    
    int32_t x_28389;
    int32_t x_28390;
    
    // neutral-initialise the accumulators
    {
        x_acc_44665 = 0;
    }
    for (int64_t i_44670 = 0; i_44670 < chunk_sizze_44666; i_44670++) {
        gtid_35779 = sext_i32_i64(phys_tid_35780) + num_threads_44655 * i_44670;
        // apply map function
        {
            int32_t x_28392 = ((__global
                                int32_t *) defunc_3_map_res_mem_43401)[gtid_35779];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28389 = x_acc_44665;
            }
            // load new values
            {
                x_28390 = x_28392;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28391 = smax32(x_28389, x_28390);
                
                // store in accumulator
                {
                    x_acc_44665 = defunc_1_op_res_28391;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28389 = x_acc_44665;
        ((__local int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657)] =
            x_28389;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44671;
    int32_t skip_waves_44672;
    
    skip_waves_44672 = 1;
    
    int32_t x_44667;
    int32_t x_44668;
    
    offset_44671 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44657, sext_i64_i32(segred_group_sizze_35773))) {
            x_44667 = ((__local
                        int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657 +
                                                      offset_44671)];
        }
    }
    offset_44671 = 1;
    while (slt32(offset_44671, wave_sizze_44659)) {
        if (slt32(local_tid_44657 + offset_44671,
                  sext_i64_i32(segred_group_sizze_35773)) && ((local_tid_44657 -
                                                               squot32(local_tid_44657,
                                                                       wave_sizze_44659) *
                                                               wave_sizze_44659) &
                                                              (2 *
                                                               offset_44671 -
                                                               1)) == 0) {
            // read array element
            {
                x_44668 = ((volatile __local
                            int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657 +
                                                          offset_44671)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44669 = smax32(x_44667, x_44668);
                
                x_44667 = defunc_1_op_res_44669;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657)] =
                    x_44667;
            }
        }
        offset_44671 *= 2;
    }
    while (slt32(skip_waves_44672,
                 squot32(sext_i64_i32(segred_group_sizze_35773) +
                         wave_sizze_44659 - 1, wave_sizze_44659))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44671 = skip_waves_44672 * wave_sizze_44659;
        if (slt32(local_tid_44657 + offset_44671,
                  sext_i64_i32(segred_group_sizze_35773)) && ((local_tid_44657 -
                                                               squot32(local_tid_44657,
                                                                       wave_sizze_44659) *
                                                               wave_sizze_44659) ==
                                                              0 &&
                                                              (squot32(local_tid_44657,
                                                                       wave_sizze_44659) &
                                                               (2 *
                                                                skip_waves_44672 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44668 = ((__local
                            int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657 +
                                                          offset_44671)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44669 = smax32(x_44667, x_44668);
                
                x_44667 = defunc_1_op_res_44669;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657)] =
                    x_44667;
            }
        }
        skip_waves_44672 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44657) == (int64_t) 0) {
            x_acc_44665 = x_44667;
        }
    }
    
    int32_t old_counter_44673;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44657 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44653)[sext_i32_i64(group_tid_44658) *
                                                  segred_group_sizze_35773] =
                x_acc_44665;
            mem_fence_global();
            old_counter_44673 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_44651)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44661)[(int64_t) 0] =
                old_counter_44673 == num_groups_35775 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44674;
    
    is_last_group_44674 = ((__local bool *) sync_arr_mem_44661)[(int64_t) 0];
    if (is_last_group_44674) {
        if (local_tid_44657 == 0) {
            old_counter_44673 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_44651)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_35775));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44675 = sdiv_up64(num_groups_35775,
                                                      segred_group_sizze_35773);
            
            x_28389 = 0;
            for (int64_t i_44676 = 0; i_44676 < read_per_thread_44675;
                 i_44676++) {
                int64_t group_res_id_44677 = sext_i32_i64(local_tid_44657) *
                        read_per_thread_44675 + i_44676;
                int64_t index_of_group_res_44678 = group_res_id_44677;
                
                if (slt64(group_res_id_44677, num_groups_35775)) {
                    x_28390 = ((__global
                                int32_t *) group_res_arr_mem_44653)[index_of_group_res_44678 *
                                                                    segred_group_sizze_35773];
                    
                    int32_t defunc_1_op_res_28391;
                    
                    defunc_1_op_res_28391 = smax32(x_28389, x_28390);
                    x_28389 = defunc_1_op_res_28391;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657)] =
            x_28389;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44679;
            int32_t skip_waves_44680;
            
            skip_waves_44680 = 1;
            
            int32_t x_44667;
            int32_t x_44668;
            
            offset_44679 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44657,
                          sext_i64_i32(segred_group_sizze_35773))) {
                    x_44667 = ((__local
                                int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657 +
                                                              offset_44679)];
                }
            }
            offset_44679 = 1;
            while (slt32(offset_44679, wave_sizze_44659)) {
                if (slt32(local_tid_44657 + offset_44679,
                          sext_i64_i32(segred_group_sizze_35773)) &&
                    ((local_tid_44657 - squot32(local_tid_44657,
                                                wave_sizze_44659) *
                      wave_sizze_44659) & (2 * offset_44679 - 1)) == 0) {
                    // read array element
                    {
                        x_44668 = ((volatile __local
                                    int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657 +
                                                                  offset_44679)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44669 = smax32(x_44667,
                                                               x_44668);
                        
                        x_44667 = defunc_1_op_res_44669;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657)] =
                            x_44667;
                    }
                }
                offset_44679 *= 2;
            }
            while (slt32(skip_waves_44680,
                         squot32(sext_i64_i32(segred_group_sizze_35773) +
                                 wave_sizze_44659 - 1, wave_sizze_44659))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44679 = skip_waves_44680 * wave_sizze_44659;
                if (slt32(local_tid_44657 + offset_44679,
                          sext_i64_i32(segred_group_sizze_35773)) &&
                    ((local_tid_44657 - squot32(local_tid_44657,
                                                wave_sizze_44659) *
                      wave_sizze_44659) == 0 && (squot32(local_tid_44657,
                                                         wave_sizze_44659) &
                                                 (2 * skip_waves_44680 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44668 = ((__local
                                    int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657 +
                                                                  offset_44679)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44669 = smax32(x_44667,
                                                               x_44668);
                        
                        x_44667 = defunc_1_op_res_44669;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44663)[sext_i32_i64(local_tid_44657)] =
                            x_44667;
                    }
                }
                skip_waves_44680 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44657 == 0) {
                    ((__global int32_t *) mem_43406)[(int64_t) 0] = x_44667;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35773
}
__kernel void mainMagnitudezisegred_small_33810(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_43921_backing_aligned_0,
                                                int64_t N_28022,
                                                int64_t m_28023,
                                                int64_t i32_res_28032,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_33949,
                                                int64_t segment_sizze_nonzzero_43914,
                                                __global
                                                unsigned char *images_mem_42538,
                                                __global
                                                unsigned char *binop_p_mem_42547,
                                                __global
                                                unsigned char *mem_42688,
                                                __global
                                                unsigned char *mem_42693)
{
    #define segred_group_sizze_33948 (mainMagnitudezisegred_group_sizze_33804)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_43921_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43921_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43916;
    int32_t local_tid_43917;
    int64_t group_sizze_43920;
    int32_t wave_sizze_43919;
    int32_t group_tid_43918;
    
    global_tid_43916 = get_global_id(0);
    local_tid_43917 = get_local_id(0);
    group_sizze_43920 = get_local_size(0);
    wave_sizze_43919 = LOCKSTEP_WIDTH;
    group_tid_43918 = get_group_id(0);
    
    int32_t phys_tid_33810;
    
    phys_tid_33810 = global_tid_43916;
    
    __local char *red_arr_mem_43921;
    
    red_arr_mem_43921 = (__local char *) red_arr_mem_43921_backing_0;
    
    int32_t phys_group_id_43923;
    
    phys_group_id_43923 = get_group_id(0);
    for (int32_t i_43924 = 0; i_43924 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023 * i32_res_28038 *
                                          i32_res_28038,
                                          squot64(segred_group_sizze_33948,
                                                  segment_sizze_nonzzero_43914))) -
                   phys_group_id_43923, sext_i64_i32(num_groups_33949));
         i_43924++) {
        int32_t virt_group_id_43925 = phys_group_id_43923 + i_43924 *
                sext_i64_i32(num_groups_33949);
        int64_t gtid_33797 = squot64(squot64(sext_i32_i64(local_tid_43917),
                                             segment_sizze_nonzzero_43914) +
                                     sext_i32_i64(virt_group_id_43925) *
                                     squot64(segred_group_sizze_33948,
                                             segment_sizze_nonzzero_43914),
                                     i32_res_28038 * i32_res_28038);
        int64_t gtid_33798 = squot64(squot64(sext_i32_i64(local_tid_43917),
                                             segment_sizze_nonzzero_43914) +
                                     sext_i32_i64(virt_group_id_43925) *
                                     squot64(segred_group_sizze_33948,
                                             segment_sizze_nonzzero_43914) -
                                     squot64(squot64(sext_i32_i64(local_tid_43917),
                                                     segment_sizze_nonzzero_43914) +
                                             sext_i32_i64(virt_group_id_43925) *
                                             squot64(segred_group_sizze_33948,
                                                     segment_sizze_nonzzero_43914),
                                             i32_res_28038 * i32_res_28038) *
                                     (i32_res_28038 * i32_res_28038),
                                     i32_res_28038);
        int64_t gtid_33799 = squot64(sext_i32_i64(local_tid_43917),
                                     segment_sizze_nonzzero_43914) +
                sext_i32_i64(virt_group_id_43925) *
                squot64(segred_group_sizze_33948,
                        segment_sizze_nonzzero_43914) -
                squot64(squot64(sext_i32_i64(local_tid_43917),
                                segment_sizze_nonzzero_43914) +
                        sext_i32_i64(virt_group_id_43925) *
                        squot64(segred_group_sizze_33948,
                                segment_sizze_nonzzero_43914), i32_res_28038 *
                        i32_res_28038) * (i32_res_28038 * i32_res_28038) -
                squot64(squot64(sext_i32_i64(local_tid_43917),
                                segment_sizze_nonzzero_43914) +
                        sext_i32_i64(virt_group_id_43925) *
                        squot64(segred_group_sizze_33948,
                                segment_sizze_nonzzero_43914) -
                        squot64(squot64(sext_i32_i64(local_tid_43917),
                                        segment_sizze_nonzzero_43914) +
                                sext_i32_i64(virt_group_id_43925) *
                                squot64(segred_group_sizze_33948,
                                        segment_sizze_nonzzero_43914),
                                i32_res_28038 * i32_res_28038) *
                        (i32_res_28038 * i32_res_28038), i32_res_28038) *
                i32_res_28038;
        int64_t gtid_33809 = srem64(sext_i32_i64(local_tid_43917),
                                    i32_res_28032);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28032) && (((slt64(gtid_33797,
                                                              m_28023) &&
                                                        slt64(gtid_33798,
                                                              i32_res_28038)) &&
                                                       slt64(gtid_33799,
                                                             i32_res_28038)) &&
                                                      slt64(sext_i32_i64(local_tid_43917),
                                                            i32_res_28032 *
                                                            squot64(segred_group_sizze_33948,
                                                                    segment_sizze_nonzzero_43914)))) {
                float x_33958 = ((__global
                                  float *) images_mem_42538)[gtid_33797 *
                                                             N_28022 +
                                                             gtid_33809];
                float x_33959 = ((__global
                                  float *) binop_p_mem_42547)[gtid_33798 *
                                                              N_28022 +
                                                              gtid_33809];
                float x_33960 = ((__global float *) mem_42688)[gtid_33799 *
                                                               N_28022 +
                                                               gtid_33809];
                float x_33961 = x_33959 * x_33960;
                bool isnan_res_33962;
                
                isnan_res_33962 = futrts_isnan32(x_33958);
                
                float y_33963;
                
                if (isnan_res_33962) {
                    y_33963 = 0.0F;
                } else {
                    y_33963 = 1.0F;
                }
                
                float defunc_2_f_res_33964 = x_33961 * y_33963;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)] =
                        defunc_2_f_res_33964;
                }
            } else {
                ((__local
                  float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28032)) {
            // perform segmented scan to imitate reduction
            {
                float x_33952;
                float x_33953;
                float x_43926;
                float x_43927;
                bool ltid_in_bounds_43929;
                
                ltid_in_bounds_43929 = slt64(sext_i32_i64(local_tid_43917),
                                             i32_res_28032 *
                                             squot64(segred_group_sizze_33948,
                                                     segment_sizze_nonzzero_43914));
                
                int32_t skip_threads_43930;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_43929) {
                        x_33953 = ((volatile __local
                                    float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)];
                        if ((local_tid_43917 - squot32(local_tid_43917, 32) *
                             32) == 0) {
                            x_33952 = x_33953;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_43930 = 1;
                    while (slt32(skip_threads_43930, 32)) {
                        if (sle32(skip_threads_43930, local_tid_43917 -
                                  squot32(local_tid_43917, 32) * 32) &&
                            ltid_in_bounds_43929) {
                            // read operands
                            {
                                x_33952 = ((volatile __local
                                            float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917) -
                                                                        sext_i32_i64(skip_threads_43930)];
                            }
                            // perform operation
                            {
                                bool inactive_43931 =
                                     slt64(srem64(sext_i32_i64(local_tid_43917),
                                                  i32_res_28032),
                                           sext_i32_i64(local_tid_43917) -
                                           sext_i32_i64(local_tid_43917 -
                                           skip_threads_43930));
                                
                                if (inactive_43931) {
                                    x_33952 = x_33953;
                                }
                                if (!inactive_43931) {
                                    float defunc_1_op_res_33954 = x_33952 +
                                          x_33953;
                                    
                                    x_33952 = defunc_1_op_res_33954;
                                }
                            }
                        }
                        if (sle32(wave_sizze_43919, skip_threads_43930)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_43930, local_tid_43917 -
                                  squot32(local_tid_43917, 32) * 32) &&
                            ltid_in_bounds_43929) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)] =
                                    x_33952;
                                x_33953 = x_33952;
                            }
                        }
                        if (sle32(wave_sizze_43919, skip_threads_43930)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_43930 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_43917 - squot32(local_tid_43917, 32) * 32) ==
                        31 && ltid_in_bounds_43929) {
                        ((volatile __local
                          float *) red_arr_mem_43921)[sext_i32_i64(squot32(local_tid_43917,
                                                                           32))] =
                            x_33952;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_43932;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_43917, 32) == 0 &&
                            ltid_in_bounds_43929) {
                            x_43927 = ((volatile __local
                                        float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)];
                            if ((local_tid_43917 - squot32(local_tid_43917,
                                                           32) * 32) == 0) {
                                x_43926 = x_43927;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_43932 = 1;
                        while (slt32(skip_threads_43932, 32)) {
                            if (sle32(skip_threads_43932, local_tid_43917 -
                                      squot32(local_tid_43917, 32) * 32) &&
                                (squot32(local_tid_43917, 32) == 0 &&
                                 ltid_in_bounds_43929)) {
                                // read operands
                                {
                                    x_43926 = ((volatile __local
                                                float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917) -
                                                                            sext_i32_i64(skip_threads_43932)];
                                }
                                // perform operation
                                {
                                    bool inactive_43933 =
                                         slt64(srem64(sext_i32_i64(local_tid_43917 *
                                                      32 + 32 - 1),
                                                      i32_res_28032),
                                               sext_i32_i64(local_tid_43917 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_43917 -
                                                             skip_threads_43932) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_43933) {
                                        x_43926 = x_43927;
                                    }
                                    if (!inactive_43933) {
                                        float defunc_1_op_res_43928 = x_43926 +
                                              x_43927;
                                        
                                        x_43926 = defunc_1_op_res_43928;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_43919, skip_threads_43932)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_43932, local_tid_43917 -
                                      squot32(local_tid_43917, 32) * 32) &&
                                (squot32(local_tid_43917, 32) == 0 &&
                                 ltid_in_bounds_43929)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)] =
                                        x_43926;
                                    x_43927 = x_43926;
                                }
                            }
                            if (sle32(wave_sizze_43919, skip_threads_43932)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_43932 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_43917, 32) == 0 ||
                          !ltid_in_bounds_43929)) {
                        // read operands
                        {
                            x_33953 = x_33952;
                            x_33952 = ((__local
                                        float *) red_arr_mem_43921)[sext_i32_i64(squot32(local_tid_43917,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_43934 =
                                 slt64(srem64(sext_i32_i64(local_tid_43917),
                                              i32_res_28032),
                                       sext_i32_i64(local_tid_43917) -
                                       sext_i32_i64(squot32(local_tid_43917,
                                                            32) * 32 - 1));
                            
                            if (inactive_43934) {
                                x_33952 = x_33953;
                            }
                            if (!inactive_43934) {
                                float defunc_1_op_res_33954 = x_33952 + x_33953;
                                
                                x_33952 = defunc_1_op_res_33954;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)] =
                                x_33952;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_43917, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_43921)[sext_i32_i64(local_tid_43917)] =
                            x_33953;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_43925) *
                      squot64(segred_group_sizze_33948,
                              segment_sizze_nonzzero_43914) +
                      sext_i32_i64(local_tid_43917), m_28023 * i32_res_28038 *
                      i32_res_28038) && slt64(sext_i32_i64(local_tid_43917),
                                              squot64(segred_group_sizze_33948,
                                                      segment_sizze_nonzzero_43914))) {
                ((__global
                  float *) mem_42693)[squot64(sext_i32_i64(virt_group_id_43925) *
                                              squot64(segred_group_sizze_33948,
                                                      segment_sizze_nonzzero_43914) +
                                              sext_i32_i64(local_tid_43917),
                                              i32_res_28038 * i32_res_28038) *
                                      (i32_res_28038 * i32_res_28038) +
                                      squot64(sext_i32_i64(virt_group_id_43925) *
                                              squot64(segred_group_sizze_33948,
                                                      segment_sizze_nonzzero_43914) +
                                              sext_i32_i64(local_tid_43917) -
                                              squot64(sext_i32_i64(virt_group_id_43925) *
                                                      squot64(segred_group_sizze_33948,
                                                              segment_sizze_nonzzero_43914) +
                                                      sext_i32_i64(local_tid_43917),
                                                      i32_res_28038 *
                                                      i32_res_28038) *
                                              (i32_res_28038 * i32_res_28038),
                                              i32_res_28038) * i32_res_28038 +
                                      (sext_i32_i64(virt_group_id_43925) *
                                       squot64(segred_group_sizze_33948,
                                               segment_sizze_nonzzero_43914) +
                                       sext_i32_i64(local_tid_43917) -
                                       squot64(sext_i32_i64(virt_group_id_43925) *
                                               squot64(segred_group_sizze_33948,
                                                       segment_sizze_nonzzero_43914) +
                                               sext_i32_i64(local_tid_43917),
                                               i32_res_28038 * i32_res_28038) *
                                       (i32_res_28038 * i32_res_28038) -
                                       squot64(sext_i32_i64(virt_group_id_43925) *
                                               squot64(segred_group_sizze_33948,
                                                       segment_sizze_nonzzero_43914) +
                                               sext_i32_i64(local_tid_43917) -
                                               squot64(sext_i32_i64(virt_group_id_43925) *
                                                       squot64(segred_group_sizze_33948,
                                                               segment_sizze_nonzzero_43914) +
                                                       sext_i32_i64(local_tid_43917),
                                                       i32_res_28038 *
                                                       i32_res_28038) *
                                               (i32_res_28038 * i32_res_28038),
                                               i32_res_28038) *
                                       i32_res_28038)] = ((__local
                                                           float *) red_arr_mem_43921)[(sext_i32_i64(local_tid_43917) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_43914 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33948
}
__kernel void mainMagnitudezisegred_small_34857(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44118_backing_aligned_0,
                                                int64_t N_28022,
                                                int64_t m_28023,
                                                int64_t i32_res_28032,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_34910,
                                                int64_t segment_sizze_nonzzero_44111,
                                                __global
                                                unsigned char *images_mem_42538,
                                                __global
                                                unsigned char *binop_p_mem_42547,
                                                __global
                                                unsigned char *mem_43001)
{
    #define segred_group_sizze_34909 (mainMagnitudezisegred_group_sizze_34851)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44118_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44118_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44113;
    int32_t local_tid_44114;
    int64_t group_sizze_44117;
    int32_t wave_sizze_44116;
    int32_t group_tid_44115;
    
    global_tid_44113 = get_global_id(0);
    local_tid_44114 = get_local_id(0);
    group_sizze_44117 = get_local_size(0);
    wave_sizze_44116 = LOCKSTEP_WIDTH;
    group_tid_44115 = get_group_id(0);
    
    int32_t phys_tid_34857;
    
    phys_tid_34857 = global_tid_44113;
    
    __local char *red_arr_mem_44118;
    
    red_arr_mem_44118 = (__local char *) red_arr_mem_44118_backing_0;
    
    int32_t phys_group_id_44120;
    
    phys_group_id_44120 = get_group_id(0);
    for (int32_t i_44121 = 0; i_44121 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023 * i32_res_28038,
                                          squot64(segred_group_sizze_34909,
                                                  segment_sizze_nonzzero_44111))) -
                   phys_group_id_44120, sext_i64_i32(num_groups_34910));
         i_44121++) {
        int32_t virt_group_id_44122 = phys_group_id_44120 + i_44121 *
                sext_i64_i32(num_groups_34910);
        int64_t gtid_34846 = squot64(squot64(sext_i32_i64(local_tid_44114),
                                             segment_sizze_nonzzero_44111) +
                                     sext_i32_i64(virt_group_id_44122) *
                                     squot64(segred_group_sizze_34909,
                                             segment_sizze_nonzzero_44111),
                                     i32_res_28038);
        int64_t gtid_34847 = squot64(sext_i32_i64(local_tid_44114),
                                     segment_sizze_nonzzero_44111) +
                sext_i32_i64(virt_group_id_44122) *
                squot64(segred_group_sizze_34909,
                        segment_sizze_nonzzero_44111) -
                squot64(squot64(sext_i32_i64(local_tid_44114),
                                segment_sizze_nonzzero_44111) +
                        sext_i32_i64(virt_group_id_44122) *
                        squot64(segred_group_sizze_34909,
                                segment_sizze_nonzzero_44111), i32_res_28038) *
                i32_res_28038;
        int64_t gtid_34856 = srem64(sext_i32_i64(local_tid_44114),
                                    i32_res_28032);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28032) && ((slt64(gtid_34846,
                                                             m_28023) &&
                                                       slt64(gtid_34847,
                                                             i32_res_28038)) &&
                                                      slt64(sext_i32_i64(local_tid_44114),
                                                            i32_res_28032 *
                                                            squot64(segred_group_sizze_34909,
                                                                    segment_sizze_nonzzero_44111)))) {
                float x_34919 = ((__global
                                  float *) images_mem_42538)[gtid_34846 *
                                                             N_28022 +
                                                             gtid_34856];
                bool isnan_res_34920;
                
                isnan_res_34920 = futrts_isnan32(x_34919);
                
                float defunc_1_f_res_34921;
                
                if (isnan_res_34920) {
                    defunc_1_f_res_34921 = 0.0F;
                } else {
                    float x_34918 = ((__global
                                      float *) binop_p_mem_42547)[gtid_34847 *
                                                                  N_28022 +
                                                                  gtid_34856];
                    float defunc_1_f_res_f_res_34922 = x_34918 * x_34919;
                    
                    defunc_1_f_res_34921 = defunc_1_f_res_f_res_34922;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)] =
                        defunc_1_f_res_34921;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28032)) {
            // perform segmented scan to imitate reduction
            {
                float x_34913;
                float x_34914;
                float x_44123;
                float x_44124;
                bool ltid_in_bounds_44126;
                
                ltid_in_bounds_44126 = slt64(sext_i32_i64(local_tid_44114),
                                             i32_res_28032 *
                                             squot64(segred_group_sizze_34909,
                                                     segment_sizze_nonzzero_44111));
                
                int32_t skip_threads_44127;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44126) {
                        x_34914 = ((volatile __local
                                    float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)];
                        if ((local_tid_44114 - squot32(local_tid_44114, 32) *
                             32) == 0) {
                            x_34913 = x_34914;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44127 = 1;
                    while (slt32(skip_threads_44127, 32)) {
                        if (sle32(skip_threads_44127, local_tid_44114 -
                                  squot32(local_tid_44114, 32) * 32) &&
                            ltid_in_bounds_44126) {
                            // read operands
                            {
                                x_34913 = ((volatile __local
                                            float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114) -
                                                                        sext_i32_i64(skip_threads_44127)];
                            }
                            // perform operation
                            {
                                bool inactive_44128 =
                                     slt64(srem64(sext_i32_i64(local_tid_44114),
                                                  i32_res_28032),
                                           sext_i32_i64(local_tid_44114) -
                                           sext_i32_i64(local_tid_44114 -
                                           skip_threads_44127));
                                
                                if (inactive_44128) {
                                    x_34913 = x_34914;
                                }
                                if (!inactive_44128) {
                                    float defunc_1_op_res_34915 = x_34913 +
                                          x_34914;
                                    
                                    x_34913 = defunc_1_op_res_34915;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44116, skip_threads_44127)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44127, local_tid_44114 -
                                  squot32(local_tid_44114, 32) * 32) &&
                            ltid_in_bounds_44126) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)] =
                                    x_34913;
                                x_34914 = x_34913;
                            }
                        }
                        if (sle32(wave_sizze_44116, skip_threads_44127)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44127 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44114 - squot32(local_tid_44114, 32) * 32) ==
                        31 && ltid_in_bounds_44126) {
                        ((volatile __local
                          float *) red_arr_mem_44118)[sext_i32_i64(squot32(local_tid_44114,
                                                                           32))] =
                            x_34913;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44129;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44114, 32) == 0 &&
                            ltid_in_bounds_44126) {
                            x_44124 = ((volatile __local
                                        float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)];
                            if ((local_tid_44114 - squot32(local_tid_44114,
                                                           32) * 32) == 0) {
                                x_44123 = x_44124;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44129 = 1;
                        while (slt32(skip_threads_44129, 32)) {
                            if (sle32(skip_threads_44129, local_tid_44114 -
                                      squot32(local_tid_44114, 32) * 32) &&
                                (squot32(local_tid_44114, 32) == 0 &&
                                 ltid_in_bounds_44126)) {
                                // read operands
                                {
                                    x_44123 = ((volatile __local
                                                float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114) -
                                                                            sext_i32_i64(skip_threads_44129)];
                                }
                                // perform operation
                                {
                                    bool inactive_44130 =
                                         slt64(srem64(sext_i32_i64(local_tid_44114 *
                                                      32 + 32 - 1),
                                                      i32_res_28032),
                                               sext_i32_i64(local_tid_44114 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44114 -
                                                             skip_threads_44129) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44130) {
                                        x_44123 = x_44124;
                                    }
                                    if (!inactive_44130) {
                                        float defunc_1_op_res_44125 = x_44123 +
                                              x_44124;
                                        
                                        x_44123 = defunc_1_op_res_44125;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44116, skip_threads_44129)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44129, local_tid_44114 -
                                      squot32(local_tid_44114, 32) * 32) &&
                                (squot32(local_tid_44114, 32) == 0 &&
                                 ltid_in_bounds_44126)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)] =
                                        x_44123;
                                    x_44124 = x_44123;
                                }
                            }
                            if (sle32(wave_sizze_44116, skip_threads_44129)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44129 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44114, 32) == 0 ||
                          !ltid_in_bounds_44126)) {
                        // read operands
                        {
                            x_34914 = x_34913;
                            x_34913 = ((__local
                                        float *) red_arr_mem_44118)[sext_i32_i64(squot32(local_tid_44114,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44131 =
                                 slt64(srem64(sext_i32_i64(local_tid_44114),
                                              i32_res_28032),
                                       sext_i32_i64(local_tid_44114) -
                                       sext_i32_i64(squot32(local_tid_44114,
                                                            32) * 32 - 1));
                            
                            if (inactive_44131) {
                                x_34913 = x_34914;
                            }
                            if (!inactive_44131) {
                                float defunc_1_op_res_34915 = x_34913 + x_34914;
                                
                                x_34913 = defunc_1_op_res_34915;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)] =
                                x_34913;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44114, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44118)[sext_i32_i64(local_tid_44114)] =
                            x_34914;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44122) *
                      squot64(segred_group_sizze_34909,
                              segment_sizze_nonzzero_44111) +
                      sext_i32_i64(local_tid_44114), m_28023 * i32_res_28038) &&
                slt64(sext_i32_i64(local_tid_44114),
                      squot64(segred_group_sizze_34909,
                              segment_sizze_nonzzero_44111))) {
                ((__global
                  float *) mem_43001)[squot64(sext_i32_i64(virt_group_id_44122) *
                                              squot64(segred_group_sizze_34909,
                                                      segment_sizze_nonzzero_44111) +
                                              sext_i32_i64(local_tid_44114),
                                              i32_res_28038) * i32_res_28038 +
                                      (sext_i32_i64(virt_group_id_44122) *
                                       squot64(segred_group_sizze_34909,
                                               segment_sizze_nonzzero_44111) +
                                       sext_i32_i64(local_tid_44114) -
                                       squot64(sext_i32_i64(virt_group_id_44122) *
                                               squot64(segred_group_sizze_34909,
                                                       segment_sizze_nonzzero_44111) +
                                               sext_i32_i64(local_tid_44114),
                                               i32_res_28038) *
                                       i32_res_28038)] = ((__local
                                                           float *) red_arr_mem_44118)[(sext_i32_i64(local_tid_44114) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44111 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34909
}
__kernel void mainMagnitudezisegred_small_34994(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44206_backing_aligned_0,
                                                int64_t m_28023,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_35043,
                                                int64_t segment_sizze_nonzzero_44199,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_42786,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43007,
                                                __global
                                                unsigned char *mem_43067)
{
    #define segred_group_sizze_35042 (mainMagnitudezisegred_group_sizze_34988)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44206_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44206_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44201;
    int32_t local_tid_44202;
    int64_t group_sizze_44205;
    int32_t wave_sizze_44204;
    int32_t group_tid_44203;
    
    global_tid_44201 = get_global_id(0);
    local_tid_44202 = get_local_id(0);
    group_sizze_44205 = get_local_size(0);
    wave_sizze_44204 = LOCKSTEP_WIDTH;
    group_tid_44203 = get_group_id(0);
    
    int32_t phys_tid_34994;
    
    phys_tid_34994 = global_tid_44201;
    
    __local char *red_arr_mem_44206;
    
    red_arr_mem_44206 = (__local char *) red_arr_mem_44206_backing_0;
    
    int32_t phys_group_id_44208;
    
    phys_group_id_44208 = get_group_id(0);
    for (int32_t i_44209 = 0; i_44209 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023 * i32_res_28038,
                                          squot64(segred_group_sizze_35042,
                                                  segment_sizze_nonzzero_44199))) -
                   phys_group_id_44208, sext_i64_i32(num_groups_35043));
         i_44209++) {
        int32_t virt_group_id_44210 = phys_group_id_44208 + i_44209 *
                sext_i64_i32(num_groups_35043);
        int64_t gtid_34983 = squot64(squot64(sext_i32_i64(local_tid_44202),
                                             segment_sizze_nonzzero_44199) +
                                     sext_i32_i64(virt_group_id_44210) *
                                     squot64(segred_group_sizze_35042,
                                             segment_sizze_nonzzero_44199),
                                     i32_res_28038);
        int64_t gtid_34984 = squot64(sext_i32_i64(local_tid_44202),
                                     segment_sizze_nonzzero_44199) +
                sext_i32_i64(virt_group_id_44210) *
                squot64(segred_group_sizze_35042,
                        segment_sizze_nonzzero_44199) -
                squot64(squot64(sext_i32_i64(local_tid_44202),
                                segment_sizze_nonzzero_44199) +
                        sext_i32_i64(virt_group_id_44210) *
                        squot64(segred_group_sizze_35042,
                                segment_sizze_nonzzero_44199), i32_res_28038) *
                i32_res_28038;
        int64_t gtid_34993 = srem64(sext_i32_i64(local_tid_44202),
                                    i32_res_28038);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28038) && ((slt64(gtid_34983,
                                                             m_28023) &&
                                                       slt64(gtid_34984,
                                                             i32_res_28038)) &&
                                                      slt64(sext_i32_i64(local_tid_44202),
                                                            i32_res_28038 *
                                                            squot64(segred_group_sizze_35042,
                                                                    segment_sizze_nonzzero_44199)))) {
                float x_35052 = ((__global
                                  float *) defunc_3_map_res_mem_43007)[gtid_34983 *
                                                                       i32_res_28038 +
                                                                       gtid_34993];
                float x_35053 = ((__global
                                  float *) defunc_3_map_res_mem_42786)[gtid_34983 *
                                                                       (i32_res_28038 *
                                                                        i32_res_28038) +
                                                                       gtid_34984 *
                                                                       i32_res_28038 +
                                                                       gtid_34993];
                float defunc_1_f_res_35054 = x_35052 * x_35053;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)] =
                        defunc_1_f_res_35054;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28038)) {
            // perform segmented scan to imitate reduction
            {
                float x_35046;
                float x_35047;
                float x_44211;
                float x_44212;
                bool ltid_in_bounds_44214;
                
                ltid_in_bounds_44214 = slt64(sext_i32_i64(local_tid_44202),
                                             i32_res_28038 *
                                             squot64(segred_group_sizze_35042,
                                                     segment_sizze_nonzzero_44199));
                
                int32_t skip_threads_44215;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44214) {
                        x_35047 = ((volatile __local
                                    float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)];
                        if ((local_tid_44202 - squot32(local_tid_44202, 32) *
                             32) == 0) {
                            x_35046 = x_35047;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44215 = 1;
                    while (slt32(skip_threads_44215, 32)) {
                        if (sle32(skip_threads_44215, local_tid_44202 -
                                  squot32(local_tid_44202, 32) * 32) &&
                            ltid_in_bounds_44214) {
                            // read operands
                            {
                                x_35046 = ((volatile __local
                                            float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202) -
                                                                        sext_i32_i64(skip_threads_44215)];
                            }
                            // perform operation
                            {
                                bool inactive_44216 =
                                     slt64(srem64(sext_i32_i64(local_tid_44202),
                                                  i32_res_28038),
                                           sext_i32_i64(local_tid_44202) -
                                           sext_i32_i64(local_tid_44202 -
                                           skip_threads_44215));
                                
                                if (inactive_44216) {
                                    x_35046 = x_35047;
                                }
                                if (!inactive_44216) {
                                    float defunc_1_op_res_35048 = x_35046 +
                                          x_35047;
                                    
                                    x_35046 = defunc_1_op_res_35048;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44204, skip_threads_44215)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44215, local_tid_44202 -
                                  squot32(local_tid_44202, 32) * 32) &&
                            ltid_in_bounds_44214) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)] =
                                    x_35046;
                                x_35047 = x_35046;
                            }
                        }
                        if (sle32(wave_sizze_44204, skip_threads_44215)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44215 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44202 - squot32(local_tid_44202, 32) * 32) ==
                        31 && ltid_in_bounds_44214) {
                        ((volatile __local
                          float *) red_arr_mem_44206)[sext_i32_i64(squot32(local_tid_44202,
                                                                           32))] =
                            x_35046;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44217;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44202, 32) == 0 &&
                            ltid_in_bounds_44214) {
                            x_44212 = ((volatile __local
                                        float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)];
                            if ((local_tid_44202 - squot32(local_tid_44202,
                                                           32) * 32) == 0) {
                                x_44211 = x_44212;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44217 = 1;
                        while (slt32(skip_threads_44217, 32)) {
                            if (sle32(skip_threads_44217, local_tid_44202 -
                                      squot32(local_tid_44202, 32) * 32) &&
                                (squot32(local_tid_44202, 32) == 0 &&
                                 ltid_in_bounds_44214)) {
                                // read operands
                                {
                                    x_44211 = ((volatile __local
                                                float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202) -
                                                                            sext_i32_i64(skip_threads_44217)];
                                }
                                // perform operation
                                {
                                    bool inactive_44218 =
                                         slt64(srem64(sext_i32_i64(local_tid_44202 *
                                                      32 + 32 - 1),
                                                      i32_res_28038),
                                               sext_i32_i64(local_tid_44202 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44202 -
                                                             skip_threads_44217) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44218) {
                                        x_44211 = x_44212;
                                    }
                                    if (!inactive_44218) {
                                        float defunc_1_op_res_44213 = x_44211 +
                                              x_44212;
                                        
                                        x_44211 = defunc_1_op_res_44213;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44204, skip_threads_44217)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44217, local_tid_44202 -
                                      squot32(local_tid_44202, 32) * 32) &&
                                (squot32(local_tid_44202, 32) == 0 &&
                                 ltid_in_bounds_44214)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)] =
                                        x_44211;
                                    x_44212 = x_44211;
                                }
                            }
                            if (sle32(wave_sizze_44204, skip_threads_44217)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44217 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44202, 32) == 0 ||
                          !ltid_in_bounds_44214)) {
                        // read operands
                        {
                            x_35047 = x_35046;
                            x_35046 = ((__local
                                        float *) red_arr_mem_44206)[sext_i32_i64(squot32(local_tid_44202,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44219 =
                                 slt64(srem64(sext_i32_i64(local_tid_44202),
                                              i32_res_28038),
                                       sext_i32_i64(local_tid_44202) -
                                       sext_i32_i64(squot32(local_tid_44202,
                                                            32) * 32 - 1));
                            
                            if (inactive_44219) {
                                x_35046 = x_35047;
                            }
                            if (!inactive_44219) {
                                float defunc_1_op_res_35048 = x_35046 + x_35047;
                                
                                x_35046 = defunc_1_op_res_35048;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)] =
                                x_35046;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44202, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44206)[sext_i32_i64(local_tid_44202)] =
                            x_35047;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44210) *
                      squot64(segred_group_sizze_35042,
                              segment_sizze_nonzzero_44199) +
                      sext_i32_i64(local_tid_44202), m_28023 * i32_res_28038) &&
                slt64(sext_i32_i64(local_tid_44202),
                      squot64(segred_group_sizze_35042,
                              segment_sizze_nonzzero_44199))) {
                ((__global
                  float *) mem_43067)[squot64(sext_i32_i64(virt_group_id_44210) *
                                              squot64(segred_group_sizze_35042,
                                                      segment_sizze_nonzzero_44199) +
                                              sext_i32_i64(local_tid_44202),
                                              i32_res_28038) * i32_res_28038 +
                                      (sext_i32_i64(virt_group_id_44210) *
                                       squot64(segred_group_sizze_35042,
                                               segment_sizze_nonzzero_44199) +
                                       sext_i32_i64(local_tid_44202) -
                                       squot64(sext_i32_i64(virt_group_id_44210) *
                                               squot64(segred_group_sizze_35042,
                                                       segment_sizze_nonzzero_44199) +
                                               sext_i32_i64(local_tid_44202),
                                               i32_res_28038) *
                                       i32_res_28038)] = ((__local
                                                           float *) red_arr_mem_44206)[(sext_i32_i64(local_tid_44202) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44199 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35042
}
__kernel void mainMagnitudezisegred_small_35124(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44338_backing_aligned_0,
                                                int64_t N_28022,
                                                int64_t m_28023,
                                                int64_t i32_res_28038,
                                                int64_t num_groups_35171,
                                                int64_t segment_sizze_nonzzero_44331,
                                                __global
                                                unsigned char *mem_42554,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43073,
                                                __global
                                                unsigned char *mem_43291)
{
    #define segred_group_sizze_35170 (mainMagnitudezisegred_group_sizze_35118)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44338_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44338_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44333;
    int32_t local_tid_44334;
    int64_t group_sizze_44337;
    int32_t wave_sizze_44336;
    int32_t group_tid_44335;
    
    global_tid_44333 = get_global_id(0);
    local_tid_44334 = get_local_id(0);
    group_sizze_44337 = get_local_size(0);
    wave_sizze_44336 = LOCKSTEP_WIDTH;
    group_tid_44335 = get_group_id(0);
    
    int32_t phys_tid_35124;
    
    phys_tid_35124 = global_tid_44333;
    
    __local char *red_arr_mem_44338;
    
    red_arr_mem_44338 = (__local char *) red_arr_mem_44338_backing_0;
    
    int32_t phys_group_id_44340;
    
    phys_group_id_44340 = get_group_id(0);
    for (int32_t i_44341 = 0; i_44341 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023 * N_28022,
                                          squot64(segred_group_sizze_35170,
                                                  segment_sizze_nonzzero_44331))) -
                   phys_group_id_44340, sext_i64_i32(num_groups_35171));
         i_44341++) {
        int32_t virt_group_id_44342 = phys_group_id_44340 + i_44341 *
                sext_i64_i32(num_groups_35171);
        int64_t gtid_35113 = squot64(squot64(sext_i32_i64(local_tid_44334),
                                             segment_sizze_nonzzero_44331) +
                                     sext_i32_i64(virt_group_id_44342) *
                                     squot64(segred_group_sizze_35170,
                                             segment_sizze_nonzzero_44331),
                                     N_28022);
        int64_t gtid_35114 = squot64(sext_i32_i64(local_tid_44334),
                                     segment_sizze_nonzzero_44331) +
                sext_i32_i64(virt_group_id_44342) *
                squot64(segred_group_sizze_35170,
                        segment_sizze_nonzzero_44331) -
                squot64(squot64(sext_i32_i64(local_tid_44334),
                                segment_sizze_nonzzero_44331) +
                        sext_i32_i64(virt_group_id_44342) *
                        squot64(segred_group_sizze_35170,
                                segment_sizze_nonzzero_44331), N_28022) *
                N_28022;
        int64_t gtid_35123 = srem64(sext_i32_i64(local_tid_44334),
                                    i32_res_28038);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28038) && ((slt64(gtid_35113,
                                                             m_28023) &&
                                                       slt64(gtid_35114,
                                                             N_28022)) &&
                                                      slt64(sext_i32_i64(local_tid_44334),
                                                            i32_res_28038 *
                                                            squot64(segred_group_sizze_35170,
                                                                    segment_sizze_nonzzero_44331)))) {
                float x_35179 = ((__global
                                  float *) defunc_4_map_res_mem_43073)[gtid_35113 *
                                                                       i32_res_28038 +
                                                                       gtid_35123];
                float x_35180 = ((__global float *) mem_42554)[gtid_35114 *
                                                               i32_res_28038 +
                                                               gtid_35123];
                float defunc_1_f_res_35181 = x_35179 * x_35180;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)] =
                        defunc_1_f_res_35181;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28038)) {
            // perform segmented scan to imitate reduction
            {
                float x_35174;
                float x_35175;
                float x_44343;
                float x_44344;
                bool ltid_in_bounds_44346;
                
                ltid_in_bounds_44346 = slt64(sext_i32_i64(local_tid_44334),
                                             i32_res_28038 *
                                             squot64(segred_group_sizze_35170,
                                                     segment_sizze_nonzzero_44331));
                
                int32_t skip_threads_44347;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44346) {
                        x_35175 = ((volatile __local
                                    float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)];
                        if ((local_tid_44334 - squot32(local_tid_44334, 32) *
                             32) == 0) {
                            x_35174 = x_35175;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44347 = 1;
                    while (slt32(skip_threads_44347, 32)) {
                        if (sle32(skip_threads_44347, local_tid_44334 -
                                  squot32(local_tid_44334, 32) * 32) &&
                            ltid_in_bounds_44346) {
                            // read operands
                            {
                                x_35174 = ((volatile __local
                                            float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334) -
                                                                        sext_i32_i64(skip_threads_44347)];
                            }
                            // perform operation
                            {
                                bool inactive_44348 =
                                     slt64(srem64(sext_i32_i64(local_tid_44334),
                                                  i32_res_28038),
                                           sext_i32_i64(local_tid_44334) -
                                           sext_i32_i64(local_tid_44334 -
                                           skip_threads_44347));
                                
                                if (inactive_44348) {
                                    x_35174 = x_35175;
                                }
                                if (!inactive_44348) {
                                    float defunc_1_op_res_35176 = x_35174 +
                                          x_35175;
                                    
                                    x_35174 = defunc_1_op_res_35176;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44336, skip_threads_44347)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44347, local_tid_44334 -
                                  squot32(local_tid_44334, 32) * 32) &&
                            ltid_in_bounds_44346) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)] =
                                    x_35174;
                                x_35175 = x_35174;
                            }
                        }
                        if (sle32(wave_sizze_44336, skip_threads_44347)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44347 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44334 - squot32(local_tid_44334, 32) * 32) ==
                        31 && ltid_in_bounds_44346) {
                        ((volatile __local
                          float *) red_arr_mem_44338)[sext_i32_i64(squot32(local_tid_44334,
                                                                           32))] =
                            x_35174;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44349;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44334, 32) == 0 &&
                            ltid_in_bounds_44346) {
                            x_44344 = ((volatile __local
                                        float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)];
                            if ((local_tid_44334 - squot32(local_tid_44334,
                                                           32) * 32) == 0) {
                                x_44343 = x_44344;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44349 = 1;
                        while (slt32(skip_threads_44349, 32)) {
                            if (sle32(skip_threads_44349, local_tid_44334 -
                                      squot32(local_tid_44334, 32) * 32) &&
                                (squot32(local_tid_44334, 32) == 0 &&
                                 ltid_in_bounds_44346)) {
                                // read operands
                                {
                                    x_44343 = ((volatile __local
                                                float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334) -
                                                                            sext_i32_i64(skip_threads_44349)];
                                }
                                // perform operation
                                {
                                    bool inactive_44350 =
                                         slt64(srem64(sext_i32_i64(local_tid_44334 *
                                                      32 + 32 - 1),
                                                      i32_res_28038),
                                               sext_i32_i64(local_tid_44334 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44334 -
                                                             skip_threads_44349) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44350) {
                                        x_44343 = x_44344;
                                    }
                                    if (!inactive_44350) {
                                        float defunc_1_op_res_44345 = x_44343 +
                                              x_44344;
                                        
                                        x_44343 = defunc_1_op_res_44345;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44336, skip_threads_44349)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44349, local_tid_44334 -
                                      squot32(local_tid_44334, 32) * 32) &&
                                (squot32(local_tid_44334, 32) == 0 &&
                                 ltid_in_bounds_44346)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)] =
                                        x_44343;
                                    x_44344 = x_44343;
                                }
                            }
                            if (sle32(wave_sizze_44336, skip_threads_44349)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44349 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44334, 32) == 0 ||
                          !ltid_in_bounds_44346)) {
                        // read operands
                        {
                            x_35175 = x_35174;
                            x_35174 = ((__local
                                        float *) red_arr_mem_44338)[sext_i32_i64(squot32(local_tid_44334,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44351 =
                                 slt64(srem64(sext_i32_i64(local_tid_44334),
                                              i32_res_28038),
                                       sext_i32_i64(local_tid_44334) -
                                       sext_i32_i64(squot32(local_tid_44334,
                                                            32) * 32 - 1));
                            
                            if (inactive_44351) {
                                x_35174 = x_35175;
                            }
                            if (!inactive_44351) {
                                float defunc_1_op_res_35176 = x_35174 + x_35175;
                                
                                x_35174 = defunc_1_op_res_35176;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)] =
                                x_35174;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44334, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44338)[sext_i32_i64(local_tid_44334)] =
                            x_35175;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44342) *
                      squot64(segred_group_sizze_35170,
                              segment_sizze_nonzzero_44331) +
                      sext_i32_i64(local_tid_44334), m_28023 * N_28022) &&
                slt64(sext_i32_i64(local_tid_44334),
                      squot64(segred_group_sizze_35170,
                              segment_sizze_nonzzero_44331))) {
                ((__global
                  float *) mem_43291)[squot64(sext_i32_i64(virt_group_id_44342) *
                                              squot64(segred_group_sizze_35170,
                                                      segment_sizze_nonzzero_44331) +
                                              sext_i32_i64(local_tid_44334),
                                              N_28022) * N_28022 +
                                      (sext_i32_i64(virt_group_id_44342) *
                                       squot64(segred_group_sizze_35170,
                                               segment_sizze_nonzzero_44331) +
                                       sext_i32_i64(local_tid_44334) -
                                       squot64(sext_i32_i64(virt_group_id_44342) *
                                               squot64(segred_group_sizze_35170,
                                                       segment_sizze_nonzzero_44331) +
                                               sext_i32_i64(local_tid_44334),
                                               N_28022) * N_28022)] = ((__local
                                                                        float *) red_arr_mem_44338)[(sext_i32_i64(local_tid_44334) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44331 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35170
}
__kernel void mainMagnitudezisegred_small_35690(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44590_backing_aligned_0,
                                                int64_t N_28022,
                                                int64_t m_28023,
                                                int64_t i32_res_28032,
                                                int64_t num_groups_35737,
                                                int64_t segment_sizze_nonzzero_44583,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43335,
                                                __global
                                                unsigned char *mem_43389,
                                                __global
                                                unsigned char *mem_43392)
{
    #define segred_group_sizze_35736 (mainMagnitudezisegred_group_sizze_35684)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44590_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44590_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44585;
    int32_t local_tid_44586;
    int64_t group_sizze_44589;
    int32_t wave_sizze_44588;
    int32_t group_tid_44587;
    
    global_tid_44585 = get_global_id(0);
    local_tid_44586 = get_local_id(0);
    group_sizze_44589 = get_local_size(0);
    wave_sizze_44588 = LOCKSTEP_WIDTH;
    group_tid_44587 = get_group_id(0);
    
    int32_t phys_tid_35690;
    
    phys_tid_35690 = global_tid_44585;
    
    __local char *red_arr_mem_44590;
    
    red_arr_mem_44590 = (__local char *) red_arr_mem_44590_backing_0;
    
    int32_t phys_group_id_44592;
    
    phys_group_id_44592 = get_group_id(0);
    for (int32_t i_44593 = 0; i_44593 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023,
                                          squot64(segred_group_sizze_35736,
                                                  segment_sizze_nonzzero_44583))) -
                   phys_group_id_44592, sext_i64_i32(num_groups_35737));
         i_44593++) {
        int32_t virt_group_id_44594 = phys_group_id_44592 + i_44593 *
                sext_i64_i32(num_groups_35737);
        int64_t gtid_35681 = squot64(sext_i32_i64(local_tid_44586),
                                     segment_sizze_nonzzero_44583) +
                sext_i32_i64(virt_group_id_44594) *
                squot64(segred_group_sizze_35736, segment_sizze_nonzzero_44583);
        int64_t gtid_35689 = srem64(sext_i32_i64(local_tid_44586),
                                    i32_res_28032);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28032) && (slt64(gtid_35681,
                                                            m_28023) &&
                                                      slt64(sext_i32_i64(local_tid_44586),
                                                            i32_res_28032 *
                                                            squot64(segred_group_sizze_35736,
                                                                    segment_sizze_nonzzero_44583)))) {
                int32_t defunc_0_f_res_35744 = ((__global
                                                 int32_t *) mem_43389)[gtid_35681];
                int32_t index_primexp_40574 = sext_i64_i32(gtid_35689);
                bool cond_35746 = slt32(index_primexp_40574,
                                        defunc_0_f_res_35744);
                float defunc_0_f_res_35747;
                
                if (cond_35746) {
                    int64_t i_35748 = sext_i32_i64(index_primexp_40574);
                    float defunc_0_f_res_t_res_35749 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_35681 *
                                                                                              N_28022 +
                                                                                              i_35748];
                    
                    defunc_0_f_res_35747 = defunc_0_f_res_t_res_35749;
                } else {
                    defunc_0_f_res_35747 = 0.0F;
                }
                
                float defunc_0_f_res_35750 = defunc_0_f_res_35747 *
                      defunc_0_f_res_35747;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                        defunc_0_f_res_35750;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28032)) {
            // perform segmented scan to imitate reduction
            {
                float x_35740;
                float x_35741;
                float x_44595;
                float x_44596;
                bool ltid_in_bounds_44598;
                
                ltid_in_bounds_44598 = slt64(sext_i32_i64(local_tid_44586),
                                             i32_res_28032 *
                                             squot64(segred_group_sizze_35736,
                                                     segment_sizze_nonzzero_44583));
                
                int32_t skip_threads_44599;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44598) {
                        x_35741 = ((volatile __local
                                    float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)];
                        if ((local_tid_44586 - squot32(local_tid_44586, 32) *
                             32) == 0) {
                            x_35740 = x_35741;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44599 = 1;
                    while (slt32(skip_threads_44599, 32)) {
                        if (sle32(skip_threads_44599, local_tid_44586 -
                                  squot32(local_tid_44586, 32) * 32) &&
                            ltid_in_bounds_44598) {
                            // read operands
                            {
                                x_35740 = ((volatile __local
                                            float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586) -
                                                                        sext_i32_i64(skip_threads_44599)];
                            }
                            // perform operation
                            {
                                bool inactive_44600 =
                                     slt64(srem64(sext_i32_i64(local_tid_44586),
                                                  i32_res_28032),
                                           sext_i32_i64(local_tid_44586) -
                                           sext_i32_i64(local_tid_44586 -
                                           skip_threads_44599));
                                
                                if (inactive_44600) {
                                    x_35740 = x_35741;
                                }
                                if (!inactive_44600) {
                                    float defunc_1_op_res_35742 = x_35740 +
                                          x_35741;
                                    
                                    x_35740 = defunc_1_op_res_35742;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44588, skip_threads_44599)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44599, local_tid_44586 -
                                  squot32(local_tid_44586, 32) * 32) &&
                            ltid_in_bounds_44598) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                                    x_35740;
                                x_35741 = x_35740;
                            }
                        }
                        if (sle32(wave_sizze_44588, skip_threads_44599)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44599 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44586 - squot32(local_tid_44586, 32) * 32) ==
                        31 && ltid_in_bounds_44598) {
                        ((volatile __local
                          float *) red_arr_mem_44590)[sext_i32_i64(squot32(local_tid_44586,
                                                                           32))] =
                            x_35740;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44601;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44586, 32) == 0 &&
                            ltid_in_bounds_44598) {
                            x_44596 = ((volatile __local
                                        float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)];
                            if ((local_tid_44586 - squot32(local_tid_44586,
                                                           32) * 32) == 0) {
                                x_44595 = x_44596;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44601 = 1;
                        while (slt32(skip_threads_44601, 32)) {
                            if (sle32(skip_threads_44601, local_tid_44586 -
                                      squot32(local_tid_44586, 32) * 32) &&
                                (squot32(local_tid_44586, 32) == 0 &&
                                 ltid_in_bounds_44598)) {
                                // read operands
                                {
                                    x_44595 = ((volatile __local
                                                float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586) -
                                                                            sext_i32_i64(skip_threads_44601)];
                                }
                                // perform operation
                                {
                                    bool inactive_44602 =
                                         slt64(srem64(sext_i32_i64(local_tid_44586 *
                                                      32 + 32 - 1),
                                                      i32_res_28032),
                                               sext_i32_i64(local_tid_44586 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44586 -
                                                             skip_threads_44601) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44602) {
                                        x_44595 = x_44596;
                                    }
                                    if (!inactive_44602) {
                                        float defunc_1_op_res_44597 = x_44595 +
                                              x_44596;
                                        
                                        x_44595 = defunc_1_op_res_44597;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44588, skip_threads_44601)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44601, local_tid_44586 -
                                      squot32(local_tid_44586, 32) * 32) &&
                                (squot32(local_tid_44586, 32) == 0 &&
                                 ltid_in_bounds_44598)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                                        x_44595;
                                    x_44596 = x_44595;
                                }
                            }
                            if (sle32(wave_sizze_44588, skip_threads_44601)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44601 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44586, 32) == 0 ||
                          !ltid_in_bounds_44598)) {
                        // read operands
                        {
                            x_35741 = x_35740;
                            x_35740 = ((__local
                                        float *) red_arr_mem_44590)[sext_i32_i64(squot32(local_tid_44586,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44603 =
                                 slt64(srem64(sext_i32_i64(local_tid_44586),
                                              i32_res_28032),
                                       sext_i32_i64(local_tid_44586) -
                                       sext_i32_i64(squot32(local_tid_44586,
                                                            32) * 32 - 1));
                            
                            if (inactive_44603) {
                                x_35740 = x_35741;
                            }
                            if (!inactive_44603) {
                                float defunc_1_op_res_35742 = x_35740 + x_35741;
                                
                                x_35740 = defunc_1_op_res_35742;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                                x_35740;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44586, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                            x_35741;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44594) *
                      squot64(segred_group_sizze_35736,
                              segment_sizze_nonzzero_44583) +
                      sext_i32_i64(local_tid_44586), m_28023) &&
                slt64(sext_i32_i64(local_tid_44586),
                      squot64(segred_group_sizze_35736,
                              segment_sizze_nonzzero_44583))) {
                ((__global
                  float *) mem_43392)[sext_i32_i64(virt_group_id_44594) *
                                      squot64(segred_group_sizze_35736,
                                              segment_sizze_nonzzero_44583) +
                                      sext_i32_i64(local_tid_44586)] = ((__local
                                                                         float *) red_arr_mem_44590)[(sext_i32_i64(local_tid_44586) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44583 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35736
}
__kernel void mainMagnitudezisegred_small_35711(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44530_backing_aligned_0,
                                                int64_t N_28022,
                                                int64_t m_28023,
                                                int64_t i32_res_28032,
                                                int64_t num_groups_35723,
                                                int64_t segment_sizze_nonzzero_44523,
                                                __global
                                                unsigned char *images_mem_42538,
                                                __global
                                                unsigned char *mem_43389)
{
    #define segred_group_sizze_35722 (mainMagnitudezisegred_group_sizze_35705)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44530_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44530_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44525;
    int32_t local_tid_44526;
    int64_t group_sizze_44529;
    int32_t wave_sizze_44528;
    int32_t group_tid_44527;
    
    global_tid_44525 = get_global_id(0);
    local_tid_44526 = get_local_id(0);
    group_sizze_44529 = get_local_size(0);
    wave_sizze_44528 = LOCKSTEP_WIDTH;
    group_tid_44527 = get_group_id(0);
    
    int32_t phys_tid_35711;
    
    phys_tid_35711 = global_tid_44525;
    
    __local char *red_arr_mem_44530;
    
    red_arr_mem_44530 = (__local char *) red_arr_mem_44530_backing_0;
    
    int32_t phys_group_id_44532;
    
    phys_group_id_44532 = get_group_id(0);
    for (int32_t i_44533 = 0; i_44533 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023,
                                          squot64(segred_group_sizze_35722,
                                                  segment_sizze_nonzzero_44523))) -
                   phys_group_id_44532, sext_i64_i32(num_groups_35723));
         i_44533++) {
        int32_t virt_group_id_44534 = phys_group_id_44532 + i_44533 *
                sext_i64_i32(num_groups_35723);
        int64_t gtid_35702 = squot64(sext_i32_i64(local_tid_44526),
                                     segment_sizze_nonzzero_44523) +
                sext_i32_i64(virt_group_id_44534) *
                squot64(segred_group_sizze_35722, segment_sizze_nonzzero_44523);
        int64_t gtid_35710 = srem64(sext_i32_i64(local_tid_44526),
                                    i32_res_28032);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28032) && (slt64(gtid_35702,
                                                            m_28023) &&
                                                      slt64(sext_i32_i64(local_tid_44526),
                                                            i32_res_28032 *
                                                            squot64(segred_group_sizze_35722,
                                                                    segment_sizze_nonzzero_44523)))) {
                float x_35730 = ((__global
                                  float *) images_mem_42538)[gtid_35702 *
                                                             N_28022 +
                                                             gtid_35710];
                bool isnan_res_35731;
                
                isnan_res_35731 = futrts_isnan32(x_35730);
                
                bool cond_35732 = !isnan_res_35731;
                int32_t defunc_0_f_res_35733 = btoi_bool_i32(cond_35732);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)] =
                        defunc_0_f_res_35733;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28032)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_35726;
                int32_t x_35727;
                int32_t x_44535;
                int32_t x_44536;
                bool ltid_in_bounds_44538;
                
                ltid_in_bounds_44538 = slt64(sext_i32_i64(local_tid_44526),
                                             i32_res_28032 *
                                             squot64(segred_group_sizze_35722,
                                                     segment_sizze_nonzzero_44523));
                
                int32_t skip_threads_44539;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44538) {
                        x_35727 = ((volatile __local
                                    int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)];
                        if ((local_tid_44526 - squot32(local_tid_44526, 32) *
                             32) == 0) {
                            x_35726 = x_35727;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44539 = 1;
                    while (slt32(skip_threads_44539, 32)) {
                        if (sle32(skip_threads_44539, local_tid_44526 -
                                  squot32(local_tid_44526, 32) * 32) &&
                            ltid_in_bounds_44538) {
                            // read operands
                            {
                                x_35726 = ((volatile __local
                                            int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526) -
                                                                          sext_i32_i64(skip_threads_44539)];
                            }
                            // perform operation
                            {
                                bool inactive_44540 =
                                     slt64(srem64(sext_i32_i64(local_tid_44526),
                                                  i32_res_28032),
                                           sext_i32_i64(local_tid_44526) -
                                           sext_i32_i64(local_tid_44526 -
                                           skip_threads_44539));
                                
                                if (inactive_44540) {
                                    x_35726 = x_35727;
                                }
                                if (!inactive_44540) {
                                    int32_t defunc_1_op_res_35728 =
                                            add32(x_35726, x_35727);
                                    
                                    x_35726 = defunc_1_op_res_35728;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44528, skip_threads_44539)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44539, local_tid_44526 -
                                  squot32(local_tid_44526, 32) * 32) &&
                            ltid_in_bounds_44538) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)] =
                                    x_35726;
                                x_35727 = x_35726;
                            }
                        }
                        if (sle32(wave_sizze_44528, skip_threads_44539)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44539 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44526 - squot32(local_tid_44526, 32) * 32) ==
                        31 && ltid_in_bounds_44538) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44530)[sext_i32_i64(squot32(local_tid_44526,
                                                                             32))] =
                            x_35726;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44541;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44526, 32) == 0 &&
                            ltid_in_bounds_44538) {
                            x_44536 = ((volatile __local
                                        int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)];
                            if ((local_tid_44526 - squot32(local_tid_44526,
                                                           32) * 32) == 0) {
                                x_44535 = x_44536;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44541 = 1;
                        while (slt32(skip_threads_44541, 32)) {
                            if (sle32(skip_threads_44541, local_tid_44526 -
                                      squot32(local_tid_44526, 32) * 32) &&
                                (squot32(local_tid_44526, 32) == 0 &&
                                 ltid_in_bounds_44538)) {
                                // read operands
                                {
                                    x_44535 = ((volatile __local
                                                int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526) -
                                                                              sext_i32_i64(skip_threads_44541)];
                                }
                                // perform operation
                                {
                                    bool inactive_44542 =
                                         slt64(srem64(sext_i32_i64(local_tid_44526 *
                                                      32 + 32 - 1),
                                                      i32_res_28032),
                                               sext_i32_i64(local_tid_44526 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44526 -
                                                             skip_threads_44541) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44542) {
                                        x_44535 = x_44536;
                                    }
                                    if (!inactive_44542) {
                                        int32_t defunc_1_op_res_44537 =
                                                add32(x_44535, x_44536);
                                        
                                        x_44535 = defunc_1_op_res_44537;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44528, skip_threads_44541)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44541, local_tid_44526 -
                                      squot32(local_tid_44526, 32) * 32) &&
                                (squot32(local_tid_44526, 32) == 0 &&
                                 ltid_in_bounds_44538)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)] =
                                        x_44535;
                                    x_44536 = x_44535;
                                }
                            }
                            if (sle32(wave_sizze_44528, skip_threads_44541)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44541 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44526, 32) == 0 ||
                          !ltid_in_bounds_44538)) {
                        // read operands
                        {
                            x_35727 = x_35726;
                            x_35726 = ((__local
                                        int32_t *) red_arr_mem_44530)[sext_i32_i64(squot32(local_tid_44526,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44543 =
                                 slt64(srem64(sext_i32_i64(local_tid_44526),
                                              i32_res_28032),
                                       sext_i32_i64(local_tid_44526) -
                                       sext_i32_i64(squot32(local_tid_44526,
                                                            32) * 32 - 1));
                            
                            if (inactive_44543) {
                                x_35726 = x_35727;
                            }
                            if (!inactive_44543) {
                                int32_t defunc_1_op_res_35728 = add32(x_35726,
                                                                      x_35727);
                                
                                x_35726 = defunc_1_op_res_35728;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)] =
                                x_35726;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44526, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44530)[sext_i32_i64(local_tid_44526)] =
                            x_35727;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44534) *
                      squot64(segred_group_sizze_35722,
                              segment_sizze_nonzzero_44523) +
                      sext_i32_i64(local_tid_44526), m_28023) &&
                slt64(sext_i32_i64(local_tid_44526),
                      squot64(segred_group_sizze_35722,
                              segment_sizze_nonzzero_44523))) {
                ((__global
                  int32_t *) mem_43389)[sext_i32_i64(virt_group_id_44534) *
                                        squot64(segred_group_sizze_35722,
                                                segment_sizze_nonzzero_44523) +
                                        sext_i32_i64(local_tid_44526)] =
                    ((__local
                      int32_t *) red_arr_mem_44530)[(sext_i32_i64(local_tid_44526) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44523 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35722
}
__kernel void mainMagnitudezisegred_small_35862(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44699_backing_aligned_0,
                                                int64_t N_28022,
                                                int64_t m_28023,
                                                int64_t i32_res_28393,
                                                int64_t num_groups_35880,
                                                int64_t segment_sizze_nonzzero_44692,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43335,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43401,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43402,
                                                __global
                                                unsigned char *mem_43435)
{
    #define segred_group_sizze_35879 (mainMagnitudezisegred_group_sizze_35856)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44699_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44699_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44694;
    int32_t local_tid_44695;
    int64_t group_sizze_44698;
    int32_t wave_sizze_44697;
    int32_t group_tid_44696;
    
    global_tid_44694 = get_global_id(0);
    local_tid_44695 = get_local_id(0);
    group_sizze_44698 = get_local_size(0);
    wave_sizze_44697 = LOCKSTEP_WIDTH;
    group_tid_44696 = get_group_id(0);
    
    int32_t phys_tid_35862;
    
    phys_tid_35862 = global_tid_44694;
    
    __local char *red_arr_mem_44699;
    
    red_arr_mem_44699 = (__local char *) red_arr_mem_44699_backing_0;
    
    int32_t phys_group_id_44701;
    
    phys_group_id_44701 = get_group_id(0);
    for (int32_t i_44702 = 0; i_44702 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023,
                                          squot64(segred_group_sizze_35879,
                                                  segment_sizze_nonzzero_44692))) -
                   phys_group_id_44701, sext_i64_i32(num_groups_35880));
         i_44702++) {
        int32_t virt_group_id_44703 = phys_group_id_44701 + i_44702 *
                sext_i64_i32(num_groups_35880);
        int64_t gtid_35853 = squot64(sext_i32_i64(local_tid_44695),
                                     segment_sizze_nonzzero_44692) +
                sext_i32_i64(virt_group_id_44703) *
                squot64(segred_group_sizze_35879, segment_sizze_nonzzero_44692);
        int64_t gtid_35861 = srem64(sext_i32_i64(local_tid_44695),
                                    i32_res_28393);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28393) && (slt64(gtid_35853,
                                                            m_28023) &&
                                                      slt64(sext_i32_i64(local_tid_44695),
                                                            i32_res_28393 *
                                                            squot64(segred_group_sizze_35879,
                                                                    segment_sizze_nonzzero_44692)))) {
                int32_t x_35888 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43401)[gtid_35853];
                int32_t index_primexp_40579 = sext_i64_i32(gtid_35861);
                bool cond_35890 = slt32(index_primexp_40579, x_35888);
                float defunc_0_f_res_35891;
                
                if (cond_35890) {
                    int32_t x_35887 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43402)[gtid_35853];
                    int32_t x_35892 = add32(x_35887, index_primexp_40579);
                    int32_t x_35893 = sub32(x_35892, x_35888);
                    int32_t i_35894 = add32(1, x_35893);
                    int64_t i_35895 = sext_i32_i64(i_35894);
                    float defunc_0_f_res_t_res_35896 = ((__global
                                                         float *) defunc_4_map_res_mem_43335)[gtid_35853 *
                                                                                              N_28022 +
                                                                                              i_35895];
                    
                    defunc_0_f_res_35891 = defunc_0_f_res_t_res_35896;
                } else {
                    defunc_0_f_res_35891 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)] =
                        defunc_0_f_res_35891;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28393)) {
            // perform segmented scan to imitate reduction
            {
                float x_35883;
                float x_35884;
                float x_44704;
                float x_44705;
                bool ltid_in_bounds_44707;
                
                ltid_in_bounds_44707 = slt64(sext_i32_i64(local_tid_44695),
                                             i32_res_28393 *
                                             squot64(segred_group_sizze_35879,
                                                     segment_sizze_nonzzero_44692));
                
                int32_t skip_threads_44708;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44707) {
                        x_35884 = ((volatile __local
                                    float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)];
                        if ((local_tid_44695 - squot32(local_tid_44695, 32) *
                             32) == 0) {
                            x_35883 = x_35884;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44708 = 1;
                    while (slt32(skip_threads_44708, 32)) {
                        if (sle32(skip_threads_44708, local_tid_44695 -
                                  squot32(local_tid_44695, 32) * 32) &&
                            ltid_in_bounds_44707) {
                            // read operands
                            {
                                x_35883 = ((volatile __local
                                            float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695) -
                                                                        sext_i32_i64(skip_threads_44708)];
                            }
                            // perform operation
                            {
                                bool inactive_44709 =
                                     slt64(srem64(sext_i32_i64(local_tid_44695),
                                                  i32_res_28393),
                                           sext_i32_i64(local_tid_44695) -
                                           sext_i32_i64(local_tid_44695 -
                                           skip_threads_44708));
                                
                                if (inactive_44709) {
                                    x_35883 = x_35884;
                                }
                                if (!inactive_44709) {
                                    float defunc_1_op_res_35885 = x_35883 +
                                          x_35884;
                                    
                                    x_35883 = defunc_1_op_res_35885;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44697, skip_threads_44708)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44708, local_tid_44695 -
                                  squot32(local_tid_44695, 32) * 32) &&
                            ltid_in_bounds_44707) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)] =
                                    x_35883;
                                x_35884 = x_35883;
                            }
                        }
                        if (sle32(wave_sizze_44697, skip_threads_44708)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44708 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44695 - squot32(local_tid_44695, 32) * 32) ==
                        31 && ltid_in_bounds_44707) {
                        ((volatile __local
                          float *) red_arr_mem_44699)[sext_i32_i64(squot32(local_tid_44695,
                                                                           32))] =
                            x_35883;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44710;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44695, 32) == 0 &&
                            ltid_in_bounds_44707) {
                            x_44705 = ((volatile __local
                                        float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)];
                            if ((local_tid_44695 - squot32(local_tid_44695,
                                                           32) * 32) == 0) {
                                x_44704 = x_44705;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44710 = 1;
                        while (slt32(skip_threads_44710, 32)) {
                            if (sle32(skip_threads_44710, local_tid_44695 -
                                      squot32(local_tid_44695, 32) * 32) &&
                                (squot32(local_tid_44695, 32) == 0 &&
                                 ltid_in_bounds_44707)) {
                                // read operands
                                {
                                    x_44704 = ((volatile __local
                                                float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695) -
                                                                            sext_i32_i64(skip_threads_44710)];
                                }
                                // perform operation
                                {
                                    bool inactive_44711 =
                                         slt64(srem64(sext_i32_i64(local_tid_44695 *
                                                      32 + 32 - 1),
                                                      i32_res_28393),
                                               sext_i32_i64(local_tid_44695 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44695 -
                                                             skip_threads_44710) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44711) {
                                        x_44704 = x_44705;
                                    }
                                    if (!inactive_44711) {
                                        float defunc_1_op_res_44706 = x_44704 +
                                              x_44705;
                                        
                                        x_44704 = defunc_1_op_res_44706;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44697, skip_threads_44710)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44710, local_tid_44695 -
                                      squot32(local_tid_44695, 32) * 32) &&
                                (squot32(local_tid_44695, 32) == 0 &&
                                 ltid_in_bounds_44707)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)] =
                                        x_44704;
                                    x_44705 = x_44704;
                                }
                            }
                            if (sle32(wave_sizze_44697, skip_threads_44710)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44710 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44695, 32) == 0 ||
                          !ltid_in_bounds_44707)) {
                        // read operands
                        {
                            x_35884 = x_35883;
                            x_35883 = ((__local
                                        float *) red_arr_mem_44699)[sext_i32_i64(squot32(local_tid_44695,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44712 =
                                 slt64(srem64(sext_i32_i64(local_tid_44695),
                                              i32_res_28393),
                                       sext_i32_i64(local_tid_44695) -
                                       sext_i32_i64(squot32(local_tid_44695,
                                                            32) * 32 - 1));
                            
                            if (inactive_44712) {
                                x_35883 = x_35884;
                            }
                            if (!inactive_44712) {
                                float defunc_1_op_res_35885 = x_35883 + x_35884;
                                
                                x_35883 = defunc_1_op_res_35885;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)] =
                                x_35883;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44695, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44699)[sext_i32_i64(local_tid_44695)] =
                            x_35884;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44703) *
                      squot64(segred_group_sizze_35879,
                              segment_sizze_nonzzero_44692) +
                      sext_i32_i64(local_tid_44695), m_28023) &&
                slt64(sext_i32_i64(local_tid_44695),
                      squot64(segred_group_sizze_35879,
                              segment_sizze_nonzzero_44692))) {
                ((__global
                  float *) mem_43435)[sext_i32_i64(virt_group_id_44703) *
                                      squot64(segred_group_sizze_35879,
                                              segment_sizze_nonzzero_44692) +
                                      sext_i32_i64(local_tid_44695)] = ((__local
                                                                         float *) red_arr_mem_44699)[(sext_i32_i64(local_tid_44695) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44692 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35879
}
__kernel void mainMagnitudezisegred_small_36921(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44881_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44879_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_44877_backing_aligned_2,
                                                int64_t m_28023,
                                                int64_t iota32_arg_28418,
                                                int64_t num_groups_37092,
                                                int64_t segment_sizze_nonzzero_44870,
                                                __global
                                                unsigned char *mem_43441,
                                                __global
                                                unsigned char *mem_43494,
                                                __global
                                                unsigned char *mem_43496,
                                                __global
                                                unsigned char *mem_43500,
                                                __global
                                                unsigned char *mem_43503,
                                                __global
                                                unsigned char *mem_43505,
                                                __global
                                                unsigned char *mem_43507)
{
    #define segred_group_sizze_37091 (mainMagnitudezisegred_group_sizze_36915)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44881_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44881_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44879_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44879_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44877_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44877_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44872;
    int32_t local_tid_44873;
    int64_t group_sizze_44876;
    int32_t wave_sizze_44875;
    int32_t group_tid_44874;
    
    global_tid_44872 = get_global_id(0);
    local_tid_44873 = get_local_id(0);
    group_sizze_44876 = get_local_size(0);
    wave_sizze_44875 = LOCKSTEP_WIDTH;
    group_tid_44874 = get_group_id(0);
    
    int32_t phys_tid_36921;
    
    phys_tid_36921 = global_tid_44872;
    
    __local char *red_arr_mem_44877;
    
    red_arr_mem_44877 = (__local char *) red_arr_mem_44877_backing_0;
    
    __local char *red_arr_mem_44879;
    
    red_arr_mem_44879 = (__local char *) red_arr_mem_44879_backing_1;
    
    __local char *red_arr_mem_44881;
    
    red_arr_mem_44881 = (__local char *) red_arr_mem_44881_backing_2;
    
    int32_t phys_group_id_44883;
    
    phys_group_id_44883 = get_group_id(0);
    for (int32_t i_44884 = 0; i_44884 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28023,
                                          squot64(segred_group_sizze_37091,
                                                  segment_sizze_nonzzero_44870))) -
                   phys_group_id_44883, sext_i64_i32(num_groups_37092));
         i_44884++) {
        int32_t virt_group_id_44885 = phys_group_id_44883 + i_44884 *
                sext_i64_i32(num_groups_37092);
        int64_t gtid_36912 = squot64(sext_i32_i64(local_tid_44873),
                                     segment_sizze_nonzzero_44870) +
                sext_i32_i64(virt_group_id_44885) *
                squot64(segred_group_sizze_37091, segment_sizze_nonzzero_44870);
        int64_t gtid_36920 = srem64(sext_i32_i64(local_tid_44873),
                                    iota32_arg_28418);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_28418) && (slt64(gtid_36912,
                                                               m_28023) &&
                                                         slt64(sext_i32_i64(local_tid_44873),
                                                               iota32_arg_28418 *
                                                               squot64(segred_group_sizze_37091,
                                                                       segment_sizze_nonzzero_44870)))) {
                int32_t y_37111 = ((__global int32_t *) mem_43496)[gtid_36912];
                float y_37112 = ((__global float *) mem_43494)[gtid_36912];
                float x_37116 = ((__global float *) mem_43500)[gtid_36912 *
                                                               iota32_arg_28418 +
                                                               gtid_36920];
                float x_37117 = ((__global float *) mem_43441)[gtid_36920];
                int32_t index_primexp_40598 = sext_i64_i32(gtid_36920);
                float defunc_0_f_res_37120 = x_37116 / y_37112;
                bool cond_37121 = slt32(index_primexp_40598, y_37111);
                bool isnan_res_37122;
                
                isnan_res_37122 = futrts_isnan32(defunc_0_f_res_37120);
                
                bool cond_t_res_37123 = !isnan_res_37122;
                bool x_37124 = cond_37121 && cond_t_res_37123;
                float abs_res_37125 = (float) fabs(defunc_0_f_res_37120);
                bool defunc_2_f_res_t_res_37126 = x_37117 < abs_res_37125;
                bool x_37127 = x_37124 && defunc_2_f_res_t_res_37126;
                float defunc_1_f_res_37128;
                
                if (cond_37121) {
                    defunc_1_f_res_37128 = defunc_0_f_res_37120;
                } else {
                    defunc_1_f_res_37128 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                        x_37127;
                    ((__local
                      int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                        index_primexp_40598;
                    ((__local
                      float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                        defunc_1_f_res_37128;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] = 0;
                ((__local
                  int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                    -1;
                ((__local
                  float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_28418)) {
            // perform segmented scan to imitate reduction
            {
                bool x_37097;
                int32_t x_37098;
                float x_37099;
                bool x_37100;
                int32_t x_37101;
                float x_37102;
                bool x_44886;
                int32_t x_44887;
                float x_44888;
                bool x_44889;
                int32_t x_44890;
                float x_44891;
                bool ltid_in_bounds_44900;
                
                ltid_in_bounds_44900 = slt64(sext_i32_i64(local_tid_44873),
                                             iota32_arg_28418 *
                                             squot64(segred_group_sizze_37091,
                                                     segment_sizze_nonzzero_44870));
                
                int32_t skip_threads_44901;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44900) {
                        x_37100 = ((volatile __local
                                    bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)];
                        x_37101 = ((volatile __local
                                    int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)];
                        x_37102 = ((volatile __local
                                    float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)];
                        if ((local_tid_44873 - squot32(local_tid_44873, 32) *
                             32) == 0) {
                            x_37097 = x_37100;
                            x_37098 = x_37101;
                            x_37099 = x_37102;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44901 = 1;
                    while (slt32(skip_threads_44901, 32)) {
                        if (sle32(skip_threads_44901, local_tid_44873 -
                                  squot32(local_tid_44873, 32) * 32) &&
                            ltid_in_bounds_44900) {
                            // read operands
                            {
                                x_37097 = ((volatile __local
                                            bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873) -
                                                                       sext_i32_i64(skip_threads_44901)];
                                x_37098 = ((volatile __local
                                            int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873) -
                                                                          sext_i32_i64(skip_threads_44901)];
                                x_37099 = ((volatile __local
                                            float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873) -
                                                                        sext_i32_i64(skip_threads_44901)];
                            }
                            // perform operation
                            {
                                bool inactive_44902 =
                                     slt64(srem64(sext_i32_i64(local_tid_44873),
                                                  iota32_arg_28418),
                                           sext_i32_i64(local_tid_44873) -
                                           sext_i32_i64(local_tid_44873 -
                                           skip_threads_44901));
                                
                                if (inactive_44902) {
                                    x_37097 = x_37100;
                                    x_37098 = x_37101;
                                    x_37099 = x_37102;
                                }
                                if (!inactive_44902) {
                                    bool defunc_1_op_res_37103;
                                    int32_t defunc_1_op_res_37104;
                                    
                                    if (x_37097) {
                                        defunc_1_op_res_37103 = x_37097;
                                        defunc_1_op_res_37104 = x_37098;
                                    } else {
                                        bool x_37105 = x_37100 && x_37100;
                                        bool x_37106 = !x_37100;
                                        bool y_37107 = x_37097 && x_37106;
                                        bool defunc_1_op_res_f_res_37108 =
                                             x_37105 || y_37107;
                                        int32_t defunc_1_op_res_f_res_37109;
                                        
                                        if (x_37100) {
                                            defunc_1_op_res_f_res_37109 =
                                                x_37101;
                                        } else {
                                            defunc_1_op_res_f_res_37109 =
                                                x_37098;
                                        }
                                        defunc_1_op_res_37103 =
                                            defunc_1_op_res_f_res_37108;
                                        defunc_1_op_res_37104 =
                                            defunc_1_op_res_f_res_37109;
                                    }
                                    
                                    float defunc_1_op_res_37110 = x_37099 +
                                          x_37102;
                                    
                                    x_37097 = defunc_1_op_res_37103;
                                    x_37098 = defunc_1_op_res_37104;
                                    x_37099 = defunc_1_op_res_37110;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44875, skip_threads_44901)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44901, local_tid_44873 -
                                  squot32(local_tid_44873, 32) * 32) &&
                            ltid_in_bounds_44900) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                                    x_37097;
                                x_37100 = x_37097;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                                    x_37098;
                                x_37101 = x_37098;
                                ((volatile __local
                                  float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                                    x_37099;
                                x_37102 = x_37099;
                            }
                        }
                        if (sle32(wave_sizze_44875, skip_threads_44901)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44901 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44873 - squot32(local_tid_44873, 32) * 32) ==
                        31 && ltid_in_bounds_44900) {
                        ((volatile __local
                          bool *) red_arr_mem_44877)[sext_i32_i64(squot32(local_tid_44873,
                                                                          32))] =
                            x_37097;
                        ((volatile __local
                          int32_t *) red_arr_mem_44879)[sext_i32_i64(squot32(local_tid_44873,
                                                                             32))] =
                            x_37098;
                        ((volatile __local
                          float *) red_arr_mem_44881)[sext_i32_i64(squot32(local_tid_44873,
                                                                           32))] =
                            x_37099;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44903;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44873, 32) == 0 &&
                            ltid_in_bounds_44900) {
                            x_44889 = ((volatile __local
                                        bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)];
                            x_44890 = ((volatile __local
                                        int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)];
                            x_44891 = ((volatile __local
                                        float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)];
                            if ((local_tid_44873 - squot32(local_tid_44873,
                                                           32) * 32) == 0) {
                                x_44886 = x_44889;
                                x_44887 = x_44890;
                                x_44888 = x_44891;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44903 = 1;
                        while (slt32(skip_threads_44903, 32)) {
                            if (sle32(skip_threads_44903, local_tid_44873 -
                                      squot32(local_tid_44873, 32) * 32) &&
                                (squot32(local_tid_44873, 32) == 0 &&
                                 ltid_in_bounds_44900)) {
                                // read operands
                                {
                                    x_44886 = ((volatile __local
                                                bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873) -
                                                                           sext_i32_i64(skip_threads_44903)];
                                    x_44887 = ((volatile __local
                                                int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873) -
                                                                              sext_i32_i64(skip_threads_44903)];
                                    x_44888 = ((volatile __local
                                                float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873) -
                                                                            sext_i32_i64(skip_threads_44903)];
                                }
                                // perform operation
                                {
                                    bool inactive_44904 =
                                         slt64(srem64(sext_i32_i64(local_tid_44873 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28418),
                                               sext_i32_i64(local_tid_44873 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44873 -
                                                             skip_threads_44903) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44904) {
                                        x_44886 = x_44889;
                                        x_44887 = x_44890;
                                        x_44888 = x_44891;
                                    }
                                    if (!inactive_44904) {
                                        bool defunc_1_op_res_44892;
                                        int32_t defunc_1_op_res_44893;
                                        
                                        if (x_44886) {
                                            defunc_1_op_res_44892 = x_44886;
                                            defunc_1_op_res_44893 = x_44887;
                                        } else {
                                            bool x_44894 = x_44889 && x_44889;
                                            bool x_44895 = !x_44889;
                                            bool y_44896 = x_44886 && x_44895;
                                            bool defunc_1_op_res_f_res_44897 =
                                                 x_44894 || y_44896;
                                            int32_t defunc_1_op_res_f_res_44898;
                                            
                                            if (x_44889) {
                                                defunc_1_op_res_f_res_44898 =
                                                    x_44890;
                                            } else {
                                                defunc_1_op_res_f_res_44898 =
                                                    x_44887;
                                            }
                                            defunc_1_op_res_44892 =
                                                defunc_1_op_res_f_res_44897;
                                            defunc_1_op_res_44893 =
                                                defunc_1_op_res_f_res_44898;
                                        }
                                        
                                        float defunc_1_op_res_44899 = x_44888 +
                                              x_44891;
                                        
                                        x_44886 = defunc_1_op_res_44892;
                                        x_44887 = defunc_1_op_res_44893;
                                        x_44888 = defunc_1_op_res_44899;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44875, skip_threads_44903)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44903, local_tid_44873 -
                                      squot32(local_tid_44873, 32) * 32) &&
                                (squot32(local_tid_44873, 32) == 0 &&
                                 ltid_in_bounds_44900)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                                        x_44886;
                                    x_44889 = x_44886;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                                        x_44887;
                                    x_44890 = x_44887;
                                    ((volatile __local
                                      float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                                        x_44888;
                                    x_44891 = x_44888;
                                }
                            }
                            if (sle32(wave_sizze_44875, skip_threads_44903)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44903 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44873, 32) == 0 ||
                          !ltid_in_bounds_44900)) {
                        // read operands
                        {
                            x_37100 = x_37097;
                            x_37101 = x_37098;
                            x_37102 = x_37099;
                            x_37097 = ((__local
                                        bool *) red_arr_mem_44877)[sext_i32_i64(squot32(local_tid_44873,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_37098 = ((__local
                                        int32_t *) red_arr_mem_44879)[sext_i32_i64(squot32(local_tid_44873,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_37099 = ((__local
                                        float *) red_arr_mem_44881)[sext_i32_i64(squot32(local_tid_44873,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44905 =
                                 slt64(srem64(sext_i32_i64(local_tid_44873),
                                              iota32_arg_28418),
                                       sext_i32_i64(local_tid_44873) -
                                       sext_i32_i64(squot32(local_tid_44873,
                                                            32) * 32 - 1));
                            
                            if (inactive_44905) {
                                x_37097 = x_37100;
                                x_37098 = x_37101;
                                x_37099 = x_37102;
                            }
                            if (!inactive_44905) {
                                bool defunc_1_op_res_37103;
                                int32_t defunc_1_op_res_37104;
                                
                                if (x_37097) {
                                    defunc_1_op_res_37103 = x_37097;
                                    defunc_1_op_res_37104 = x_37098;
                                } else {
                                    bool x_37105 = x_37100 && x_37100;
                                    bool x_37106 = !x_37100;
                                    bool y_37107 = x_37097 && x_37106;
                                    bool defunc_1_op_res_f_res_37108 =
                                         x_37105 || y_37107;
                                    int32_t defunc_1_op_res_f_res_37109;
                                    
                                    if (x_37100) {
                                        defunc_1_op_res_f_res_37109 = x_37101;
                                    } else {
                                        defunc_1_op_res_f_res_37109 = x_37098;
                                    }
                                    defunc_1_op_res_37103 =
                                        defunc_1_op_res_f_res_37108;
                                    defunc_1_op_res_37104 =
                                        defunc_1_op_res_f_res_37109;
                                }
                                
                                float defunc_1_op_res_37110 = x_37099 + x_37102;
                                
                                x_37097 = defunc_1_op_res_37103;
                                x_37098 = defunc_1_op_res_37104;
                                x_37099 = defunc_1_op_res_37110;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                                x_37097;
                            ((__local
                              int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                                x_37098;
                            ((__local
                              float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                                x_37099;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44873, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                            x_37100;
                        ((__local
                          int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                            x_37101;
                        ((__local
                          float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                            x_37102;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44885) *
                      squot64(segred_group_sizze_37091,
                              segment_sizze_nonzzero_44870) +
                      sext_i32_i64(local_tid_44873), m_28023) &&
                slt64(sext_i32_i64(local_tid_44873),
                      squot64(segred_group_sizze_37091,
                              segment_sizze_nonzzero_44870))) {
                ((__global
                  bool *) mem_43503)[sext_i32_i64(virt_group_id_44885) *
                                     squot64(segred_group_sizze_37091,
                                             segment_sizze_nonzzero_44870) +
                                     sext_i32_i64(local_tid_44873)] = ((__local
                                                                        bool *) red_arr_mem_44877)[(sext_i32_i64(local_tid_44873) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_44870 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43505)[sext_i32_i64(virt_group_id_44885) *
                                        squot64(segred_group_sizze_37091,
                                                segment_sizze_nonzzero_44870) +
                                        sext_i32_i64(local_tid_44873)] =
                    ((__local
                      int32_t *) red_arr_mem_44879)[(sext_i32_i64(local_tid_44873) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44870 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43507)[sext_i32_i64(virt_group_id_44885) *
                                      squot64(segred_group_sizze_37091,
                                              segment_sizze_nonzzero_44870) +
                                      sext_i32_i64(local_tid_44873)] = ((__local
                                                                         float *) red_arr_mem_44881)[(sext_i32_i64(local_tid_44873) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44870 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37091
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
# Start of server.py

import sys
import time

class Server:
    def __init__(self, ctx):
        self._ctx = ctx
        self._vars = {}

    class Failure(BaseException):
        def __init__(self, msg):
            self.msg = msg

    def _get_arg(self, args, i):
        if i < len(args):
            return args[i]
        else:
            raise self.Failure('Insufficient command args')

    def _get_entry_point(self, entry):
        if entry in self._ctx.entry_points:
            return self._ctx.entry_points[entry]
        else:
            raise self.Failure('Unknown entry point: %s' % entry)

    def _check_var(self, vname):
        if not vname in self._vars:
            raise self.Failure('Unknown variable: %s' % vname)

    def _get_var(self, vname):
        self._check_var(vname)
        return self._vars[vname]

    def _cmd_inputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[0]:
            print(t)

    def _cmd_outputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[1]:
            print(t)

    def _cmd_dummy(self, args):
        pass

    def _cmd_free(self, args):
        for vname in args:
            self._check_var(vname)
            del self._vars[vname]

    def _cmd_call(self, args):
        entry = self._get_entry_point(self._get_arg(args, 0))
        num_ins = len(entry[0])
        num_outs = len(entry[1])

        if len(args) != 1 + num_outs + num_ins:
            raise self.Failure('Invalid argument count, expected %d')

        out_vnames = args[1:num_outs+1]

        for out_vname in out_vnames:
            if out_vname in self._vars:
                raise self.Failure('Variable already exists: %s' % out_vname)

        in_vnames = args[1+num_outs:]
        ins = [ self._get_var(in_vname) for in_vname in in_vnames ]

        try:
            (runtime, vals) = getattr(self._ctx, args[0])(*ins)
        except Exception as e:
            raise self.Failure(str(e))

        print('runtime: %d' % runtime)

        if num_outs == 1:
            self._vars[out_vnames[0]] = vals
        else:
            for (out_vname, val) in zip(out_vnames, vals):
                self._vars[out_vname] = val

    def _cmd_store(self, args):
        fname = self._get_arg(args, 0)

        with open(fname, 'wb') as f:
            for i in range(1, len(args)):
                vname = args[i]
                value = self._get_var(vname)
                # In case we are using the PyOpenCL backend, we first
                # need to convert OpenCL arrays to ordinary NumPy
                # arrays.  We do this in a nasty way.
                if isinstance(value, np.number) or isinstance(value, np.bool) or isinstance(value, np.bool_) or isinstance(value, np.ndarray):
                    # Ordinary NumPy value.
                    f.write(construct_binary_value(self._vars[vname]))
                else:
                    # Assuming PyOpenCL array.
                    f.write(construct_binary_value(self._vars[vname].get()))

    def _cmd_restore(self, args):
        if len(args) % 2 == 0:
            raise self.Failure('Invalid argument count')

        fname = args[0]
        args = args[1:]

        with open(fname, 'rb') as f:
            reader = ReaderInput(f)
            while args != []:
                vname = args[0]
                typename = args[1]
                args = args[2:]

                if vname in self._vars:
                    raise self.Failure('Variable already exists: %s' % vname)

                try:
                    self._vars[vname] = read_value(typename, reader)
                except ValueError:
                    raise self.Failure('Failed to restore variable %s.\n'
                                       'Possibly malformed data in %s.\n'
                                       % (vname, fname))

            skip_spaces(reader)
            if reader.get_char() != b'':
                raise self.Failure('Expected EOF after reading values')

    _commands = { 'inputs': _cmd_inputs,
                  'outputs': _cmd_outputs,
                  'call': _cmd_call,
                  'restore': _cmd_restore,
                  'store': _cmd_store,
                  'free': _cmd_free,
                  'clear': _cmd_dummy,
                  'pause_profiling': _cmd_dummy,
                  'unpause_profiling': _cmd_dummy,
                  'report': _cmd_dummy
                 }

    def _process_line(self, line):
        words = line.split()
        if words == []:
            raise self.Failure('Empty line')
        else:
            cmd = words[0]
            args = words[1:]
            if cmd in self._commands:
                self._commands[cmd](self, args)
            else:
                raise self.Failure('Unknown command: %s' % cmd)

    def run(self):
        while True:
            line = sys.stdin.readline()
            if line == '':
                return
            try:
                self._process_line(line)
            except self.Failure as e:
                print('%%% FAILURE')
                print(e.msg)
            print('%%% OK', flush=True)


# End of server.py
class bfastfinal:
  entry_points = {"convertToFloat": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]i32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "mainMagnitude": (["i32", "i32", "i32", "f32", "f32", "f32",
                                     "[]i32", "[][]f32"], ["[]i32", "[]i32",
                                                           "[]f32", "[]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:117:54-68\n   #1  bfastfinal.fut:117:13-120:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:115:20-132:9\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:118:29-43\n   #1  bfastfinal.fut:117:13-120:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:115:20-132:9\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:13-122:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:115:20-132:9\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:13-122:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:115:20-132:9\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:130:39-43\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-131:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:130:47-51\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-131:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:131:38-42\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-131:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:117:54-68\n   #1  bfastfinal.fut:117:13-120:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:115:20-132:9\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:118:29-43\n   #1  bfastfinal.fut:117:13-120:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:115:20-132:9\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:13-122:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:115:20-132:9\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:13-122:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:115:20-132:9\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:130:39-43\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-131:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:130:47-51\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-131:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:131:38-42\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-131:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_reg_tile_size=default_reg_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_44478": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_44487": {"class": "group_size",
                                                                                   "value": None},
                                        "convertToFloat.segmap_group_size_29265": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_40862": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_41603": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_40863": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_41604": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_40859": {"class": "tile_size", "value": None},
                                        "main.Tk_41600": {"class": "tile_size", "value": None},
                                        "main.Tx_40714": {"class": "tile_size", "value": None},
                                        "main.Tx_40860": {"class": "tile_size", "value": None},
                                        "main.Tx_41601": {"class": "tile_size", "value": None},
                                        "main.Ty_40715": {"class": "tile_size", "value": None},
                                        "main.Ty_40861": {"class": "tile_size", "value": None},
                                        "main.Ty_41602": {"class": "tile_size", "value": None},
                                        "main.group_size_44009": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37265": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37443": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37571": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37603": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37650": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38135": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38300": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38354": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38421": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38515": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38695": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38836": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38968": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39249": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39324": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39473": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39575": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39722": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39846": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40216": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40358": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_37605": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_37652": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38697": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38838": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38970": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40360": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_37710": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38757": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38894": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39024": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39590": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39611": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39678": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39762": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40263": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_37712": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38759": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38896": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39026": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39592": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39613": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39680": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39764": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40265": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_39333": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40317": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_39335": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40319": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_13": {"class": "threshold (!main.suff_intra_par_11)",
                                                                   "value": 32},
                                        "main.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_29": {"class": "threshold (!main.suff_outer_par_28)",
                                                                   "value": 32},
                                        "main.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "main.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_17": {"class": "threshold (!main.suff_outer_par_16)",
                                                                   "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold (!main.suff_outer_par_18)",
                                                                   "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold (!main.suff_outer_par_20)",
                                                                   "value": None},
                                        "main.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_41326": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_40862": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_41603": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_40863": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_41604": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_40859": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_41600": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_40714": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_40860": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41601": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_40715": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_40861": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41602": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_44021": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29423": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29601": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29729": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29761": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29808": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30293": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30458": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30512": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30579": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30673": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30853": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30994": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31126": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31407": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31482": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31631": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31733": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31880": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32003": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32283": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32405": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32462": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32640": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32941": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32993": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33065": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33107": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_29763": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_29810": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30855": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30996": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31128": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_32642": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_29868": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_30915": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31052": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31182": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31748": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31769": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31836": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31920": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33025": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_29870": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_30917": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31054": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31184": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31750": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31771": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31838": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31922": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33027": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_31491": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_33076": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_31493": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_33078": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_13": {"class": "threshold (!mainDetailed.suff_intra_par_11)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_29": {"class": "threshold (!mainDetailed.suff_outer_par_28)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_38": {"class": "threshold (!mainDetailed.suff_outer_par_37)",
                                                                           "value": 32},
                                        "mainDetailed.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold (!mainDetailed.suff_outer_par_16)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold (!mainDetailed.suff_outer_par_18)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold (!mainDetailed.suff_outer_par_20)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_37": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_41326": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Rx_40862": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Rx_41603": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_40863": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_41604": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Tk_40859": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tk_41600": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_40714": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_40860": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41601": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_40715": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_40861": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41602": {"class": "tile_size", "value": None},
                                        "mainMagnitude.group_size_44010": {"class": "group_size", "value": None},
                                        "mainMagnitude.segmap_group_size_33359": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33537": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33665": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33697": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33744": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34229": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34394": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34448": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34515": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34609": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34789": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34930": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35062": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35343": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35418": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35567": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35669": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35816": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35940": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36191": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36313": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36370": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36868": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37010": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_33699": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_33746": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34791": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34932": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35064": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_37012": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_33804": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_34851": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_34988": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35118": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35684": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35705": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35772": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35856": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36915": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_33806": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_34853": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_34990": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35120": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35686": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35707": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35774": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35858": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36917": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segscan_group_size_35427": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_group_size_36969": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_35429": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_36971": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_13": {"class": "threshold (!mainMagnitude.suff_intra_par_11)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_29": {"class": "threshold (!mainMagnitude.suff_outer_par_28)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_37": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_17": {"class": "threshold (!mainMagnitude.suff_outer_par_16)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_19": {"class": "threshold (!mainMagnitude.suff_outer_par_18)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_21": {"class": "threshold (!mainMagnitude.suff_outer_par_20)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_7": {"class": "threshold (!mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.suff_outer_par_8": {"class": "threshold (!mainMagnitude.suff_outer_par_7 !mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.tile_size_41326": {"class": "tile_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_44475_var = program.builtinzhreplicate_f32zireplicate_44475
    self.builtinzhreplicate_i32zireplicate_44484_var = program.builtinzhreplicate_i32zireplicate_44484
    self.convertToFloatzisegmap_29261_var = program.convertToFloatzisegmap_29261
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_44006_var = program.mainzicopy_44006
    self.mainziscan_stage1_39339_var = program.mainziscan_stage1_39339
    self.mainziscan_stage1_40323_var = program.mainziscan_stage1_40323
    self.mainziscan_stage2_39339_var = program.mainziscan_stage2_39339
    self.mainziscan_stage2_40323_var = program.mainziscan_stage2_40323
    self.mainziscan_stage3_39339_var = program.mainziscan_stage3_39339
    self.mainziscan_stage3_40323_var = program.mainziscan_stage3_40323
    self.mainzisegmap_37262_var = program.mainzisegmap_37262
    self.mainzisegmap_37440_var = program.mainzisegmap_37440
    self.mainzisegmap_37568_var = program.mainzisegmap_37568
    self.mainzisegmap_37601_var = program.mainzisegmap_37601
    self.mainzisegmap_37647_var = program.mainzisegmap_37647
    self.mainzisegmap_38131_var = program.mainzisegmap_38131
    self.mainzisegmap_38297_var = program.mainzisegmap_38297
    self.mainzisegmap_38351_var = program.mainzisegmap_38351
    self.mainzisegmap_38419_var = program.mainzisegmap_38419
    self.mainzisegmap_38512_var = program.mainzisegmap_38512
    self.mainzisegmap_38693_var = program.mainzisegmap_38693
    self.mainzisegmap_38834_var = program.mainzisegmap_38834
    self.mainzisegmap_38966_var = program.mainzisegmap_38966
    self.mainzisegmap_39246_var = program.mainzisegmap_39246
    self.mainzisegmap_39322_var = program.mainzisegmap_39322
    self.mainzisegmap_39573_var = program.mainzisegmap_39573
    self.mainzisegmap_39844_var = program.mainzisegmap_39844
    self.mainzisegmap_40214_var = program.mainzisegmap_40214
    self.mainzisegmap_40356_var = program.mainzisegmap_40356
    self.mainzisegmap_intragroup_37951_var = program.mainzisegmap_intragroup_37951
    self.mainzisegmap_intragroup_38178_var = program.mainzisegmap_intragroup_38178
    self.mainzisegmap_intragroup_39129_var = program.mainzisegmap_intragroup_39129
    self.mainzisegmap_intragroup_39469_var = program.mainzisegmap_intragroup_39469
    self.mainzisegmap_intragroup_39889_var = program.mainzisegmap_intragroup_39889
    self.mainzisegmap_intragroup_40730_var = program.mainzisegmap_intragroup_40730
    self.mainzisegmap_intragroup_40883_var = program.mainzisegmap_intragroup_40883
    self.mainzisegmap_intragroup_41332_var = program.mainzisegmap_intragroup_41332
    self.mainzisegmap_intragroup_41624_var = program.mainzisegmap_intragroup_41624
    self.mainzisegmap_intragroup_42058_var = program.mainzisegmap_intragroup_42058
    self.mainzisegmap_intragroup_42248_var = program.mainzisegmap_intragroup_42248
    self.mainzisegred_large_37716_var = program.mainzisegred_large_37716
    self.mainzisegred_large_38763_var = program.mainzisegred_large_38763
    self.mainzisegred_large_38900_var = program.mainzisegred_large_38900
    self.mainzisegred_large_39030_var = program.mainzisegred_large_39030
    self.mainzisegred_large_39596_var = program.mainzisegred_large_39596
    self.mainzisegred_large_39617_var = program.mainzisegred_large_39617
    self.mainzisegred_large_39768_var = program.mainzisegred_large_39768
    self.mainzisegred_large_40269_var = program.mainzisegred_large_40269
    self.mainzisegred_nonseg_39686_var = program.mainzisegred_nonseg_39686
    self.mainzisegred_small_37716_var = program.mainzisegred_small_37716
    self.mainzisegred_small_38763_var = program.mainzisegred_small_38763
    self.mainzisegred_small_38900_var = program.mainzisegred_small_38900
    self.mainzisegred_small_39030_var = program.mainzisegred_small_39030
    self.mainzisegred_small_39596_var = program.mainzisegred_small_39596
    self.mainzisegred_small_39617_var = program.mainzisegred_small_39617
    self.mainzisegred_small_39768_var = program.mainzisegred_small_39768
    self.mainzisegred_small_40269_var = program.mainzisegred_small_40269
    self.mainDetailedzicopy_44018_var = program.mainDetailedzicopy_44018
    self.mainDetailedziscan_stage1_31497_var = program.mainDetailedziscan_stage1_31497
    self.mainDetailedziscan_stage1_33082_var = program.mainDetailedziscan_stage1_33082
    self.mainDetailedziscan_stage2_31497_var = program.mainDetailedziscan_stage2_31497
    self.mainDetailedziscan_stage2_33082_var = program.mainDetailedziscan_stage2_33082
    self.mainDetailedziscan_stage3_31497_var = program.mainDetailedziscan_stage3_31497
    self.mainDetailedziscan_stage3_33082_var = program.mainDetailedziscan_stage3_33082
    self.mainDetailedzisegmap_29420_var = program.mainDetailedzisegmap_29420
    self.mainDetailedzisegmap_29598_var = program.mainDetailedzisegmap_29598
    self.mainDetailedzisegmap_29726_var = program.mainDetailedzisegmap_29726
    self.mainDetailedzisegmap_29759_var = program.mainDetailedzisegmap_29759
    self.mainDetailedzisegmap_29805_var = program.mainDetailedzisegmap_29805
    self.mainDetailedzisegmap_30289_var = program.mainDetailedzisegmap_30289
    self.mainDetailedzisegmap_30455_var = program.mainDetailedzisegmap_30455
    self.mainDetailedzisegmap_30509_var = program.mainDetailedzisegmap_30509
    self.mainDetailedzisegmap_30577_var = program.mainDetailedzisegmap_30577
    self.mainDetailedzisegmap_30670_var = program.mainDetailedzisegmap_30670
    self.mainDetailedzisegmap_30851_var = program.mainDetailedzisegmap_30851
    self.mainDetailedzisegmap_30992_var = program.mainDetailedzisegmap_30992
    self.mainDetailedzisegmap_31124_var = program.mainDetailedzisegmap_31124
    self.mainDetailedzisegmap_31404_var = program.mainDetailedzisegmap_31404
    self.mainDetailedzisegmap_31480_var = program.mainDetailedzisegmap_31480
    self.mainDetailedzisegmap_31731_var = program.mainDetailedzisegmap_31731
    self.mainDetailedzisegmap_32001_var = program.mainDetailedzisegmap_32001
    self.mainDetailedzisegmap_32281_var = program.mainDetailedzisegmap_32281
    self.mainDetailedzisegmap_32402_var = program.mainDetailedzisegmap_32402
    self.mainDetailedzisegmap_32460_var = program.mainDetailedzisegmap_32460
    self.mainDetailedzisegmap_32638_var = program.mainDetailedzisegmap_32638
    self.mainDetailedzisegmap_32938_var = program.mainDetailedzisegmap_32938
    self.mainDetailedzisegmap_32991_var = program.mainDetailedzisegmap_32991
    self.mainDetailedzisegmap_33063_var = program.mainDetailedzisegmap_33063
    self.mainDetailedzisegmap_33105_var = program.mainDetailedzisegmap_33105
    self.mainDetailedzisegmap_intragroup_30109_var = program.mainDetailedzisegmap_intragroup_30109
    self.mainDetailedzisegmap_intragroup_30336_var = program.mainDetailedzisegmap_intragroup_30336
    self.mainDetailedzisegmap_intragroup_31287_var = program.mainDetailedzisegmap_intragroup_31287
    self.mainDetailedzisegmap_intragroup_31627_var = program.mainDetailedzisegmap_intragroup_31627
    self.mainDetailedzisegmap_intragroup_32636_var = program.mainDetailedzisegmap_intragroup_32636
    self.mainDetailedzisegmap_intragroup_40730_var = program.mainDetailedzisegmap_intragroup_40730
    self.mainDetailedzisegmap_intragroup_40883_var = program.mainDetailedzisegmap_intragroup_40883
    self.mainDetailedzisegmap_intragroup_41332_var = program.mainDetailedzisegmap_intragroup_41332
    self.mainDetailedzisegmap_intragroup_41624_var = program.mainDetailedzisegmap_intragroup_41624
    self.mainDetailedzisegmap_intragroup_42058_var = program.mainDetailedzisegmap_intragroup_42058
    self.mainDetailedzisegmap_intragroup_42248_var = program.mainDetailedzisegmap_intragroup_42248
    self.mainDetailedzisegred_large_29874_var = program.mainDetailedzisegred_large_29874
    self.mainDetailedzisegred_large_30921_var = program.mainDetailedzisegred_large_30921
    self.mainDetailedzisegred_large_31058_var = program.mainDetailedzisegred_large_31058
    self.mainDetailedzisegred_large_31188_var = program.mainDetailedzisegred_large_31188
    self.mainDetailedzisegred_large_31754_var = program.mainDetailedzisegred_large_31754
    self.mainDetailedzisegred_large_31775_var = program.mainDetailedzisegred_large_31775
    self.mainDetailedzisegred_large_31926_var = program.mainDetailedzisegred_large_31926
    self.mainDetailedzisegred_large_33031_var = program.mainDetailedzisegred_large_33031
    self.mainDetailedzisegred_nonseg_31844_var = program.mainDetailedzisegred_nonseg_31844
    self.mainDetailedzisegred_small_29874_var = program.mainDetailedzisegred_small_29874
    self.mainDetailedzisegred_small_30921_var = program.mainDetailedzisegred_small_30921
    self.mainDetailedzisegred_small_31058_var = program.mainDetailedzisegred_small_31058
    self.mainDetailedzisegred_small_31188_var = program.mainDetailedzisegred_small_31188
    self.mainDetailedzisegred_small_31754_var = program.mainDetailedzisegred_small_31754
    self.mainDetailedzisegred_small_31775_var = program.mainDetailedzisegred_small_31775
    self.mainDetailedzisegred_small_31926_var = program.mainDetailedzisegred_small_31926
    self.mainDetailedzisegred_small_33031_var = program.mainDetailedzisegred_small_33031
    self.mainMagnitudezicopy_44007_var = program.mainMagnitudezicopy_44007
    self.mainMagnitudeziscan_stage1_35433_var = program.mainMagnitudeziscan_stage1_35433
    self.mainMagnitudeziscan_stage1_36975_var = program.mainMagnitudeziscan_stage1_36975
    self.mainMagnitudeziscan_stage2_35433_var = program.mainMagnitudeziscan_stage2_35433
    self.mainMagnitudeziscan_stage2_36975_var = program.mainMagnitudeziscan_stage2_36975
    self.mainMagnitudeziscan_stage3_35433_var = program.mainMagnitudeziscan_stage3_35433
    self.mainMagnitudeziscan_stage3_36975_var = program.mainMagnitudeziscan_stage3_36975
    self.mainMagnitudezisegmap_33356_var = program.mainMagnitudezisegmap_33356
    self.mainMagnitudezisegmap_33534_var = program.mainMagnitudezisegmap_33534
    self.mainMagnitudezisegmap_33662_var = program.mainMagnitudezisegmap_33662
    self.mainMagnitudezisegmap_33695_var = program.mainMagnitudezisegmap_33695
    self.mainMagnitudezisegmap_33741_var = program.mainMagnitudezisegmap_33741
    self.mainMagnitudezisegmap_34225_var = program.mainMagnitudezisegmap_34225
    self.mainMagnitudezisegmap_34391_var = program.mainMagnitudezisegmap_34391
    self.mainMagnitudezisegmap_34445_var = program.mainMagnitudezisegmap_34445
    self.mainMagnitudezisegmap_34513_var = program.mainMagnitudezisegmap_34513
    self.mainMagnitudezisegmap_34606_var = program.mainMagnitudezisegmap_34606
    self.mainMagnitudezisegmap_34787_var = program.mainMagnitudezisegmap_34787
    self.mainMagnitudezisegmap_34928_var = program.mainMagnitudezisegmap_34928
    self.mainMagnitudezisegmap_35060_var = program.mainMagnitudezisegmap_35060
    self.mainMagnitudezisegmap_35340_var = program.mainMagnitudezisegmap_35340
    self.mainMagnitudezisegmap_35416_var = program.mainMagnitudezisegmap_35416
    self.mainMagnitudezisegmap_35667_var = program.mainMagnitudezisegmap_35667
    self.mainMagnitudezisegmap_35938_var = program.mainMagnitudezisegmap_35938
    self.mainMagnitudezisegmap_36189_var = program.mainMagnitudezisegmap_36189
    self.mainMagnitudezisegmap_36310_var = program.mainMagnitudezisegmap_36310
    self.mainMagnitudezisegmap_36368_var = program.mainMagnitudezisegmap_36368
    self.mainMagnitudezisegmap_36866_var = program.mainMagnitudezisegmap_36866
    self.mainMagnitudezisegmap_37008_var = program.mainMagnitudezisegmap_37008
    self.mainMagnitudezisegmap_intragroup_34045_var = program.mainMagnitudezisegmap_intragroup_34045
    self.mainMagnitudezisegmap_intragroup_34272_var = program.mainMagnitudezisegmap_intragroup_34272
    self.mainMagnitudezisegmap_intragroup_35223_var = program.mainMagnitudezisegmap_intragroup_35223
    self.mainMagnitudezisegmap_intragroup_35563_var = program.mainMagnitudezisegmap_intragroup_35563
    self.mainMagnitudezisegmap_intragroup_36541_var = program.mainMagnitudezisegmap_intragroup_36541
    self.mainMagnitudezisegmap_intragroup_40730_var = program.mainMagnitudezisegmap_intragroup_40730
    self.mainMagnitudezisegmap_intragroup_40883_var = program.mainMagnitudezisegmap_intragroup_40883
    self.mainMagnitudezisegmap_intragroup_41332_var = program.mainMagnitudezisegmap_intragroup_41332
    self.mainMagnitudezisegmap_intragroup_41624_var = program.mainMagnitudezisegmap_intragroup_41624
    self.mainMagnitudezisegmap_intragroup_42058_var = program.mainMagnitudezisegmap_intragroup_42058
    self.mainMagnitudezisegmap_intragroup_42248_var = program.mainMagnitudezisegmap_intragroup_42248
    self.mainMagnitudezisegred_large_33810_var = program.mainMagnitudezisegred_large_33810
    self.mainMagnitudezisegred_large_34857_var = program.mainMagnitudezisegred_large_34857
    self.mainMagnitudezisegred_large_34994_var = program.mainMagnitudezisegred_large_34994
    self.mainMagnitudezisegred_large_35124_var = program.mainMagnitudezisegred_large_35124
    self.mainMagnitudezisegred_large_35690_var = program.mainMagnitudezisegred_large_35690
    self.mainMagnitudezisegred_large_35711_var = program.mainMagnitudezisegred_large_35711
    self.mainMagnitudezisegred_large_35862_var = program.mainMagnitudezisegred_large_35862
    self.mainMagnitudezisegred_large_36921_var = program.mainMagnitudezisegred_large_36921
    self.mainMagnitudezisegred_nonseg_35780_var = program.mainMagnitudezisegred_nonseg_35780
    self.mainMagnitudezisegred_small_33810_var = program.mainMagnitudezisegred_small_33810
    self.mainMagnitudezisegred_small_34857_var = program.mainMagnitudezisegred_small_34857
    self.mainMagnitudezisegred_small_34994_var = program.mainMagnitudezisegred_small_34994
    self.mainMagnitudezisegred_small_35124_var = program.mainMagnitudezisegred_small_35124
    self.mainMagnitudezisegred_small_35690_var = program.mainMagnitudezisegred_small_35690
    self.mainMagnitudezisegred_small_35711_var = program.mainMagnitudezisegred_small_35711
    self.mainMagnitudezisegred_small_35862_var = program.mainMagnitudezisegred_small_35862
    self.mainMagnitudezisegred_small_36921_var = program.mainMagnitudezisegred_small_36921
    self.constants = {}
    mainzicounter_mem_43941 = np.zeros(10240, dtype=np.int32)
    static_mem_45017 = opencl_alloc(self, 40960, "static_mem_45017")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45017,
                      normaliseArray(mainzicounter_mem_43941),
                      is_blocking=synchronous)
    self.mainzicounter_mem_43941 = static_mem_45017
    mainzicounter_mem_44138 = np.zeros(10240, dtype=np.int32)
    static_mem_45020 = opencl_alloc(self, 40960, "static_mem_45020")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45020,
                      normaliseArray(mainzicounter_mem_44138),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44138 = static_mem_45020
    mainzicounter_mem_44226 = np.zeros(10240, dtype=np.int32)
    static_mem_45021 = opencl_alloc(self, 40960, "static_mem_45021")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45021,
                      normaliseArray(mainzicounter_mem_44226),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44226 = static_mem_45021
    mainzicounter_mem_44358 = np.zeros(10240, dtype=np.int32)
    static_mem_45022 = opencl_alloc(self, 40960, "static_mem_45022")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45022,
                      normaliseArray(mainzicounter_mem_44358),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44358 = static_mem_45022
    mainzicounter_mem_44550 = np.zeros(10240, dtype=np.int32)
    static_mem_45023 = opencl_alloc(self, 40960, "static_mem_45023")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45023,
                      normaliseArray(mainzicounter_mem_44550),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44550 = static_mem_45023
    mainzicounter_mem_44610 = np.zeros(10240, dtype=np.int32)
    static_mem_45024 = opencl_alloc(self, 40960, "static_mem_45024")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45024,
                      normaliseArray(mainzicounter_mem_44610),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44610 = static_mem_45024
    mainzicounter_mem_44650 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_45025 = opencl_alloc(self, 40, "static_mem_45025")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45025,
                      normaliseArray(mainzicounter_mem_44650),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44650 = static_mem_45025
    mainzicounter_mem_44719 = np.zeros(10240, dtype=np.int32)
    static_mem_45027 = opencl_alloc(self, 40960, "static_mem_45027")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45027,
                      normaliseArray(mainzicounter_mem_44719),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44719 = static_mem_45027
    mainzicounter_mem_44896 = np.zeros(10240, dtype=np.int32)
    static_mem_45029 = opencl_alloc(self, 40960, "static_mem_45029")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45029,
                      normaliseArray(mainzicounter_mem_44896),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44896 = static_mem_45029
    mainDetailedzicounter_mem_43953 = np.zeros(10240, dtype=np.int32)
    static_mem_45030 = opencl_alloc(self, 40960, "static_mem_45030")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45030,
                      normaliseArray(mainDetailedzicounter_mem_43953),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_43953 = static_mem_45030
    mainDetailedzicounter_mem_44150 = np.zeros(10240, dtype=np.int32)
    static_mem_45033 = opencl_alloc(self, 40960, "static_mem_45033")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45033,
                      normaliseArray(mainDetailedzicounter_mem_44150),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44150 = static_mem_45033
    mainDetailedzicounter_mem_44238 = np.zeros(10240, dtype=np.int32)
    static_mem_45034 = opencl_alloc(self, 40960, "static_mem_45034")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45034,
                      normaliseArray(mainDetailedzicounter_mem_44238),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44238 = static_mem_45034
    mainDetailedzicounter_mem_44370 = np.zeros(10240, dtype=np.int32)
    static_mem_45035 = opencl_alloc(self, 40960, "static_mem_45035")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45035,
                      normaliseArray(mainDetailedzicounter_mem_44370),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44370 = static_mem_45035
    mainDetailedzicounter_mem_44562 = np.zeros(10240, dtype=np.int32)
    static_mem_45036 = opencl_alloc(self, 40960, "static_mem_45036")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45036,
                      normaliseArray(mainDetailedzicounter_mem_44562),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44562 = static_mem_45036
    mainDetailedzicounter_mem_44622 = np.zeros(10240, dtype=np.int32)
    static_mem_45037 = opencl_alloc(self, 40960, "static_mem_45037")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45037,
                      normaliseArray(mainDetailedzicounter_mem_44622),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44622 = static_mem_45037
    mainDetailedzicounter_mem_44662 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_45038 = opencl_alloc(self, 40, "static_mem_45038")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45038,
                      normaliseArray(mainDetailedzicounter_mem_44662),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44662 = static_mem_45038
    mainDetailedzicounter_mem_44731 = np.zeros(10240, dtype=np.int32)
    static_mem_45040 = opencl_alloc(self, 40960, "static_mem_45040")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45040,
                      normaliseArray(mainDetailedzicounter_mem_44731),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44731 = static_mem_45040
    mainDetailedzicounter_mem_44954 = np.zeros(10240, dtype=np.int32)
    static_mem_45042 = opencl_alloc(self, 40960, "static_mem_45042")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45042,
                      normaliseArray(mainDetailedzicounter_mem_44954),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44954 = static_mem_45042
    mainMagnitudezicounter_mem_43942 = np.zeros(10240, dtype=np.int32)
    static_mem_45043 = opencl_alloc(self, 40960, "static_mem_45043")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45043,
                      normaliseArray(mainMagnitudezicounter_mem_43942),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_43942 = static_mem_45043
    mainMagnitudezicounter_mem_44139 = np.zeros(10240, dtype=np.int32)
    static_mem_45046 = opencl_alloc(self, 40960, "static_mem_45046")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45046,
                      normaliseArray(mainMagnitudezicounter_mem_44139),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44139 = static_mem_45046
    mainMagnitudezicounter_mem_44227 = np.zeros(10240, dtype=np.int32)
    static_mem_45047 = opencl_alloc(self, 40960, "static_mem_45047")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45047,
                      normaliseArray(mainMagnitudezicounter_mem_44227),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44227 = static_mem_45047
    mainMagnitudezicounter_mem_44359 = np.zeros(10240, dtype=np.int32)
    static_mem_45048 = opencl_alloc(self, 40960, "static_mem_45048")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45048,
                      normaliseArray(mainMagnitudezicounter_mem_44359),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44359 = static_mem_45048
    mainMagnitudezicounter_mem_44551 = np.zeros(10240, dtype=np.int32)
    static_mem_45049 = opencl_alloc(self, 40960, "static_mem_45049")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45049,
                      normaliseArray(mainMagnitudezicounter_mem_44551),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44551 = static_mem_45049
    mainMagnitudezicounter_mem_44611 = np.zeros(10240, dtype=np.int32)
    static_mem_45050 = opencl_alloc(self, 40960, "static_mem_45050")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45050,
                      normaliseArray(mainMagnitudezicounter_mem_44611),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44611 = static_mem_45050
    mainMagnitudezicounter_mem_44651 = np.array([np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0)],
                                                dtype=np.int32)
    static_mem_45051 = opencl_alloc(self, 40, "static_mem_45051")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45051,
                      normaliseArray(mainMagnitudezicounter_mem_44651),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44651 = static_mem_45051
    mainMagnitudezicounter_mem_44720 = np.zeros(10240, dtype=np.int32)
    static_mem_45053 = opencl_alloc(self, 40960, "static_mem_45053")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45053,
                      normaliseArray(mainMagnitudezicounter_mem_44720),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44720 = static_mem_45053
    mainMagnitudezicounter_mem_44917 = np.zeros(10240, dtype=np.int32)
    static_mem_45055 = opencl_alloc(self, 40960, "static_mem_45055")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45055,
                      normaliseArray(mainMagnitudezicounter_mem_44917),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44917 = static_mem_45055
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_44471, num_elems_44472,
                                     val_44473):
    group_sizze_44478 = self.sizes["builtin#replicate_f32.group_size_44478"]
    num_groups_44479 = sdiv_up64(num_elems_44472, group_sizze_44478)
    if ((1 * (np.long(num_groups_44479) * np.long(group_sizze_44478))) != 0):
      self.builtinzhreplicate_f32zireplicate_44475_var.set_args(np.int32(num_elems_44472),
                                                                np.float32(val_44473),
                                                                mem_44471)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_44475_var,
                                 ((np.long(num_groups_44479) * np.long(group_sizze_44478)),),
                                 (np.long(group_sizze_44478),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_44480, num_elems_44481,
                                     val_44482):
    group_sizze_44487 = self.sizes["builtin#replicate_i32.group_size_44487"]
    num_groups_44488 = sdiv_up64(num_elems_44481, group_sizze_44487)
    if ((1 * (np.long(num_groups_44488) * np.long(group_sizze_44487))) != 0):
      self.builtinzhreplicate_i32zireplicate_44484_var.set_args(np.int32(num_elems_44481),
                                                                np.int32(val_44482),
                                                                mem_44480)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_44484_var,
                                 ((np.long(num_groups_44488) * np.long(group_sizze_44487)),),
                                 (np.long(group_sizze_44487),))
      if synchronous:
        sync(self)
    return ()
  def futhark_convertToFloat(self, images_mem_42537, m_27356, n_27357, p_27358,
                             nan_value_27359):
    y_29320 = (n_27357 * p_27358)
    nest_sizze_29321 = (m_27356 * y_29320)
    segmap_group_sizze_29322 = self.sizes["convertToFloat.segmap_group_size_29265"]
    segmap_usable_groups_29323 = sdiv_up64(nest_sizze_29321,
                                           segmap_group_sizze_29322)
    binop_x_42540 = (m_27356 * n_27357)
    binop_x_42541 = (p_27358 * binop_x_42540)
    bytes_42539 = (np.int64(4) * binop_x_42541)
    mem_42542 = opencl_alloc(self, bytes_42539, "mem_42542")
    if ((1 * (np.long(segmap_usable_groups_29323) * np.long(segmap_group_sizze_29322))) != 0):
      self.convertToFloatzisegmap_29261_var.set_args(self.global_failure,
                                                     np.int64(m_27356),
                                                     np.int64(n_27357),
                                                     np.int64(p_27358),
                                                     np.int16(nan_value_27359),
                                                     images_mem_42537,
                                                     mem_42542)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.convertToFloatzisegmap_29261_var,
                                 ((np.long(segmap_usable_groups_29323) * np.long(segmap_group_sizze_29322)),),
                                 (np.long(segmap_group_sizze_29322),))
      if synchronous:
        sync(self)
    out_mem_43833 = mem_42542
    return out_mem_43833
  def futhark_main(self, mappingindices_mem_42537, images_mem_42538, N_28660,
                   m_28661, trend_28662, k_28663, n_28664, freq_28665,
                   hfrac_28666, lam_28667):
    i32_res_28670 = sext_i32_i64(n_28664)
    x_28671 = (np.int32(2) * k_28663)
    k2p2_28672 = (np.int32(2) + x_28671)
    cond_28673 = slt32(np.int32(0), trend_28662)
    if cond_28673:
      k2p2zq_28674 = k2p2_28672
    else:
      k2p2zq_f_res_28675 = (k2p2_28672 - np.int32(1))
      k2p2zq_28674 = k2p2zq_f_res_28675
    i32_res_28676 = sext_i32_i64(k2p2zq_28674)
    binop_x_42541 = (N_28660 * i32_res_28676)
    bytes_42540 = (np.int64(4) * binop_x_42541)
    if cond_28673:
      bounds_invalid_upwards_28678 = slt64(i32_res_28676, np.int64(0))
      valid_28679 = not(bounds_invalid_upwards_28678)
      range_valid_c_28680 = True
      assert valid_28679, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:190:5-58\n   #5  bfastfinal.fut:185:1-191:25\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28676,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_37335 = self.sizes["main.segmap_group_size_37265"]
      segmap_usable_groups_37336 = sdiv_up64(binop_x_42541,
                                             segmap_group_sizze_37335)
      mem_42542 = opencl_alloc(self, bytes_42540, "mem_42542")
      if ((1 * (np.long(segmap_usable_groups_37336) * np.long(segmap_group_sizze_37335))) != 0):
        self.mainzisegmap_37262_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.float32(freq_28665),
                                             np.int64(i32_res_28676),
                                             mappingindices_mem_42537,
                                             mem_42542)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37262_var,
                                   ((np.long(segmap_usable_groups_37336) * np.long(segmap_group_sizze_37335)),),
                                   (np.long(segmap_group_sizze_37335),))
        if synchronous:
          sync(self)
      binop_p_mem_42547 = mem_42542
    else:
      bounds_invalid_upwards_28704 = slt64(i32_res_28676, np.int64(0))
      valid_28705 = not(bounds_invalid_upwards_28704)
      range_valid_c_28706 = True
      assert valid_28705, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:190:5-58\n   #5  bfastfinal.fut:185:1-191:25\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28676,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_37509 = self.sizes["main.segmap_group_size_37443"]
      segmap_usable_groups_37510 = sdiv_up64(binop_x_42541,
                                             segmap_group_sizze_37509)
      mem_42546 = opencl_alloc(self, bytes_42540, "mem_42546")
      if ((1 * (np.long(segmap_usable_groups_37510) * np.long(segmap_group_sizze_37509))) != 0):
        self.mainzisegmap_37440_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.float32(freq_28665),
                                             np.int64(i32_res_28676),
                                             mappingindices_mem_42537,
                                             mem_42546)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37440_var,
                                   ((np.long(segmap_usable_groups_37510) * np.long(segmap_group_sizze_37509)),),
                                   (np.long(segmap_group_sizze_37509),))
        if synchronous:
          sync(self)
      binop_p_mem_42547 = mem_42546
    x_28729 = (N_28660 * N_28660)
    y_28730 = (np.int64(2) * N_28660)
    x_28731 = (x_28729 + y_28730)
    x_28732 = (np.int64(1) + x_28731)
    y_28733 = (np.int64(1) + N_28660)
    zzero_28734 = (y_28733 == np.int64(0))
    nonzzero_28735 = not(zzero_28734)
    nonzzero_cert_28736 = True
    assert nonzzero_28735, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:190:5-58\n   #2  bfastfinal.fut:185:1-191:25\n" % ("division by zero",))
    x_28737 = sdiv64(x_28732, y_28733)
    x_28738 = (x_28737 - N_28660)
    binop_p_28739 = (x_28738 - np.int64(1))
    defunc_0_f_res_28740 = sext_i64_i32(binop_p_28739)
    i32_res_28741 = sitofp_i32_f32(defunc_0_f_res_28740)
    segmap_group_sizze_37592 = self.sizes["main.segmap_group_size_37571"]
    segmap_usable_groups_37593 = sdiv_up64(binop_x_42541,
                                           segmap_group_sizze_37592)
    mem_42550 = opencl_alloc(self, bytes_42540, "mem_42550")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42550, np.int64(0),
                                                binop_p_mem_42547, np.int64(0),
                                                np.int64(1), N_28660,
                                                i32_res_28676)
    mem_42554 = opencl_alloc(self, bytes_42540, "mem_42554")
    if ((1 * (np.long(segmap_usable_groups_37593) * np.long(segmap_group_sizze_37592))) != 0):
      self.mainzisegmap_37568_var.set_args(self.global_failure,
                                           np.int64(N_28660),
                                           np.int64(i32_res_28676),
                                           np.float32(i32_res_28741), mem_42550,
                                           mem_42554)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37568_var,
                                 ((np.long(segmap_usable_groups_37593) * np.long(segmap_group_sizze_37592)),),
                                 (np.long(segmap_group_sizze_37592),))
      if synchronous:
        sync(self)
    eq_x_y_28749 = (np.int64(0) == i32_res_28676)
    p_and_eq_x_y_28750 = (cond_28673 and eq_x_y_28749)
    not_p_28751 = not(cond_28673)
    p_and_eq_x_y_28752 = (eq_x_y_28749 and not_p_28751)
    empty_slice_28753 = (p_and_eq_x_y_28750 or p_and_eq_x_y_28752)
    m_28754 = (i32_res_28676 - np.int64(1))
    zzero_leq_i_p_m_t_s_28755 = sle64(np.int64(0), m_28754)
    i_p_m_t_s_leq_w_28756 = slt64(m_28754, i32_res_28676)
    i_lte_j_28757 = sle64(np.int64(0), i32_res_28676)
    y_28758 = (zzero_leq_i_p_m_t_s_28755 and i_p_m_t_s_leq_w_28756)
    y_28759 = (i_lte_j_28757 and y_28758)
    ok_or_empty_28760 = (empty_slice_28753 or y_28759)
    empty_slice_28761 = (i32_res_28670 == np.int64(0))
    m_28762 = (i32_res_28670 - np.int64(1))
    zzero_leq_i_p_m_t_s_28763 = sle64(np.int64(0), m_28762)
    i_p_m_t_s_leq_w_28764 = slt64(m_28762, N_28660)
    i_lte_j_28765 = sle64(np.int64(0), i32_res_28670)
    y_28766 = (zzero_leq_i_p_m_t_s_28763 and i_p_m_t_s_leq_w_28764)
    y_28767 = (i_lte_j_28765 and y_28766)
    ok_or_empty_28768 = (empty_slice_28761 or y_28767)
    index_ok_28769 = (ok_or_empty_28760 and ok_or_empty_28768)
    index_certs_28770 = True
    assert index_ok_28769, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:190:5-58\n   #2  bfastfinal.fut:185:1-191:25\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28670,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28676,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28660,
                                                                                                                                                                               "]."))
    empty_slice_28772 = (i32_res_28676 == np.int64(0))
    ok_or_empty_28773 = (y_28759 or empty_slice_28772)
    index_ok_28774 = (ok_or_empty_28768 and ok_or_empty_28773)
    index_certs_28775 = True
    assert index_ok_28774, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:190:5-58\n   #2  bfastfinal.fut:185:1-191:25\n" % ("Index [:",
                                                                                                                                                                               i32_res_28670,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28660,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28676,
                                                                                                                                                                               "]."))
    empty_slice_28777 = (m_28661 == np.int64(0))
    m_28778 = (m_28661 - np.int64(1))
    zzero_leq_i_p_m_t_s_28779 = sle64(np.int64(0), m_28778)
    i_p_m_t_s_leq_w_28780 = slt64(m_28778, m_28661)
    i_lte_j_28781 = sle64(np.int64(0), m_28661)
    y_28782 = (zzero_leq_i_p_m_t_s_28779 and i_p_m_t_s_leq_w_28780)
    y_28783 = (i_lte_j_28781 and y_28782)
    ok_or_empty_28784 = (empty_slice_28777 or y_28783)
    index_ok_28785 = (ok_or_empty_28768 and ok_or_empty_28784)
    index_certs_28786 = True
    assert index_ok_28785, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:190:5-58\n   #2  bfastfinal.fut:185:1-191:25\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28670,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28661,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28660,
                                                                                                                                                                               "]."))
    suff_outer_par_37599 = (self.sizes["main.suff_outer_par_6"] <= m_28661)
    segmap_group_sizze_37625 = self.sizes["main.segmap_group_size_37603"]
    max_num_groups_43851 = self.sizes["main.segmap_num_groups_37605"]
    num_groups_37626 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28661,
                                                            segmap_group_sizze_37625),
                                                  sext_i32_i64(max_num_groups_43851))))
    nest_sizze_37801 = (m_28661 * i32_res_28676)
    segmap_group_sizze_37802 = self.sizes["main.segmap_group_size_37650"]
    max_num_groups_43852 = self.sizes["main.segmap_num_groups_37652"]
    num_groups_37803 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37801,
                                                            segmap_group_sizze_37802),
                                                  sext_i32_i64(max_num_groups_43852))))
    suff_outer_par_37807 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_37801)
    y_37831 = (i32_res_28676 * i32_res_28676)
    comparatee_37832 = (m_28661 * y_37831)
    suff_outer_par_37833 = (self.sizes["main.suff_outer_par_8"] <= comparatee_37832)
    nest_sizze_37853 = (i32_res_28670 * comparatee_37832)
    segred_group_sizze_37854 = self.sizes["main.segred_group_size_37710"]
    max_num_groups_43853 = self.sizes["main.segred_num_groups_37712"]
    num_groups_37855 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37853,
                                                            segred_group_sizze_37854),
                                                  sext_i32_i64(max_num_groups_43853))))
    Tx_40716 = self.sizes["main.Tx_40714"]
    Ty_40717 = self.sizes["main.Ty_40715"]
    Ty_40718 = smin64(i32_res_28676, Ty_40717)
    Tx_40719 = smin64(i32_res_28676, Tx_40716)
    gridDim_zz_40722 = sdiv_up64(m_28661, np.int64(30))
    group_sizze_tile3d_40725 = (Ty_40718 * Tx_40719)
    binop_x_42556 = (N_28660 * m_28661)
    bytes_42555 = (np.int64(4) * binop_x_42556)
    bytes_42600 = (np.int64(4) * comparatee_37832)
    bytes_42559 = (np.int64(4) * y_37831)
    binop_x_42703 = (i32_res_28676 * nest_sizze_37801)
    bytes_42701 = (np.int64(4) * binop_x_42703)
    bytes_42605 = (np.int64(4) * i32_res_28676)
    binop_x_42634 = (np.int64(30) * group_sizze_tile3d_40725)
    bytes_42632 = (np.int64(4) * binop_x_42634)
    binop_x_43604 = (np.int64(4) * Ty_40718)
    binop_x_43605 = (Tx_40719 * binop_x_43604)
    sizze_43606 = (np.int64(30) * binop_x_43605)
    num_threads_43790 = (segmap_group_sizze_37625 * num_groups_37626)
    total_sizze_43791 = (bytes_42559 * num_threads_43790)
    num_threads_43792 = (segmap_group_sizze_37802 * num_groups_37803)
    total_sizze_43793 = (bytes_42605 * num_threads_43792)
    local_memory_capacity_43975 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_43975)) and suff_outer_par_37599):
      mem_42557 = opencl_alloc(self, bytes_42555, "mem_42557")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42557, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_28660, m_28661)
      mem_42603 = opencl_alloc(self, bytes_42600, "mem_42603")
      mem_42561 = opencl_alloc(self, total_sizze_43791, "mem_42561")
      if ((1 * (np.long(num_groups_37626) * np.long(segmap_group_sizze_37625))) != 0):
        self.mainzisegmap_37601_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.int64(m_28661),
                                             np.int32(n_28664),
                                             np.int32(k2p2zq_28674),
                                             np.int64(i32_res_28676),
                                             np.int64(num_groups_37626),
                                             binop_p_mem_42547, mem_42554,
                                             mem_42557, mem_42561, mem_42603)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37601_var,
                                   ((np.long(num_groups_37626) * np.long(segmap_group_sizze_37625)),),
                                   (np.long(segmap_group_sizze_37625),))
        if synchronous:
          sync(self)
      mem_42557 = None
      mem_42561 = None
      mem_42704 = opencl_alloc(self, bytes_42701, "mem_42704")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42704, np.int64(0),
                                                  mem_42603, np.int64(0),
                                                  np.int64(1), m_28661,
                                                  (i32_res_28676 * i32_res_28676))
      mem_42603 = None
      defunc_3_map_res_mem_42706 = mem_42704
    else:
      local_memory_capacity_43974 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_43974)) and suff_outer_par_37807):
        mem_42622 = opencl_alloc(self, bytes_42701, "mem_42622")
        mem_42606 = opencl_alloc(self, total_sizze_43793, "mem_42606")
        if ((1 * (np.long(num_groups_37803) * np.long(segmap_group_sizze_37802))) != 0):
          self.mainzisegmap_37647_var.set_args(self.global_failure,
                                               np.int64(N_28660),
                                               np.int64(m_28661),
                                               np.int32(n_28664),
                                               np.int32(k2p2zq_28674),
                                               np.int64(i32_res_28676),
                                               np.int64(num_groups_37803),
                                               images_mem_42538, mem_42550,
                                               mem_42554, mem_42606, mem_42622)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37647_var,
                                     ((np.long(num_groups_37803) * np.long(segmap_group_sizze_37802)),),
                                     (np.long(segmap_group_sizze_37802),))
          if synchronous:
            sync(self)
        mem_42606 = None
        mem_42698 = opencl_alloc(self, bytes_42701, "mem_42698")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_42698, np.int64(0),
                                                    mem_42622, np.int64(0),
                                                    np.int64(1),
                                                    (m_28661 * i32_res_28676),
                                                    i32_res_28676)
        mem_42622 = None
        defunc_3_map_res_mem_42700 = mem_42698
      else:
        local_memory_capacity_43973 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_43973)) and suff_outer_par_37833):
          mem_42625 = opencl_alloc(self, bytes_42555, "mem_42625")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42625, np.int64(0),
                                                      images_mem_42538,
                                                      np.int64(0), np.int64(1),
                                                      N_28660, m_28661)
          gridDim_x_40720 = sdiv_up64(i32_res_28676, Tx_40719)
          gridDim_y_40721 = sdiv_up64(i32_res_28676, Ty_40718)
          binop_x_40723 = (gridDim_y_40721 * gridDim_zz_40722)
          grid_sizze_tile3d_40724 = (gridDim_x_40720 * binop_x_40723)
          count_shmem_40726 = sdiv_up64(np.int64(30), group_sizze_tile3d_40725)
          mem_42685 = opencl_alloc(self, bytes_42701, "mem_42685")
          if ((1 * (np.long(grid_sizze_tile3d_40724) * np.long(group_sizze_tile3d_40725))) != 0):
            self.mainzisegmap_intragroup_40730_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_28661),
                                                            np.int32(n_28664),
                                                            np.int64(i32_res_28676),
                                                            np.int64(Ty_40718),
                                                            np.int64(Tx_40719),
                                                            np.int64(gridDim_x_40720),
                                                            np.int64(gridDim_y_40721),
                                                            np.int64(group_sizze_tile3d_40725),
                                                            np.int64(count_shmem_40726),
                                                            mem_42550,
                                                            mem_42554,
                                                            mem_42625,
                                                            mem_42685)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_40730_var,
                                       ((np.long(grid_sizze_tile3d_40724) * np.long(group_sizze_tile3d_40725)),),
                                       (np.long(group_sizze_tile3d_40725),))
            if synchronous:
              sync(self)
          mem_42625 = None
          defunc_3_map_res_mem_42694 = mem_42685
        else:
          mem_42688 = opencl_alloc(self, bytes_42540, "mem_42688")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42688, np.int64(0),
                                                      mem_42554, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28676, N_28660)
          mem_42693 = opencl_alloc(self, bytes_42701, "mem_42693")
          if slt64((i32_res_28670 * np.int64(2)), segred_group_sizze_37854):
            segment_sizze_nonzzero_43913 = smax64(np.int64(1), i32_res_28670)
            num_threads_43914 = (num_groups_37855 * segred_group_sizze_37854)
            if ((1 * (np.long(num_groups_37855) * np.long(segred_group_sizze_37854))) != 0):
              self.mainzisegred_small_37716_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37854))),
                                                         np.int64(N_28660),
                                                         np.int64(m_28661),
                                                         np.int64(i32_res_28670),
                                                         np.int64(i32_res_28676),
                                                         np.int64(num_groups_37855),
                                                         np.int64(segment_sizze_nonzzero_43913),
                                                         images_mem_42538,
                                                         binop_p_mem_42547,
                                                         mem_42688, mem_42693)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_37716_var,
                                         ((np.long(num_groups_37855) * np.long(segred_group_sizze_37854)),),
                                         (np.long(segred_group_sizze_37854),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_43934 = sdiv_up64(num_groups_37855,
                                                 smax64(np.int64(1),
                                                        ((m_28661 * i32_res_28676) * i32_res_28676)))
            elements_per_thread_43935 = sdiv_up64(i32_res_28670,
                                                  (segred_group_sizze_37854 * groups_per_segment_43934))
            virt_num_groups_43936 = (groups_per_segment_43934 * ((m_28661 * i32_res_28676) * i32_res_28676))
            num_threads_43937 = (num_groups_37855 * segred_group_sizze_37854)
            threads_per_segment_43938 = (groups_per_segment_43934 * segred_group_sizze_37854)
            group_res_arr_mem_43939 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_37854 * virt_num_groups_43936)),
                                                   "group_res_arr_mem_43939")
            mainzicounter_mem_43941 = self.mainzicounter_mem_43941
            if ((1 * (np.long(num_groups_37855) * np.long(segred_group_sizze_37854))) != 0):
              self.mainzisegred_large_37716_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37854))),
                                                         np.int64(N_28660),
                                                         np.int64(i32_res_28670),
                                                         np.int64(i32_res_28676),
                                                         np.int64(num_groups_37855),
                                                         np.int64(groups_per_segment_43934),
                                                         np.int64(elements_per_thread_43935),
                                                         np.int64(virt_num_groups_43936),
                                                         np.int64(threads_per_segment_43938),
                                                         images_mem_42538,
                                                         binop_p_mem_42547,
                                                         mem_42688, mem_42693,
                                                         group_res_arr_mem_43939,
                                                         mainzicounter_mem_43941)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_37716_var,
                                         ((np.long(num_groups_37855) * np.long(segred_group_sizze_37854)),),
                                         (np.long(segred_group_sizze_37854),))
              if synchronous:
                sync(self)
          mem_42688 = None
          defunc_3_map_res_mem_42694 = mem_42693
        defunc_3_map_res_mem_42700 = defunc_3_map_res_mem_42694
      defunc_3_map_res_mem_42706 = defunc_3_map_res_mem_42700
    m_28807 = (np.int32(2) * k2p2zq_28674)
    nm_28808 = (k2p2zq_28674 * m_28807)
    i32_res_28809 = sext_i32_i64(nm_28808)
    bounds_invalid_upwards_28810 = slt64(i32_res_28809, np.int64(0))
    valid_28811 = not(bounds_invalid_upwards_28810)
    range_valid_c_28812 = True
    assert valid_28811, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:190:5-58\n   #4  bfastfinal.fut:185:1-191:25\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28809,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28817 = (m_28807 == np.int32(0))
    nonzzero_28818 = not(zzero_28817)
    nonzzero_cert_28819 = True
    assert nonzzero_28818, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:190:5-58\n   #4  bfastfinal.fut:185:1-191:25\n" % ("division by zero",))
    loop_nonempty_28820 = slt32(np.int32(0), k2p2zq_28674)
    loop_not_taken_28821 = not(loop_nonempty_28820)
    protect_assert_disj_28822 = (nonzzero_28818 or loop_not_taken_28821)
    nonzzero_cert_28823 = True
    assert protect_assert_disj_28822, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:190:5-58\n   #5  bfastfinal.fut:185:1-191:25\n" % ("division by zero",))
    i32_res_28824 = sext_i32_i64(m_28807)
    x_28825 = (i32_res_28676 * i32_res_28824)
    dim_ok_28826 = (x_28825 == i32_res_28809)
    dim_ok_cert_28827 = True
    assert dim_ok_28826, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:190:5-58\n   #4  bfastfinal.fut:185:1-191:25\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28828 = (i32_res_28824 - i32_res_28676)
    empty_slice_28829 = (j_m_i_28828 == np.int64(0))
    m_28830 = (j_m_i_28828 - np.int64(1))
    i_p_m_t_s_28831 = (i32_res_28676 + m_28830)
    zzero_leq_i_p_m_t_s_28832 = sle64(np.int64(0), i_p_m_t_s_28831)
    i_p_m_t_s_leq_w_28833 = slt64(i_p_m_t_s_28831, i32_res_28824)
    i_lte_j_28834 = sle64(i32_res_28676, i32_res_28824)
    y_28835 = (i_lte_j_28757 and i_p_m_t_s_leq_w_28833)
    y_28836 = (zzero_leq_i_p_m_t_s_28832 and y_28835)
    y_28837 = (i_lte_j_28834 and y_28836)
    forwards_ok_28838 = (i_lte_j_28757 and y_28837)
    ok_or_empty_28839 = (empty_slice_28829 or forwards_ok_28838)
    index_ok_28840 = (ok_or_empty_28773 and ok_or_empty_28839)
    index_certs_28841 = True
    assert index_ok_28840, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:190:5-58\n   #3  bfastfinal.fut:185:1-191:25\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28676,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28676,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28824,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28676,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28824,
                                                                                                                                                                                                                   "]."))
    dim_match_28842 = (i32_res_28676 == j_m_i_28828)
    empty_or_match_cert_28843 = True
    assert dim_match_28842, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:190:5-58\n   #3  bfastfinal.fut:185:1-191:25\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28676,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28828,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28676,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28676,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_38069 = self.max_group_size
    fits_38070 = sle64(i32_res_28809, max_group_sizze_38069)
    suff_intra_par_38068 = (self.sizes["main.suff_intra_par_11"] <= i32_res_28809)
    intra_suff_and_fits_38071 = (suff_intra_par_38068 and fits_38070)
    nest_sizze_38555 = (m_28661 * i32_res_28809)
    segmap_group_sizze_38556 = self.sizes["main.segmap_group_size_38515"]
    suff_intra_par_38583 = (self.sizes["main.suff_intra_par_13"] <= i32_res_28809)
    intra_suff_and_fits_38584 = (fits_38070 and suff_intra_par_38583)
    segmap_group_sizze_38620 = self.sizes["main.segmap_group_size_38421"]
    segmap_group_sizze_38636 = self.sizes["main.segmap_group_size_38354"]
    segmap_group_sizze_38670 = self.sizes["main.segmap_group_size_38300"]
    y_38680 = (i32_res_28676 * j_m_i_28828)
    nest_sizze_38681 = (m_28661 * y_38680)
    segmap_group_sizze_38682 = self.sizes["main.segmap_group_size_38135"]
    segmap_usable_groups_38621 = sdiv_up_safe64(m_28661,
                                                segmap_group_sizze_38620)
    segmap_usable_groups_38637 = sdiv_up_safe64(nest_sizze_38555,
                                                segmap_group_sizze_38636)
    segmap_usable_groups_38671 = sdiv_up_safe64(nest_sizze_38555,
                                                segmap_group_sizze_38670)
    bytes_42709 = (np.int64(4) * i32_res_28809)
    bytes_42732 = (np.int64(4) * nest_sizze_38555)
    binop_x_42783 = (j_m_i_28828 * nest_sizze_37801)
    bytes_42781 = (np.int64(4) * binop_x_42783)
    local_memory_capacity_43976 = self.max_local_memory
    if intra_suff_and_fits_38071:
      defunc_3_map_res_ixfn_42785 = i32_res_28676
    else:
      defunc_3_map_res_ixfn_42785 = j_m_i_28828
    local_memory_capacity_44039 = self.max_local_memory
    if (sle64(((bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44039)) and intra_suff_and_fits_38071):
      mem_42730 = opencl_alloc(self, bytes_42701, "mem_42730")
      if ((1 * (np.long(m_28661) * np.long(i32_res_28809))) != 0):
        self.mainzisegmap_intragroup_37951_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_42709)),
                                                        cl.LocalMemory(np.long(bytes_42709)),
                                                        np.int32(k2p2zq_28674),
                                                        np.int64(i32_res_28676),
                                                        np.int32(m_28807),
                                                        np.int64(i32_res_28809),
                                                        np.int64(i32_res_28824),
                                                        defunc_3_map_res_mem_42706,
                                                        mem_42730)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_37951_var,
                                   ((np.long(m_28661) * np.long(i32_res_28809)),),
                                   (np.long(i32_res_28809),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_42786 = mem_42730
    else:
      segmap_usable_groups_38557 = sdiv_up64(nest_sizze_38555,
                                             segmap_group_sizze_38556)
      mem_42734 = opencl_alloc(self, bytes_42732, "mem_42734")
      if ((1 * (np.long(segmap_usable_groups_38557) * np.long(segmap_group_sizze_38556))) != 0):
        self.mainzisegmap_38512_var.set_args(self.global_failure,
                                             np.int64(m_28661),
                                             np.int32(k2p2zq_28674),
                                             np.int64(i32_res_28676),
                                             np.int32(m_28807),
                                             np.int64(i32_res_28809),
                                             defunc_3_map_res_mem_42706,
                                             mem_42734)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38512_var,
                                   ((np.long(segmap_usable_groups_38557) * np.long(segmap_group_sizze_38556)),),
                                   (np.long(segmap_group_sizze_38556),))
        if synchronous:
          sync(self)
      ctx_param_ext_42735 = m_28661
      ctx_param_ext_42736 = i32_res_28809
      ctx_param_ext_42737 = np.int64(0)
      ctx_param_ext_42738 = i32_res_28809
      ctx_param_ext_42739 = m_28661
      ctx_param_ext_42740 = np.int64(1)
      ctx_param_ext_42741 = i32_res_28809
      mem_param_42742 = mem_42734
      i_38573 = np.int32(0)
      one_45019 = np.int32(1)
      for counter_45018 in range(k2p2zq_28674):
        i32_res_38575 = sext_i32_i64(i_38573)
        local_memory_capacity_43999 = self.max_local_memory
        if intra_suff_and_fits_38584:
          gauss_jordan_res_ixfn_42764 = m_28661
        else:
          gauss_jordan_res_ixfn_42764 = ctx_param_ext_42739
        local_memory_capacity_44000 = self.max_local_memory
        if intra_suff_and_fits_38584:
          gauss_jordan_res_ixfn_42765 = i32_res_28809
        else:
          gauss_jordan_res_ixfn_42765 = ctx_param_ext_42741
        local_memory_capacity_44001 = self.max_local_memory
        if intra_suff_and_fits_38584:
          gauss_jordan_res_ixfn_42766 = m_28661
        else:
          gauss_jordan_res_ixfn_42766 = ctx_param_ext_42735
        local_memory_capacity_44002 = self.max_local_memory
        if intra_suff_and_fits_38584:
          gauss_jordan_res_ixfn_42767 = i32_res_28809
        else:
          gauss_jordan_res_ixfn_42767 = ctx_param_ext_42736
        local_memory_capacity_44003 = self.max_local_memory
        if intra_suff_and_fits_38584:
          gauss_jordan_res_ixfn_42768 = i32_res_28809
        else:
          gauss_jordan_res_ixfn_42768 = ctx_param_ext_42738
        local_memory_capacity_44004 = self.max_local_memory
        if intra_suff_and_fits_38584:
          gauss_jordan_res_ixfn_42769 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_42769 = ctx_param_ext_42740
        local_memory_capacity_44005 = self.max_local_memory
        if intra_suff_and_fits_38584:
          gauss_jordan_res_ixfn_42770 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_42770 = ctx_param_ext_42737
        local_memory_capacity_44033 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44033)) and sle64((bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44033))) and intra_suff_and_fits_38584):
          mem_42747 = opencl_alloc(self, bytes_42732, "mem_42747")
          group_sizze_44009 = self.sizes["main.group_size_44009"]
          num_groups_44010 = sdiv_up64((m_28661 * i32_res_28809),
                                       group_sizze_44009)
          if ((1 * (np.long(num_groups_44010) * np.long(group_sizze_44009))) != 0):
            self.mainzicopy_44006_var.set_args(np.int64(m_28661),
                                               np.int64(i32_res_28809),
                                               np.int64(ctx_param_ext_42737),
                                               np.int64(ctx_param_ext_42738),
                                               np.int64(ctx_param_ext_42740),
                                               mem_param_42742, mem_42747)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_44006_var,
                                       ((np.long(num_groups_44010) * np.long(group_sizze_44009)),),
                                       (np.long(group_sizze_44009),))
            if synchronous:
              sync(self)
          mem_42755 = opencl_alloc(self, bytes_42732, "mem_42755")
          if ((1 * (np.long(m_28661) * np.long(i32_res_28809))) != 0):
            self.mainzisegmap_intragroup_38178_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_42709)),
                                                            np.int64(m_28661),
                                                            np.int32(k2p2zq_28674),
                                                            np.int32(m_28807),
                                                            np.int64(i32_res_28809),
                                                            np.int32(i_38573),
                                                            np.int64(i32_res_38575),
                                                            np.int64(ctx_param_ext_42737),
                                                            np.int64(ctx_param_ext_42738),
                                                            np.int64(ctx_param_ext_42740),
                                                            mem_param_42742,
                                                            mem_42747,
                                                            mem_42755)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_38178_var,
                                       ((np.long(m_28661) * np.long(i32_res_28809)),),
                                       (np.long(i32_res_28809),))
            if synchronous:
              sync(self)
          mem_42747 = None
          gauss_jordan_res_mem_42771 = mem_42755
        else:
          mem_42758 = opencl_alloc(self, m_28661, "mem_42758")
          if ((1 * (np.long(segmap_usable_groups_38621) * np.long(segmap_group_sizze_38620))) != 0):
            self.mainzisegmap_38419_var.set_args(self.global_failure,
                                                 np.int64(m_28661),
                                                 np.int64(i32_res_38575),
                                                 np.int64(ctx_param_ext_42737),
                                                 np.int64(ctx_param_ext_42738),
                                                 np.int64(ctx_param_ext_42740),
                                                 mem_param_42742, mem_42758)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38419_var,
                                       ((np.long(segmap_usable_groups_38621) * np.long(segmap_group_sizze_38620)),),
                                       (np.long(segmap_group_sizze_38620),))
            if synchronous:
              sync(self)
          mem_42762 = opencl_alloc(self, bytes_42732, "mem_42762")
          if ((1 * (np.long(segmap_usable_groups_38637) * np.long(segmap_group_sizze_38636))) != 0):
            self.mainzisegmap_38351_var.set_args(self.global_failure,
                                                 np.int64(m_28661),
                                                 np.int32(k2p2zq_28674),
                                                 np.int32(m_28807),
                                                 np.int64(i32_res_28809),
                                                 np.int32(i_38573),
                                                 np.int64(i32_res_38575),
                                                 np.int64(ctx_param_ext_42737),
                                                 np.int64(ctx_param_ext_42738),
                                                 np.int64(ctx_param_ext_42740),
                                                 mem_param_42742, mem_42758,
                                                 mem_42762)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38351_var,
                                       ((np.long(segmap_usable_groups_38637) * np.long(segmap_group_sizze_38636)),),
                                       (np.long(segmap_group_sizze_38636),))
            if synchronous:
              sync(self)
          mem_42758 = None
          if ((1 * (np.long(segmap_usable_groups_38671) * np.long(segmap_group_sizze_38670))) != 0):
            self.mainzisegmap_38297_var.set_args(self.global_failure,
                                                 np.int64(m_28661),
                                                 np.int64(i32_res_28809),
                                                 np.int64(ctx_param_ext_42737),
                                                 np.int64(ctx_param_ext_42738),
                                                 np.int64(ctx_param_ext_42740),
                                                 mem_param_42742, mem_42762)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38297_var,
                                       ((np.long(segmap_usable_groups_38671) * np.long(segmap_group_sizze_38670)),),
                                       (np.long(segmap_group_sizze_38670),))
            if synchronous:
              sync(self)
          mem_42762 = None
          gauss_jordan_res_mem_42771 = mem_param_42742
        ctx_param_ext_tmp_43990 = gauss_jordan_res_ixfn_42766
        ctx_param_ext_tmp_43991 = gauss_jordan_res_ixfn_42767
        ctx_param_ext_tmp_43992 = gauss_jordan_res_ixfn_42770
        ctx_param_ext_tmp_43993 = gauss_jordan_res_ixfn_42768
        ctx_param_ext_tmp_43994 = gauss_jordan_res_ixfn_42764
        ctx_param_ext_tmp_43995 = gauss_jordan_res_ixfn_42769
        ctx_param_ext_tmp_43996 = gauss_jordan_res_ixfn_42765
        mem_param_tmp_43997 = gauss_jordan_res_mem_42771
        ctx_param_ext_42735 = ctx_param_ext_tmp_43990
        ctx_param_ext_42736 = ctx_param_ext_tmp_43991
        ctx_param_ext_42737 = ctx_param_ext_tmp_43992
        ctx_param_ext_42738 = ctx_param_ext_tmp_43993
        ctx_param_ext_42739 = ctx_param_ext_tmp_43994
        ctx_param_ext_42740 = ctx_param_ext_tmp_43995
        ctx_param_ext_42741 = ctx_param_ext_tmp_43996
        mem_param_42742 = mem_param_tmp_43997
        i_38573 += one_45019
      gauss_jordan_res_r_ixfn_42772 = ctx_param_ext_42735
      gauss_jordan_res_r_ixfn_42773 = ctx_param_ext_42736
      gauss_jordan_res_r_ixfn_42774 = ctx_param_ext_42737
      gauss_jordan_res_r_ixfn_42775 = ctx_param_ext_42738
      gauss_jordan_res_r_ixfn_42776 = ctx_param_ext_42739
      gauss_jordan_res_r_ixfn_42777 = ctx_param_ext_42740
      gauss_jordan_res_r_ixfn_42778 = ctx_param_ext_42741
      gauss_jordan_res_r_mem_42779 = mem_param_42742
      mem_42734 = None
      segmap_usable_groups_38683 = sdiv_up64(nest_sizze_38681,
                                             segmap_group_sizze_38682)
      mem_42784 = opencl_alloc(self, bytes_42781, "mem_42784")
      if ((1 * (np.long(segmap_usable_groups_38683) * np.long(segmap_group_sizze_38682))) != 0):
        self.mainzisegmap_38131_var.set_args(self.global_failure,
                                             np.int64(m_28661),
                                             np.int64(i32_res_28676),
                                             np.int64(i32_res_28809),
                                             np.int64(i32_res_28824),
                                             np.int64(x_28825),
                                             np.int64(j_m_i_28828),
                                             np.int64(gauss_jordan_res_r_ixfn_42774),
                                             np.int64(gauss_jordan_res_r_ixfn_42775),
                                             np.int64(gauss_jordan_res_r_ixfn_42777),
                                             gauss_jordan_res_r_mem_42779,
                                             mem_42784)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38131_var,
                                   ((np.long(segmap_usable_groups_38683) * np.long(segmap_group_sizze_38682)),),
                                   (np.long(segmap_group_sizze_38682),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_42779 = None
      defunc_3_map_res_mem_42786 = mem_42784
    defunc_3_map_res_mem_42706 = None
    suff_outer_par_38691 = (self.sizes["main.suff_outer_par_16"] <= m_28661)
    segmap_group_sizze_38713 = self.sizes["main.segmap_group_size_38695"]
    max_num_groups_44040 = self.sizes["main.segmap_num_groups_38697"]
    num_groups_38714 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28661,
                                                            segmap_group_sizze_38713),
                                                  sext_i32_i64(max_num_groups_44040))))
    suff_outer_par_38798 = (self.sizes["main.suff_outer_par_17"] <= nest_sizze_37801)
    nest_sizze_38814 = (i32_res_28670 * nest_sizze_37801)
    segred_group_sizze_38815 = self.sizes["main.segred_group_size_38757"]
    max_num_groups_44041 = self.sizes["main.segred_num_groups_38759"]
    num_groups_38816 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38814,
                                                            segred_group_sizze_38815),
                                                  sext_i32_i64(max_num_groups_44041))))
    Ty_40864 = self.sizes["main.Ty_40861"]
    Ry_40865 = self.sizes["main.Ry_40863"]
    Tx_40866 = self.sizes["main.Tx_40860"]
    Rx_40867 = self.sizes["main.Rx_40862"]
    Tk_40868 = self.sizes["main.Tk_40859"]
    TxRx_40871 = (Tx_40866 * Rx_40867)
    TyRy_40872 = (Ty_40864 * Ry_40865)
    a_loc_szz_40874 = (Tk_40868 * TyRy_40872)
    binop_x_40875 = (Tx_40866 * Tk_40868)
    b_loc_szz_40876 = (Rx_40867 * binop_x_40875)
    group_sizze_40880 = (Ty_40864 * Tx_40866)
    bytes_42805 = (np.int64(4) * nest_sizze_37801)
    binop_x_42819 = (Ry_40865 * group_sizze_40880)
    binop_x_42820 = (Rx_40867 * binop_x_42819)
    bytes_42817 = (np.int64(4) * binop_x_42820)
    binop_x_42811 = (Ry_40865 * Rx_40867)
    bytes_42810 = (np.int64(4) * binop_x_42811)
    bytes_42822 = (np.int64(4) * a_loc_szz_40874)
    bytes_42824 = (np.int64(4) * b_loc_szz_40876)
    bytes_42893 = (np.int64(4) * binop_x_42819)
    binop_x_42899 = (Rx_40867 * group_sizze_40880)
    bytes_42897 = (np.int64(4) * binop_x_42899)
    bytes_42885 = (np.int64(4) * Ry_40865)
    bytes_42887 = (np.int64(4) * Rx_40867)
    binop_x_43621 = (np.int64(4) * Ty_40864)
    binop_x_43622 = (Tx_40866 * binop_x_43621)
    binop_x_43623 = (Ry_40865 * binop_x_43622)
    sizze_43624 = (Rx_40867 * binop_x_43623)
    num_threads_43803 = (segmap_group_sizze_38713 * num_groups_38714)
    total_sizze_43804 = (bytes_42605 * num_threads_43803)
    local_memory_capacity_44171 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44171)) and suff_outer_par_38691):
      mem_42789 = opencl_alloc(self, bytes_42555, "mem_42789")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42789, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_28660, m_28661)
      mem_42807 = opencl_alloc(self, bytes_42805, "mem_42807")
      mem_42792 = opencl_alloc(self, total_sizze_43804, "mem_42792")
      if ((1 * (np.long(num_groups_38714) * np.long(segmap_group_sizze_38713))) != 0):
        self.mainzisegmap_38693_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.int64(m_28661),
                                             np.int32(n_28664),
                                             np.int32(k2p2zq_28674),
                                             np.int64(i32_res_28676),
                                             np.int64(num_groups_38714),
                                             binop_p_mem_42547, mem_42789,
                                             mem_42792, mem_42807)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38693_var,
                                   ((np.long(num_groups_38714) * np.long(segmap_group_sizze_38713)),),
                                   (np.long(segmap_group_sizze_38713),))
        if synchronous:
          sync(self)
      mem_42789 = None
      mem_42792 = None
      mem_43005 = opencl_alloc(self, bytes_42805, "mem_43005")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43005, np.int64(0),
                                                  mem_42807, np.int64(0),
                                                  np.int64(1), m_28661,
                                                  i32_res_28676)
      mem_42807 = None
      defunc_3_map_res_mem_43007 = mem_43005
    else:
      local_memory_capacity_44170 = self.max_local_memory
      if (sle64(((bytes_42822 + srem64((np.int64(8) - srem64(bytes_42822,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_42824 + srem64((np.int64(8) - srem64(bytes_42824,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44170)) and suff_outer_par_38798):
        tk_div_tx_40869 = sdiv_up64(Tk_40868, Tx_40866)
        tk_div_ty_40870 = sdiv_up64(Tk_40868, Ty_40864)
        gridDim_x_40877 = sdiv_up64(i32_res_28676, TxRx_40871)
        gridDim_y_40878 = sdiv_up64(m_28661, TyRy_40872)
        grid_sizze_40879 = (gridDim_x_40877 * gridDim_y_40878)
        full_tiles_40908 = squot64(i32_res_28670, Tk_40868)
        kk_41115 = (Tk_40868 * full_tiles_40908)
        mem_42997 = opencl_alloc(self, bytes_42805, "mem_42997")
        if ((1 * (np.long(grid_sizze_40879) * np.long(group_sizze_40880))) != 0):
          self.mainzisegmap_intragroup_40883_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_42824)),
                                                          cl.LocalMemory(np.long(bytes_42822)),
                                                          np.int64(N_28660),
                                                          np.int64(m_28661),
                                                          np.int64(i32_res_28670),
                                                          np.int64(i32_res_28676),
                                                          np.int64(gridDim_x_40877),
                                                          np.int64(full_tiles_40908),
                                                          np.int64(kk_41115),
                                                          images_mem_42538,
                                                          mem_42550, mem_42997)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_40883_var,
                                     ((np.long(grid_sizze_40879) * np.long(group_sizze_40880)),),
                                     (np.long(group_sizze_40880),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43002 = mem_42997
      else:
        mem_43001 = opencl_alloc(self, bytes_42805, "mem_43001")
        if slt64((i32_res_28670 * np.int64(2)), segred_group_sizze_38815):
          segment_sizze_nonzzero_44110 = smax64(np.int64(1), i32_res_28670)
          num_threads_44111 = (num_groups_38816 * segred_group_sizze_38815)
          if ((1 * (np.long(num_groups_38816) * np.long(segred_group_sizze_38815))) != 0):
            self.mainzisegred_small_38763_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38815))),
                                                       np.int64(N_28660),
                                                       np.int64(m_28661),
                                                       np.int64(i32_res_28670),
                                                       np.int64(i32_res_28676),
                                                       np.int64(num_groups_38816),
                                                       np.int64(segment_sizze_nonzzero_44110),
                                                       images_mem_42538,
                                                       binop_p_mem_42547,
                                                       mem_43001)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38763_var,
                                       ((np.long(num_groups_38816) * np.long(segred_group_sizze_38815)),),
                                       (np.long(segred_group_sizze_38815),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44131 = sdiv_up64(num_groups_38816,
                                               smax64(np.int64(1),
                                                      (m_28661 * i32_res_28676)))
          elements_per_thread_44132 = sdiv_up64(i32_res_28670,
                                                (segred_group_sizze_38815 * groups_per_segment_44131))
          virt_num_groups_44133 = (groups_per_segment_44131 * (m_28661 * i32_res_28676))
          num_threads_44134 = (num_groups_38816 * segred_group_sizze_38815)
          threads_per_segment_44135 = (groups_per_segment_44131 * segred_group_sizze_38815)
          group_res_arr_mem_44136 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38815 * virt_num_groups_44133)),
                                                 "group_res_arr_mem_44136")
          mainzicounter_mem_44138 = self.mainzicounter_mem_44138
          if ((1 * (np.long(num_groups_38816) * np.long(segred_group_sizze_38815))) != 0):
            self.mainzisegred_large_38763_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38815))),
                                                       np.int64(N_28660),
                                                       np.int64(i32_res_28670),
                                                       np.int64(i32_res_28676),
                                                       np.int64(num_groups_38816),
                                                       np.int64(groups_per_segment_44131),
                                                       np.int64(elements_per_thread_44132),
                                                       np.int64(virt_num_groups_44133),
                                                       np.int64(threads_per_segment_44135),
                                                       images_mem_42538,
                                                       binop_p_mem_42547,
                                                       mem_43001,
                                                       group_res_arr_mem_44136,
                                                       mainzicounter_mem_44138)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38763_var,
                                       ((np.long(num_groups_38816) * np.long(segred_group_sizze_38815)),),
                                       (np.long(segred_group_sizze_38815),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43002 = mem_43001
      defunc_3_map_res_mem_43007 = defunc_3_map_res_mem_43002
    binop_p_mem_42547 = None
    mem_42550 = None
    suff_outer_par_38832 = (self.sizes["main.suff_outer_par_18"] <= m_28661)
    segmap_group_sizze_38853 = self.sizes["main.segmap_group_size_38836"]
    max_num_groups_44172 = self.sizes["main.segmap_num_groups_38838"]
    num_groups_38854 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28661,
                                                            segmap_group_sizze_38853),
                                                  sext_i32_i64(max_num_groups_44172))))
    suff_outer_par_38933 = (self.sizes["main.suff_outer_par_19"] <= nest_sizze_37801)
    segred_group_sizze_38948 = self.sizes["main.segred_group_size_38894"]
    max_num_groups_44173 = self.sizes["main.segred_num_groups_38896"]
    num_groups_38949 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42703,
                                                            segred_group_sizze_38948),
                                                  sext_i32_i64(max_num_groups_44173))))
    tile_sizze_41327 = self.sizes["main.tile_size_41326"]
    group_sizze_41328 = (tile_sizze_41327 * tile_sizze_41327)
    bytes_43039 = (np.int64(4) * group_sizze_41328)
    binop_x_43637 = (np.int64(4) * tile_sizze_41327)
    sizze_43638 = (tile_sizze_41327 * binop_x_43637)
    num_threads_43807 = (segmap_group_sizze_38853 * num_groups_38854)
    total_sizze_43808 = (bytes_42605 * num_threads_43807)
    local_memory_capacity_44259 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44259)) and suff_outer_par_38832):
      mem_43011 = opencl_alloc(self, bytes_42600, "mem_43011")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43011, np.int64(0),
                                                  defunc_3_map_res_mem_42786,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28676 * i32_res_28676),
                                                  m_28661)
      mem_43014 = opencl_alloc(self, bytes_42805, "mem_43014")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43014, np.int64(0),
                                                  defunc_3_map_res_mem_43007,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28676, m_28661)
      mem_43032 = opencl_alloc(self, bytes_42805, "mem_43032")
      mem_43017 = opencl_alloc(self, total_sizze_43808, "mem_43017")
      if ((1 * (np.long(num_groups_38854) * np.long(segmap_group_sizze_38853))) != 0):
        self.mainzisegmap_38834_var.set_args(self.global_failure,
                                             np.int64(m_28661),
                                             np.int32(k2p2zq_28674),
                                             np.int64(i32_res_28676),
                                             np.int64(num_groups_38854),
                                             mem_43011, mem_43014, mem_43017,
                                             mem_43032)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38834_var,
                                   ((np.long(num_groups_38854) * np.long(segmap_group_sizze_38853)),),
                                   (np.long(segmap_group_sizze_38853),))
        if synchronous:
          sync(self)
      mem_43011 = None
      mem_43014 = None
      mem_43017 = None
      mem_43071 = opencl_alloc(self, bytes_42805, "mem_43071")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43071, np.int64(0),
                                                  mem_43032, np.int64(0),
                                                  np.int64(1), m_28661,
                                                  i32_res_28676)
      mem_43032 = None
      defunc_4_map_res_mem_43073 = mem_43071
    else:
      local_memory_capacity_44258 = self.max_local_memory
      if (sle64(((bytes_43039 + srem64((np.int64(8) - srem64(bytes_43039,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43039 + srem64((np.int64(8) - srem64(bytes_43039,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44258)) and suff_outer_par_38933):
        mem_43036 = opencl_alloc(self, bytes_42701, "mem_43036")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43036, np.int64(0),
                                                    defunc_3_map_res_mem_42786,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28676,
                                                    (m_28661 * i32_res_28676))
        num_groups_x_41329 = sdiv_up64(m_28661, tile_sizze_41327)
        num_groups_y_41330 = sdiv_up64(i32_res_28676, tile_sizze_41327)
        num_groups_top_41331 = (num_groups_x_41329 * num_groups_y_41330)
        num_whole_tiles_41348 = squot64(i32_res_28676, tile_sizze_41327)
        residual_input_41475 = srem64(i32_res_28676, tile_sizze_41327)
        cond_41476 = (residual_input_41475 == np.int64(0))
        mem_43063 = opencl_alloc(self, bytes_42805, "mem_43063")
        if ((1 * (np.long(num_groups_top_41331) * np.long(group_sizze_41328))) != 0):
          self.mainzisegmap_intragroup_41332_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43039)),
                                                          cl.LocalMemory(np.long(bytes_43039)),
                                                          np.int64(m_28661),
                                                          np.int64(i32_res_28676),
                                                          np.int64(num_groups_y_41330),
                                                          np.int64(num_whole_tiles_41348),
                                                          np.int64(residual_input_41475),
                                                          np.byte(cond_41476),
                                                          defunc_3_map_res_mem_43007,
                                                          mem_43036, mem_43063)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41332_var,
                                     ((np.long(num_groups_top_41331) * np.long(group_sizze_41328)),),
                                     (np.long(group_sizze_41328),))
          if synchronous:
            sync(self)
        mem_43036 = None
        defunc_4_map_res_mem_43068 = mem_43063
      else:
        mem_43067 = opencl_alloc(self, bytes_42805, "mem_43067")
        if slt64((i32_res_28676 * np.int64(2)), segred_group_sizze_38948):
          segment_sizze_nonzzero_44198 = smax64(np.int64(1), i32_res_28676)
          num_threads_44199 = (num_groups_38949 * segred_group_sizze_38948)
          if ((1 * (np.long(num_groups_38949) * np.long(segred_group_sizze_38948))) != 0):
            self.mainzisegred_small_38900_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38948))),
                                                       np.int64(m_28661),
                                                       np.int64(i32_res_28676),
                                                       np.int64(num_groups_38949),
                                                       np.int64(segment_sizze_nonzzero_44198),
                                                       defunc_3_map_res_mem_42786,
                                                       defunc_3_map_res_mem_43007,
                                                       mem_43067)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38900_var,
                                       ((np.long(num_groups_38949) * np.long(segred_group_sizze_38948)),),
                                       (np.long(segred_group_sizze_38948),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44219 = sdiv_up64(num_groups_38949,
                                               smax64(np.int64(1),
                                                      (m_28661 * i32_res_28676)))
          elements_per_thread_44220 = sdiv_up64(i32_res_28676,
                                                (segred_group_sizze_38948 * groups_per_segment_44219))
          virt_num_groups_44221 = (groups_per_segment_44219 * (m_28661 * i32_res_28676))
          num_threads_44222 = (num_groups_38949 * segred_group_sizze_38948)
          threads_per_segment_44223 = (groups_per_segment_44219 * segred_group_sizze_38948)
          group_res_arr_mem_44224 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38948 * virt_num_groups_44221)),
                                                 "group_res_arr_mem_44224")
          mainzicounter_mem_44226 = self.mainzicounter_mem_44226
          if ((1 * (np.long(num_groups_38949) * np.long(segred_group_sizze_38948))) != 0):
            self.mainzisegred_large_38900_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38948))),
                                                       np.int64(i32_res_28676),
                                                       np.int64(num_groups_38949),
                                                       np.int64(groups_per_segment_44219),
                                                       np.int64(elements_per_thread_44220),
                                                       np.int64(virt_num_groups_44221),
                                                       np.int64(threads_per_segment_44223),
                                                       defunc_3_map_res_mem_42786,
                                                       defunc_3_map_res_mem_43007,
                                                       mem_43067,
                                                       group_res_arr_mem_44224,
                                                       mainzicounter_mem_44226)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38900_var,
                                       ((np.long(num_groups_38949) * np.long(segred_group_sizze_38948)),),
                                       (np.long(segred_group_sizze_38948),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43068 = mem_43067
      defunc_4_map_res_mem_43073 = defunc_4_map_res_mem_43068
    defunc_3_map_res_mem_42786 = None
    defunc_3_map_res_mem_43007 = None
    suff_outer_par_38964 = (self.sizes["main.suff_outer_par_20"] <= m_28661)
    segmap_group_sizze_38984 = self.sizes["main.segmap_group_size_38968"]
    max_num_groups_44260 = self.sizes["main.segmap_num_groups_38970"]
    num_groups_38985 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28661,
                                                            segmap_group_sizze_38984),
                                                  sext_i32_i64(max_num_groups_44260))))
    suff_outer_par_39061 = (self.sizes["main.suff_outer_par_21"] <= binop_x_42556)
    nest_sizze_39075 = (i32_res_28676 * binop_x_42556)
    segred_group_sizze_39076 = self.sizes["main.segred_group_size_39024"]
    max_num_groups_44261 = self.sizes["main.segred_num_groups_39026"]
    num_groups_39077 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39075,
                                                            segred_group_sizze_39076),
                                                  sext_i32_i64(max_num_groups_44261))))
    Ty_41605 = self.sizes["main.Ty_41602"]
    Ry_41606 = self.sizes["main.Ry_41604"]
    Tx_41607 = self.sizes["main.Tx_41601"]
    Rx_41608 = self.sizes["main.Rx_41603"]
    Tk_41609 = self.sizes["main.Tk_41600"]
    TxRx_41612 = (Tx_41607 * Rx_41608)
    TyRy_41613 = (Ty_41605 * Ry_41606)
    a_loc_szz_41615 = (Tk_41609 * TyRy_41613)
    binop_x_41616 = (Tx_41607 * Tk_41609)
    b_loc_szz_41617 = (Rx_41608 * binop_x_41616)
    group_sizze_41621 = (Ty_41605 * Tx_41607)
    bytes_43078 = (np.int64(4) * N_28660)
    binop_x_43109 = (Ry_41606 * group_sizze_41621)
    binop_x_43110 = (Rx_41608 * binop_x_43109)
    bytes_43107 = (np.int64(4) * binop_x_43110)
    binop_x_43101 = (Ry_41606 * Rx_41608)
    bytes_43100 = (np.int64(4) * binop_x_43101)
    bytes_43112 = (np.int64(4) * a_loc_szz_41615)
    bytes_43114 = (np.int64(4) * b_loc_szz_41617)
    bytes_43183 = (np.int64(4) * binop_x_43109)
    binop_x_43189 = (Rx_41608 * group_sizze_41621)
    bytes_43187 = (np.int64(4) * binop_x_43189)
    bytes_43175 = (np.int64(4) * Ry_41606)
    bytes_43177 = (np.int64(4) * Rx_41608)
    binop_x_43651 = (np.int64(4) * Ty_41605)
    binop_x_43652 = (Tx_41607 * binop_x_43651)
    binop_x_43653 = (Ry_41606 * binop_x_43652)
    sizze_43654 = (Rx_41608 * binop_x_43653)
    num_threads_43811 = (segmap_group_sizze_38984 * num_groups_38985)
    total_sizze_43812 = (bytes_43078 * num_threads_43811)
    local_memory_capacity_44391 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44391)) and suff_outer_par_38964):
      mem_43076 = opencl_alloc(self, bytes_42805, "mem_43076")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43076, np.int64(0),
                                                  defunc_4_map_res_mem_43073,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28676, m_28661)
      mem_43094 = opencl_alloc(self, bytes_42555, "mem_43094")
      mem_43079 = opencl_alloc(self, total_sizze_43812, "mem_43079")
      if ((1 * (np.long(num_groups_38985) * np.long(segmap_group_sizze_38984))) != 0):
        self.mainzisegmap_38966_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.int64(m_28661),
                                             np.int32(k2p2zq_28674),
                                             np.int64(i32_res_28676),
                                             np.int64(num_groups_38985),
                                             mem_42554, mem_43076, mem_43079,
                                             mem_43094)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38966_var,
                                   ((np.long(num_groups_38985) * np.long(segmap_group_sizze_38984)),),
                                   (np.long(segmap_group_sizze_38984),))
        if synchronous:
          sync(self)
      mem_43076 = None
      mem_43079 = None
      mem_43295 = opencl_alloc(self, bytes_42555, "mem_43295")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43295, np.int64(0),
                                                  mem_43094, np.int64(0),
                                                  np.int64(1), m_28661, N_28660)
      mem_43094 = None
      defunc_3_map_res_mem_43297 = mem_43295
    else:
      local_memory_capacity_44390 = self.max_local_memory
      if (sle64(((bytes_43112 + srem64((np.int64(8) - srem64(bytes_43112,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43114 + srem64((np.int64(8) - srem64(bytes_43114,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44390)) and suff_outer_par_39061):
        mem_43097 = opencl_alloc(self, bytes_42540, "mem_43097")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43097, np.int64(0),
                                                    mem_42554, np.int64(0),
                                                    np.int64(1), i32_res_28676,
                                                    N_28660)
        tk_div_tx_41610 = sdiv_up64(Tk_41609, Tx_41607)
        tk_div_ty_41611 = sdiv_up64(Tk_41609, Ty_41605)
        gridDim_x_41618 = sdiv_up64(N_28660, TxRx_41612)
        gridDim_y_41619 = sdiv_up64(m_28661, TyRy_41613)
        grid_sizze_41620 = (gridDim_x_41618 * gridDim_y_41619)
        full_tiles_41649 = squot64(i32_res_28676, Tk_41609)
        kk_41852 = (Tk_41609 * full_tiles_41649)
        mem_43287 = opencl_alloc(self, bytes_42555, "mem_43287")
        if ((1 * (np.long(grid_sizze_41620) * np.long(group_sizze_41621))) != 0):
          self.mainzisegmap_intragroup_41624_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43114)),
                                                          cl.LocalMemory(np.long(bytes_43112)),
                                                          np.int64(N_28660),
                                                          np.int64(m_28661),
                                                          np.int64(i32_res_28676),
                                                          np.int64(gridDim_x_41618),
                                                          np.int64(full_tiles_41649),
                                                          np.int64(kk_41852),
                                                          defunc_4_map_res_mem_43073,
                                                          mem_43097, mem_43287)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41624_var,
                                     ((np.long(grid_sizze_41620) * np.long(group_sizze_41621)),),
                                     (np.long(group_sizze_41621),))
          if synchronous:
            sync(self)
        mem_43097 = None
        defunc_3_map_res_mem_43292 = mem_43287
      else:
        mem_43291 = opencl_alloc(self, bytes_42555, "mem_43291")
        if slt64((i32_res_28676 * np.int64(2)), segred_group_sizze_39076):
          segment_sizze_nonzzero_44330 = smax64(np.int64(1), i32_res_28676)
          num_threads_44331 = (num_groups_39077 * segred_group_sizze_39076)
          if ((1 * (np.long(num_groups_39077) * np.long(segred_group_sizze_39076))) != 0):
            self.mainzisegred_small_39030_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39076))),
                                                       np.int64(N_28660),
                                                       np.int64(m_28661),
                                                       np.int64(i32_res_28676),
                                                       np.int64(num_groups_39077),
                                                       np.int64(segment_sizze_nonzzero_44330),
                                                       mem_42554,
                                                       defunc_4_map_res_mem_43073,
                                                       mem_43291)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39030_var,
                                       ((np.long(num_groups_39077) * np.long(segred_group_sizze_39076)),),
                                       (np.long(segred_group_sizze_39076),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44351 = sdiv_up64(num_groups_39077,
                                               smax64(np.int64(1),
                                                      (m_28661 * N_28660)))
          elements_per_thread_44352 = sdiv_up64(i32_res_28676,
                                                (segred_group_sizze_39076 * groups_per_segment_44351))
          virt_num_groups_44353 = (groups_per_segment_44351 * (m_28661 * N_28660))
          num_threads_44354 = (num_groups_39077 * segred_group_sizze_39076)
          threads_per_segment_44355 = (groups_per_segment_44351 * segred_group_sizze_39076)
          group_res_arr_mem_44356 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39076 * virt_num_groups_44353)),
                                                 "group_res_arr_mem_44356")
          mainzicounter_mem_44358 = self.mainzicounter_mem_44358
          if ((1 * (np.long(num_groups_39077) * np.long(segred_group_sizze_39076))) != 0):
            self.mainzisegred_large_39030_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39076))),
                                                       np.int64(N_28660),
                                                       np.int64(i32_res_28676),
                                                       np.int64(num_groups_39077),
                                                       np.int64(groups_per_segment_44351),
                                                       np.int64(elements_per_thread_44352),
                                                       np.int64(virt_num_groups_44353),
                                                       np.int64(threads_per_segment_44355),
                                                       mem_42554,
                                                       defunc_4_map_res_mem_43073,
                                                       mem_43291,
                                                       group_res_arr_mem_44356,
                                                       mainzicounter_mem_44358)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39030_var,
                                       ((np.long(num_groups_39077) * np.long(segred_group_sizze_39076)),),
                                       (np.long(segred_group_sizze_39076),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43292 = mem_43291
      defunc_3_map_res_mem_43297 = defunc_3_map_res_mem_43292
    mem_42554 = None
    defunc_4_map_res_mem_43073 = None
    i_28936 = (N_28660 - np.int64(1))
    x_28937 = sle64(np.int64(0), i_28936)
    y_28938 = slt64(i_28936, N_28660)
    bounds_check_28939 = (x_28937 and y_28938)
    index_certs_28940 = True
    assert bounds_check_28939, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:16-77\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-77:25\n   #6  bfastfinal.fut:190:5-58\n   #7  bfastfinal.fut:185:1-191:25\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28936,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28660,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_39206 = sle64(N_28660, max_group_sizze_38069)
    suff_intra_par_39204 = (self.sizes["main.suff_intra_par_24"] <= N_28660)
    intra_suff_and_fits_39207 = (suff_intra_par_39204 and fits_39206)
    segscan_group_sizze_39356 = self.sizes["main.segscan_group_size_39333"]
    max_num_groups_44392 = self.sizes["main.segscan_num_groups_39335"]
    num_groups_39357 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42556,
                                                            segscan_group_sizze_39356),
                                                  sext_i32_i64(max_num_groups_44392))))
    segmap_group_sizze_39376 = self.sizes["main.segmap_group_size_39324"]
    segmap_group_sizze_39412 = self.sizes["main.segmap_group_size_39249"]
    bytes_43309 = (np.int64(4) * m_28661)
    bytes_43300 = (np.int64(8) * N_28660)
    bytes_43318 = (np.int64(8) * binop_x_42556)
    local_memory_capacity_44494 = self.max_local_memory
    if (sle64(((((bytes_43300 + srem64((np.int64(8) - srem64(bytes_43300,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44494)) and intra_suff_and_fits_39207):
      mem_43310 = opencl_alloc(self, bytes_43309, "mem_43310")
      mem_43313 = opencl_alloc(self, bytes_42555, "mem_43313")
      mem_43316 = opencl_alloc(self, bytes_42555, "mem_43316")
      if ((1 * (np.long(m_28661) * np.long(N_28660))) != 0):
        self.mainzisegmap_intragroup_39129_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43078)),
                                                        cl.LocalMemory(np.long(bytes_43078)),
                                                        cl.LocalMemory(np.long(bytes_43078)),
                                                        cl.LocalMemory(np.long(bytes_43300)),
                                                        np.int64(N_28660),
                                                        np.int64(i_28936),
                                                        images_mem_42538,
                                                        defunc_3_map_res_mem_43297,
                                                        mem_43310, mem_43313,
                                                        mem_43316)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39129_var,
                                   ((np.long(m_28661) * np.long(N_28660)),),
                                   (np.long(N_28660),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43334 = mem_43310
      defunc_4_map_res_mem_43335 = mem_43313
      defunc_4_map_res_mem_43336 = mem_43316
    else:
      mem_43320 = opencl_alloc(self, bytes_43318, "mem_43320")
      mem_43323 = opencl_alloc(self, bytes_42555, "mem_43323")
      if slt64(np.int64(0), (m_28661 * N_28660)):
        stage1_max_num_groups_44410 = self.max_group_size
        stage1_num_groups_44411 = smin64(stage1_max_num_groups_44410,
                                         num_groups_39357)
        num_threads_44412 = sext_i64_i32((stage1_num_groups_44411 * segscan_group_sizze_39356))
        if ((1 * (np.long(stage1_num_groups_44411) * np.long(segscan_group_sizze_39356))) != 0):
          self.mainziscan_stage1_39339_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_39356)))),
                                                    np.int64(N_28660),
                                                    np.int64(m_28661),
                                                    np.int32(num_threads_44412),
                                                    images_mem_42538,
                                                    defunc_3_map_res_mem_43297,
                                                    mem_43320, mem_43323)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_39339_var,
                                     ((np.long(stage1_num_groups_44411) * np.long(segscan_group_sizze_39356)),),
                                     (np.long(segscan_group_sizze_39356),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44411))) != 0):
          self.mainziscan_stage2_39339_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_44411)))),
                                                    np.int64(N_28660),
                                                    np.int64(m_28661),
                                                    np.int64(stage1_num_groups_44411),
                                                    np.int32(num_threads_44412),
                                                    mem_43320)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_39339_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44411)),),
                                     (np.long(stage1_num_groups_44411),))
          if synchronous:
            sync(self)
        required_groups_44454 = sext_i64_i32(sdiv_up64((m_28661 * N_28660),
                                                       segscan_group_sizze_39356))
        if ((1 * (np.long(num_groups_39357) * np.long(segscan_group_sizze_39356))) != 0):
          self.mainziscan_stage3_39339_var.set_args(self.global_failure,
                                                    np.int64(N_28660),
                                                    np.int64(m_28661),
                                                    np.int64(num_groups_39357),
                                                    np.int32(num_threads_44412),
                                                    np.int32(required_groups_44454),
                                                    mem_43320)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_39339_var,
                                     ((np.long(num_groups_39357) * np.long(segscan_group_sizze_39356)),),
                                     (np.long(segscan_group_sizze_39356),))
          if synchronous:
            sync(self)
      segmap_usable_groups_39377 = sdiv_up64(m_28661, segmap_group_sizze_39376)
      mem_43326 = opencl_alloc(self, bytes_43309, "mem_43326")
      if ((1 * (np.long(segmap_usable_groups_39377) * np.long(segmap_group_sizze_39376))) != 0):
        self.mainzisegmap_39322_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.int64(m_28661),
                                             np.int64(i_28936), mem_43320,
                                             mem_43326)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39322_var,
                                   ((np.long(segmap_usable_groups_39377) * np.long(segmap_group_sizze_39376)),),
                                   (np.long(segmap_group_sizze_39376),))
        if synchronous:
          sync(self)
      mem_43329 = opencl_alloc(self, bytes_42555, "mem_43329")
      self.futhark_builtinzhreplicate_f32(mem_43329, (m_28661 * N_28660),
                                          np.nan)
      mem_43332 = opencl_alloc(self, bytes_42555, "mem_43332")
      self.futhark_builtinzhreplicate_i32(mem_43332, (m_28661 * N_28660),
                                          np.int32(0))
      segmap_usable_groups_39413 = sdiv_up64(binop_x_42556,
                                             segmap_group_sizze_39412)
      if ((1 * (np.long(segmap_usable_groups_39413) * np.long(segmap_group_sizze_39412))) != 0):
        self.mainzisegmap_39246_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.int64(m_28661), mem_43320,
                                             mem_43323, mem_43329, mem_43332)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39246_var,
                                   ((np.long(segmap_usable_groups_39413) * np.long(segmap_group_sizze_39412)),),
                                   (np.long(segmap_group_sizze_39412),))
        if synchronous:
          sync(self)
      mem_43320 = None
      mem_43323 = None
      defunc_4_map_res_mem_43334 = mem_43326
      defunc_4_map_res_mem_43335 = mem_43329
      defunc_4_map_res_mem_43336 = mem_43332
    defunc_3_map_res_mem_43297 = None
    suff_outer_par_39461 = (self.sizes["main.suff_outer_par_28"] <= m_28661)
    fits_39539 = sle64(i32_res_28670, max_group_sizze_38069)
    suff_intra_par_39537 = (self.sizes["main.suff_intra_par_29"] <= i32_res_28670)
    intra_suff_and_fits_39540 = (suff_intra_par_39537 and fits_39539)
    segmap_group_sizze_39504 = self.sizes["main.segmap_group_size_39473"]
    nest_sizze_39627 = (m_28661 * i32_res_28670)
    segred_group_sizze_39628 = self.sizes["main.segred_group_size_39611"]
    max_num_groups_44495 = self.sizes["main.segred_num_groups_39613"]
    num_groups_39629 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39627,
                                                            segred_group_sizze_39628),
                                                  sext_i32_i64(max_num_groups_44495))))
    segred_group_sizze_39642 = self.sizes["main.segred_group_size_39590"]
    max_num_groups_44496 = self.sizes["main.segred_num_groups_39592"]
    num_groups_39643 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39627,
                                                            segred_group_sizze_39642),
                                                  sext_i32_i64(max_num_groups_44496))))
    segmap_group_sizze_39658 = self.sizes["main.segmap_group_size_39575"]
    bytes_43345 = (np.int64(4) * segmap_group_sizze_39504)
    local_memory_capacity_44648 = self.max_local_memory
    if (sle64(((bytes_43345 + srem64((np.int64(8) - srem64(bytes_43345,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43345 + srem64((np.int64(8) - srem64(bytes_43345,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44648)) and suff_outer_par_39461):
      segmap_usable_groups_39505 = sdiv_up64(m_28661, segmap_group_sizze_39504)
      mem_43339 = opencl_alloc(self, bytes_42555, "mem_43339")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43339, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_28660, m_28661)
      mem_43342 = opencl_alloc(self, bytes_42555, "mem_43342")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43342, np.int64(0),
                                                  defunc_4_map_res_mem_43335,
                                                  np.int64(0), np.int64(1),
                                                  N_28660, m_28661)
      num_whole_tiles_42080 = squot64(i32_res_28670, segmap_group_sizze_39504)
      residual_input_42169 = srem64(i32_res_28670, segmap_group_sizze_39504)
      cond_42170 = (residual_input_42169 == np.int64(0))
      mem_43373 = opencl_alloc(self, bytes_43309, "mem_43373")
      mem_43375 = opencl_alloc(self, bytes_43309, "mem_43375")
      mem_43377 = opencl_alloc(self, bytes_43309, "mem_43377")
      if ((1 * (np.long(segmap_usable_groups_39505) * np.long(segmap_group_sizze_39504))) != 0):
        self.mainzisegmap_intragroup_42058_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43345)),
                                                        cl.LocalMemory(np.long(bytes_43345)),
                                                        np.int64(m_28661),
                                                        np.int32(n_28664),
                                                        np.float32(hfrac_28666),
                                                        np.int64(i32_res_28670),
                                                        np.int32(k2p2_28672),
                                                        np.int64(num_whole_tiles_42080),
                                                        np.int64(residual_input_42169),
                                                        np.byte(cond_42170),
                                                        mem_43339, mem_43342,
                                                        mem_43373, mem_43375,
                                                        mem_43377)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42058_var,
                                   ((np.long(segmap_usable_groups_39505) * np.long(segmap_group_sizze_39504)),),
                                   (np.long(segmap_group_sizze_39504),))
        if synchronous:
          sync(self)
      mem_43339 = None
      mem_43342 = None
      defunc_3_map_res_mem_43401 = mem_43373
      defunc_3_map_res_mem_43402 = mem_43375
      defunc_3_map_res_mem_43403 = mem_43377
    else:
      local_memory_capacity_44647 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_28670) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28670),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_28670) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28670),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44647)) and intra_suff_and_fits_39540):
        mem_43382 = opencl_alloc(self, bytes_43309, "mem_43382")
        mem_43384 = opencl_alloc(self, bytes_43309, "mem_43384")
        mem_43386 = opencl_alloc(self, bytes_43309, "mem_43386")
        if ((1 * (np.long(m_28661) * np.long(i32_res_28670))) != 0):
          self.mainzisegmap_intragroup_39469_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_28670))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_28670))),
                                                          np.int64(N_28660),
                                                          np.float32(hfrac_28666),
                                                          np.int64(i32_res_28670),
                                                          np.int32(k2p2_28672),
                                                          images_mem_42538,
                                                          defunc_4_map_res_mem_43335,
                                                          mem_43382, mem_43384,
                                                          mem_43386)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_39469_var,
                                     ((np.long(m_28661) * np.long(i32_res_28670)),),
                                     (np.long(i32_res_28670),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43398 = mem_43382
        defunc_3_map_res_mem_43399 = mem_43384
        defunc_3_map_res_mem_43400 = mem_43386
      else:
        mem_43389 = opencl_alloc(self, bytes_43309, "mem_43389")
        if slt64((i32_res_28670 * np.int64(2)), segred_group_sizze_39628):
          segment_sizze_nonzzero_44522 = smax64(np.int64(1), i32_res_28670)
          num_threads_44523 = (num_groups_39629 * segred_group_sizze_39628)
          if ((1 * (np.long(num_groups_39629) * np.long(segred_group_sizze_39628))) != 0):
            self.mainzisegred_small_39617_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39628))),
                                                       np.int64(N_28660),
                                                       np.int64(m_28661),
                                                       np.int64(i32_res_28670),
                                                       np.int64(num_groups_39629),
                                                       np.int64(segment_sizze_nonzzero_44522),
                                                       images_mem_42538,
                                                       mem_43389)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39617_var,
                                       ((np.long(num_groups_39629) * np.long(segred_group_sizze_39628)),),
                                       (np.long(segred_group_sizze_39628),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44543 = sdiv_up64(num_groups_39629,
                                               smax64(np.int64(1), m_28661))
          elements_per_thread_44544 = sdiv_up64(i32_res_28670,
                                                (segred_group_sizze_39628 * groups_per_segment_44543))
          virt_num_groups_44545 = (groups_per_segment_44543 * m_28661)
          num_threads_44546 = (num_groups_39629 * segred_group_sizze_39628)
          threads_per_segment_44547 = (groups_per_segment_44543 * segred_group_sizze_39628)
          group_res_arr_mem_44548 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39628 * virt_num_groups_44545)),
                                                 "group_res_arr_mem_44548")
          mainzicounter_mem_44550 = self.mainzicounter_mem_44550
          if ((1 * (np.long(num_groups_39629) * np.long(segred_group_sizze_39628))) != 0):
            self.mainzisegred_large_39617_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39628))),
                                                       np.int64(N_28660),
                                                       np.int64(i32_res_28670),
                                                       np.int64(num_groups_39629),
                                                       np.int64(groups_per_segment_44543),
                                                       np.int64(elements_per_thread_44544),
                                                       np.int64(virt_num_groups_44545),
                                                       np.int64(threads_per_segment_44547),
                                                       images_mem_42538,
                                                       mem_43389,
                                                       group_res_arr_mem_44548,
                                                       mainzicounter_mem_44550)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39617_var,
                                       ((np.long(num_groups_39629) * np.long(segred_group_sizze_39628)),),
                                       (np.long(segred_group_sizze_39628),))
            if synchronous:
              sync(self)
        mem_43392 = opencl_alloc(self, bytes_43309, "mem_43392")
        if slt64((i32_res_28670 * np.int64(2)), segred_group_sizze_39642):
          segment_sizze_nonzzero_44582 = smax64(np.int64(1), i32_res_28670)
          num_threads_44583 = (num_groups_39643 * segred_group_sizze_39642)
          if ((1 * (np.long(num_groups_39643) * np.long(segred_group_sizze_39642))) != 0):
            self.mainzisegred_small_39596_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39642))),
                                                       np.int64(N_28660),
                                                       np.int64(m_28661),
                                                       np.int64(i32_res_28670),
                                                       np.int64(num_groups_39643),
                                                       np.int64(segment_sizze_nonzzero_44582),
                                                       defunc_4_map_res_mem_43335,
                                                       mem_43389, mem_43392)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39596_var,
                                       ((np.long(num_groups_39643) * np.long(segred_group_sizze_39642)),),
                                       (np.long(segred_group_sizze_39642),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44603 = sdiv_up64(num_groups_39643,
                                               smax64(np.int64(1), m_28661))
          elements_per_thread_44604 = sdiv_up64(i32_res_28670,
                                                (segred_group_sizze_39642 * groups_per_segment_44603))
          virt_num_groups_44605 = (groups_per_segment_44603 * m_28661)
          num_threads_44606 = (num_groups_39643 * segred_group_sizze_39642)
          threads_per_segment_44607 = (groups_per_segment_44603 * segred_group_sizze_39642)
          group_res_arr_mem_44608 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39642 * virt_num_groups_44605)),
                                                 "group_res_arr_mem_44608")
          mainzicounter_mem_44610 = self.mainzicounter_mem_44610
          if ((1 * (np.long(num_groups_39643) * np.long(segred_group_sizze_39642))) != 0):
            self.mainzisegred_large_39596_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39642))),
                                                       np.int64(N_28660),
                                                       np.int64(i32_res_28670),
                                                       np.int64(num_groups_39643),
                                                       np.int64(groups_per_segment_44603),
                                                       np.int64(elements_per_thread_44604),
                                                       np.int64(virt_num_groups_44605),
                                                       np.int64(threads_per_segment_44607),
                                                       defunc_4_map_res_mem_43335,
                                                       mem_43389, mem_43392,
                                                       group_res_arr_mem_44608,
                                                       mainzicounter_mem_44610)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39596_var,
                                       ((np.long(num_groups_39643) * np.long(segred_group_sizze_39642)),),
                                       (np.long(segred_group_sizze_39642),))
            if synchronous:
              sync(self)
        segmap_usable_groups_39659 = sdiv_up64(m_28661,
                                               segmap_group_sizze_39658)
        mem_43395 = opencl_alloc(self, bytes_43309, "mem_43395")
        mem_43397 = opencl_alloc(self, bytes_43309, "mem_43397")
        if ((1 * (np.long(segmap_usable_groups_39659) * np.long(segmap_group_sizze_39658))) != 0):
          self.mainzisegmap_39573_var.set_args(self.global_failure,
                                               np.int64(m_28661),
                                               np.float32(hfrac_28666),
                                               np.int32(k2p2_28672), mem_43389,
                                               mem_43392, mem_43395, mem_43397)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39573_var,
                                     ((np.long(segmap_usable_groups_39659) * np.long(segmap_group_sizze_39658)),),
                                     (np.long(segmap_group_sizze_39658),))
          if synchronous:
            sync(self)
        mem_43392 = None
        defunc_3_map_res_mem_43398 = mem_43395
        defunc_3_map_res_mem_43399 = mem_43389
        defunc_3_map_res_mem_43400 = mem_43397
      defunc_3_map_res_mem_43401 = defunc_3_map_res_mem_43398
      defunc_3_map_res_mem_43402 = defunc_3_map_res_mem_43399
      defunc_3_map_res_mem_43403 = defunc_3_map_res_mem_43400
    segred_group_sizze_39679 = self.sizes["main.segred_group_size_39678"]
    max_num_groups_44649 = self.sizes["main.segred_num_groups_39680"]
    num_groups_39681 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28661,
                                                            segred_group_sizze_39679),
                                                  sext_i32_i64(max_num_groups_44649))))
    mem_43406 = opencl_alloc(self, np.int64(4), "mem_43406")
    mainzicounter_mem_44650 = self.mainzicounter_mem_44650
    group_res_arr_mem_44652 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_39679 * num_groups_39681)),
                                           "group_res_arr_mem_44652")
    num_threads_44654 = (num_groups_39681 * segred_group_sizze_39679)
    if ((1 * (np.long(num_groups_39681) * np.long(segred_group_sizze_39679))) != 0):
      self.mainzisegred_nonseg_39686_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39679))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_28661),
                                                  np.int64(num_groups_39681),
                                                  np.int64(num_threads_44654),
                                                  defunc_3_map_res_mem_43401,
                                                  mem_43406,
                                                  mainzicounter_mem_44650,
                                                  group_res_arr_mem_44652)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_39686_var,
                                 ((np.long(num_groups_39681) * np.long(segred_group_sizze_39679)),),
                                 (np.long(segred_group_sizze_39679),))
      if synchronous:
        sync(self)
    read_res_45026 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45026, mem_43406,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_29026 = read_res_45026[0]
    mem_43406 = None
    i32_res_29031 = sext_i32_i64(defunc_2_reduce_comm_res_29026)
    bounds_invalid_upwards_29032 = slt64(i32_res_29031, np.int64(0))
    valid_29033 = not(bounds_invalid_upwards_29032)
    range_valid_c_29034 = True
    assert valid_29033, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:102:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:97:17-104:24\n   #5  bfastfinal.fut:190:5-58\n   #6  bfastfinal.fut:185:1-191:25\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_29031,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_39718 = (self.sizes["main.suff_outer_par_31"] <= m_28661)
    segmap_group_sizze_39741 = self.sizes["main.segmap_group_size_39722"]
    nest_sizze_39784 = (m_28661 * i32_res_29031)
    segred_group_sizze_39785 = self.sizes["main.segred_group_size_39762"]
    max_num_groups_44680 = self.sizes["main.segred_num_groups_39764"]
    num_groups_39786 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39784,
                                                            segred_group_sizze_39785),
                                                  sext_i32_i64(max_num_groups_44680))))
    bytes_43409 = (np.int64(4) * segmap_group_sizze_39741)
    local_memory_capacity_44751 = self.max_local_memory
    if (sle64(((bytes_43409 + srem64((np.int64(8) - srem64(bytes_43409,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43409 + srem64((np.int64(8) - srem64(bytes_43409,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44751)) and suff_outer_par_39718):
      segmap_usable_groups_39742 = sdiv_up64(m_28661, segmap_group_sizze_39741)
      num_whole_tiles_42268 = squot64(i32_res_29031, segmap_group_sizze_39741)
      residual_input_42367 = srem64(i32_res_29031, segmap_group_sizze_39741)
      cond_42368 = (residual_input_42367 == np.int64(0))
      mem_43432 = opencl_alloc(self, bytes_43309, "mem_43432")
      if ((1 * (np.long(segmap_usable_groups_39742) * np.long(segmap_group_sizze_39741))) != 0):
        self.mainzisegmap_intragroup_42248_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43409)),
                                                        cl.LocalMemory(np.long(bytes_43409)),
                                                        np.int64(N_28660),
                                                        np.int64(m_28661),
                                                        np.int64(i32_res_29031),
                                                        np.int64(num_whole_tiles_42268),
                                                        np.int64(residual_input_42367),
                                                        np.byte(cond_42368),
                                                        defunc_4_map_res_mem_43335,
                                                        defunc_3_map_res_mem_43401,
                                                        defunc_3_map_res_mem_43402,
                                                        mem_43432)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42248_var,
                                   ((np.long(segmap_usable_groups_39742) * np.long(segmap_group_sizze_39741)),),
                                   (np.long(segmap_group_sizze_39741),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43436 = mem_43432
    else:
      mem_43435 = opencl_alloc(self, bytes_43309, "mem_43435")
      if slt64((i32_res_29031 * np.int64(2)), segred_group_sizze_39785):
        segment_sizze_nonzzero_44691 = smax64(np.int64(1), i32_res_29031)
        num_threads_44692 = (num_groups_39786 * segred_group_sizze_39785)
        if ((1 * (np.long(num_groups_39786) * np.long(segred_group_sizze_39785))) != 0):
          self.mainzisegred_small_39768_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39785))),
                                                     np.int64(N_28660),
                                                     np.int64(m_28661),
                                                     np.int64(i32_res_29031),
                                                     np.int64(num_groups_39786),
                                                     np.int64(segment_sizze_nonzzero_44691),
                                                     defunc_4_map_res_mem_43335,
                                                     defunc_3_map_res_mem_43401,
                                                     defunc_3_map_res_mem_43402,
                                                     mem_43435)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_39768_var,
                                     ((np.long(num_groups_39786) * np.long(segred_group_sizze_39785)),),
                                     (np.long(segred_group_sizze_39785),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44712 = sdiv_up64(num_groups_39786,
                                             smax64(np.int64(1), m_28661))
        elements_per_thread_44713 = sdiv_up64(i32_res_29031,
                                              (segred_group_sizze_39785 * groups_per_segment_44712))
        virt_num_groups_44714 = (groups_per_segment_44712 * m_28661)
        num_threads_44715 = (num_groups_39786 * segred_group_sizze_39785)
        threads_per_segment_44716 = (groups_per_segment_44712 * segred_group_sizze_39785)
        group_res_arr_mem_44717 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_39785 * virt_num_groups_44714)),
                                               "group_res_arr_mem_44717")
        mainzicounter_mem_44719 = self.mainzicounter_mem_44719
        if ((1 * (np.long(num_groups_39786) * np.long(segred_group_sizze_39785))) != 0):
          self.mainzisegred_large_39768_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39785))),
                                                     np.int64(N_28660),
                                                     np.int64(i32_res_29031),
                                                     np.int64(num_groups_39786),
                                                     np.int64(groups_per_segment_44712),
                                                     np.int64(elements_per_thread_44713),
                                                     np.int64(virt_num_groups_44714),
                                                     np.int64(threads_per_segment_44716),
                                                     defunc_4_map_res_mem_43335,
                                                     defunc_3_map_res_mem_43401,
                                                     defunc_3_map_res_mem_43402,
                                                     mem_43435,
                                                     group_res_arr_mem_44717,
                                                     mainzicounter_mem_44719)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_39768_var,
                                     ((np.long(num_groups_39786) * np.long(segred_group_sizze_39785)),),
                                     (np.long(segred_group_sizze_39785),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43436 = mem_43435
    iota32_arg_29056 = (N_28660 - i32_res_28670)
    bounds_invalid_upwards_29057 = slt64(iota32_arg_29056, np.int64(0))
    valid_29058 = not(bounds_invalid_upwards_29057)
    range_valid_c_29059 = True
    assert valid_29058, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:110:22-35\n   #3  bfastfinal.fut:190:5-58\n   #4  bfastfinal.fut:185:1-191:25\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_29056,
                                                                                                                                                                                                                                      " is invalid."))
    x_29061 = (np.int32(1) + n_28664)
    i_29062 = (n_28664 - np.int32(1))
    i_29063 = sext_i32_i64(i_29062)
    x_29064 = sle64(np.int64(0), i_29063)
    y_29065 = slt64(i_29063, N_28660)
    bounds_check_29066 = (x_29064 and y_29065)
    index_certs_29067 = True
    assert bounds_check_29066, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:108:64-84\n   #1  bfastfinal.fut:106:15-110:36\n   #2  bfastfinal.fut:190:5-58\n   #3  bfastfinal.fut:185:1-191:25\n" % ("Index [",
                                                                                                                                                                                                                 i_29063,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28660,
                                                                                                                                                                                                                 "]."))
    read_res_45028 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45028, mappingindices_mem_42537,
                    device_offset=(np.long(i_29063) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_29068 = read_res_45028[0]
    i32_res_29069 = sitofp_i32_f32(r32_arg_29068)
    range_valid_c_29070 = True
    assert valid_29058, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:120:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:190:5-58\n   #6  bfastfinal.fut:185:1-191:25\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_29056,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_39863 = self.sizes["main.segmap_group_size_39846"]
    segmap_usable_groups_39864 = sdiv_up64(iota32_arg_29056,
                                           segmap_group_sizze_39863)
    bytes_43438 = (np.int64(4) * iota32_arg_29056)
    mem_43439 = opencl_alloc(self, bytes_43438, "mem_43439")
    mem_43441 = opencl_alloc(self, bytes_43438, "mem_43441")
    if ((1 * (np.long(segmap_usable_groups_39864) * np.long(segmap_group_sizze_39863))) != 0):
      self.mainzisegmap_39844_var.set_args(self.global_failure,
                                           np.float32(lam_28667),
                                           np.int64(iota32_arg_29056),
                                           np.int32(x_29061),
                                           np.float32(i32_res_29069),
                                           mappingindices_mem_42537, mem_43439,
                                           mem_43441)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39844_var,
                                 ((np.long(segmap_usable_groups_39864) * np.long(segmap_group_sizze_39863)),),
                                 (np.long(segmap_group_sizze_39863),))
      if synchronous:
        sync(self)
    mem_43439 = None
    fits_40104 = sle64(iota32_arg_29056, max_group_sizze_38069)
    suff_intra_par_40102 = (self.sizes["main.suff_intra_par_34"] <= iota32_arg_29056)
    intra_suff_and_fits_40105 = (suff_intra_par_40102 and fits_40104)
    segmap_group_sizze_40378 = self.sizes["main.segmap_group_size_40358"]
    max_num_groups_44757 = self.sizes["main.segmap_num_groups_40360"]
    num_groups_40379 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28661,
                                                            segmap_group_sizze_40378),
                                                  sext_i32_i64(max_num_groups_44757))))
    nest_sizze_40400 = (m_28661 * iota32_arg_29056)
    segscan_group_sizze_40401 = self.sizes["main.segscan_group_size_40317"]
    max_num_groups_44758 = self.sizes["main.segscan_num_groups_40319"]
    num_groups_40402 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40400,
                                                            segscan_group_sizze_40401),
                                                  sext_i32_i64(max_num_groups_44758))))
    segred_group_sizze_40439 = self.sizes["main.segred_group_size_40263"]
    max_num_groups_44759 = self.sizes["main.segred_num_groups_40265"]
    num_groups_40440 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40400,
                                                            segred_group_sizze_40439),
                                                  sext_i32_i64(max_num_groups_44759))))
    segmap_group_sizze_40478 = self.sizes["main.segmap_group_size_40216"]
    bytes_43457 = (np.int64(4) * nest_sizze_40400)
    local_memory_capacity_44952 = self.max_local_memory
    if (sle64(((((bytes_43438 + srem64((np.int64(8) - srem64(bytes_43438,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_29056) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_29056),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_29056) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29056),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_29056) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29056),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44952)) and intra_suff_and_fits_40105):
      mem_43448 = opencl_alloc(self, bytes_43309, "mem_43448")
      mem_43450 = opencl_alloc(self, bytes_43309, "mem_43450")
      if ((1 * (np.long(m_28661) * np.long(iota32_arg_29056))) != 0):
        self.mainzisegmap_intragroup_39889_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29056))),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29056))),
                                                        cl.LocalMemory(np.long((np.int32(1) * iota32_arg_29056))),
                                                        cl.LocalMemory(np.long(bytes_43438)),
                                                        np.int64(N_28660),
                                                        np.int32(n_28664),
                                                        np.int64(iota32_arg_29056),
                                                        defunc_4_map_res_mem_43334,
                                                        defunc_4_map_res_mem_43335,
                                                        defunc_4_map_res_mem_43336,
                                                        defunc_3_map_res_mem_43401,
                                                        defunc_3_map_res_mem_43402,
                                                        defunc_3_map_res_mem_43403,
                                                        defunc_0_f_res_mem_43436,
                                                        mem_43441, mem_43448,
                                                        mem_43450)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39889_var,
                                   ((np.long(m_28661) * np.long(iota32_arg_29056)),),
                                   (np.long(iota32_arg_29056),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43472 = mem_43448
      defunc_0_f_res_mem_43473 = mem_43450
    else:
      mem_43453 = opencl_alloc(self, bytes_43309, "mem_43453")
      mem_43455 = opencl_alloc(self, bytes_43309, "mem_43455")
      if ((1 * (np.long(num_groups_40379) * np.long(segmap_group_sizze_40378))) != 0):
        self.mainzisegmap_40356_var.set_args(self.global_failure,
                                             np.int64(m_28661),
                                             np.int64(num_groups_40379),
                                             defunc_4_map_res_mem_43334,
                                             defunc_3_map_res_mem_43402,
                                             defunc_3_map_res_mem_43403,
                                             mem_43453, mem_43455)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40356_var,
                                   ((np.long(num_groups_40379) * np.long(segmap_group_sizze_40378)),),
                                   (np.long(segmap_group_sizze_40378),))
        if synchronous:
          sync(self)
      mem_43459 = opencl_alloc(self, bytes_43457, "mem_43459")
      if slt64(np.int64(0), (m_28661 * iota32_arg_29056)):
        stage1_max_num_groups_44793 = self.max_group_size
        stage1_num_groups_44794 = smin64(stage1_max_num_groups_44793,
                                         num_groups_40402)
        num_threads_44795 = sext_i64_i32((stage1_num_groups_44794 * segscan_group_sizze_40401))
        if ((1 * (np.long(stage1_num_groups_44794) * np.long(segscan_group_sizze_40401))) != 0):
          self.mainziscan_stage1_40323_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * segscan_group_sizze_40401)))),
                                                    np.int64(N_28660),
                                                    np.int64(m_28661),
                                                    np.int64(iota32_arg_29056),
                                                    np.int32(num_threads_44795),
                                                    defunc_4_map_res_mem_43335,
                                                    defunc_3_map_res_mem_43401,
                                                    defunc_3_map_res_mem_43402,
                                                    defunc_0_f_res_mem_43436,
                                                    mem_43455, mem_43459)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_40323_var,
                                     ((np.long(stage1_num_groups_44794) * np.long(segscan_group_sizze_40401)),),
                                     (np.long(segscan_group_sizze_40401),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44794))) != 0):
          self.mainziscan_stage2_40323_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * stage1_num_groups_44794)))),
                                                    np.int64(m_28661),
                                                    np.int64(iota32_arg_29056),
                                                    np.int64(stage1_num_groups_44794),
                                                    np.int32(num_threads_44795),
                                                    mem_43459)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_40323_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44794)),),
                                     (np.long(stage1_num_groups_44794),))
          if synchronous:
            sync(self)
        required_groups_44837 = sext_i64_i32(sdiv_up64((m_28661 * iota32_arg_29056),
                                                       segscan_group_sizze_40401))
        if ((1 * (np.long(num_groups_40402) * np.long(segscan_group_sizze_40401))) != 0):
          self.mainziscan_stage3_40323_var.set_args(self.global_failure,
                                                    np.int64(m_28661),
                                                    np.int64(iota32_arg_29056),
                                                    np.int64(num_groups_40402),
                                                    np.int32(num_threads_44795),
                                                    np.int32(required_groups_44837),
                                                    mem_43459)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_40323_var,
                                     ((np.long(num_groups_40402) * np.long(segscan_group_sizze_40401)),),
                                     (np.long(segscan_group_sizze_40401),))
          if synchronous:
            sync(self)
      mem_43462 = opencl_alloc(self, m_28661, "mem_43462")
      mem_43464 = opencl_alloc(self, bytes_43309, "mem_43464")
      mem_43466 = opencl_alloc(self, bytes_43309, "mem_43466")
      if slt64((iota32_arg_29056 * np.int64(2)), segred_group_sizze_40439):
        segment_sizze_nonzzero_44849 = smax64(np.int64(1), iota32_arg_29056)
        num_threads_44850 = (num_groups_40440 * segred_group_sizze_40439)
        if ((1 * (np.long(num_groups_40440) * np.long(segred_group_sizze_40439))) != 0):
          self.mainzisegred_small_40269_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40439))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40439))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_40439))),
                                                     np.int64(m_28661),
                                                     np.int64(iota32_arg_29056),
                                                     np.int64(num_groups_40440),
                                                     np.int64(segment_sizze_nonzzero_44849),
                                                     mem_43441, mem_43453,
                                                     mem_43455, mem_43459,
                                                     mem_43462, mem_43464,
                                                     mem_43466)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_40269_var,
                                     ((np.long(num_groups_40440) * np.long(segred_group_sizze_40439)),),
                                     (np.long(segred_group_sizze_40439),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44885 = sdiv_up64(num_groups_40440,
                                             smax64(np.int64(1), m_28661))
        elements_per_thread_44886 = sdiv_up64(iota32_arg_29056,
                                              (segred_group_sizze_40439 * groups_per_segment_44885))
        virt_num_groups_44887 = (groups_per_segment_44885 * m_28661)
        num_threads_44888 = (num_groups_40440 * segred_group_sizze_40439)
        threads_per_segment_44889 = (groups_per_segment_44885 * segred_group_sizze_40439)
        group_res_arr_mem_44890 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_40439 * virt_num_groups_44887)),
                                               "group_res_arr_mem_44890")
        group_res_arr_mem_44892 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40439 * virt_num_groups_44887)),
                                               "group_res_arr_mem_44892")
        group_res_arr_mem_44894 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40439 * virt_num_groups_44887)),
                                               "group_res_arr_mem_44894")
        mainzicounter_mem_44896 = self.mainzicounter_mem_44896
        if ((1 * (np.long(num_groups_40440) * np.long(segred_group_sizze_40439))) != 0):
          self.mainzisegred_large_40269_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40439))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40439))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_40439))),
                                                     np.int64(iota32_arg_29056),
                                                     np.int64(num_groups_40440),
                                                     np.int64(groups_per_segment_44885),
                                                     np.int64(elements_per_thread_44886),
                                                     np.int64(virt_num_groups_44887),
                                                     mem_43441, mem_43453,
                                                     mem_43455, mem_43459,
                                                     mem_43462, mem_43464,
                                                     mem_43466,
                                                     group_res_arr_mem_44890,
                                                     group_res_arr_mem_44892,
                                                     group_res_arr_mem_44894,
                                                     mainzicounter_mem_44896)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_40269_var,
                                     ((np.long(num_groups_40440) * np.long(segred_group_sizze_40439)),),
                                     (np.long(segred_group_sizze_40439),))
          if synchronous:
            sync(self)
      mem_43453 = None
      mem_43459 = None
      segmap_usable_groups_40479 = sdiv_up64(m_28661, segmap_group_sizze_40478)
      mem_43469 = opencl_alloc(self, bytes_43309, "mem_43469")
      mem_43471 = opencl_alloc(self, bytes_43309, "mem_43471")
      if ((1 * (np.long(segmap_usable_groups_40479) * np.long(segmap_group_sizze_40478))) != 0):
        self.mainzisegmap_40214_var.set_args(self.global_failure,
                                             np.int64(N_28660),
                                             np.int64(m_28661),
                                             np.int32(n_28664),
                                             defunc_4_map_res_mem_43336,
                                             defunc_3_map_res_mem_43402,
                                             mem_43455, mem_43462, mem_43464,
                                             mem_43466, mem_43469, mem_43471)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40214_var,
                                   ((np.long(segmap_usable_groups_40479) * np.long(segmap_group_sizze_40478)),),
                                   (np.long(segmap_group_sizze_40478),))
        if synchronous:
          sync(self)
      mem_43455 = None
      mem_43462 = None
      mem_43464 = None
      mem_43466 = None
      defunc_0_f_res_mem_43472 = mem_43469
      defunc_0_f_res_mem_43473 = mem_43471
    defunc_4_map_res_mem_43335 = None
    defunc_4_map_res_mem_43336 = None
    defunc_3_map_res_mem_43401 = None
    defunc_3_map_res_mem_43402 = None
    defunc_3_map_res_mem_43403 = None
    defunc_0_f_res_mem_43436 = None
    mem_43441 = None
    out_mem_43833 = defunc_4_map_res_mem_43334
    out_mem_43834 = defunc_0_f_res_mem_43472
    out_mem_43835 = defunc_0_f_res_mem_43473
    return (out_mem_43833, out_mem_43834, out_mem_43835)
  def futhark_mainDetailed(self, mappingindices_mem_42537, images_mem_42538,
                           N_27370, m_27371, trend_27372, k_27373, n_27374,
                           freq_27375, hfrac_27376, lam_27377):
    i32_res_27380 = sext_i32_i64(n_27374)
    x_27381 = (np.int32(2) * k_27373)
    k2p2_27382 = (np.int32(2) + x_27381)
    cond_27383 = slt32(np.int32(0), trend_27372)
    if cond_27383:
      k2p2zq_27384 = k2p2_27382
    else:
      k2p2zq_f_res_27385 = (k2p2_27382 - np.int32(1))
      k2p2zq_27384 = k2p2zq_f_res_27385
    i32_res_27386 = sext_i32_i64(k2p2zq_27384)
    binop_x_42541 = (N_27370 * i32_res_27386)
    bytes_42540 = (np.int64(4) * binop_x_42541)
    if cond_27383:
      bounds_invalid_upwards_27388 = slt64(i32_res_27386, np.int64(0))
      valid_27389 = not(bounds_invalid_upwards_27388)
      range_valid_c_27390 = True
      assert valid_27389, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27386,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_29493 = self.sizes["mainDetailed.segmap_group_size_29423"]
      segmap_usable_groups_29494 = sdiv_up64(binop_x_42541,
                                             segmap_group_sizze_29493)
      mem_42542 = opencl_alloc(self, bytes_42540, "mem_42542")
      if ((1 * (np.long(segmap_usable_groups_29494) * np.long(segmap_group_sizze_29493))) != 0):
        self.mainDetailedzisegmap_29420_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.float32(freq_27375),
                                                     np.int64(i32_res_27386),
                                                     mappingindices_mem_42537,
                                                     mem_42542)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29420_var,
                                   ((np.long(segmap_usable_groups_29494) * np.long(segmap_group_sizze_29493)),),
                                   (np.long(segmap_group_sizze_29493),))
        if synchronous:
          sync(self)
      binop_p_mem_42547 = mem_42542
    else:
      bounds_invalid_upwards_27414 = slt64(i32_res_27386, np.int64(0))
      valid_27415 = not(bounds_invalid_upwards_27414)
      range_valid_c_27416 = True
      assert valid_27415, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27386,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_29667 = self.sizes["mainDetailed.segmap_group_size_29601"]
      segmap_usable_groups_29668 = sdiv_up64(binop_x_42541,
                                             segmap_group_sizze_29667)
      mem_42546 = opencl_alloc(self, bytes_42540, "mem_42546")
      if ((1 * (np.long(segmap_usable_groups_29668) * np.long(segmap_group_sizze_29667))) != 0):
        self.mainDetailedzisegmap_29598_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.float32(freq_27375),
                                                     np.int64(i32_res_27386),
                                                     mappingindices_mem_42537,
                                                     mem_42546)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29598_var,
                                   ((np.long(segmap_usable_groups_29668) * np.long(segmap_group_sizze_29667)),),
                                   (np.long(segmap_group_sizze_29667),))
        if synchronous:
          sync(self)
      binop_p_mem_42547 = mem_42546
    x_27439 = (N_27370 * N_27370)
    y_27440 = (np.int64(2) * N_27370)
    x_27441 = (x_27439 + y_27440)
    x_27442 = (np.int64(1) + x_27441)
    y_27443 = (np.int64(1) + N_27370)
    zzero_27444 = (y_27443 == np.int64(0))
    nonzzero_27445 = not(zzero_27444)
    nonzzero_cert_27446 = True
    assert nonzzero_27445, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("division by zero",))
    x_27447 = sdiv64(x_27442, y_27443)
    x_27448 = (x_27447 - N_27370)
    binop_p_27449 = (x_27448 - np.int64(1))
    defunc_0_f_res_27450 = sext_i64_i32(binop_p_27449)
    i32_res_27451 = sitofp_i32_f32(defunc_0_f_res_27450)
    segmap_group_sizze_29750 = self.sizes["mainDetailed.segmap_group_size_29729"]
    segmap_usable_groups_29751 = sdiv_up64(binop_x_42541,
                                           segmap_group_sizze_29750)
    mem_42550 = opencl_alloc(self, bytes_42540, "mem_42550")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42550, np.int64(0),
                                                binop_p_mem_42547, np.int64(0),
                                                np.int64(1), N_27370,
                                                i32_res_27386)
    mem_42554 = opencl_alloc(self, bytes_42540, "mem_42554")
    if ((1 * (np.long(segmap_usable_groups_29751) * np.long(segmap_group_sizze_29750))) != 0):
      self.mainDetailedzisegmap_29726_var.set_args(self.global_failure,
                                                   np.int64(N_27370),
                                                   np.int64(i32_res_27386),
                                                   np.float32(i32_res_27451),
                                                   mem_42550, mem_42554)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_29726_var,
                                 ((np.long(segmap_usable_groups_29751) * np.long(segmap_group_sizze_29750)),),
                                 (np.long(segmap_group_sizze_29750),))
      if synchronous:
        sync(self)
    eq_x_y_27459 = (np.int64(0) == i32_res_27386)
    p_and_eq_x_y_27460 = (cond_27383 and eq_x_y_27459)
    not_p_27461 = not(cond_27383)
    p_and_eq_x_y_27462 = (eq_x_y_27459 and not_p_27461)
    empty_slice_27463 = (p_and_eq_x_y_27460 or p_and_eq_x_y_27462)
    m_27464 = (i32_res_27386 - np.int64(1))
    zzero_leq_i_p_m_t_s_27465 = sle64(np.int64(0), m_27464)
    i_p_m_t_s_leq_w_27466 = slt64(m_27464, i32_res_27386)
    i_lte_j_27467 = sle64(np.int64(0), i32_res_27386)
    y_27468 = (zzero_leq_i_p_m_t_s_27465 and i_p_m_t_s_leq_w_27466)
    y_27469 = (i_lte_j_27467 and y_27468)
    ok_or_empty_27470 = (empty_slice_27463 or y_27469)
    empty_slice_27471 = (i32_res_27380 == np.int64(0))
    m_27472 = (i32_res_27380 - np.int64(1))
    zzero_leq_i_p_m_t_s_27473 = sle64(np.int64(0), m_27472)
    i_p_m_t_s_leq_w_27474 = slt64(m_27472, N_27370)
    i_lte_j_27475 = sle64(np.int64(0), i32_res_27380)
    y_27476 = (zzero_leq_i_p_m_t_s_27473 and i_p_m_t_s_leq_w_27474)
    y_27477 = (i_lte_j_27475 and y_27476)
    ok_or_empty_27478 = (empty_slice_27471 or y_27477)
    index_ok_27479 = (ok_or_empty_27470 and ok_or_empty_27478)
    index_certs_27480 = True
    assert index_ok_27479, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27380,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27386,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27370,
                                                                                                                                                                               "]."))
    empty_slice_27482 = (i32_res_27386 == np.int64(0))
    ok_or_empty_27483 = (y_27469 or empty_slice_27482)
    index_ok_27484 = (ok_or_empty_27478 and ok_or_empty_27483)
    index_certs_27485 = True
    assert index_ok_27484, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_27380,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27370,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27386,
                                                                                                                                                                               "]."))
    empty_slice_27487 = (m_27371 == np.int64(0))
    m_27488 = (m_27371 - np.int64(1))
    zzero_leq_i_p_m_t_s_27489 = sle64(np.int64(0), m_27488)
    i_p_m_t_s_leq_w_27490 = slt64(m_27488, m_27371)
    i_lte_j_27491 = sle64(np.int64(0), m_27371)
    y_27492 = (zzero_leq_i_p_m_t_s_27489 and i_p_m_t_s_leq_w_27490)
    y_27493 = (i_lte_j_27491 and y_27492)
    ok_or_empty_27494 = (empty_slice_27487 or y_27493)
    index_ok_27495 = (ok_or_empty_27478 and ok_or_empty_27494)
    index_certs_27496 = True
    assert index_ok_27495, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27380,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27371,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27370,
                                                                                                                                                                               "]."))
    suff_outer_par_29757 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_27371)
    segmap_group_sizze_29783 = self.sizes["mainDetailed.segmap_group_size_29761"]
    max_num_groups_43863 = self.sizes["mainDetailed.segmap_num_groups_29763"]
    num_groups_29784 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27371,
                                                            segmap_group_sizze_29783),
                                                  sext_i32_i64(max_num_groups_43863))))
    nest_sizze_29959 = (m_27371 * i32_res_27386)
    segmap_group_sizze_29960 = self.sizes["mainDetailed.segmap_group_size_29808"]
    max_num_groups_43864 = self.sizes["mainDetailed.segmap_num_groups_29810"]
    num_groups_29961 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_29959,
                                                            segmap_group_sizze_29960),
                                                  sext_i32_i64(max_num_groups_43864))))
    suff_outer_par_29965 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_29959)
    y_29989 = (i32_res_27386 * i32_res_27386)
    comparatee_29990 = (m_27371 * y_29989)
    suff_outer_par_29991 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_29990)
    nest_sizze_30011 = (i32_res_27380 * comparatee_29990)
    segred_group_sizze_30012 = self.sizes["mainDetailed.segred_group_size_29868"]
    max_num_groups_43865 = self.sizes["mainDetailed.segred_num_groups_29870"]
    num_groups_30013 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30011,
                                                            segred_group_sizze_30012),
                                                  sext_i32_i64(max_num_groups_43865))))
    Tx_40716 = self.sizes["mainDetailed.Tx_40714"]
    Ty_40717 = self.sizes["mainDetailed.Ty_40715"]
    Ty_40718 = smin64(i32_res_27386, Ty_40717)
    Tx_40719 = smin64(i32_res_27386, Tx_40716)
    gridDim_zz_40722 = sdiv_up64(m_27371, np.int64(30))
    group_sizze_tile3d_40725 = (Ty_40718 * Tx_40719)
    binop_x_42556 = (N_27370 * m_27371)
    bytes_42555 = (np.int64(4) * binop_x_42556)
    bytes_42600 = (np.int64(4) * comparatee_29990)
    bytes_42559 = (np.int64(4) * y_29989)
    binop_x_42703 = (i32_res_27386 * nest_sizze_29959)
    bytes_42701 = (np.int64(4) * binop_x_42703)
    bytes_42605 = (np.int64(4) * i32_res_27386)
    binop_x_42634 = (np.int64(30) * group_sizze_tile3d_40725)
    bytes_42632 = (np.int64(4) * binop_x_42634)
    binop_x_43604 = (np.int64(4) * Ty_40718)
    binop_x_43605 = (Tx_40719 * binop_x_43604)
    sizze_43606 = (np.int64(30) * binop_x_43605)
    num_threads_43684 = (segmap_group_sizze_29783 * num_groups_29784)
    total_sizze_43685 = (bytes_42559 * num_threads_43684)
    num_threads_43686 = (segmap_group_sizze_29960 * num_groups_29961)
    total_sizze_43687 = (bytes_42605 * num_threads_43686)
    local_memory_capacity_43987 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_43987)) and suff_outer_par_29757):
      mem_42557 = opencl_alloc(self, bytes_42555, "mem_42557")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42557, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_27370, m_27371)
      mem_42603 = opencl_alloc(self, bytes_42600, "mem_42603")
      mem_42561 = opencl_alloc(self, total_sizze_43685, "mem_42561")
      if ((1 * (np.long(num_groups_29784) * np.long(segmap_group_sizze_29783))) != 0):
        self.mainDetailedzisegmap_29759_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.int64(m_27371),
                                                     np.int32(n_27374),
                                                     np.int32(k2p2zq_27384),
                                                     np.int64(i32_res_27386),
                                                     np.int64(num_groups_29784),
                                                     binop_p_mem_42547,
                                                     mem_42554, mem_42557,
                                                     mem_42561, mem_42603)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29759_var,
                                   ((np.long(num_groups_29784) * np.long(segmap_group_sizze_29783)),),
                                   (np.long(segmap_group_sizze_29783),))
        if synchronous:
          sync(self)
      mem_42557 = None
      mem_42561 = None
      mem_42704 = opencl_alloc(self, bytes_42701, "mem_42704")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42704, np.int64(0),
                                                  mem_42603, np.int64(0),
                                                  np.int64(1), m_27371,
                                                  (i32_res_27386 * i32_res_27386))
      mem_42603 = None
      defunc_3_map_res_mem_42706 = mem_42704
    else:
      local_memory_capacity_43986 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_43986)) and suff_outer_par_29965):
        mem_42622 = opencl_alloc(self, bytes_42701, "mem_42622")
        mem_42606 = opencl_alloc(self, total_sizze_43687, "mem_42606")
        if ((1 * (np.long(num_groups_29961) * np.long(segmap_group_sizze_29960))) != 0):
          self.mainDetailedzisegmap_29805_var.set_args(self.global_failure,
                                                       np.int64(N_27370),
                                                       np.int64(m_27371),
                                                       np.int32(n_27374),
                                                       np.int32(k2p2zq_27384),
                                                       np.int64(i32_res_27386),
                                                       np.int64(num_groups_29961),
                                                       images_mem_42538,
                                                       mem_42550, mem_42554,
                                                       mem_42606, mem_42622)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_29805_var,
                                     ((np.long(num_groups_29961) * np.long(segmap_group_sizze_29960)),),
                                     (np.long(segmap_group_sizze_29960),))
          if synchronous:
            sync(self)
        mem_42606 = None
        mem_42698 = opencl_alloc(self, bytes_42701, "mem_42698")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_42698, np.int64(0),
                                                    mem_42622, np.int64(0),
                                                    np.int64(1),
                                                    (m_27371 * i32_res_27386),
                                                    i32_res_27386)
        mem_42622 = None
        defunc_3_map_res_mem_42700 = mem_42698
      else:
        local_memory_capacity_43985 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_43985)) and suff_outer_par_29991):
          mem_42625 = opencl_alloc(self, bytes_42555, "mem_42625")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42625, np.int64(0),
                                                      images_mem_42538,
                                                      np.int64(0), np.int64(1),
                                                      N_27370, m_27371)
          gridDim_x_40720 = sdiv_up64(i32_res_27386, Tx_40719)
          gridDim_y_40721 = sdiv_up64(i32_res_27386, Ty_40718)
          binop_x_40723 = (gridDim_y_40721 * gridDim_zz_40722)
          grid_sizze_tile3d_40724 = (gridDim_x_40720 * binop_x_40723)
          count_shmem_40726 = sdiv_up64(np.int64(30), group_sizze_tile3d_40725)
          mem_42685 = opencl_alloc(self, bytes_42701, "mem_42685")
          if ((1 * (np.long(grid_sizze_tile3d_40724) * np.long(group_sizze_tile3d_40725))) != 0):
            self.mainDetailedzisegmap_intragroup_40730_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_27371),
                                                                    np.int32(n_27374),
                                                                    np.int64(i32_res_27386),
                                                                    np.int64(Ty_40718),
                                                                    np.int64(Tx_40719),
                                                                    np.int64(gridDim_x_40720),
                                                                    np.int64(gridDim_y_40721),
                                                                    np.int64(group_sizze_tile3d_40725),
                                                                    np.int64(count_shmem_40726),
                                                                    mem_42550,
                                                                    mem_42554,
                                                                    mem_42625,
                                                                    mem_42685)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_40730_var,
                                       ((np.long(grid_sizze_tile3d_40724) * np.long(group_sizze_tile3d_40725)),),
                                       (np.long(group_sizze_tile3d_40725),))
            if synchronous:
              sync(self)
          mem_42625 = None
          defunc_3_map_res_mem_42694 = mem_42685
        else:
          mem_42688 = opencl_alloc(self, bytes_42540, "mem_42688")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42688, np.int64(0),
                                                      mem_42554, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27386, N_27370)
          mem_42693 = opencl_alloc(self, bytes_42701, "mem_42693")
          if slt64((i32_res_27380 * np.int64(2)), segred_group_sizze_30012):
            segment_sizze_nonzzero_43925 = smax64(np.int64(1), i32_res_27380)
            num_threads_43926 = (num_groups_30013 * segred_group_sizze_30012)
            if ((1 * (np.long(num_groups_30013) * np.long(segred_group_sizze_30012))) != 0):
              self.mainDetailedzisegred_small_29874_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30012))),
                                                                 np.int64(N_27370),
                                                                 np.int64(m_27371),
                                                                 np.int64(i32_res_27380),
                                                                 np.int64(i32_res_27386),
                                                                 np.int64(num_groups_30013),
                                                                 np.int64(segment_sizze_nonzzero_43925),
                                                                 images_mem_42538,
                                                                 binop_p_mem_42547,
                                                                 mem_42688,
                                                                 mem_42693)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_29874_var,
                                         ((np.long(num_groups_30013) * np.long(segred_group_sizze_30012)),),
                                         (np.long(segred_group_sizze_30012),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_43946 = sdiv_up64(num_groups_30013,
                                                 smax64(np.int64(1),
                                                        ((m_27371 * i32_res_27386) * i32_res_27386)))
            elements_per_thread_43947 = sdiv_up64(i32_res_27380,
                                                  (segred_group_sizze_30012 * groups_per_segment_43946))
            virt_num_groups_43948 = (groups_per_segment_43946 * ((m_27371 * i32_res_27386) * i32_res_27386))
            num_threads_43949 = (num_groups_30013 * segred_group_sizze_30012)
            threads_per_segment_43950 = (groups_per_segment_43946 * segred_group_sizze_30012)
            group_res_arr_mem_43951 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_30012 * virt_num_groups_43948)),
                                                   "group_res_arr_mem_43951")
            mainDetailedzicounter_mem_43953 = self.mainDetailedzicounter_mem_43953
            if ((1 * (np.long(num_groups_30013) * np.long(segred_group_sizze_30012))) != 0):
              self.mainDetailedzisegred_large_29874_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30012))),
                                                                 np.int64(N_27370),
                                                                 np.int64(i32_res_27380),
                                                                 np.int64(i32_res_27386),
                                                                 np.int64(num_groups_30013),
                                                                 np.int64(groups_per_segment_43946),
                                                                 np.int64(elements_per_thread_43947),
                                                                 np.int64(virt_num_groups_43948),
                                                                 np.int64(threads_per_segment_43950),
                                                                 images_mem_42538,
                                                                 binop_p_mem_42547,
                                                                 mem_42688,
                                                                 mem_42693,
                                                                 group_res_arr_mem_43951,
                                                                 mainDetailedzicounter_mem_43953)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_29874_var,
                                         ((np.long(num_groups_30013) * np.long(segred_group_sizze_30012)),),
                                         (np.long(segred_group_sizze_30012),))
              if synchronous:
                sync(self)
          mem_42688 = None
          defunc_3_map_res_mem_42694 = mem_42693
        defunc_3_map_res_mem_42700 = defunc_3_map_res_mem_42694
      defunc_3_map_res_mem_42706 = defunc_3_map_res_mem_42700
    m_27517 = (np.int32(2) * k2p2zq_27384)
    nm_27518 = (k2p2zq_27384 * m_27517)
    i32_res_27519 = sext_i32_i64(nm_27518)
    bounds_invalid_upwards_27520 = slt64(i32_res_27519, np.int64(0))
    valid_27521 = not(bounds_invalid_upwards_27520)
    range_valid_c_27522 = True
    assert valid_27521, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_27519,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_27527 = (m_27517 == np.int32(0))
    nonzzero_27528 = not(zzero_27527)
    nonzzero_cert_27529 = True
    assert nonzzero_27528, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("division by zero",))
    loop_nonempty_27530 = slt32(np.int32(0), k2p2zq_27384)
    loop_not_taken_27531 = not(loop_nonempty_27530)
    protect_assert_disj_27532 = (nonzzero_27528 or loop_not_taken_27531)
    nonzzero_cert_27533 = True
    assert protect_assert_disj_27532, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n" % ("division by zero",))
    i32_res_27534 = sext_i32_i64(m_27517)
    x_27535 = (i32_res_27386 * i32_res_27534)
    dim_ok_27536 = (x_27535 == i32_res_27519)
    dim_ok_cert_27537 = True
    assert dim_ok_27536, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("new shape has different number of elements than old shape",))
    j_m_i_27538 = (i32_res_27534 - i32_res_27386)
    empty_slice_27539 = (j_m_i_27538 == np.int64(0))
    m_27540 = (j_m_i_27538 - np.int64(1))
    i_p_m_t_s_27541 = (i32_res_27386 + m_27540)
    zzero_leq_i_p_m_t_s_27542 = sle64(np.int64(0), i_p_m_t_s_27541)
    i_p_m_t_s_leq_w_27543 = slt64(i_p_m_t_s_27541, i32_res_27534)
    i_lte_j_27544 = sle64(i32_res_27386, i32_res_27534)
    y_27545 = (i_lte_j_27467 and i_p_m_t_s_leq_w_27543)
    y_27546 = (zzero_leq_i_p_m_t_s_27542 and y_27545)
    y_27547 = (i_lte_j_27544 and y_27546)
    forwards_ok_27548 = (i_lte_j_27467 and y_27547)
    ok_or_empty_27549 = (empty_slice_27539 or forwards_ok_27548)
    index_ok_27550 = (ok_or_empty_27483 and ok_or_empty_27549)
    index_certs_27551 = True
    assert index_ok_27550, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:175:3-56\n   #3  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27386,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27386,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27534,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27386,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_27534,
                                                                                                                                                                                                                   "]."))
    dim_match_27552 = (i32_res_27386 == j_m_i_27538)
    empty_or_match_cert_27553 = True
    assert dim_match_27552, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:175:3-56\n   #3  bfastfinal.fut:171:1-175:56\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_27386,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_27538,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_27386,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_27386,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_30227 = self.max_group_size
    fits_30228 = sle64(i32_res_27519, max_group_sizze_30227)
    suff_intra_par_30226 = (self.sizes["mainDetailed.suff_intra_par_11"] <= i32_res_27519)
    intra_suff_and_fits_30229 = (suff_intra_par_30226 and fits_30228)
    nest_sizze_30713 = (m_27371 * i32_res_27519)
    segmap_group_sizze_30714 = self.sizes["mainDetailed.segmap_group_size_30673"]
    suff_intra_par_30741 = (self.sizes["mainDetailed.suff_intra_par_13"] <= i32_res_27519)
    intra_suff_and_fits_30742 = (fits_30228 and suff_intra_par_30741)
    segmap_group_sizze_30778 = self.sizes["mainDetailed.segmap_group_size_30579"]
    segmap_group_sizze_30794 = self.sizes["mainDetailed.segmap_group_size_30512"]
    segmap_group_sizze_30828 = self.sizes["mainDetailed.segmap_group_size_30458"]
    y_30838 = (i32_res_27386 * j_m_i_27538)
    nest_sizze_30839 = (m_27371 * y_30838)
    segmap_group_sizze_30840 = self.sizes["mainDetailed.segmap_group_size_30293"]
    segmap_usable_groups_30779 = sdiv_up_safe64(m_27371,
                                                segmap_group_sizze_30778)
    segmap_usable_groups_30795 = sdiv_up_safe64(nest_sizze_30713,
                                                segmap_group_sizze_30794)
    segmap_usable_groups_30829 = sdiv_up_safe64(nest_sizze_30713,
                                                segmap_group_sizze_30828)
    bytes_42709 = (np.int64(4) * i32_res_27519)
    bytes_42732 = (np.int64(4) * nest_sizze_30713)
    binop_x_42783 = (j_m_i_27538 * nest_sizze_29959)
    bytes_42781 = (np.int64(4) * binop_x_42783)
    local_memory_capacity_43988 = self.max_local_memory
    if intra_suff_and_fits_30229:
      defunc_3_map_res_ixfn_42785 = i32_res_27386
    else:
      defunc_3_map_res_ixfn_42785 = j_m_i_27538
    local_memory_capacity_44051 = self.max_local_memory
    if (sle64(((bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44051)) and intra_suff_and_fits_30229):
      mem_42730 = opencl_alloc(self, bytes_42701, "mem_42730")
      if ((1 * (np.long(m_27371) * np.long(i32_res_27519))) != 0):
        self.mainDetailedzisegmap_intragroup_30109_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_42709)),
                                                                cl.LocalMemory(np.long(bytes_42709)),
                                                                np.int32(k2p2zq_27384),
                                                                np.int64(i32_res_27386),
                                                                np.int32(m_27517),
                                                                np.int64(i32_res_27519),
                                                                np.int64(i32_res_27534),
                                                                defunc_3_map_res_mem_42706,
                                                                mem_42730)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_30109_var,
                                   ((np.long(m_27371) * np.long(i32_res_27519)),),
                                   (np.long(i32_res_27519),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_42786 = mem_42730
    else:
      segmap_usable_groups_30715 = sdiv_up64(nest_sizze_30713,
                                             segmap_group_sizze_30714)
      mem_42734 = opencl_alloc(self, bytes_42732, "mem_42734")
      if ((1 * (np.long(segmap_usable_groups_30715) * np.long(segmap_group_sizze_30714))) != 0):
        self.mainDetailedzisegmap_30670_var.set_args(self.global_failure,
                                                     np.int64(m_27371),
                                                     np.int32(k2p2zq_27384),
                                                     np.int64(i32_res_27386),
                                                     np.int32(m_27517),
                                                     np.int64(i32_res_27519),
                                                     defunc_3_map_res_mem_42706,
                                                     mem_42734)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30670_var,
                                   ((np.long(segmap_usable_groups_30715) * np.long(segmap_group_sizze_30714)),),
                                   (np.long(segmap_group_sizze_30714),))
        if synchronous:
          sync(self)
      ctx_param_ext_42735 = m_27371
      ctx_param_ext_42736 = i32_res_27519
      ctx_param_ext_42737 = np.int64(0)
      ctx_param_ext_42738 = i32_res_27519
      ctx_param_ext_42739 = m_27371
      ctx_param_ext_42740 = np.int64(1)
      ctx_param_ext_42741 = i32_res_27519
      mem_param_42742 = mem_42734
      i_30731 = np.int32(0)
      one_45032 = np.int32(1)
      for counter_45031 in range(k2p2zq_27384):
        i32_res_30733 = sext_i32_i64(i_30731)
        local_memory_capacity_44011 = self.max_local_memory
        if intra_suff_and_fits_30742:
          gauss_jordan_res_ixfn_42764 = m_27371
        else:
          gauss_jordan_res_ixfn_42764 = ctx_param_ext_42739
        local_memory_capacity_44012 = self.max_local_memory
        if intra_suff_and_fits_30742:
          gauss_jordan_res_ixfn_42765 = i32_res_27519
        else:
          gauss_jordan_res_ixfn_42765 = ctx_param_ext_42741
        local_memory_capacity_44013 = self.max_local_memory
        if intra_suff_and_fits_30742:
          gauss_jordan_res_ixfn_42766 = m_27371
        else:
          gauss_jordan_res_ixfn_42766 = ctx_param_ext_42735
        local_memory_capacity_44014 = self.max_local_memory
        if intra_suff_and_fits_30742:
          gauss_jordan_res_ixfn_42767 = i32_res_27519
        else:
          gauss_jordan_res_ixfn_42767 = ctx_param_ext_42736
        local_memory_capacity_44015 = self.max_local_memory
        if intra_suff_and_fits_30742:
          gauss_jordan_res_ixfn_42768 = i32_res_27519
        else:
          gauss_jordan_res_ixfn_42768 = ctx_param_ext_42738
        local_memory_capacity_44016 = self.max_local_memory
        if intra_suff_and_fits_30742:
          gauss_jordan_res_ixfn_42769 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_42769 = ctx_param_ext_42740
        local_memory_capacity_44017 = self.max_local_memory
        if intra_suff_and_fits_30742:
          gauss_jordan_res_ixfn_42770 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_42770 = ctx_param_ext_42737
        local_memory_capacity_44045 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44045)) and sle64((bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44045))) and intra_suff_and_fits_30742):
          mem_42747 = opencl_alloc(self, bytes_42732, "mem_42747")
          group_sizze_44021 = self.sizes["mainDetailed.group_size_44021"]
          num_groups_44022 = sdiv_up64((m_27371 * i32_res_27519),
                                       group_sizze_44021)
          if ((1 * (np.long(num_groups_44022) * np.long(group_sizze_44021))) != 0):
            self.mainDetailedzicopy_44018_var.set_args(np.int64(m_27371),
                                                       np.int64(i32_res_27519),
                                                       np.int64(ctx_param_ext_42737),
                                                       np.int64(ctx_param_ext_42738),
                                                       np.int64(ctx_param_ext_42740),
                                                       mem_param_42742,
                                                       mem_42747)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_44018_var,
                                       ((np.long(num_groups_44022) * np.long(group_sizze_44021)),),
                                       (np.long(group_sizze_44021),))
            if synchronous:
              sync(self)
          mem_42755 = opencl_alloc(self, bytes_42732, "mem_42755")
          if ((1 * (np.long(m_27371) * np.long(i32_res_27519))) != 0):
            self.mainDetailedzisegmap_intragroup_30336_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_42709)),
                                                                    np.int64(m_27371),
                                                                    np.int32(k2p2zq_27384),
                                                                    np.int32(m_27517),
                                                                    np.int64(i32_res_27519),
                                                                    np.int32(i_30731),
                                                                    np.int64(i32_res_30733),
                                                                    np.int64(ctx_param_ext_42737),
                                                                    np.int64(ctx_param_ext_42738),
                                                                    np.int64(ctx_param_ext_42740),
                                                                    mem_param_42742,
                                                                    mem_42747,
                                                                    mem_42755)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_30336_var,
                                       ((np.long(m_27371) * np.long(i32_res_27519)),),
                                       (np.long(i32_res_27519),))
            if synchronous:
              sync(self)
          mem_42747 = None
          gauss_jordan_res_mem_42771 = mem_42755
        else:
          mem_42758 = opencl_alloc(self, m_27371, "mem_42758")
          if ((1 * (np.long(segmap_usable_groups_30779) * np.long(segmap_group_sizze_30778))) != 0):
            self.mainDetailedzisegmap_30577_var.set_args(self.global_failure,
                                                         np.int64(m_27371),
                                                         np.int64(i32_res_30733),
                                                         np.int64(ctx_param_ext_42737),
                                                         np.int64(ctx_param_ext_42738),
                                                         np.int64(ctx_param_ext_42740),
                                                         mem_param_42742,
                                                         mem_42758)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30577_var,
                                       ((np.long(segmap_usable_groups_30779) * np.long(segmap_group_sizze_30778)),),
                                       (np.long(segmap_group_sizze_30778),))
            if synchronous:
              sync(self)
          mem_42762 = opencl_alloc(self, bytes_42732, "mem_42762")
          if ((1 * (np.long(segmap_usable_groups_30795) * np.long(segmap_group_sizze_30794))) != 0):
            self.mainDetailedzisegmap_30509_var.set_args(self.global_failure,
                                                         np.int64(m_27371),
                                                         np.int32(k2p2zq_27384),
                                                         np.int32(m_27517),
                                                         np.int64(i32_res_27519),
                                                         np.int32(i_30731),
                                                         np.int64(i32_res_30733),
                                                         np.int64(ctx_param_ext_42737),
                                                         np.int64(ctx_param_ext_42738),
                                                         np.int64(ctx_param_ext_42740),
                                                         mem_param_42742,
                                                         mem_42758, mem_42762)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30509_var,
                                       ((np.long(segmap_usable_groups_30795) * np.long(segmap_group_sizze_30794)),),
                                       (np.long(segmap_group_sizze_30794),))
            if synchronous:
              sync(self)
          mem_42758 = None
          if ((1 * (np.long(segmap_usable_groups_30829) * np.long(segmap_group_sizze_30828))) != 0):
            self.mainDetailedzisegmap_30455_var.set_args(self.global_failure,
                                                         np.int64(m_27371),
                                                         np.int64(i32_res_27519),
                                                         np.int64(ctx_param_ext_42737),
                                                         np.int64(ctx_param_ext_42738),
                                                         np.int64(ctx_param_ext_42740),
                                                         mem_param_42742,
                                                         mem_42762)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30455_var,
                                       ((np.long(segmap_usable_groups_30829) * np.long(segmap_group_sizze_30828)),),
                                       (np.long(segmap_group_sizze_30828),))
            if synchronous:
              sync(self)
          mem_42762 = None
          gauss_jordan_res_mem_42771 = mem_param_42742
        ctx_param_ext_tmp_44002 = gauss_jordan_res_ixfn_42766
        ctx_param_ext_tmp_44003 = gauss_jordan_res_ixfn_42767
        ctx_param_ext_tmp_44004 = gauss_jordan_res_ixfn_42770
        ctx_param_ext_tmp_44005 = gauss_jordan_res_ixfn_42768
        ctx_param_ext_tmp_44006 = gauss_jordan_res_ixfn_42764
        ctx_param_ext_tmp_44007 = gauss_jordan_res_ixfn_42769
        ctx_param_ext_tmp_44008 = gauss_jordan_res_ixfn_42765
        mem_param_tmp_44009 = gauss_jordan_res_mem_42771
        ctx_param_ext_42735 = ctx_param_ext_tmp_44002
        ctx_param_ext_42736 = ctx_param_ext_tmp_44003
        ctx_param_ext_42737 = ctx_param_ext_tmp_44004
        ctx_param_ext_42738 = ctx_param_ext_tmp_44005
        ctx_param_ext_42739 = ctx_param_ext_tmp_44006
        ctx_param_ext_42740 = ctx_param_ext_tmp_44007
        ctx_param_ext_42741 = ctx_param_ext_tmp_44008
        mem_param_42742 = mem_param_tmp_44009
        i_30731 += one_45032
      gauss_jordan_res_r_ixfn_42772 = ctx_param_ext_42735
      gauss_jordan_res_r_ixfn_42773 = ctx_param_ext_42736
      gauss_jordan_res_r_ixfn_42774 = ctx_param_ext_42737
      gauss_jordan_res_r_ixfn_42775 = ctx_param_ext_42738
      gauss_jordan_res_r_ixfn_42776 = ctx_param_ext_42739
      gauss_jordan_res_r_ixfn_42777 = ctx_param_ext_42740
      gauss_jordan_res_r_ixfn_42778 = ctx_param_ext_42741
      gauss_jordan_res_r_mem_42779 = mem_param_42742
      mem_42734 = None
      segmap_usable_groups_30841 = sdiv_up64(nest_sizze_30839,
                                             segmap_group_sizze_30840)
      mem_42784 = opencl_alloc(self, bytes_42781, "mem_42784")
      if ((1 * (np.long(segmap_usable_groups_30841) * np.long(segmap_group_sizze_30840))) != 0):
        self.mainDetailedzisegmap_30289_var.set_args(self.global_failure,
                                                     np.int64(m_27371),
                                                     np.int64(i32_res_27386),
                                                     np.int64(i32_res_27519),
                                                     np.int64(i32_res_27534),
                                                     np.int64(x_27535),
                                                     np.int64(j_m_i_27538),
                                                     np.int64(gauss_jordan_res_r_ixfn_42774),
                                                     np.int64(gauss_jordan_res_r_ixfn_42775),
                                                     np.int64(gauss_jordan_res_r_ixfn_42777),
                                                     gauss_jordan_res_r_mem_42779,
                                                     mem_42784)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30289_var,
                                   ((np.long(segmap_usable_groups_30841) * np.long(segmap_group_sizze_30840)),),
                                   (np.long(segmap_group_sizze_30840),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_42779 = None
      defunc_3_map_res_mem_42786 = mem_42784
    defunc_3_map_res_mem_42706 = None
    suff_outer_par_30849 = (self.sizes["mainDetailed.suff_outer_par_16"] <= m_27371)
    segmap_group_sizze_30871 = self.sizes["mainDetailed.segmap_group_size_30853"]
    max_num_groups_44052 = self.sizes["mainDetailed.segmap_num_groups_30855"]
    num_groups_30872 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27371,
                                                            segmap_group_sizze_30871),
                                                  sext_i32_i64(max_num_groups_44052))))
    suff_outer_par_30956 = (self.sizes["mainDetailed.suff_outer_par_17"] <= nest_sizze_29959)
    nest_sizze_30972 = (i32_res_27380 * nest_sizze_29959)
    segred_group_sizze_30973 = self.sizes["mainDetailed.segred_group_size_30915"]
    max_num_groups_44053 = self.sizes["mainDetailed.segred_num_groups_30917"]
    num_groups_30974 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30972,
                                                            segred_group_sizze_30973),
                                                  sext_i32_i64(max_num_groups_44053))))
    Ty_40864 = self.sizes["mainDetailed.Ty_40861"]
    Ry_40865 = self.sizes["mainDetailed.Ry_40863"]
    Tx_40866 = self.sizes["mainDetailed.Tx_40860"]
    Rx_40867 = self.sizes["mainDetailed.Rx_40862"]
    Tk_40868 = self.sizes["mainDetailed.Tk_40859"]
    TxRx_40871 = (Tx_40866 * Rx_40867)
    TyRy_40872 = (Ty_40864 * Ry_40865)
    a_loc_szz_40874 = (Tk_40868 * TyRy_40872)
    binop_x_40875 = (Tx_40866 * Tk_40868)
    b_loc_szz_40876 = (Rx_40867 * binop_x_40875)
    group_sizze_40880 = (Ty_40864 * Tx_40866)
    bytes_42805 = (np.int64(4) * nest_sizze_29959)
    binop_x_42819 = (Ry_40865 * group_sizze_40880)
    binop_x_42820 = (Rx_40867 * binop_x_42819)
    bytes_42817 = (np.int64(4) * binop_x_42820)
    binop_x_42811 = (Ry_40865 * Rx_40867)
    bytes_42810 = (np.int64(4) * binop_x_42811)
    bytes_42822 = (np.int64(4) * a_loc_szz_40874)
    bytes_42824 = (np.int64(4) * b_loc_szz_40876)
    bytes_42893 = (np.int64(4) * binop_x_42819)
    binop_x_42899 = (Rx_40867 * group_sizze_40880)
    bytes_42897 = (np.int64(4) * binop_x_42899)
    bytes_42885 = (np.int64(4) * Ry_40865)
    bytes_42887 = (np.int64(4) * Rx_40867)
    binop_x_43621 = (np.int64(4) * Ty_40864)
    binop_x_43622 = (Tx_40866 * binop_x_43621)
    binop_x_43623 = (Ry_40865 * binop_x_43622)
    sizze_43624 = (Rx_40867 * binop_x_43623)
    num_threads_43697 = (segmap_group_sizze_30871 * num_groups_30872)
    total_sizze_43698 = (bytes_42605 * num_threads_43697)
    local_memory_capacity_44183 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44183)) and suff_outer_par_30849):
      mem_42789 = opencl_alloc(self, bytes_42555, "mem_42789")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42789, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_27370, m_27371)
      mem_42807 = opencl_alloc(self, bytes_42805, "mem_42807")
      mem_42792 = opencl_alloc(self, total_sizze_43698, "mem_42792")
      if ((1 * (np.long(num_groups_30872) * np.long(segmap_group_sizze_30871))) != 0):
        self.mainDetailedzisegmap_30851_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.int64(m_27371),
                                                     np.int32(n_27374),
                                                     np.int32(k2p2zq_27384),
                                                     np.int64(i32_res_27386),
                                                     np.int64(num_groups_30872),
                                                     binop_p_mem_42547,
                                                     mem_42789, mem_42792,
                                                     mem_42807)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30851_var,
                                   ((np.long(num_groups_30872) * np.long(segmap_group_sizze_30871)),),
                                   (np.long(segmap_group_sizze_30871),))
        if synchronous:
          sync(self)
      mem_42789 = None
      mem_42792 = None
      mem_43005 = opencl_alloc(self, bytes_42805, "mem_43005")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43005, np.int64(0),
                                                  mem_42807, np.int64(0),
                                                  np.int64(1), m_27371,
                                                  i32_res_27386)
      mem_42807 = None
      defunc_3_map_res_mem_43007 = mem_43005
    else:
      local_memory_capacity_44182 = self.max_local_memory
      if (sle64(((bytes_42822 + srem64((np.int64(8) - srem64(bytes_42822,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_42824 + srem64((np.int64(8) - srem64(bytes_42824,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44182)) and suff_outer_par_30956):
        tk_div_tx_40869 = sdiv_up64(Tk_40868, Tx_40866)
        tk_div_ty_40870 = sdiv_up64(Tk_40868, Ty_40864)
        gridDim_x_40877 = sdiv_up64(i32_res_27386, TxRx_40871)
        gridDim_y_40878 = sdiv_up64(m_27371, TyRy_40872)
        grid_sizze_40879 = (gridDim_x_40877 * gridDim_y_40878)
        full_tiles_40908 = squot64(i32_res_27380, Tk_40868)
        kk_41115 = (Tk_40868 * full_tiles_40908)
        mem_42997 = opencl_alloc(self, bytes_42805, "mem_42997")
        if ((1 * (np.long(grid_sizze_40879) * np.long(group_sizze_40880))) != 0):
          self.mainDetailedzisegmap_intragroup_40883_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_42824)),
                                                                  cl.LocalMemory(np.long(bytes_42822)),
                                                                  np.int64(N_27370),
                                                                  np.int64(m_27371),
                                                                  np.int64(i32_res_27380),
                                                                  np.int64(i32_res_27386),
                                                                  np.int64(gridDim_x_40877),
                                                                  np.int64(full_tiles_40908),
                                                                  np.int64(kk_41115),
                                                                  images_mem_42538,
                                                                  mem_42550,
                                                                  mem_42997)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_40883_var,
                                     ((np.long(grid_sizze_40879) * np.long(group_sizze_40880)),),
                                     (np.long(group_sizze_40880),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43002 = mem_42997
      else:
        mem_43001 = opencl_alloc(self, bytes_42805, "mem_43001")
        if slt64((i32_res_27380 * np.int64(2)), segred_group_sizze_30973):
          segment_sizze_nonzzero_44122 = smax64(np.int64(1), i32_res_27380)
          num_threads_44123 = (num_groups_30974 * segred_group_sizze_30973)
          if ((1 * (np.long(num_groups_30974) * np.long(segred_group_sizze_30973))) != 0):
            self.mainDetailedzisegred_small_30921_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30973))),
                                                               np.int64(N_27370),
                                                               np.int64(m_27371),
                                                               np.int64(i32_res_27380),
                                                               np.int64(i32_res_27386),
                                                               np.int64(num_groups_30974),
                                                               np.int64(segment_sizze_nonzzero_44122),
                                                               images_mem_42538,
                                                               binop_p_mem_42547,
                                                               mem_43001)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_30921_var,
                                       ((np.long(num_groups_30974) * np.long(segred_group_sizze_30973)),),
                                       (np.long(segred_group_sizze_30973),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44143 = sdiv_up64(num_groups_30974,
                                               smax64(np.int64(1),
                                                      (m_27371 * i32_res_27386)))
          elements_per_thread_44144 = sdiv_up64(i32_res_27380,
                                                (segred_group_sizze_30973 * groups_per_segment_44143))
          virt_num_groups_44145 = (groups_per_segment_44143 * (m_27371 * i32_res_27386))
          num_threads_44146 = (num_groups_30974 * segred_group_sizze_30973)
          threads_per_segment_44147 = (groups_per_segment_44143 * segred_group_sizze_30973)
          group_res_arr_mem_44148 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_30973 * virt_num_groups_44145)),
                                                 "group_res_arr_mem_44148")
          mainDetailedzicounter_mem_44150 = self.mainDetailedzicounter_mem_44150
          if ((1 * (np.long(num_groups_30974) * np.long(segred_group_sizze_30973))) != 0):
            self.mainDetailedzisegred_large_30921_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30973))),
                                                               np.int64(N_27370),
                                                               np.int64(i32_res_27380),
                                                               np.int64(i32_res_27386),
                                                               np.int64(num_groups_30974),
                                                               np.int64(groups_per_segment_44143),
                                                               np.int64(elements_per_thread_44144),
                                                               np.int64(virt_num_groups_44145),
                                                               np.int64(threads_per_segment_44147),
                                                               images_mem_42538,
                                                               binop_p_mem_42547,
                                                               mem_43001,
                                                               group_res_arr_mem_44148,
                                                               mainDetailedzicounter_mem_44150)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_30921_var,
                                       ((np.long(num_groups_30974) * np.long(segred_group_sizze_30973)),),
                                       (np.long(segred_group_sizze_30973),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43002 = mem_43001
      defunc_3_map_res_mem_43007 = defunc_3_map_res_mem_43002
    binop_p_mem_42547 = None
    mem_42550 = None
    suff_outer_par_30990 = (self.sizes["mainDetailed.suff_outer_par_18"] <= m_27371)
    segmap_group_sizze_31011 = self.sizes["mainDetailed.segmap_group_size_30994"]
    max_num_groups_44184 = self.sizes["mainDetailed.segmap_num_groups_30996"]
    num_groups_31012 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27371,
                                                            segmap_group_sizze_31011),
                                                  sext_i32_i64(max_num_groups_44184))))
    suff_outer_par_31091 = (self.sizes["mainDetailed.suff_outer_par_19"] <= nest_sizze_29959)
    segred_group_sizze_31106 = self.sizes["mainDetailed.segred_group_size_31052"]
    max_num_groups_44185 = self.sizes["mainDetailed.segred_num_groups_31054"]
    num_groups_31107 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42703,
                                                            segred_group_sizze_31106),
                                                  sext_i32_i64(max_num_groups_44185))))
    tile_sizze_41327 = self.sizes["mainDetailed.tile_size_41326"]
    group_sizze_41328 = (tile_sizze_41327 * tile_sizze_41327)
    bytes_43039 = (np.int64(4) * group_sizze_41328)
    binop_x_43637 = (np.int64(4) * tile_sizze_41327)
    sizze_43638 = (tile_sizze_41327 * binop_x_43637)
    num_threads_43701 = (segmap_group_sizze_31011 * num_groups_31012)
    total_sizze_43702 = (bytes_42605 * num_threads_43701)
    local_memory_capacity_44271 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44271)) and suff_outer_par_30990):
      mem_43011 = opencl_alloc(self, bytes_42600, "mem_43011")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43011, np.int64(0),
                                                  defunc_3_map_res_mem_42786,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27386 * i32_res_27386),
                                                  m_27371)
      mem_43014 = opencl_alloc(self, bytes_42805, "mem_43014")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43014, np.int64(0),
                                                  defunc_3_map_res_mem_43007,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27386, m_27371)
      mem_43032 = opencl_alloc(self, bytes_42805, "mem_43032")
      mem_43017 = opencl_alloc(self, total_sizze_43702, "mem_43017")
      if ((1 * (np.long(num_groups_31012) * np.long(segmap_group_sizze_31011))) != 0):
        self.mainDetailedzisegmap_30992_var.set_args(self.global_failure,
                                                     np.int64(m_27371),
                                                     np.int32(k2p2zq_27384),
                                                     np.int64(i32_res_27386),
                                                     np.int64(num_groups_31012),
                                                     mem_43011, mem_43014,
                                                     mem_43017, mem_43032)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30992_var,
                                   ((np.long(num_groups_31012) * np.long(segmap_group_sizze_31011)),),
                                   (np.long(segmap_group_sizze_31011),))
        if synchronous:
          sync(self)
      mem_43011 = None
      mem_43014 = None
      mem_43017 = None
      mem_43071 = opencl_alloc(self, bytes_42805, "mem_43071")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43071, np.int64(0),
                                                  mem_43032, np.int64(0),
                                                  np.int64(1), m_27371,
                                                  i32_res_27386)
      mem_43032 = None
      defunc_4_map_res_mem_43073 = mem_43071
    else:
      local_memory_capacity_44270 = self.max_local_memory
      if (sle64(((bytes_43039 + srem64((np.int64(8) - srem64(bytes_43039,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43039 + srem64((np.int64(8) - srem64(bytes_43039,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44270)) and suff_outer_par_31091):
        mem_43036 = opencl_alloc(self, bytes_42701, "mem_43036")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43036, np.int64(0),
                                                    defunc_3_map_res_mem_42786,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27386,
                                                    (m_27371 * i32_res_27386))
        num_groups_x_41329 = sdiv_up64(m_27371, tile_sizze_41327)
        num_groups_y_41330 = sdiv_up64(i32_res_27386, tile_sizze_41327)
        num_groups_top_41331 = (num_groups_x_41329 * num_groups_y_41330)
        num_whole_tiles_41348 = squot64(i32_res_27386, tile_sizze_41327)
        residual_input_41475 = srem64(i32_res_27386, tile_sizze_41327)
        cond_41476 = (residual_input_41475 == np.int64(0))
        mem_43063 = opencl_alloc(self, bytes_42805, "mem_43063")
        if ((1 * (np.long(num_groups_top_41331) * np.long(group_sizze_41328))) != 0):
          self.mainDetailedzisegmap_intragroup_41332_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43039)),
                                                                  cl.LocalMemory(np.long(bytes_43039)),
                                                                  np.int64(m_27371),
                                                                  np.int64(i32_res_27386),
                                                                  np.int64(num_groups_y_41330),
                                                                  np.int64(num_whole_tiles_41348),
                                                                  np.int64(residual_input_41475),
                                                                  np.byte(cond_41476),
                                                                  defunc_3_map_res_mem_43007,
                                                                  mem_43036,
                                                                  mem_43063)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41332_var,
                                     ((np.long(num_groups_top_41331) * np.long(group_sizze_41328)),),
                                     (np.long(group_sizze_41328),))
          if synchronous:
            sync(self)
        mem_43036 = None
        defunc_4_map_res_mem_43068 = mem_43063
      else:
        mem_43067 = opencl_alloc(self, bytes_42805, "mem_43067")
        if slt64((i32_res_27386 * np.int64(2)), segred_group_sizze_31106):
          segment_sizze_nonzzero_44210 = smax64(np.int64(1), i32_res_27386)
          num_threads_44211 = (num_groups_31107 * segred_group_sizze_31106)
          if ((1 * (np.long(num_groups_31107) * np.long(segred_group_sizze_31106))) != 0):
            self.mainDetailedzisegred_small_31058_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31106))),
                                                               np.int64(m_27371),
                                                               np.int64(i32_res_27386),
                                                               np.int64(num_groups_31107),
                                                               np.int64(segment_sizze_nonzzero_44210),
                                                               defunc_3_map_res_mem_42786,
                                                               defunc_3_map_res_mem_43007,
                                                               mem_43067)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31058_var,
                                       ((np.long(num_groups_31107) * np.long(segred_group_sizze_31106)),),
                                       (np.long(segred_group_sizze_31106),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44231 = sdiv_up64(num_groups_31107,
                                               smax64(np.int64(1),
                                                      (m_27371 * i32_res_27386)))
          elements_per_thread_44232 = sdiv_up64(i32_res_27386,
                                                (segred_group_sizze_31106 * groups_per_segment_44231))
          virt_num_groups_44233 = (groups_per_segment_44231 * (m_27371 * i32_res_27386))
          num_threads_44234 = (num_groups_31107 * segred_group_sizze_31106)
          threads_per_segment_44235 = (groups_per_segment_44231 * segred_group_sizze_31106)
          group_res_arr_mem_44236 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31106 * virt_num_groups_44233)),
                                                 "group_res_arr_mem_44236")
          mainDetailedzicounter_mem_44238 = self.mainDetailedzicounter_mem_44238
          if ((1 * (np.long(num_groups_31107) * np.long(segred_group_sizze_31106))) != 0):
            self.mainDetailedzisegred_large_31058_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31106))),
                                                               np.int64(i32_res_27386),
                                                               np.int64(num_groups_31107),
                                                               np.int64(groups_per_segment_44231),
                                                               np.int64(elements_per_thread_44232),
                                                               np.int64(virt_num_groups_44233),
                                                               np.int64(threads_per_segment_44235),
                                                               defunc_3_map_res_mem_42786,
                                                               defunc_3_map_res_mem_43007,
                                                               mem_43067,
                                                               group_res_arr_mem_44236,
                                                               mainDetailedzicounter_mem_44238)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31058_var,
                                       ((np.long(num_groups_31107) * np.long(segred_group_sizze_31106)),),
                                       (np.long(segred_group_sizze_31106),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43068 = mem_43067
      defunc_4_map_res_mem_43073 = defunc_4_map_res_mem_43068
    defunc_3_map_res_mem_42786 = None
    defunc_3_map_res_mem_43007 = None
    suff_outer_par_31122 = (self.sizes["mainDetailed.suff_outer_par_20"] <= m_27371)
    segmap_group_sizze_31142 = self.sizes["mainDetailed.segmap_group_size_31126"]
    max_num_groups_44272 = self.sizes["mainDetailed.segmap_num_groups_31128"]
    num_groups_31143 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27371,
                                                            segmap_group_sizze_31142),
                                                  sext_i32_i64(max_num_groups_44272))))
    suff_outer_par_31219 = (self.sizes["mainDetailed.suff_outer_par_21"] <= binop_x_42556)
    nest_sizze_31233 = (i32_res_27386 * binop_x_42556)
    segred_group_sizze_31234 = self.sizes["mainDetailed.segred_group_size_31182"]
    max_num_groups_44273 = self.sizes["mainDetailed.segred_num_groups_31184"]
    num_groups_31235 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31233,
                                                            segred_group_sizze_31234),
                                                  sext_i32_i64(max_num_groups_44273))))
    Ty_41605 = self.sizes["mainDetailed.Ty_41602"]
    Ry_41606 = self.sizes["mainDetailed.Ry_41604"]
    Tx_41607 = self.sizes["mainDetailed.Tx_41601"]
    Rx_41608 = self.sizes["mainDetailed.Rx_41603"]
    Tk_41609 = self.sizes["mainDetailed.Tk_41600"]
    TxRx_41612 = (Tx_41607 * Rx_41608)
    TyRy_41613 = (Ty_41605 * Ry_41606)
    a_loc_szz_41615 = (Tk_41609 * TyRy_41613)
    binop_x_41616 = (Tx_41607 * Tk_41609)
    b_loc_szz_41617 = (Rx_41608 * binop_x_41616)
    group_sizze_41621 = (Ty_41605 * Tx_41607)
    bytes_43078 = (np.int64(4) * N_27370)
    binop_x_43109 = (Ry_41606 * group_sizze_41621)
    binop_x_43110 = (Rx_41608 * binop_x_43109)
    bytes_43107 = (np.int64(4) * binop_x_43110)
    binop_x_43101 = (Ry_41606 * Rx_41608)
    bytes_43100 = (np.int64(4) * binop_x_43101)
    bytes_43112 = (np.int64(4) * a_loc_szz_41615)
    bytes_43114 = (np.int64(4) * b_loc_szz_41617)
    bytes_43183 = (np.int64(4) * binop_x_43109)
    binop_x_43189 = (Rx_41608 * group_sizze_41621)
    bytes_43187 = (np.int64(4) * binop_x_43189)
    bytes_43175 = (np.int64(4) * Ry_41606)
    bytes_43177 = (np.int64(4) * Rx_41608)
    binop_x_43651 = (np.int64(4) * Ty_41605)
    binop_x_43652 = (Tx_41607 * binop_x_43651)
    binop_x_43653 = (Ry_41606 * binop_x_43652)
    sizze_43654 = (Rx_41608 * binop_x_43653)
    num_threads_43705 = (segmap_group_sizze_31142 * num_groups_31143)
    total_sizze_43706 = (bytes_43078 * num_threads_43705)
    local_memory_capacity_44403 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44403)) and suff_outer_par_31122):
      mem_43076 = opencl_alloc(self, bytes_42805, "mem_43076")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43076, np.int64(0),
                                                  defunc_4_map_res_mem_43073,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27386, m_27371)
      mem_43094 = opencl_alloc(self, bytes_42555, "mem_43094")
      mem_43079 = opencl_alloc(self, total_sizze_43706, "mem_43079")
      if ((1 * (np.long(num_groups_31143) * np.long(segmap_group_sizze_31142))) != 0):
        self.mainDetailedzisegmap_31124_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.int64(m_27371),
                                                     np.int32(k2p2zq_27384),
                                                     np.int64(i32_res_27386),
                                                     np.int64(num_groups_31143),
                                                     mem_42554, mem_43076,
                                                     mem_43079, mem_43094)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31124_var,
                                   ((np.long(num_groups_31143) * np.long(segmap_group_sizze_31142)),),
                                   (np.long(segmap_group_sizze_31142),))
        if synchronous:
          sync(self)
      mem_43076 = None
      mem_43079 = None
      mem_43295 = opencl_alloc(self, bytes_42555, "mem_43295")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43295, np.int64(0),
                                                  mem_43094, np.int64(0),
                                                  np.int64(1), m_27371, N_27370)
      mem_43094 = None
      defunc_3_map_res_mem_43297 = mem_43295
    else:
      local_memory_capacity_44402 = self.max_local_memory
      if (sle64(((bytes_43112 + srem64((np.int64(8) - srem64(bytes_43112,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43114 + srem64((np.int64(8) - srem64(bytes_43114,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44402)) and suff_outer_par_31219):
        mem_43097 = opencl_alloc(self, bytes_42540, "mem_43097")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43097, np.int64(0),
                                                    mem_42554, np.int64(0),
                                                    np.int64(1), i32_res_27386,
                                                    N_27370)
        tk_div_tx_41610 = sdiv_up64(Tk_41609, Tx_41607)
        tk_div_ty_41611 = sdiv_up64(Tk_41609, Ty_41605)
        gridDim_x_41618 = sdiv_up64(N_27370, TxRx_41612)
        gridDim_y_41619 = sdiv_up64(m_27371, TyRy_41613)
        grid_sizze_41620 = (gridDim_x_41618 * gridDim_y_41619)
        full_tiles_41649 = squot64(i32_res_27386, Tk_41609)
        kk_41852 = (Tk_41609 * full_tiles_41649)
        mem_43287 = opencl_alloc(self, bytes_42555, "mem_43287")
        if ((1 * (np.long(grid_sizze_41620) * np.long(group_sizze_41621))) != 0):
          self.mainDetailedzisegmap_intragroup_41624_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43114)),
                                                                  cl.LocalMemory(np.long(bytes_43112)),
                                                                  np.int64(N_27370),
                                                                  np.int64(m_27371),
                                                                  np.int64(i32_res_27386),
                                                                  np.int64(gridDim_x_41618),
                                                                  np.int64(full_tiles_41649),
                                                                  np.int64(kk_41852),
                                                                  defunc_4_map_res_mem_43073,
                                                                  mem_43097,
                                                                  mem_43287)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41624_var,
                                     ((np.long(grid_sizze_41620) * np.long(group_sizze_41621)),),
                                     (np.long(group_sizze_41621),))
          if synchronous:
            sync(self)
        mem_43097 = None
        defunc_3_map_res_mem_43292 = mem_43287
      else:
        mem_43291 = opencl_alloc(self, bytes_42555, "mem_43291")
        if slt64((i32_res_27386 * np.int64(2)), segred_group_sizze_31234):
          segment_sizze_nonzzero_44342 = smax64(np.int64(1), i32_res_27386)
          num_threads_44343 = (num_groups_31235 * segred_group_sizze_31234)
          if ((1 * (np.long(num_groups_31235) * np.long(segred_group_sizze_31234))) != 0):
            self.mainDetailedzisegred_small_31188_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31234))),
                                                               np.int64(N_27370),
                                                               np.int64(m_27371),
                                                               np.int64(i32_res_27386),
                                                               np.int64(num_groups_31235),
                                                               np.int64(segment_sizze_nonzzero_44342),
                                                               mem_42554,
                                                               defunc_4_map_res_mem_43073,
                                                               mem_43291)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31188_var,
                                       ((np.long(num_groups_31235) * np.long(segred_group_sizze_31234)),),
                                       (np.long(segred_group_sizze_31234),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44363 = sdiv_up64(num_groups_31235,
                                               smax64(np.int64(1),
                                                      (m_27371 * N_27370)))
          elements_per_thread_44364 = sdiv_up64(i32_res_27386,
                                                (segred_group_sizze_31234 * groups_per_segment_44363))
          virt_num_groups_44365 = (groups_per_segment_44363 * (m_27371 * N_27370))
          num_threads_44366 = (num_groups_31235 * segred_group_sizze_31234)
          threads_per_segment_44367 = (groups_per_segment_44363 * segred_group_sizze_31234)
          group_res_arr_mem_44368 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31234 * virt_num_groups_44365)),
                                                 "group_res_arr_mem_44368")
          mainDetailedzicounter_mem_44370 = self.mainDetailedzicounter_mem_44370
          if ((1 * (np.long(num_groups_31235) * np.long(segred_group_sizze_31234))) != 0):
            self.mainDetailedzisegred_large_31188_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31234))),
                                                               np.int64(N_27370),
                                                               np.int64(i32_res_27386),
                                                               np.int64(num_groups_31235),
                                                               np.int64(groups_per_segment_44363),
                                                               np.int64(elements_per_thread_44364),
                                                               np.int64(virt_num_groups_44365),
                                                               np.int64(threads_per_segment_44367),
                                                               mem_42554,
                                                               defunc_4_map_res_mem_43073,
                                                               mem_43291,
                                                               group_res_arr_mem_44368,
                                                               mainDetailedzicounter_mem_44370)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31188_var,
                                       ((np.long(num_groups_31235) * np.long(segred_group_sizze_31234)),),
                                       (np.long(segred_group_sizze_31234),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43292 = mem_43291
      defunc_3_map_res_mem_43297 = defunc_3_map_res_mem_43292
    mem_42554 = None
    defunc_4_map_res_mem_43073 = None
    i_27646 = (N_27370 - np.int64(1))
    x_27647 = sle64(np.int64(0), i_27646)
    y_27648 = slt64(i_27646, N_27370)
    bounds_check_27649 = (x_27647 and y_27648)
    index_certs_27650 = True
    assert bounds_check_27649, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:16-77\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-77:25\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_27646,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27370,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_31364 = sle64(N_27370, max_group_sizze_30227)
    suff_intra_par_31362 = (self.sizes["mainDetailed.suff_intra_par_24"] <= N_27370)
    intra_suff_and_fits_31365 = (suff_intra_par_31362 and fits_31364)
    segscan_group_sizze_31514 = self.sizes["mainDetailed.segscan_group_size_31491"]
    max_num_groups_44404 = self.sizes["mainDetailed.segscan_num_groups_31493"]
    num_groups_31515 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42556,
                                                            segscan_group_sizze_31514),
                                                  sext_i32_i64(max_num_groups_44404))))
    segmap_group_sizze_31534 = self.sizes["mainDetailed.segmap_group_size_31482"]
    segmap_group_sizze_31570 = self.sizes["mainDetailed.segmap_group_size_31407"]
    bytes_43309 = (np.int64(4) * m_27371)
    bytes_43300 = (np.int64(8) * N_27370)
    bytes_43318 = (np.int64(8) * binop_x_42556)
    local_memory_capacity_44506 = self.max_local_memory
    if (sle64(((((bytes_43300 + srem64((np.int64(8) - srem64(bytes_43300,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44506)) and intra_suff_and_fits_31365):
      mem_43310 = opencl_alloc(self, bytes_43309, "mem_43310")
      mem_43313 = opencl_alloc(self, bytes_42555, "mem_43313")
      mem_43316 = opencl_alloc(self, bytes_42555, "mem_43316")
      if ((1 * (np.long(m_27371) * np.long(N_27370))) != 0):
        self.mainDetailedzisegmap_intragroup_31287_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43078)),
                                                                cl.LocalMemory(np.long(bytes_43078)),
                                                                cl.LocalMemory(np.long(bytes_43078)),
                                                                cl.LocalMemory(np.long(bytes_43300)),
                                                                np.int64(N_27370),
                                                                np.int64(i_27646),
                                                                images_mem_42538,
                                                                defunc_3_map_res_mem_43297,
                                                                mem_43310,
                                                                mem_43313,
                                                                mem_43316)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_31287_var,
                                   ((np.long(m_27371) * np.long(N_27370)),),
                                   (np.long(N_27370),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43334 = mem_43310
      defunc_4_map_res_mem_43335 = mem_43313
      defunc_4_map_res_mem_43336 = mem_43316
    else:
      mem_43320 = opencl_alloc(self, bytes_43318, "mem_43320")
      mem_43323 = opencl_alloc(self, bytes_42555, "mem_43323")
      if slt64(np.int64(0), (m_27371 * N_27370)):
        stage1_max_num_groups_44422 = self.max_group_size
        stage1_num_groups_44423 = smin64(stage1_max_num_groups_44422,
                                         num_groups_31515)
        num_threads_44424 = sext_i64_i32((stage1_num_groups_44423 * segscan_group_sizze_31514))
        if ((1 * (np.long(stage1_num_groups_44423) * np.long(segscan_group_sizze_31514))) != 0):
          self.mainDetailedziscan_stage1_31497_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_31514)))),
                                                            np.int64(N_27370),
                                                            np.int64(m_27371),
                                                            np.int32(num_threads_44424),
                                                            images_mem_42538,
                                                            defunc_3_map_res_mem_43297,
                                                            mem_43320,
                                                            mem_43323)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_31497_var,
                                     ((np.long(stage1_num_groups_44423) * np.long(segscan_group_sizze_31514)),),
                                     (np.long(segscan_group_sizze_31514),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44423))) != 0):
          self.mainDetailedziscan_stage2_31497_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_44423)))),
                                                            np.int64(N_27370),
                                                            np.int64(m_27371),
                                                            np.int64(stage1_num_groups_44423),
                                                            np.int32(num_threads_44424),
                                                            mem_43320)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_31497_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44423)),),
                                     (np.long(stage1_num_groups_44423),))
          if synchronous:
            sync(self)
        required_groups_44466 = sext_i64_i32(sdiv_up64((m_27371 * N_27370),
                                                       segscan_group_sizze_31514))
        if ((1 * (np.long(num_groups_31515) * np.long(segscan_group_sizze_31514))) != 0):
          self.mainDetailedziscan_stage3_31497_var.set_args(self.global_failure,
                                                            np.int64(N_27370),
                                                            np.int64(m_27371),
                                                            np.int64(num_groups_31515),
                                                            np.int32(num_threads_44424),
                                                            np.int32(required_groups_44466),
                                                            mem_43320)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_31497_var,
                                     ((np.long(num_groups_31515) * np.long(segscan_group_sizze_31514)),),
                                     (np.long(segscan_group_sizze_31514),))
          if synchronous:
            sync(self)
      segmap_usable_groups_31535 = sdiv_up64(m_27371, segmap_group_sizze_31534)
      mem_43326 = opencl_alloc(self, bytes_43309, "mem_43326")
      if ((1 * (np.long(segmap_usable_groups_31535) * np.long(segmap_group_sizze_31534))) != 0):
        self.mainDetailedzisegmap_31480_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.int64(m_27371),
                                                     np.int64(i_27646),
                                                     mem_43320, mem_43326)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31480_var,
                                   ((np.long(segmap_usable_groups_31535) * np.long(segmap_group_sizze_31534)),),
                                   (np.long(segmap_group_sizze_31534),))
        if synchronous:
          sync(self)
      mem_43329 = opencl_alloc(self, bytes_42555, "mem_43329")
      self.futhark_builtinzhreplicate_f32(mem_43329, (m_27371 * N_27370),
                                          np.nan)
      mem_43332 = opencl_alloc(self, bytes_42555, "mem_43332")
      self.futhark_builtinzhreplicate_i32(mem_43332, (m_27371 * N_27370),
                                          np.int32(0))
      segmap_usable_groups_31571 = sdiv_up64(binop_x_42556,
                                             segmap_group_sizze_31570)
      if ((1 * (np.long(segmap_usable_groups_31571) * np.long(segmap_group_sizze_31570))) != 0):
        self.mainDetailedzisegmap_31404_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.int64(m_27371),
                                                     mem_43320, mem_43323,
                                                     mem_43329, mem_43332)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31404_var,
                                   ((np.long(segmap_usable_groups_31571) * np.long(segmap_group_sizze_31570)),),
                                   (np.long(segmap_group_sizze_31570),))
        if synchronous:
          sync(self)
      mem_43320 = None
      mem_43323 = None
      defunc_4_map_res_mem_43334 = mem_43326
      defunc_4_map_res_mem_43335 = mem_43329
      defunc_4_map_res_mem_43336 = mem_43332
    suff_outer_par_31619 = (self.sizes["mainDetailed.suff_outer_par_28"] <= m_27371)
    fits_31697 = sle64(i32_res_27380, max_group_sizze_30227)
    suff_intra_par_31695 = (self.sizes["mainDetailed.suff_intra_par_29"] <= i32_res_27380)
    intra_suff_and_fits_31698 = (suff_intra_par_31695 and fits_31697)
    segmap_group_sizze_31662 = self.sizes["mainDetailed.segmap_group_size_31631"]
    nest_sizze_31785 = (m_27371 * i32_res_27380)
    segred_group_sizze_31786 = self.sizes["mainDetailed.segred_group_size_31769"]
    max_num_groups_44507 = self.sizes["mainDetailed.segred_num_groups_31771"]
    num_groups_31787 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31785,
                                                            segred_group_sizze_31786),
                                                  sext_i32_i64(max_num_groups_44507))))
    segred_group_sizze_31800 = self.sizes["mainDetailed.segred_group_size_31748"]
    max_num_groups_44508 = self.sizes["mainDetailed.segred_num_groups_31750"]
    num_groups_31801 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31785,
                                                            segred_group_sizze_31800),
                                                  sext_i32_i64(max_num_groups_44508))))
    segmap_group_sizze_31816 = self.sizes["mainDetailed.segmap_group_size_31733"]
    bytes_43345 = (np.int64(4) * segmap_group_sizze_31662)
    local_memory_capacity_44660 = self.max_local_memory
    if (sle64(((bytes_43345 + srem64((np.int64(8) - srem64(bytes_43345,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43345 + srem64((np.int64(8) - srem64(bytes_43345,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44660)) and suff_outer_par_31619):
      segmap_usable_groups_31663 = sdiv_up64(m_27371, segmap_group_sizze_31662)
      mem_43339 = opencl_alloc(self, bytes_42555, "mem_43339")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43339, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_27370, m_27371)
      mem_43342 = opencl_alloc(self, bytes_42555, "mem_43342")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43342, np.int64(0),
                                                  defunc_4_map_res_mem_43335,
                                                  np.int64(0), np.int64(1),
                                                  N_27370, m_27371)
      num_whole_tiles_42080 = squot64(i32_res_27380, segmap_group_sizze_31662)
      residual_input_42169 = srem64(i32_res_27380, segmap_group_sizze_31662)
      cond_42170 = (residual_input_42169 == np.int64(0))
      mem_43373 = opencl_alloc(self, bytes_43309, "mem_43373")
      mem_43375 = opencl_alloc(self, bytes_43309, "mem_43375")
      mem_43377 = opencl_alloc(self, bytes_43309, "mem_43377")
      if ((1 * (np.long(segmap_usable_groups_31663) * np.long(segmap_group_sizze_31662))) != 0):
        self.mainDetailedzisegmap_intragroup_42058_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43345)),
                                                                cl.LocalMemory(np.long(bytes_43345)),
                                                                np.int64(m_27371),
                                                                np.int32(n_27374),
                                                                np.float32(hfrac_27376),
                                                                np.int64(i32_res_27380),
                                                                np.int32(k2p2_27382),
                                                                np.int64(num_whole_tiles_42080),
                                                                np.int64(residual_input_42169),
                                                                np.byte(cond_42170),
                                                                mem_43339,
                                                                mem_43342,
                                                                mem_43373,
                                                                mem_43375,
                                                                mem_43377)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42058_var,
                                   ((np.long(segmap_usable_groups_31663) * np.long(segmap_group_sizze_31662)),),
                                   (np.long(segmap_group_sizze_31662),))
        if synchronous:
          sync(self)
      mem_43339 = None
      mem_43342 = None
      defunc_3_map_res_mem_43401 = mem_43373
      defunc_3_map_res_mem_43402 = mem_43375
      defunc_3_map_res_mem_43403 = mem_43377
    else:
      local_memory_capacity_44659 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_27380) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27380),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_27380) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27380),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44659)) and intra_suff_and_fits_31698):
        mem_43382 = opencl_alloc(self, bytes_43309, "mem_43382")
        mem_43384 = opencl_alloc(self, bytes_43309, "mem_43384")
        mem_43386 = opencl_alloc(self, bytes_43309, "mem_43386")
        if ((1 * (np.long(m_27371) * np.long(i32_res_27380))) != 0):
          self.mainDetailedzisegmap_intragroup_31627_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27380))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27380))),
                                                                  np.int64(N_27370),
                                                                  np.float32(hfrac_27376),
                                                                  np.int64(i32_res_27380),
                                                                  np.int32(k2p2_27382),
                                                                  images_mem_42538,
                                                                  defunc_4_map_res_mem_43335,
                                                                  mem_43382,
                                                                  mem_43384,
                                                                  mem_43386)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_31627_var,
                                     ((np.long(m_27371) * np.long(i32_res_27380)),),
                                     (np.long(i32_res_27380),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43398 = mem_43382
        defunc_3_map_res_mem_43399 = mem_43384
        defunc_3_map_res_mem_43400 = mem_43386
      else:
        mem_43389 = opencl_alloc(self, bytes_43309, "mem_43389")
        if slt64((i32_res_27380 * np.int64(2)), segred_group_sizze_31786):
          segment_sizze_nonzzero_44534 = smax64(np.int64(1), i32_res_27380)
          num_threads_44535 = (num_groups_31787 * segred_group_sizze_31786)
          if ((1 * (np.long(num_groups_31787) * np.long(segred_group_sizze_31786))) != 0):
            self.mainDetailedzisegred_small_31775_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31786))),
                                                               np.int64(N_27370),
                                                               np.int64(m_27371),
                                                               np.int64(i32_res_27380),
                                                               np.int64(num_groups_31787),
                                                               np.int64(segment_sizze_nonzzero_44534),
                                                               images_mem_42538,
                                                               mem_43389)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31775_var,
                                       ((np.long(num_groups_31787) * np.long(segred_group_sizze_31786)),),
                                       (np.long(segred_group_sizze_31786),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44555 = sdiv_up64(num_groups_31787,
                                               smax64(np.int64(1), m_27371))
          elements_per_thread_44556 = sdiv_up64(i32_res_27380,
                                                (segred_group_sizze_31786 * groups_per_segment_44555))
          virt_num_groups_44557 = (groups_per_segment_44555 * m_27371)
          num_threads_44558 = (num_groups_31787 * segred_group_sizze_31786)
          threads_per_segment_44559 = (groups_per_segment_44555 * segred_group_sizze_31786)
          group_res_arr_mem_44560 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31786 * virt_num_groups_44557)),
                                                 "group_res_arr_mem_44560")
          mainDetailedzicounter_mem_44562 = self.mainDetailedzicounter_mem_44562
          if ((1 * (np.long(num_groups_31787) * np.long(segred_group_sizze_31786))) != 0):
            self.mainDetailedzisegred_large_31775_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31786))),
                                                               np.int64(N_27370),
                                                               np.int64(i32_res_27380),
                                                               np.int64(num_groups_31787),
                                                               np.int64(groups_per_segment_44555),
                                                               np.int64(elements_per_thread_44556),
                                                               np.int64(virt_num_groups_44557),
                                                               np.int64(threads_per_segment_44559),
                                                               images_mem_42538,
                                                               mem_43389,
                                                               group_res_arr_mem_44560,
                                                               mainDetailedzicounter_mem_44562)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31775_var,
                                       ((np.long(num_groups_31787) * np.long(segred_group_sizze_31786)),),
                                       (np.long(segred_group_sizze_31786),))
            if synchronous:
              sync(self)
        mem_43392 = opencl_alloc(self, bytes_43309, "mem_43392")
        if slt64((i32_res_27380 * np.int64(2)), segred_group_sizze_31800):
          segment_sizze_nonzzero_44594 = smax64(np.int64(1), i32_res_27380)
          num_threads_44595 = (num_groups_31801 * segred_group_sizze_31800)
          if ((1 * (np.long(num_groups_31801) * np.long(segred_group_sizze_31800))) != 0):
            self.mainDetailedzisegred_small_31754_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31800))),
                                                               np.int64(N_27370),
                                                               np.int64(m_27371),
                                                               np.int64(i32_res_27380),
                                                               np.int64(num_groups_31801),
                                                               np.int64(segment_sizze_nonzzero_44594),
                                                               defunc_4_map_res_mem_43335,
                                                               mem_43389,
                                                               mem_43392)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31754_var,
                                       ((np.long(num_groups_31801) * np.long(segred_group_sizze_31800)),),
                                       (np.long(segred_group_sizze_31800),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44615 = sdiv_up64(num_groups_31801,
                                               smax64(np.int64(1), m_27371))
          elements_per_thread_44616 = sdiv_up64(i32_res_27380,
                                                (segred_group_sizze_31800 * groups_per_segment_44615))
          virt_num_groups_44617 = (groups_per_segment_44615 * m_27371)
          num_threads_44618 = (num_groups_31801 * segred_group_sizze_31800)
          threads_per_segment_44619 = (groups_per_segment_44615 * segred_group_sizze_31800)
          group_res_arr_mem_44620 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31800 * virt_num_groups_44617)),
                                                 "group_res_arr_mem_44620")
          mainDetailedzicounter_mem_44622 = self.mainDetailedzicounter_mem_44622
          if ((1 * (np.long(num_groups_31801) * np.long(segred_group_sizze_31800))) != 0):
            self.mainDetailedzisegred_large_31754_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31800))),
                                                               np.int64(N_27370),
                                                               np.int64(i32_res_27380),
                                                               np.int64(num_groups_31801),
                                                               np.int64(groups_per_segment_44615),
                                                               np.int64(elements_per_thread_44616),
                                                               np.int64(virt_num_groups_44617),
                                                               np.int64(threads_per_segment_44619),
                                                               defunc_4_map_res_mem_43335,
                                                               mem_43389,
                                                               mem_43392,
                                                               group_res_arr_mem_44620,
                                                               mainDetailedzicounter_mem_44622)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31754_var,
                                       ((np.long(num_groups_31801) * np.long(segred_group_sizze_31800)),),
                                       (np.long(segred_group_sizze_31800),))
            if synchronous:
              sync(self)
        segmap_usable_groups_31817 = sdiv_up64(m_27371,
                                               segmap_group_sizze_31816)
        mem_43395 = opencl_alloc(self, bytes_43309, "mem_43395")
        mem_43397 = opencl_alloc(self, bytes_43309, "mem_43397")
        if ((1 * (np.long(segmap_usable_groups_31817) * np.long(segmap_group_sizze_31816))) != 0):
          self.mainDetailedzisegmap_31731_var.set_args(self.global_failure,
                                                       np.int64(m_27371),
                                                       np.float32(hfrac_27376),
                                                       np.int32(k2p2_27382),
                                                       mem_43389, mem_43392,
                                                       mem_43395, mem_43397)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_31731_var,
                                     ((np.long(segmap_usable_groups_31817) * np.long(segmap_group_sizze_31816)),),
                                     (np.long(segmap_group_sizze_31816),))
          if synchronous:
            sync(self)
        mem_43392 = None
        defunc_3_map_res_mem_43398 = mem_43395
        defunc_3_map_res_mem_43399 = mem_43389
        defunc_3_map_res_mem_43400 = mem_43397
      defunc_3_map_res_mem_43401 = defunc_3_map_res_mem_43398
      defunc_3_map_res_mem_43402 = defunc_3_map_res_mem_43399
      defunc_3_map_res_mem_43403 = defunc_3_map_res_mem_43400
    segred_group_sizze_31837 = self.sizes["mainDetailed.segred_group_size_31836"]
    max_num_groups_44661 = self.sizes["mainDetailed.segred_num_groups_31838"]
    num_groups_31839 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27371,
                                                            segred_group_sizze_31837),
                                                  sext_i32_i64(max_num_groups_44661))))
    mem_43406 = opencl_alloc(self, np.int64(4), "mem_43406")
    mainDetailedzicounter_mem_44662 = self.mainDetailedzicounter_mem_44662
    group_res_arr_mem_44664 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_31837 * num_groups_31839)),
                                           "group_res_arr_mem_44664")
    num_threads_44666 = (num_groups_31839 * segred_group_sizze_31837)
    if ((1 * (np.long(num_groups_31839) * np.long(segred_group_sizze_31837))) != 0):
      self.mainDetailedzisegred_nonseg_31844_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31837))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_27371),
                                                          np.int64(num_groups_31839),
                                                          np.int64(num_threads_44666),
                                                          defunc_3_map_res_mem_43401,
                                                          mem_43406,
                                                          mainDetailedzicounter_mem_44662,
                                                          group_res_arr_mem_44664)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_31844_var,
                                 ((np.long(num_groups_31839) * np.long(segred_group_sizze_31837)),),
                                 (np.long(segred_group_sizze_31837),))
      if synchronous:
        sync(self)
    read_res_45039 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45039, mem_43406,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_27736 = read_res_45039[0]
    mem_43406 = None
    i32_res_27741 = sext_i32_i64(defunc_2_reduce_comm_res_27736)
    bounds_invalid_upwards_27742 = slt64(i32_res_27741, np.int64(0))
    valid_27743 = not(bounds_invalid_upwards_27742)
    range_valid_c_27744 = True
    assert valid_27743, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:102:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:97:17-104:24\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_27741,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_31876 = (self.sizes["mainDetailed.suff_outer_par_31"] <= m_27371)
    segmap_group_sizze_31899 = self.sizes["mainDetailed.segmap_group_size_31880"]
    nest_sizze_31942 = (m_27371 * i32_res_27741)
    segred_group_sizze_31943 = self.sizes["mainDetailed.segred_group_size_31920"]
    max_num_groups_44692 = self.sizes["mainDetailed.segred_num_groups_31922"]
    num_groups_31944 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31942,
                                                            segred_group_sizze_31943),
                                                  sext_i32_i64(max_num_groups_44692))))
    bytes_43409 = (np.int64(4) * segmap_group_sizze_31899)
    local_memory_capacity_44763 = self.max_local_memory
    if (sle64(((bytes_43409 + srem64((np.int64(8) - srem64(bytes_43409,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43409 + srem64((np.int64(8) - srem64(bytes_43409,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44763)) and suff_outer_par_31876):
      segmap_usable_groups_31900 = sdiv_up64(m_27371, segmap_group_sizze_31899)
      num_whole_tiles_42268 = squot64(i32_res_27741, segmap_group_sizze_31899)
      residual_input_42367 = srem64(i32_res_27741, segmap_group_sizze_31899)
      cond_42368 = (residual_input_42367 == np.int64(0))
      mem_43432 = opencl_alloc(self, bytes_43309, "mem_43432")
      if ((1 * (np.long(segmap_usable_groups_31900) * np.long(segmap_group_sizze_31899))) != 0):
        self.mainDetailedzisegmap_intragroup_42248_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43409)),
                                                                cl.LocalMemory(np.long(bytes_43409)),
                                                                np.int64(N_27370),
                                                                np.int64(m_27371),
                                                                np.int64(i32_res_27741),
                                                                np.int64(num_whole_tiles_42268),
                                                                np.int64(residual_input_42367),
                                                                np.byte(cond_42368),
                                                                defunc_4_map_res_mem_43335,
                                                                defunc_3_map_res_mem_43401,
                                                                defunc_3_map_res_mem_43402,
                                                                mem_43432)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42248_var,
                                   ((np.long(segmap_usable_groups_31900) * np.long(segmap_group_sizze_31899)),),
                                   (np.long(segmap_group_sizze_31899),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43436 = mem_43432
    else:
      mem_43435 = opencl_alloc(self, bytes_43309, "mem_43435")
      if slt64((i32_res_27741 * np.int64(2)), segred_group_sizze_31943):
        segment_sizze_nonzzero_44703 = smax64(np.int64(1), i32_res_27741)
        num_threads_44704 = (num_groups_31944 * segred_group_sizze_31943)
        if ((1 * (np.long(num_groups_31944) * np.long(segred_group_sizze_31943))) != 0):
          self.mainDetailedzisegred_small_31926_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31943))),
                                                             np.int64(N_27370),
                                                             np.int64(m_27371),
                                                             np.int64(i32_res_27741),
                                                             np.int64(num_groups_31944),
                                                             np.int64(segment_sizze_nonzzero_44703),
                                                             defunc_4_map_res_mem_43335,
                                                             defunc_3_map_res_mem_43401,
                                                             defunc_3_map_res_mem_43402,
                                                             mem_43435)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_31926_var,
                                     ((np.long(num_groups_31944) * np.long(segred_group_sizze_31943)),),
                                     (np.long(segred_group_sizze_31943),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44724 = sdiv_up64(num_groups_31944,
                                             smax64(np.int64(1), m_27371))
        elements_per_thread_44725 = sdiv_up64(i32_res_27741,
                                              (segred_group_sizze_31943 * groups_per_segment_44724))
        virt_num_groups_44726 = (groups_per_segment_44724 * m_27371)
        num_threads_44727 = (num_groups_31944 * segred_group_sizze_31943)
        threads_per_segment_44728 = (groups_per_segment_44724 * segred_group_sizze_31943)
        group_res_arr_mem_44729 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_31943 * virt_num_groups_44726)),
                                               "group_res_arr_mem_44729")
        mainDetailedzicounter_mem_44731 = self.mainDetailedzicounter_mem_44731
        if ((1 * (np.long(num_groups_31944) * np.long(segred_group_sizze_31943))) != 0):
          self.mainDetailedzisegred_large_31926_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31943))),
                                                             np.int64(N_27370),
                                                             np.int64(i32_res_27741),
                                                             np.int64(num_groups_31944),
                                                             np.int64(groups_per_segment_44724),
                                                             np.int64(elements_per_thread_44725),
                                                             np.int64(virt_num_groups_44726),
                                                             np.int64(threads_per_segment_44728),
                                                             defunc_4_map_res_mem_43335,
                                                             defunc_3_map_res_mem_43401,
                                                             defunc_3_map_res_mem_43402,
                                                             mem_43435,
                                                             group_res_arr_mem_44729,
                                                             mainDetailedzicounter_mem_44731)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_31926_var,
                                     ((np.long(num_groups_31944) * np.long(segred_group_sizze_31943)),),
                                     (np.long(segred_group_sizze_31943),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43436 = mem_43435
    iota32_arg_27766 = (N_27370 - i32_res_27380)
    bounds_invalid_upwards_27767 = slt64(iota32_arg_27766, np.int64(0))
    valid_27768 = not(bounds_invalid_upwards_27767)
    range_valid_c_27769 = True
    assert valid_27768, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:110:22-35\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_27766,
                                                                                                                                                                                                                                      " is invalid."))
    x_27771 = (np.int32(1) + n_27374)
    i_27772 = (n_27374 - np.int32(1))
    i_27773 = sext_i32_i64(i_27772)
    x_27774 = sle64(np.int64(0), i_27773)
    y_27775 = slt64(i_27773, N_27370)
    bounds_check_27776 = (x_27774 and y_27775)
    index_certs_27777 = True
    assert bounds_check_27776, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:108:64-84\n   #1  bfastfinal.fut:106:15-110:36\n   #2  bfastfinal.fut:175:3-56\n   #3  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                                                                 i_27773,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27370,
                                                                                                                                                                                                                 "]."))
    read_res_45041 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45041, mappingindices_mem_42537,
                    device_offset=(np.long(i_27773) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_27778 = read_res_45041[0]
    i32_res_27779 = sitofp_i32_f32(r32_arg_27778)
    segmap_group_sizze_32020 = self.sizes["mainDetailed.segmap_group_size_32003"]
    segmap_usable_groups_32021 = sdiv_up64(iota32_arg_27766,
                                           segmap_group_sizze_32020)
    bytes_43438 = (np.int64(4) * iota32_arg_27766)
    mem_43439 = opencl_alloc(self, bytes_43438, "mem_43439")
    if ((1 * (np.long(segmap_usable_groups_32021) * np.long(segmap_group_sizze_32020))) != 0):
      self.mainDetailedzisegmap_32001_var.set_args(self.global_failure,
                                                   np.float32(lam_27377),
                                                   np.int64(iota32_arg_27766),
                                                   np.int32(x_27771),
                                                   np.float32(i32_res_27779),
                                                   mappingindices_mem_42537,
                                                   mem_43439)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32001_var,
                                 ((np.long(segmap_usable_groups_32021) * np.long(segmap_group_sizze_32020)),),
                                 (np.long(segmap_group_sizze_32020),))
      if synchronous:
        sync(self)
    iota32_arg_27794 = (N_27370 - i32_res_27380)
    bounds_invalid_upwards_27795 = slt64(iota32_arg_27794, np.int64(0))
    valid_27796 = not(bounds_invalid_upwards_27795)
    range_valid_c_27797 = True
    assert valid_27796, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:120:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_27794,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    max_res_27802 = smax64(np.int64(1), iota32_arg_27794)
    bounds_invalid_upwards_27803 = slt64(max_res_27802, np.int64(1))
    distance_27804 = (max_res_27802 - np.int64(1))
    valid_27805 = not(bounds_invalid_upwards_27803)
    range_valid_c_27806 = True
    assert valid_27805, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_27802,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    dim_match_27807 = (iota32_arg_27766 == iota32_arg_27794)
    empty_or_match_cert_27808 = True
    assert dim_match_27807, ("Error: %s\n\nBacktrace:\n-> #0  unknown location\n   #1  bfastfinal.fut:117:13-122:42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:115:20-132:9\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n" % ("Function return value does not match shape of declared return type.",))
    segmap_group_sizze_32469 = self.sizes["mainDetailed.segmap_group_size_32462"]
    segmap_usable_groups_32470 = sdiv_up64(m_27371, segmap_group_sizze_32469)
    mem_43442 = opencl_alloc(self, bytes_43309, "mem_43442")
    if ((1 * (np.long(segmap_usable_groups_32470) * np.long(segmap_group_sizze_32469))) != 0):
      self.mainDetailedzisegmap_32460_var.set_args(self.global_failure,
                                                   np.int64(m_27371),
                                                   defunc_4_map_res_mem_43334,
                                                   defunc_3_map_res_mem_43402,
                                                   mem_43442)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32460_var,
                                 ((np.long(segmap_usable_groups_32470) * np.long(segmap_group_sizze_32469)),),
                                 (np.long(segmap_group_sizze_32469),))
      if synchronous:
        sync(self)
    nest_sizze_32483 = (m_27371 * iota32_arg_27794)
    segmap_group_sizze_32484 = self.sizes["mainDetailed.segmap_group_size_32405"]
    segmap_usable_groups_32485 = sdiv_up64(nest_sizze_32483,
                                           segmap_group_sizze_32484)
    bytes_43444 = (np.int64(4) * nest_sizze_32483)
    mem_43446 = opencl_alloc(self, bytes_43444, "mem_43446")
    if ((1 * (np.long(segmap_usable_groups_32485) * np.long(segmap_group_sizze_32484))) != 0):
      self.mainDetailedzisegmap_32402_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(N_27370),
                                                   np.int64(m_27371),
                                                   np.int64(iota32_arg_27794),
                                                   defunc_4_map_res_mem_43335,
                                                   defunc_3_map_res_mem_43402,
                                                   mem_43442, mem_43446)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32402_var,
                                 ((np.long(segmap_usable_groups_32485) * np.long(segmap_group_sizze_32484)),),
                                 (np.long(segmap_group_sizze_32484),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_32513 = self.sizes["mainDetailed.segmap_group_size_32283"]
    segmap_usable_groups_32514 = sdiv_up64(m_27371, segmap_group_sizze_32513)
    mem_43449 = opencl_alloc(self, bytes_43444, "mem_43449")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43449, np.int64(0),
                                                mem_43446, np.int64(0),
                                                np.int64(1), iota32_arg_27794,
                                                m_27371)
    mem_43446 = None
    mem_43480 = opencl_alloc(self, bytes_43309, "mem_43480")
    bytes_43459 = (np.int64(4) * iota32_arg_27794)
    num_threads_43724 = (segmap_group_sizze_32513 * segmap_usable_groups_32514)
    total_sizze_43725 = (bytes_43459 * num_threads_43724)
    mem_43460 = opencl_alloc(self, total_sizze_43725, "mem_43460")
    if ((1 * (np.long(segmap_usable_groups_32514) * np.long(segmap_group_sizze_32513))) != 0):
      self.mainDetailedzisegmap_32281_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(m_27371),
                                                   np.int64(iota32_arg_27766),
                                                   np.int64(iota32_arg_27794),
                                                   np.int64(distance_27804),
                                                   np.int64(segmap_usable_groups_32514),
                                                   defunc_4_map_res_mem_43334,
                                                   defunc_3_map_res_mem_43402,
                                                   mem_43442, mem_43449,
                                                   mem_43460, mem_43480)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32281_var,
                                 ((np.long(segmap_usable_groups_32514) * np.long(segmap_group_sizze_32513)),),
                                 (np.long(segmap_group_sizze_32513),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_43442 = None
    mem_43449 = None
    mem_43460 = None
    empty_or_match_cert_27914 = True
    assert dim_match_27807, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:147:17-150:51\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:137:38-165:9\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("function arguments of wrong shape",))
    dim_match_27915 = (iota32_arg_27794 == iota32_arg_27766)
    empty_or_match_cert_27916 = True
    assert dim_match_27915, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:163:24-88\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:137:38-165:9\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("function arguments of wrong shape",))
    empty_or_match_cert_27917 = True
    assert dim_match_27807, ("Error: %s\n\nBacktrace:\n-> #0  unknown location\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:137:38-165:9\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("Function return value does not match shape of declared return type.",))
    suff_outer_par_32625 = (self.sizes["mainDetailed.suff_outer_par_37"] <= m_27371)
    intra_avail_par_32635 = smin64(iota32_arg_27766, iota32_arg_27794)
    computed_group_sizze_32628 = smax64(iota32_arg_27766, iota32_arg_27794)
    fits_32836 = sle64(computed_group_sizze_32628, max_group_sizze_30227)
    suff_intra_par_32834 = (self.sizes["mainDetailed.suff_intra_par_38"] <= intra_avail_par_32635)
    intra_suff_and_fits_32837 = (suff_intra_par_32834 and fits_32836)
    segmap_group_sizze_32736 = self.sizes["mainDetailed.segmap_group_size_32640"]
    max_num_groups_44789 = self.sizes["mainDetailed.segmap_num_groups_32642"]
    num_groups_32737 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27371,
                                                            segmap_group_sizze_32736),
                                                  sext_i32_i64(max_num_groups_44789))))
    segmap_group_sizze_33114 = self.sizes["mainDetailed.segmap_group_size_33107"]
    segscan_group_sizze_33122 = self.sizes["mainDetailed.segscan_group_size_33076"]
    max_num_groups_44790 = self.sizes["mainDetailed.segscan_num_groups_33078"]
    num_groups_33123 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32483,
                                                            segscan_group_sizze_33122),
                                                  sext_i32_i64(max_num_groups_44790))))
    segmap_group_sizze_33148 = self.sizes["mainDetailed.segmap_group_size_33065"]
    nest_sizze_33158 = (m_27371 * iota32_arg_27766)
    segred_group_sizze_33159 = self.sizes["mainDetailed.segred_group_size_33025"]
    max_num_groups_44791 = self.sizes["mainDetailed.segred_num_groups_33027"]
    num_groups_33160 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33158,
                                                            segred_group_sizze_33159),
                                                  sext_i32_i64(max_num_groups_44791))))
    segmap_group_sizze_33196 = self.sizes["mainDetailed.segmap_group_size_32993"]
    segmap_group_sizze_33241 = self.sizes["mainDetailed.segmap_group_size_32941"]
    bytes_43524 = (np.int64(4) * nest_sizze_33158)
    local_memory_capacity_44792 = self.max_local_memory
    if intra_suff_and_fits_32837:
      defunc_0_f_res_ixfn_43583 = iota32_arg_27766
    else:
      defunc_0_f_res_ixfn_43583 = iota32_arg_27794
    num_threads_43726 = (segmap_group_sizze_32736 * num_groups_32737)
    total_sizze_43727 = (bytes_43459 * num_threads_43726)
    total_sizze_43728 = (bytes_43438 * num_threads_43726)
    total_sizze_43729 = (bytes_43459 * num_threads_43726)
    local_memory_capacity_45016 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45016)) and suff_outer_par_32625):
      mem_43526 = opencl_alloc(self, bytes_43524, "mem_43526")
      mem_43529 = opencl_alloc(self, bytes_43524, "mem_43529")
      mem_43531 = opencl_alloc(self, bytes_43309, "mem_43531")
      mem_43533 = opencl_alloc(self, bytes_43309, "mem_43533")
      mem_43483 = opencl_alloc(self, total_sizze_43727, "mem_43483")
      mem_43497 = opencl_alloc(self, total_sizze_43728, "mem_43497")
      mem_43511 = opencl_alloc(self, total_sizze_43729, "mem_43511")
      if ((1 * (np.long(num_groups_32737) * np.long(segmap_group_sizze_32736))) != 0):
        self.mainDetailedzisegmap_32638_var.set_args(self.global_failure,
                                                     np.int64(N_27370),
                                                     np.int64(m_27371),
                                                     np.int32(n_27374),
                                                     np.int64(iota32_arg_27766),
                                                     np.int64(iota32_arg_27794),
                                                     np.int64(num_groups_32737),
                                                     defunc_4_map_res_mem_43334,
                                                     defunc_4_map_res_mem_43335,
                                                     defunc_4_map_res_mem_43336,
                                                     defunc_3_map_res_mem_43401,
                                                     defunc_3_map_res_mem_43402,
                                                     defunc_3_map_res_mem_43403,
                                                     defunc_0_f_res_mem_43436,
                                                     mem_43439, mem_43483,
                                                     mem_43497, mem_43511,
                                                     mem_43526, mem_43529,
                                                     mem_43531, mem_43533)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32638_var,
                                   ((np.long(num_groups_32737) * np.long(segmap_group_sizze_32736)),),
                                   (np.long(segmap_group_sizze_32736),))
        if synchronous:
          sync(self)
      mem_43483 = None
      mem_43497 = None
      mem_43511 = None
      mem_43590 = opencl_alloc(self, bytes_43524, "mem_43590")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43590, np.int64(0),
                                                  mem_43526, np.int64(0),
                                                  np.int64(1), m_27371,
                                                  iota32_arg_27766)
      mem_43526 = None
      mem_43594 = opencl_alloc(self, bytes_43524, "mem_43594")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43594, np.int64(0),
                                                  mem_43529, np.int64(0),
                                                  np.int64(1), m_27371,
                                                  iota32_arg_27766)
      mem_43529 = None
      defunc_0_f_res_mem_43600 = mem_43590
      defunc_0_f_res_mem_43601 = mem_43594
      defunc_0_f_res_mem_43602 = mem_43531
      defunc_0_f_res_mem_43603 = mem_43533
    else:
      local_memory_capacity_45015 = self.max_local_memory
      if (sle64(((((((bytes_43459 + srem64((np.int64(8) - srem64(bytes_43459,
                                                                 np.int64(8))),
                                           np.int64(8))) + (bytes_43438 + srem64((np.int64(8) - srem64(bytes_43438,
                                                                                                       np.int64(8))),
                                                                                 np.int64(8)))) + ((np.int32(1) * iota32_arg_27766) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_27766),
                                                                                                                                                                   np.int64(8))),
                                                                                                                                             np.int64(8)))) + ((np.int32(4) * iota32_arg_27766) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_27766),
                                                                                                                                                                                                                               np.int64(8))),
                                                                                                                                                                                                         np.int64(8)))) + ((np.int32(4) * iota32_arg_27766) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_27766),
                                                                                                                                                                                                                                                                                           np.int64(8))),
                                                                                                                                                                                                                                                                     np.int64(8)))) + (bytes_43459 + srem64((np.int64(8) - srem64(bytes_43459,
                                                                                                                                                                                                                                                                                                                                  np.int64(8))),
                                                                                                                                                                                                                                                                                                            np.int64(8)))),
                sext_i32_i64(local_memory_capacity_45015)) and intra_suff_and_fits_32837):
        mem_43546 = opencl_alloc(self, bytes_43524, "mem_43546")
        mem_43549 = opencl_alloc(self, bytes_43524, "mem_43549")
        mem_43551 = opencl_alloc(self, bytes_43309, "mem_43551")
        mem_43553 = opencl_alloc(self, bytes_43309, "mem_43553")
        if ((1 * (np.long(m_27371) * np.long(computed_group_sizze_32628))) != 0):
          self.mainDetailedzisegmap_intragroup_32636_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43459)),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27766))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27766))),
                                                                  cl.LocalMemory(np.long((np.int32(1) * iota32_arg_27766))),
                                                                  cl.LocalMemory(np.long(bytes_43438)),
                                                                  cl.LocalMemory(np.long(bytes_43459)),
                                                                  np.int64(N_27370),
                                                                  np.int32(n_27374),
                                                                  np.int64(iota32_arg_27766),
                                                                  np.int64(iota32_arg_27794),
                                                                  np.int64(computed_group_sizze_32628),
                                                                  defunc_4_map_res_mem_43334,
                                                                  defunc_4_map_res_mem_43335,
                                                                  defunc_4_map_res_mem_43336,
                                                                  defunc_3_map_res_mem_43401,
                                                                  defunc_3_map_res_mem_43402,
                                                                  defunc_3_map_res_mem_43403,
                                                                  defunc_0_f_res_mem_43436,
                                                                  mem_43439,
                                                                  mem_43546,
                                                                  mem_43549,
                                                                  mem_43551,
                                                                  mem_43553)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_32636_var,
                                     ((np.long(m_27371) * np.long(computed_group_sizze_32628)),),
                                     (np.long(computed_group_sizze_32628),))
          if synchronous:
            sync(self)
        defunc_0_f_res_mem_43584 = mem_43546
        defunc_0_f_res_mem_43585 = mem_43549
        defunc_0_f_res_mem_43586 = mem_43551
        defunc_0_f_res_mem_43587 = mem_43553
      else:
        segmap_usable_groups_33115 = sdiv_up64(m_27371,
                                               segmap_group_sizze_33114)
        mem_43556 = opencl_alloc(self, bytes_43309, "mem_43556")
        if ((1 * (np.long(segmap_usable_groups_33115) * np.long(segmap_group_sizze_33114))) != 0):
          self.mainDetailedzisegmap_33105_var.set_args(self.global_failure,
                                                       np.int64(m_27371),
                                                       defunc_4_map_res_mem_43334,
                                                       defunc_3_map_res_mem_43402,
                                                       mem_43556)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_33105_var,
                                     ((np.long(segmap_usable_groups_33115) * np.long(segmap_group_sizze_33114)),),
                                     (np.long(segmap_group_sizze_33114),))
          if synchronous:
            sync(self)
        mem_43560 = opencl_alloc(self, bytes_43444, "mem_43560")
        if slt64(np.int64(0), (m_27371 * iota32_arg_27794)):
          stage1_max_num_groups_44846 = self.max_group_size
          stage1_num_groups_44847 = smin64(stage1_max_num_groups_44846,
                                           num_groups_33123)
          num_threads_44848 = sext_i64_i32((stage1_num_groups_44847 * segscan_group_sizze_33122))
          if ((1 * (np.long(stage1_num_groups_44847) * np.long(segscan_group_sizze_33122))) != 0):
            self.mainDetailedziscan_stage1_33082_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * segscan_group_sizze_33122)))),
                                                              np.int64(N_27370),
                                                              np.int64(m_27371),
                                                              np.int64(iota32_arg_27794),
                                                              np.int32(num_threads_44848),
                                                              defunc_4_map_res_mem_43335,
                                                              defunc_3_map_res_mem_43401,
                                                              defunc_3_map_res_mem_43402,
                                                              defunc_0_f_res_mem_43436,
                                                              mem_43556,
                                                              mem_43560)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage1_33082_var,
                                       ((np.long(stage1_num_groups_44847) * np.long(segscan_group_sizze_33122)),),
                                       (np.long(segscan_group_sizze_33122),))
            if synchronous:
              sync(self)
          if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44847))) != 0):
            self.mainDetailedziscan_stage2_33082_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * stage1_num_groups_44847)))),
                                                              np.int64(m_27371),
                                                              np.int64(iota32_arg_27794),
                                                              np.int64(stage1_num_groups_44847),
                                                              np.int32(num_threads_44848),
                                                              mem_43560)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage2_33082_var,
                                       ((np.long(np.int64(1)) * np.long(stage1_num_groups_44847)),),
                                       (np.long(stage1_num_groups_44847),))
            if synchronous:
              sync(self)
          required_groups_44890 = sext_i64_i32(sdiv_up64((m_27371 * iota32_arg_27794),
                                                         segscan_group_sizze_33122))
          if ((1 * (np.long(num_groups_33123) * np.long(segscan_group_sizze_33122))) != 0):
            self.mainDetailedziscan_stage3_33082_var.set_args(self.global_failure,
                                                              np.int64(m_27371),
                                                              np.int64(iota32_arg_27794),
                                                              np.int64(num_groups_33123),
                                                              np.int32(num_threads_44848),
                                                              np.int32(required_groups_44890),
                                                              mem_43560)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage3_33082_var,
                                       ((np.long(num_groups_33123) * np.long(segscan_group_sizze_33122)),),
                                       (np.long(segscan_group_sizze_33122),))
            if synchronous:
              sync(self)
        segmap_usable_groups_33149 = sdiv_up64(m_27371,
                                               segmap_group_sizze_33148)
        mem_43563 = opencl_alloc(self, bytes_43309, "mem_43563")
        if ((1 * (np.long(segmap_usable_groups_33149) * np.long(segmap_group_sizze_33148))) != 0):
          self.mainDetailedzisegmap_33063_var.set_args(self.global_failure,
                                                       np.int64(m_27371),
                                                       defunc_3_map_res_mem_43402,
                                                       defunc_3_map_res_mem_43403,
                                                       mem_43563)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_33063_var,
                                     ((np.long(segmap_usable_groups_33149) * np.long(segmap_group_sizze_33148)),),
                                     (np.long(segmap_group_sizze_33148),))
          if synchronous:
            sync(self)
        mem_43566 = opencl_alloc(self, m_27371, "mem_43566")
        mem_43568 = opencl_alloc(self, bytes_43309, "mem_43568")
        mem_43570 = opencl_alloc(self, bytes_43309, "mem_43570")
        mem_43573 = opencl_alloc(self, bytes_43524, "mem_43573")
        if slt64((iota32_arg_27766 * np.int64(2)), segred_group_sizze_33159):
          segment_sizze_nonzzero_44907 = smax64(np.int64(1), iota32_arg_27766)
          num_threads_44908 = (num_groups_33160 * segred_group_sizze_33159)
          if ((1 * (np.long(num_groups_33160) * np.long(segred_group_sizze_33159))) != 0):
            self.mainDetailedzisegred_small_33031_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33159))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33159))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33159))),
                                                               np.int64(m_27371),
                                                               np.int64(iota32_arg_27766),
                                                               np.int64(iota32_arg_27794),
                                                               np.int64(num_groups_33160),
                                                               np.int64(segment_sizze_nonzzero_44907),
                                                               mem_43439,
                                                               mem_43556,
                                                               mem_43560,
                                                               mem_43563,
                                                               mem_43566,
                                                               mem_43568,
                                                               mem_43570,
                                                               mem_43573)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33031_var,
                                       ((np.long(num_groups_33160) * np.long(segred_group_sizze_33159)),),
                                       (np.long(segred_group_sizze_33159),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44943 = sdiv_up64(num_groups_33160,
                                               smax64(np.int64(1), m_27371))
          elements_per_thread_44944 = sdiv_up64(iota32_arg_27766,
                                                (segred_group_sizze_33159 * groups_per_segment_44943))
          virt_num_groups_44945 = (groups_per_segment_44943 * m_27371)
          num_threads_44946 = (num_groups_33160 * segred_group_sizze_33159)
          threads_per_segment_44947 = (groups_per_segment_44943 * segred_group_sizze_33159)
          group_res_arr_mem_44948 = opencl_alloc(self,
                                                 (np.int32(1) * (segred_group_sizze_33159 * virt_num_groups_44945)),
                                                 "group_res_arr_mem_44948")
          group_res_arr_mem_44950 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33159 * virt_num_groups_44945)),
                                                 "group_res_arr_mem_44950")
          group_res_arr_mem_44952 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33159 * virt_num_groups_44945)),
                                                 "group_res_arr_mem_44952")
          mainDetailedzicounter_mem_44954 = self.mainDetailedzicounter_mem_44954
          if ((1 * (np.long(num_groups_33160) * np.long(segred_group_sizze_33159))) != 0):
            self.mainDetailedzisegred_large_33031_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33159))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33159))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33159))),
                                                               np.int64(iota32_arg_27766),
                                                               np.int64(iota32_arg_27794),
                                                               np.int64(num_groups_33160),
                                                               np.int64(groups_per_segment_44943),
                                                               np.int64(elements_per_thread_44944),
                                                               np.int64(virt_num_groups_44945),
                                                               mem_43439,
                                                               mem_43556,
                                                               mem_43560,
                                                               mem_43563,
                                                               mem_43566,
                                                               mem_43568,
                                                               mem_43570,
                                                               mem_43573,
                                                               group_res_arr_mem_44948,
                                                               group_res_arr_mem_44950,
                                                               group_res_arr_mem_44952,
                                                               mainDetailedzicounter_mem_44954)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33031_var,
                                       ((np.long(num_groups_33160) * np.long(segred_group_sizze_33159)),),
                                       (np.long(segred_group_sizze_33159),))
            if synchronous:
              sync(self)
        mem_43560 = None
        mem_43563 = None
        segmap_usable_groups_33197 = sdiv_up64(m_27371,
                                               segmap_group_sizze_33196)
        mem_43576 = opencl_alloc(self, bytes_43309, "mem_43576")
        mem_43578 = opencl_alloc(self, bytes_43309, "mem_43578")
        if ((1 * (np.long(segmap_usable_groups_33197) * np.long(segmap_group_sizze_33196))) != 0):
          self.mainDetailedzisegmap_32991_var.set_args(self.global_failure,
                                                       np.int64(N_27370),
                                                       np.int64(m_27371),
                                                       np.int32(n_27374),
                                                       defunc_4_map_res_mem_43336,
                                                       defunc_3_map_res_mem_43402,
                                                       mem_43556, mem_43566,
                                                       mem_43568, mem_43570,
                                                       mem_43576, mem_43578)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32991_var,
                                     ((np.long(segmap_usable_groups_33197) * np.long(segmap_group_sizze_33196)),),
                                     (np.long(segmap_group_sizze_33196),))
          if synchronous:
            sync(self)
        mem_43566 = None
        mem_43568 = None
        mem_43570 = None
        mem_43581 = opencl_alloc(self, bytes_43444, "mem_43581")
        self.futhark_builtinzhreplicate_f32(mem_43581,
                                            (m_27371 * iota32_arg_27794),
                                            np.nan)
        segmap_usable_groups_33242 = sdiv_up64(nest_sizze_32483,
                                               segmap_group_sizze_33241)
        if ((1 * (np.long(segmap_usable_groups_33242) * np.long(segmap_group_sizze_33241))) != 0):
          self.mainDetailedzisegmap_32938_var.set_args(self.global_failure,
                                                       np.int64(N_27370),
                                                       np.int64(m_27371),
                                                       np.int32(n_27374),
                                                       np.int64(iota32_arg_27766),
                                                       np.int64(iota32_arg_27794),
                                                       defunc_4_map_res_mem_43336,
                                                       defunc_3_map_res_mem_43402,
                                                       mem_43556, mem_43573,
                                                       mem_43581)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32938_var,
                                     ((np.long(segmap_usable_groups_33242) * np.long(segmap_group_sizze_33241)),),
                                     (np.long(segmap_group_sizze_33241),))
          if synchronous:
            sync(self)
        mem_43556 = None
        defunc_0_f_res_mem_43584 = mem_43581
        defunc_0_f_res_mem_43585 = mem_43573
        defunc_0_f_res_mem_43586 = mem_43576
        defunc_0_f_res_mem_43587 = mem_43578
      mem_43598 = opencl_alloc(self, bytes_43524, "mem_43598")
      if (((m_27371 * iota32_arg_27766) * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_43598, defunc_0_f_res_mem_43584,
                        dest_offset=np.long(np.int64(0)),
                        src_offset=np.long(np.int64(0)),
                        byte_count=np.long(((m_27371 * iota32_arg_27766) * np.int32(4))))
      if synchronous:
        sync(self)
      defunc_0_f_res_mem_43584 = None
      defunc_0_f_res_mem_43600 = mem_43598
      defunc_0_f_res_mem_43601 = defunc_0_f_res_mem_43585
      defunc_0_f_res_mem_43602 = defunc_0_f_res_mem_43586
      defunc_0_f_res_mem_43603 = defunc_0_f_res_mem_43587
    defunc_4_map_res_mem_43336 = None
    defunc_3_map_res_mem_43401 = None
    out_arrsizze_43838 = iota32_arg_27766
    out_arrsizze_43840 = iota32_arg_27766
    out_arrsizze_43842 = iota32_arg_27766
    out_mem_43833 = defunc_0_f_res_mem_43436
    out_mem_43834 = defunc_4_map_res_mem_43334
    out_mem_43835 = defunc_3_map_res_mem_43402
    out_mem_43836 = defunc_3_map_res_mem_43403
    out_mem_43837 = defunc_0_f_res_mem_43600
    out_mem_43839 = defunc_0_f_res_mem_43601
    out_mem_43841 = mem_43439
    out_mem_43843 = defunc_0_f_res_mem_43602
    out_mem_43844 = defunc_0_f_res_mem_43603
    out_mem_43845 = mem_43480
    out_mem_43846 = defunc_4_map_res_mem_43335
    out_mem_43847 = defunc_3_map_res_mem_43297
    return (out_mem_43833, out_mem_43834, out_mem_43835, out_mem_43836,
            out_mem_43837, out_arrsizze_43838, out_mem_43839,
            out_arrsizze_43840, out_mem_43841, out_arrsizze_43842,
            out_mem_43843, out_mem_43844, out_mem_43845, out_mem_43846,
            out_mem_43847)
  def futhark_mainMagnitude(self, mappingindices_mem_42537, images_mem_42538,
                            N_28022, m_28023, trend_28024, k_28025, n_28026,
                            freq_28027, hfrac_28028, lam_28029):
    i32_res_28032 = sext_i32_i64(n_28026)
    x_28033 = (np.int32(2) * k_28025)
    k2p2_28034 = (np.int32(2) + x_28033)
    cond_28035 = slt32(np.int32(0), trend_28024)
    if cond_28035:
      k2p2zq_28036 = k2p2_28034
    else:
      k2p2zq_f_res_28037 = (k2p2_28034 - np.int32(1))
      k2p2zq_28036 = k2p2zq_f_res_28037
    i32_res_28038 = sext_i32_i64(k2p2zq_28036)
    binop_x_42541 = (N_28022 * i32_res_28038)
    bytes_42540 = (np.int64(4) * binop_x_42541)
    if cond_28035:
      bounds_invalid_upwards_28040 = slt64(i32_res_28038, np.int64(0))
      valid_28041 = not(bounds_invalid_upwards_28040)
      range_valid_c_28042 = True
      assert valid_28041, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:37\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28038,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_33429 = self.sizes["mainMagnitude.segmap_group_size_33359"]
      segmap_usable_groups_33430 = sdiv_up64(binop_x_42541,
                                             segmap_group_sizze_33429)
      mem_42542 = opencl_alloc(self, bytes_42540, "mem_42542")
      if ((1 * (np.long(segmap_usable_groups_33430) * np.long(segmap_group_sizze_33429))) != 0):
        self.mainMagnitudezisegmap_33356_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.float32(freq_28027),
                                                      np.int64(i32_res_28038),
                                                      mappingindices_mem_42537,
                                                      mem_42542)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33356_var,
                                   ((np.long(segmap_usable_groups_33430) * np.long(segmap_group_sizze_33429)),),
                                   (np.long(segmap_group_sizze_33429),))
        if synchronous:
          sync(self)
      binop_p_mem_42547 = mem_42542
    else:
      bounds_invalid_upwards_28066 = slt64(i32_res_28038, np.int64(0))
      valid_28067 = not(bounds_invalid_upwards_28066)
      range_valid_c_28068 = True
      assert valid_28067, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:37\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28038,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_33603 = self.sizes["mainMagnitude.segmap_group_size_33537"]
      segmap_usable_groups_33604 = sdiv_up64(binop_x_42541,
                                             segmap_group_sizze_33603)
      mem_42546 = opencl_alloc(self, bytes_42540, "mem_42546")
      if ((1 * (np.long(segmap_usable_groups_33604) * np.long(segmap_group_sizze_33603))) != 0):
        self.mainMagnitudezisegmap_33534_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.float32(freq_28027),
                                                      np.int64(i32_res_28038),
                                                      mappingindices_mem_42537,
                                                      mem_42546)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33534_var,
                                   ((np.long(segmap_usable_groups_33604) * np.long(segmap_group_sizze_33603)),),
                                   (np.long(segmap_group_sizze_33603),))
        if synchronous:
          sync(self)
      binop_p_mem_42547 = mem_42546
    x_28091 = (N_28022 * N_28022)
    y_28092 = (np.int64(2) * N_28022)
    x_28093 = (x_28091 + y_28092)
    x_28094 = (np.int64(1) + x_28093)
    y_28095 = (np.int64(1) + N_28022)
    zzero_28096 = (y_28095 == np.int64(0))
    nonzzero_28097 = not(zzero_28096)
    nonzzero_cert_28098 = True
    assert nonzzero_28097, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:37\n" % ("division by zero",))
    x_28099 = sdiv64(x_28094, y_28095)
    x_28100 = (x_28099 - N_28022)
    binop_p_28101 = (x_28100 - np.int64(1))
    defunc_0_f_res_28102 = sext_i64_i32(binop_p_28101)
    i32_res_28103 = sitofp_i32_f32(defunc_0_f_res_28102)
    segmap_group_sizze_33686 = self.sizes["mainMagnitude.segmap_group_size_33665"]
    segmap_usable_groups_33687 = sdiv_up64(binop_x_42541,
                                           segmap_group_sizze_33686)
    mem_42550 = opencl_alloc(self, bytes_42540, "mem_42550")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42550, np.int64(0),
                                                binop_p_mem_42547, np.int64(0),
                                                np.int64(1), N_28022,
                                                i32_res_28038)
    mem_42554 = opencl_alloc(self, bytes_42540, "mem_42554")
    if ((1 * (np.long(segmap_usable_groups_33687) * np.long(segmap_group_sizze_33686))) != 0):
      self.mainMagnitudezisegmap_33662_var.set_args(self.global_failure,
                                                    np.int64(N_28022),
                                                    np.int64(i32_res_28038),
                                                    np.float32(i32_res_28103),
                                                    mem_42550, mem_42554)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_33662_var,
                                 ((np.long(segmap_usable_groups_33687) * np.long(segmap_group_sizze_33686)),),
                                 (np.long(segmap_group_sizze_33686),))
      if synchronous:
        sync(self)
    eq_x_y_28111 = (np.int64(0) == i32_res_28038)
    p_and_eq_x_y_28112 = (cond_28035 and eq_x_y_28111)
    not_p_28113 = not(cond_28035)
    p_and_eq_x_y_28114 = (eq_x_y_28111 and not_p_28113)
    empty_slice_28115 = (p_and_eq_x_y_28112 or p_and_eq_x_y_28114)
    m_28116 = (i32_res_28038 - np.int64(1))
    zzero_leq_i_p_m_t_s_28117 = sle64(np.int64(0), m_28116)
    i_p_m_t_s_leq_w_28118 = slt64(m_28116, i32_res_28038)
    i_lte_j_28119 = sle64(np.int64(0), i32_res_28038)
    y_28120 = (zzero_leq_i_p_m_t_s_28117 and i_p_m_t_s_leq_w_28118)
    y_28121 = (i_lte_j_28119 and y_28120)
    ok_or_empty_28122 = (empty_slice_28115 or y_28121)
    empty_slice_28123 = (i32_res_28032 == np.int64(0))
    m_28124 = (i32_res_28032 - np.int64(1))
    zzero_leq_i_p_m_t_s_28125 = sle64(np.int64(0), m_28124)
    i_p_m_t_s_leq_w_28126 = slt64(m_28124, N_28022)
    i_lte_j_28127 = sle64(np.int64(0), i32_res_28032)
    y_28128 = (zzero_leq_i_p_m_t_s_28125 and i_p_m_t_s_leq_w_28126)
    y_28129 = (i_lte_j_28127 and y_28128)
    ok_or_empty_28130 = (empty_slice_28123 or y_28129)
    index_ok_28131 = (ok_or_empty_28122 and ok_or_empty_28130)
    index_certs_28132 = True
    assert index_ok_28131, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:37\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28032,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28038,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28022,
                                                                                                                                                                               "]."))
    empty_slice_28134 = (i32_res_28038 == np.int64(0))
    ok_or_empty_28135 = (y_28121 or empty_slice_28134)
    index_ok_28136 = (ok_or_empty_28130 and ok_or_empty_28135)
    index_certs_28137 = True
    assert index_ok_28136, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:37\n" % ("Index [:",
                                                                                                                                                                               i32_res_28032,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28022,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28038,
                                                                                                                                                                               "]."))
    empty_slice_28139 = (m_28023 == np.int64(0))
    m_28140 = (m_28023 - np.int64(1))
    zzero_leq_i_p_m_t_s_28141 = sle64(np.int64(0), m_28140)
    i_p_m_t_s_leq_w_28142 = slt64(m_28140, m_28023)
    i_lte_j_28143 = sle64(np.int64(0), m_28023)
    y_28144 = (zzero_leq_i_p_m_t_s_28141 and i_p_m_t_s_leq_w_28142)
    y_28145 = (i_lte_j_28143 and y_28144)
    ok_or_empty_28146 = (empty_slice_28139 or y_28145)
    index_ok_28147 = (ok_or_empty_28130 and ok_or_empty_28146)
    index_certs_28148 = True
    assert index_ok_28147, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:37\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28032,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28023,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28022,
                                                                                                                                                                               "]."))
    suff_outer_par_33693 = (self.sizes["mainMagnitude.suff_outer_par_6"] <= m_28023)
    segmap_group_sizze_33719 = self.sizes["mainMagnitude.segmap_group_size_33697"]
    max_num_groups_43852 = self.sizes["mainMagnitude.segmap_num_groups_33699"]
    num_groups_33720 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28023,
                                                            segmap_group_sizze_33719),
                                                  sext_i32_i64(max_num_groups_43852))))
    nest_sizze_33895 = (m_28023 * i32_res_28038)
    segmap_group_sizze_33896 = self.sizes["mainMagnitude.segmap_group_size_33744"]
    max_num_groups_43853 = self.sizes["mainMagnitude.segmap_num_groups_33746"]
    num_groups_33897 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33895,
                                                            segmap_group_sizze_33896),
                                                  sext_i32_i64(max_num_groups_43853))))
    suff_outer_par_33901 = (self.sizes["mainMagnitude.suff_outer_par_7"] <= nest_sizze_33895)
    y_33925 = (i32_res_28038 * i32_res_28038)
    comparatee_33926 = (m_28023 * y_33925)
    suff_outer_par_33927 = (self.sizes["mainMagnitude.suff_outer_par_8"] <= comparatee_33926)
    nest_sizze_33947 = (i32_res_28032 * comparatee_33926)
    segred_group_sizze_33948 = self.sizes["mainMagnitude.segred_group_size_33804"]
    max_num_groups_43854 = self.sizes["mainMagnitude.segred_num_groups_33806"]
    num_groups_33949 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33947,
                                                            segred_group_sizze_33948),
                                                  sext_i32_i64(max_num_groups_43854))))
    Tx_40716 = self.sizes["mainMagnitude.Tx_40714"]
    Ty_40717 = self.sizes["mainMagnitude.Ty_40715"]
    Ty_40718 = smin64(i32_res_28038, Ty_40717)
    Tx_40719 = smin64(i32_res_28038, Tx_40716)
    gridDim_zz_40722 = sdiv_up64(m_28023, np.int64(30))
    group_sizze_tile3d_40725 = (Ty_40718 * Tx_40719)
    binop_x_42556 = (N_28022 * m_28023)
    bytes_42555 = (np.int64(4) * binop_x_42556)
    bytes_42600 = (np.int64(4) * comparatee_33926)
    bytes_42559 = (np.int64(4) * y_33925)
    binop_x_42703 = (i32_res_28038 * nest_sizze_33895)
    bytes_42701 = (np.int64(4) * binop_x_42703)
    bytes_42605 = (np.int64(4) * i32_res_28038)
    binop_x_42634 = (np.int64(30) * group_sizze_tile3d_40725)
    bytes_42632 = (np.int64(4) * binop_x_42634)
    binop_x_43604 = (np.int64(4) * Ty_40718)
    binop_x_43605 = (Tx_40719 * binop_x_43604)
    sizze_43606 = (np.int64(30) * binop_x_43605)
    num_threads_43740 = (segmap_group_sizze_33719 * num_groups_33720)
    total_sizze_43741 = (bytes_42559 * num_threads_43740)
    num_threads_43742 = (segmap_group_sizze_33896 * num_groups_33897)
    total_sizze_43743 = (bytes_42605 * num_threads_43742)
    local_memory_capacity_43976 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_43976)) and suff_outer_par_33693):
      mem_42557 = opencl_alloc(self, bytes_42555, "mem_42557")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42557, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_28022, m_28023)
      mem_42603 = opencl_alloc(self, bytes_42600, "mem_42603")
      mem_42561 = opencl_alloc(self, total_sizze_43741, "mem_42561")
      if ((1 * (np.long(num_groups_33720) * np.long(segmap_group_sizze_33719))) != 0):
        self.mainMagnitudezisegmap_33695_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.int64(m_28023),
                                                      np.int32(n_28026),
                                                      np.int32(k2p2zq_28036),
                                                      np.int64(i32_res_28038),
                                                      np.int64(num_groups_33720),
                                                      binop_p_mem_42547,
                                                      mem_42554, mem_42557,
                                                      mem_42561, mem_42603)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33695_var,
                                   ((np.long(num_groups_33720) * np.long(segmap_group_sizze_33719)),),
                                   (np.long(segmap_group_sizze_33719),))
        if synchronous:
          sync(self)
      mem_42557 = None
      mem_42561 = None
      mem_42704 = opencl_alloc(self, bytes_42701, "mem_42704")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42704, np.int64(0),
                                                  mem_42603, np.int64(0),
                                                  np.int64(1), m_28023,
                                                  (i32_res_28038 * i32_res_28038))
      mem_42603 = None
      defunc_3_map_res_mem_42706 = mem_42704
    else:
      local_memory_capacity_43975 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_43975)) and suff_outer_par_33901):
        mem_42622 = opencl_alloc(self, bytes_42701, "mem_42622")
        mem_42606 = opencl_alloc(self, total_sizze_43743, "mem_42606")
        if ((1 * (np.long(num_groups_33897) * np.long(segmap_group_sizze_33896))) != 0):
          self.mainMagnitudezisegmap_33741_var.set_args(self.global_failure,
                                                        np.int64(N_28022),
                                                        np.int64(m_28023),
                                                        np.int32(n_28026),
                                                        np.int32(k2p2zq_28036),
                                                        np.int64(i32_res_28038),
                                                        np.int64(num_groups_33897),
                                                        images_mem_42538,
                                                        mem_42550, mem_42554,
                                                        mem_42606, mem_42622)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_33741_var,
                                     ((np.long(num_groups_33897) * np.long(segmap_group_sizze_33896)),),
                                     (np.long(segmap_group_sizze_33896),))
          if synchronous:
            sync(self)
        mem_42606 = None
        mem_42698 = opencl_alloc(self, bytes_42701, "mem_42698")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_42698, np.int64(0),
                                                    mem_42622, np.int64(0),
                                                    np.int64(1),
                                                    (m_28023 * i32_res_28038),
                                                    i32_res_28038)
        mem_42622 = None
        defunc_3_map_res_mem_42700 = mem_42698
      else:
        local_memory_capacity_43974 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_43974)) and suff_outer_par_33927):
          mem_42625 = opencl_alloc(self, bytes_42555, "mem_42625")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42625, np.int64(0),
                                                      images_mem_42538,
                                                      np.int64(0), np.int64(1),
                                                      N_28022, m_28023)
          gridDim_x_40720 = sdiv_up64(i32_res_28038, Tx_40719)
          gridDim_y_40721 = sdiv_up64(i32_res_28038, Ty_40718)
          binop_x_40723 = (gridDim_y_40721 * gridDim_zz_40722)
          grid_sizze_tile3d_40724 = (gridDim_x_40720 * binop_x_40723)
          count_shmem_40726 = sdiv_up64(np.int64(30), group_sizze_tile3d_40725)
          mem_42685 = opencl_alloc(self, bytes_42701, "mem_42685")
          if ((1 * (np.long(grid_sizze_tile3d_40724) * np.long(group_sizze_tile3d_40725))) != 0):
            self.mainMagnitudezisegmap_intragroup_40730_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(np.int64(120))),
                                                                     np.int64(m_28023),
                                                                     np.int32(n_28026),
                                                                     np.int64(i32_res_28038),
                                                                     np.int64(Ty_40718),
                                                                     np.int64(Tx_40719),
                                                                     np.int64(gridDim_x_40720),
                                                                     np.int64(gridDim_y_40721),
                                                                     np.int64(group_sizze_tile3d_40725),
                                                                     np.int64(count_shmem_40726),
                                                                     mem_42550,
                                                                     mem_42554,
                                                                     mem_42625,
                                                                     mem_42685)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_40730_var,
                                       ((np.long(grid_sizze_tile3d_40724) * np.long(group_sizze_tile3d_40725)),),
                                       (np.long(group_sizze_tile3d_40725),))
            if synchronous:
              sync(self)
          mem_42625 = None
          defunc_3_map_res_mem_42694 = mem_42685
        else:
          mem_42688 = opencl_alloc(self, bytes_42540, "mem_42688")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42688, np.int64(0),
                                                      mem_42554, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28038, N_28022)
          mem_42693 = opencl_alloc(self, bytes_42701, "mem_42693")
          if slt64((i32_res_28032 * np.int64(2)), segred_group_sizze_33948):
            segment_sizze_nonzzero_43914 = smax64(np.int64(1), i32_res_28032)
            num_threads_43915 = (num_groups_33949 * segred_group_sizze_33948)
            if ((1 * (np.long(num_groups_33949) * np.long(segred_group_sizze_33948))) != 0):
              self.mainMagnitudezisegred_small_33810_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33948))),
                                                                  np.int64(N_28022),
                                                                  np.int64(m_28023),
                                                                  np.int64(i32_res_28032),
                                                                  np.int64(i32_res_28038),
                                                                  np.int64(num_groups_33949),
                                                                  np.int64(segment_sizze_nonzzero_43914),
                                                                  images_mem_42538,
                                                                  binop_p_mem_42547,
                                                                  mem_42688,
                                                                  mem_42693)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_small_33810_var,
                                         ((np.long(num_groups_33949) * np.long(segred_group_sizze_33948)),),
                                         (np.long(segred_group_sizze_33948),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_43935 = sdiv_up64(num_groups_33949,
                                                 smax64(np.int64(1),
                                                        ((m_28023 * i32_res_28038) * i32_res_28038)))
            elements_per_thread_43936 = sdiv_up64(i32_res_28032,
                                                  (segred_group_sizze_33948 * groups_per_segment_43935))
            virt_num_groups_43937 = (groups_per_segment_43935 * ((m_28023 * i32_res_28038) * i32_res_28038))
            num_threads_43938 = (num_groups_33949 * segred_group_sizze_33948)
            threads_per_segment_43939 = (groups_per_segment_43935 * segred_group_sizze_33948)
            group_res_arr_mem_43940 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_33948 * virt_num_groups_43937)),
                                                   "group_res_arr_mem_43940")
            mainMagnitudezicounter_mem_43942 = self.mainMagnitudezicounter_mem_43942
            if ((1 * (np.long(num_groups_33949) * np.long(segred_group_sizze_33948))) != 0):
              self.mainMagnitudezisegred_large_33810_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33948))),
                                                                  np.int64(N_28022),
                                                                  np.int64(i32_res_28032),
                                                                  np.int64(i32_res_28038),
                                                                  np.int64(num_groups_33949),
                                                                  np.int64(groups_per_segment_43935),
                                                                  np.int64(elements_per_thread_43936),
                                                                  np.int64(virt_num_groups_43937),
                                                                  np.int64(threads_per_segment_43939),
                                                                  images_mem_42538,
                                                                  binop_p_mem_42547,
                                                                  mem_42688,
                                                                  mem_42693,
                                                                  group_res_arr_mem_43940,
                                                                  mainMagnitudezicounter_mem_43942)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_large_33810_var,
                                         ((np.long(num_groups_33949) * np.long(segred_group_sizze_33948)),),
                                         (np.long(segred_group_sizze_33948),))
              if synchronous:
                sync(self)
          mem_42688 = None
          defunc_3_map_res_mem_42694 = mem_42693
        defunc_3_map_res_mem_42700 = defunc_3_map_res_mem_42694
      defunc_3_map_res_mem_42706 = defunc_3_map_res_mem_42700
    m_28169 = (np.int32(2) * k2p2zq_28036)
    nm_28170 = (k2p2zq_28036 * m_28169)
    i32_res_28171 = sext_i32_i64(nm_28170)
    bounds_invalid_upwards_28172 = slt64(i32_res_28171, np.int64(0))
    valid_28173 = not(bounds_invalid_upwards_28172)
    range_valid_c_28174 = True
    assert valid_28173, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:37\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28171,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28179 = (m_28169 == np.int32(0))
    nonzzero_28180 = not(zzero_28179)
    nonzzero_cert_28181 = True
    assert nonzzero_28180, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:37\n" % ("division by zero",))
    loop_nonempty_28182 = slt32(np.int32(0), k2p2zq_28036)
    loop_not_taken_28183 = not(loop_nonempty_28182)
    protect_assert_disj_28184 = (nonzzero_28180 or loop_not_taken_28183)
    nonzzero_cert_28185 = True
    assert protect_assert_disj_28184, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:37\n" % ("division by zero",))
    i32_res_28186 = sext_i32_i64(m_28169)
    x_28187 = (i32_res_28038 * i32_res_28186)
    dim_ok_28188 = (x_28187 == i32_res_28171)
    dim_ok_cert_28189 = True
    assert dim_ok_28188, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:37\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28190 = (i32_res_28186 - i32_res_28038)
    empty_slice_28191 = (j_m_i_28190 == np.int64(0))
    m_28192 = (j_m_i_28190 - np.int64(1))
    i_p_m_t_s_28193 = (i32_res_28038 + m_28192)
    zzero_leq_i_p_m_t_s_28194 = sle64(np.int64(0), i_p_m_t_s_28193)
    i_p_m_t_s_leq_w_28195 = slt64(i_p_m_t_s_28193, i32_res_28186)
    i_lte_j_28196 = sle64(i32_res_28038, i32_res_28186)
    y_28197 = (i_lte_j_28119 and i_p_m_t_s_leq_w_28195)
    y_28198 = (zzero_leq_i_p_m_t_s_28194 and y_28197)
    y_28199 = (i_lte_j_28196 and y_28198)
    forwards_ok_28200 = (i_lte_j_28119 and y_28199)
    ok_or_empty_28201 = (empty_slice_28191 or forwards_ok_28200)
    index_ok_28202 = (ok_or_empty_28135 and ok_or_empty_28201)
    index_certs_28203 = True
    assert index_ok_28202, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:182:5-58\n   #3  bfastfinal.fut:177:1-183:37\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28038,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28038,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28186,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28038,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28186,
                                                                                                                                                                                                                   "]."))
    dim_match_28204 = (i32_res_28038 == j_m_i_28190)
    empty_or_match_cert_28205 = True
    assert dim_match_28204, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:182:5-58\n   #3  bfastfinal.fut:177:1-183:37\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28038,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28190,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28038,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28038,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_34163 = self.max_group_size
    fits_34164 = sle64(i32_res_28171, max_group_sizze_34163)
    suff_intra_par_34162 = (self.sizes["mainMagnitude.suff_intra_par_11"] <= i32_res_28171)
    intra_suff_and_fits_34165 = (suff_intra_par_34162 and fits_34164)
    nest_sizze_34649 = (m_28023 * i32_res_28171)
    segmap_group_sizze_34650 = self.sizes["mainMagnitude.segmap_group_size_34609"]
    suff_intra_par_34677 = (self.sizes["mainMagnitude.suff_intra_par_13"] <= i32_res_28171)
    intra_suff_and_fits_34678 = (fits_34164 and suff_intra_par_34677)
    segmap_group_sizze_34714 = self.sizes["mainMagnitude.segmap_group_size_34515"]
    segmap_group_sizze_34730 = self.sizes["mainMagnitude.segmap_group_size_34448"]
    segmap_group_sizze_34764 = self.sizes["mainMagnitude.segmap_group_size_34394"]
    y_34774 = (i32_res_28038 * j_m_i_28190)
    nest_sizze_34775 = (m_28023 * y_34774)
    segmap_group_sizze_34776 = self.sizes["mainMagnitude.segmap_group_size_34229"]
    segmap_usable_groups_34715 = sdiv_up_safe64(m_28023,
                                                segmap_group_sizze_34714)
    segmap_usable_groups_34731 = sdiv_up_safe64(nest_sizze_34649,
                                                segmap_group_sizze_34730)
    segmap_usable_groups_34765 = sdiv_up_safe64(nest_sizze_34649,
                                                segmap_group_sizze_34764)
    bytes_42709 = (np.int64(4) * i32_res_28171)
    bytes_42732 = (np.int64(4) * nest_sizze_34649)
    binop_x_42783 = (j_m_i_28190 * nest_sizze_33895)
    bytes_42781 = (np.int64(4) * binop_x_42783)
    local_memory_capacity_43977 = self.max_local_memory
    if intra_suff_and_fits_34165:
      defunc_3_map_res_ixfn_42785 = i32_res_28038
    else:
      defunc_3_map_res_ixfn_42785 = j_m_i_28190
    local_memory_capacity_44040 = self.max_local_memory
    if (sle64(((bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44040)) and intra_suff_and_fits_34165):
      mem_42730 = opencl_alloc(self, bytes_42701, "mem_42730")
      if ((1 * (np.long(m_28023) * np.long(i32_res_28171))) != 0):
        self.mainMagnitudezisegmap_intragroup_34045_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_42709)),
                                                                 cl.LocalMemory(np.long(bytes_42709)),
                                                                 np.int32(k2p2zq_28036),
                                                                 np.int64(i32_res_28038),
                                                                 np.int32(m_28169),
                                                                 np.int64(i32_res_28171),
                                                                 np.int64(i32_res_28186),
                                                                 defunc_3_map_res_mem_42706,
                                                                 mem_42730)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_34045_var,
                                   ((np.long(m_28023) * np.long(i32_res_28171)),),
                                   (np.long(i32_res_28171),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_42786 = mem_42730
    else:
      segmap_usable_groups_34651 = sdiv_up64(nest_sizze_34649,
                                             segmap_group_sizze_34650)
      mem_42734 = opencl_alloc(self, bytes_42732, "mem_42734")
      if ((1 * (np.long(segmap_usable_groups_34651) * np.long(segmap_group_sizze_34650))) != 0):
        self.mainMagnitudezisegmap_34606_var.set_args(self.global_failure,
                                                      np.int64(m_28023),
                                                      np.int32(k2p2zq_28036),
                                                      np.int64(i32_res_28038),
                                                      np.int32(m_28169),
                                                      np.int64(i32_res_28171),
                                                      defunc_3_map_res_mem_42706,
                                                      mem_42734)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34606_var,
                                   ((np.long(segmap_usable_groups_34651) * np.long(segmap_group_sizze_34650)),),
                                   (np.long(segmap_group_sizze_34650),))
        if synchronous:
          sync(self)
      ctx_param_ext_42735 = m_28023
      ctx_param_ext_42736 = i32_res_28171
      ctx_param_ext_42737 = np.int64(0)
      ctx_param_ext_42738 = i32_res_28171
      ctx_param_ext_42739 = m_28023
      ctx_param_ext_42740 = np.int64(1)
      ctx_param_ext_42741 = i32_res_28171
      mem_param_42742 = mem_42734
      i_34667 = np.int32(0)
      one_45045 = np.int32(1)
      for counter_45044 in range(k2p2zq_28036):
        i32_res_34669 = sext_i32_i64(i_34667)
        local_memory_capacity_44000 = self.max_local_memory
        if intra_suff_and_fits_34678:
          gauss_jordan_res_ixfn_42764 = m_28023
        else:
          gauss_jordan_res_ixfn_42764 = ctx_param_ext_42739
        local_memory_capacity_44001 = self.max_local_memory
        if intra_suff_and_fits_34678:
          gauss_jordan_res_ixfn_42765 = i32_res_28171
        else:
          gauss_jordan_res_ixfn_42765 = ctx_param_ext_42741
        local_memory_capacity_44002 = self.max_local_memory
        if intra_suff_and_fits_34678:
          gauss_jordan_res_ixfn_42766 = m_28023
        else:
          gauss_jordan_res_ixfn_42766 = ctx_param_ext_42735
        local_memory_capacity_44003 = self.max_local_memory
        if intra_suff_and_fits_34678:
          gauss_jordan_res_ixfn_42767 = i32_res_28171
        else:
          gauss_jordan_res_ixfn_42767 = ctx_param_ext_42736
        local_memory_capacity_44004 = self.max_local_memory
        if intra_suff_and_fits_34678:
          gauss_jordan_res_ixfn_42768 = i32_res_28171
        else:
          gauss_jordan_res_ixfn_42768 = ctx_param_ext_42738
        local_memory_capacity_44005 = self.max_local_memory
        if intra_suff_and_fits_34678:
          gauss_jordan_res_ixfn_42769 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_42769 = ctx_param_ext_42740
        local_memory_capacity_44006 = self.max_local_memory
        if intra_suff_and_fits_34678:
          gauss_jordan_res_ixfn_42770 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_42770 = ctx_param_ext_42737
        local_memory_capacity_44034 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44034)) and sle64((bytes_42709 + srem64((np.int64(8) - srem64(bytes_42709,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44034))) and intra_suff_and_fits_34678):
          mem_42747 = opencl_alloc(self, bytes_42732, "mem_42747")
          group_sizze_44010 = self.sizes["mainMagnitude.group_size_44010"]
          num_groups_44011 = sdiv_up64((m_28023 * i32_res_28171),
                                       group_sizze_44010)
          if ((1 * (np.long(num_groups_44011) * np.long(group_sizze_44010))) != 0):
            self.mainMagnitudezicopy_44007_var.set_args(np.int64(m_28023),
                                                        np.int64(i32_res_28171),
                                                        np.int64(ctx_param_ext_42737),
                                                        np.int64(ctx_param_ext_42738),
                                                        np.int64(ctx_param_ext_42740),
                                                        mem_param_42742,
                                                        mem_42747)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezicopy_44007_var,
                                       ((np.long(num_groups_44011) * np.long(group_sizze_44010)),),
                                       (np.long(group_sizze_44010),))
            if synchronous:
              sync(self)
          mem_42755 = opencl_alloc(self, bytes_42732, "mem_42755")
          if ((1 * (np.long(m_28023) * np.long(i32_res_28171))) != 0):
            self.mainMagnitudezisegmap_intragroup_34272_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(bytes_42709)),
                                                                     np.int64(m_28023),
                                                                     np.int32(k2p2zq_28036),
                                                                     np.int32(m_28169),
                                                                     np.int64(i32_res_28171),
                                                                     np.int32(i_34667),
                                                                     np.int64(i32_res_34669),
                                                                     np.int64(ctx_param_ext_42737),
                                                                     np.int64(ctx_param_ext_42738),
                                                                     np.int64(ctx_param_ext_42740),
                                                                     mem_param_42742,
                                                                     mem_42747,
                                                                     mem_42755)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_34272_var,
                                       ((np.long(m_28023) * np.long(i32_res_28171)),),
                                       (np.long(i32_res_28171),))
            if synchronous:
              sync(self)
          mem_42747 = None
          gauss_jordan_res_mem_42771 = mem_42755
        else:
          mem_42758 = opencl_alloc(self, m_28023, "mem_42758")
          if ((1 * (np.long(segmap_usable_groups_34715) * np.long(segmap_group_sizze_34714))) != 0):
            self.mainMagnitudezisegmap_34513_var.set_args(self.global_failure,
                                                          np.int64(m_28023),
                                                          np.int64(i32_res_34669),
                                                          np.int64(ctx_param_ext_42737),
                                                          np.int64(ctx_param_ext_42738),
                                                          np.int64(ctx_param_ext_42740),
                                                          mem_param_42742,
                                                          mem_42758)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34513_var,
                                       ((np.long(segmap_usable_groups_34715) * np.long(segmap_group_sizze_34714)),),
                                       (np.long(segmap_group_sizze_34714),))
            if synchronous:
              sync(self)
          mem_42762 = opencl_alloc(self, bytes_42732, "mem_42762")
          if ((1 * (np.long(segmap_usable_groups_34731) * np.long(segmap_group_sizze_34730))) != 0):
            self.mainMagnitudezisegmap_34445_var.set_args(self.global_failure,
                                                          np.int64(m_28023),
                                                          np.int32(k2p2zq_28036),
                                                          np.int32(m_28169),
                                                          np.int64(i32_res_28171),
                                                          np.int32(i_34667),
                                                          np.int64(i32_res_34669),
                                                          np.int64(ctx_param_ext_42737),
                                                          np.int64(ctx_param_ext_42738),
                                                          np.int64(ctx_param_ext_42740),
                                                          mem_param_42742,
                                                          mem_42758, mem_42762)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34445_var,
                                       ((np.long(segmap_usable_groups_34731) * np.long(segmap_group_sizze_34730)),),
                                       (np.long(segmap_group_sizze_34730),))
            if synchronous:
              sync(self)
          mem_42758 = None
          if ((1 * (np.long(segmap_usable_groups_34765) * np.long(segmap_group_sizze_34764))) != 0):
            self.mainMagnitudezisegmap_34391_var.set_args(self.global_failure,
                                                          np.int64(m_28023),
                                                          np.int64(i32_res_28171),
                                                          np.int64(ctx_param_ext_42737),
                                                          np.int64(ctx_param_ext_42738),
                                                          np.int64(ctx_param_ext_42740),
                                                          mem_param_42742,
                                                          mem_42762)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34391_var,
                                       ((np.long(segmap_usable_groups_34765) * np.long(segmap_group_sizze_34764)),),
                                       (np.long(segmap_group_sizze_34764),))
            if synchronous:
              sync(self)
          mem_42762 = None
          gauss_jordan_res_mem_42771 = mem_param_42742
        ctx_param_ext_tmp_43991 = gauss_jordan_res_ixfn_42766
        ctx_param_ext_tmp_43992 = gauss_jordan_res_ixfn_42767
        ctx_param_ext_tmp_43993 = gauss_jordan_res_ixfn_42770
        ctx_param_ext_tmp_43994 = gauss_jordan_res_ixfn_42768
        ctx_param_ext_tmp_43995 = gauss_jordan_res_ixfn_42764
        ctx_param_ext_tmp_43996 = gauss_jordan_res_ixfn_42769
        ctx_param_ext_tmp_43997 = gauss_jordan_res_ixfn_42765
        mem_param_tmp_43998 = gauss_jordan_res_mem_42771
        ctx_param_ext_42735 = ctx_param_ext_tmp_43991
        ctx_param_ext_42736 = ctx_param_ext_tmp_43992
        ctx_param_ext_42737 = ctx_param_ext_tmp_43993
        ctx_param_ext_42738 = ctx_param_ext_tmp_43994
        ctx_param_ext_42739 = ctx_param_ext_tmp_43995
        ctx_param_ext_42740 = ctx_param_ext_tmp_43996
        ctx_param_ext_42741 = ctx_param_ext_tmp_43997
        mem_param_42742 = mem_param_tmp_43998
        i_34667 += one_45045
      gauss_jordan_res_r_ixfn_42772 = ctx_param_ext_42735
      gauss_jordan_res_r_ixfn_42773 = ctx_param_ext_42736
      gauss_jordan_res_r_ixfn_42774 = ctx_param_ext_42737
      gauss_jordan_res_r_ixfn_42775 = ctx_param_ext_42738
      gauss_jordan_res_r_ixfn_42776 = ctx_param_ext_42739
      gauss_jordan_res_r_ixfn_42777 = ctx_param_ext_42740
      gauss_jordan_res_r_ixfn_42778 = ctx_param_ext_42741
      gauss_jordan_res_r_mem_42779 = mem_param_42742
      mem_42734 = None
      segmap_usable_groups_34777 = sdiv_up64(nest_sizze_34775,
                                             segmap_group_sizze_34776)
      mem_42784 = opencl_alloc(self, bytes_42781, "mem_42784")
      if ((1 * (np.long(segmap_usable_groups_34777) * np.long(segmap_group_sizze_34776))) != 0):
        self.mainMagnitudezisegmap_34225_var.set_args(self.global_failure,
                                                      np.int64(m_28023),
                                                      np.int64(i32_res_28038),
                                                      np.int64(i32_res_28171),
                                                      np.int64(i32_res_28186),
                                                      np.int64(x_28187),
                                                      np.int64(j_m_i_28190),
                                                      np.int64(gauss_jordan_res_r_ixfn_42774),
                                                      np.int64(gauss_jordan_res_r_ixfn_42775),
                                                      np.int64(gauss_jordan_res_r_ixfn_42777),
                                                      gauss_jordan_res_r_mem_42779,
                                                      mem_42784)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34225_var,
                                   ((np.long(segmap_usable_groups_34777) * np.long(segmap_group_sizze_34776)),),
                                   (np.long(segmap_group_sizze_34776),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_42779 = None
      defunc_3_map_res_mem_42786 = mem_42784
    defunc_3_map_res_mem_42706 = None
    suff_outer_par_34785 = (self.sizes["mainMagnitude.suff_outer_par_16"] <= m_28023)
    segmap_group_sizze_34807 = self.sizes["mainMagnitude.segmap_group_size_34789"]
    max_num_groups_44041 = self.sizes["mainMagnitude.segmap_num_groups_34791"]
    num_groups_34808 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28023,
                                                            segmap_group_sizze_34807),
                                                  sext_i32_i64(max_num_groups_44041))))
    suff_outer_par_34892 = (self.sizes["mainMagnitude.suff_outer_par_17"] <= nest_sizze_33895)
    nest_sizze_34908 = (i32_res_28032 * nest_sizze_33895)
    segred_group_sizze_34909 = self.sizes["mainMagnitude.segred_group_size_34851"]
    max_num_groups_44042 = self.sizes["mainMagnitude.segred_num_groups_34853"]
    num_groups_34910 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34908,
                                                            segred_group_sizze_34909),
                                                  sext_i32_i64(max_num_groups_44042))))
    Ty_40864 = self.sizes["mainMagnitude.Ty_40861"]
    Ry_40865 = self.sizes["mainMagnitude.Ry_40863"]
    Tx_40866 = self.sizes["mainMagnitude.Tx_40860"]
    Rx_40867 = self.sizes["mainMagnitude.Rx_40862"]
    Tk_40868 = self.sizes["mainMagnitude.Tk_40859"]
    TxRx_40871 = (Tx_40866 * Rx_40867)
    TyRy_40872 = (Ty_40864 * Ry_40865)
    a_loc_szz_40874 = (Tk_40868 * TyRy_40872)
    binop_x_40875 = (Tx_40866 * Tk_40868)
    b_loc_szz_40876 = (Rx_40867 * binop_x_40875)
    group_sizze_40880 = (Ty_40864 * Tx_40866)
    bytes_42805 = (np.int64(4) * nest_sizze_33895)
    binop_x_42819 = (Ry_40865 * group_sizze_40880)
    binop_x_42820 = (Rx_40867 * binop_x_42819)
    bytes_42817 = (np.int64(4) * binop_x_42820)
    binop_x_42811 = (Ry_40865 * Rx_40867)
    bytes_42810 = (np.int64(4) * binop_x_42811)
    bytes_42822 = (np.int64(4) * a_loc_szz_40874)
    bytes_42824 = (np.int64(4) * b_loc_szz_40876)
    bytes_42893 = (np.int64(4) * binop_x_42819)
    binop_x_42899 = (Rx_40867 * group_sizze_40880)
    bytes_42897 = (np.int64(4) * binop_x_42899)
    bytes_42885 = (np.int64(4) * Ry_40865)
    bytes_42887 = (np.int64(4) * Rx_40867)
    binop_x_43621 = (np.int64(4) * Ty_40864)
    binop_x_43622 = (Tx_40866 * binop_x_43621)
    binop_x_43623 = (Ry_40865 * binop_x_43622)
    sizze_43624 = (Rx_40867 * binop_x_43623)
    num_threads_43753 = (segmap_group_sizze_34807 * num_groups_34808)
    total_sizze_43754 = (bytes_42605 * num_threads_43753)
    local_memory_capacity_44172 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44172)) and suff_outer_par_34785):
      mem_42789 = opencl_alloc(self, bytes_42555, "mem_42789")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42789, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_28022, m_28023)
      mem_42807 = opencl_alloc(self, bytes_42805, "mem_42807")
      mem_42792 = opencl_alloc(self, total_sizze_43754, "mem_42792")
      if ((1 * (np.long(num_groups_34808) * np.long(segmap_group_sizze_34807))) != 0):
        self.mainMagnitudezisegmap_34787_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.int64(m_28023),
                                                      np.int32(n_28026),
                                                      np.int32(k2p2zq_28036),
                                                      np.int64(i32_res_28038),
                                                      np.int64(num_groups_34808),
                                                      binop_p_mem_42547,
                                                      mem_42789, mem_42792,
                                                      mem_42807)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34787_var,
                                   ((np.long(num_groups_34808) * np.long(segmap_group_sizze_34807)),),
                                   (np.long(segmap_group_sizze_34807),))
        if synchronous:
          sync(self)
      mem_42789 = None
      mem_42792 = None
      mem_43005 = opencl_alloc(self, bytes_42805, "mem_43005")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43005, np.int64(0),
                                                  mem_42807, np.int64(0),
                                                  np.int64(1), m_28023,
                                                  i32_res_28038)
      mem_42807 = None
      defunc_3_map_res_mem_43007 = mem_43005
    else:
      local_memory_capacity_44171 = self.max_local_memory
      if (sle64(((bytes_42822 + srem64((np.int64(8) - srem64(bytes_42822,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_42824 + srem64((np.int64(8) - srem64(bytes_42824,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44171)) and suff_outer_par_34892):
        tk_div_tx_40869 = sdiv_up64(Tk_40868, Tx_40866)
        tk_div_ty_40870 = sdiv_up64(Tk_40868, Ty_40864)
        gridDim_x_40877 = sdiv_up64(i32_res_28038, TxRx_40871)
        gridDim_y_40878 = sdiv_up64(m_28023, TyRy_40872)
        grid_sizze_40879 = (gridDim_x_40877 * gridDim_y_40878)
        full_tiles_40908 = squot64(i32_res_28032, Tk_40868)
        kk_41115 = (Tk_40868 * full_tiles_40908)
        mem_42997 = opencl_alloc(self, bytes_42805, "mem_42997")
        if ((1 * (np.long(grid_sizze_40879) * np.long(group_sizze_40880))) != 0):
          self.mainMagnitudezisegmap_intragroup_40883_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_42824)),
                                                                   cl.LocalMemory(np.long(bytes_42822)),
                                                                   np.int64(N_28022),
                                                                   np.int64(m_28023),
                                                                   np.int64(i32_res_28032),
                                                                   np.int64(i32_res_28038),
                                                                   np.int64(gridDim_x_40877),
                                                                   np.int64(full_tiles_40908),
                                                                   np.int64(kk_41115),
                                                                   images_mem_42538,
                                                                   mem_42550,
                                                                   mem_42997)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_40883_var,
                                     ((np.long(grid_sizze_40879) * np.long(group_sizze_40880)),),
                                     (np.long(group_sizze_40880),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43002 = mem_42997
      else:
        mem_43001 = opencl_alloc(self, bytes_42805, "mem_43001")
        if slt64((i32_res_28032 * np.int64(2)), segred_group_sizze_34909):
          segment_sizze_nonzzero_44111 = smax64(np.int64(1), i32_res_28032)
          num_threads_44112 = (num_groups_34910 * segred_group_sizze_34909)
          if ((1 * (np.long(num_groups_34910) * np.long(segred_group_sizze_34909))) != 0):
            self.mainMagnitudezisegred_small_34857_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34909))),
                                                                np.int64(N_28022),
                                                                np.int64(m_28023),
                                                                np.int64(i32_res_28032),
                                                                np.int64(i32_res_28038),
                                                                np.int64(num_groups_34910),
                                                                np.int64(segment_sizze_nonzzero_44111),
                                                                images_mem_42538,
                                                                binop_p_mem_42547,
                                                                mem_43001)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_34857_var,
                                       ((np.long(num_groups_34910) * np.long(segred_group_sizze_34909)),),
                                       (np.long(segred_group_sizze_34909),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44132 = sdiv_up64(num_groups_34910,
                                               smax64(np.int64(1),
                                                      (m_28023 * i32_res_28038)))
          elements_per_thread_44133 = sdiv_up64(i32_res_28032,
                                                (segred_group_sizze_34909 * groups_per_segment_44132))
          virt_num_groups_44134 = (groups_per_segment_44132 * (m_28023 * i32_res_28038))
          num_threads_44135 = (num_groups_34910 * segred_group_sizze_34909)
          threads_per_segment_44136 = (groups_per_segment_44132 * segred_group_sizze_34909)
          group_res_arr_mem_44137 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34909 * virt_num_groups_44134)),
                                                 "group_res_arr_mem_44137")
          mainMagnitudezicounter_mem_44139 = self.mainMagnitudezicounter_mem_44139
          if ((1 * (np.long(num_groups_34910) * np.long(segred_group_sizze_34909))) != 0):
            self.mainMagnitudezisegred_large_34857_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34909))),
                                                                np.int64(N_28022),
                                                                np.int64(i32_res_28032),
                                                                np.int64(i32_res_28038),
                                                                np.int64(num_groups_34910),
                                                                np.int64(groups_per_segment_44132),
                                                                np.int64(elements_per_thread_44133),
                                                                np.int64(virt_num_groups_44134),
                                                                np.int64(threads_per_segment_44136),
                                                                images_mem_42538,
                                                                binop_p_mem_42547,
                                                                mem_43001,
                                                                group_res_arr_mem_44137,
                                                                mainMagnitudezicounter_mem_44139)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_34857_var,
                                       ((np.long(num_groups_34910) * np.long(segred_group_sizze_34909)),),
                                       (np.long(segred_group_sizze_34909),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43002 = mem_43001
      defunc_3_map_res_mem_43007 = defunc_3_map_res_mem_43002
    binop_p_mem_42547 = None
    mem_42550 = None
    suff_outer_par_34926 = (self.sizes["mainMagnitude.suff_outer_par_18"] <= m_28023)
    segmap_group_sizze_34947 = self.sizes["mainMagnitude.segmap_group_size_34930"]
    max_num_groups_44173 = self.sizes["mainMagnitude.segmap_num_groups_34932"]
    num_groups_34948 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28023,
                                                            segmap_group_sizze_34947),
                                                  sext_i32_i64(max_num_groups_44173))))
    suff_outer_par_35027 = (self.sizes["mainMagnitude.suff_outer_par_19"] <= nest_sizze_33895)
    segred_group_sizze_35042 = self.sizes["mainMagnitude.segred_group_size_34988"]
    max_num_groups_44174 = self.sizes["mainMagnitude.segred_num_groups_34990"]
    num_groups_35043 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42703,
                                                            segred_group_sizze_35042),
                                                  sext_i32_i64(max_num_groups_44174))))
    tile_sizze_41327 = self.sizes["mainMagnitude.tile_size_41326"]
    group_sizze_41328 = (tile_sizze_41327 * tile_sizze_41327)
    bytes_43039 = (np.int64(4) * group_sizze_41328)
    binop_x_43637 = (np.int64(4) * tile_sizze_41327)
    sizze_43638 = (tile_sizze_41327 * binop_x_43637)
    num_threads_43757 = (segmap_group_sizze_34947 * num_groups_34948)
    total_sizze_43758 = (bytes_42605 * num_threads_43757)
    local_memory_capacity_44260 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44260)) and suff_outer_par_34926):
      mem_43011 = opencl_alloc(self, bytes_42600, "mem_43011")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43011, np.int64(0),
                                                  defunc_3_map_res_mem_42786,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28038 * i32_res_28038),
                                                  m_28023)
      mem_43014 = opencl_alloc(self, bytes_42805, "mem_43014")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43014, np.int64(0),
                                                  defunc_3_map_res_mem_43007,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28038, m_28023)
      mem_43032 = opencl_alloc(self, bytes_42805, "mem_43032")
      mem_43017 = opencl_alloc(self, total_sizze_43758, "mem_43017")
      if ((1 * (np.long(num_groups_34948) * np.long(segmap_group_sizze_34947))) != 0):
        self.mainMagnitudezisegmap_34928_var.set_args(self.global_failure,
                                                      np.int64(m_28023),
                                                      np.int32(k2p2zq_28036),
                                                      np.int64(i32_res_28038),
                                                      np.int64(num_groups_34948),
                                                      mem_43011, mem_43014,
                                                      mem_43017, mem_43032)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34928_var,
                                   ((np.long(num_groups_34948) * np.long(segmap_group_sizze_34947)),),
                                   (np.long(segmap_group_sizze_34947),))
        if synchronous:
          sync(self)
      mem_43011 = None
      mem_43014 = None
      mem_43017 = None
      mem_43071 = opencl_alloc(self, bytes_42805, "mem_43071")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43071, np.int64(0),
                                                  mem_43032, np.int64(0),
                                                  np.int64(1), m_28023,
                                                  i32_res_28038)
      mem_43032 = None
      defunc_4_map_res_mem_43073 = mem_43071
    else:
      local_memory_capacity_44259 = self.max_local_memory
      if (sle64(((bytes_43039 + srem64((np.int64(8) - srem64(bytes_43039,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43039 + srem64((np.int64(8) - srem64(bytes_43039,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44259)) and suff_outer_par_35027):
        mem_43036 = opencl_alloc(self, bytes_42701, "mem_43036")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43036, np.int64(0),
                                                    defunc_3_map_res_mem_42786,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28038,
                                                    (m_28023 * i32_res_28038))
        num_groups_x_41329 = sdiv_up64(m_28023, tile_sizze_41327)
        num_groups_y_41330 = sdiv_up64(i32_res_28038, tile_sizze_41327)
        num_groups_top_41331 = (num_groups_x_41329 * num_groups_y_41330)
        num_whole_tiles_41348 = squot64(i32_res_28038, tile_sizze_41327)
        residual_input_41475 = srem64(i32_res_28038, tile_sizze_41327)
        cond_41476 = (residual_input_41475 == np.int64(0))
        mem_43063 = opencl_alloc(self, bytes_42805, "mem_43063")
        if ((1 * (np.long(num_groups_top_41331) * np.long(group_sizze_41328))) != 0):
          self.mainMagnitudezisegmap_intragroup_41332_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43039)),
                                                                   cl.LocalMemory(np.long(bytes_43039)),
                                                                   np.int64(m_28023),
                                                                   np.int64(i32_res_28038),
                                                                   np.int64(num_groups_y_41330),
                                                                   np.int64(num_whole_tiles_41348),
                                                                   np.int64(residual_input_41475),
                                                                   np.byte(cond_41476),
                                                                   defunc_3_map_res_mem_43007,
                                                                   mem_43036,
                                                                   mem_43063)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41332_var,
                                     ((np.long(num_groups_top_41331) * np.long(group_sizze_41328)),),
                                     (np.long(group_sizze_41328),))
          if synchronous:
            sync(self)
        mem_43036 = None
        defunc_4_map_res_mem_43068 = mem_43063
      else:
        mem_43067 = opencl_alloc(self, bytes_42805, "mem_43067")
        if slt64((i32_res_28038 * np.int64(2)), segred_group_sizze_35042):
          segment_sizze_nonzzero_44199 = smax64(np.int64(1), i32_res_28038)
          num_threads_44200 = (num_groups_35043 * segred_group_sizze_35042)
          if ((1 * (np.long(num_groups_35043) * np.long(segred_group_sizze_35042))) != 0):
            self.mainMagnitudezisegred_small_34994_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35042))),
                                                                np.int64(m_28023),
                                                                np.int64(i32_res_28038),
                                                                np.int64(num_groups_35043),
                                                                np.int64(segment_sizze_nonzzero_44199),
                                                                defunc_3_map_res_mem_42786,
                                                                defunc_3_map_res_mem_43007,
                                                                mem_43067)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_34994_var,
                                       ((np.long(num_groups_35043) * np.long(segred_group_sizze_35042)),),
                                       (np.long(segred_group_sizze_35042),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44220 = sdiv_up64(num_groups_35043,
                                               smax64(np.int64(1),
                                                      (m_28023 * i32_res_28038)))
          elements_per_thread_44221 = sdiv_up64(i32_res_28038,
                                                (segred_group_sizze_35042 * groups_per_segment_44220))
          virt_num_groups_44222 = (groups_per_segment_44220 * (m_28023 * i32_res_28038))
          num_threads_44223 = (num_groups_35043 * segred_group_sizze_35042)
          threads_per_segment_44224 = (groups_per_segment_44220 * segred_group_sizze_35042)
          group_res_arr_mem_44225 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35042 * virt_num_groups_44222)),
                                                 "group_res_arr_mem_44225")
          mainMagnitudezicounter_mem_44227 = self.mainMagnitudezicounter_mem_44227
          if ((1 * (np.long(num_groups_35043) * np.long(segred_group_sizze_35042))) != 0):
            self.mainMagnitudezisegred_large_34994_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35042))),
                                                                np.int64(i32_res_28038),
                                                                np.int64(num_groups_35043),
                                                                np.int64(groups_per_segment_44220),
                                                                np.int64(elements_per_thread_44221),
                                                                np.int64(virt_num_groups_44222),
                                                                np.int64(threads_per_segment_44224),
                                                                defunc_3_map_res_mem_42786,
                                                                defunc_3_map_res_mem_43007,
                                                                mem_43067,
                                                                group_res_arr_mem_44225,
                                                                mainMagnitudezicounter_mem_44227)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_34994_var,
                                       ((np.long(num_groups_35043) * np.long(segred_group_sizze_35042)),),
                                       (np.long(segred_group_sizze_35042),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43068 = mem_43067
      defunc_4_map_res_mem_43073 = defunc_4_map_res_mem_43068
    defunc_3_map_res_mem_42786 = None
    defunc_3_map_res_mem_43007 = None
    suff_outer_par_35058 = (self.sizes["mainMagnitude.suff_outer_par_20"] <= m_28023)
    segmap_group_sizze_35078 = self.sizes["mainMagnitude.segmap_group_size_35062"]
    max_num_groups_44261 = self.sizes["mainMagnitude.segmap_num_groups_35064"]
    num_groups_35079 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28023,
                                                            segmap_group_sizze_35078),
                                                  sext_i32_i64(max_num_groups_44261))))
    suff_outer_par_35155 = (self.sizes["mainMagnitude.suff_outer_par_21"] <= binop_x_42556)
    nest_sizze_35169 = (i32_res_28038 * binop_x_42556)
    segred_group_sizze_35170 = self.sizes["mainMagnitude.segred_group_size_35118"]
    max_num_groups_44262 = self.sizes["mainMagnitude.segred_num_groups_35120"]
    num_groups_35171 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35169,
                                                            segred_group_sizze_35170),
                                                  sext_i32_i64(max_num_groups_44262))))
    Ty_41605 = self.sizes["mainMagnitude.Ty_41602"]
    Ry_41606 = self.sizes["mainMagnitude.Ry_41604"]
    Tx_41607 = self.sizes["mainMagnitude.Tx_41601"]
    Rx_41608 = self.sizes["mainMagnitude.Rx_41603"]
    Tk_41609 = self.sizes["mainMagnitude.Tk_41600"]
    TxRx_41612 = (Tx_41607 * Rx_41608)
    TyRy_41613 = (Ty_41605 * Ry_41606)
    a_loc_szz_41615 = (Tk_41609 * TyRy_41613)
    binop_x_41616 = (Tx_41607 * Tk_41609)
    b_loc_szz_41617 = (Rx_41608 * binop_x_41616)
    group_sizze_41621 = (Ty_41605 * Tx_41607)
    bytes_43078 = (np.int64(4) * N_28022)
    binop_x_43109 = (Ry_41606 * group_sizze_41621)
    binop_x_43110 = (Rx_41608 * binop_x_43109)
    bytes_43107 = (np.int64(4) * binop_x_43110)
    binop_x_43101 = (Ry_41606 * Rx_41608)
    bytes_43100 = (np.int64(4) * binop_x_43101)
    bytes_43112 = (np.int64(4) * a_loc_szz_41615)
    bytes_43114 = (np.int64(4) * b_loc_szz_41617)
    bytes_43183 = (np.int64(4) * binop_x_43109)
    binop_x_43189 = (Rx_41608 * group_sizze_41621)
    bytes_43187 = (np.int64(4) * binop_x_43189)
    bytes_43175 = (np.int64(4) * Ry_41606)
    bytes_43177 = (np.int64(4) * Rx_41608)
    binop_x_43651 = (np.int64(4) * Ty_41605)
    binop_x_43652 = (Tx_41607 * binop_x_43651)
    binop_x_43653 = (Ry_41606 * binop_x_43652)
    sizze_43654 = (Rx_41608 * binop_x_43653)
    num_threads_43761 = (segmap_group_sizze_35078 * num_groups_35079)
    total_sizze_43762 = (bytes_43078 * num_threads_43761)
    local_memory_capacity_44392 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44392)) and suff_outer_par_35058):
      mem_43076 = opencl_alloc(self, bytes_42805, "mem_43076")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43076, np.int64(0),
                                                  defunc_4_map_res_mem_43073,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28038, m_28023)
      mem_43094 = opencl_alloc(self, bytes_42555, "mem_43094")
      mem_43079 = opencl_alloc(self, total_sizze_43762, "mem_43079")
      if ((1 * (np.long(num_groups_35079) * np.long(segmap_group_sizze_35078))) != 0):
        self.mainMagnitudezisegmap_35060_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.int64(m_28023),
                                                      np.int32(k2p2zq_28036),
                                                      np.int64(i32_res_28038),
                                                      np.int64(num_groups_35079),
                                                      mem_42554, mem_43076,
                                                      mem_43079, mem_43094)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35060_var,
                                   ((np.long(num_groups_35079) * np.long(segmap_group_sizze_35078)),),
                                   (np.long(segmap_group_sizze_35078),))
        if synchronous:
          sync(self)
      mem_43076 = None
      mem_43079 = None
      mem_43295 = opencl_alloc(self, bytes_42555, "mem_43295")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43295, np.int64(0),
                                                  mem_43094, np.int64(0),
                                                  np.int64(1), m_28023, N_28022)
      mem_43094 = None
      defunc_3_map_res_mem_43297 = mem_43295
    else:
      local_memory_capacity_44391 = self.max_local_memory
      if (sle64(((bytes_43112 + srem64((np.int64(8) - srem64(bytes_43112,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43114 + srem64((np.int64(8) - srem64(bytes_43114,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44391)) and suff_outer_par_35155):
        mem_43097 = opencl_alloc(self, bytes_42540, "mem_43097")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43097, np.int64(0),
                                                    mem_42554, np.int64(0),
                                                    np.int64(1), i32_res_28038,
                                                    N_28022)
        tk_div_tx_41610 = sdiv_up64(Tk_41609, Tx_41607)
        tk_div_ty_41611 = sdiv_up64(Tk_41609, Ty_41605)
        gridDim_x_41618 = sdiv_up64(N_28022, TxRx_41612)
        gridDim_y_41619 = sdiv_up64(m_28023, TyRy_41613)
        grid_sizze_41620 = (gridDim_x_41618 * gridDim_y_41619)
        full_tiles_41649 = squot64(i32_res_28038, Tk_41609)
        kk_41852 = (Tk_41609 * full_tiles_41649)
        mem_43287 = opencl_alloc(self, bytes_42555, "mem_43287")
        if ((1 * (np.long(grid_sizze_41620) * np.long(group_sizze_41621))) != 0):
          self.mainMagnitudezisegmap_intragroup_41624_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43114)),
                                                                   cl.LocalMemory(np.long(bytes_43112)),
                                                                   np.int64(N_28022),
                                                                   np.int64(m_28023),
                                                                   np.int64(i32_res_28038),
                                                                   np.int64(gridDim_x_41618),
                                                                   np.int64(full_tiles_41649),
                                                                   np.int64(kk_41852),
                                                                   defunc_4_map_res_mem_43073,
                                                                   mem_43097,
                                                                   mem_43287)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41624_var,
                                     ((np.long(grid_sizze_41620) * np.long(group_sizze_41621)),),
                                     (np.long(group_sizze_41621),))
          if synchronous:
            sync(self)
        mem_43097 = None
        defunc_3_map_res_mem_43292 = mem_43287
      else:
        mem_43291 = opencl_alloc(self, bytes_42555, "mem_43291")
        if slt64((i32_res_28038 * np.int64(2)), segred_group_sizze_35170):
          segment_sizze_nonzzero_44331 = smax64(np.int64(1), i32_res_28038)
          num_threads_44332 = (num_groups_35171 * segred_group_sizze_35170)
          if ((1 * (np.long(num_groups_35171) * np.long(segred_group_sizze_35170))) != 0):
            self.mainMagnitudezisegred_small_35124_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35170))),
                                                                np.int64(N_28022),
                                                                np.int64(m_28023),
                                                                np.int64(i32_res_28038),
                                                                np.int64(num_groups_35171),
                                                                np.int64(segment_sizze_nonzzero_44331),
                                                                mem_42554,
                                                                defunc_4_map_res_mem_43073,
                                                                mem_43291)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35124_var,
                                       ((np.long(num_groups_35171) * np.long(segred_group_sizze_35170)),),
                                       (np.long(segred_group_sizze_35170),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44352 = sdiv_up64(num_groups_35171,
                                               smax64(np.int64(1),
                                                      (m_28023 * N_28022)))
          elements_per_thread_44353 = sdiv_up64(i32_res_28038,
                                                (segred_group_sizze_35170 * groups_per_segment_44352))
          virt_num_groups_44354 = (groups_per_segment_44352 * (m_28023 * N_28022))
          num_threads_44355 = (num_groups_35171 * segred_group_sizze_35170)
          threads_per_segment_44356 = (groups_per_segment_44352 * segred_group_sizze_35170)
          group_res_arr_mem_44357 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35170 * virt_num_groups_44354)),
                                                 "group_res_arr_mem_44357")
          mainMagnitudezicounter_mem_44359 = self.mainMagnitudezicounter_mem_44359
          if ((1 * (np.long(num_groups_35171) * np.long(segred_group_sizze_35170))) != 0):
            self.mainMagnitudezisegred_large_35124_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35170))),
                                                                np.int64(N_28022),
                                                                np.int64(i32_res_28038),
                                                                np.int64(num_groups_35171),
                                                                np.int64(groups_per_segment_44352),
                                                                np.int64(elements_per_thread_44353),
                                                                np.int64(virt_num_groups_44354),
                                                                np.int64(threads_per_segment_44356),
                                                                mem_42554,
                                                                defunc_4_map_res_mem_43073,
                                                                mem_43291,
                                                                group_res_arr_mem_44357,
                                                                mainMagnitudezicounter_mem_44359)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35124_var,
                                       ((np.long(num_groups_35171) * np.long(segred_group_sizze_35170)),),
                                       (np.long(segred_group_sizze_35170),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43292 = mem_43291
      defunc_3_map_res_mem_43297 = defunc_3_map_res_mem_43292
    mem_42554 = None
    defunc_4_map_res_mem_43073 = None
    i_28298 = (N_28022 - np.int64(1))
    x_28299 = sle64(np.int64(0), i_28298)
    y_28300 = slt64(i_28298, N_28022)
    bounds_check_28301 = (x_28299 and y_28300)
    index_certs_28302 = True
    assert bounds_check_28301, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:16-77\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-77:25\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:37\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28298,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28022,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_35300 = sle64(N_28022, max_group_sizze_34163)
    suff_intra_par_35298 = (self.sizes["mainMagnitude.suff_intra_par_24"] <= N_28022)
    intra_suff_and_fits_35301 = (suff_intra_par_35298 and fits_35300)
    segscan_group_sizze_35450 = self.sizes["mainMagnitude.segscan_group_size_35427"]
    max_num_groups_44393 = self.sizes["mainMagnitude.segscan_num_groups_35429"]
    num_groups_35451 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42556,
                                                            segscan_group_sizze_35450),
                                                  sext_i32_i64(max_num_groups_44393))))
    segmap_group_sizze_35470 = self.sizes["mainMagnitude.segmap_group_size_35418"]
    segmap_group_sizze_35506 = self.sizes["mainMagnitude.segmap_group_size_35343"]
    bytes_43309 = (np.int64(4) * m_28023)
    bytes_43300 = (np.int64(8) * N_28022)
    bytes_43318 = (np.int64(8) * binop_x_42556)
    local_memory_capacity_44495 = self.max_local_memory
    if (sle64(((((bytes_43300 + srem64((np.int64(8) - srem64(bytes_43300,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43078 + srem64((np.int64(8) - srem64(bytes_43078,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44495)) and intra_suff_and_fits_35301):
      mem_43310 = opencl_alloc(self, bytes_43309, "mem_43310")
      mem_43313 = opencl_alloc(self, bytes_42555, "mem_43313")
      mem_43316 = opencl_alloc(self, bytes_42555, "mem_43316")
      if ((1 * (np.long(m_28023) * np.long(N_28022))) != 0):
        self.mainMagnitudezisegmap_intragroup_35223_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43078)),
                                                                 cl.LocalMemory(np.long(bytes_43078)),
                                                                 cl.LocalMemory(np.long(bytes_43078)),
                                                                 cl.LocalMemory(np.long(bytes_43300)),
                                                                 np.int64(N_28022),
                                                                 np.int64(i_28298),
                                                                 images_mem_42538,
                                                                 defunc_3_map_res_mem_43297,
                                                                 mem_43310,
                                                                 mem_43313,
                                                                 mem_43316)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_35223_var,
                                   ((np.long(m_28023) * np.long(N_28022)),),
                                   (np.long(N_28022),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43334 = mem_43310
      defunc_4_map_res_mem_43335 = mem_43313
      defunc_4_map_res_mem_43336 = mem_43316
    else:
      mem_43320 = opencl_alloc(self, bytes_43318, "mem_43320")
      mem_43323 = opencl_alloc(self, bytes_42555, "mem_43323")
      if slt64(np.int64(0), (m_28023 * N_28022)):
        stage1_max_num_groups_44411 = self.max_group_size
        stage1_num_groups_44412 = smin64(stage1_max_num_groups_44411,
                                         num_groups_35451)
        num_threads_44413 = sext_i64_i32((stage1_num_groups_44412 * segscan_group_sizze_35450))
        if ((1 * (np.long(stage1_num_groups_44412) * np.long(segscan_group_sizze_35450))) != 0):
          self.mainMagnitudeziscan_stage1_35433_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * segscan_group_sizze_35450)))),
                                                             np.int64(N_28022),
                                                             np.int64(m_28023),
                                                             np.int32(num_threads_44413),
                                                             images_mem_42538,
                                                             defunc_3_map_res_mem_43297,
                                                             mem_43320,
                                                             mem_43323)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_35433_var,
                                     ((np.long(stage1_num_groups_44412) * np.long(segscan_group_sizze_35450)),),
                                     (np.long(segscan_group_sizze_35450),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44412))) != 0):
          self.mainMagnitudeziscan_stage2_35433_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * stage1_num_groups_44412)))),
                                                             np.int64(N_28022),
                                                             np.int64(m_28023),
                                                             np.int64(stage1_num_groups_44412),
                                                             np.int32(num_threads_44413),
                                                             mem_43320)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_35433_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44412)),),
                                     (np.long(stage1_num_groups_44412),))
          if synchronous:
            sync(self)
        required_groups_44455 = sext_i64_i32(sdiv_up64((m_28023 * N_28022),
                                                       segscan_group_sizze_35450))
        if ((1 * (np.long(num_groups_35451) * np.long(segscan_group_sizze_35450))) != 0):
          self.mainMagnitudeziscan_stage3_35433_var.set_args(self.global_failure,
                                                             np.int64(N_28022),
                                                             np.int64(m_28023),
                                                             np.int64(num_groups_35451),
                                                             np.int32(num_threads_44413),
                                                             np.int32(required_groups_44455),
                                                             mem_43320)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_35433_var,
                                     ((np.long(num_groups_35451) * np.long(segscan_group_sizze_35450)),),
                                     (np.long(segscan_group_sizze_35450),))
          if synchronous:
            sync(self)
      segmap_usable_groups_35471 = sdiv_up64(m_28023, segmap_group_sizze_35470)
      mem_43326 = opencl_alloc(self, bytes_43309, "mem_43326")
      if ((1 * (np.long(segmap_usable_groups_35471) * np.long(segmap_group_sizze_35470))) != 0):
        self.mainMagnitudezisegmap_35416_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.int64(m_28023),
                                                      np.int64(i_28298),
                                                      mem_43320, mem_43326)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35416_var,
                                   ((np.long(segmap_usable_groups_35471) * np.long(segmap_group_sizze_35470)),),
                                   (np.long(segmap_group_sizze_35470),))
        if synchronous:
          sync(self)
      mem_43329 = opencl_alloc(self, bytes_42555, "mem_43329")
      self.futhark_builtinzhreplicate_f32(mem_43329, (m_28023 * N_28022),
                                          np.nan)
      mem_43332 = opencl_alloc(self, bytes_42555, "mem_43332")
      self.futhark_builtinzhreplicate_i32(mem_43332, (m_28023 * N_28022),
                                          np.int32(0))
      segmap_usable_groups_35507 = sdiv_up64(binop_x_42556,
                                             segmap_group_sizze_35506)
      if ((1 * (np.long(segmap_usable_groups_35507) * np.long(segmap_group_sizze_35506))) != 0):
        self.mainMagnitudezisegmap_35340_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.int64(m_28023),
                                                      mem_43320, mem_43323,
                                                      mem_43329, mem_43332)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35340_var,
                                   ((np.long(segmap_usable_groups_35507) * np.long(segmap_group_sizze_35506)),),
                                   (np.long(segmap_group_sizze_35506),))
        if synchronous:
          sync(self)
      mem_43320 = None
      mem_43323 = None
      defunc_4_map_res_mem_43334 = mem_43326
      defunc_4_map_res_mem_43335 = mem_43329
      defunc_4_map_res_mem_43336 = mem_43332
    defunc_3_map_res_mem_43297 = None
    suff_outer_par_35555 = (self.sizes["mainMagnitude.suff_outer_par_28"] <= m_28023)
    fits_35633 = sle64(i32_res_28032, max_group_sizze_34163)
    suff_intra_par_35631 = (self.sizes["mainMagnitude.suff_intra_par_29"] <= i32_res_28032)
    intra_suff_and_fits_35634 = (suff_intra_par_35631 and fits_35633)
    segmap_group_sizze_35598 = self.sizes["mainMagnitude.segmap_group_size_35567"]
    nest_sizze_35721 = (m_28023 * i32_res_28032)
    segred_group_sizze_35722 = self.sizes["mainMagnitude.segred_group_size_35705"]
    max_num_groups_44496 = self.sizes["mainMagnitude.segred_num_groups_35707"]
    num_groups_35723 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35721,
                                                            segred_group_sizze_35722),
                                                  sext_i32_i64(max_num_groups_44496))))
    segred_group_sizze_35736 = self.sizes["mainMagnitude.segred_group_size_35684"]
    max_num_groups_44497 = self.sizes["mainMagnitude.segred_num_groups_35686"]
    num_groups_35737 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35721,
                                                            segred_group_sizze_35736),
                                                  sext_i32_i64(max_num_groups_44497))))
    segmap_group_sizze_35752 = self.sizes["mainMagnitude.segmap_group_size_35669"]
    bytes_43345 = (np.int64(4) * segmap_group_sizze_35598)
    local_memory_capacity_44649 = self.max_local_memory
    if (sle64(((bytes_43345 + srem64((np.int64(8) - srem64(bytes_43345,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43345 + srem64((np.int64(8) - srem64(bytes_43345,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44649)) and suff_outer_par_35555):
      segmap_usable_groups_35599 = sdiv_up64(m_28023, segmap_group_sizze_35598)
      mem_43339 = opencl_alloc(self, bytes_42555, "mem_43339")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43339, np.int64(0),
                                                  images_mem_42538, np.int64(0),
                                                  np.int64(1), N_28022, m_28023)
      mem_43342 = opencl_alloc(self, bytes_42555, "mem_43342")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43342, np.int64(0),
                                                  defunc_4_map_res_mem_43335,
                                                  np.int64(0), np.int64(1),
                                                  N_28022, m_28023)
      num_whole_tiles_42080 = squot64(i32_res_28032, segmap_group_sizze_35598)
      residual_input_42169 = srem64(i32_res_28032, segmap_group_sizze_35598)
      cond_42170 = (residual_input_42169 == np.int64(0))
      mem_43373 = opencl_alloc(self, bytes_43309, "mem_43373")
      mem_43375 = opencl_alloc(self, bytes_43309, "mem_43375")
      mem_43377 = opencl_alloc(self, bytes_43309, "mem_43377")
      if ((1 * (np.long(segmap_usable_groups_35599) * np.long(segmap_group_sizze_35598))) != 0):
        self.mainMagnitudezisegmap_intragroup_42058_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43345)),
                                                                 cl.LocalMemory(np.long(bytes_43345)),
                                                                 np.int64(m_28023),
                                                                 np.int32(n_28026),
                                                                 np.float32(hfrac_28028),
                                                                 np.int64(i32_res_28032),
                                                                 np.int32(k2p2_28034),
                                                                 np.int64(num_whole_tiles_42080),
                                                                 np.int64(residual_input_42169),
                                                                 np.byte(cond_42170),
                                                                 mem_43339,
                                                                 mem_43342,
                                                                 mem_43373,
                                                                 mem_43375,
                                                                 mem_43377)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42058_var,
                                   ((np.long(segmap_usable_groups_35599) * np.long(segmap_group_sizze_35598)),),
                                   (np.long(segmap_group_sizze_35598),))
        if synchronous:
          sync(self)
      mem_43339 = None
      mem_43342 = None
      defunc_3_map_res_mem_43401 = mem_43373
      defunc_3_map_res_mem_43402 = mem_43375
      defunc_3_map_res_mem_43403 = mem_43377
    else:
      local_memory_capacity_44648 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_28032) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28032),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_28032) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28032),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44648)) and intra_suff_and_fits_35634):
        mem_43382 = opencl_alloc(self, bytes_43309, "mem_43382")
        mem_43384 = opencl_alloc(self, bytes_43309, "mem_43384")
        mem_43386 = opencl_alloc(self, bytes_43309, "mem_43386")
        if ((1 * (np.long(m_28023) * np.long(i32_res_28032))) != 0):
          self.mainMagnitudezisegmap_intragroup_35563_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28032))),
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28032))),
                                                                   np.int64(N_28022),
                                                                   np.float32(hfrac_28028),
                                                                   np.int64(i32_res_28032),
                                                                   np.int32(k2p2_28034),
                                                                   images_mem_42538,
                                                                   defunc_4_map_res_mem_43335,
                                                                   mem_43382,
                                                                   mem_43384,
                                                                   mem_43386)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_35563_var,
                                     ((np.long(m_28023) * np.long(i32_res_28032)),),
                                     (np.long(i32_res_28032),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43398 = mem_43382
        defunc_3_map_res_mem_43399 = mem_43384
        defunc_3_map_res_mem_43400 = mem_43386
      else:
        mem_43389 = opencl_alloc(self, bytes_43309, "mem_43389")
        if slt64((i32_res_28032 * np.int64(2)), segred_group_sizze_35722):
          segment_sizze_nonzzero_44523 = smax64(np.int64(1), i32_res_28032)
          num_threads_44524 = (num_groups_35723 * segred_group_sizze_35722)
          if ((1 * (np.long(num_groups_35723) * np.long(segred_group_sizze_35722))) != 0):
            self.mainMagnitudezisegred_small_35711_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35722))),
                                                                np.int64(N_28022),
                                                                np.int64(m_28023),
                                                                np.int64(i32_res_28032),
                                                                np.int64(num_groups_35723),
                                                                np.int64(segment_sizze_nonzzero_44523),
                                                                images_mem_42538,
                                                                mem_43389)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35711_var,
                                       ((np.long(num_groups_35723) * np.long(segred_group_sizze_35722)),),
                                       (np.long(segred_group_sizze_35722),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44544 = sdiv_up64(num_groups_35723,
                                               smax64(np.int64(1), m_28023))
          elements_per_thread_44545 = sdiv_up64(i32_res_28032,
                                                (segred_group_sizze_35722 * groups_per_segment_44544))
          virt_num_groups_44546 = (groups_per_segment_44544 * m_28023)
          num_threads_44547 = (num_groups_35723 * segred_group_sizze_35722)
          threads_per_segment_44548 = (groups_per_segment_44544 * segred_group_sizze_35722)
          group_res_arr_mem_44549 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35722 * virt_num_groups_44546)),
                                                 "group_res_arr_mem_44549")
          mainMagnitudezicounter_mem_44551 = self.mainMagnitudezicounter_mem_44551
          if ((1 * (np.long(num_groups_35723) * np.long(segred_group_sizze_35722))) != 0):
            self.mainMagnitudezisegred_large_35711_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35722))),
                                                                np.int64(N_28022),
                                                                np.int64(i32_res_28032),
                                                                np.int64(num_groups_35723),
                                                                np.int64(groups_per_segment_44544),
                                                                np.int64(elements_per_thread_44545),
                                                                np.int64(virt_num_groups_44546),
                                                                np.int64(threads_per_segment_44548),
                                                                images_mem_42538,
                                                                mem_43389,
                                                                group_res_arr_mem_44549,
                                                                mainMagnitudezicounter_mem_44551)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35711_var,
                                       ((np.long(num_groups_35723) * np.long(segred_group_sizze_35722)),),
                                       (np.long(segred_group_sizze_35722),))
            if synchronous:
              sync(self)
        mem_43392 = opencl_alloc(self, bytes_43309, "mem_43392")
        if slt64((i32_res_28032 * np.int64(2)), segred_group_sizze_35736):
          segment_sizze_nonzzero_44583 = smax64(np.int64(1), i32_res_28032)
          num_threads_44584 = (num_groups_35737 * segred_group_sizze_35736)
          if ((1 * (np.long(num_groups_35737) * np.long(segred_group_sizze_35736))) != 0):
            self.mainMagnitudezisegred_small_35690_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35736))),
                                                                np.int64(N_28022),
                                                                np.int64(m_28023),
                                                                np.int64(i32_res_28032),
                                                                np.int64(num_groups_35737),
                                                                np.int64(segment_sizze_nonzzero_44583),
                                                                defunc_4_map_res_mem_43335,
                                                                mem_43389,
                                                                mem_43392)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35690_var,
                                       ((np.long(num_groups_35737) * np.long(segred_group_sizze_35736)),),
                                       (np.long(segred_group_sizze_35736),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44604 = sdiv_up64(num_groups_35737,
                                               smax64(np.int64(1), m_28023))
          elements_per_thread_44605 = sdiv_up64(i32_res_28032,
                                                (segred_group_sizze_35736 * groups_per_segment_44604))
          virt_num_groups_44606 = (groups_per_segment_44604 * m_28023)
          num_threads_44607 = (num_groups_35737 * segred_group_sizze_35736)
          threads_per_segment_44608 = (groups_per_segment_44604 * segred_group_sizze_35736)
          group_res_arr_mem_44609 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35736 * virt_num_groups_44606)),
                                                 "group_res_arr_mem_44609")
          mainMagnitudezicounter_mem_44611 = self.mainMagnitudezicounter_mem_44611
          if ((1 * (np.long(num_groups_35737) * np.long(segred_group_sizze_35736))) != 0):
            self.mainMagnitudezisegred_large_35690_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35736))),
                                                                np.int64(N_28022),
                                                                np.int64(i32_res_28032),
                                                                np.int64(num_groups_35737),
                                                                np.int64(groups_per_segment_44604),
                                                                np.int64(elements_per_thread_44605),
                                                                np.int64(virt_num_groups_44606),
                                                                np.int64(threads_per_segment_44608),
                                                                defunc_4_map_res_mem_43335,
                                                                mem_43389,
                                                                mem_43392,
                                                                group_res_arr_mem_44609,
                                                                mainMagnitudezicounter_mem_44611)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35690_var,
                                       ((np.long(num_groups_35737) * np.long(segred_group_sizze_35736)),),
                                       (np.long(segred_group_sizze_35736),))
            if synchronous:
              sync(self)
        segmap_usable_groups_35753 = sdiv_up64(m_28023,
                                               segmap_group_sizze_35752)
        mem_43395 = opencl_alloc(self, bytes_43309, "mem_43395")
        mem_43397 = opencl_alloc(self, bytes_43309, "mem_43397")
        if ((1 * (np.long(segmap_usable_groups_35753) * np.long(segmap_group_sizze_35752))) != 0):
          self.mainMagnitudezisegmap_35667_var.set_args(self.global_failure,
                                                        np.int64(m_28023),
                                                        np.float32(hfrac_28028),
                                                        np.int32(k2p2_28034),
                                                        mem_43389, mem_43392,
                                                        mem_43395, mem_43397)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_35667_var,
                                     ((np.long(segmap_usable_groups_35753) * np.long(segmap_group_sizze_35752)),),
                                     (np.long(segmap_group_sizze_35752),))
          if synchronous:
            sync(self)
        mem_43392 = None
        defunc_3_map_res_mem_43398 = mem_43395
        defunc_3_map_res_mem_43399 = mem_43389
        defunc_3_map_res_mem_43400 = mem_43397
      defunc_3_map_res_mem_43401 = defunc_3_map_res_mem_43398
      defunc_3_map_res_mem_43402 = defunc_3_map_res_mem_43399
      defunc_3_map_res_mem_43403 = defunc_3_map_res_mem_43400
    segred_group_sizze_35773 = self.sizes["mainMagnitude.segred_group_size_35772"]
    max_num_groups_44650 = self.sizes["mainMagnitude.segred_num_groups_35774"]
    num_groups_35775 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28023,
                                                            segred_group_sizze_35773),
                                                  sext_i32_i64(max_num_groups_44650))))
    mem_43406 = opencl_alloc(self, np.int64(4), "mem_43406")
    mainMagnitudezicounter_mem_44651 = self.mainMagnitudezicounter_mem_44651
    group_res_arr_mem_44653 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_35773 * num_groups_35775)),
                                           "group_res_arr_mem_44653")
    num_threads_44655 = (num_groups_35775 * segred_group_sizze_35773)
    if ((1 * (np.long(num_groups_35775) * np.long(segred_group_sizze_35773))) != 0):
      self.mainMagnitudezisegred_nonseg_35780_var.set_args(self.global_failure,
                                                           cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35773))),
                                                           cl.LocalMemory(np.long(np.int32(1))),
                                                           np.int64(m_28023),
                                                           np.int64(num_groups_35775),
                                                           np.int64(num_threads_44655),
                                                           defunc_3_map_res_mem_43401,
                                                           mem_43406,
                                                           mainMagnitudezicounter_mem_44651,
                                                           group_res_arr_mem_44653)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegred_nonseg_35780_var,
                                 ((np.long(num_groups_35775) * np.long(segred_group_sizze_35773)),),
                                 (np.long(segred_group_sizze_35773),))
      if synchronous:
        sync(self)
    read_res_45052 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45052, mem_43406,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28388 = read_res_45052[0]
    mem_43406 = None
    i32_res_28393 = sext_i32_i64(defunc_2_reduce_comm_res_28388)
    bounds_invalid_upwards_28394 = slt64(i32_res_28393, np.int64(0))
    valid_28395 = not(bounds_invalid_upwards_28394)
    range_valid_c_28396 = True
    assert valid_28395, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:102:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:97:17-104:24\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_28393,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_35812 = (self.sizes["mainMagnitude.suff_outer_par_31"] <= m_28023)
    segmap_group_sizze_35835 = self.sizes["mainMagnitude.segmap_group_size_35816"]
    nest_sizze_35878 = (m_28023 * i32_res_28393)
    segred_group_sizze_35879 = self.sizes["mainMagnitude.segred_group_size_35856"]
    max_num_groups_44681 = self.sizes["mainMagnitude.segred_num_groups_35858"]
    num_groups_35880 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35878,
                                                            segred_group_sizze_35879),
                                                  sext_i32_i64(max_num_groups_44681))))
    bytes_43409 = (np.int64(4) * segmap_group_sizze_35835)
    local_memory_capacity_44752 = self.max_local_memory
    if (sle64(((bytes_43409 + srem64((np.int64(8) - srem64(bytes_43409,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43409 + srem64((np.int64(8) - srem64(bytes_43409,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44752)) and suff_outer_par_35812):
      segmap_usable_groups_35836 = sdiv_up64(m_28023, segmap_group_sizze_35835)
      num_whole_tiles_42268 = squot64(i32_res_28393, segmap_group_sizze_35835)
      residual_input_42367 = srem64(i32_res_28393, segmap_group_sizze_35835)
      cond_42368 = (residual_input_42367 == np.int64(0))
      mem_43432 = opencl_alloc(self, bytes_43309, "mem_43432")
      if ((1 * (np.long(segmap_usable_groups_35836) * np.long(segmap_group_sizze_35835))) != 0):
        self.mainMagnitudezisegmap_intragroup_42248_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43409)),
                                                                 cl.LocalMemory(np.long(bytes_43409)),
                                                                 np.int64(N_28022),
                                                                 np.int64(m_28023),
                                                                 np.int64(i32_res_28393),
                                                                 np.int64(num_whole_tiles_42268),
                                                                 np.int64(residual_input_42367),
                                                                 np.byte(cond_42368),
                                                                 defunc_4_map_res_mem_43335,
                                                                 defunc_3_map_res_mem_43401,
                                                                 defunc_3_map_res_mem_43402,
                                                                 mem_43432)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42248_var,
                                   ((np.long(segmap_usable_groups_35836) * np.long(segmap_group_sizze_35835)),),
                                   (np.long(segmap_group_sizze_35835),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43436 = mem_43432
    else:
      mem_43435 = opencl_alloc(self, bytes_43309, "mem_43435")
      if slt64((i32_res_28393 * np.int64(2)), segred_group_sizze_35879):
        segment_sizze_nonzzero_44692 = smax64(np.int64(1), i32_res_28393)
        num_threads_44693 = (num_groups_35880 * segred_group_sizze_35879)
        if ((1 * (np.long(num_groups_35880) * np.long(segred_group_sizze_35879))) != 0):
          self.mainMagnitudezisegred_small_35862_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35879))),
                                                              np.int64(N_28022),
                                                              np.int64(m_28023),
                                                              np.int64(i32_res_28393),
                                                              np.int64(num_groups_35880),
                                                              np.int64(segment_sizze_nonzzero_44692),
                                                              defunc_4_map_res_mem_43335,
                                                              defunc_3_map_res_mem_43401,
                                                              defunc_3_map_res_mem_43402,
                                                              mem_43435)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_35862_var,
                                     ((np.long(num_groups_35880) * np.long(segred_group_sizze_35879)),),
                                     (np.long(segred_group_sizze_35879),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44713 = sdiv_up64(num_groups_35880,
                                             smax64(np.int64(1), m_28023))
        elements_per_thread_44714 = sdiv_up64(i32_res_28393,
                                              (segred_group_sizze_35879 * groups_per_segment_44713))
        virt_num_groups_44715 = (groups_per_segment_44713 * m_28023)
        num_threads_44716 = (num_groups_35880 * segred_group_sizze_35879)
        threads_per_segment_44717 = (groups_per_segment_44713 * segred_group_sizze_35879)
        group_res_arr_mem_44718 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_35879 * virt_num_groups_44715)),
                                               "group_res_arr_mem_44718")
        mainMagnitudezicounter_mem_44720 = self.mainMagnitudezicounter_mem_44720
        if ((1 * (np.long(num_groups_35880) * np.long(segred_group_sizze_35879))) != 0):
          self.mainMagnitudezisegred_large_35862_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35879))),
                                                              np.int64(N_28022),
                                                              np.int64(i32_res_28393),
                                                              np.int64(num_groups_35880),
                                                              np.int64(groups_per_segment_44713),
                                                              np.int64(elements_per_thread_44714),
                                                              np.int64(virt_num_groups_44715),
                                                              np.int64(threads_per_segment_44717),
                                                              defunc_4_map_res_mem_43335,
                                                              defunc_3_map_res_mem_43401,
                                                              defunc_3_map_res_mem_43402,
                                                              mem_43435,
                                                              group_res_arr_mem_44718,
                                                              mainMagnitudezicounter_mem_44720)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_35862_var,
                                     ((np.long(num_groups_35880) * np.long(segred_group_sizze_35879)),),
                                     (np.long(segred_group_sizze_35879),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43436 = mem_43435
    iota32_arg_28418 = (N_28022 - i32_res_28032)
    bounds_invalid_upwards_28419 = slt64(iota32_arg_28418, np.int64(0))
    valid_28420 = not(bounds_invalid_upwards_28419)
    range_valid_c_28421 = True
    assert valid_28420, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:110:22-35\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:37\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28418,
                                                                                                                                                                                                                                      " is invalid."))
    x_28423 = (np.int32(1) + n_28026)
    i_28424 = (n_28026 - np.int32(1))
    i_28425 = sext_i32_i64(i_28424)
    x_28426 = sle64(np.int64(0), i_28425)
    y_28427 = slt64(i_28425, N_28022)
    bounds_check_28428 = (x_28426 and y_28427)
    index_certs_28429 = True
    assert bounds_check_28428, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:108:64-84\n   #1  bfastfinal.fut:106:15-110:36\n   #2  bfastfinal.fut:182:5-58\n   #3  bfastfinal.fut:177:1-183:37\n" % ("Index [",
                                                                                                                                                                                                                 i_28425,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28022,
                                                                                                                                                                                                                 "]."))
    read_res_45054 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45054, mappingindices_mem_42537,
                    device_offset=(np.long(i_28425) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28430 = read_res_45054[0]
    i32_res_28431 = sitofp_i32_f32(r32_arg_28430)
    range_valid_c_28432 = True
    assert valid_28420, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:120:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28418,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_35957 = self.sizes["mainMagnitude.segmap_group_size_35940"]
    segmap_usable_groups_35958 = sdiv_up64(iota32_arg_28418,
                                           segmap_group_sizze_35957)
    bytes_43438 = (np.int64(4) * iota32_arg_28418)
    mem_43439 = opencl_alloc(self, bytes_43438, "mem_43439")
    mem_43441 = opencl_alloc(self, bytes_43438, "mem_43441")
    if ((1 * (np.long(segmap_usable_groups_35958) * np.long(segmap_group_sizze_35957))) != 0):
      self.mainMagnitudezisegmap_35938_var.set_args(self.global_failure,
                                                    np.float32(lam_28029),
                                                    np.int64(iota32_arg_28418),
                                                    np.int32(x_28423),
                                                    np.float32(i32_res_28431),
                                                    mappingindices_mem_42537,
                                                    mem_43439, mem_43441)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_35938_var,
                                 ((np.long(segmap_usable_groups_35958) * np.long(segmap_group_sizze_35957)),),
                                 (np.long(segmap_group_sizze_35957),))
      if synchronous:
        sync(self)
    mem_43439 = None
    max_res_28448 = smax64(np.int64(1), iota32_arg_28418)
    bounds_invalid_upwards_28449 = slt64(max_res_28448, np.int64(1))
    distance_28450 = (max_res_28448 - np.int64(1))
    valid_28451 = not(bounds_invalid_upwards_28449)
    range_valid_c_28452 = True
    assert valid_28451, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:117:13-122:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:115:20-132:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28448,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    segmap_group_sizze_36377 = self.sizes["mainMagnitude.segmap_group_size_36370"]
    segmap_usable_groups_36378 = sdiv_up64(m_28023, segmap_group_sizze_36377)
    mem_43444 = opencl_alloc(self, bytes_43309, "mem_43444")
    if ((1 * (np.long(segmap_usable_groups_36378) * np.long(segmap_group_sizze_36377))) != 0):
      self.mainMagnitudezisegmap_36368_var.set_args(self.global_failure,
                                                    np.int64(m_28023),
                                                    defunc_4_map_res_mem_43334,
                                                    defunc_3_map_res_mem_43402,
                                                    mem_43444)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36368_var,
                                 ((np.long(segmap_usable_groups_36378) * np.long(segmap_group_sizze_36377)),),
                                 (np.long(segmap_group_sizze_36377),))
      if synchronous:
        sync(self)
    nest_sizze_36391 = (m_28023 * iota32_arg_28418)
    segmap_group_sizze_36392 = self.sizes["mainMagnitude.segmap_group_size_36313"]
    segmap_usable_groups_36393 = sdiv_up64(nest_sizze_36391,
                                           segmap_group_sizze_36392)
    bytes_43446 = (np.int64(4) * nest_sizze_36391)
    mem_43448 = opencl_alloc(self, bytes_43446, "mem_43448")
    if ((1 * (np.long(segmap_usable_groups_36393) * np.long(segmap_group_sizze_36392))) != 0):
      self.mainMagnitudezisegmap_36310_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(N_28022),
                                                    np.int64(m_28023),
                                                    np.int64(iota32_arg_28418),
                                                    defunc_4_map_res_mem_43335,
                                                    defunc_3_map_res_mem_43402,
                                                    mem_43444, mem_43448)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36310_var,
                                 ((np.long(segmap_usable_groups_36393) * np.long(segmap_group_sizze_36392)),),
                                 (np.long(segmap_group_sizze_36392),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_36421 = self.sizes["mainMagnitude.segmap_group_size_36191"]
    segmap_usable_groups_36422 = sdiv_up64(m_28023, segmap_group_sizze_36421)
    mem_43451 = opencl_alloc(self, bytes_43446, "mem_43451")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43451, np.int64(0),
                                                mem_43448, np.int64(0),
                                                np.int64(1), iota32_arg_28418,
                                                m_28023)
    mem_43448 = None
    mem_43482 = opencl_alloc(self, bytes_43309, "mem_43482")
    num_threads_43780 = (segmap_group_sizze_36421 * segmap_usable_groups_36422)
    total_sizze_43781 = (bytes_43438 * num_threads_43780)
    mem_43462 = opencl_alloc(self, total_sizze_43781, "mem_43462")
    if ((1 * (np.long(segmap_usable_groups_36422) * np.long(segmap_group_sizze_36421))) != 0):
      self.mainMagnitudezisegmap_36189_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(m_28023),
                                                    np.int64(iota32_arg_28418),
                                                    np.int64(distance_28450),
                                                    np.int64(segmap_usable_groups_36422),
                                                    defunc_4_map_res_mem_43334,
                                                    defunc_3_map_res_mem_43402,
                                                    mem_43444, mem_43451,
                                                    mem_43462, mem_43482)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36189_var,
                                 ((np.long(segmap_usable_groups_36422) * np.long(segmap_group_sizze_36421)),),
                                 (np.long(segmap_group_sizze_36421),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_43444 = None
    mem_43451 = None
    mem_43462 = None
    fits_36756 = sle64(iota32_arg_28418, max_group_sizze_34163)
    suff_intra_par_36754 = (self.sizes["mainMagnitude.suff_intra_par_37"] <= iota32_arg_28418)
    intra_suff_and_fits_36757 = (suff_intra_par_36754 and fits_36756)
    segmap_group_sizze_37030 = self.sizes["mainMagnitude.segmap_group_size_37010"]
    max_num_groups_44778 = self.sizes["mainMagnitude.segmap_num_groups_37012"]
    num_groups_37031 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28023,
                                                            segmap_group_sizze_37030),
                                                  sext_i32_i64(max_num_groups_44778))))
    segscan_group_sizze_37053 = self.sizes["mainMagnitude.segscan_group_size_36969"]
    max_num_groups_44779 = self.sizes["mainMagnitude.segscan_num_groups_36971"]
    num_groups_37054 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36391,
                                                            segscan_group_sizze_37053),
                                                  sext_i32_i64(max_num_groups_44779))))
    segred_group_sizze_37091 = self.sizes["mainMagnitude.segred_group_size_36915"]
    max_num_groups_44780 = self.sizes["mainMagnitude.segred_num_groups_36917"]
    num_groups_37092 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36391,
                                                            segred_group_sizze_37091),
                                                  sext_i32_i64(max_num_groups_44780))))
    segmap_group_sizze_37130 = self.sizes["mainMagnitude.segmap_group_size_36868"]
    local_memory_capacity_44973 = self.max_local_memory
    if (sle64(((((bytes_43438 + srem64((np.int64(8) - srem64(bytes_43438,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_28418) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_28418),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_28418) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28418),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_28418) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28418),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44973)) and intra_suff_and_fits_36757):
      mem_43489 = opencl_alloc(self, bytes_43309, "mem_43489")
      mem_43491 = opencl_alloc(self, bytes_43309, "mem_43491")
      if ((1 * (np.long(m_28023) * np.long(iota32_arg_28418))) != 0):
        self.mainMagnitudezisegmap_intragroup_36541_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28418))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28418))),
                                                                 cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28418))),
                                                                 cl.LocalMemory(np.long(bytes_43438)),
                                                                 np.int64(N_28022),
                                                                 np.int32(n_28026),
                                                                 np.int64(iota32_arg_28418),
                                                                 defunc_4_map_res_mem_43334,
                                                                 defunc_4_map_res_mem_43335,
                                                                 defunc_4_map_res_mem_43336,
                                                                 defunc_3_map_res_mem_43401,
                                                                 defunc_3_map_res_mem_43402,
                                                                 defunc_3_map_res_mem_43403,
                                                                 defunc_0_f_res_mem_43436,
                                                                 mem_43441,
                                                                 mem_43489,
                                                                 mem_43491)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_36541_var,
                                   ((np.long(m_28023) * np.long(iota32_arg_28418)),),
                                   (np.long(iota32_arg_28418),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43513 = mem_43489
      defunc_0_f_res_mem_43514 = mem_43491
    else:
      mem_43494 = opencl_alloc(self, bytes_43309, "mem_43494")
      mem_43496 = opencl_alloc(self, bytes_43309, "mem_43496")
      if ((1 * (np.long(num_groups_37031) * np.long(segmap_group_sizze_37030))) != 0):
        self.mainMagnitudezisegmap_37008_var.set_args(self.global_failure,
                                                      np.int64(m_28023),
                                                      np.int64(num_groups_37031),
                                                      defunc_4_map_res_mem_43334,
                                                      defunc_3_map_res_mem_43402,
                                                      defunc_3_map_res_mem_43403,
                                                      mem_43494, mem_43496)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37008_var,
                                   ((np.long(num_groups_37031) * np.long(segmap_group_sizze_37030)),),
                                   (np.long(segmap_group_sizze_37030),))
        if synchronous:
          sync(self)
      mem_43500 = opencl_alloc(self, bytes_43446, "mem_43500")
      if slt64(np.int64(0), (m_28023 * iota32_arg_28418)):
        stage1_max_num_groups_44814 = self.max_group_size
        stage1_num_groups_44815 = smin64(stage1_max_num_groups_44814,
                                         num_groups_37054)
        num_threads_44816 = sext_i64_i32((stage1_num_groups_44815 * segscan_group_sizze_37053))
        if ((1 * (np.long(stage1_num_groups_44815) * np.long(segscan_group_sizze_37053))) != 0):
          self.mainMagnitudeziscan_stage1_36975_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * segscan_group_sizze_37053)))),
                                                             np.int64(N_28022),
                                                             np.int64(m_28023),
                                                             np.int64(iota32_arg_28418),
                                                             np.int32(num_threads_44816),
                                                             defunc_4_map_res_mem_43335,
                                                             defunc_3_map_res_mem_43401,
                                                             defunc_3_map_res_mem_43402,
                                                             defunc_0_f_res_mem_43436,
                                                             mem_43496,
                                                             mem_43500)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_36975_var,
                                     ((np.long(stage1_num_groups_44815) * np.long(segscan_group_sizze_37053)),),
                                     (np.long(segscan_group_sizze_37053),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44815))) != 0):
          self.mainMagnitudeziscan_stage2_36975_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * stage1_num_groups_44815)))),
                                                             np.int64(m_28023),
                                                             np.int64(iota32_arg_28418),
                                                             np.int64(stage1_num_groups_44815),
                                                             np.int32(num_threads_44816),
                                                             mem_43500)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_36975_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44815)),),
                                     (np.long(stage1_num_groups_44815),))
          if synchronous:
            sync(self)
        required_groups_44858 = sext_i64_i32(sdiv_up64((m_28023 * iota32_arg_28418),
                                                       segscan_group_sizze_37053))
        if ((1 * (np.long(num_groups_37054) * np.long(segscan_group_sizze_37053))) != 0):
          self.mainMagnitudeziscan_stage3_36975_var.set_args(self.global_failure,
                                                             np.int64(m_28023),
                                                             np.int64(iota32_arg_28418),
                                                             np.int64(num_groups_37054),
                                                             np.int32(num_threads_44816),
                                                             np.int32(required_groups_44858),
                                                             mem_43500)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_36975_var,
                                     ((np.long(num_groups_37054) * np.long(segscan_group_sizze_37053)),),
                                     (np.long(segscan_group_sizze_37053),))
          if synchronous:
            sync(self)
      mem_43503 = opencl_alloc(self, m_28023, "mem_43503")
      mem_43505 = opencl_alloc(self, bytes_43309, "mem_43505")
      mem_43507 = opencl_alloc(self, bytes_43309, "mem_43507")
      if slt64((iota32_arg_28418 * np.int64(2)), segred_group_sizze_37091):
        segment_sizze_nonzzero_44870 = smax64(np.int64(1), iota32_arg_28418)
        num_threads_44871 = (num_groups_37092 * segred_group_sizze_37091)
        if ((1 * (np.long(num_groups_37092) * np.long(segred_group_sizze_37091))) != 0):
          self.mainMagnitudezisegred_small_36921_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37091))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37091))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37091))),
                                                              np.int64(m_28023),
                                                              np.int64(iota32_arg_28418),
                                                              np.int64(num_groups_37092),
                                                              np.int64(segment_sizze_nonzzero_44870),
                                                              mem_43441,
                                                              mem_43494,
                                                              mem_43496,
                                                              mem_43500,
                                                              mem_43503,
                                                              mem_43505,
                                                              mem_43507)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_36921_var,
                                     ((np.long(num_groups_37092) * np.long(segred_group_sizze_37091)),),
                                     (np.long(segred_group_sizze_37091),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44906 = sdiv_up64(num_groups_37092,
                                             smax64(np.int64(1), m_28023))
        elements_per_thread_44907 = sdiv_up64(iota32_arg_28418,
                                              (segred_group_sizze_37091 * groups_per_segment_44906))
        virt_num_groups_44908 = (groups_per_segment_44906 * m_28023)
        num_threads_44909 = (num_groups_37092 * segred_group_sizze_37091)
        threads_per_segment_44910 = (groups_per_segment_44906 * segred_group_sizze_37091)
        group_res_arr_mem_44911 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_37091 * virt_num_groups_44908)),
                                               "group_res_arr_mem_44911")
        group_res_arr_mem_44913 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37091 * virt_num_groups_44908)),
                                               "group_res_arr_mem_44913")
        group_res_arr_mem_44915 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37091 * virt_num_groups_44908)),
                                               "group_res_arr_mem_44915")
        mainMagnitudezicounter_mem_44917 = self.mainMagnitudezicounter_mem_44917
        if ((1 * (np.long(num_groups_37092) * np.long(segred_group_sizze_37091))) != 0):
          self.mainMagnitudezisegred_large_36921_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37091))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37091))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37091))),
                                                              np.int64(iota32_arg_28418),
                                                              np.int64(num_groups_37092),
                                                              np.int64(groups_per_segment_44906),
                                                              np.int64(elements_per_thread_44907),
                                                              np.int64(virt_num_groups_44908),
                                                              mem_43441,
                                                              mem_43494,
                                                              mem_43496,
                                                              mem_43500,
                                                              mem_43503,
                                                              mem_43505,
                                                              mem_43507,
                                                              group_res_arr_mem_44911,
                                                              group_res_arr_mem_44913,
                                                              group_res_arr_mem_44915,
                                                              mainMagnitudezicounter_mem_44917)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_36921_var,
                                     ((np.long(num_groups_37092) * np.long(segred_group_sizze_37091)),),
                                     (np.long(segred_group_sizze_37091),))
          if synchronous:
            sync(self)
      mem_43494 = None
      mem_43500 = None
      segmap_usable_groups_37131 = sdiv_up64(m_28023, segmap_group_sizze_37130)
      mem_43510 = opencl_alloc(self, bytes_43309, "mem_43510")
      mem_43512 = opencl_alloc(self, bytes_43309, "mem_43512")
      if ((1 * (np.long(segmap_usable_groups_37131) * np.long(segmap_group_sizze_37130))) != 0):
        self.mainMagnitudezisegmap_36866_var.set_args(self.global_failure,
                                                      np.int64(N_28022),
                                                      np.int64(m_28023),
                                                      np.int32(n_28026),
                                                      defunc_4_map_res_mem_43336,
                                                      defunc_3_map_res_mem_43402,
                                                      mem_43496, mem_43503,
                                                      mem_43505, mem_43507,
                                                      mem_43510, mem_43512)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36866_var,
                                   ((np.long(segmap_usable_groups_37131) * np.long(segmap_group_sizze_37130)),),
                                   (np.long(segmap_group_sizze_37130),))
        if synchronous:
          sync(self)
      mem_43496 = None
      mem_43503 = None
      mem_43505 = None
      mem_43507 = None
      defunc_0_f_res_mem_43513 = mem_43510
      defunc_0_f_res_mem_43514 = mem_43512
    defunc_4_map_res_mem_43335 = None
    defunc_4_map_res_mem_43336 = None
    defunc_3_map_res_mem_43401 = None
    defunc_3_map_res_mem_43402 = None
    defunc_3_map_res_mem_43403 = None
    defunc_0_f_res_mem_43436 = None
    mem_43441 = None
    out_mem_43833 = defunc_4_map_res_mem_43334
    out_mem_43834 = defunc_0_f_res_mem_43513
    out_mem_43835 = defunc_0_f_res_mem_43514
    out_mem_43836 = mem_43482
    return (out_mem_43833, out_mem_43834, out_mem_43835, out_mem_43836)
  def futhark_reshapeTransp(self, images_mem_42537, m_27346, n_27347, p_27348):
    flatten_to_arg_27350 = (n_27347 * p_27348)
    flat_dim_27351 = (n_27347 * p_27348)
    dim_match_27352 = (flatten_to_arg_27350 == flat_dim_27351)
    empty_or_match_cert_27353 = True
    assert dim_match_27352, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:127:3-20\n   #1  bfastfinal.fut:201:17-47\n   #2  bfastfinal.fut:200:1-202:23\n" % ("Value of (core language) shape (",
                                                                                                                                                                             flat_dim_27351,
                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                             flatten_to_arg_27350,
                                                                                                                                                                             "]t`."))
    binop_x_42539 = (m_27346 * flatten_to_arg_27350)
    bytes_42538 = (np.int64(4) * binop_x_42539)
    mem_42540 = opencl_alloc(self, bytes_42538, "mem_42540")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42540, np.int64(0),
                                                images_mem_42537, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_27350, m_27346)
    out_arrsizze_43834 = flatten_to_arg_27350
    out_mem_43833 = mem_42540
    return (out_mem_43833, out_arrsizze_43834)
  def convertToFloat(self, nan_value_27359_ext, images_mem_42537_ext):
    m_27356 = None
    n_27357 = None
    p_27358 = None
    try:
      nan_value_27359 = np.int16(ct.c_int16(nan_value_27359_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_27359_ext),
                                                                                                                            nan_value_27359_ext))
    try:
      assert ((type(images_mem_42537_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42537_ext.dtype == np.int16)), "Parameter has unexpected type"
      if (m_27356 == None):
        m_27356 = np.int64(images_mem_42537_ext.shape[0])
      else:
        assert (m_27356 == images_mem_42537_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27357 == None):
        n_27357 = np.int64(images_mem_42537_ext.shape[1])
      else:
        assert (n_27357 == images_mem_42537_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27358 == None):
        p_27358 = np.int64(images_mem_42537_ext.shape[2])
      else:
        assert (p_27358 == images_mem_42537_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42537_ext) == cl.array.Array):
        images_mem_42537 = images_mem_42537_ext.data
      else:
        images_mem_42537 = opencl_alloc(self,
                                        np.int64(images_mem_42537_ext.nbytes),
                                        "images_mem_42537")
        if (np.int64(images_mem_42537_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42537,
                          normaliseArray(images_mem_42537_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_42537_ext),
                                                                                                                            images_mem_42537_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      out_mem_43833 = self.futhark_convertToFloat(images_mem_42537, m_27356,
                                                  n_27357, p_27358,
                                                  nan_value_27359)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (m_27356, n_27357, p_27358), ct.c_float,
                          data=out_mem_43833)
  def main(self, trend_28662_ext, k_28663_ext, n_28664_ext, freq_28665_ext,
           hfrac_28666_ext, lam_28667_ext, mappingindices_mem_42537_ext,
           images_mem_42538_ext):
    N_28660 = None
    m_28661 = None
    N_28660 = None
    try:
      trend_28662 = np.int32(ct.c_int32(trend_28662_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28662_ext),
                                                                                                                            trend_28662_ext))
    try:
      k_28663 = np.int32(ct.c_int32(k_28663_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28663_ext),
                                                                                                                            k_28663_ext))
    try:
      n_28664 = np.int32(ct.c_int32(n_28664_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28664_ext),
                                                                                                                            n_28664_ext))
    try:
      freq_28665 = np.float32(ct.c_float(freq_28665_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28665_ext),
                                                                                                                            freq_28665_ext))
    try:
      hfrac_28666 = np.float32(ct.c_float(hfrac_28666_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28666_ext),
                                                                                                                            hfrac_28666_ext))
    try:
      lam_28667 = np.float32(ct.c_float(lam_28667_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28667_ext),
                                                                                                                            lam_28667_ext))
    try:
      assert ((type(mappingindices_mem_42537_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42537_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_28660 == None):
        N_28660 = np.int64(mappingindices_mem_42537_ext.shape[0])
      else:
        assert (N_28660 == mappingindices_mem_42537_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42537_ext) == cl.array.Array):
        mappingindices_mem_42537 = mappingindices_mem_42537_ext.data
      else:
        mappingindices_mem_42537 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42537_ext.nbytes),
                                                "mappingindices_mem_42537")
        if (np.int64(mappingindices_mem_42537_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42537,
                          normaliseArray(mappingindices_mem_42537_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42537_ext),
                                                                                                                            mappingindices_mem_42537_ext))
    try:
      assert ((type(images_mem_42538_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42538_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_28661 == None):
        m_28661 = np.int64(images_mem_42538_ext.shape[0])
      else:
        assert (m_28661 == images_mem_42538_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_28660 == None):
        N_28660 = np.int64(images_mem_42538_ext.shape[1])
      else:
        assert (N_28660 == images_mem_42538_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42538_ext) == cl.array.Array):
        images_mem_42538 = images_mem_42538_ext.data
      else:
        images_mem_42538 = opencl_alloc(self,
                                        np.int64(images_mem_42538_ext.nbytes),
                                        "images_mem_42538")
        if (np.int64(images_mem_42538_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42538,
                          normaliseArray(images_mem_42538_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42538_ext),
                                                                                                                            images_mem_42538_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43833, out_mem_43834,
       out_mem_43835) = self.futhark_main(mappingindices_mem_42537,
                                          images_mem_42538, N_28660, m_28661,
                                          trend_28662, k_28663, n_28664,
                                          freq_28665, hfrac_28666, lam_28667)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_28661,), ct.c_int32,
                           data=out_mem_43833), cl.array.Array(self.queue,
                                                               (m_28661,),
                                                               ct.c_int32,
                                                               data=out_mem_43834),
            cl.array.Array(self.queue, (m_28661,), ct.c_float,
                           data=out_mem_43835))
  def mainDetailed(self, trend_27372_ext, k_27373_ext, n_27374_ext,
                   freq_27375_ext, hfrac_27376_ext, lam_27377_ext,
                   mappingindices_mem_42537_ext, images_mem_42538_ext):
    N_27370 = None
    m_27371 = None
    N_27370 = None
    try:
      trend_27372 = np.int32(ct.c_int32(trend_27372_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27372_ext),
                                                                                                                            trend_27372_ext))
    try:
      k_27373 = np.int32(ct.c_int32(k_27373_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27373_ext),
                                                                                                                            k_27373_ext))
    try:
      n_27374 = np.int32(ct.c_int32(n_27374_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27374_ext),
                                                                                                                            n_27374_ext))
    try:
      freq_27375 = np.float32(ct.c_float(freq_27375_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27375_ext),
                                                                                                                            freq_27375_ext))
    try:
      hfrac_27376 = np.float32(ct.c_float(hfrac_27376_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27376_ext),
                                                                                                                            hfrac_27376_ext))
    try:
      lam_27377 = np.float32(ct.c_float(lam_27377_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27377_ext),
                                                                                                                            lam_27377_ext))
    try:
      assert ((type(mappingindices_mem_42537_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42537_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_27370 == None):
        N_27370 = np.int64(mappingindices_mem_42537_ext.shape[0])
      else:
        assert (N_27370 == mappingindices_mem_42537_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42537_ext) == cl.array.Array):
        mappingindices_mem_42537 = mappingindices_mem_42537_ext.data
      else:
        mappingindices_mem_42537 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42537_ext.nbytes),
                                                "mappingindices_mem_42537")
        if (np.int64(mappingindices_mem_42537_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42537,
                          normaliseArray(mappingindices_mem_42537_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42537_ext),
                                                                                                                            mappingindices_mem_42537_ext))
    try:
      assert ((type(images_mem_42538_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42538_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27371 == None):
        m_27371 = np.int64(images_mem_42538_ext.shape[0])
      else:
        assert (m_27371 == images_mem_42538_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_27370 == None):
        N_27370 = np.int64(images_mem_42538_ext.shape[1])
      else:
        assert (N_27370 == images_mem_42538_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42538_ext) == cl.array.Array):
        images_mem_42538 = images_mem_42538_ext.data
      else:
        images_mem_42538 = opencl_alloc(self,
                                        np.int64(images_mem_42538_ext.nbytes),
                                        "images_mem_42538")
        if (np.int64(images_mem_42538_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42538,
                          normaliseArray(images_mem_42538_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42538_ext),
                                                                                                                            images_mem_42538_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43833, out_mem_43834, out_mem_43835, out_mem_43836,
       out_mem_43837, out_arrsizze_43838, out_mem_43839, out_arrsizze_43840,
       out_mem_43841, out_arrsizze_43842, out_mem_43843, out_mem_43844,
       out_mem_43845, out_mem_43846,
       out_mem_43847) = self.futhark_mainDetailed(mappingindices_mem_42537,
                                                  images_mem_42538, N_27370,
                                                  m_27371, trend_27372, k_27373,
                                                  n_27374, freq_27375,
                                                  hfrac_27376, lam_27377)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_27371,), ct.c_float,
                           data=out_mem_43833), cl.array.Array(self.queue,
                                                               (m_27371,),
                                                               ct.c_int32,
                                                               data=out_mem_43834),
            cl.array.Array(self.queue, (m_27371,), ct.c_int32,
                           data=out_mem_43835), cl.array.Array(self.queue,
                                                               (m_27371,),
                                                               ct.c_float,
                                                               data=out_mem_43836),
            cl.array.Array(self.queue, (m_27371, out_arrsizze_43838),
                           ct.c_float, data=out_mem_43837),
            cl.array.Array(self.queue, (m_27371, out_arrsizze_43840),
                           ct.c_float, data=out_mem_43839),
            cl.array.Array(self.queue, (out_arrsizze_43842,), ct.c_float,
                           data=out_mem_43841), cl.array.Array(self.queue,
                                                               (m_27371,),
                                                               ct.c_int32,
                                                               data=out_mem_43843),
            cl.array.Array(self.queue, (m_27371,), ct.c_float,
                           data=out_mem_43844), cl.array.Array(self.queue,
                                                               (m_27371,),
                                                               ct.c_float,
                                                               data=out_mem_43845),
            cl.array.Array(self.queue, (m_27371, N_27370), ct.c_float,
                           data=out_mem_43846), cl.array.Array(self.queue,
                                                               (m_27371,
                                                                N_27370),
                                                               ct.c_float,
                                                               data=out_mem_43847))
  def mainMagnitude(self, trend_28024_ext, k_28025_ext, n_28026_ext,
                    freq_28027_ext, hfrac_28028_ext, lam_28029_ext,
                    mappingindices_mem_42537_ext, images_mem_42538_ext):
    N_28022 = None
    m_28023 = None
    N_28022 = None
    try:
      trend_28024 = np.int32(ct.c_int32(trend_28024_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28024_ext),
                                                                                                                            trend_28024_ext))
    try:
      k_28025 = np.int32(ct.c_int32(k_28025_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28025_ext),
                                                                                                                            k_28025_ext))
    try:
      n_28026 = np.int32(ct.c_int32(n_28026_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28026_ext),
                                                                                                                            n_28026_ext))
    try:
      freq_28027 = np.float32(ct.c_float(freq_28027_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28027_ext),
                                                                                                                            freq_28027_ext))
    try:
      hfrac_28028 = np.float32(ct.c_float(hfrac_28028_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28028_ext),
                                                                                                                            hfrac_28028_ext))
    try:
      lam_28029 = np.float32(ct.c_float(lam_28029_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28029_ext),
                                                                                                                            lam_28029_ext))
    try:
      assert ((type(mappingindices_mem_42537_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42537_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_28022 == None):
        N_28022 = np.int64(mappingindices_mem_42537_ext.shape[0])
      else:
        assert (N_28022 == mappingindices_mem_42537_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42537_ext) == cl.array.Array):
        mappingindices_mem_42537 = mappingindices_mem_42537_ext.data
      else:
        mappingindices_mem_42537 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42537_ext.nbytes),
                                                "mappingindices_mem_42537")
        if (np.int64(mappingindices_mem_42537_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42537,
                          normaliseArray(mappingindices_mem_42537_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42537_ext),
                                                                                                                            mappingindices_mem_42537_ext))
    try:
      assert ((type(images_mem_42538_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42538_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_28023 == None):
        m_28023 = np.int64(images_mem_42538_ext.shape[0])
      else:
        assert (m_28023 == images_mem_42538_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_28022 == None):
        N_28022 = np.int64(images_mem_42538_ext.shape[1])
      else:
        assert (N_28022 == images_mem_42538_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42538_ext) == cl.array.Array):
        images_mem_42538 = images_mem_42538_ext.data
      else:
        images_mem_42538 = opencl_alloc(self,
                                        np.int64(images_mem_42538_ext.nbytes),
                                        "images_mem_42538")
        if (np.int64(images_mem_42538_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42538,
                          normaliseArray(images_mem_42538_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42538_ext),
                                                                                                                            images_mem_42538_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43833, out_mem_43834, out_mem_43835,
       out_mem_43836) = self.futhark_mainMagnitude(mappingindices_mem_42537,
                                                   images_mem_42538, N_28022,
                                                   m_28023, trend_28024,
                                                   k_28025, n_28026, freq_28027,
                                                   hfrac_28028, lam_28029)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_28023,), ct.c_int32,
                           data=out_mem_43833), cl.array.Array(self.queue,
                                                               (m_28023,),
                                                               ct.c_int32,
                                                               data=out_mem_43834),
            cl.array.Array(self.queue, (m_28023,), ct.c_float,
                           data=out_mem_43835), cl.array.Array(self.queue,
                                                               (m_28023,),
                                                               ct.c_float,
                                                               data=out_mem_43836))
  def reshapeTransp(self, images_mem_42537_ext):
    m_27346 = None
    n_27347 = None
    p_27348 = None
    try:
      assert ((type(images_mem_42537_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42537_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27346 == None):
        m_27346 = np.int64(images_mem_42537_ext.shape[0])
      else:
        assert (m_27346 == images_mem_42537_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27347 == None):
        n_27347 = np.int64(images_mem_42537_ext.shape[1])
      else:
        assert (n_27347 == images_mem_42537_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27348 == None):
        p_27348 = np.int64(images_mem_42537_ext.shape[2])
      else:
        assert (p_27348 == images_mem_42537_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42537_ext) == cl.array.Array):
        images_mem_42537 = images_mem_42537_ext.data
      else:
        images_mem_42537 = opencl_alloc(self,
                                        np.int64(images_mem_42537_ext.nbytes),
                                        "images_mem_42537")
        if (np.int64(images_mem_42537_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42537,
                          normaliseArray(images_mem_42537_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_42537_ext),
                                                                                                                            images_mem_42537_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43833,
       out_arrsizze_43834) = self.futhark_reshapeTransp(images_mem_42537,
                                                        m_27346, n_27347,
                                                        p_27348)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_43834, m_27346), ct.c_float,
                          data=out_mem_43833)